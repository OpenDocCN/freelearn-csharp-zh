["```cs\nusing System;\nusing System.Collections.Generic;\n```", "```cs\nnamespace UnityEngine.XR.iOS\n```", "```cs\npublic class UnityARHitTestExample : MonoBehaviour\n{\n            public Transform m_HitTransform;\n            public AudioClip[] clips;\n            public AudioSource source;\n```", "```cs\nbool HitTestWithResultType (ARPoint point, ARHitTestResultType resultTypes)\n{\n    List hitResults = UnityARSessionNativeInterface.GetARSessionNativeInterface ().HitTest (point, resultTypes);\n```", "```cs\nif (hitResults.Count > 0) {\n    foreach (var hitResult in hitResults) {\n        Debug.Log (\"Got hit!\");\n        m_HitTransform.position = UnityARMatrixOps.GetPosition (hitResult.worldTransform);\n        m_HitTransform.rotation = UnityARMatrixOps.GetRotation (hitResult.worldTransform);\n        return true;\n    }\n}\nreturn false;\n}\n```", "```cs\nvoid Update () {\n/* Letâ€™s start the update method as it is probably the second most important aspect of the code.\n*/\n if (Input.touchCount > 0 && m_HitTransform != null)\n {\n var touch = Input.GetTouch(0);\n```", "```cs\nif (touch.phase == TouchPhase.Began)\n{\nvar screenPosition = Camera.main.ScreenToViewportPoint(touch.position);\n```", "```cs\nARPoint point = new ARPoint \n{\n    x = screenPosition.x,\n    y = screenPosition.y\n};\n```", "```cs\nARHitTestResultType[] resultTypes = {\n    ARHitTestResultType.ARHitTestResultTypeExistingPlaneUsingExtent,\n    ARHitTestResultType.ARHitTestResultTypeHorizontalPlane,\n    ARHitTestResultType.ARHitTestResultTypeFeaturePoint\n};\n```", "```cs\nforeach (ARHitTestResultType resultType in resultTypes)\n    if (HitTestWithResultType (point, resultType))\n      {\n          source.PlayOneShot(clips[Random.Range(0, clips.Length)]);\n          source.Stop();\n          return;\n      }\n```"]