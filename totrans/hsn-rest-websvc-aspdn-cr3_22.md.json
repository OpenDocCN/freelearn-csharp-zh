["```cs\naz login\n```", "```cs\naz group create --name handsOn --location westeurope\n```", "```cs\naz acr create --resource-group handsOn --name <container_registry_name> --sku Basic\n```", "```cs\n{\n    \"Logging\": {\n        \"LogLevel\": {\n            \"Default\": \"Warning\"\n        }\n    },\n    \"AllowedHosts\": \"*\",\n    \"DataSource\": {\n        \"ConnectionString\": \"Server=catalog db.westeurope\n        .azurecontainer.io;Database=master;User=sa;\n        Password=P@ssw0rd\"\n    },\n    \"ESB\": {\n        \"ConnectionString\": \"host=catalog-esb.westeurope.\n         azurecontainer.io;username=guest;password=guest;\",\n        \"EndPointName\": \"ItemSoldOut\"\n    },\n    \"CacheSettings\": {\n        \"ConnectionString\": \"catalog-cache.westeurope.\n         azurecontainer.io:6379,abortConnect=false\"\n    },\n    \"AuthenticationSettings\": {\n        \"Secret\": \"<secret>\",\n        \"ExpirationDays\" : \"7\"\n    }\n}\n```", "```cs\naz acr login --name <container_registry_name>\n```", "```cs\ndocker-compose build\n```", "```cs\ndocker images\nREPOSITORY TAG IMAGE ID CREATED SIZE\ncatalog_api latest 714e538b7da5 About a minute ago 618MB\n```", "```cs\ndocker tag catalog_api <container_registry_name>.azurecr.io/catalog_api:v1\ndocker push <container_registry_name>.azurecr.io/catalog_api:v1\n```", "```cs\naz container create --resource-group myResourceGroup \\\n --name cache-container \\\n --image redis:alpine \\\n --cpu 1 \\\n --memory 1 \\\n --dns-name-label cache-container \\\n --ports 6379 \n\n```", "```cs\naz group create --name handsOnContainerServices --location \"West Europe\"\n```", "```cs\naz acr credential show -n <container_registry_name>\n```", "```cs\n#!/bin/bash\n# Set the service group name\nexport resource_group=handsOnContainerServices\n# Set the registry address\nexport registry_address=<registry_address>\n# Set the registry username\nexport registry_username=<registry_username>\n# Set the registry password\nexport registry_password=<registry_password> # Set the api ASPNETCORE_ENVIRONMENT variables\nexport environment=Stage\n# Set the sql container name\nexport sql_name=catalog-db\n# Set the sql admin password\nexport sql_admin_pass=P@ssw0rd\n# Set the event service bus name\nexport esb_name=catalog-esb\n# Set the event service bus username\nexport rabbitmq_user=guest\n# Set the event service bus password\nexport rabbitmq_pass=guest\n# Set the cache container name\nexport cache_name=catalog-cache\n# Set the service name\nexport api_name=catalog-api\n\naz container create --resource-group ${resource_group} \\\n                    --location westeurope \\\n                    --name ${sql_name} \\\n                    --image microsoft/mssql-server-linux \\\n                    --cpu 1 \\\n                    --memory 1 \\\n                    --dns-name-label ${sql_name} \\\n                    --ports 1433 \\\n                    --environment-variables ACCEPT_EULA=Y SA_PASSWORD=${sql_admin_pass}\n\naz container create --resource-group ${resource_group} \\\n                    --location westeurope \\\n                    --name ${esb_name} \\\n                    --image rabbitmq:3-management \\\n                    --cpu 1 \\\n                    --memory 1 \\\n                    --dns-name-label ${esb_name} \\\n                    --ports 5672 \\\n                    --environment-variables RABBITMQ_DEFAULT_USER=${rabbitmq_user} RABBITMQ_DEFAULT_PASS=${rabbitmq_pass} \n\naz container create --resource-group ${resource_group} \\\n                    --name ${cache_name} \\\n                    --image redis:alpine \\\n                    --cpu 1 \\\n                    --memory 1 \\\n                    --dns-name-label ${cache_name} \\\n                    --ports 6379 \n\naz container create --resource-group ${resource_group} \\\n                    --location westeurope \\\n                    --name ${api_name} \\\n                    --image ${registry_address}/catalog_api:v1 \\\n                    --cpu 1 \\\n                    --memory 1 \\\n                    --dns-name-label ${api_name} \\\n                    --ports 80 \\\n                    --ip-address public \\\n                    --environment-variables ASPNETCORE_ENVIRONMENT=${environment} \\\n                    --registry-password=${registry_password} \\\n                    --registry-username=${registry_username}\n\n```", "```cs\nhttp://catalog-api.westeurope.azurecontainer.io/health\n```", "```cs\n#!/bin/bash\n\n# Set an admin login and password for your database\nexport user_admin=catalog_srv\nexport user_pass=P@ssw0rd\n# The logical server name has to be unique in the system\nexport server_name=storecatalogapi\nexport database_name=catalog\n# The resource group name\nexport resourceGroup=handsOnAppService\n# The ip address range that you want to allow to access your DB\nexport startip=0.0.0.0\nexport endip=0.0.0.0\n\n# Create a resource group\naz group create \\\n   --name ${resourceGroup} \\\n   --location westeurope\n\n# Create a logical server in the resource group\naz sql server create \\\n   --name ${server_name} \\\n   --resource-group ${resourceGroup} \\\n   --location westeurope  \\\n   --admin-user ${user_admin} \\\n   --admin-password ${user_pass}\n\n# Configure a firewall rule and open to local Azure services\naz sql server firewall-rule create \\\n   --resource-group ${resourceGroup} \\\n   --server ${server_name} \\\n   -n AllowYourIp \\\n   --start-ip-address ${startip} \\\n   --end-ip-address ${endip}\n\n# Create a database in the server \naz sql db create \\\n   --resource-group ${resourceGroup} \\\n   --server ${server_name} \\\n   --name ${database_name} \\\n   --service-objective S0 \\\n    --zone-redundant false\n```", "```cs\naz appservice plan create --name catalogServicePlan --resource-group <service_group_name> --sku FREE --is-linux\n\n```", "```cs\n#!/bin/bash\n# Set the service group name\nexport resource_group=handsOnAppService\n# Set the plan\nexport plan=catalogServicePlan\n# Set the service name\nexport app_service_name=catalog-srv\n# Set the api ASPNETCORE_ENVIRONMENT variables\nexport environment=StageAppServices\n# Defines the ACR registry URL\nexport registry_address=<registry_address>.azurecr.io\n\n# Create the app service\naz webapp create --resource-group ${resource_group} \\\n                             --plan ${plan} \\\n                             --name ${app_service_name} \\\n                             --deployment-container-image-name ${registry_address}/catalog_api:v1\n\n# Set the ASPNETCORE_ENVIRONMENT variable\naz webapp config appsettings set -g ${resource_group} \\\n                                 -n ${app_service_name} \\\n                                 --settings ASPNETCORE_ENVIRONMENT=${environment}\n```"]