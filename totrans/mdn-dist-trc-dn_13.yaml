- en: '13'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '13'
- en: Driving Change
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推动变革
- en: Throughout the book, we have talked about the technical side of observability
    and discussed how to trace calls, record metrics, report events, or use auto-collected
    telemetry provided by platforms and libraries. Here, we’re going to talk about
    the organizational aspects of implementing observability solutions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我们讨论了可观测性的技术方面，并讨论了如何追踪调用、记录指标、报告事件或使用平台和库提供的自动收集遥测数据。在这里，我们将讨论实施可观测性解决方案的组织方面。
- en: First, we’ll look into the benefits of and reasons for changing your existing
    solution and discuss associated costs. Then, we’ll go through the implementation
    stages and come up with a brief. Finally, we’ll see how to leverage observability
    to drive and improve the development process.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将探讨改变现有解决方案的好处和原因，并讨论相关的成本。然后，我们将通过实施阶段并制定一个简要概述。最后，我们将看看如何利用可观测性来推动和改进开发过程。
- en: 'in this chapter, you’ll learn how to do the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习以下内容：
- en: Decide whether you need a better observability solution and which level is right
    for you
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 决定你是否需要一个更好的可观测性解决方案以及适合你的级别
- en: Develop an onboarding plan and start implementing it
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制定一个入职计划并开始实施
- en: Use observability to help with daily development tasks
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用可观测性帮助处理日常开发任务
- en: By the end of this chapter, you should be ready to propose an observability
    solution and onboarding plan for your organization.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你应该准备好为你的组织提出一个可观测性解决方案和入职计划。
- en: Understanding the importance of observability
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解可观测性的重要性
- en: If you’re reading this book, you’re probably at least entertaining the idea
    of improving the observability story of your application. Maybe it’s hard to understand
    how customers use your system or it takes a lot of time to understand what exactly
    went wrong when someone reports an issue. In the worst case, it takes a lot of
    time to just notice that the system is unhealthy and users are affected. Or, maybe
    you want to minimize such risks in your future projects.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在阅读这本书，你很可能至少在考虑改善你应用程序的可观测性故事。也许很难理解客户如何使用你的系统，或者当有人报告问题时，理解到底发生了什么可能需要花费很多时间。在最坏的情况下，可能需要花费很多时间才能注意到系统不健康并且用户受到影响。或者，也许你希望在未来项目中最小化此类风险。
- en: In any case, these pain points brought you here and they should guide you further
    to find the right observability level and approach for your system.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何情况下，这些痛点让你来到这里，它们应该指导你进一步找到适合你系统的正确可观测性级别和方法。
- en: Even if we clearly see the problem and how it can be solved with better observability,
    we usually still need to get other people working on the system onboard with this
    vision. Astoundingly, they might have quite different feelings about the same
    problems and might not consider them worthy of solving.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 即使我们可以清楚地看到问题以及如何通过更好的可观测性来解决它，我们通常仍然需要让其他正在系统上工作的人接受这个愿景。令人惊讶的是，他们可能对同样的问题有不同的看法，并且可能认为它们不值得解决。
- en: 'Let me share a few common points I have heard arguing that a problem is not
    important:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我分享一些我听到的常见观点，认为问题并不重要：
- en: When a customer reports an issue, we can ask for a timestamp and find operations
    at that time by customer identifier. Then we can find any suspicious logs, get
    the request ID, and then find correlated logs on other services.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当客户报告问题时，我们可以要求提供时间戳，并通过客户标识符找到当时的服务操作。然后我们可以找到任何可疑的日志，获取请求ID，然后在其他服务上找到相关的日志。
- en: When we see an issue in production, we open related dashboards and start visually
    correlating metrics until we can guess what’s broken and then mitigate it. We
    have experts and an excellent set of runbooks for typical issues.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我们在生产中看到问题时，我们会打开相关的仪表板，并开始直观地关联指标，直到我们可以猜测出什么出了问题，然后减轻它。我们有一支专家团队和一套优秀的运行手册来处理典型问题。
- en: We can do a user study or customer research to get extensive information on
    how people use the system.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以进行用户研究或客户研究，以获取有关人们如何使用系统的广泛信息。
- en: We ask customers to enable verbose logs and reproduce the problem, then send
    us logs that we’ll parse based on our expert knowledge of the system.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们要求客户启用详细日志并重现问题，然后将日志发送给我们，我们将根据我们对系统的专业知识来解析这些日志。
- en: Note
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Each of these approaches is totally valid. They *already* solve the problem,
    your team *already* knows how to use them, and some of them are still necessary
    and quite useful even with perfect observability solutions in place.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法都是完全有效的。它们*已经*解决了问题，你的团队*已经*知道如何使用它们，而且其中一些即使在完美的可观测性解决方案中也是必要的并且非常有用。
- en: So, essentially, when we consider the approach to observability, we need to
    break the status quo and convince ourselves and our organization that it’s worth
    it. To achieve this, we first need to clearly outline the pain points and understand
    the cost of keeping things as they are.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，本质上，当我们考虑观察力的方法时，我们需要打破现状，并说服自己和我们的组织，这是值得的。为了实现这一点，我们首先需要清楚地概述痛点并了解保持现状的成本。
- en: The cost of insufficient observability
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 观察力不足的成本
- en: Your organization might already have some common incident metrics in place that
    we can rely on, such as **MTTM** (**mean time to mitigate**), **MTTR** (**mean
    time to recover**), **MTBF** (**mean time between failures**), or others. They
    are somewhat subjective and depend on what qualifies as an incident, or what recovery
    means, but roughly show how fast we can investigate incidents and how frequently
    they happen.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 您的组织可能已经建立了一些常见的指标来衡量事件，我们可以依赖这些指标，例如**MTTM**（平均缓解时间），**MTTR**（平均恢复时间），**MTBF**（平均故障间隔时间），或其他指标。它们在一定程度上是主观的，取决于什么构成事件，或者恢复意味着什么，但大致显示了我们可以多快地调查事件以及它们发生的频率。
- en: If incidents take a lot of time to resolve and happen frequently, it’s likely
    that our organization cares deeply about them and would be interested in improving
    the situation.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果事件需要花费大量时间来解决并且频繁发生，那么很可能我们的组织对这些事件非常关心，并且有兴趣改善这种情况。
- en: Ironically, we need at least some level of observability to notice there is
    an incident and to measure how long it takes to resolve. If we don’t have even
    this in place, we can start to manually track when things get broken and how long
    it takes us to discover and resolve issues. However subjective it is, it’s better
    than nothing.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 具有讽刺意味的是，我们需要至少达到一定程度的观察力才能注意到事件的发生并测量解决事件所需的时间。如果我们连这一点都没有，我们可以开始手动跟踪事情何时出错以及我们花费多少时间来发现和解决问题。尽管它可能很主观，但总比没有好。
- en: 'Some things rarely appear in such metrics directly: how bad is your on-call
    experience? How much time does onboarding take before someone can be on-call independently?
    How many issues end up closed with something such as “cannot reproduce,” “not
    enough information,” “probably a network or hardware error”; get lost in ping-pong
    between teams; or get moved to backlogs and never resolved?'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有些事情并没有直接出现在这些指标中：您的值班体验有多糟糕？在某人能够独立值班之前，入职需要花费多少时间？有多少问题最终以“无法重现”、“信息不足”、“可能是网络或硬件错误”等方式关闭；在团队之间打乒乓球；或者被移至待办事项列表中，永远无法解决？
- en: It should be feasible to measure some of such things. For example, we can label
    issues that can’t be investigated further due to a lack of telemetry. If they
    represent a significant portion of your bugs, it’s something worth improving.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 测量一些这样的东西应该是可行的。例如，我们可以标记由于缺乏遥测而无法进一步调查的问题。如果这些问题代表了您错误报告的很大一部分，那么这值得改进。
- en: As a team, you can also do an experiment for a week or two to roughly measure
    the time spent investigating issues. How much time does it take to investigate
    when there is enough data? Or, how much time is wasted investigating issues and
    meeting a dead end due to a lack of telemetry or finding a trivial transient network
    issue?
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 作为团队，你们还可以进行一周或两周的实验，大致测量调查问题所花费的时间。当有足够的数据时，调查需要花费多少时间？或者，由于缺乏遥测或发现微不足道的短暂网络问题，调查问题并遇到死胡同浪费了多少时间？
- en: By minimizing the time necessary to find the root cause of an issue, we improve
    the user experience. We notice incidents earlier and resolve them faster. We also
    improve our work-life balance and focus on creative work instead of grepping megabytes
    of logs.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 通过最小化找到问题根本原因所需的时间，我们提高了用户体验。我们更早地注意到事件并更快地解决它们。我们还改善了我们的工作与生活平衡，并专注于创造性工作，而不是在日志中搜索兆字节的日志。
- en: Note
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: There could be other data, such as business analytics, support stats, public
    reviews, or anything else, showing that a noticeable number of users are leaving
    us because of unresolved technical issues. If you need to convince your organization
    to invest in observability, finding such data and showing how a better observability
    story can improve things could be a good way to approach it.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 可能还有其他数据，例如业务分析、支持统计、公开评论或其他任何东西，表明由于未解决的技术问题，有显著数量的用户正在离开我们。如果您需要说服您的组织投资于观察力，找到这样的数据并展示更好的观察力故事如何改善情况，这可能是一个好的方法。
- en: So, the first step is to understand whether current tools and processes are
    effective and have a rough understanding of how better observability could improve
    things. The next step is to understand the cost of the solution.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，第一步是了解当前的工具和流程是否有效，并对更好的可观察性如何改善事物有一个大致的了解。下一步是了解解决方案的成本。
- en: The cost of an observability solution
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可观察性解决方案的成本
- en: 'We can roughly break down the costs into two groups: implementation and telemetry
    backend costs.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将成本大致分为两组：实施和遥测后端成本。
- en: We need to add instrumentation, tune and customize telemetry collection, learn
    how to use new tools, create alerts and dashboards, and build new processes around
    them. When onboarding a mature and stable system, we should also consider risks
    – we might break something and temporarily make it less reliable.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要添加仪表，调整和定制遥测收集，学习如何使用新工具，创建警报和仪表板，并围绕它们建立新的流程。当引入一个成熟且稳定的系统时，我们还应该考虑风险——我们可能会破坏某些东西，使其暂时变得不太可靠。
- en: As we discussed in [*Chapter 9*](B19423_09.xhtml#_idTextAnchor148), *Best Practices*,
    we can always choose the level of detail and amount of customization to help us
    keep the costs within the given budget.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们在[*第9章*](B19423_09.xhtml#_idTextAnchor148)“最佳实践”中讨论的那样，我们总是可以选择详细程度和定制化程度，以帮助我们控制成本在预算范围内。
- en: The minimalistic approach would be to start with network-level auto-instrumentation
    for actively developed services and then add context, customizations, and manual
    instrumentation as we go.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 最小化方法是从网络级别的自动仪表化开始，为积极开发的服务添加上下文、定制和手动仪表化。
- en: By using OpenTelemetry and shared instrumentation libraries, we can also rely
    on vendors to provide common visualizations, alerts, dashboards, queries, and
    analysis for typical technologies. As a result, it’s almost free to get started.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用OpenTelemetry和共享仪表化库，我们还可以依赖供应商为我们提供常见的可视化、警报、仪表板、查询和分析，对于典型技术来说，几乎可以免费开始。
- en: Telemetry backend
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 遥测后端
- en: We can host the observability stack ourselves or use one of the available platforms.
    Either way, there will be recurring costs associated with using the solution.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以自己托管可观察性堆栈或使用可用的平台之一。无论如何，使用该解决方案都会产生相关的持续成本。
- en: These costs depend on telemetry volume, retention period, the number of services
    and instances, and many other factors, including the support plan.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这些成本取决于遥测量、保留期、服务和服务实例的数量以及许多其他因素，包括支持计划。
- en: 'Throughout the book, we have discussed how to optimize telemetry collection
    while keeping the system observable enough for our needs: traces can be sampled,
    metrics should have low cardinality, and events and logs can be sampled too or
    kept in cold but indexed storage.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我们讨论了如何在保持系统足够可观察以满足我们需求的同时优化遥测收集：跟踪可以采样，指标应该具有低基数，事件和日志也可以采样或保存在冷存储但已索引的存储中。
- en: It’s a good idea to try a few different backends – luckily, many platforms have
    a free tier or trial period and, most importantly, you can instrument the system
    once with OpenTelemetry and pump data into multiple backends to compare the experience
    and get an idea of what the cost of using them would look like. Once you start
    relying on a specific backend for alerts or daily tasks, it will be more difficult
    to switch between vendors.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试几个不同的后端是一个好主意——幸运的是，许多平台都有免费层或试用期，最重要的是，你可以使用OpenTelemetry一次性对系统进行仪表化，并将数据泵入多个后端以比较体验，并了解使用它们的成本。一旦你开始依赖特定的后端进行警报或日常任务，切换供应商就会变得更加困难。
- en: During this experiment, you will also get a better understanding of the necessary
    data retention period, sampling rate, and other parameters, and will be able to
    pick them along with the vendor.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实验中，你还将更好地理解必要的数据保留期、采样率以及其他参数，并将能够与供应商一起选择它们。
- en: Note
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When running a modern cloud application under scale, it’s not possible to operate
    it without an observability solution, so it’s not a question of whether you need
    one but rather how many details you need to collect and which observability vendor
    out there works best for your system and budget.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当在规模下运行现代云应用时，没有可观察性解决方案是无法操作的，因此问题不在于你是否需要它，而在于你需要收集多少细节，以及哪个可观察性供应商最适合你的系统和预算。
- en: Essentially, we can start small and incrementally tune collection to add or
    remove details, while keeping it within a reasonable budget.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我们可以从小处着手，逐步调整收集以添加或删除细节，同时保持它在合理的预算内。
- en: We should also define what success means – it could be an MTTR improvement,
    subjective user experience, on-call engineer happiness, anything else that matters
    for your organization, or any combination of these.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还应该定义成功意味着什么——它可能是一个 MTTR 改善，主观的用户体验，值班工程师的满意度，对你组织来说任何其他重要的事情，或者这些的组合。
- en: Let’s now talk more about the implementation details and try to make this journey
    less painful.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来更多地讨论实施细节，并尝试让这次旅程不那么痛苦。
- en: The onboarding process
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入门流程
- en: The need for distributed tracing and visibility of all parts of the system comes
    from the complexity of modern applications. For example, we need to know how a
    serverless environment interacts with cloud storage to debug configuration issues
    or optimize performance. Or, maybe we want to know why certain requests fail in
    the downstream service without asking someone to help.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 系统各部分分布式跟踪和可见性的需求源于现代应用的复杂性。例如，我们需要知道无服务器环境如何与云存储交互，以便调试配置问题或优化性能。或者，我们可能想知道为什么某些请求在下游服务中失败，而不需要别人帮忙。
- en: To make the most of distributed tracing, we have to onboard the whole system
    (or at least a significant part of it), making sure all services create correlated
    and coherent telemetry, write it to a place where different teams can access it,
    and reuse the same tooling to do analysis.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 为了充分利用分布式跟踪，我们必须将整个系统（或至少其重要部分）纳入，确保所有服务创建相关且一致的遥测数据，将其写入不同团队可以访问的地方，并重用相同的工具进行分析。
- en: So, implementing an observability solution is an organization-wide effort, and
    it makes sense to start with a pilot project instrumenting a small part of the
    system. Let’s outline its scope and goals.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，实施可观察性解决方案是一个组织范围内的努力，从对系统一小部分进行仪表化的试点项目开始是有意义的。让我们概述其范围和目标。
- en: The pilot phase
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 试点阶段
- en: The goal of this project is to get hands-on experience with observability, discover
    any significant technical or process issues early, and better understand the scope
    and effort needed for the rest of the system.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目的目标是获得对可观察性的实际经验，尽早发现任何重大的技术或流程问题，并更好地理解整个系统的范围和所需的工作量。
- en: 'We’ll need a few (at least two) services to start instrumenting:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要几个（至少两个）服务来开始仪表化：
- en: That are in active development
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正在积极开发中
- en: That interact with each other
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 互相交互
- en: That have no (or few) internal dependencies except on each other
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有或只有很少的内部依赖，除了相互之间
- en: That have teams working on them in close contact
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有团队在紧密合作地工作
- en: 'From the technical side, we’ll use this phase to make the following decisions:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术角度来看，我们将利用这个阶段做出以下决定：
- en: '**Instrumentation SDKs**: I hope I convinced you to use .NET platform capabilities
    and OpenTelemetry, but you probably need to decide what to do with existing instrumentation
    code and tooling.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仪表化 SDK**：我希望我已经说服你使用 .NET 平台功能和 OpenTelemetry，但你可能需要决定如何处理现有的仪表化代码和工具。'
- en: '**Context propagation standards**: Using W3C Trace Context would be a good
    start. We may also need to decide whether and how to propagate baggage, or how
    to pass context over non-HTTP/proprietary protocols.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**上下文传播标准**：使用 W3C Trace Context 是一个好的开始。我们可能还需要决定是否以及如何传播负载，或者如何通过非 HTTP/专有协议传递上下文。'
- en: '**Sampling strategy**: Rate-based, percentage-based, parent-based, tail-based
    – these are good things to decide early on and identify whether you need an OpenTelemetry
    collector or can rely on an observability vendor.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**采样策略**：基于速率、基于百分比、基于父级、基于尾部——这些都是早期决定的好事情，并确定你是否需要 OpenTelemetry 收集器或可以依赖可观察性供应商。'
- en: '**Which vendor to use and a migration plan from your current one**: We’ll discuss
    technical aspects and trade-offs when instrumenting existing systems in [*Chapter
    15*](B19423_15.xhtml#_idTextAnchor233), *Instrumenting* *Brownfield Applications*.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择哪个供应商以及从当前供应商迁移的计划**：在 [*第15章*](B19423_15.xhtml#_idTextAnchor233) 的 *仪表化*
    *现有应用程序* 中，我们将讨论仪表化现有系统时的技术方面和权衡。'
- en: By the end of the pilot phase, we should have a clear understanding of what
    onboarding takes, what the challenges are, and how we will solve them.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 到试点阶段结束时，我们应该清楚地了解入门需要什么，挑战是什么，以及我们将如何解决它们。
- en: We will also have a small part of the system instrumented – it’s a good time
    to check whether we see any improvement.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将对系统的一部分进行仪表化——这是一个检查是否看到任何改进的好时机。
- en: Tracking progress
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 跟踪进度
- en: In the perfect world, after instrumentation is deployed, we’d be able to resolve
    all incidents in no time and investigate all the tricky bugs we’ve hunted down
    for months. I wish that was the case.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在理想的世界里，在配置部署之后，我们能够立即解决所有事件，并调查我们几个月来一直在追踪的复杂错误。我希望情况是这样的。
- en: 'There are at least several challenges along the way:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个过程中至少有几个挑战：
- en: '**Change is hard**: People prefer to use tools they know well, especially when
    they’re dealing with incidents in production. It would be a good exercise to do
    the same investigation with the new observability solution after the incident
    is resolved and compare the experiences.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**改变是困难的**：人们更喜欢使用他们熟悉的工具，尤其是在处理生产中的事件时。在事件解决后，用新的可观察性解决方案进行相同的调查，并比较经验，这将是一个很好的练习。'
- en: It’s best to start playing with new tools at development time or when investigating
    low-priority failures. In any case, it takes time and practice to learn about
    and trust new tools.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最好在开发时间或调查低优先级故障时开始尝试新工具。无论如何，了解和信任新工具需要时间和实践。
- en: '**You’ll discover new issues**: Looking at traces or a service map for the
    first time, I always learn something new about my code. It’s common to discover
    calls to external systems you didn’t expect (for example, auth calls made under
    the hood), unnecessary network calls, wrong retry logic, calls that should run
    in parallel but run sequentially, and so on.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**你会发现新的问题**：第一次查看跟踪或服务图时，我总是能从我的代码中学到一些新东西。发现意外的外部系统调用（例如，在底层进行的身份验证调用）、不必要的网络调用、错误的重试逻辑、本应并行运行的调用却顺序执行，等等，这些都是常见的情况。'
- en: '**Basic auto-instrumentation is not sufficient**: Without application context
    or manual instrumentation for certain libraries and scenarios, our ability to
    find, understand, and aggregate related telemetry is limited.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基本的自动配置不足以满足需求**：没有应用程序上下文或对某些库和场景的手动配置，我们找到、理解和汇总相关遥测数据的能力受到限制。'
- en: It will take a few iterations to see an improvement – make sure to collect feedback
    and understand what’s working and what’s not.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 需要几次迭代才能看到改进——请确保收集反馈并了解哪些有效，哪些无效。
- en: It also takes time and dedication. Demos, success stories, shared case studies,
    and documentation on how to get started should create awareness and help people
    get curious and learn faster.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这也需要时间和奉献。演示、成功案例、共享案例研究和如何开始的文档应该提高人们的意识，并帮助他们更快地好奇和学习。
- en: Iterating
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 迭代
- en: 'So, after the initial instrumentation, we’re not quite ready to roll it out
    to the rest of the system. Here’re a few things to do first:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在初始配置之后，我们还没有完全准备好将其推广到整个系统中。首先需要做几件事情：
- en: '**Tune instrumentation libraries**: Remove verbose and noisy signals or enable
    useful attributes that are off by default. If some parts of your stack don’t have
    auto-instrumentation available, start writing your own.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**调整配置库**：移除冗长和嘈杂的信号或启用默认关闭的有用属性。如果您的堆栈中某些部分没有可用的自动配置，请开始编写自己的配置。'
- en: '**Add essential application context**: Finding common properties and standardizing
    attribute names or baggage keys across your organization will have a huge impact
    down the road. We’ll talk more about it in [*Chapter 14*](B19423_14.xhtml#_idTextAnchor220),
    *Creating Your* *Own Conventions*.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**添加必要的应用程序上下文**：找到共同属性并在整个组织中标准化属性名称或行李键将对未来产生巨大影响。我们将在[*第14章*](B19423_14.xhtml#_idTextAnchor220)中更多地讨论它，*创建您的*
    *自己的约定*。'
- en: '**Start building backend-specific tooling**: Alerts, dashboards, and workbooks
    will help us validate whether we have enough context and telemetry to run our
    system and migrate to the new solution.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开始构建特定于后端的工具**：警报、仪表板和工作簿将帮助我们验证我们是否有足够的上下文和遥测数据来运行我们的系统并迁移到新解决方案。'
- en: Note
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: By the end of this stage, you should be able to see positive outcomes. It probably
    will not yet have moved the needle for the whole system, and there might not be
    enough data for the services involved in the experiment, but you should at least
    see some success stories and be able to show examples of where the new solution
    shone.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 到这个阶段结束时，你应该能够看到积极的成果。可能还不足以对整个系统产生显著影响，并且可能没有足够的数据来支持实验中的服务，但至少你应该看到一些成功的案例，并能够展示新解决方案的亮点。
- en: If you see cases where the new observability story should have helped but has
    not, it is a good idea to investigate why and tune instrumentation further. While
    iterating, it’s also worth paying attention to backend costs and optimizing telemetry
    collection if you see the potential for a significant reduction without noticeable
    impact.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看到新可观察性故事应该有所帮助但并未帮助的情况，那么调查原因并进一步调整仪表化是一个好主意。在迭代过程中，还值得注意后端成本，并在看到潜在的重大减少而没有明显影响的情况下优化遥测收集。
- en: The goal here is to create a good enough instrumentation approach and any necessary
    tooling around it. We iterate fast and keep the number of participating services
    small so we can still change direction and make breaking changes.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的目标是创建一个足够好的仪表化方法及其周围必要的工具。我们快速迭代并保持参与服务的数量较小，这样我们仍然可以改变方向并做出破坏性更改。
- en: Once we have finalized all the decisions and implemented and validated them
    on a small part of the system, we should be able to rely on new observability
    solutions for most of the monitoring and debugging needs. Before we roll them
    out, we still need to document them and create reusable artifacts.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们完成了所有决策，并在系统的小部分上实施和验证了它们，我们就应该能够依赖新的可观察性解决方案来满足大部分的监控和调试需求。在我们推出它们之前，我们仍然需要记录它们并创建可重用的工件。
- en: Documenting and standardizing
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 记录和标准化。
- en: The main outcome of the pilot phase is clarity on how to make the rest of the
    system observable and the specific benefits it will bring.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 试点阶段的主要成果是明确如何使系统的其余部分可观察，以及它将带来的具体好处。
- en: 'To maximize the impact of this phase, we need to make it easier for other services
    to be onboarded. We can help them by doing the following:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 为了最大化这一阶段的影响，我们需要让其他服务更容易上线。我们可以通过以下方式帮助他们：
- en: Documenting new solutions and processes
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录新的解决方案和流程。
- en: Providing demos and starters showing how to use backends and configure them,
    and add alerts and dashboards
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供演示和入门指南，展示如何使用后端并对其进行配置，以及添加警报和仪表板。
- en: 'Producing common artifacts that include any customizations:'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成包含任何自定义的通用工件：
- en: Context propagators, samplers, or instrumentations
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上下文传播器、采样器或仪表化。
- en: Attribute names or helpers that efficiently populate them
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 属性名称或高效填充它们的辅助工具。
- en: Starter packs that bring all OpenTelemetry dependencies and enable telemetry
    collection in a uniform manner
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带来所有OpenTelemetry依赖项的入门包，并统一启用遥测收集。
- en: Common configuration options
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通用配置选项。
- en: Finally, we’re ready to instrument and onboard the rest of the system. It will
    probably take some time to align attribute names, configuration, or backend plans.
    We also need to keep tracking progress toward original goals and apply necessary
    changes when things don’t work. Let’s talk about a few things that can slow us
    down.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们准备好对系统的其余部分进行仪表化和上线。可能需要一些时间来对齐属性名称、配置或后端计划。我们还需要继续跟踪向原始目标的进展，并在事情不顺利时应用必要的更改。让我们谈谈可能让我们放慢脚步的一些事情。
- en: Avoiding pitfalls
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 避免陷阱。
- en: 'The challenge with distributed tracing and observability is that they’re most
    effective when a distributed application produces coherent signals: trace context
    is propagated, sampling algorithms are aligned to produce full traces, all signals
    use the same attribute names, and so on.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式跟踪和可观察性的挑战在于，它们在分布式应用程序产生一致的信号时最为有效：跟踪上下文被传播，采样算法对齐以生成完整跟踪，所有信号使用相同的属性名称，等等。
- en: While OpenTelemetry solves most of these concerns, it still relies on the application
    to bring all the pieces together and use coherent signals. It becomes a problem
    for huge organizations where one service deviating from the standard breaks the
    correlation for the rest of the system.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然OpenTelemetry解决了这些担忧中的大部分，但它仍然依赖于应用程序将所有部件组合在一起并使用一致的信号。对于大型组织来说，一个服务偏离标准就会破坏整个系统的相关性，这成为一个问题。
- en: 'Here are a few things to avoid when onboarding your system:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统上线时，以下是一些需要避免的事项：
- en: '**Starting too big**: If multiple teams work on instrumentation independently,
    they will inevitably develop different solutions optimized for their services.
    Aligning these solutions after onboarding is finalized would be a difficult project
    on its own. Each team would have an impression that things work for them, but
    end-to-end customer issues would still take months to resolve.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**起点过大**：如果多个团队独立进行仪表化工作，他们不可避免地会开发出针对其服务优化的不同解决方案。在上线后对解决方案进行对齐本身就是一个艰巨的项目。每个团队都会有这样的印象，即事情对他们来说都奏效，但端到端客户问题仍需数月才能解决。'
- en: '**Not sharing telemetry across the system**: When investigating issues or analyzing
    performance and usage, it’s beneficial to be able to see how other services process
    requests. Without doing so, we will end up in the same place where each cross-service
    problem involves some amount of ping-pong and problems are not resolved fast enough.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不在整个系统中共享遥测数据**：在调查问题或分析性能和用法时，能够看到其他服务如何处理请求是有益的。如果不这样做，我们最终会陷入每个跨服务问题都涉及一些ping-pong，并且问题不能快速得到解决的地方。'
- en: '**Not enforcing standards**: Inconsistent telemetry would make us come back
    to grepping logs and make customers and ourselves unhappy.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不强制执行标准**：不一致的遥测数据会使我们回到grep日志，并使客户和我们自己都不高兴。'
- en: '**Not using new tools and capabilities**: We talked about how migrating from
    familiar tooling is hard. We need to put enough effort into advocating, promoting,
    explaining, documenting, and improving things to make sure people use them. Sunsetting
    old tools, once new ones are more capable and fast, is one (sometimes unpopular)
    way to make sure everyone switches.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不使用新的工具和能力**：我们讨论了从熟悉的工具迁移是困难的。我们需要投入足够的努力来倡导、推广、解释、记录和改进事物，以确保人们使用它们。一旦新工具更强大且更快，淘汰旧工具（有时不受欢迎）是确保每个人都切换的一种方式。'
- en: '**Not using the observability stack at development or test time**: Investigating
    flaky tests is one of the cheapest ways to debug tricky issues. Traces can help
    a lot, so make sure tests send traces and logs by default and it’s super easy
    to enable tracing on dev machines.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不在开发或测试时使用可观测性堆栈**：调查不可靠的测试是调试棘手问题的最便宜方式之一。跟踪信息可以帮助很多，所以请确保测试默认发送跟踪信息和日志，并且启用跟踪在开发机器上非常简单。'
- en: '**Building things that are hard to use or not reliable**: While some friction
    is expected, we should make sure most of it happens during the pilot phase. If
    you decide to build your own observability stack based on OSS solutions, you should
    expect that certain things such as navigating across tools will be difficult and
    you’ll need to put a decent amount of effort into making them usable. Another
    big investment is building and maintaining reliable telemetry pipelines.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建难以使用或不可靠的事物**：虽然可以预期会有一些摩擦，但我们应确保大多数摩擦发生在试点阶段。如果你决定基于开源解决方案构建自己的可观测性堆栈，你应该预计某些事情，如跨工具导航，将会很困难，并且你需要投入相当多的努力来使它们可用。另一个大的投资是构建和维护可靠的遥测管道。'
- en: Hopefully, we can avoid most of these issues and onboard a significant part
    of the system onto our new observability stack.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 希望我们能避免这些问题中的大多数，并将系统的大部分功能上线到我们的新可观测性堆栈。
- en: As we continue onboarding, we should see improvement toward our initial goals
    and may need to adjust them. During the process, we probably learned a lot about
    our system and are now dealing with new challenges we could not see before due
    to a lack of observability.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们继续上线，我们应该看到向我们的初始目标迈进，可能需要调整它们。在这个过程中，我们可能对我们的系统有了很多了解，现在正在处理由于可观测性不足而之前无法看到的新的挑战。
- en: The journey does not end here. In the same way that we never stop writing tests,
    we should incorporate and leverage observability in day-to-day tasks.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 旅程不会在这里结束。就像我们永远不会停止编写测试一样，我们应该在日常任务中融入并利用可观测性。
- en: Continuous observability
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 持续可观测性
- en: Observability should not be added as an afterthought when service or feature
    development is over. When implementing a complex feature across several services
    or just adding a new external dependency, we can’t rely on users telling us when
    it’s broken. Tests usually don’t cover every aspect and don’t represent user behavior.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 可观测性不应该在服务或功能开发完成后才作为事后考虑。当在多个服务中实现复杂功能或添加新的外部依赖项时，我们不能依赖用户告诉我们何时出现故障。测试通常不会涵盖每个方面，也不能代表用户行为。
- en: If we don’t have a reliable telemetry signal, we can’t say whether the feature
    works or whether customers use it.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们没有可靠的遥测信号，我们就无法说该功能是否工作，或者客户是否使用它。
- en: Incorporating observability into the design process
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将可观测性融入设计过程
- en: 'Making sure we have telemetry in place is part of feature design work. The
    main questions the telemetry should answer are the following:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 确保我们有遥测数据是功能设计工作的一部分。遥测数据应该回答的主要问题是以下这些：
- en: Who uses this feature and how much?
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谁使用这个功能以及使用量有多大？
- en: Does it work? Does it break something else?
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是否工作？它是否破坏了其他东西？
- en: Does it work as expected? Does it improve things as expected?
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是否按预期工作？它是否按预期改进了事物？
- en: If we can rely on the existing telemetry to answer these questions, awesome!
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们可以依赖现有的遥测数据来回答这些问题，那就太棒了！
- en: We should design instrumentation in a way that covers multiple things at once.
    For example, when we switch from one external HTTP dependency to a new one, we
    can leverage existing auto-collected traces and metrics. A common processor that
    stamps application context on all spans will take care of traces from the new
    dependency as well.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该以一次覆盖多个内容的方式设计仪表化。例如，当我们从外部HTTP依赖项切换到新的依赖项时，我们可以利用现有的自动收集的跟踪和指标。一个常见的处理器会在所有跨度上打上应用程序上下文，从而处理新的依赖项的跟踪。
- en: If we use feature flags, we should make sure we record them on telemetry for
    operations that participate in an experiment. We can record them on events or
    spans, for example, following OpenTelemetry semantic conventions for feature flags
    available at [https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/feature-flags.md](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/feature-flags.md).
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用功能标志，我们应该确保记录它们在参与实验的操作的遥测中。例如，我们可以在事件或跨度上记录它们，遵循[https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/feature-flags.md](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/feature-flags.md)中提供的OpenTelemetry语义约定。
- en: In some cases, default telemetry is not sufficient and we need to add custom
    events, traces, metrics, or at least extra attributes. It’s rarely a good idea
    to limit instrumentation to a new log record unless we write it in a structured
    and aggregable way.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，默认遥测可能不足，我们需要添加自定义事件、跟踪、指标，或者至少额外的属性。除非我们以结构化和可聚合的方式编写，否则限制仪表化到新的日志记录通常不是一个好主意。
- en: Once a feature is proven useful and fully rolled out, we might want to remove
    this additional telemetry along with the feature flag. It’s a great approach if
    we’re sure it’s not necessary anymore. Cleaning up and iterating on instrumentation
    is another important aspect.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦一个功能被证明是有用的并且完全推广，我们可能希望移除这个额外的遥测以及功能标志。如果我们确信它不再必要，这是一个很好的方法。清理和迭代仪表化是另一个重要的方面。
- en: Housekeeping
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 清理工作
- en: As with any other code, instrumentation code degrades and becomes less useful
    when neglected.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 就像任何其他代码一样，当忽视时，仪表化代码会退化并变得不那么有用。
- en: Similar to the test code, any observability code we write is less reliable than
    application code – it’s also hard to notice when it reports something incorrect
    as there is no functional issue. So, validating it with testing or manual checks
    and fixing it in a timely manner is important.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 与测试代码类似，我们编写的任何可观察性代码都比应用程序代码不可靠——当它报告错误时也难以注意到，因为没有功能性问题。因此，通过测试或手动检查来验证它并及时修复它是很重要的。
- en: This is one of the reasons to use popular instrumentation libraries – they have
    been through excessive testing by other people. Keeping your instrumentation libraries
    up to date and sharing custom ones across the company (or open sourcing them)
    will result in better instrumentation quality.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用流行的仪表化库的一个原因——它们已经经过了其他人的过度测试。保持您的仪表化库更新，并在公司内部（或开源）共享自定义库，这将导致更好的仪表化质量。
- en: 'Another important part is to make small improvements as you notice issues:
    add missing events, spans, and attributes (don’t forget to check if there is a
    common one), structure and optimize logs, and adjust their verbosity.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要部分是在注意到问题时进行小的改进：添加缺失的事件、跨度属性（不要忘记检查是否有共同的属性），结构化和优化日志，并调整它们的详细程度。
- en: These changes might be risky. We might remove something that people rely on
    for alerting or analysis. There could be some additional guards in place that
    prevent it – code reviews, documentation, and tests, but it is rarely possible
    to account for everything, so be cautious when removing or renaming things.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这些更改可能会有风险。我们可能会移除人们用于警报或分析所依赖的内容。可能会有一些额外的防护措施来防止这种情况发生——代码审查、文档和测试，但很少可能考虑到所有情况，因此在删除或重命名内容时要谨慎。
- en: Another risk is adding something expensive or verbose that would either impact
    application availability, overwhelm telemetry pipelines, or significantly increase
    your observability bill. Paying attention to the dev and test telemetry and knowing
    what’s on the hot path should prevent obvious mistakes.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个风险是添加一些昂贵或冗长的内容，这可能会影响应用程序的可用性，压倒遥测管道，或者显著增加您的可观察性账单。关注开发和测试遥测以及了解热点路径应该可以防止明显的错误。
- en: Building reliable telemetry pipelines with rate-limiting should decrease the
    severity of such incidents when they make it to production.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 建立具有速率限制的可靠遥测管道可以在它们进入生产时降低此类事件的严重性。
- en: As you can see, observability code is not very different from any other piece
    of infrastructure. Implementing it starts with some research and experiments and
    works best when we tune and improve it along with our application.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，可观测性代码与其他任何基础设施代码并没有很大区别。实施它始于一些研究和实验，并且在我们与应用程序一起调整和改进时效果最佳。
- en: Summary
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed how to implement and roll out observability solutions
    in your organization. These efforts can be motivated and justified by the current
    monitoring infrastructure not being efficient in investigating and resolving customer
    issues.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了如何在您的组织中实施和推广可观测性解决方案。这些努力可以通过当前监控基础设施在调查和解决客户问题时效率不高来激发和证明其合理性。
- en: We discussed how we can rely on existing metrics or data to understand whether
    there is room for improvement and estimate the cost of inaction. Then we looked
    into common costs associated with implementing and running a modern observability
    solution – the easiest way to find out is to run a small experiment and compare
    different vendors.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了如何依靠现有的指标或数据来了解是否还有改进的空间，并估计不采取行动的成本。然后我们研究了实施和运行现代可观测性解决方案的常见成本——最简单的方法是运行一个小实验并比较不同的供应商。
- en: We explored how we can approach onboarding by starting with a pilot project
    on a small part of the system and iterating and validating results before we roll
    it out to the rest of the system. Finally, we discussed the importance of incorporating
    observability into daily tasks and evolving it along with the code.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们探讨了如何通过在一个系统的小部分上启动试点项目，并在推广到整个系统之前迭代和验证结果，来着手进行入职。最后，我们讨论了将可观测性融入日常任务并随着代码一起演化的重要性。
- en: This chapter should help you justify initial observability investments and gradually
    implement the solution across the system. In the next chapter, we’ll talk more
    about unifying telemetry collection and introducing your own standards.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 本章应有助于您证明初始可观测性投资的合理性，并逐步在整个系统中实施解决方案。在下一章中，我们将更多地讨论统一遥测收集和引入您自己的标准。
- en: Questions
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Should we look for a single backend for all telemetry signals or a combination
    of them optimized for individual telemetry signals?
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们应该寻找一个用于所有遥测信号的单一后端，还是寻找针对单个遥测信号优化的它们的组合？
- en: How would you approach standardizing baggage propagation and usage in your system?
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将如何处理在您的系统中标准化行李传播和使用的标准化？
- en: You’re adding a cache to the service. When would you add instrumentation? How
    would you approach it?
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您正在向服务中添加缓存。您何时会添加仪表？您将如何处理？
- en: Further reading
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '*Becoming a Rockstar SRE* by Jeremy Proffitt and Rod Anami'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*《成为摇滚明星SRE》*，作者：Jeremy Proffitt 和 Rod Anami'
