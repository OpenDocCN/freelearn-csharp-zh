["```cs\n    {\n      \"ConnectionStrings\": {\n        \"DefaultConnection\": \"Server=myServerAddress;\n          Database=myDataBase;User Id=myUsername;\n          Password=myPassword;\"\n      }\n    }\n    ```", "```cs\n    var builder = WebApplication.CreateBuilder(args);\n    builder.Services.AddRazorPages();\n    string connectionString = builder.Configuration\n      .GetConnectionString(\"DefaultConnection\");\n    builder.Services.AddDbContext<MyDbContext>(options =>\n      // options.UseSqlServer(connectionString));\n      var app = builder.Build();\n    if (app.Environment.IsDevelopment())\n    {\n        app.UseDeveloperExceptionPage();\n    }\n    app.UseStaticFiles();\n    app.UseRouting();\n    app.MapRazorPages();\n    app.Run();\n    ```", "```cs\nvar builder = WebApplication.CreateBuilder(args);\n // Add configuration from environment variables\nbuilder.Configuration.AddEnvironmentVariables();\n// Add configuration from command-line arguments\nbuilder.Configuration.AddCommandLine(args);\nvar app = builder.Build();\napp.Run();\n```", "```cs\nusing Microsoft.Extensions.Configuration;\npublic class CustomConfigurationSource :\n  IConfigurationSource\n{\n  public IConfigurationProvider Build\n    (IConfigurationBuilder builder)\n    {\n    return new CustomConfigurationProvider();\n  }\n}\n```", "```cs\nusing Microsoft.Extensions.Configuration;\nusing System.Collections.Generic;\npublic class CustomConfigurationProvider :\n  ConfigurationProvider\n{\n  public override void Load()\n  {\n    var data = new Dictionary<string, string>\n    {\n      { \"MyCustomSetting:Key1\", \"Value1\" },\n      { \" MyCustomSetting:Key2\", \"Value2\" }\n    };\n    Data = data;\n  }\n}\n```", "```cs\nbuilder.Configuration.Add(new CustomConfigurationSource());\n```", "```cs\nstring key1 = _configuration.GetValue<string>\n  (\" MyCustomSetting:Key1\");\nstring key2 = _configuration.GetValue<string>\n  (\" MyCustomSetting:Key2\");\n```", "```cs\n// Accessing settings directly using IConfiguration\nstring paymentGatewayURL =\n  _configuration[\"PaymentGatewayURL\"];\nstring apiKey = _configuration[\"APIKey\"];\nint timeout = _configuration.GetValue<int>(\"Timeout\");\nstring defaultCarrier = _configuration[\"DefaultCarrier\"];\ndecimal freeShippingThreshold =\n  _configuration.GetValue<decimal>\n  (\"FreeShippingThreshold\");\n```", "```cs\n{\n   \"PaymentGatewayURL\": \"https://payment.aspnetcore9.com\",\n   \"APIKey\": \"your-api-key\",\n   \"Timeout\": 30\n   \"DefaultCarrier\": \"UPS\",\n   \"FreeShippingThreshold\": 30.00\n}\n```", "```cs\npublic class PaymentSettings\n{\n    public string PaymentGatewayURL { get; set; }\n    public string APIKey { get; set; }\n    public int Timeout { get; set; }\n}\npublic class Shippingettings\n{\n    public string DefaultCarrier { get; set; }\n    public decimal FreeShippingThreshold { get; set; }\n}\n```", "```cs\n{\n     \"PaymentSettings\": {\n      \"PaymentGatewayURL\":\n        \"https://payment.aspnetcore9.com\",\n      \"APIKey\": \"your-api-key\",\n      \"Timeout\": 30\n    },\n    \"ShippingSettings\": {\n      \"DefaultCarrier\": \"UPS\",\n      \"FreeShippingThreshold\": 30.00\n    }\n}\n```", "```cs\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Hosting;\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.Configure<PaymentSettings>\n  (builder.Configuration.GetSection(\"PaymentSettings\"));\nbuilder.Services.Configure<ShippingSettings>\n  (builder.Configuration.GetSection(\"ShippingSettings\"));\nbuilder.Services.AddRazorPages();\nbuilder.Services.AddSingleton<EcommerceService>();\nvar app = builder.Build();\nif (app.Environment.IsDevelopment())\n{\n    app.UseDeveloperExceptionPage();\n}\napp.UseStaticFiles();\napp.UseRouting();\napp.MapRazorPages();\napp.Run();\n```", "```cs\npublic class OrderService\n{\n    private readonly PaymentSettings _paymentSettings;\n    private readonly IPaymentGateway _paymentGateway;\n    public OrderService(IOptions<PaymentSettings>\n      paymentSettings, IPaymentGateway paymentGateway)\n    {\n        _paymentettings = paymentSettings.Value;\n        _paymentGateway = paymentGateway;\n    }\n    public async Task<IOrder> Pay(decimal ammount)\n    {\n       var order = _paymentGateway(ammount,\n        _paymentSettings.ApiKey,\n        _paymentSettings.PaymentGatewayURL);\n    // ..\n    }\n}\n```", "```cs\n    mkdir DynamicConfiguration\n    ```", "```cs\n    cd DynamicConfiguration\n    ```", "```cs\n    dotnet new mvc -n DynamicConfiguration -o .\n    ```", "```cs\ncode .\n```", "```cs\nnamespace DynamicConfiguration.Options;\npublic class GlobalOptions\n{\n    public string Title { get; set; }\n}\n```", "```cs\npublic class HomeController : Controller\n{\n    private readonly ILogger<HomeController> _logger;\n    private readonly GlobalOptions _globalOptions;\n    public HomeController(ILogger<HomeController> logger,\n      IOptionsSnapshot<GlobalOptions> globalOptions)\n    {\n        _logger = logger;\n        _globalOptions = globalOptions.Value;\n    }\n    public IActionResult Index()\n    {\n        ViewData[\"Title\"] = _globalOptions.Title;\n        return View();\n    }\n    public IActionResult Privacy()\n    {\n        return View();\n    }\n    [ResponseCache(Duration = 0,\n      Location = ResponseCacheLocation.None,\n      NoStore = true)]\n    public IActionResult Error()\n    {\n        return View(new ErrorViewModel {\n          RequestId = Activity.Current?.Id ??\n          HttpContext.TraceIdentifier });\n    }\n}\n```", "```cs\n<div class=\"text-center\">\n<h1 class=\"display-4\">Welcome @ViewData[\"Title\"]</h1>\n<p>Learn about <a\n  href=\"https://learn.microsoft.com/aspnet/core\">\n  building Web apps with ASP.NET Core</a>.</p>\n</div>\n```", "```cs\ndotnet add package Microsoft.Azure.AppConfiguration.AspNetCore\n```", "```cs\n    dotnet user-secrets init\n    dotnet user-secrets set ConnectionStrings:AppConfig \"<your_connection_string>\"\n    ```", "```cs\nusing Microsoft.Extensions.Configuration\n  .AzureAppConfiguration;\nvar builder = WebApplication.CreateBuilder(args);\nBuilder.Services.AddAzureAppConfiguration();\nvar connectionString = builder.Configuration\n  .GetConnectionString(\"AppConfig\");\nbuilder.Configuration.AddAzureAppConfiguration(options =>\n  {\n    options.Connect(connectionString)\n    .Select(\"DynamicConfiguration:*\", LabelFilter.Null)\n    .ConfigureRefresh(refreshOptions =>\n    refreshOptions.Register(\"DynamicConfiguration:\n      Sentinel\", refreshAll: true));\n  });\nbuilder.Services.Configure<GlobalOptions>\n  (builder.Configuration\n  .GetSection(\"DynamicConfiguration:GlobalOptions\"));\nbuilder.Services.AddControllersWithViews();\nvar app = builder.Build();\nif (!app.Environment.IsDevelopment())\n{\n  app.UseExceptionHandler(\"/Home/Error\");\n  app.UseHsts();\n}\n// Middleware to refresh configuration\napp.UseAzureAppConfiguration();\napp.UseHttpsRedirection();\napp.UseStaticFiles();\napp.UseRouting();\napp.UseAuthorization();\napp.MapControllerRoute(\nname: \"default\",\npattern: \"{controller=Home}/{action=Index}/{id?}\");\napp.Run();\n```", "```cs\ndotnet run\n```", "```cs\n    dotnet add package Microsoft.Azure.AppConfiguration.AspNetCore\n    dotnet add package Microsoft.FeatureManagement.AspNetCore\n    ```", "```cs\n    using DynamicConfiguration.Options;\n    using Microsoft.Extensions.Configuration\n      .AzureAppConfiguration;\n    using Microsoft.FeatureManagement;\n    var builder = WebApplication.CreateBuilder(args);\n    builder.Services.AddAzureAppConfiguration();\n    builder.Services.AddFeatureManagement();\n    var connectionString = builder.Configuration\n      .GetConnectionString(\"AppConfig\");\n    builder.Configuration\n      .AddAzureAppConfiguration(options =>\n    {\n      options.Connect(connectionString)\n      .Select(\"DynamicConfiguration:*\", LabelFilter.Null)\n      .ConfigureRefresh(refreshOptions => refreshOptions\n      .Register(\"DynamicConfiguration:Sentinel\",\n        refreshAll: true))\n      .UseFeatureFlags(featureFlagsOptions =>\n      {\n        featureFlagsOptions.CacheExpirationInterval =\n        TimeSpan.FromSeconds(5);\n      });\n    });\n    builder.Services.Configure<GlobalOptions>\n      (builder.Configuration.GetSection(\n        \"DynamicConfiguration:GlobalOptions\"));\n    builder.Services.AddControllersWithViews();\n    var app = builder.Build();\n    if (!app.Environment.IsDevelopment())\n    {\n      app.UseExceptionHandler(\"/Home/Error\");\n      app.UseHsts();\n    }\n    // Middleware to refresh configuration\n    app.UseAzureAppConfiguration();\n    app.UseHttpsRedirection();\n    app.UseStaticFiles();\n    app.UseRouting();\n    app.UseAuthorization();\n    app.MapControllerRoute(\n    name: \"default\",\n    pattern: \"{controller=Home}/{action=Index}/{id?}\");\n    app.Run();\n    ```", "```cs\n    @addTagHelper *, Microsoft.FeatureManagement\n      .AspNetCore\n    ```", "```cs\n    <div class=\"text-center\">\n    <h1 class=\"display-4\">Welcome @ViewData[\"Title\"]</h1>\n    <p>Learn about <a\n      href=\"https://learn.microsoft.com/aspnet/core\">\n      building Web apps with ASP.NET Core</a>.</p>\n    </div>\n    <feature name=\"NewFeature\">\n    <div style=\"background-color: silver;\n      border: dotted 1px #000000\">\n    <h3>New Feature using Toggles and\n      the Azure App Configuration</h3>\n    </div>\n    </feature>\n    ```"]