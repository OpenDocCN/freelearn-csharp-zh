- en: '1'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Introduction to CLI Applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the realm of computing, **command-line interface** (**CLI**) applications
    exemplify the enduring power and efficiency of text-based user interfaces. Unlike
    their graphical counterparts, CLI applications offer a streamlined, no-frills
    approach to interacting with software, allowing users to execute commands, manipulate
    files, and perform a myriad of tasks right from the terminal, or automate them
    so these tasks do not require user interaction at all!
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: An IT professional’s typical day
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What CLI applications are, what their benefits are, and when to use them
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Popular CLI applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A day in the life of an IT professional
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It’s a beautiful Monday morning. Today, my team and I are starting a new project.
  prefs: []
  type: TYPE_NORMAL
- en: The project is to build a web application using **ASP.NET** with **Entity Framework**
    as an **object-relational mapper** (**ORM**), **NuGet** for managing dependencies,
    **Git** as a code versioning system, and, since the application is to be deployed
    on Azure, **Bicep** as an infrastructure scripting language.
  prefs: []
  type: TYPE_NORMAL
- en: A few years ago, I would have used GUI applications for this, such as the full-fledged
    **Visual Studio**, **GitHub Desktop**, or **GitKraken**, and the **Azure portal**.
  prefs: []
  type: TYPE_NORMAL
- en: Today, I doing most of my work in **Visual Studio Code** and its integrated
    terminal.
  prefs: []
  type: TYPE_NORMAL
- en: So, I use commands such as `mkdir` to create my project directory, `cd` to position
    myself into this directory, `dotnet new` to create my project, `git init` to initialize
    the Git repository, `dotnet add package` to add NuGet packages as dependencies
    to my project, `dotnet ef dbcontext scaffold` to generate a database context and
    all the entity type classes for my database, `dotnet build` to compile my application,
    and `dotnet run` to run it. When comes the time to deploy my application to Azure,
    I use commands such as `az login` to log into my Azure account, `az account set`
    to position myself onto the appropriate subscription, and finally, `az deployment
    group create` to deploy my Azure infrastructure as declared in my Bicep script.
  prefs: []
  type: TYPE_NORMAL
- en: When I realized that, I paused to pay careful attention to the situation. Wow,
    CLI applications are everywhere! They are truly part of our daily operations,
    no matter the role we play in an IT team.
  prefs: []
  type: TYPE_NORMAL
- en: 'I wondered how I missed that… then it hit me. This might be because CLI applications
    are a bit shy (they have no flashy UIs), and for that reason, we may not always
    notice them, so let me tell you about some common ones:'
  prefs: []
  type: TYPE_NORMAL
- en: If you are a developer, you have certainly used the .NET CLI (`dotnet`), the
    Node.js CLI (`node`), the npm package manager (`npm`), the Angular CLI (`ng`),
    Python (`python`), Git (`git`), Docker (`docker`), Kubernetes (`kubectl`), and
    many more.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are a DevOps engineer, you may be using Git (`git`), GitHub (`gh`), Azure
    DevOps (`az` `devops`), Docker (`docker`), Kubernetes (`kubectl`), Ansible (`ansible`),
    and so on.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are a system administrator, you may be regularly using package managers
    on various operating systems, such as `apt` on Linux, `brew` on macOS, or even
    `choco` or `winget` on Windows. You also most likely use shells, automation, and
    configuration tools such as PowerShell or Bash.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are a cloud administrator or architect, you may be using the Azure CLI
    (`az`), the AWS CLI (`aws`), Terraform (`terraform`), or Bicep (`bicep`), among
    others.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are a data scientist, you might be using Python (`python`), R (`R`),
    Pandas (`pandas`), SQL (`sql`), or Jupyter Notebooks (`jupyter notebook`).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are a video or audio producer, a content creator, or simply a multimedia
    enthusiast, you are probably using `FFmpeg` (yes, it is a CLI application) to
    manipulate, convert, and analyze media files.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And the list goes on and on…
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Then, I started wondering why this happened. How come we switched from those
    beautiful UIs with their shiny colors and animations, inviting us to do all sorts
    of tasks and activities, to the blinking cursor inside of that terminal that is
    waiting for us to tell it what to do? This might seem like a big leap backward,
    right?
  prefs: []
  type: TYPE_NORMAL
- en: I know I struggled with that feeling until I figured out why CLI applications
    are so great! Sure, they make us look cool and smart in front of our Muggle friends
    and relatives. But it’s not about that. Okay… not only about that. Because, when
    we are alone working on our project, there are not many people to impress.
  prefs: []
  type: TYPE_NORMAL
- en: So…
  prefs: []
  type: TYPE_NORMAL
- en: Why care about CLI applications?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Because they improve our productivity by keeping us focused on the task at hand.
  prefs: []
  type: TYPE_NORMAL
- en: You see, when we switch contexts between different applications, the chances
    are that we lose sight of what we were doing and get derailed from our task by
    some other unrelated activity.
  prefs: []
  type: TYPE_NORMAL
- en: By relying on CLI applications, all the commands that we type and execute happen
    to be within the same terminal, so we have a better chance of staying focused
    on what we are doing, thus achieving more.
  prefs: []
  type: TYPE_NORMAL
- en: To CLI or not to CLI?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'That is the question. And the answer is quite simple: you don’t have to choose.
    In some scenarios, CLI applications make perfect sense, while in others they make
    no sense. Imagine using Microsoft Teams, Slack, or any tool of the Adobe Creative
    Suite. Would it make sense to interact with these applications as CLI applications?
    Of course not! (unless it is for installing and configuring them).'
  prefs: []
  type: TYPE_NORMAL
- en: So, the point here is that you become aware of the power of CLI applications,
    and you start taking advantage of them in your everyday workflow. They are not
    meant to replace those outstanding GUI applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'As my wife, Lamia Rarrbo (who is an executive coach) says: “This is not an
    **or** situation but rather an **and** situation.”'
  prefs: []
  type: TYPE_NORMAL
- en: CLI applications as the building block for creating workstation profiles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let me tell you a true story. A few years ago, one of my customers asked me
    to come up with a solution to build workstation configuration profiles for different
    roles within their company.
  prefs: []
  type: TYPE_NORMAL
- en: This is nothing new, you may say, and you are exactly right!
  prefs: []
  type: TYPE_NORMAL
- en: So, what makes this situation worth mentioning? What makes it special?
  prefs: []
  type: TYPE_NORMAL
- en: 'For many years, this used to be achieved using customized OS images, depending
    on the role you have in the organization. However, this comes at a cost:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The cost of storage: These images tend to be large and hence require a lot
    of disk space to store them.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The cost of OS updates: When a new OS version is introduced, the IT department
    must recreate all images.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The cost of tools updates: When new versions of the tools utilized by the various
    profiles are introduced, the IT department must recreate the impacted images.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The cost of frustration: Since computers are configured using these images,
    and because this activity is solely performed by the IT department, it causes
    frustrations at both ends. First, users accuse the IT department of being slow
    at providing them with their new machine (“*3 weeks to configure a new laptop?!
    You gotta be kidding me!*”. We have all heard this at some point, right?). Second,
    the IT people have to configure these computers *in addition* to their other tasks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The solution I proposed is to leverage CLI applications to provide users with
    more autonomy while ensuring that the IT department still has control over what
    is deployed on the workstations.
  prefs: []
  type: TYPE_NORMAL
- en: So, I built configuration profiles for each role as a PowerShell script. This
    script relies on *Chocolatey* (and, later, on *WinGet*) to install all the necessary
    tools for a given user role. These scripts were stored on a file share that users
    had access to according to their role (so, for example, if you are an analyst,
    you don’t have access to the developer profile, and so on).
  prefs: []
  type: TYPE_NORMAL
- en: 'This solution provided multiple advantages:'
  prefs: []
  type: TYPE_NORMAL
- en: The IT department now only installs the OS, configures the user account, and
    hand the workstation to the user
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The user can now navigate to the file share and start the installation of their
    software based on their profile
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The IT department can update the configuration profiles, or provide new ones,
    without having an impact on the users and without making them wait
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hence, by leveraging CLI tools, we were able to automate workstation configuration
    in a personalized manner, according to users’ profiles. Imagine how tedious this
    would have been if we had to install each and every application through its GUI
    assistant!
  prefs: []
  type: TYPE_NORMAL
- en: By relying on CLI tools, we were able to improve both the IT department’s productivity
    and users’ satisfaction.
  prefs: []
  type: TYPE_NORMAL
- en: Even heavy graphical applications have a CLI tool!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Why is the preceding story interesting?
  prefs: []
  type: TYPE_NORMAL
- en: It’s not because of the use of PowerShell, WinGet, or Chocolatey. These are
    clearly CLI tools.
  prefs: []
  type: TYPE_NORMAL
- en: It is because we designed a way to install software from the command line without
    involving any GUI. This means that even if we are installing graphical applications
    (such as the Microsoft Office suite, internet browsers, and the Adobe suite),
    we are doing so by relying on their own CLI tools.
  prefs: []
  type: TYPE_NORMAL
- en: Yes, these graphical applications provide a CLI tool allowing us to install
    (and sometimes also configure) these applications.
  prefs: []
  type: TYPE_NORMAL
- en: Even ChatGPT has a CLI!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A quick Google search and I found that there are even CLI applications for **ChatGPT**!
    Can you believe that?!
  prefs: []
  type: TYPE_NORMAL
- en: You can check out some of them at [https://github.com/kardolus/chatgpt-cli](https://github.com/kardolus/chatgpt-cli)
    and [https://github.com/marcolardera/chatgpt-cli](https://github.com/marcolardera/chatgpt-cli).
  prefs: []
  type: TYPE_NORMAL
- en: 'I am telling you: CLI applications are truly everywhere, and once you start
    caring about them, you start noticing how much they are part of your day!'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you work in IT, you have most likely already used at least one CLI application
    of some sort (and the chances are that you use many of them!), and you may even
    be using it on a daily basis.
  prefs: []
  type: TYPE_NORMAL
- en: I am sure that, by now, you have understood the value of CLI applications and
    the role they play in your everyday job.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, we will explore every aspect of building our very own CLI applications,
    that serve our needs and those of our users and customers.
  prefs: []
  type: TYPE_NORMAL
- en: Feeling excited? Then, grab your keyboard, fire up your terminal, and let’s
    start coding!
  prefs: []
  type: TYPE_NORMAL
- en: We have only scratched the surface of what CLI applications can do and why they’re
    an essential tool in today’s tech landscape. I want this book to be your roadmap
    and your guide in this exciting journey.
  prefs: []
  type: TYPE_NORMAL
- en: Oh, and by the way, do not simply read this book, experience it!
  prefs: []
  type: TYPE_NORMAL
- en: Now, turn this page, and let’s continue our journey together. The world of CLI
    applications awaits you!
  prefs: []
  type: TYPE_NORMAL
- en: Enjoy the journey.
  prefs: []
  type: TYPE_NORMAL
