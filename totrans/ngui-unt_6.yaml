- en: Chapter 6. Atlas and Font Customization
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章. 图集和字体自定义
- en: In this chapter, we will learn how to create a new atlas and add our own assets.
    At the end of this chapter, you will know how to handle normal, sliced, and tiled
    sprites.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何创建一个新的图集并添加我们自己的资产。在本章结束时，你将知道如何处理正常、切片和瓦片精灵。
- en: We will use these new assets to add icons to our powers and selected powers.
    We will also change the backgrounds of our different windows, and add a new font
    to our project.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用这些新资产来添加图标到我们的能力和选定的能力。我们还将更改不同窗口的背景，并为我们的项目添加一个新的字体。
- en: A small exercise will let you customize your main menu as you see fit before
    we move on to the final chapter. First, we need to learn how to create our own
    **Game** atlas.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一个小练习将让你在我们进入最后一章之前，根据你的喜好自定义主菜单。首先，我们需要学习如何创建我们自己的**游戏**图集。
- en: The Atlas prefab
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图集预制体
- en: 'With NGUI, an Atlas prefab is used to contain sprites and fonts. It is composed
    of the following:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用NGUI，图集预制体用于包含精灵和字体。它由以下部分组成：
- en: A large texture file containing all sprites and fonts
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含所有精灵和字体的大型纹理文件
- en: A material with this texture file assigned, and a specific shader
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分配了此纹理文件和特定着色器的材质
- en: The Atlas prefab has a **UIAtlas** component attached to it. Its purpose is
    to contain information about your sprites' positions and sizes in the large texture.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图集预制体上附加了一个**UIAtlas**组件。它的目的是包含关于精灵在大型纹理中位置和大小的信息。
- en: It is much more efficient to use only one large texture that holds all our sprites,
    instead of having separate multiple small textures.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用只包含所有精灵的一个大纹理，而不是使用多个单独的小纹理，这要高效得多。
- en: Creating a new Atlas
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建新的图集
- en: Let's create our own Atlas to hold our sprites and new fonts. First, open our
    **Menu** scene. In order to do this, we will use the **Atlas Maker** wizard.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建自己的图集来存储我们的精灵和新字体。首先，打开我们的**菜单**场景。为了做到这一点，我们将使用**图集制作器**向导。
- en: 'Navigate to **NGUI** | **Atlas Maker**, or press *Alt* + *Shift* + *M* to bring
    up the following screen:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到**NGUI** | **图集制作器**，或者按*Alt* + *Shift* + *M*来显示以下屏幕：
- en: '![Creating a new Atlas](img/8667OT_06_01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![创建新的图集](img/8667OT_06_01.jpg)'
- en: 'To create the Atlas, perform the following steps:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建图集，请执行以下步骤：
- en: In the first field, type in the new atlas' name as `Game`.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第一个字段中，输入新图集的名称为`Game`。
- en: Click on the green **Create** button.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击绿色的**创建**按钮。
- en: Our new **Game** atlas has been created, and it is selected in the **Atlas Maker**
    wizard. It is empty for now. Let's change this.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的新**游戏**图集已经创建完成，并在**图集制作器**向导中被选中。目前它是空的。让我们来改变这一点。
- en: Note
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You may have as many Atlases as you want, but remember that rendering multiple
    Atlases simultaneously will increase the number of draw calls.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以创建尽可能多的图集，但请记住，同时渲染多个图集会增加绘制调用的数量。
- en: Adding sprites to Atlas
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将精灵添加到图集中
- en: 'Let''s add some sprites to our new **Game** atlas. We will add the following
    three different types:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在新的**游戏**图集中添加一些精灵。我们将添加以下三种不同类型的精灵：
- en: '**Simple** sprite: As its name suggests, it is simply an image displayed on
    screen'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简单**精灵：正如其名所示，它只是在屏幕上显示的图像'
- en: '**Sliced** sprite: In this, the image is sliced in nine parts and it is resizable
    without stretching corners'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**切片**精灵：在这种情况下，图像被分成九部分，并且可以调整大小而不会拉伸角落'
- en: '**Tiled** sprite: In this, the tiling pattern is repeatable indefinitely'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**瓦片**精灵：在这种情况下，瓦片图案可以无限重复'
- en: Let's start with the **Simple** sprites.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从**简单**精灵开始。
- en: Simple sprites
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单精灵
- en: 'It is time to create two sprites, Bomb and Time, which will illustrate our
    powers. First, we need to create the sprites and add them to our **Game** atlas.
    They will look as shown in the following screenshot:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候创建两个精灵，炸弹和时间，它们将展示我们的能力。首先，我们需要创建这些精灵并将它们添加到我们的**游戏**图集中。它们将看起来如下截图所示：
- en: '![Simple sprites](img/8667OT_06_02.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![简单精灵](img/8667OT_06_02.jpg)'
- en: Note
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You may either create them yourself, or download the `Assets.zip` file from
    [http://goo.gl/bZu4mF](http://goo.gl/bZu4mF).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以自己创建它们，或者从[http://goo.gl/bZu4mF](http://goo.gl/bZu4mF)下载`Assets.zip`文件。
- en: If you wish to create your own sprites, a size of 128 x 128 will be enough.
    You can save them either as `.png` to support transparency, or as `.psd` files—they
    will be converted to the correct format when they will be imported in the Unity
    project.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望创建自己的精灵，128 x 128的大小就足够了。你可以将它们保存为`.png`以支持透明度，或者作为`.psd`文件——当它们被导入Unity项目时，将转换为正确的格式。
- en: Adding sprites to Atlas
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将精灵添加到图集中
- en: 'When your Bomb and Time sprites are ready, or downloaded from the previous
    link, place them in a new `Assets`/`Textures` folder in your project. Then, perform
    the following steps:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的炸弹和计时精灵准备好，或者从上一个链接下载后，将它们放置在你项目中的新 `Assets`/`Textures` 文件夹中。然后，执行以下步骤：
- en: Open **Atlas Maker** from **NGUI**, or *Alt* + *Shift* + *M*.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **NGUI** 中打开 **Atlas Maker**，或按 *Alt* + *Shift* + *M*。
- en: Make sure that our new **Game** Atlas is selected, as shown in the following
    screenshot:![Adding sprites to Atlas](img/8667OT_06_03.jpg)
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保我们新的 **Game** 图集被选中，如图所示：![添加精灵到图集](img/8667OT_06_03.jpg)
- en: In the **Project** view, select both our new **Bomb** and **Time** textures.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **项目** 视图中，选择我们新的 **Bomb** 和 **Time** 纹理。
- en: Click on the **Add/Update All** button in **Atlas Maker**.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **Atlas Maker** 中点击 **添加/更新所有** 按钮。
- en: Good. Our two new sprites have been added to the **Game** atlas.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 好的。我们的两个新精灵已经添加到 **Game** 图集中。
- en: Available powers icons
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可用能力图标
- en: 'Let''s add the icons to our **Time** and **Bomb** prefabs on the scene and
    perform the following steps:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在场景中的 **Time** 和 **Bomb** 预制件上添加图标，并执行以下步骤：
- en: 'In the **Hierarchy** view, select **Background** by navigating to **PowersContainer**
    | **Grid** | **Bomb** and perform the following steps:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **层次** 视图中，通过导航到 **PowersContainer** | **Grid** | **Bomb** 选择 **Background**，然后执行以下步骤：
- en: Duplicate it.
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制它。
- en: Rename this new duplicate as `Icon`.
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将这个新副本重命名为 `Icon`。
- en: Change its **Sprite Type** parameter in **UISprite** to **Simple**.
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **UISprite** 中将其 **Sprite 类型** 参数更改为 **简单**。
- en: Set its **Depth** to `6` so that it can be displayed over the background.
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其 **深度** 设置为 `6` 以确保它可以在背景之上显示。
- en: Click on the **Atlas** button in **UISprite** and in the pop-up window, select
    our new **Game** atlas.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **UISprite** 中点击 **Atlas** 按钮，并在弹出的窗口中选择我们新的 **Game** 图集。
- en: Note
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备注
- en: If the new **Game** Atlas is not visible in the list, drag it from the **Project**
    view in the field next to the **Atlas** button.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果新的 **Game** 图集不在列表中可见，从 **项目** 视图中将其拖到 **Atlas** 按钮旁边的字段中。
- en: Click on the **Sprite** button in **UISprite** and in the pop-up window, select
    our **Bomb** sprite.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **UISprite** 中点击 **Sprite** 按钮，并在弹出的窗口中选择我们的 **Bomb** 精灵。
- en: 'Select the **Label** GameObject from **Bomb** and perform the following steps:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **Bomb** 中选择 **Label** GameObject，然后执行以下步骤：
- en: Delete it—the icon and tool tip are enough!
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除它——图标和工具提示就足够了！
- en: A pop-up window appears, asking you if you want to continue because you will
    lose the prefab connection. Click on **Continue**.
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 弹出一个窗口，询问你是否要继续，因为你将失去预制件连接。点击 **继续**。
- en: Select the **Bomb** GameObject from our **Grid**.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从我们的 **Grid** 中选择 **Bomb** GameObject。
- en: Click on the **Apply** button in the **Inspector** view to update the prefab.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **检查器** 视图中点击 **应用** 按钮以更新预制件。
- en: 'Good, our **Bomb** prefab is up to date with its new icon. Let''s add the icon
    for the **Time** prefab by performing the following steps:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我们的 **Bomb** 预制件已经更新了新的图标。让我们通过以下步骤添加 **Time** 预制件的图标：
- en: 'Select our **Icon** GameObject **Bomb** and perform the following steps:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择我们的 **Icon** GameObject **Bomb** 并执行以下步骤：
- en: Duplicate it.
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制它。
- en: Drag this duplicate inside the **Time** GameObject.
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将这个副本拖到 **Time** GameObject 内。
- en: Reset its **Transform** position to {`0`, `0`, `0`}.
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其 **变换** 位置重置为 `{`0`, `0`, `0`}`。
- en: Change its **Sprite** parameter to our own **Time** sprite.
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其 **Sprite** 参数更改为我们自己的 **Time** 精灵。
- en: Change its **Dimensions** to `75` x `75`.
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其 **尺寸** 更改为 `75` x `75`。
- en: 'Select the **Label** GameObject from **Time** and then perform the following
    steps:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **Time** 中选择 **Label** GameObject，然后执行以下步骤：
- en: Delete it—the icon and tool tip are enough!
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除它——图标和工具提示就足够了！
- en: A pop-up window appears, asking you if you want to continue because you will
    lose the prefab connection. Click on **Continue**.
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 弹出一个窗口，询问你是否要继续，因为你将失去预制件连接。点击 **继续**。
- en: Select the **Time** GameObject from **Grid**.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **Grid** 中选择 **Time** GameObject。
- en: Click on the **Apply** button in the **Inspector** view to update the prefab.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **检查器** 视图中点击 **应用** 按钮以更新预制件。
- en: Ok, our draggable powers prefabs now have their own icons.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我们的可拖动能力预制件现在有了自己的图标。
- en: Selected powers icons
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择能力图标
- en: 'Let''s also add icons for our **SelectedBomb** and **SelectedTime** prefabs
    so that they look nicer:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们也为我们的 **SelectedBomb** 和 **SelectedTime** 预制件添加图标，使它们看起来更漂亮：
- en: '![Selected powers icons](img/8667OT_06_04.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![选择能力图标](img/8667OT_06_04.jpg)'
- en: 'Perform the following steps to achieve this:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以实现此目的：
- en: From the **Project** view, drag the **SelectedBomb** prefab in our **Surface**
    GameObject.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **项目** 视图，将 **SelectedBomb** 预制件拖到我们的 **Surface** GameObject。
- en: 'In the **Hierarchy** view, select our **Icon** GameObject from **Grid**/**Bomb**
    and perform the given steps:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Duplicate it.
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Drag this duplicate inside our new **SelectedBomb** instance.
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Reset its **Transform** position to {`0`, `0`, `0`}.
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Set its **Depth** to `5`.
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Change its **Dimensions** to `120` x `120`.
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Label** GameObject from **SelectedBomb** and delete it.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the **SelectedBomb** GameObject from **Surface** and perform the given
    steps:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Apply** button in the **Inspector** view to update the prefab.
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the **SelectedBomb** instance from the scene.
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Let''s follow the same steps for our **SelectedTime** prefab:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: From the **Project** view, drag the **SelectedTime** prefab in our **Surface**
    GameObject.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the **Hierarchy** view, select our **Icon** GameObject from **Time** and
    perform the following steps:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Duplicate it.
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Drag this duplicate inside our new **SelectedTime** instance.
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Reset its **Transform** position to {`0`, `0`, `0`}.
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Set its **Depth** to `5`.
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Change its **Dimensions** to `100` x `100`.
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Label** GameObject from **SelectedTime**, and delete it.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the **SelectedTime** GameObject from **Surface** and perform the following
    steps:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Apply** button in the **Inspector** view to update the prefab.
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the **SelectedTime** instance from the scene.
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: That's it. We have our own two icons for our powers. Now, we can learn how to
    create and configure our own nine-sliced sprite.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: Sliced sprites
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We used the dark sliced sprite all along this book. Let''s create our own.
    Then, we will change the power selection box and the background sprites of **Main
    Menu**, as shown in the following screenshot:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '![Sliced sprites](img/8667OT_06_05.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
- en: Adding a sprite to Atlas
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can use a 16 x 16 square sprite, such as the dark sprite. If you wish to
    have larger corners or add more details, simply use a larger texture size. You
    can also use the 64 x 64 `Window.png` file available in my `Assets.zip` archive.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'When your new Window sprite is ready, place it in the `Assets/Textures` folder
    and perform the following steps:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: Open **Atlas Maker** by navigating to **NGUI** | **Atlas Maker**, or *Alt* +
    *Shift* + *M* and make sure our new **Game** atlas is selected.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the new `Window.png` sprite file from **Textures** in the **Project**
    view.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the green **Add/Update All** button in the **Atlas Maker** window.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ok, `Window.png` has been added to our **Game** atlas, but it isn't configured.
    Yet.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: Configuring a sliced sprite
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Window sprite has been added to the atlas, but we still need to indicate
    the **UIAtlas** component where the slicing must occur on the sprite. Let's replace
    our **Background** of **Powers**, and configure its slicing parameters.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **Hierarchy** view, select the **Background** GameObject from **Powers**
    and perform the following steps:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: Change its **Atlas** parameter in **UISprite** to our **Game** Atlas.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change its **Sprite** to our new **Window** sprite.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the **Edit** button next to the **Sprite** field, as shown in the
    following screenshot:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**精灵**字段旁边的**编辑**按钮，如图所示：
- en: '![Configuring a sliced sprite](img/8667OT_06_06.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![配置切片精灵](img/8667OT_06_06.jpg)'
- en: 'We are now in the sprite''s parameter window. Here, we can configure its **Dimensions**,
    **Border**, and **Padding**. Set these **Border** values to define the slicing
    lines:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在在精灵的参数窗口中。在这里，我们可以配置其**尺寸**、**边框**和**填充**。设置这些**边框**值以定义切片线：
- en: '![Configuring a sliced sprite](img/8667OT_06_07.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![配置切片精灵](img/8667OT_06_07.jpg)'
- en: The values shown in the previous screenshot might be different if you created
    your own sprite.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您创建了您自己的精灵，之前截图中的值可能会有所不同。
- en: Note
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As you change the **Border** values, dotted lines appear on the sprite at the
    bottom of the **Inspector** view in the **Preview** window.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 当您更改**边框**值时，在**预览**窗口的**检查器**视图底部会出现点线。
- en: 'The **Window** sprite should be sliced (as shown in the following screenshot)
    in the **Preview** window:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**窗口**精灵应该在**预览**窗口中切片（如图所示）：'
- en: '![Configuring a sliced sprite](img/8667OT_06_08.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![配置切片精灵](img/8667OT_06_08.jpg)'
- en: When you have entered your four values, you can click on the green **Return
    to Background** button in order to go back to where we were.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 当您输入了四个值后，您可以通过点击绿色**返回背景**按钮返回到我们之前的位置。
- en: We now have a functional sliced sprite, but we need to adjust the title position
    of the powers. In the **Hierarchy** view, select our **TitleLabel** GameObject
    from **Powers**, and change its **Pixel Offset** in **UIAnchor** to {`0`, `-18`}.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经有一个功能性的切片精灵，但我们需要调整功率标题的位置。在**层次**视图中，从**功率**中选择我们的**TitleLabel** GameObject，并在**UI锚点**中将其**像素偏移**更改为{`0`,
    `-18`}。
- en: Good! We configured our first sliced sprite and changed the power selection
    box's background sprite with it.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！我们已经配置了第一个切片精灵，并用它更改了功率选择框的背景精灵。
- en: The Main Menu window
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主菜单窗口
- en: 'Let''s change our **Window** sprite **Main Menu** too. In the **Hierarchy**
    view, select our **Window** GameObject from **Container** and perform the following
    steps:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更改我们的**窗口**精灵的**主菜单**。在**层次**视图中，从**容器**中选择我们的**窗口** GameObject，并执行以下步骤：
- en: Change its **Atlas** to our **Game** Atlas.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其**图集**更改为我们的**游戏**图集。
- en: Change its **Sprite** to our new **Window** sprite.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其**精灵**更改为我们新的**窗口**精灵。
- en: The **Main Menu** title is not placed exactly inside the title bar. Let's change
    this by performing the following steps.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**主菜单**标题没有放置在标题栏的精确位置。让我们通过以下步骤来更改这一点。'
- en: Select the **Title** GameObject from **Container**, and change its **Pixel Offset**
    value in **UIAnchor** to {`0`, `10`}.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**容器**中选择**标题**GameObject，并在**UI锚点**中将其**像素偏移**值更改为{`0`, `10`}。
- en: Select the **Background** GameObject from **Title** and deactivate it for now.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**标题**中选择**背景** GameObject，并暂时将其禁用。
- en: 'Select the **Background** GameObject from **Container** and then perform the
    following steps:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**容器**中选择**背景** GameObject，然后执行以下步骤：
- en: Change its **Relative Size** in **UIStretch** to {`1`, `0.95`}.
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其**相对大小**在**UI拉伸**中更改为{`1`, `0.95`}。
- en: Change its **Pixel Offset** in **UIAnchor** to {`0`, `-17`}.
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其**像素偏移**在**UI锚点**中更改为{`0`, `-17`}。
- en: Great. That looks better. If you wish, you may change the nickname box's background
    sprites with our new Window sprite. You can even change the buttons by using the
    sliced sprite `Button.png` included in the `Assets.zip` file.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了。看起来更好了。如果您愿意，您可以用我们新的窗口精灵更改昵称框的背景精灵。您甚至可以使用包含在`Assets.zip`文件中的切片精灵`Button.png`来更改按钮。
- en: Note
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `Button.png` file can be used for non-button backgrounds too, such as the
    notification or tool tip backgrounds. Try it out!
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`Button.png`文件也可以用于非按钮背景，例如通知或工具提示背景。试试看！'
- en: Tiled sprites
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 瓦片精灵
- en: Let's add a tiled sprite to create a space background for our **Game** scene.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们添加一个瓦片精灵来为我们的**游戏**场景创建一个空间背景。
- en: 'You can use the `Space.jpg` file from the `Assets.zip` archive, or you may
    create a 256 x 256 tiling sprite representing stars in space. Place the `Space.jpg`
    sprite in the `Assets/Textures` folder, and then perform the following steps:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`Assets.zip`存档中的`Space.jpg`文件，或者您可能创建一个代表太空中的星星的256 x 256瓦片精灵。将`Space.jpg`精灵放在`Assets/Textures`文件夹中，然后执行以下步骤：
- en: Open our **Game** scene.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开我们的**游戏**场景。
- en: 'Open **Atlas Maker** by navigating to **NGUI** | **Atlas Maker**, or *Alt*
    + *Shift* + *M*. Then perform the following steps:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到**NGUI** | **Atlas Maker**或*Alt* + *Shift* + *M*打开**Atlas Maker**。然后执行以下步骤：
- en: In the **Project** view, select our new `Space.jpg` file from **Textures**.
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**项目**视图中，从**纹理**中选择我们新的`Space.jpg`文件。
- en: Click on the **Add/Update All** button of the **Atlas Maker** window.
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Atlas Maker** 窗口的 **添加/更新全部** 按钮。
- en: Ok, the new `Space.jpg` sprite has now been added to our **Game** Atlas. Let's
    change our **Game** scene's background to make it look like we're in space.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，新的 `Space.jpg` 精灵已经添加到我们的 **Game** 图集。让我们改变 **Game** 场景的背景，使其看起来像我们在太空中。
- en: Select the **Background** GameObject from **Viewport**.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **视口** 中选择 **背景** 游戏对象。
- en: Change its **Atlas** to our **Game** Atlas.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其 **图集** 更改为我们的 **Game** 图集。
- en: Change its **Sprite** to our new **Space** sprite.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其 **精灵** 更改为我们新的 **空间** 精灵。
- en: Change its **Color Tint** to {`140`, `200`, `200`, `255`}.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其 **颜色色调** 更改为 `{`140`, `200`, `200`, `255`}`。
- en: That's it! Small stars are now tiling in the background. Now, it is time to
    add a font.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！小星星现在正在背景中平铺。现在，是时候添加字体了。
- en: Adding a font
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加字体
- en: For optimization, NGUI uses bitmaps instead of true type fonts. We need to export
    our `.ttf` or `.otf` fonts to a bitmap using a free third-party tool called **BMFont**
    , which was created by **AngelCode**.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 为了优化，NGUI 使用位图而不是真型字体。我们需要使用一个名为 **BMFont** 的免费第三方工具将我们的 `.ttf` 或 `.otf` 字体导出为位图，该工具由
    **AngelCode** 创建。
- en: Then, we will need a `.txt` file that will contain information about where each
    glyph is located in the exported font's bitmap. You can download the BMFont from
    [www.angelcode.com/products/bmfont/](http://www.angelcode.com/products/bmfont/).
    Free-to-use fonts are available at [www.openfontlibrary.org/](http://www.openfontlibrary.org/).
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要一个包含有关每个符号在导出字体位图中位置信息的 `.txt` 文件。您可以从 [www.angelcode.com/products/bmfont/](http://www.angelcode.com/products/bmfont/)
    下载 BMFont。免费字体可在 [www.openfontlibrary.org/](http://www.openfontlibrary.org/) 找到。
- en: For our first font, we will use the Pacaya font created by *Daniel Johnson*—it
    is included in the `Assets.zip` archive. Download, install, and launch BMFont.
    Install the font now by right-clicking on the `Pacaya.otf` file and then selecting
    **Install**.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的第一个字体，我们将使用由 *Daniel Johnson* 创建的 Pacaya 字体——它包含在 `Assets.zip` 归档中。下载、安装并启动
    BMFont。通过右键单击 `Pacaya.otf` 文件并选择 **安装** 来安装字体。
- en: Exporting a font using BMFont
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 BMFont 导出字体
- en: Once BMFont is launched and the Pacaya font is installed, go to **Options**
    | **Font Settings**. You can now select the Pacaya font in the **Font** field.
    The **Size(px)** field defines the font's size at export in pixels—set it to `24`
    and click on **OK**.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 BMFont 启动并且 Pacaya 字体已安装，请转到 **选项** | **字体设置**。现在您可以在 **字体** 字段中选择 Pacaya
    字体。**大小(px)** 字段定义了导出时字体的像素大小——将其设置为 `24` 并点击 **确定**。
- en: Our `.otf` file is loaded, and we can visualize and select the characters that
    we want to export with a left-click or click-and-drag. Select them all with *Ctrl*
    + *A*.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已加载 `.otf` 文件，并且我们可以通过左键单击或点击并拖动来可视化和选择我们想要导出的字符。使用 *Ctrl* + *A* 选择所有字符。
- en: Note
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you want to export a selection of characters, don't forget to select the
    empty character—it's your space character.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要导出一组字符，别忘了选择空字符——它是您的空格字符。
- en: Go to **Options** | **Export** options. Here, you must set the **Bit** depth
    to `32`. Now, the only thing you need to check is the **Width** and **Height**
    value of the bitmap.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 前往 **选项** | **导出** 选项。在这里，您必须将 **位深** 设置为 `32`。现在，您唯一需要检查的是位图的 **宽度** 和 **高度**
    值。
- en: 'To see if it''s currently big enough, click on **OK** and go to **Options**
    | **Visualize**. The window shown in the following screenshot appears:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看它是否足够大，请点击 **确定** 并转到 **选项** | **可视化**。以下截图显示的窗口会出现：
- en: '![Exporting a font using BMFont](img/8667OT_06_09.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![使用 BMFont 导出字体](img/8667OT_06_09.jpg)'
- en: The red space represents wasted space. As you can see, we have a large amount
    of wasted space. You must try to set the bitmap size to reduce this red space
    as much as possible, while making sure you have enough space for all characters.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 红色空间代表浪费的空间。如您所见，我们有很多浪费的空间。您必须尝试设置位图大小，尽可能减少红色空间，同时确保有足够的空间容纳所有字符。
- en: 'If your bitmap size is too small and can''t hold all your characters, the **Preview**
    window''s title will show **Preview : 1/2** instead of **Preview : 1/1**, as shown
    in the following screenshot. Then, you should increase the bitmap size utile it
    displays **Preview : 1/1**. For the Pacaya font with all characters selected,
    enter `256` x `128`. It should look as shown in the following screenshot:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '如果您的位图大小太小，无法容纳所有字符，**预览** 窗口的标题将显示 **预览 : 1/2** 而不是 **预览 : 1/1**，如以下截图所示。然后，您应该增加位图大小，直到它显示
    **预览 : 1/1**。对于已选择所有字符的 Pacaya 字体，输入 `256` x `128`。它应该看起来像以下截图所示：'
- en: '![Exporting a font using BMFont](img/8667OT_06_10.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![使用 BMFont 导出字体](img/8667OT_06_10.jpg)'
- en: Tip
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: For optimization, you should keep its dimensions as powers of two.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 为了优化，你应该保持其尺寸为2的幂。
- en: 'Once you have set the correct bitmap size, go back to **Options** | **Export
    Options**. Then, make sure the **Presets** field is set to **White text with alpha**
    in order to have **R**, **G**, and **B** channel values at **one** and the **glyph**
    in channel **A**:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置了正确的位图大小，返回到**选项** | **导出选项**。然后，确保**预设**字段设置为**带alpha通道的白色文本**，以便在**R**、**G**和**B**通道中具有**一个**值，在通道**A**中的**符号**：
- en: '![Exporting a font using BMFont](img/8667OT_06_11.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![使用BMFont导出字体](img/8667OT_06_11.jpg)'
- en: When you've done that, go to **Options** | **Save bitmap font as…** and name
    it `Pacaya`. The `.fnt` file extension will be added automatically. Inside the
    output folder you selected, you should have a `Pacaya_0.tga` file—the actual font
    bitmap—and a `.fnt` file.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成之后，转到**选项** | **保存位图字体为…**并将其命名为`Pacaya`。`.fnt`文件扩展名将被自动添加。在您选择的输出文件夹中，你应该有一个`Pacaya_0.tga`文件——实际的字体位图，以及一个`.fnt`文件。
- en: Note
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You must have only one `.tga` file along with your `.fnt` file. Otherwise, your
    bitmap size is too small, and you need to make it larger before you re-export.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须有且只有一个`.tga`文件以及你的`.fnt`文件。否则，你的位图大小太小，在重新导出之前你需要将其放大。
- en: Ok, now copy these two files in a new `Assets/Fonts/Sources` folder.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在将这些两个文件复制到一个新的`Assets/Fonts/Sources`文件夹。
- en: Creating a font in Unity
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Unity中创建字体
- en: We have our new font files. We must now create a new font for NGUI using these
    files.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经有了新的字体文件。我们现在必须使用这些文件为NGUI创建一个新的字体。
- en: 'In Unity, perform the following steps:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity中，执行以下步骤：
- en: Open the **Font Maker** window by navigating to **NGUI** | **Font Maker**, or
    *Alt* + *Shift* + *F*.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到**NGUI** | **字体制作器**或*Alt* + *Shift* + *F*打开**字体制作器**窗口。
- en: In the **Project** view, browse to your `Assets/Fonts/Sources` folder.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**项目**视图中，浏览到你的`Assets/Fonts/Sources`文件夹。
- en: Drag your `Pacaya.fnt` file in the **Font Data** field in **Font Maker**.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的`Pacaya.fnt`文件拖动到**字体数据**字段中的**字体制作器**。
- en: Drag the `Pacaya_0.tga` file in the **Texture** field in **Font Maker**.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Pacaya_0.tga`文件拖动到**字体制作器**中的**纹理**字段。
- en: Enter `Pacaya` in the **Font Name** field.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**字体名称**字段中输入`Pacaya`。
- en: Click on the **Atlas** button and choose our **Game** Atlas.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Atlas**按钮，选择我们的**游戏**Atlas。
- en: Note
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This means the font's texture will be added to the **Game** Atlas, resulting
    in no supplementary draw call when a label is displayed.
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这意味着字体的纹理将被添加到**游戏**Atlas中，当标签显示时不会产生额外的绘制调用。
- en: Select any file in the `Sources` folder in the path `Assets/Fonts/` of our **Project**
    view—our font will then be added to the current folder, but you need to actually
    select a file inside the desired destination for it to work.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**项目**视图的`Assets/Fonts/`路径下的**Sources**文件夹中选择任何文件——我们的字体将被添加到当前文件夹，但你需要实际选择一个文件在目标位置才能使其工作。
- en: Click on the green **Create the Font** button.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击绿色的**创建字体**按钮。
- en: A new Pacaya prefab has been created in the `Sources` folder in the path `Assets/Fonts/`.
    That's the prefab NGUI needs to display the font.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Assets/Fonts/`路径下的`Sources`文件夹中已创建一个新的Pacaya预制件。这是NGUI需要用来显示字体的预制件。
- en: Select it in the **Project** view, and drag it inside our `Fonts` folder in
    `Assets`. If you cannot find it, simply type your font's name in the **Project**
    view's search bar.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在**项目**视图中选择它，并将其拖动到我们的`Assets`中的`Fonts`文件夹内。如果你找不到它，只需在**项目**视图的搜索栏中输入你的字体名称。
- en: Assigning a new font to Label
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将新的字体分配给标签
- en: 'Now that we have added a new font to our project, let''s assign it to a Label:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将一个新的字体添加到我们的项目中，让我们将其分配给一个标签：
- en: Open our **Menu** scene.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开我们的**菜单**场景。
- en: 'Select our **Label** GameObject by navigating to **MainMenu** | **Container**
    | **Nickname** | **Input** and perform the following steps:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到**主菜单** | **容器** | **昵称** | **输入**选择我们的**标签**GameObject，并执行以下步骤：
- en: Click on the **Font** button in **UILabel**.
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**UILabel**中的**字体**按钮。
- en: Choose our new **Pacaya** font.
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择我们新的**Pacaya**字体。
- en: Note
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If the new font does not appear in recent fonts, find it in your **Project**
    view and drag it manually in the **Font** field in **UILabel**.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 如果新字体没有出现在最近使用的字体中，在你的**项目**视图中找到它，并将其手动拖动到**UILabel**中的**字体**字段。
- en: Ok. We have added a new font to our project and assigned it to a label!
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 好的。我们已经将一个新的字体添加到我们的项目中，并将其分配给了一个标签！
- en: Customizing the MainMenu
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义**主菜单**
- en: 'The blue background of our menu''s main camera is not very nice. Let''s set
    a black background for the camera, and add our space tiling sprite to make this
    better:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 我们菜单主相机的蓝色背景不太好看。让我们为相机设置一个黑色背景，并添加我们的空间平铺精灵来改善这个效果：
- en: Select our **MainMenu** GameObject from **Anchor**, and create a new sprite
    by navigating to **NGUI** | **Create** | **Sprite**, or press *Alt* + *Shift*
    + *S*.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**锚点**中选择我们的**MainMenu** GameObject，然后通过导航到**NGUI** | **创建** | **精灵**或按*Alt*
    + *Shift* + *S*创建一个新的精灵。
- en: 'Select the new **Sprite** GameObject from **MainMenu** and perform the following
    steps:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**MainMenu**中选择新的**精灵**GameObject，并执行以下步骤：
- en: Rename it as `Space`.
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其重命名为`Space`。
- en: Set its **Atlas** type to our **Game** atlas.
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其**图集**类型设置为我们的**游戏**图集。
- en: Set its **Sprite** to our **Space** tiling sprite.
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其**精灵**设置为我们的**Space**平铺精灵。
- en: Set its **Sprite Type** parameter to **Tiled**.
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其**精灵类型**参数设置为**平铺**。
- en: 'Attach a **Stretch** component to it by navigating to **Component** | **NGUI**
    | **UI**:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到**组件** | **NGUI** | **UI**来为它附加一个**拉伸**组件：
- en: Set its **Style** parameter to **Both**.
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其**样式**参数设置为**两者**。
- en: You may notice that we have ugly lines between each repetition of the Space
    sprite. That is simply because there is a 1-pixel-wide border on the sprite. We
    can easily correct this by reducing the sprite's border value of 1 pixel.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到，我们在Space精灵的每次重复之间有丑陋的线条。这仅仅是因为精灵上有一个1像素宽的边框。我们可以通过减少精灵的1像素边框值来轻松纠正这个问题。
- en: 'Select our **Space** GameObject from **MainMenu**, and click on the **Edit**
    button next to the **Sprite** field, as shown in the following screenshot:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 从**MainMenu**中选择我们的**Space** GameObject，然后点击**精灵**字段旁边的**编辑**按钮，如图所示：
- en: '![Customizing the MainMenu](img/8667OT_06_12.jpg)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![自定义主菜单](img/8667OT_06_12.jpg)'
- en: 'Set a value of `1` for each of the four **Border** parameters as shown in the
    following screenshot:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 将四个**边框**参数的值设置为以下截图所示：
- en: '![Customizing the MainMenu](img/8667OT_06_13.jpg)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![自定义主菜单](img/8667OT_06_13.jpg)'
- en: That's better; our tiling sprite now tiles correctly without any lines between
    each pattern.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 这样就更好了；我们的平铺精灵现在正确地平铺，没有任何图案之间的线条。
- en: Now that you have learned how to add sprites and fonts, I would like you to
    change our **Main Menu** elements' backgrounds to make it look better. You may
    proceed as you wish—add more sprites if you want, change colors, and use your
    imagination!
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经学会了如何添加精灵和字体，我希望你改变我们的**主菜单**元素的背景，使其看起来更美观。你可以按照自己的意愿进行——如果你想的话，添加更多精灵，更改颜色，发挥你的想象力！
- en: 'The following is an example of what you can achieve with the **Window** and
    **Button** sprites:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个使用**窗口**和**按钮**精灵可以实现的示例：
- en: '![Customizing the MainMenu](img/8667OT_06_14.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![自定义主菜单](img/8667OT_06_14.jpg)'
- en: Note
  id: totrans-215
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You might have to move or resize the UI elements. Don't forget to use **Pixel
    Offset** in **UIAnchor** to move or resize instead of positions. Same for **Dimensions**—don't
    use the scale tool of Unity if you want to keep the widgets pixel perfect.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要移动或调整UI元素的大小。不要忘记使用**UI锚点**中的**像素偏移**来移动或调整大小，而不是位置。同样，对于**尺寸**——如果你想保持小部件像素完美，不要使用Unity的缩放工具。
- en: Summary
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to create a new Atlas and add simple, sliced,
    and tiled sprites. Using these new sprites, we made our **Powers**, **Selected
    Powers**, and **Main Menu** windows look better than before.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何创建一个新的图集并添加简单、切片和平铺精灵。使用这些新精灵，我们使我们的**能力**、**选择能力**和**主菜单**窗口比以前看起来更好。
- en: You now know how to use BMFont to export a font as bitmap and create a new font
    prefab for NGUI.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经知道了如何使用BMFont将字体导出为位图并创建一个新的字体预制件用于NGUI。
- en: Before we move on to the final [Chapter 7](ch07.html "Chapter 7. Creating a
    Game with NGUI"), *Creating a Game with NGUI*, you should have changed the appearance
    of your **Main Menu** to make it look nicer.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续到最后的[第7章](ch07.html "第7章。使用NGUI创建游戏")，*使用NGUI创建游戏*之前，你应该已经更改了你的**主菜单**的外观，使其看起来更美观。
