- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Assembling Your Tools and Creating Your First App
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 组装你的工具和创建你的第一个应用程序
- en: In this book, we’ll be building iOS, Android, Windows, and Mac applications
    using one common code base. Everything you need is free unless you want to build
    for iOS and Mac, in which case you need a Mac computer. I’m going to assume you
    have a Mac, but if you don’t, very little will change; you’ll just be more limited
    in the platforms you can deploy to.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将使用一个共同的代码库构建 iOS、Android、Windows 和 Mac 应用程序。除非你想为 iOS 和 Mac 构建应用程序，在这种情况下你需要一台
    Mac 电脑，否则你需要的一切都是免费的。我将假设你有一台 Mac，但如果你没有，变化非常小；你只是可以部署的平台更有限。
- en: An alternative if you don’t have a Mac
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有 Mac 的替代方案
- en: 'James Montemagno of Microsoft has a workaround video if you don’t have a Mac.
    There are severe limitations, but needs must. My personal recommendation is that
    if you don’t have a Mac, do your development with Android. Here’s the video: [https://www.youtube.com/watch?v=snQ1C6Cppr8](https://www.youtube.com/watch?v=snQ1C6Cppr8).'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 微软的 James Montemagno 有一个针对没有 Mac 的解决方案的视频。虽然存在严重的限制，但需求必须。我个人的建议是，如果你没有 Mac，请使用
    Android 进行开发。以下是视频：[https://www.youtube.com/watch?v=snQ1C6Cppr8](https://www.youtube.com/watch?v=snQ1C6Cppr8)。
- en: In the coming chapters, you will see a non-trivial .NET MAUI project that we
    will build incrementally. Along the way, we will examine how to create the **User
    Interface** (**UI**) with **XAML** (a markup language) and **C#**.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，你将看到我们将逐步构建的一个非平凡的 .NET MAUI 项目。在这个过程中，我们将检查如何使用 **XAML**（一种标记语言）和
    **C#** 创建 **用户界面**（**UI**）。
- en: MAUI Blazor
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: MAUI Blazor
- en: An alternative, not covered in this book, is to use MAUI Blazor, which allows
    you to create a cross-platform application using your Blazor skills. You can learn
    more about MAUI Blazor at [https://bit.ly/MauiBlazor](https://bit.ly/MauiBlazor).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一种替代方案，本书未涉及，是使用 MAUI Blazor，它允许你利用 Blazor 技能创建跨平台应用程序。你可以在 [https://bit.ly/MauiBlazor](https://bit.ly/MauiBlazor)
    了解更多关于 MAUI Blazor 的信息。
- en: 'In the first part of the book, we will discuss the principal architecture for
    .NET MAUI: **Model-View-ViewModel** (**MVVM**). We will then dive into the diverse
    controls available for creating powerful UIs followed by a chapter dedicated to
    techniques for laying out these controls on the page.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的第一部分，我们将讨论 .NET MAUI 的主要架构：**模型-视图-视图模型**（**MVVM**）。然后我们将深入了解用于创建强大 UI 的各种控件，接着将有一章专门讨论如何在页面上布局这些控件。
- en: We will move on to discussing the Shell navigation architecture and how you
    move from page to page, passing along data as needed. We’ll look at persisting
    data and then stop to discuss the all-important topic of testing your code.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将继续讨论 Shell 导航架构以及如何从一个页面移动到另一个页面，并在需要时传递数据。我们将查看数据持久化，然后停下来讨论测试代码这个至关重要的主题。
- en: While .NET MAUI provides a cornucopia of controls, there are times when you
    need something that Microsoft did not anticipate, so we’ll dedicate a chapter
    to creating custom controls. (Once you have a custom control, you can use it in
    any subsequent .NET MAUI projects you work on.)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 .NET MAUI 提供了丰富的控件，但有时你需要 Microsoft 没有预料到的东西，因此我们将专门用一章来创建自定义控件。（一旦你有了自定义控件，你就可以在后续的任何
    .NET MAUI 项目中使用它。）
- en: In the final section of the book, we’ll look at consuming a REST API and creating
    a web frontend to the same REST API we used for the mobile and desktop applications,
    this time using **Blazor**.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的最后部分，我们将探讨消费 REST API 并创建用于移动和桌面应用程序的相同 REST API 的网络前端，这次使用 **Blazor**。
- en: In this chapter, you will learn how to get and install Visual Studio for writing
    the program and Git for managing and safeguarding your code. Each chapter’s final
    code will be in a dedicated branch, with the final product in the main branch.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何获取和安装 Visual Studio 以编写程序，以及 Git 以管理和保护你的代码。每个章节的最终代码将位于一个专门的分支中，最终产品位于主分支。
- en: 'In this chapter, you will find the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将找到以下内容：
- en: A description of Visual Studio, along with installation instructions
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visual Studio 的描述，以及安装说明
- en: A description of Git, along with installation instructions
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Git 的描述，以及安装说明
- en: A description of how to create your first, out-of-the-box program, and a tour
    of the files in that project
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何创建你的第一个、现成的程序，以及该项目文件的浏览
- en: App versus application
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序与应用程序的区别
- en: Since we will be building for iOS and Android (which refer to apps) and also
    Windows and Mac (which refer to applications), I’ll be using the two terms interchangeably.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将为 iOS 和 Android（指应用程序）以及 Windows 和 Mac（指应用程序）构建，我将交替使用这两个术语。
- en: Let’s get the software you need, and then set up Visual Studio.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们获取所需的软件，并设置 Visual Studio。
- en: Technical requirements
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To follow along with this chapter and book, you will need to obtain and install
    Visual Studio and Git. To do this, you will need a Windows machine (Windows 10
    or later). In addition, if you want to write for iOS and/or the Mac, you will
    need an Apple computer on the same network as your Windows computer.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本章和本书的内容，您需要获取并安装 Visual Studio 和 Git。为此，您需要一个 Windows 机器（Windows 10 或更高版本）。此外，如果您想为
    iOS 和/或 Mac 编写代码，您需要一台与您的 Windows 电脑在同一网络上的 Apple 电脑。
- en: All of the code in this book is available at [https://github.com/PacktPublishing/.NET-MAUI-for-C-Sharp-Developers](https://github.com/PacktPublishing/.NET-MAUI-for-C-Sharp-Developers).
    The code for each chapter will have its own branch and that will be noted in the
    *Technical requirements* section of the given chapter. Note that there is no code
    for *Chapters 1* and *2*.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有代码都可在 [https://github.com/PacktPublishing/.NET-MAUI-for-C-Sharp-Developers](https://github.com/PacktPublishing/.NET-MAUI-for-C-Sharp-Developers)
    上找到。每个章节的代码将有自己的分支，并在该章节的 *技术要求* 部分中注明。请注意，*第 1* 和 *第 2* 章没有代码。
- en: A word on Visual Studio Mac
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Visual Studio Mac 的说明
- en: It should be possible to follow along with this book using Visual Studio Mac,
    but some of the menus and certainly many of the keystrokes will be different.
    In my experience, Visual Studio Mac follows Visual Studio with a short delay in
    the implementation of new features. If all you have is a Mac, by all means do
    your development there. If you have both, or just a Windows machine, you’ll find
    it a bit easier to follow along with Visual Studio (for Windows).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 应该可以使用 Visual Studio Mac 跟随本书的内容，但一些菜单和当然许多快捷键将不同。根据我的经验，Visual Studio Mac 在新功能实现上会稍后跟随
    Visual Studio。如果您只有 Mac，那么当然可以在那里进行开发。如果您两者都有，或者只有 Windows 机器，您会发现使用 Visual Studio（Windows
    版本）进行跟随会更容易一些。
- en: While I’m at it, I’ll mention that I’m using Windows 11 on a desktop computer
    with 64 GB of memory and a 1 TB disk. None of that is required for this book.
    You will want at least 16 GB of memory for .NET MAUI programming.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在此期间，我想提到，我正在使用一台装有 64 GB 内存和 1 TB 硬盘的台式电脑运行 Windows 11。这本书不需要这些。您至少需要 16 GB
    的内存来进行 .NET MAUI 编程。
- en: Getting and installing Visual Studio
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取和安装 Visual Studio
- en: The first and foremost software you’ll need for this book is the latest version
    of Visual Studio from Microsoft. You can, of course, write .NET and .NET MAUI
    apps with any number of editors and/or **Integrated Development Environments**
    (**IDEs**), but Visual Studio is what I’ll be using in this book because it is,
    I believe, the most powerful IDE for the job. All the examples will use Visual
    Studio and your job will be much easier if you do so as well, at least while working
    your way through this book.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 本书最首要的软件是来自微软的最新版本的 Visual Studio。当然，您可以使用任何数量的编辑器或 **集成开发环境**（**IDE**）来编写 .NET
    和 .NET MAUI 应用程序，但在这本书中，我将使用 Visual Studio，因为它是我认为最适合这项工作的最强大的 IDE。所有示例都将使用 Visual
    Studio，如果您也这样做，至少在阅读本书的过程中，您的工作将会更加容易。
- en: To get Visual Studio, open a browser and navigate to [https://visualstudio.microsoft.com/](https://visualstudio.microsoft.com/).
    Microsoft changes the appearance of this page pretty frequently, but you should
    see the opportunity to download **Visual Studio**, **Visual Studio for Mac**,
    and **Visual** **Studio Code**.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取 Visual Studio，请打开浏览器并导航到 [https://visualstudio.microsoft.com/](https://visualstudio.microsoft.com/)。微软经常更改此页面的外观，但您应该会看到下载
    **Visual Studio**、**Visual Studio for Mac** 和 **Visual Studio Code** 的机会。
- en: Installing Visual Studio
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Visual Studio
- en: 'On the website, click on **Download Visual Studio**. You can download whichever
    version you prefer. Note that the Community Version is free. If you already have
    Visual Studio 2022 or later installed, you need not add another copy, though they
    will run side by side assuming you have enough disk space. For installation, follow
    these steps:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在网站上，点击 **下载 Visual Studio**。您可以下载您喜欢的任何版本。请注意，社区版本是免费的。如果您已经安装了 Visual Studio
    2022 或更高版本，您不需要添加另一个副本，尽管如果您有足够的磁盘空间，它们可以并行运行。安装时，请按照以下步骤操作：
- en: Once Visual Studio has been downloaded, click on the executable to begin the
    installation process. The installer will update and you will be presented with
    the **Workloads** dialog box as shown in *Figure 1**.1*.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦下载了 Visual Studio，点击可执行文件以开始安装过程。安装程序将更新，并会显示如图 *图 1* 所示的 **工作负载** 对话框。
- en: '![Figure 1.1 – Visual Studio Workloads'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.1 – Visual Studio 工作负载'
- en: '](img/Figure_1.1_B19723.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_1.1_B19723.jpg]'
- en: Figure 1.1 – Visual Studio Workloads
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.1 – Visual Studio 工作负载
- en: Visual Studio lets you pick and choose what workloads you’ll need so that it
    is no bigger than necessary. Be sure to check **Azure development**, .**NET Multi-platform
    App UI development**, and **.NET desktop development** as shown in *Figure 1**.2.*
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Visual Studio 允许你选择和选择你需要的工作负载，以便它的大小不会超过必要。务必检查**Azure开发**、**.NET 多平台应用UI开发**和**.NET
    桌面开发**，如图*图1**.2*所示。
- en: '![Figure 1.2 – Selecting workloads'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.2 – 选择工作负载'
- en: '](img/Figure_1.2_B19723.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.2_B19723.jpg)'
- en: Figure 1.2 – Selecting workloads
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.2 – 选择工作负载
- en: Next, click **Install** and get yourself a cup of coffee; this may take a few
    minutes. You should see progress in the Visual Studio installer, as in *Figure
    1**.3*.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击**安装**并为自己泡一杯咖啡；这可能需要几分钟。你应该能在Visual Studio安装程序中看到进度，如图*图1**.3*所示。
- en: '![Figure 1.3 – Visual Studio Installer'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.3 – Visual Studio 安装程序'
- en: '](img/Figure_1.3_B19723.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.3_B19723.jpg)'
- en: Figure 1.3 – Visual Studio Installer
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.3 – Visual Studio 安装程序
- en: When the installation is complete, Visual Studio will open.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，Visual Studio 将打开。
- en: A word on ReSharper
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 关于ReSharper的一些建议
- en: '**ReSharper** is a very powerful tool that greatly enhances productivity for
    .NET developers. It is not free, however, and while I use it every day in my own
    work, we’ll not be using it in this book. Since we can do everything in Visual
    Studio without ReSharper (though it may take a few more keystrokes), no harm done.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**ReSharper**是一个非常强大的工具，它极大地提高了.NET开发者的生产力。然而，它不是免费的，尽管我在自己的工作中每天都在使用它，但在这本书中我们不会使用它。由于我们可以在Visual
    Studio中完成所有操作而不需要ReSharper（尽管可能需要更多的按键），所以没有关系。'
- en: With Visual Studio installed, the only remaining issue is storing, safeguarding,
    and retrieving the source code. For that, we’ll use **Git** – the industry standard.
    The final application will be in the main branch, with each chapter’s code being
    in a dedicated branch.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了Visual Studio后，唯一剩下的问题是存储、保护和检索源代码。为此，我们将使用**Git** – 行业标准。最终应用程序将在主分支中，每个章节的代码将在一个专门的分支中。
- en: Git
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Git
- en: The next software you need is Git. To download Git, navigate to [git-scm.com/download](https://git-scm.com/download
    ) and choose your operating system. I’ll choose Windows. Next, I’ll choose **64-bit
    Git for Windows Setup** under **Standalone Installer**. This will cause an immediate
    download. Double-click on the downloaded file to install it. If you already have
    Git installed, this will update it.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你接下来需要的软件是Git。要下载Git，请导航到[git-scm.com/download](https://git-scm.com/download
    )并选择你的操作系统。我会选择Windows。接下来，我会在**独立安装程序**下选择**64位Git for Windows安装**。这将立即开始下载。双击下载的文件进行安装。如果你已经安装了Git，这将更新它。
- en: You do not need any of the Git GUIs, as we’ll be interacting with Git through
    Visual Studio.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要任何Git GUI，因为我们将通过Visual Studio与Git交互。
- en: 'When the installation is complete, you’ll see the following options: **Launch
    Git Bash** and **View the release notes**. Uncheck both and click on **Finish**.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，你会看到以下选项：**启动Git Bash**和**查看发行说明**。取消选中两者并点击**完成**。
- en: Let’s continue with our exploration of Visual Studio.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续探索Visual Studio。
- en: Opening Visual Studio
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打开Visual Studio
- en: 'You’ll need to obtain the rest of the software from within Visual Studio, so
    let’s open that next. If the installation went as expected, the launch dialog
    will be on the screen:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要从Visual Studio内部获取其余的软件，所以让我们先打开它。如果安装按预期进行，启动对话框将显示在屏幕上：
- en: Click on **Create a new project**. (If you’ve been brought directly into Visual
    Studio, bypassing the launch dialog, just click **File** | **New Project**.)
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建新项目**。（如果你直接进入Visual Studio，跳过了启动对话框，只需点击**文件** | **新建项目**。）
- en: 'It is now time to pick the template we want. Templates make getting started
    easier. In the `MAUI`. A few choices will be presented; you want **.NET MAUI App**,
    as shown in the following figure:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在是时候选择我们想要的模板了。模板可以让开始变得更容易。在`MAUI`中，将展示几个选择；你需要选择**.NET MAUI App**，如图所示：
- en: '![Figure 1.4 – Creating a new project'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.4 – 创建新项目'
- en: '](img/Figure_1.4_B19723.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.4_B19723.jpg)'
- en: Figure 1.4 – Creating a new project
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.4 – 创建新项目
- en: Click `ForgetMeNotDemo` (the project that you will be building as part of this
    book), but rather a sample project just to take a quick look around. Name it something
    creative such as `SampleApp` and place it in a location on your disk where you
    will be able to easily find it later. Before clicking **Next**, make sure your
    dialog looks similar to *Figure 1**.5*.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`ForgetMeNotDemo`（你将在本书中构建的项目），而不是一个只是为了快速浏览的示例项目。给它起一个有创意的名字，比如`SampleApp`，并将其放置在你稍后能轻松找到的磁盘位置。在点击**下一步**之前，确保你的对话框看起来类似于*图1**.5*。
- en: '![Figure 1.5 – Naming your project'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.5 – 命名你的项目'
- en: '](img/Figure_1.5_B19723.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.5_B19723.jpg)'
- en: Figure 1.5 – Naming your project
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.5 – 命名你的项目
- en: Click **Next** and use the dropdown to choose the latest version of .NET. At
    the time of writing, that is .NET 7\. Finally, click on **Create**.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**，然后使用下拉菜单选择.NET的最新版本。在撰写本文时，那就是.NET 7。最后，点击**创建**。
- en: Note
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Because Microsoft is always updating Visual Studio, your screens or steps may
    vary slightly. Don’t let that worry you. The version I am using is Visual Studio
    2022, version 17.4.3\. As long as yours is the same or later, you’re all set.
    But just to be sure, let’s launch the sample app (*F5*). You should see something
    that looks like *Figure 1**.6*.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 由于微软一直在更新Visual Studio，你的屏幕或步骤可能会有所不同。不要为此担心。我使用的是Visual Studio 2022，版本17.4.3。只要你的版本相同或更高，你就准备好了。但为了保险起见，让我们启动示例应用（*F5*）。你应该能看到类似*图1**.6*的东西。
- en: '![Figure 1.6 – Running your app'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.6 – 运行你的应用'
- en: '](img/Figure_1.6_B19723.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.6_B19723.jpg)'
- en: Figure 1.6 – Running your app
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.6 – 运行你的应用
- en: On the screen that you see in the preceding figure, click the button a couple
    times to make sure it is working.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在前一个图中看到的屏幕上，点击按钮几次以确保它正在工作。
- en: Generally speaking, I will not be walking through how to do simple things on
    Visual Studio. The assumption is that you are a C# programmer and so you are probably
    familiar with Visual Studio. On the other hand, on the off chance that you are
    not, I’ll describe how to do anything that is not immediately intuitive. Next,
    let’s explore the out-of-the-box app in a bit more detail.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，我不会详细介绍如何在Visual Studio上做简单的事情。假设你是C#程序员，因此你很可能熟悉Visual Studio。另一方面，万一你不熟悉，我会描述如何做任何不是立即直观的事情。接下来，让我们更详细地探索随盒装应用。
- en: Quick tour of the app
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用快速浏览
- en: 'Let’s take a quick tour to see what comes with an out-of-the-box app. First,
    stop the app by pressing the red square button in the menu bar. Make sure **Solution
    Explorer** is open (if not, go to **View** | **Solution Explorer**). Notice that
    there are three folders and four files, as shown in *Figure 1**.7*:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速浏览一下随盒装应用附带的内容。首先，通过按菜单栏中的红色方块按钮停止应用。确保**解决方案资源管理器**已打开（如果没有，请转到**视图**
    | **解决方案资源管理器**）。注意，有三个文件夹和四个文件，如图*图1**.7*所示：
- en: '![Figure 1.7 – Three folders and four files'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.7 – 三个文件夹和四个文件'
- en: '](img/Figure_1.7_B19723.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.7_B19723.jpg)'
- en: Figure 1.7 – Three folders and four files
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.7 – 三个文件夹和四个文件
- en: The files with the `.xaml` extension are XAML files – that is, they use the
    XAML markup language. I will not assume you know XAML, and in fact, throughout
    this book, I will provide layout and other code in both XAML and fluent C#, but
    that is for the next chapter.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展名为`.xaml`的文件是XAML文件——也就是说，它们使用XAML标记语言。我不会假设你知道XAML，实际上，在整个本书中，我将提供XAML和流畅C#的布局和其他代码，但这将在下一章中介绍。
- en: Right now, let’s open `this out of the` `box project`.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们打开`this out of the` `box project`。
- en: This is the entry point for the program. As you can see, it is a static class
    with a static method that is responsible for creating the app itself. We’ll come
    back to this file in subsequent chapters.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这是程序的入口点。正如你所见，它是一个静态类，包含一个静态方法，负责创建应用本身。我们将在后续章节中回到这个文件。
- en: When you open `MainPage.xaml`, you will see a layout with controls for the page
    we just looked at (with the goofy MAUI guy waving and counting our button clicks).
    Again, we’re going to come back to layout and controls, but scan this page and
    see whether you can guess what is going on. You may find that it isn’t as alien
    as it seemed at first glance. You can, if you are so motivated, learn quite a
    bit about XAML just by reading this page carefully.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当你打开`MainPage.xaml`时，你会看到一个布局，其中包含我们刚才查看的页面（带有那个古怪的MAUI人物挥手并计数我们的按钮点击）。再次强调，我们还将回到布局和控制，但扫描这个页面，看看你是否能猜出发生了什么。你可能发现它并不像第一眼看起来那么陌生。如果你有这个动力，你可以通过仔细阅读这个页面来学习很多关于XAML的知识。
- en: Click on the triangle next to `MainPage.xaml` to reveal the code-behind file.
    Code-behind files are always named `<PageName>.xaml.cs` – in this case, `MainPage.xaml.cs`.
    These files are always in C#. Here, we see the constructor and then an event handler.
    When the user clicks on the button, this event handler (`OnCounterClicked`) is
    called.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 点击`MainPage.xaml`旁边的三角形以显示代码隐藏文件。代码隐藏文件总是命名为`<PageName>.xaml.cs` – 在这个例子中，`MainPage.xaml.cs`。这些文件总是使用C#编写的。在这里，我们看到构造函数然后是一个事件处理器。当用户点击按钮时，这个事件处理器（`OnCounterClicked`）会被调用。
- en: By flipping back and forth between the XAML and the code-behind file, you may
    be able to figure out how the button works and how the count of clicks is displayed.
    No need to do this, however, as we’ll be covering all these details in upcoming
    chapters.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在XAML和代码隐藏文件之间来回切换，你可能能够弄清楚按钮是如何工作的以及点击次数是如何显示的。然而，没有必要这样做，因为我们在接下来的章节中会涵盖所有这些细节。
- en: At the moment, most of the other files are nearly empty and not worth the time
    to examine.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，其他大多数文件几乎是空的，不值得花时间去检查。
- en: Just for fun, expand the `Resources` folder. You’ll see that there are folders
    for the application icon, fonts, images, and so forth. All the resources for all
    of the platforms are kept here.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 为了好玩，展开`Resources`文件夹。你会看到有应用程序图标、字体、图像等文件夹。所有平台的所有资源都保存在这里。
- en: Then there is a `Platforms` folder, which contains whatever is needed on a per-platform
    basis. For example, iOS applications require an `info.plist` file, which you’ll
    find in **Platforms** | **iOS**.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是一个`Platforms`文件夹，它包含每个平台所需的文件。例如，iOS应用程序需要一个`info.plist`文件，你可以在**Platforms**
    | **iOS**中找到它。
- en: There is much more to see in a .NET MAUI application, but we will tackle each
    part as we build Forget Me Not™.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在Forget Me Not™应用程序中，还有很多东西可以探索，但我们将随着构建过程逐步解决每个部分。
- en: Summary
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you saw how to find, download, and install Visual Studio and
    Git, the two tools you’ll need throughout the book. You also created your first
    .NET MAUI app, and we walked through some of its files, albeit quickly.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你看到了如何找到、下载和安装Visual Studio和Git，这两样工具你将在整本书中都需要。你还创建了你的第一个.NET MAUI应用程序，并且我们快速浏览了一些文件。
- en: 'In the next chapter, we’ll take an extended look at XAML: the markup language
    for page layout and the creation of controls. We’ll then look at creating layouts
    and controls in C# and a new library that allows us to use Fluent C# to create
    layouts and controls.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入探讨XAML：页面布局和控制创建的标记语言。然后我们将探讨如何在C#中创建布局和控制，以及一个允许我们使用Fluent C#创建布局和控制的库。
- en: Quiz
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问答
- en: 'Test your understanding of this chapter by answering the following questions:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 通过回答以下问题来测试你对本章内容的理解：
- en: How do you create a new project?
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你如何创建一个新的项目？
- en: How do you find **Solution Explorer** if it is not visible?
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果`Solution Explorer`不可见，你如何找到它？
- en: What does the `.xaml` extension indicate?
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`.xaml`扩展名表示什么？'
- en: What do we call the `.cs` file associated with an `.``xaml` file?
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们称与`.xaml`文件关联的`.cs`文件为什么？
- en: Where is the entry point for a .NET MAUI app?
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: .NET MAUI应用程序的入口点在哪里？
- en: You try it
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你试试看
- en: Most chapters will have a *You try it* section, in which you will be encouraged
    to take on a task related to what was covered in the chapter. Alas, this chapter
    does not have a task for you.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数章节都会有一个*你试试看*部分，其中你会被鼓励承担与章节内容相关的任务。遗憾的是，本章没有为你设置任务。
