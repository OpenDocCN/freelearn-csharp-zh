["```cs\n<system.web>\n  <compilation debug=\"false\" targetFramework=\"4.6.2\" />\n  <customErrors mode=\"Off\" defaultRedirect=\"/home/error\"/>\n  <httpRuntime enableHeaderChecking=\"false\" enableVersionHeader=\"true\" />\n  <httpCookies requireSSL=\"false\" httpOnlyCookies=\"false\"/>\n  <pages enableEventValidation=\"false\" enableViewStateMac=\"false\" viewStateEncryptionMode=\"Never\" validateRequest=\"false\" />\n  <authentication mode=\"Forms\">\n    <forms loginUrl=\"~/Account/Login.aspx\" timeout=\"900\" enableCrossAppRedirects=\"true\" protection=\"None\" />\n  </authentication>\n</system.web>\n\n```", "```cs\n1>CSC : warning SEC0014: Insecure HTTP cookies C:WebApplicationWeb.config(11): <httpCookies requireSSL=\"false\" httpOnlyCookies=\"false\" />\n1>CSC : warning SEC0015: Cookies accessible via script. C:WebApplicationWeb.config(11): <httpCookies requireSSL=\"false\" httpOnlyCookies=\"false\" />\n1>CSC : warning SEC0003: Forms authentication does not set requireSSL to true. C:WebApplicationWeb.config(14): <forms loginUrl=\"~/Account/Login.aspx\" timeout=\"900\" enableCrossAppRedirects=\"true\" protection=\"None\" />\n1>CSC : warning SEC0004: Forms authentication does not set the cookieless attribute to UseCookies. C:WebApplicationWeb.config(14): <forms loginUrl=\"~/Account/Login.aspx\" timeout=\"900\" enableCrossAppRedirects=\"true\" protection=\"None\" />\n1>CSC : warning SEC0006: Forms authentication cookie protection attribute is not set to All. C:WebApplicationWeb.config(14): <forms loginUrl=\"~/Account/Login.aspx\" timeout=\"900\" enableCrossAppRedirects=\"true\" protection=\"None\" />\n1>CSC : warning SEC0007: Forms authentication timeout value exceeds the policy of 30 minutes. C:WebApplicationWeb.config(14): <forms loginUrl=\"~/Account/Login.aspx\" timeout=\"900\" enableCrossAppRedirects=\"true\" protection=\"None\" />\n1>CSC : warning SEC0005: Forms authentication does not set the enableCrossAppRedirects attribute to false. C:WebApplicationWeb.config(14): <forms loginUrl=\"~/Account/Login.aspx\" timeout=\"900\" enableCrossAppRedirects=\"true\" protection=\"None\" />\n1>CSC : warning SEC0002: Custom errors are disabled. C:WebApplicationWeb.config(9): <customErrors mode=\"Off\" defaultRedirect=\"/home/error\" />\n1>CSC : warning SEC0008: HTTP header checking is disabled. C:WebApplicationWeb.config(10): <httpRuntime enableHeaderChecking=\"false\" enableVersionHeader=\"true\" />\n1>CSC : warning SEC0009: The Version HTTP response header is enabled. C:WebApplicationWeb.config(10): <httpRuntime enableHeaderChecking=\"false\" enableVersionHeader=\"true\" />\n1>CSC : warning SEC0010: Event validation is disabled. C:WebApplicationWeb.config(12): <pages enableEventValidation=\"false\" enableViewStateMac=\"false\" viewStateEncryptionMode=\"Never\" validateRequest=\"false\" />\n1>CSC : warning SEC0012: Validate request is disabled. C:WebApplicationWeb.config(12): <pages enableEventValidation=\"false\" enableViewStateMac=\"false\" viewStateEncryptionMode=\"Never\" validateRequest=\"false\" />\n1>CSC : warning SEC0013: Pages ViewStateEncryptionMode disabled. C:WebApplicationWeb.config(12): <pages enableEventValidation=\"false\" enableViewStateMac=\"false\" viewStateEncryptionMode=\"Never\" validateRequest=\"false\" />\n1>CSC : warning SEC0011: ViewStateMac is disabled. C:WebApplicationWeb.config(12): <pages enableEventValidation=\"false\" enableViewStateMac=\"false\" viewStateEncryptionMode=\"Never\" validateRequest=\"false\" />\n\n```", "```cs\n<system.web>\n  <compilation debug=\"false\" targetFramework=\"4.6.2\" />\n  <customErrors mode=\"On\" defaultRedirect=\"/home/error\"/>\n  <httpRuntime enableHeaderChecking=\"true\" enableVersionHeader=\"false\" />\n  <httpCookies requireSSL=\"true\" httpOnlyCookies=\"true\"/>\n  <pages enableEventValidation=\"true\" enableViewStateMac=\"true\" viewStateEncryptionMode=\"Always\" validateRequest=\"true\" />\n  <authentication mode=\"Forms\">\n    <forms loginUrl=\"~/Account/Login.aspx\" timeout=\"15\" enableCrossAppRedirects=\"false\" protection=\"All\" requireSSL=\"true\" cookieless=\"UseCookies\" />\n  </authentication>\n</system.web>\n\n```", "```cs\n<div>\n @Html.Raw(string.Format(\"Welcome <span class=\\\"bold\\\">{0}</span>!\", ViewContext.ViewBag.UserName))\n\n @{\n   WriteLiteral(string.Format(\"Welcome <span class=\\\"bold\\\">{0}</span>!\", ViewContext.ViewBag.UserName));\n }\n</div>\n\n```", "```cs\n<div>\n <h2>Welcome <%= Request[\"UserName\"].ToString() %></h2>\n</div>\n\n```", "```cs\n<div>\n Welcome <span class=\\\"bold\\\">@ViewContext.ViewBag.UserName</span>!\n</div>\n\n```", "```cs\n<div>\n <h2>Welcome <%: Request[\"UserName\"].ToString() %></h2>\n</div>\n\n```", "```cs\nusing System.Data.Linq;\nusing System.Data.SqlClient;\nusing System.DirectoryServices;\n\npublic class Class1\n{\n  private void SQL_Injection(SqlConnection connection, string id)\n  {\n    using (DataContext context = new DataContext(connection))\n    {\n      context.ExecuteCommand(\"SELECT * FROM Items WHERE ID = \" + id);\n    }\n\n    SqlCommand cmd = new SqlCommand(\"SELECT * FROM Items WHERE ID = \" + id, connection);\n    string result = cmd.ExecuteScalar().ToString();\n  }\n\n  private void LDAP_Injection(string domain, string userName)\n  {\n    DirectoryEntry entry = new DirectoryEntry(string.Format(\"LDAP://DC={0}, DC=COM/\", domain));\n    DirectorySearcher searcher = new DirectorySearcher(entry)\n    {\n      SearchScope = SearchScope.Subtree,\n      Filter = string.Format(\"(name={0})\", userName)\n    };\n    SearchResultCollection resultCollection = searcher.FindAll();\n  }\n}\n\n```", "```cs\nSqlCommand cmd = new SqlCommand(\"SELECT * FROM Items WHERE ID = @id\", connection);\nSqlParameter parm = new SqlParameter(\"@id\", id);\ncmd.Parameters.Add(parm);\n\n```", "```cs\nWebApplicationApp_StartIdentityConfig.cs(50,41,57,14): warning SEC0017: Password validator settings do not meet the requirements - Minimum Length (12), Numeric Character (True), Lowercase Character (True), Uppercase Character (True), Special Character (True)\n...\nWebApplicationAccountLogin.aspx.cs(36,121,36,126): warning SEC0018: Password lockout is disabled. To protect accounts from brute force attacks, set the shouldLockout parameter to true.\n\n```", "```cs\n// Configure validation logic for passwords\nmanager.PasswordValidator = new PasswordValidator\n{\n RequiredLength = 12,\n RequireNonLetterOrDigit = true,\n RequireDigit = true,\n RequireLowercase = true,\n RequireUppercase = true,\n};\n\n```", "```cs\nvar result = signinManager.PasswordSignIn(Email.Text, Password.Text, RememberMe.Checked, shouldLockout: true);\n\n```", "```cs\nusing System.Configuration;\nusing System.Net.Http;\nusing System.Web.Mvc;\n\nnamespace WebApplication\n{\n  public class Class1\n  {\n    [AllowHtml]\n    public string AllowHtmlProperty { get; set; }\n\n    [HttpPost]\n    [ValidateInput(false)]\n    public ActionResult Missing_AntiForgeryToken()\n    {\n      return null;\n    }\n\n    [HttpPost]\n    public FileResult Path_Tampering(string fileName)\n    {\n      string filePath = ConfigurationManager.AppSettings[\"DownloadDirectory\"].ToString();\n      return new FilePathResult(filePath + fileName, \"application/octet-stream\");\n    }\n\n    private void Certificate_Validation_Disabled()\n    {\n      using (var handler = new WebRequestHandler())\n      {\n        handler.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;\n      }\n    }\n  }\n}\n\n```", "```cs\nprivate class ValidatedFileResult : FileResult\n{\n  public ValidatedFileResult(string filePath, string fileName, string contentType)\n  : base(contentType)\n  {\n    // Add validation logic.\n  }\n\n  protected override void WriteFile(HttpResponseBase response)\n  {\n    // Add write logic\n  }\n}\n\n```", "```cs\n <PropertyGroup>\n  <Features>IOperation</Features>\n </PropertyGroup>\n\n```", "```cs\nusing System;\n\nnamespace Namespace\n{\n  public class Class1: IDisposable\n  {\n    private static int staticField = 3;\n    private int[][] jaggedArray;\n\n    public void Method1(int usedParam)\n    {\n      Console.WriteLine(usedParam);\n    }\n\n    public void Dispose()\n    {\n      Dispose(true);\n      GC.SuppressFinalize(this);\n    }\n\n    protected virtual void Dispose(bool disposing)\n    {\n      if (disposing)\n      {\n        // Dispose resources.\n      }\n    }\n  }\n\n  public struct ValueType: IEquatable<ValueType>\n  {\n    public int Property { get; }\n\n    public override bool Equals(object obj)\n    {\n      return Equals((ValueType)obj);\n    }\n\n    public bool Equals(ValueType other)\n    {\n      return other.Property == Property;\n    }\n\n    public override int GetHashCode()\n    {\n      return Property.GetHashCode();\n    }\n\n    public static bool operator ==(ValueType left, ValueType right)\n    {\n      return left.Property == right.Property;\n    }\n\n    public static bool operator !=(ValueType left, ValueType right)\n    {\n      return left.Property != right.Property;\n    }\n  }\n}\n\n```"]