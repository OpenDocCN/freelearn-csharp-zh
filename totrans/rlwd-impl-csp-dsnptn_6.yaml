- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Step Away from the IDE! Designing with Patterns Before You Code
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 离开 IDE！在编码之前使用模式进行设计
- en: The main focus of this book is to learn the most popular and widely used **Gang
    of Four (GoF) patterns**. The secondary focus of this book is to consider using
    those patterns with real-world applications, with realistic and changing business
    requirements. Too many books on complicated topics such as patterns are full of
    abstract, contrived, or trivial examples. You have learned some popular patterns,
    but they do not benefit from your coding if you can’t apply them. Over the years,
    I’ve developed a process that works for me, and I hope it works for you too. My
    process eases you into patterns one step at a time as you consider a new design.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书的主要重点是学习最流行和最广泛使用的 **Gang of Four (GoF) 模式**。这本书的次要重点是考虑在实际应用中使用这些模式，考虑到现实和不断变化的企业需求。太多关于复杂主题（如模式）的书充满了抽象、虚构或微不足道的例子。你已经学习了一些流行的模式，但如果你不能应用它们，它们就不会从你的编码中获得好处。多年来，我开发了一套对我有效的方法，并希望它对你也有效。我的方法会逐步引导你考虑新的设计，并逐步引入模式。
- en: This might be a disturbing revelation, but this chapter will not present any
    code samples. We’ll be following the practice of diagramming our code before we
    start writing it.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是一个令人不安的发现，但本章不会提供任何代码示例。我们将遵循在编写代码之前先绘制代码图的做法。
- en: 'We’ll cover the following topics in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖以下主题：
- en: We’ll watch as the new software architect for Bumble Bikes creates a UML design
    for the new project using a two-pass method.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将观察 Bumble Bikes 的新软件架构师如何使用两步法为新项目创建 UML 设计。
- en: The new architect will make the first pass by diagramming the classes and basic
    structures for the project.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新架构师将通过绘制项目的类和基本结构进行第一次审查。
- en: The architect will then make a second pass, wherein they will identify the appropriate
    patterns and update the diagram as needed.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，建筑师将进行第二次审查，在此期间，他们将识别适当的模式并根据需要更新图。
- en: Our story of the two sisters continues in this chapter. A huge change in the
    business requirements at Bumble Bikes is about to occur. We’ll see how to adapt
    to and overcome the inherent obstacles presented by these changes using patterns.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将继续讲述两位姐妹的故事。Bumble Bikes 的业务需求将发生巨大变化。我们将看到如何使用模式适应和克服这些变化带来的固有障碍。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Since this chapter contains diagrams rather than code, my usual spiel about
    **integrated development environments** (**IDEs**) doesn’t apply. This time, we
    need a different set of tools. There are many tools for drawing UML diagrams.
    In the real world, a diagramming exercise often happens on a whiteboard. At several
    points throughout this chapter, I stop and challenge you to a diagramming exercise.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本章包含的是图表而不是代码，我关于**集成开发环境**（**IDEs**）的常规说法不适用。这次，我们需要一套不同的工具。有许多用于绘制 UML 图的工具。在现实世界中，绘图练习通常在白板上进行。在本章的几个地方，我会停下来挑战你进行绘图练习。
- en: 'If you’d like to take up the gauntlet, you’ll need some way to create and work
    with UML diagrams. If you’ve never drawn a UML class diagram before, there is
    a brief tutorial in [*Appendix 2*](B18605_Appendix_2.xhtml#_idTextAnchor204) of
    this book. A whiteboard is fine for ephemeral drawings, but for this book, my
    diagrams need to be a bit more permanent, so here’s what I’m using:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想接受挑战，你需要一种创建和使用 UML 图的方法。如果你之前从未绘制过 UML 类图，这本书的[*附录 2*](B18605_Appendix_2.xhtml#_idTextAnchor204)中有简短的教程。白板适合绘制临时草图，但在这本书中，我的图需要更加持久，所以这里是我使用的方法：
- en: A computer running the **Windows** operating system. I’m using **Windows 10**.
    Honestly, this doesn’t matter since diagramming tools are plentiful for all operating
    systems, and there are many that work in your browser.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行 **Windows** 操作系统的计算机。我使用 **Windows 10**。说实话，这并不重要，因为所有操作系统的绘图工具都很丰富，而且有很多可以在浏览器中工作。
- en: 'A diagramming tool. I’m using **Microsoft Visio**. There are quite a few UML
    tools on the market. Here is a short list of tools I’ve used over the years:'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个绘图工具。我使用 **Microsoft Visio**。市场上有很多 UML 工具。以下是我多年来使用的一些工具的简要列表：
- en: '**Microsoft Visio**'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Microsoft Visio**'
- en: '**StarUML**'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**StarUML**'
- en: '**Altova UModel**'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Altova UModel**'
- en: '**Dia**'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Dia**'
- en: '**Umbrello**'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Umbrello**'
- en: '**UMLet**'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UMLet**'
- en: '**OmniGraffle** (**Mac** only)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OmniGraffle**（仅限**Mac**）'
- en: You can find the completed project files for this chapter on GitHub at [https://github.com/Kpackt/Real-World-Implementation-of-C-Design-Patterns/tree/main/chapter-6](https://github.com/Kpackt/Real-World-Implementation-of-C-Design-Patterns/tree/main/chapter-6).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在GitHub上找到本章的完整项目文件，链接为[https://github.com/Kpackt/Real-World-Implementation-of-C-Design-Patterns/tree/main/chapter-6](https://github.com/Kpackt/Real-World-Implementation-of-C-Design-Patterns/tree/main/chapter-6)。
- en: As our story continues, we see a curve ball that threatens to unravel all the
    work the sisters have accomplished. In the real world, business requirements change
    all the time. Sometimes they are small changes and they do not really affect the
    project. Other times, the changes are radical. The sisters are about to face a
    personal crisis. How should they respond? Should they take the quick and easy
    path and throw some stovepipe patches in place? I think by now, we’ve learned
    that patches lead to a big ball of mud on a large plate of spaghetti! However,
    if we use a disciplined and considerate approach, we might be able to avoid that
    kind of devolution.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 随着故事的发展，我们看到一个曲线球威胁要破坏姐妹们所完成的所有工作。在现实世界中，业务需求总是不断变化。有时这些变化很小，并不会真正影响项目。而有时，变化是激进的。姐妹们即将面临个人危机。她们应该如何应对？是选择捷径，随意修补一些问题，还是我们应该已经学到的，修补只会导致一大团混乱？然而，如果我们采取严谨和周到的态度，我们或许能够避免这种退化。
- en: Let’s see what happens.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看会发生什么。
- en: A bad day at the agency
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机构里的一天糟糕透顶
- en: Tom’s phone rang at 3:58 on a Friday afternoon at his agency. The phone was
    on his desk, and he had been talking with his colleagues in another cubicle. Their
    development team had been working on a software project for a client. The first
    few releases had gone off without a hitch, and the customers were delighted. The
    customers were so happy that they even sent over a boatload of new feature requests
    and signed a contract extension. It was shortly after the contract extension that
    things started to turn ugly. Tom’s development team was way behind schedule. Implementing
    the last round of feature requests had left their client’s product unstable and
    it was crashing often. Tom was currently in a code review meeting. The group had
    concluded the project’s code was in dire trouble. Their management, in an effort
    to steal a quick win and impress their new client, had ordered the team to ship
    the first prototype. The next few releases came quickly. The client’s impression
    of the agency was that they were staffed entirely by miracle workers. However,
    beneath that façade (not the pattern this time), they were having trouble finding
    a way to extend and fix the code without a full rewrite. They found they had created
    a big ball of mud.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 周五下午3:58，汤姆在机构的电话响了。电话放在他的桌子上，他刚刚在和另一个隔间里的同事交谈。他们的开发团队一直在为一个客户的项目工作。前几轮发布都没有出现任何问题，客户非常满意。客户如此高兴，甚至送来了一大堆新的功能请求，并签署了合同延期。就在合同延期之后，事情开始变得糟糕。汤姆的开发团队远远落后于进度。实施最后一轮功能请求使得他们的客户产品变得不稳定，经常崩溃。汤姆目前正在参加代码审查会议。小组得出结论，项目的代码处于极度困境。他们的管理层为了迅速取得胜利并给新客户留下深刻印象，命令团队交付第一个原型。接下来的几轮发布来得很快。客户对机构的印象是他们完全由奇迹工作者组成。然而，在这层表象之下（这次不是模式），他们发现很难在不进行全面重写的情况下扩展和修复代码。他们发现他们已经创造了一大团混乱。
- en: It took Tom a minute to maneuver his wheelchair around the cubicle to get back
    to his desk and answer the ringing phone. It was his boss’ boss, Stephanie. “*That’s
    odd. She never calls me,*” Tom thought. “Also, isn’t she on vacation in Antigua?”
    She wasn’t supposed to come back until next week.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆花了整整一分钟才将轮椅在隔间里转来转去，回到自己的办公桌前接听响起的电话。电话是他的上司的上司，斯蒂芬妮。“*这真奇怪，她从不给我打电话，*”汤姆想。“而且，她不是在安提瓜度假吗？”她本应下周才回来。
- en: Puzzled, Tom answered his phone and Stephanie started right in with her thick
    accent. “Tahm! We need to tawk.” It was a short conversation. It ended abruptly,
    along with Tom’s employment with the agency. He’d been fired. He was in shock.
    Everything had been going so well until, suddenly, it wasn’t. Stephanie was notoriously
    mercurial and often punished her employees at the slightest hint of any dissatisfaction
    from her coven of supervisors. She was on the fast track to the top and she wasn’t
    about to let a bunch of nerds derail her trajectory.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 感到困惑，汤姆接起电话，斯蒂芬妮带着浓重的口音立刻开始说话。“汤姆！我们得谈谈。”这是一次简短的对话。它突然结束，汤姆在机构的雇佣关系也随之结束。他被解雇了。他感到震惊。一切原本都进行得很好，直到突然之间，一切都变了。斯蒂芬妮以喜怒无常著称，一旦她的主管团队中有人对她有任何不满的迹象，她就会惩罚她的员工。她正快速晋升到高层，她不会让一群书呆子破坏她的轨迹。
- en: Tom remembered one time, on a different project, he had devised a method to
    save time and money on production by automating a difficult and error-prone process.
    It worked. The project went through **quality assurance** (**QA**) and all the
    way to production. The customers had no complaints with the release and Tom’s
    new methods would save a lot of time on future projects, thus making those projects
    more profitable. Stephanie hadn’t shown interest in any of Tom’s work until she
    heard about his process changes while eating at one of the management team’s power
    lunches. Stephanie was livid. She hated the changes so much that she berated Tom
    and made him do the whole project over again. She pulled the release from production
    and, in front of the company owners, blamed Tom for the release being late.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆记得有一次，在一个不同的项目上，他想出了一个方法，通过自动化一个困难和易出错的流程来节省生产和时间。这成功了。项目通过了**质量保证**（**QA**）并一直进行到生产阶段。客户对这次发布没有投诉，汤姆的新方法将为未来的项目节省大量时间，从而使得这些项目更有利可图。直到在一次管理层聚餐中听到汤姆关于流程变更的消息，斯蒂芬妮才对汤姆的工作表现出兴趣。她非常愤怒。她如此讨厌这些变化，以至于她责备汤姆，并让他重新做整个项目。她撤回了生产中的发布，并在公司所有者面前将发布延迟归咎于汤姆。
- en: Tom had hoped the success of the current project had placed him back in management’s
    good graces. Apparently, it had not. Tom sat there stupefied for a few minutes,
    and then he heard Travis’ phone ring. Travis, a hot-shot C# developer, had the
    cube next to Tom’s. Travis disliked Stephanie so much he had assigned a ring tone
    to her number on his phone. It was the chorus to the song *Evil Woman*, by the
    band Electric Light Orchestra (ELO). When he heard the song’s signature guitar
    riff, he knew what was happening. It wasn’t just Tom being let go—it was the whole
    team. One after another, the phones rang, and after a short, demoralizing one-sided
    conversation, a heavy awkwardness settled like a thick fog.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆希望当前项目的成功让他重新回到管理层的良好关系中。显然，并非如此。汤姆在那里愣了几分钟，然后他听到特拉维斯的电话响了。特拉维斯是一位热门的C#开发者，他的隔间在汤姆旁边。特拉维斯非常讨厌斯蒂芬妮，以至于他在手机上为她设置了铃声。这是乐队Electric
    Light Orchestra（ELO）的歌曲《Evil Woman》的副歌。当他听到这首歌标志性的吉他独奏时，他知道发生了什么。这不仅仅是汤姆被解雇，而是整个团队。一个接一个的电话响起，经过短暂而令人沮丧的单方面对话后，一种沉重的尴尬感像浓雾一样笼罩下来。
- en: Suddenly, the team’s bullpen area was inundated with the agency’s security team
    who were demanding that the developers box their personal effects. The developers
    were ordered not to touch a computer, not even a keyboard. Travis helped Tom with
    his boxes as he loaded them into the back of Tom’s specially configured Toyota
    Sienna. Tom had gotten the van tricked out with special equipment that allowed
    him to drive, something his doctors had told him he would never be able to do
    on his own. The steering mechanism was his own design. Tom wondered how he would
    continue making the payments on the van now that he was unemployed.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 突然，团队的工作区被机构的安保团队淹没，他们要求开发者打包他们的个人物品。开发者被命令不要触摸电脑，甚至键盘。特拉维斯帮助汤姆打包，当他把箱子装进汤姆特别配置的丰田赛纳车后部时，汤姆正在帮忙。汤姆已经把货车改装成特殊设备，这让他能够自己驾驶，这是他的医生告诉他他永远无法独自做到的事情。转向机制是他自己的设计。汤姆想知道现在他失业了，他将如何继续支付货车的款项。
- en: For the next few days, Tom looked around on all the job boards, hoping to find
    a new job. His disability made this difficult. He was confined to a wheelchair
    and had limited use of his hands. Tom typed his code with his feet using a special
    keyboard. It was mounted on a platform to his wheelchair, just below his ankles.
    Tom also had a speech impediment that made him difficult to understand. Travis
    and his other colleagues had adapted to his voice, so for them, it was no problem.
    They understood him as if there were nothing wrong. Tom was realizing that wherever
    he went, he was going to have to start over and it wasn’t going to be easy. As
    Tom mulled this over, he realized he was late for his volunteer shift. Once a
    month, Tom visited patients at a Dallas hospital who had recently suffered injuries
    that left them unable to walk. He helped them adjust and showed them very practical
    tips for getting around in a wheelchair. Tom smiled. Maybe he could put in more
    time with his charity work while he looked for a new job.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几天里，汤姆在所有的招聘网站上四处寻找，希望能找到一份新工作。他的残疾使这变得很困难。他被困在轮椅上，手的使用有限。汤姆用脚打字编写代码，使用一个特殊的键盘。键盘安装在轮椅平台上，就在他的脚踝下方。汤姆还有语言障碍，这使得他很难被理解。特拉维斯和他的其他同事已经适应了他的声音，对他们来说，这并不是问题。他们理解他就像没有任何问题一样。汤姆意识到无论他去哪里，他都将不得不从头开始，而且这不会容易。当汤姆思考这个问题时，他意识到他错过了他的志愿者班次。每个月一次，汤姆会访问达拉斯医院最近受伤无法行走的患者。他帮助他们适应，并展示了非常实用的轮椅使用技巧。汤姆微笑着。也许当他寻找新工作时，他可以在慈善工作中投入更多的时间。
- en: Bumble Bikes factory – Dallas, Texas
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Bumble Bikes工厂 - 德克萨斯州达拉斯
- en: It was midnight on a dark and stormy night. Phoebe was wide awake. While she
    had slept during the day, her sister, Kitty, finished the code for Phoebe’s revolutionary
    bicycle computer. Phoebe felt a mixture of jealousy and pride as she eyed the
    results of her sister’s successful implementation of the Strategy pattern. Now
    it was Kitty’s turn to crash. She stretched out on the breakroom couch at Bumble
    Bikes. Phoebe’s phone rang. It was her mother. It wasn’t unusual for her mother
    to call late at night. Phoebe picked up the phone and her expression stiffened.
    “KITTY, WAKE UP! DADDY IS IN THE HOSPITAL!” she shouted to her sister.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 那是一个黑暗且暴风雨的午夜。菲比清醒着。虽然她白天睡觉了，但她的妹妹契蒂完成了菲比革命性的自行车电脑的代码。当菲比看到她妹妹成功实现策略模式的结果时，她感到既嫉妒又自豪。现在轮到契蒂崩溃了。她在Bumble
    Bikes的休息室沙发上伸展开来。菲比的手机响了。是她母亲打来的。她母亲深夜打电话并不罕见。菲比拿起电话，她的表情变得僵硬。“契蒂，醒醒！爸爸住院了！”她对她的妹妹喊道。
- en: Kitty, half asleep, let her sister drive the Jeep to the hospital. She hadn’t
    realized the vehicle was capable of such speed. Kitty was wide awake from white-knuckled
    terror by the time they completed the short trip up Interstate Highway 75 to the
    hospital.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 契蒂半梦半醒，让她的妹妹驾驶吉普车去医院。她没有意识到这辆车能达到如此速度。当他们完成前往医院的高速公路75号州际公路的短途旅行时，契蒂从紧张恐惧中惊醒，她的手都攥白了。
- en: They found their mother, Karina, outside the hospital room. “The doctor is with
    him now,” she explained. “What happened?” Phoebe asked. The girls could hear the
    fear in their mother’s voice. Their father was strong. He rarely got sick, and
    he never complained about the common aches and pains everyone gets from time to
    time. None of the three women had considered the possibility they would ever need
    to take him to the hospital.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 他们发现母亲卡瑞娜在医院的病房外。“医生现在和他在一起，”她解释道。“发生了什么事？”菲比问道。她们能听到母亲声音中的恐惧。她们的父亲很坚强。他很少生病，而且他从不会抱怨那些每个人时不时都会有的普通疼痛。三位女性都没有想过她们会需要把他送到医院。
- en: “He’s been tired for the last few days. This last weekend, he took one of your
    new road bikes to ride in the *Cow Creek Classic*,” Karina explained. The girls
    knew this was a bicycle rally for charities supported by the local Rotary Club
    in a nearby small town. “He’s also been complaining about a rash on the top of
    his head. We thought it was an infected tick bite or something. This morning when
    he woke up, he couldn’t lift his head off his pillow. He couldn’t sit up, and
    he was in tremendous pain. He just started crying and couldn’t stop. I called
    an ambulance, and they brought us here.”
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: “他最近几天都很累。这个周末，他骑了你的一辆新公路自行车去参加*Cow Creek Classic*，”卡瑞娜解释道。女孩们知道这是一个由附近小镇当地扶轮社支持的慈善自行车拉力赛。“他还抱怨头上有个疹子。我们以为是感染了蜱虫咬伤或其他什么。今天早上当他醒来时，他无法抬起头离开枕头。他无法坐起来，而且他非常痛苦。他开始哭泣，停不下来。我打电话叫了救护车，他们把我们带来了。”
- en: Several hours passed. Various doctors and nurses entered the room and left.
    Some brought equipment, while some left the room with vials of blood. Finally,
    the attending physician came out of the room. He was tall, slender, and spoke
    with a thick Eastern European accent, He was wearing a black leather jacket where
    one might expect a lab coat. Phoebe couldn’t help but think he reminded her of
    every Bond villain she’d ever seen in a movie. When he spoke to Karina, his English
    was fast and muddy, but his words were precise in their effect. “Your husband
    has dermatomyositis. It’s a rare autoimmune disease usually caused by a virus.
    We’ll need a surgeon to biopsy his legs to confirm my diagnosis.” Kitty asked,
    “What does that mean?”
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 几个小时过去了。各种医生和护士进入房间又离开。有些人带着设备，而有些人则带着装有血液的试管离开房间。最后，主治医师从房间里走了出来。他身材高大，苗条，说话带有浓重的东欧口音，他穿着一件黑色皮夹克，而不是人们通常期望的实验室白大褂。菲比忍不住想，他让她想起了在电影中见过的每一个邦德反派。当他与卡瑞娜交谈时，他的英语说得又快又含糊，但他的话在效果上却非常精确。“你的丈夫患有皮肌炎。这是一种罕见的自身免疫性疾病，通常由病毒引起。我们需要一位外科医生来对他的腿进行活检以确认我的诊断。”基蒂问道，“那是什么意思？”
- en: The doctor went on to explain that the symptoms of the disease begin with a
    virus. “The body produces an immune response tailored to attack the virus. Once
    the virus is gone, however, the immune response mistakes healthy tissue for the
    infection and destroys it. In the case of dermatomyositis, the disease attacks
    the capillaries, which are small hair-like blood vessels. Every time you take
    a breath, your lungs add oxygen to your blood. This blood is carried through the
    arteries along with nutrients to the rest of your body, including your muscles.
    Your muscles use the oxygen and the nutrients, then expel waste materials that
    are taken by your veins back through your liver and kidneys. There the waste from
    the cells is filtered out and blood goes back to the heart, then to your lungs
    where the process starts over. Dermatomyositis attacks the tiny capillary blood
    vessels, which cuts off your muscles from the rest of your circulatory system.
    Basically, your muscles begin to die. When that happens, the body initiates an
    inflammatory response, which causes a great deal of pain. That’s why your father
    couldn’t stop crying.” The doctor continued. “Think about your worst sore muscle
    pain. We can measure that in your blood by testing for a chemical called creatine
    kinase (CK). A day or two after your hard workout, it would be normal to see your
    CK levels at 150 units. If you were a Dallas Cowboys football player at training
    camp, they might go as high as 300 units. Your father’s CK level is at 10,000
    units. We’ve put him on steroids and painkillers to make him comfortable.”
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 医生继续解释说，这种疾病的症状始于病毒。“身体会产生一种针对病毒的免疫反应。然而，一旦病毒消失，免疫反应就会错误地将健康组织误认为是感染并摧毁它。在皮肌炎的情况下，疾病攻击的是毛细血管，这些血管是细小的毛发状血管。每次你呼吸时，你的肺部都会将氧气添加到你的血液中。这种血液通过动脉携带营养输送到你身体的各个部位，包括你的肌肉。你的肌肉使用氧气和营养，然后通过静脉将废物材料排出，这些废物材料通过肝脏和肾脏被带走。在那里，细胞中的废物被过滤出来，血液返回心脏，然后到肺部，这个过程重新开始。皮肌炎攻击的是微小的毛细血管，这切断了你的肌肉与整个循环系统的联系。基本上，你的肌肉开始死亡。当这种情况发生时，身体会启动一种炎症反应，这会导致极大的痛苦。这就是为什么你父亲无法停止哭泣。”医生继续说。“想想你最糟糕的肌肉疼痛。我们可以通过检测一种叫做肌酸激酶（CK）的化学物质来测量这种疼痛。在你艰苦训练后的第一天或第二天，你的CK水平达到150单位是正常的。如果你是达拉斯牛仔橄榄球队在训练营的球员，他们的CK水平可能会高达300单位。你父亲的CK水平是10,000单位。我们已经给他开了类固醇和止痛药，让他感到舒适。”
- en: '“*What is the treatment*?” Phoebe asked. The doctor answered grimly: “*Dermatomyositis
    has no cure**. We can try chemotherapy to reduce the immune response that’s hurting
    him and destroying his muscles.*” Kitty’s face dropped and she almost started
    to cry. This was the problem with having a mind that is always two steps ahead.
    “*What happens if it reaches his heart or the muscles that he uses to breathe?*”
    she asked. The doctor’s expression was stolid. “*The disease won’t affect his
    heart since it’s made from a different kind of muscle tissue. But his diaphragm*
    *is a concern. It will take quite a while before that begins to happen. Let’s
    run some tests and try some treatments to slow down muscle degeneration. We need
    to stall the disease for time. It is always possible the disease will go into
    remission,*” the doctor replied.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: “*治疗是什么*？”菲比问道。医生严肃地回答：“*硬皮病没有治愈方法**。我们可以尝试化疗来减少正在伤害他并破坏他肌肉的免疫反应。””凯蒂的脸色变得沉重，她几乎要哭出来了。这就是总是领先两步的思维方式的麻烦。“*如果它影响到他的心脏或他用来呼吸的肌肉怎么办*？”她问道。医生的表情坚定。“*疾病不会影响他的心脏，因为它是用不同类型的肌肉组织制成的。但他的横膈膜*
    *是个问题。这需要相当长的时间才会开始发生。让我们做一些测试并尝试一些治疗方法来减缓肌肉退化。我们需要为疾病争取时间。疾病进入缓解是可能的，”医生回答说。
- en: “*You said there isn’t a cure!”* Phoebe said angrily. She wasn’t mad at the
    doctor. She was mad because she wasn’t used to feeling helpless. “*There isn’t,”
    the doctor said. “But sometimes the disease just stops and becomes dormant. He’ll
    have it forever, but if his body can find balance, his muscles might return to
    normal. I don’t want to give you any false hopes. This disease is extremely rare,
    and all patients react to the treatment differently. Your father’s case is extremely
    aggressive. Yesterday he could walk. Today, he can’t. He may never recover, or
    he may be totally fine next year. There is no way to tell. For now, we have to
    get those CK levels under control and stop the damage to your father’s muscles*.”
    The doctor put a professional but comforting hand on Karina’s arm and strode off,
    disappearing into the throngs of lab coats and scrubs that filled the hallway
    despite the late hour.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: “*你说没有治愈方法！*”菲比生气地说。她并不是生医生的气。她生气的是她不习惯感到无助。“*没有，”医生说。“但有时疾病会停止并进入休眠状态。他将永远拥有它，但如果他的身体能够找到平衡，他的肌肉可能会恢复正常。我不想给你任何虚假的希望。这种疾病非常罕见，所有患者对治疗的反应都不同。你父亲的病例非常严重。昨天他还能走路。今天，他不能了。他可能永远无法恢复，或者他明年可能完全没事。没有办法预测。现在，我们必须控制那些CK水平，并停止对你父亲肌肉的损害。”医生把手放在卡丽娜的胳膊上，专业而安慰地走开了，消失在尽管是深夜但仍然挤满实验室外套和手术服的人群中。
- en: The next month was tough for the whole family. There were constant trips for
    chemotherapy, physical therapy, and endless rounds of tests. As the disease progressed,
    the girls’ father lost the ability to speak, and one day, he could no longer swallow.
    The doctors implanted a rubber feeding tube in the wall of his stomach, and the
    strange new life continued. The four always held on to the doctor’s idea of remission.
    It could happen any day or never. They all chose to hold on to *any day*.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 下个月对整个家庭来说都很艰难。他们不断地往返于化疗、物理治疗和无数次的检查。随着疾病的进展，女孩们的父亲失去了说话的能力，有一天，他再也无法吞咽。医生在他的胃壁上植入了一根橡胶喂食管，奇怪的新生活就这样继续了。他们四个人总是坚持医生关于缓解的想法。这可能会在任何一天发生，也可能永远不会发生。他们都选择了坚持“任何一天”。
- en: Their mother, Karina, fought with the medical insurance company for weeks. They
    had denied all their father’s medical claims because dermatomyositis is so rare
    there is no prescribed treatment for it from the United States Food and Drug Administration
    That meant all lifesaving treatments the doctor tried were denied because the
    treatments were classified as experimental.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的母亲，卡丽娜，与医疗保险公司在几周内进行了斗争。他们拒绝了一切关于他们父亲的医疗索赔，因为硬皮病非常罕见，美国食品药品监督管理局没有为其指定治疗方法。这意味着医生尝试的所有救命治疗方法都被拒绝，因为这些治疗方法被归类为实验性的。
- en: Another insurance battle was over a wheelchair. Clearly, their father, who had
    very little use of his arms and legs, needed an electric chair, but they didn’t
    have the $10,000 to purchase the one his physical therapy team had recommended.
    After months of hospital and outpatient treatments, the family was roughly 1 million
    dollars in debt, having wiped out all their savings, stocks, and retirement accounts.
    This made buying a chair on credit impossible. Their father was a proud man and
    refused to let the girls sell Bumble Bikes to cover his illness. In fact, the
    profits from Bumble Bikes were keeping the family afloat. After their mother went
    through several rows with the insurance company, Phoebe got that look on her face
    like the one she had when she was sitting upside down at the factory in front
    of the TV. Something was about to happen. Something radical.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 另一场保险之战是关于一辆轮椅。显然，他们的父亲，由于他的胳膊和腿几乎无法使用，需要一辆电动轮椅，但他们没有1万美元来购买他们物理治疗团队推荐的那一辆。经过几个月的医院和门诊治疗，这个家庭负债大约100万美元，已经耗尽了他们的所有储蓄、股票和退休账户。这使得他们无法通过贷款购买轮椅。他们的父亲是一个骄傲的人，拒绝让女孩们卖Bumble
    Bikes来支付他的疾病费用。事实上，Bumble Bikes的利润正在维持这个家庭的生计。在他们的母亲与保险公司多次交涉后，菲比脸上露出了她在工厂电视前倒立时的那种表情。似乎即将发生什么。一件激进的事情。
- en: The door to Phoebe’s lab was locked for the next 3 days. Not even pizza boxes
    or fizzy water came in or out. Strange shadows danced in the eerie glow of half
    a dozen organic light-emitting diode monitors connected to Phoebe’s computer,
    which was visible beneath the crack under her door. On the third day, she emerged
    like an angel rolling away a great stone. Tucked under her left arm was a rolled
    tube of large format printing. It looked like blueprints for something. Phoebe
    called everyone in the factory together for a big meeting. The factory in Alpine
    joined via Zoom. Intrigued, Kitty took her usual spot at the head of the table
    in the conference room. Over the next hour, Phoebe revealed her plan. Bumble Bikes
    would now be manufacturing wheelchairs! Kitty was excited, but there was one big
    problem she brought up after the meeting. The two of them were already stretched
    thin running the bicycle business and tending to their father. The factories had
    to stay open to pay the mortgage. They would need help. They needed someone who
    knew software coding and architecture, preferably someone with experience working
    with disabled people, who were their target customers. They wanted someone for
    whom their new mission could become personal.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 菲比的实验室门锁了3天。连披萨盒或汽水都不进出。在菲比电脑下方门缝的诡异光芒中，几个有机发光二极管显示器投下了奇怪的影子。第三天，她像天使一样滚开一块大石头。她左臂下夹着一个大尺寸打印机的卷筒。看起来像某种蓝图。菲比召集工厂里的每个人都来参加一个大型会议。阿尔卑斯山的工厂通过Zoom加入。好奇的凯蒂坐在会议室桌子头部的位置。在接下来的一个小时内，菲比揭示了她的计划。Bumble
    Bikes现在将开始制造轮椅！凯蒂很兴奋，但在会议结束后，她提出了一个很大的问题。他们俩已经因为经营自行车业务和照顾他们的父亲而筋疲力尽。工厂必须保持开放以支付抵押贷款。他们需要帮助。他们需要一个人，这个人懂得软件编码和架构，最好是有人有与残疾人一起工作的经验，他们是他们的目标客户。他们希望这个人能将他们的新使命变成个人使命。
- en: A physical rehabilitation clinic – Dallas, Texas
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一家物理康复诊所 - 德克萨斯州达拉斯
- en: '“*You have to use* *the bed to bounce yourself onto your chair,*” said Tom.
    His speech was muddy and loud, but his new patient understood. The patient had
    been diagnosed with some disease Tom had never heard of before: “*Dermato something
    something*.” He was trying to teach the patient how to get out of bed and into
    a wheelchair. The new patient didn’t have the muscle strength to stand up and
    sit down, therefore he couldn’t maneuver from bed to chair easily. His doctors
    were considering letting him go home once he could master movement from the bed
    to the chair; the alternative was being sent to a nursing home.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: “*你必须用床把自己弹到椅子上，*”汤姆说。他的话含糊不清且声音洪亮，但他的新病人理解了。病人被诊断出患有汤姆以前从未听说过的某种疾病：“*皮肤病什么什么*。”他正在教病人如何从床上到轮椅上。新病人没有足够的肌肉力量站起来和坐下，因此他不能轻易地从床到轮椅移动。他的医生们正在考虑在他能够掌握从床到椅子的移动后让他回家；另一种选择是被送到养老院。
- en: The patient was determined not to go to the nursing home, and what he lacked
    in fine motor control, he could make up in large movements. Tom had the idea to
    have the patient propel his body upward, and when he came back down, the springs
    in the bed would bounce him up just high enough to trampoline him into his wheelchair.
    The patient threw himself up with everything he had in him. He bounced. He missed
    and, lacking the ability to catch himself, landed with a hard thud on the cold
    tile floor. Tom didn’t help him back up. The patient knew he had to learn to do
    this for himself. It was hard to watch but necessary.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 病人决心不去养老院，尽管他在精细运动控制方面有所欠缺，但他可以通过大幅度的动作来弥补。汤姆有了让病人将身体向上推的想法，当他下来时，床上的弹簧会将他弹得足够高，以便像蹦床一样跳进轮椅。病人用尽全身力气向上跳。他弹了起来。他没跳进去，由于没有能力抓住自己，重重地摔在了冰冷的地板上。汤姆没有帮他站起来。病人知道他必须学会自己这样做。这很难看，但却是必要的。
- en: “*Help him up NOW!”* a woman yelled from the doorway. Tom was startled at both
    the loud noise and the unusual sight of two stunningly beautiful women purposefully
    moving toward the patient. Clearly, logistics had not been a consideration when
    Phoebe barked the command. It wasn’t as though Tom could just scoop up a 200-pound
    man and put him back in his chair. “*No, don’t!*” the girls’ father said weakly.
    He understood. He had to fight his way up into the chair even if it took a minute
    or several hours. “*Wait outside*,” their father said. It was understood by all,
    including Tom, that they were dismissed.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: “*现在就帮他站起来！*”一个妇女从门口大声喊道。汤姆对这巨大的噪音和两个令人惊艳的美丽女人故意朝病人走来的不寻常景象感到震惊。显然，当菲比发出命令时，并没有考虑到后勤问题。毕竟，汤姆不可能轻易地抱起一个200磅重的男人，把他放回椅子上。“*不，不要！*”女孩们的父亲虚弱地说。他理解。即使需要一分钟或几个小时，他都必须自己努力站起来。“*在外面等着*，”他们的父亲说。所有人都明白了，包括汤姆，他们被解除了。
- en: The small group waited outside the hospital room and introductions were made.
    The girls had come to tell their father about their plans to make him, and everyone
    else that needed one, a quality wheelchair, even if they were unable to pay. Bumble
    Bikes had become a charity overnight. As Tom listened to the plans, his face changed
    and his body stiffened. He had not known it, but when he left home that morning,
    it was going to be the first day of his new job. He had always dreamed of working
    as a software architect at a hot start-up. He knew his experience designing new
    software projects using patterns from the onset was going to be valuable. He had
    found his dream job.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 小组在医院房间外等待，并进行了自我介绍。女孩们来告诉她们的父亲她们的计划，即为他，以及任何需要的人，制作一辆高质量的轮椅，即使他们无法支付。Bumble
    Bikes一夜之间变成了一个慈善机构。当汤姆听到这些计划时，他的脸色变了，身体也僵硬了。他不知道，但那天早上离开家时，这将是他新工作的第一天。他一直梦想着在一家热门初创公司担任软件架构师。他知道他使用从一开始就使用的模式来设计新软件项目的经验将会很有价值。他找到了他的梦想工作。
- en: Designing with patterns
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用模式进行设计
- en: Back at the Dallas factory, Kitty and Phoebe spent several days taking Tom through
    all the ins and outs of Bumble Bikes. He got an intimate tour of the factory (the
    physical one, not the pattern) and learned everything about its operations and
    capabilities. He also studied the advanced robotics systems designed and implemented
    by Phoebe and Kitty. It would be his job to design a similar system to manufacture
    the best wheelchairs anyone had ever seen.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 回到达拉斯工厂，凯蒂和菲比花了几天时间向汤姆介绍Bumble Bikes的所有细节。他得到了工厂的亲密参观（物理意义上的，不是图案上的）并了解了其运作和功能。他还研究了菲比和凯蒂设计的先进机器人系统。他的工作将是设计一个类似的系统来制造任何人见过的最好的轮椅。
- en: 'Tom worked with Phoebe on the wheelchair designs. The designs were for three
    different models. The first, the flagship model, was Phoebe’s idea for the ultimate
    power chair. It was called the *Texas Tank* and it would be comfortable and capable.
    The chair would be able to take its owner anywhere by using track designs similar
    to those on a tank or bulldozer. Stairs, offroad terrain, and even ice would not
    be a problem. You can see the **computer-aided design** (**CAD**) design here:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆和菲比一起工作，设计轮椅。设计有三个不同的型号。第一个，旗舰型号，是菲比对终极动力轮椅的想法。它被称为*德克萨斯坦克*，将会舒适且功能强大。这把椅子将能够通过使用类似于坦克或推土机的轨道设计，将它的主人带到任何地方。楼梯、越野地形，甚至冰都不是问题。你可以在这里看到**计算机辅助设计**（**CAD**）设计：
- en: '![Figure 6.1: The Texas Tank would be the ultimate design for a powered wheelchair
    ](img/B18605_Figure_6.1.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图6.1：德克萨斯坦克将是电动轮椅的终极设计](img/B18605_Figure_6.1.jpg)'
- en: 'Figure 6.1: The Texas Tank would be the ultimate design for a powered wheelchair'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.1：德克萨斯坦克将是电动轮椅的终极设计
- en: 'Tom came up with a second idea. He planned to build a chair for people who
    couldn’t use their legs but were otherwise very strong. He planned for something
    light and fast that might be used for competitive sports, such as basketball.
    Phoebe, with this goal in mind, devised a wheelchair with cambered wheels and
    shorter lower-back support to allow a greater range of motion. She called it the
    *Maverick*, which is a cowboy who plays by his own rules. You can see this design
    here:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆又提出了第二个想法。他计划为那些不能使用腿但其他方面非常强壮的人制作一把椅子。他计划制作一个轻便快速，可能用于竞技运动，如篮球的椅子。菲比带着这个目标，设计了一款带有弧形轮子和较短的腰部支撑的轮椅，以允许更大的运动范围。她称之为
    *Maverick*，这是一个按自己规则行事的牛仔。您可以在下面看到这个设计：
- en: '![Figure 6.2: The Maverick ](img/B18605_Figure_6.2.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.2：Maverick](img/B18605_Figure_6.2.jpg)'
- en: 'Figure 6.2: The Maverick'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.2：Maverick
- en: 'The last model is what Phoebe bemusingly called the *Plano Wheelchair*. “It’s,
    you know, just a plain ol’ wheelchair,” Phoebe said. So far, all of Bumble Bikes’
    products were named after something related to Texas. The city of Plano, Texas,
    lent its name to the pun. It’s light, compact, and functional, and it gets you
    where you need to be. “Maybe it’s used temporarily, or with some upgrades to the
    seat, maybe you use it forever,” Phoebe explained. You can see the design for
    the *Plano Wheelchair* here:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个模型是菲比戏称的 *平面轮椅*。“你知道的，它只是一个普通的轮椅，”菲比说。到目前为止，Bumble Bikes 的所有产品都是以与德克萨斯州相关的事物命名的。德克萨斯州的普兰诺市为这个双关语提供了名字。它轻便、紧凑、实用，能把你带到你需要去的地方。“也许它只是临时使用，或者通过升级座椅，也许你会永远使用它，”菲比解释道。您可以在下面看到
    *平面轮椅* 的设计：
- en: '![Figure 6.3: The Plano Wheelchair, because it’s just a plain ol’ wheelchair
    ](img/B18605_Figure_6.3.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.3：平面轮椅，因为它只是一个普通的轮椅](img/B18605_Figure_6.3.jpg)'
- en: 'Figure 6.3: The Plano Wheelchair, because it’s just a plain ol’ wheelchair'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3：平面轮椅，因为它只是一个普通的轮椅
- en: Phoebe and Tom showed their designs to Kitty. She loved them. Phoebe stated,
    “When we made the bicycle factories, and the software, we built everything as
    we went along. We didn’t really know what we were doing. We learned patterns as
    they were needed. We’re kind of hoping we could leverage our experience along
    with yours to get this done a little faster than last time.”
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 菲比和汤姆向基蒂展示了他们的设计。她非常喜欢。菲比说：“当我们制作自行车工厂和软件时，我们是边做边建的。我们并不真正知道我们在做什么。我们需要什么模式就学习什么。我们希望利用我们的经验加上你的经验，比上次更快地完成这项工作。”
- en: “And hopefully with fewer mistakes,” Kitty chimed in. Phoebe rolled her eyes.
    “It all works, doesn’t it?” Phoebe shot back.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: “而且希望错误更少，”基蒂插话道。菲比翻了个白眼。“一切不都正常吗？”菲比反驳道。
- en: Indeed, it did. It wasn’t perfect, but everyone working at *Bumble Bikes* had
    learned that “perfect” is the enemy of done. You can’t wait for your software
    to be perfect. No bicycle would ever be built that couldn’t be improved. Whether
    it’s software, bicycles, or anything else, designing and coding don’t bring in
    money, which is the main goal for most companies. These activities are necessary,
    but only shipping products based on design and code turns a profit. If you code
    or design for too long, your company goes bankrupt.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 的确如此。它并不完美，但在 *Bumble Bikes* 工作的所有人都知道，“完美”是完成工作的敌人。你不能等待你的软件变得完美。没有一辆自行车是无法改进的。无论是软件、自行车还是其他任何东西，设计和编码都不会带来收入，这是大多数公司的首要目标。这些活动是必要的，但只有基于设计和代码的产品才能带来利润。如果你编码或设计得太久，你的公司就会破产。
- en: “I need to diagram everything in UML before I start coding,” said Tom. Every
    day the sisters spent with Tom made it easier to understand his stammering speech.
    Phoebe just stared at him for a minute. Only Kitty understood the nonverbal “Who
    does that?” expression on her face. Tom explained designing with UML before opening
    the IDE will help the project move faster. You’ll see your design mistakes sooner,
    and it is usually easier to refactor a diagram than it is code. Your diagrams
    are also where you’ll identify patterns in advance, rather than reactively when
    you are trying to refactor something already in production. Besides, it is impossible
    to succumb to the real-world temptation to *clean up and ship* a diagram. Effectively,
    you should be able to replace *throw-away code* with a set of diagrams.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: “我在开始编码之前需要用UML把所有东西都画成图表，”汤姆说。每天和汤姆在一起的姐妹们都能更容易地理解他结巴的说话。菲比只是盯着他看了一分钟。只有凯蒂能理解她脸上的那种非言语的“那是谁做的？”表情。汤姆解释说，在打开IDE之前用UML设计将有助于项目更快地推进。你将能更快地看到你的设计错误，而且通常重构图表比重构代码要容易。你的图表也是你提前识别模式的地方，而不是在你试图重构已经投入生产的某个东西时反应性地做。
- en: It was important for the sisters to learn to trust this qualified outsider.
    It was his project, and the girls knew the value of not micro-managing Tom. Phoebe
    suited up a laptop for Tom with the finest tools money can buy, a condition Tom
    insisted on as part of his employment. Kitty and Phoebe acquiesced to this condition
    without a second thought. They showed him to his own lab, which the girls had
    hastily, but competently, fashioned from studs, insulation, and drywall in a back
    corner of their Dallas warehouse. They painted the room, and as an office-warming
    gift bought Tom a bonsai tree from a pop-up vendor stationed on a nearby street
    corner. The office was furnished using some of the extra furniture and equipment
    Phoebe had been hoarding in her own lab. “First rule of working in IT…,” she said,
    “Never give ANYTHING back!” This was humorous, given she was half owner of the
    company and in charge of IT. Humorous, but true.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对于姐妹们来说，学会信任这个合格的局外人很重要。这是他的项目，女孩们知道不微观管理汤姆的价值。菲比为汤姆配备了最好的笔记本电脑，这是汤姆坚持作为他雇佣条件的一部分。凯蒂和菲比毫不犹豫地接受了这个条件。他们把他带到了自己的实验室，这是女孩们在达拉斯仓库的一个角落里匆忙但熟练地用钉子、绝缘材料和干墙搭建的。他们粉刷了房间，并从菲比自己实验室里储存的一些额外家具和设备中为汤姆买了一个盆景树，这是从附近街角的一个临时摊位上买的。办公室的家具是使用菲比在她自己的实验室里储存的一些额外家具和设备布置的。“在IT工作的第一条规则……，”她说，“永远不要把任何东西还回去！”这很有趣，因为她公司的一半股份，负责IT。有趣，但却是真的。
- en: The first pass
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一次尝试
- en: The low-hanging fruit in any object-design exercise is deciding on the basic
    structures for the objects. Tom knew this was likely the place he would use Creational
    patterns, though he didn’t concern himself too much with which ones he would use.
    Experience had taught him that analysis-paralysis is a real problem when a developer
    starts using patterns. You can stare at a blank whiteboard all day trying to decide
    whether to use an Abstract Factory or a Factory Method. Maybe both together somehow?
    Maybe we can fit a Command or Singleton in there too?
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何面向对象的设计练习中，低垂的果实是决定对象的基本结构。汤姆知道这很可能是他会使用创建型模式的地方，尽管他并没有太在意他会使用哪一种。经验告诉他，当开发者开始使用模式时，分析瘫痪是一个真正的问题。你可以整天盯着一个空白的白板，试图决定是使用抽象工厂还是工厂方法。也许两者可以某种方式结合起来？也许我们还可以在那里放一个命令或单例呢？
- en: Tom began by drawing the classes and not worrying about patterns at all. Patterns
    usually emerge out of chaos, so don’t be afraid to create chaos first. Since we’re
    just diagramming, there is no way the pointy-haired boss can tell you to “Clean
    it up and ship it Monday.” Tom’s new bosses would never give him that command.
    Neither Phoebe nor Kitty had pointy hair, nor were they likely to mistake an *Etch
    A Sketch* for a quality tablet computer; this is the subject of an inside joke
    the girls had shared while working with the IT executives at MegaBike Corp two
    summers ago.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆开始画类，根本不考虑模式。模式通常是从混乱中产生的，所以不要害怕先创造混乱。既然我们只是在画图表，尖头发的老板不可能告诉你“周一清理并发货。”汤姆的新老板们永远不会给他这样的命令。菲比和凯蒂都没有尖头发，他们也不太可能把一个Etch
    A Sketch误认为是高质量的平板电脑；这是女孩们在两年前与MegaBike Corp的IT高管一起工作时分享的一个内部笑话的主题。
- en: Tom reasoned that wheelchairs are like bicycles, but not so similar that there
    would be any reuse in the base classes. That said, the project could be structured
    in a similar way. Tom set to work creating a set of interfaces and classes that
    would represent Bumble Bikes’ new line of powered and unpowered wheelchairs.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆认为轮椅和自行车类似，但并不那么相似，以至于在基类中会有任何重用。话虽如此，项目可以以类似的方式组织。汤姆开始创建一组接口和类，这些接口和类将代表Bumble
    Bikes的新系列电动和手动轮椅。
- en: I’d like you to stop reading and see whether you can create a UML diagram that
    describes powered and unpowered chairs as they were described by Tom and Phoebe.
    When you have finished your diagram, see how closely your work matches Tom’s.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你能停下来，看看你是否能创建一个UML图来描述汤姆和菲比所描述的电动和手动椅子。当你完成你的图表后，看看你的工作与汤姆的有多接近。
- en: 'Tom started by diagramming the `Wheelchair` class, like so:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆首先绘制了`Wheelchair`类，如下所示：
- en: '![Figure 6.4: Tom’s initial Wheelchair class ](img/B18605_Figure_6.4.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图6.4：汤姆的初始Wheelchair类](img/B18605_Figure_6.4.jpg)'
- en: 'Figure 6.4: Tom’s initial Wheelchair class'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.4：汤姆的初始Wheelchair类
- en: 'At first, the `Wheelchair` class had everything on it. But as he considered
    further, he decided to split the chairs into two families: **powered** and **unpowered**.
    See following diagram:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 起初，`Wheelchair`类上什么都有。但随着他进一步考虑，他决定将椅子分为两个家族：**电动**和**非电动**。请看以下图表：
- en: '![Figure 6.5: Tom split the design into two main types of wheelchairs ](img/B18605_Figure_6.5.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图6.5：汤姆将设计分为两种主要的轮椅类型](img/B18605_Figure_6.5.jpg)'
- en: 'Figure 6.5: Tom split the design into two main types of wheelchairs'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.5：汤姆将设计分为两种主要的轮椅类型
- en: He considered which properties these families would have in common, such as
    `ModelName`, `Year`, and `SerialNumber`. He hoisted these definitions into an
    interface and an abstract base class. He could probably get by with one or the
    other, but since his entire design would be structured around this diagram, he
    decided being inclusive was the way to go.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 他考虑了这些家族将有哪些共同属性，例如`ModelName`、`Year`和`SerialNumber`。他将这些定义提升到接口和抽象基类中。他可能只需要其中一个，但由于他的整个设计都将围绕这个图表来构建，他决定采用包容性的方法。
- en: The unpowered chairs were straightforward with regular wheels and casters. The
    *Texas Tank*, on the other hand, was an entirely novel design that used tracks
    instead of wheels. The powered chair would also need a power source, a motor,
    and a steering system. These could be diagrammed separately, but Tom realized
    that since the track designs on the powered chair were so strange, it might behoove
    him to design around this fact. He made an abstract `PoweredChair` class that
    encapsulated the other 99.9% of the powered chairs on the market. It wasn’t inconceivable
    that he might one day be asked to represent such a chair in his code.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 非电动椅子有常规的轮子和万向节。另一方面，**德克萨斯坦克**是一个全新的设计，它使用轨道而不是轮子。电动椅子还需要电源、电机和转向系统。这些可以单独绘制，但汤姆意识到，由于电动椅子的轨道设计非常奇特，他可能需要围绕这一事实进行设计。他创建了一个抽象的`PoweredChair`类，封装了市场上99.9%的电动椅子。他有一天可能被要求在他的代码中表示这样的椅子，这是可以想象的。
- en: 'The whole diagram wound up looking like this:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 整个图表最终看起来是这样的：
- en: '![Figure 6.6: Tom’s initial design ](img/B18605_Figure_6.6.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图6.6：汤姆的初始设计](img/B18605_Figure_6.6.jpg)'
- en: 'Figure 6.6: Tom’s initial design'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.6：汤姆的初始设计
- en: 'Let’s look at it by the numbers, as follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们按数字来分析，如下所示：
- en: Tom decided an interface at the top of this structure made sense because, in
    the future, we need to be able to pass around wheelchair-like objects. This is
    an attempt at future-proofing. This kind of design strategy usually works, but
    really, there is no such thing as *future-proof*.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 汤姆认为在这个结构的最顶部定义一个接口是有意义的，因为将来我们需要能够传递类似轮椅的对象。这是对未来进行防备的一种尝试。这种设计策略通常有效，但事实上，并没有真正的“防未来”。
- en: 'An abstract implementation of the interface is needed when there’s some shared
    method implemented across subclasses. We have something like that in the `Bicycle`
    class with the `Build()` method, as shown here:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当子类之间有一些共享方法实现时，需要一个接口的抽象实现。在`Bicycle`类中，我们有一个类似的情况，即`Build()`方法，如下所示：
- en: '![Figure 6.7: The Bicycle Factory method pattern implementation from Chapter3\.
    ](img/B18605_Figure_6.7.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图6.7：第3章中Bicycle工厂方法模式的实现](img/B18605_Figure_6.7.jpg)'
- en: 'Figure 6.7: The Bicycle Factory method pattern implementation from Chapter3.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.7：第3章中Bicycle工厂方法模式的实现。
- en: 'As with the `Bicycle` class, this class has two computed properties: `Year`
    and `SerialNumber`. These act like methods. At this stage, we can justify the
    extra abstract class in the name of being DRY. For an explanation of **don’t repeat
    yourself** (**DRY**), please refer back to [*Chapter 2*](B18605_02.xhtml#_idTextAnchor036),
    *Prepping For Practical Real-World Applications of Patterns in C#*.'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与`Bicycle`类一样，这个类有两个计算属性：`Year`和`SerialNumber`。这些属性就像方法一样工作。在这个阶段，我们可以以DRY（不要重复自己）的原则来合理化使用额外的抽象类。关于**不要重复自己**（DRY）的解释，请参阅[*第2章*](B18605_02.xhtml#_idTextAnchor036)，*为C#中模式在实际现实世界应用做准备*。
- en: The `UnpoweredChair` class inherits from `Wheelchair`. Tom knows the left and
    right wheels on a wheelchair may look identical. In this first drawing (*Figure
    6.4*), he had all the wheels in an array. Wheels on a wheelchair are not identical,
    and Tom understands he needs to not think so concretely. He isn’t modeling wheels
    as part of the chair. He’s modeling slots for wheels that should on some level
    be interchangeable. Most wheelchairs have two big wheels as the main support,
    and a set of smaller wheels, or casters, to balance the craft overall.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`UnpoweredChair`类继承自`Wheelchair`。汤姆知道轮椅上的左右轮子可能看起来相同。在这第一张图（*图6.4*）中，他将所有轮子都放在一个数组中。轮椅上的轮子并不相同，汤姆明白他不能如此具体地思考。他不是将轮子建模为椅子的一部分。他在建模轮子的插槽，这些插槽在某些层面上应该是可互换的。大多数轮椅有两个大轮子作为主要支撑，以及一套较小的轮子或万向轮，以平衡整体结构。'
- en: The `PoweredChair` class also inherits from `Wheelchair`. It is modeled to represent
    the most common powered chairs on the market. Since Tom has ridden around in one
    for the entire duration of his 36-year life, he knows the design very well. His
    class here inherits common properties—some computed—from the base class. The elements
    unique to the powered chairs, in general, are represented. Every powered chair,
    including the *Texas Tank*, will need a power supply, steering, and a motor. Again,
    this is an attempt at future-proofing. It is easy to predict that one day, Bumble
    Bikes will make a more common design for a powered chair. While the *Texas Tank*
    is amazing, Phoebe designed it as something she knew her father would love if
    remission never becomes a reality. The *Texas Tank* is not for everyone. It is
    heavy, expensive, and will smell like heavy machinery. Note that Tom has considered
    there will need to be methods in the design, but in this pass, he hasn’t committed
    anything to the diagram. He continues to work on the obvious needs as quickly
    as he can to keep the momentum.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`PoweredChair`类也继承自`Wheelchair`。它被建模来代表市场上最常见的电动轮椅。由于汤姆在他36年的生命中一直骑着电动轮椅，他对设计非常了解。他的类在这里继承了基类的一些常见属性——一些是计算属性。一般而言，电动轮椅的独特元素也被表示出来。每个电动轮椅，包括*德克萨斯坦克*，都需要电源、转向和电机。这又是一次对未来进行保障的尝试。很容易预测，有一天，Bumble
    Bikes将为电动轮椅设计出更常见的款式。虽然*德克萨斯坦克*很棒，但菲比设计它是因为她知道如果缓解永远不会成为现实，她的父亲会喜欢它。*德克萨斯坦克*不是为每个人设计的。它很重，价格昂贵，而且会发出重型机械的味道。注意，汤姆已经考虑了设计中需要方法，但在这次迭代中，他没有将任何内容提交到图中。他继续尽可能快地工作，以满足明显的需求，以保持动力。'
- en: Two classes inherit from the `UnpoweredChair` class. I think these speak for
    themselves. The only difference between the two is the cambered wheels on `SportChair`.
    In an actual chair, the wheels tilt outward for improved speed and agility. If
    you didn’t notice this detail, refer back to *Figure 6.1* and you can see the
    camber on the wheels.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两个类继承自`UnpoweredChair`类。我认为这些不言自明。这两个类之间的唯一区别是`SportChair`上的倾斜轮子。在实际的椅子上，轮子向外倾斜以提高速度和敏捷性。如果你没有注意到这个细节，请参阅*图6.1*，你可以在轮子上看到倾斜。
- en: Tom is happy with his morning’s work. Kitty and Phoebe order lunch from their
    favorite Mexican restaurant and the three relax. After lunch, Tom is feeling energized
    and goes to work on the next round of revisions.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆对他的早晨工作感到满意。基蒂和菲比从他们最喜欢的墨西哥餐厅订了午餐，三人放松。午餐后，汤姆感到精力充沛，开始着手下一轮的修订。
- en: Once you get your base classes diagrammed, the next step is usually to think
    about composition. We have properties and fields in our objects. What information
    will go inside those properties and fields? When we were beginner coders and things
    were simpler, it was a combination of primitives. We didn’t need composition,
    but now we are worldly and wise, and Tom is no exception. He needs to hash out
    the structures that make up the base classes via composition. For example, what
    should we do with the `Seat` property in the `Wheelchair` base class? The various
    chair designs have different seats; therefore, it makes sense to create an interface
    for maximum flexibility, and then document that requirement in the diagram. Tom
    is taking a different attitude and approach by diagramming and planning. This
    is different from the attitude that Phoebe and Kitty had taken while building
    Bumble Bikes. They skipped any sort of diagramming or planning effort and went
    directly to writing code. Just look at all the parts where Tom is guessing or
    making judgment calls. The `Inflate()` and `Deflate()` methods are a great example.
    He’s not sure whether they will be needed or not. The exercise of abstracting
    a real-world object into class code is mainly about modeling what is important
    to the application. A `Person` class in an address book app on your phone needs
    a different level of detail compared to a `Person` class in a medical records
    application. While you are diagramming, you needn’t worry about being DRY, **YAGNI**
    (which stands for **you aren’t gonna need i****t**), or violating SOLID (if you
    don’t know what these acronyms are, please refer to [*Chapter 2*](B18605_02.xhtml#_idTextAnchor036)).
    At this stage of designing your class structure, it is only a diagram. The whole
    point of diagramming is to get the design in a format that can be discussed, argued
    over, pondered, socialized, and changed. Sure, you’re thinking about SOLID or
    YAGNI, but it’s okay to not be perfect at the point of conception. The diagram
    will naturally evolve, and you will make mistakes and have oversights that you
    can correct and refine. Once the diagram becomes code, all those pesky rules will
    begin to apply. The code is real. There are rules, and make no mistake about it,
    if you work on a team, you will be judged by those rules.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你绘制了基本类图，下一步通常是要考虑组合。我们的对象中有属性和字段。这些属性和字段将包含哪些信息？当我们还是初学者程序员，事情比较简单时，它们是原语组合。我们不需要组合，但现在我们变得世故和明智，汤姆也不例外。他需要通过组合来梳理构成基本类的结构。例如，在`Wheelchair`基本类中，我们应该如何处理`Seat`属性？不同的椅子设计有不同的座位；因此，创建一个接口以实现最大灵活性是有意义的，然后在图表中记录这一需求。汤姆通过绘制和规划采取了不同的态度和方法。这与菲比和凯蒂在构建Bumble
    Bikes时所采取的态度不同。他们跳过了任何形式的图表或规划工作，直接编写代码。只需看看汤姆在猜测或做出判断的地方。`Inflate()`和`Deflate()`方法是一个很好的例子。他不确定是否需要它们。将现实世界对象抽象为类代码的练习主要是关于建模对应用程序重要的事物。你手机上的地址簿应用中的`Person`类与医疗记录应用中的`Person`类需要不同级别的细节。当你绘制图表时，你不需要担心DRY（Don't
    Repeat Yourself）、**YAGNI**（You Aren't Gonna Need It），或违反SOLID原则（如果你不知道这些缩写代表什么，请参阅[*第2章*](B18605_02.xhtml#_idTextAnchor036)）。在设计类结构这个阶段，它仅仅是一个图表。绘制图表的全部目的是将设计以可以讨论、争论、思考、社会化并修改的格式呈现出来。当然，你可能在思考SOLID或YAGNI，但在构思阶段不完美是可以的。图表会自然演变，你将犯错误和疏忽，你可以纠正和改进。一旦图表变成代码，所有那些烦人的规则将开始适用。代码是真实的。有规则，而且不要误会，如果你在一个团队中工作，你将受到这些规则的评判。
- en: 'Tom diagrams all the components he foresees, including these:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆绘制了他预见的所有组件，包括以下这些：
- en: The seat
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 座位
- en: The frame
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 车架
- en: Wheels and casters
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 轮子和万向轮
- en: The motor for the powered chair
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 动力轮椅的电机
- en: The steering mechanism for the powered chair
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 动力轮椅的转向机构
- en: The battery for the powered chair
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 动力轮椅的电池
- en: The track drive system for the *Texas Tank*
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Texas Tank*的轨道驱动系统'
- en: Let’s watch Tom diagram each set of classes. Each set is going to consist of
    an abstract class or interface, and appropriate concrete classes inheriting from
    that abstract class. Don’t forget—in UML, the title of an abstract class is written
    in *italics*.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看汤姆如何为每一组类绘制图表。每一组将包括一个抽象类或接口，以及从该抽象类继承的适当具体类。别忘了——在UML中，抽象类的标题用*斜体*书写。
- en: The seat
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 座位
- en: The seat is probably the most important part of a wheelchair. Tom knows this
    first-hand—each chair will need a different kind of seat. Bumble Bikes can get
    away with the less expensive generic seating on wheelchairs that are not meant
    to be sat in all day. The *Plano Wheelchair* is the perfect example of a transporter
    chair. A basic wheelchair, like the *Plano*, is used for brief transport from
    one location to another. The chair’s user, for example, will transfer from the
    wheelchair to an office chair or bed. When the need arises to move from one spot
    to another, the user will transfer back to the transporter chair and set out to
    the new location. The basic wheelchair does not have a motor. This differs from
    the other wheelchairs.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 座椅可能是轮椅最重要的部分。汤姆深知这一点——每一款椅子都需要不同类型的座椅。Bumble Bikes可以在那些不是全天候使用的轮椅上使用价格较低的通用座椅。*Plano轮椅*是运输轮椅的完美例子。像*Plano*这样的基本轮椅用于从一处地点到另一处地点的短暂运输。例如，椅子的使用者会从轮椅转移到办公椅或床上。当需要从一个地方移动到另一个地方时，使用者会回到运输轮椅上，然后前往新地点。基本轮椅没有马达。这与其他轮椅不同。
- en: The *Maverick* wheelchair too has a special-purpose chair. This chair is designed
    to be light and maneuverable. Similar to the *Plano Wheelchair*, it isn’t designed
    to be an all-day seat. The *Maverick* wheelchair is not motorized.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '*Maverick*轮椅也有一个特殊用途的椅子。这个椅子设计得既轻便又灵活。与*Plano轮椅*类似，它不是设计成全天候使用的座椅。*Maverick*轮椅没有马达。'
- en: The powered chairs, however, cater to different kinds of users. The largest
    group of users consists of aging senior citizens. This group is not disabled.
    They can stand and walk short distances but require a chair for longer-distance
    walking. The second group of wheelchair users are like Tom. They are quadriplegics
    and have little-to-zero mobility in their arms and legs. These wheelchair users
    generally lack the ability to transfer on their own. Therefore, they do not need
    a cheap seat because they are in the chair for long stretches of time. They require
    a comfortable chair. This group, Tom and Phoebe decided, would be the design inspiration
    for the *Texas Tank*, the ultimate powered wheelchair.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，动力轮椅针对的是不同类型的用户。最大的用户群体是老年公民。这个群体并不是残疾人。他们可以站立并走短距离，但需要椅子进行长途行走。轮椅用户的第二组类似于汤姆。他们是四肢瘫痪者，手臂和腿部的活动能力几乎为零。这些轮椅用户通常缺乏自己转移的能力。因此，他们不需要便宜的座椅，因为他们需要在椅子上坐很长时间。他们需要一个舒适的椅子。汤姆和菲比决定，这个群体将是*德克萨斯坦克*的设计灵感，这是终极动力轮椅。
- en: 'Tom drafts a design for the seat classes. His ideas are reflected here:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆为座椅类绘制了一个设计图。他的想法在这里得到了体现：
- en: '![Figure 6.8: Tom’s design for the WheelchairSeat class ](img/B18605_Figure_6.8.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图6.8：汤姆为WheelchairSeat类的设计](img/B18605_Figure_6.8.jpg)'
- en: 'Figure 6.8: Tom’s design for the WheelchairSeat class'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.8：汤姆为WheelchairSeat类的设计
- en: This design is simple. It consists of an abstract class called `WheelchairSeat`.
    The properties are straightforward. Tom positioned the concrete classes with the
    unpowered chair seats on the left side of the diagram and the powered chair seat
    on the right. Later, when we combine our designs into a larger diagram, you can
    expect this convention to be used.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这种设计很简单。它由一个名为`WheelchairSeat`的抽象类组成。属性很简单。汤姆将具有无动力座椅的实体类放在图的左侧，而将动力座椅放在右侧。当我们把我们的设计组合成更大的图时，你可以期待使用这种惯例。
- en: The frame
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 车架
- en: Our three wheelchairs require three very different frame designs. The *Plano
    Wheelchair* is simple, reasonably light, and a very common design. The *Maverick*
    wheelchair needs to be very light, but tough enough to weather collisions and
    crashes, which are inevitable during passionate competition. The *Texas Tank*
    needs to be, well, a tank. It has heavy tracks, a large battery, and an oversized
    chair for a seat.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的三款轮椅需要三种非常不同的车架设计。*Plano轮椅*简单、相对轻便，是一种非常常见的款式。*Maverick*轮椅需要非常轻便，但足够坚固以承受碰撞和事故，这在激烈的竞争中是不可避免的。*德克萨斯坦克*需要像坦克一样坚固。它有重型轨道、大电池和超大的座椅。
- en: 'Tom gives this some thought and decides to keep this simple for now. He could
    try to get down in the weeds and figure out how to represent all the extruded
    aluminum tubes, bolts, joints, and hinges that make up the chair frame. However,
    Tom isn’t that kind of engineer, so he decides to include a field to hold the
    file path to the CAD file for the frame. Kitty and Phoebe agree with Tom. You
    can review Tom’s design in *Figure 6.9*. The diagram shows a simple abstract class
    representing a wheelchair frame. As before, the unpowered components are on the
    left, while the powered class is drawn to the right:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆对此进行了思考，并决定现在先保持简单。他本可以深入细节，弄清楚如何表示组成椅子框架的所有挤压铝管、螺栓、接头和铰链。然而，汤姆并不是那种工程师，所以他决定包含一个字段来保存框架的CAD文件的文件路径。基蒂和菲比都同意汤姆的看法。您可以在*图6.9*中查看汤姆的设计。该图显示了一个简单的抽象类，代表轮椅框架。和之前一样，未供电组件位于左侧，而供电类则绘制在右侧：
- en: '![Figure 6.9: Tom’s design for classes representing the frames of the wheelchairs
    ](img/B18605_Figure_6.9.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图6.9：代表轮椅框架的类的设计](img/B18605_Figure_6.9.jpg)'
- en: 'Figure 6.9: Tom’s design for classes representing the frames of the wheelchairs'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.9：代表轮椅框架的类的设计
- en: Wheels and casters
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 车轮和万向轮
- en: You can’t really have a wheelchair without wheels, can you? The *Plano Wheelchair*
    and the *Maverick* wheelchair will use traditional spoked wheels, similar to those
    used in bicycles. Standard designs for wheelchairs involve two large fixed wheels
    and a set of smaller wheels configured as casters. The casters can turn in any
    direction.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 没有车轮，你真的能有一把轮椅吗？*普兰诺轮椅*和*Maverick*轮椅将使用传统的辐条轮，类似于自行车上使用的轮子。轮椅的标准设计涉及两个大固定轮和一组配置为万向轮的小轮。万向轮可以朝任何方向转动。
- en: 'In Figure 6.10, Tom calls his abstract class `MechanicalWheel`. This class
    can represent the wheels and casters, but it cannot represent the tank-style treads
    on the *Texas Tank*. The following diagram shows the design for the `MechanicalWheel`
    class along with the two-wheel subclasses. The `WheelchairWheel` class represents
    the larger wheels on the sides of the chair, while the `Caster` class represents
    smaller wheels on a wheelchair that can rotate, providing maneuverability:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图6.10*中，汤姆将他的抽象类命名为`MechanicalWheel`。这个类可以表示车轮和万向轮，但不能表示*德克萨斯坦克*上的坦克式履带。以下图显示了`MechanicalWheel`类的结构以及两个双轮子类。`WheelchairWheel`类代表椅子侧面的较大车轮，而`Caster`类代表轮椅上可以旋转的小轮，提供机动性：
- en: '![Figure 6.10: The MechanicalWheel abstract class and its subclasses ](img/B18605_Figure_6.10.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图6.10：MechanicalWheel抽象类及其子类](img/B18605_Figure_6.10.jpg)'
- en: 'Figure 6.10: The MechanicalWheel abstract class and its subclasses'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.10：MechanicalWheel抽象类及其子类
- en: Tom has modeled everything he needs for an unpowered chair. They are simple
    machines. The real design challenge, and certainly the most rewarding, lies in
    creating a class design for the powered chair. Tom is careful to not specifically
    model the *Texas Tank*. The *Tank* is a very ambitious project—the kind that can
    easily be canceled because it’s going to be expensive to build. Furthermore, the
    *Tank*’s unconventional design might not appeal to a wide audience. Only time
    and a few marketing studies can tell. Tom’s strategy then should be to create
    component classes that are not specifically tied to the *Tank* design, but rather
    to more common powered chairs. Tom decides to start with the motor.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆已经为非电动轮椅建模了所有需要的部分。它们是简单的机械。真正的设计挑战，当然也是最有回报的，在于为电动轮椅创建类设计。汤姆小心翼翼地没有具体模拟*德克萨斯坦克*。*坦克*是一个非常雄心勃勃的项目——很容易因为建造成本高而被取消。此外，*坦克*的非传统设计可能不会吸引广泛的受众。只有时间和一些市场研究才能告诉我们。那么，汤姆的策略应该是创建不特定于*坦克*设计的组件类，而是更常见的电动轮椅。汤姆决定从电机开始。
- en: The motor for the powered chair
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 电动椅子的电机
- en: Tom’s powered chair is still running with its original motor. He bought the
    chair over ten years ago. These motors are common and Tom is intimately familiar
    with them. The motor for a powered wheelchair operates off direct current from
    a battery. The motors are required to have high torque with a relatively show
    speed, and they need to last a long time. Modeling a such a motor is not a problem.
    Tom’s design is shown in Figure 6.11.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆的电动轮椅仍在使用其原始电机。他十年前就买了这把椅子。这些电机很常见，汤姆对它们非常熟悉。电动轮椅的电机由电池提供的直流电供电。电机需要具有高扭矩和相对较低的速度，并且需要长时间运行。模拟这样的电机并不成问题。汤姆的设计在*图6.11*中展示。
- en: '![Figure 6.11: The motor class diagram for powered chairs ](img/B18605_Figure_6.11.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图6.11：电动轮椅的电机类图](img/B18605_Figure_6.11.jpg)'
- en: 'Figure 6.11: The motor class diagram for powered chairs'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.11：电动轮椅的电机类图
- en: Since electric motors are common and generic, Tom decides to make them an abstract
    class. He adds a few properties and a method to simulate the motor being switched
    on and off. Then, he adds a subclass to handle the specifics of an electric motor
    used to power a powered chair.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 由于电动机是常见和通用的，汤姆决定将其制作为一个抽象类。他添加了一些属性和一个方法来模拟电机的开和关。然后，他添加了一个子类来处理电动轮椅使用的电动机的具体细节。
- en: The steering mechanism for the powered chair
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 电动轮椅的转向机构
- en: 'Tom’s chair uses a joystick mounted to the left arm of his chair to control
    it. The joystick is sensitive to how hard it is pushed in any given direction.
    The harder you push the stick, the faster the chair moves. Tom sees no particular
    reason to redesign this nearly ubiquitous system. His class design can be seen
    here:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆的轮椅使用一个安装在轮椅左臂上的操纵杆来控制它。操纵杆对任何给定方向上的推力大小都很敏感。您推得越用力，轮椅移动得越快。汤姆看不出有任何特别的原因要重新设计这个几乎无处不在的系统。他的类设计如下所示：
- en: '![Figure 6.12: The steering mechanism for the powered chair design ](img/B18605_Figure_6.12.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图6.12：电动轮椅设计的转向机构](img/B18605_Figure_6.12.jpg)'
- en: 'Figure 6.12: The steering mechanism for the powered chair design'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.12：电动轮椅设计的转向机构
- en: 'The properties Tom chose for the steering mechanism represent a wide range
    of industrial joystick control systems, used in everything from drone flight controls
    to automation to—you guessed it: powered wheelchairs.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆为转向机构选择的属性代表了一类广泛的工业式操纵杆控制系统，这些系统用于从无人机飞行控制到自动化，再到——您猜对了：电动轮椅。
- en: The battery for the powered chair
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 电动轮椅的电池
- en: 'The motor for the wheelchair is electric, and we need a battery to power the
    system. Any industrial-grade battery with the right voltage and current should
    work. We want a battery that lasts a long time. We need a battery with a high
    enough `WheelchairBattery` subclass:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 轮椅的电机是电动的，我们需要一个电池来为系统供电。任何具有正确电压和电流的工业级电池都应适用。我们希望电池的寿命尽可能长。我们需要一个足够高的`WheelchairBattery`子类：
- en: '![Figure 6.13: A class diagram representing a battery system for the powered
    wheelchair ](img/B18605_Figure_6.13.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图6.13：表示电动轮椅电池系统的类图](img/B18605_Figure_6.13.jpg)'
- en: 'Figure 6.13: A class diagram representing a battery system for the powered
    wheelchair'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.13：表示电动轮椅电池系统的类图
- en: The track drive system for the Texas Tank
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 德克萨斯油箱的轨道驱动系统
- en: 'Tom was out of his element on this one because he had zero experience with
    track drive systems. Kitty and Phoebe, having spent time at the family cattle
    ranch when they were young, had a tacit understanding of how track drive systems
    worked. The three teamed up and sourced a few vendors that might supply their
    requirements. Since Tom was pressed for time, he simply looked at the properties
    used to describe the track drive systems on the vendors’ websites. From these
    sources, Tom derived the set of properties you’ll see in the following diagram:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个问题上，汤姆感到有些不知所措，因为他完全没有轨道驱动系统的经验。凯蒂和菲比在年轻时曾在家族的牛场工作过，对轨道驱动系统的工作原理有着不言而喻的理解。三人组队，找到了几家可能满足他们需求的供应商。由于汤姆时间紧迫，他只是简单地查看供应商网站上描述轨道驱动系统的属性。从这些来源中，汤姆得出了您将在以下图中看到的属性集：
- en: '![Figure 6.14: The track drive system ](img/B18605_Figure_6.14.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图6.14：轨道驱动系统](img/B18605_Figure_6.14.jpg)'
- en: 'Figure 6.14: The track drive system'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.14：轨道驱动系统
- en: 'Tom was sure that of all the components he modeled, the track drive system
    would be the one to change and evolve. This is the one where Phoebe would be working
    on many prototypes as she built them. He called his subclass `HighDriveTrackSystem`
    because this is what the design is called. In the following diagram, you’ll see
    our *Texas Tank* design with a high-drive system. The track is triangular with
    a large wheel situated high in the track design. Compare this in Figure 6.15 with
    a standard continuous track design on a bulldozer, and you’ll see the difference:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆确信，在他所建模的所有组件中，轨道驱动系统将是会改变和发展的一个。这是菲比会不断构建原型并在此工作的一个。他将其子类命名为`HighDriveTrackSystem`，因为这正是设计的名称。在下面的图中，您将看到我们的*德克萨斯油箱*设计，它配备了一个高驱动系统。轨道是三角形的，有一个大轮子位于轨道设计的高处。将此与图6.15中推土机上的标准连续轨道设计进行比较，您将看到差异：
- en: '![Figure 6.15: A continuous track drive system on a bulldozer compared with
    the high-drive design on our powered chair ](img/B18605_Figure_6.15.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![图6.15：推土机上的连续轨道驱动系统与我们的动力轮椅上的高驱动设计对比](img/B18605_Figure_6.15.jpg)'
- en: 'Figure 6.15: A continuous track drive system on a bulldozer compared with the
    high-drive design on our powered chair'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.15：推土机上的连续轨道驱动系统与我们的动力轮椅上的高驱动设计对比
- en: 'Phoebe and Kitty designed the chair using the high-drive system because it
    provides a more absorbent suspension. High-drive systems are also less prone to
    wear and fail because they isolate the drive sprocket to a flexible section of
    the track drive. “She’ll handle like a dream!” Phoebe exclaimed with a broad,
    toothy grin. The engineering prototype didn’t take long to build. The hard part
    was getting Tom off the *Tank*, as we can see here:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 菲比和凯蒂使用高驱动系统设计了椅子，因为它提供了更吸震的悬挂。高驱动系统也较少磨损和故障，因为它们将驱动齿轮隔离开来，使其位于轨道驱动的一个柔性部分。“她会像梦一样驾驶！”菲比带着一个宽大的、露齿的笑容说道。工程原型很快就建成了。最难的部分是让汤姆离开“坦克”，正如我们在这里看到的：
- en: '![Figure 6.16: Tom monopolized the Texas Tank prototype ](img/B18605_Figure_6.16.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图6.16：汤姆垄断了德克萨斯坦克原型](img/B18605_Figure_6.16.jpg)'
- en: 'Figure 6.16: Tom monopolized the Texas Tank prototype'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.16：汤姆垄断了德克萨斯坦克原型
- en: Eventually, the *Tank*’s battery was depleted, at which point, Tom got back
    to work.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，“坦克”的电池耗尽了，这时汤姆又回到了工作状态。
- en: Adding patterns
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加模式
- en: 'Tom feels pretty good about his first pass. He has enough to spark some serious
    discussion about how to structure the project. This is the objective of the first
    pass. Tom makes a quick list of all the patterns Kitty and Phoebe had used in
    the bicycle project, as follows:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆对自己的第一次尝试感到相当满意。他有了足够的素材来引发关于如何构建项目的严肃讨论。这就是第一次尝试的目标。汤姆快速列出了凯蒂和菲比在自行车项目中使用的所有模式，如下所示：
- en: '**Creational patterns**:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建型模式**:'
- en: Factory pattern
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Factory pattern
- en: Abstract Factory pattern
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Abstract Factory pattern
- en: Factory method
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Factory method
- en: Builder
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Builder
- en: Object pool
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Object pool
- en: Singleton
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Singleton
- en: '**Structural patterns**:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**结构型模式**:'
- en: Decorator
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Decorator
- en: Façade
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Façade
- en: Composite
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Composite
- en: Bridge
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bridge
- en: '**Behavioral patterns**:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**行为型模式**:'
- en: Command
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Command
- en: Iterator
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Iterator
- en: Observer
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Observer
- en: Strategy
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Strategy
- en: Tom begins to focus on the diagram and sets to thinking about the application
    of each pattern. One by one he looks for opportunities. Some of them are obvious.
    Some of them may not be needed. Tom’s diagram doesn’t currently include any changes
    to the bicycle factory’s robotics. For the most part, the robotics classes should
    not be tightly coupled to making bicycles. After a few hours of personal debate
    and much consideration, Tom is prepared to discuss patterns with Kitty and Phoebe.
    He is able to book time on their calendars for that evening.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆开始专注于图表，并开始思考每个模式的应用。他一个接一个地寻找机会。其中一些很明显。有些可能并不需要。汤姆的图表目前还没有包括对自行车工厂机器人技术的任何更改。大部分情况下，机器人课程不应该与制造自行车紧密耦合。经过几小时的个人辩论和深思熟虑，汤姆准备与凯蒂和菲比讨论模式。他能够在他们的日历上预订那个晚上的时间。
- en: See whether you can generate your own ideas on how and where creation patterns
    might be appropriate. Remember—it’s a diagram and this is brainstorming. It isn’t
    an exam with definitive right answers. It’s normal and okay to be wrong or unsure
    sometimes. In the next section, Tom will present his diagram containing all the
    patterns he intends to use for the project. If you’d like to try to figure out
    which ones are the most appropriate, pause here and make yourself a list. Beware
    of the Golden Hammer! It is not necessary, nor even desirable to try to use every
    pattern you know in one project.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 看看你是否能自己想出创建模式可能适用的情况和地方。记住——这是一个图表，这是头脑风暴。这不是一个有确定正确答案的考试。有时候犯错或不确定是正常的，也是可以接受的。在下一节中，汤姆将展示他打算在项目中使用的所有模式的图表。如果你想尝试找出哪些是最合适的，请在这里暂停并为自己列一个清单。小心“黄金锤”！没有必要，甚至不希望在一个项目中尝试使用你所有的模式。
- en: The first design meeting
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一次设计会议
- en: Tom configured his computer’s display to share with a large 72” OLED 8K screen
    in the Bumble Bikes conference room. The lights were dimmed. Phoebe, true to character,
    made popcorn and passed around fizzy water. With everyone seated comfortably,
    Tom began his presentation by discussing the base object structure. Once the girls
    were up to speed on the basics, Tom directed the discussion toward creation patterns.
    As the sisters listened to Tom, it was clear that they held him in high esteem.
    They appreciated his abilities and the manner in which he adapted to the life
    fate had dealt him. The sisters were aware that most people are very uncomfortable
    interacting with someone in a wheelchair, especially if they also have impaired
    speech. They knew Tom desired to be seen for himself, and the sisters treated
    Tom as they did any other colleague. The sisters snapped from their collective
    reverie as Tom began his presentation.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆配置了他的电脑显示屏，与会议室里的大72英寸OLED 8K屏幕共享。灯光调暗了。菲比一如既往地做了爆米花，并递了一圈汽水。当大家都坐得舒服后，汤姆开始他的演讲，讨论基础对象结构。一旦女孩们对基础知识有了了解，汤姆就将讨论转向创建模式。当姐妹们听汤姆讲话时，很明显她们对他非常尊敬。她们欣赏他的能力以及他适应命运所给予他的生活的态度。姐妹们知道大多数人都不太舒服与坐在轮椅上的人互动，尤其是如果他们还有语言障碍。她们知道汤姆希望人们看到真实的他，姐妹们对待汤姆就像对待其他同事一样。当汤姆开始他的演讲时，姐妹们从共同的幻想中惊醒。
- en: “The first pattern I want to use is straightforward. The Abstract Factory pattern
    is used when you want to make related families of objects. You used it when you
    wanted to manufacture your own parts for different types of bicycles. You have
    classes for bicycle frames for road and mountain bikes that are not in any way
    interchangeable in the real world, but their abstract structures are similar enough
    to follow common interfaces. We can do this same thing with wheelchairs in two
    places. First, we could have an Abstract Factory creating parts for the wheelchairs
    just like you do for the bicycles. But I wonder if we couldn’t go an extra step
    and use the Abstract Factory pattern to determine whether we are generating a
    bicycle or a wheelchair at the highest level of your factory automation system.
    The clients of Factory patterns don’t care about the structure of the object they’re
    getting from the factory. The manufacturing system, therefore, shouldn’t care
    whether it’s making a bicycle or a wheelchair.”
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: “我想使用的第一个模式很简单。当你想要创建相关对象族时，使用抽象工厂模式。你用它来制造不同类型自行车的部件。你有公路自行车和山地自行车的车架类，它们在现实世界中根本不可互换，但它们的抽象结构足够相似，可以遵循公共接口。我们可以在两个地方做同样的事情。首先，我们可以有一个抽象工厂为轮椅生成部件，就像你为自行车做的那样。但我怀疑我们是否可以更进一步，在工厂自动化系统的最高级别使用抽象工厂模式来决定我们是在生成自行车还是轮椅。工厂模式的客户端不关心从工厂得到的对象的结构。因此，制造系统不应该关心它是制造自行车还是轮椅。”
- en: “That’s true, Tom,” said Kitty. “But I’ve found the Builder pattern to be more
    flexible. While Abstract Factory returns the produced object immediately, the
    Builder pattern allows you to attach extra steps in the build process.”
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: “那是对的，汤姆，”凯蒂说，“但我发现建造者模式更灵活。虽然抽象工厂立即返回生产出的对象，但建造者模式允许你在构建过程中附加额外的步骤。”
- en: “Hey!” Tom interjected. “If we use the Builder, we can combine some of the other
    Creational patterns as part of the build process. You used the Composite pattern
    to generate a cost model. You also used the Bridge pattern to handle bicycle paint
    jobs. I think that would be a big deal with wheelchairs. I work with a lot of
    kids at the hospital, and I know they would rather have crazy colorful paint jobs
    on their chairs than the standard black and chrome all the other companies make.
    The Builder could generate a bridged object as well.”
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: “嘿！”汤姆插话道，“如果我们使用建造者，我们可以在构建过程中结合一些其他创建模式。你使用了组合模式来生成成本模型。你还使用了桥接模式来处理自行车的喷漆工作。我认为这对轮椅来说会是个大问题。我在医院和很多孩子一起工作，我知道他们宁愿在轮椅上涂上五彩斑斓的喷漆，也不愿像其他公司那样使用标准的黑色和铬色。建造者也可以生成桥接对象。”
- en: “Couldn’t you then make the director class for your builder a singleton?” Kitty
    asked.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: “你难道不能为你的建造者类创建一个单例吗？”凯蒂问道。
- en: Phoebe was sitting at the end of the table eating her popcorn. She leaned back
    and rolled her eyes. Kitty and Tom were in full-on geek mode.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 菲比坐在桌子的另一端，吃着爆米花。她靠在椅背上，翻了个白眼。凯蒂和汤姆完全进入了极客模式。
- en: “This is going to require another pass at my design,” Tom said. He remembered
    the age-old phrase, “No battle plan survives first contact with the enemy.” He
    hardly regarded Kitty and Phoebe as his enemies, but he wasn’t expecting his preliminary
    design drawings to be considered final or complete. This is the first iteration.
    Tom said, “*I* need to reorganize all the components so that they’ll fit with
    the Composite pattern. I think that will probably change a lot of things.” It
    was late, so the team adjourned for the night.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: “这需要我对设计进行另一次迭代，”汤姆说。他想起了那句古老的谚语，“没有战斗计划能在与敌人首次接触后幸存。”他几乎不把凯蒂和菲比视为他的敌人，但他并不期望他的初步设计图纸会被视为最终或完整的。这是第一次迭代。汤姆说，“我需要重新组织所有组件，以便它们能与组合模式相匹配。我认为这可能会改变很多事情。”时间已经很晚了，所以团队决定休息。
- en: The second pass
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二次迭代
- en: 'Tom was excited the next morning. He was at the lab early and went straight
    to work refining the diagram. All totaled, he felt he could use five of the patterns
    Kitty and Phoebe used in the bicycle project, as follows:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 第二天早上，汤姆非常兴奋。他早早地来到实验室，直接开始完善图表。总的来说，他觉得自己可以使用凯蒂和菲比在自行车项目中使用的五种模式，如下所示：
- en: '**Creational patterns**:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建模式**：'
- en: '**Builder**: Tom can leverage this pattern to handle the complicated object
    creation needed for a wheelchair class, including handling the composite and bridge
    implementations'
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**构建者**：汤姆可以利用这个模式来处理轮椅类所需的复杂对象创建，包括处理组合和桥接实现'
- en: '**Singleton**: Tom considers the builder class might be made into a singleton
    to save resource.'
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**单例**：汤姆认为构建者类可能被做成单例以节省资源。'
- en: '**Structural patterns**:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**结构模式**：'
- en: '**Composite**: Tom will create a cost model similar to the one created for
    the bicycles, but this time it will be integrated directly into the structure
    of the wheelchair classes instead of being created separately.'
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**组合**：汤姆将创建一个类似于为自行车创建的成本模型，但这次它将直接集成到轮椅类的结构中，而不是单独创建。'
- en: '**Bridge**: As with the bicycles, Tom uses the bridge to vary complexity in
    the paint jobs and the wheelchair classes independently.'
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**桥接**：与自行车一样，汤姆使用桥接来独立地改变油漆工作和轮椅类的复杂性。'
- en: '**Behavioral patterns**:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**行为模式**：'
- en: '**Command**: The Command pattern will be used to bundle all the details needed
    to create a wheelchair into a single object that can then be sent to a receiver
    class'
  id: totrans-184
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**命令**：将使用命令模式将创建轮椅所需的所有细节捆绑成一个单一的对象，然后可以将其发送到接收器类'
- en: Tom set up the second design meeting with Kitty and Phoebe, which was accepted
    with less fanfare. The trio huddled around the conference room display and Tom
    presented his diagram.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆安排了与凯蒂和菲比的第二次设计会议，这次会议没有引起太多关注。三人围坐在会议室的显示屏周围，汤姆展示了他的图表。
- en: The Builder pattern
  id: totrans-186
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建者模式
- en: Tom wasted no time getting into the weeds. “We talked about the possibilities
    of using the Builder pattern. I think it’s going to work really well,” Tom said.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆没有浪费时间深入细节。“我们讨论了使用构建者模式的可能性。我认为它会非常有效，”汤姆说。
- en: 'Deftly moving the pointer around the screen with his big toe, he added the
    classes needed to implement the Builder pattern. You can see the result here:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 他巧妙地用大脚趾在屏幕上移动指针，添加了实现构建者模式所需的类。你可以在这里看到结果：
- en: '![Figure 6.17: Tom has added the structures required for the Builder pattern
    ](img/B18605_Figure_6.17.jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.17：汤姆已经添加了构建者模式所需的结构](img/B18605_Figure_6.17.jpg)'
- en: 'Figure 6.17: Tom has added the structures required for the Builder pattern'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.17：汤姆已经添加了构建者模式所需的结构
- en: 'We covered the parts of the pattern in detail in [*Chapter 3*](B18605_03.xhtml#_idTextAnchor063),
    *Getting Creative with Creational Patterns*, but let’s quickly review this:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[*第 3 章*](B18605_03.xhtml#_idTextAnchor063)中详细介绍了模式的各个部分，*用创建模式进行创新*，但让我们快速回顾一下：
- en: The builder is defined by an interface or an abstract class. Here, that will
    be `IWheelchairBuilder`.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建者由一个接口或抽象类定义。在这里，那将是 `IWheelchairBuilder`。
- en: The builder is controlled directly by a `WheelchairBuilderDirector` class that
    contains a private instance of the builder interface. All the work is done by
    the director.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建者直接由包含构建者接口私有实例的 `WheelchairBuilderDirector` 类控制。所有工作都由导演完成。
- en: Concrete instances of builders are defined for each product. In this case, each
    wheelchair model gets its own builder, giving us great flexibility given the inherent
    differences between the models.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为每个产品定义了构建者的具体实例。在这种情况下，每个轮椅型号都有自己的构建者，考虑到型号之间的固有差异，这为我们提供了很大的灵活性。
- en: “This is a good start,” Kitty said. “We also talked about making the builder
    a singleton.”
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: “这是一个好的开始，”基蒂说。“我们还讨论了将构建器做成单例的问题。”
- en: “Right!” said Tom.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: “没错！”汤姆说。
- en: The Singleton pattern
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单例模式
- en: 'Tom replied, “There’s not much to say about this one.” Tom made two changes
    to the `WheelchairBuilderDirector` class in the diagram. You can see the changes
    here:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆回答说，“这个没有太多可说的。”汤姆在图中的`WheelchairBuilderDirector`类中做了两个修改。你可以在这里看到这些修改：
- en: '![Figure 6.18: The structure for the Builder pattern used for wheelchairs has
    been made into a Singleton. You can tell since there’s only a single number on
    the diagram ](img/B18605_Figure_6.18.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![图6.18：用于轮椅的构建模式的结构已被转换为单例。你可以从图上只有一个数字来判断](img/B18605_Figure_6.18.jpg)'
- en: 'Figure 6.18: The structure for the Builder pattern used for wheelchairs has
    been made into a Singleton. You can tell since there’s only a single number on
    the diagram'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.18：用于轮椅的构建模式的结构已被转换为单例。你可以从图上只有一个数字来判断
- en: “To make this builder a Singleton, I just added the internal reference `WheelchairBuilderSingleton`
    (1). This will hold an instance of `WheelchairBuilderDirector` if the object has
    already been instantiated. Then, I added the `GetInstance()` method. This method
    will check to see whether there is an instance already in `WheelchairBuilderSingleton`.
    If it’s empty, the method creates an instance, stores it in that private variable,
    and returns the instance. If there’s already an instance there, it returns that
    one. I’m not sure we get anything from making it a singleton. Usually, singletons
    work best in conjunction with an object pool for expensive instantiations such
    as database connections. I’m not sure we have that here, but we can decide when
    we write it. Taking it out isn’t a big deal.”
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: “为了使这个构建器成为单例，我只是在内部添加了引用`WheelchairBuilderSingleton`（1）。如果对象已经被实例化，这个引用将持有`WheelchairBuilderDirector`的一个实例。然后，我添加了`GetInstance()`方法。这个方法将检查`WheelchairBuilderSingleton`中是否已经有了一个实例。如果它是空的，该方法将创建一个实例，将其存储在那个私有变量中，并返回该实例。如果那里已经有一个实例，它将返回那个实例。我不确定我们通过将其做成单例能得到什么。通常，单例与对象池结合使用效果最好，用于处理昂贵的实例化，比如数据库连接。我不确定我们这里是否有，但我们可以决定在编写时是否需要。移除它并不是什么大问题。”
- en: The girls nodded their heads in understanding. They were both waiting anxiously
    to see what Tom did with the Composite pattern, which was next on the agenda.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 女孩们点头表示理解。她们都焦急地等待看看汤姆接下来会如何使用组合模式，这是议程上的下一个项目。
- en: The Composite pattern
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 组合模式
- en: “I really liked the way you used the Composite pattern with your bicycle models.
    You were able to leverage the pattern to compute component cost and weight for
    shipping. But you modeled a special structure just for that purpose,” said Tom.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: “我真的很喜欢你在自行车模型中使用组合模式的方式。你能够利用这个模式来计算组件成本和重量以便于运输。但你为了这个目的专门建模了一个特殊结构，”汤姆说。
- en: Kitty fielded the criticism, saying, “A separate structure met our needs at
    the time we built it. We already had our classes in production code and we didn’t
    want to violate the open-closed principle of SOLID.” We covered SOLID in [*Chapter
    2*](B18605_02.xhtml#_idTextAnchor036).
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 基蒂回应说，“在建造它的时候，一个单独的结构满足了我们的需求。我们已经有了一些生产代码中的类，我们不想违反SOLID原则中的开闭原则。”我们在[*第二章*](B18605_02.xhtml#_idTextAnchor036)中讨论了SOLID原则。
- en: 'Tom wanted to build a Composite pattern directly into the structure of the
    wheelchair. This was a little bit challenging because he didn’t necessarily want
    the structural requirements of the composite to define the structure of the wheelchair.
    Instead, what he really needed was a normal object structure that acted as a composite.
    “We can improve on your design by baking the composite structure directly into
    all our objects. We need to think about the wheelchair assembly as a hierarchy.
    I see it as looking like this,” Tom said. He wheeled over to a nearby whiteboard.
    The girls had set one up on a special stand so that Tom could reach it. He sketched
    out a hierarchical diagram showing how the parts of an unpowered chair might be
    modeled. Once he had drawn it, Kitty grabbed a marker. “That’s good, but the powered
    chair would look a little different,” she said while sketching out her own idea
    for a hierarchical powered chair model. The whiteboard looked like this:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆想要直接在轮椅的结构中构建组合模式。这有点挑战性，因为他并不一定想让组合的结构要求定义轮椅的结构。相反，他真正需要的是一个正常的对象结构，它充当一个组合。他说：“我们可以通过将组合结构直接嵌入到所有我们的对象中来改进你的设计。我们需要将轮椅组装视为一个层次结构。我认为它看起来像这样，”汤姆说着，推着轮椅走到附近的白板前。女孩们在特殊支架上设置了一个白板，这样汤姆就能够得着。他画出了一个层次图，展示了无动力轮椅的部件可能如何建模。一旦画完，凯蒂拿起一支记号笔。“这很好，但动力轮椅的外观会有点不同，”她说着，同时画出了她自己的动力轮椅层次模型的想法。白板看起来是这样的：
- en: '![Figure 6.19: Tom and Kitty were each able to draw a powered and unpowered
    wheelchair as an object hierarchy to make it compatible with the Composite pattern
    ](img/B18605_Figure_6.19.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![图6.19：汤姆和凯蒂各自能够绘制一个有动力和无动力的轮椅作为对象层次结构，以使其与组合模式兼容](img/B18605_Figure_6.19.jpg)'
- en: 'Figure 6.19: Tom and Kitty were each able to draw a powered and unpowered wheelchair
    as an object hierarchy to make it compatible with the Composite pattern'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.19：汤姆和凯蒂各自能够绘制一个有动力和无动力的轮椅作为对象层次结构，以使其与组合模式兼容
- en: Shifting the group’s focus back to the computer monitor, Tom continued. “With
    this structure in mind, we need to overhaul the classes that specify the construction
    of the frame. Instead of each piece being constructed and assembled as one piece,
    the robots would need to assemble a collection of parts in order. Structuring
    this way allows accounting to meticulously track the weight and cost of each wheelchair
    down to the smallest component. With the ability to track weight and cost, the
    sales department will be able to price the chairs competitively and work with
    insurance companies and charities to make sure the chairs can find their way into
    people’s lives who need them without bankrupting the company.” Kitty and Phoebe
    continued staring at the screen, barely blinking.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 将小组的注意力转回到电脑显示器上，汤姆继续说：“考虑到这个结构，我们需要彻底审查指定框架构建的类。而不是每个部件作为一个整体构建和组装，机器人需要按顺序组装一系列部件。这样结构化允许会计精确追踪每辆轮椅的重量和成本，直到最小组件。有了追踪重量和成本的能力，销售部门将能够以有竞争力的价格定价椅子，并与保险公司和慈善机构合作，确保这些椅子能够进入需要它们的人的生活，而不会使公司破产。”凯蒂和菲比继续盯着屏幕，几乎不眨眼。
- en: He continued, “The outsourced logistics team at *ExFed* can use the weight calculations
    to guarantee accurate shipping quotes. In the bicycle project, you constructed
    a separate object to house your composite structure.”
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 他继续说：“*ExFed*的外包物流团队可以使用重量计算来保证准确的运费报价。在自行车项目中，你构建了一个单独的对象来容纳你的组合结构。”
- en: '“What I’ll do for this project is hide the composite in the normal structure,”
    Tom said as he zoomed into the appropriate part of the diagram. He dragged a new
    class to the page and titled it `WheelchairComponent`. He then italicized it and
    explained why he added the members needed for his Composite pattern idea. You
    can see this idea here:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆在放大到图纸上适当部分时说：“对于这个项目，我会将组合隐藏在正常结构中。”他拖动一个新的类到页面上，并将其命名为`WheelchairComponent`。然后他将其斜体化，并解释了他为什么添加了实现他的组合模式想法所需的成员。你可以在这里看到这个想法：
- en: '![Figure 6.20: Tom had to add and refactor a lot of classes to have it fit
    the Composite pattern without necessarily looking like a composite ](img/B18605_Figure_6.20.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![图6.20：汤姆不得不添加和重构许多类，以便在不一定看起来像组合的情况下使其符合组合模式](img/B18605_Figure_6.20.jpg)'
- en: 'Figure 6.20: Tom had to add and refactor a lot of classes to have it fit the
    Composite pattern without necessarily looking like a composite'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.20：汤姆不得不添加和重构许多类，以便在不一定看起来像组合的情况下使其符合组合模式
- en: '“What I did here was to add a `WheelchairComponent` abstract class. I usually
    do this instead of adding an interface when I need to add methods with implementations
    in them. In this case, we’ll have the `DisplayWeight()` and `DisplayCost()` methods,
    which will recursively process the subcomponents to arrive at totals for weight
    and cost. Then, I modeled all the components for the wheelchairs as abstract components
    in case we ever need to swap out concrete versions of those components.” Tom created
    a separate diagram to show this idea. Experience has taught Tom, who is now teaching
    this best practice to Kitty and Phoebe, that the best diagrams are small, focused,
    and concise. Instead of spreading out the classes in the diagram and appending
    subclasses beneath each abstract class, Tom made a diagram that just shows the
    inheritance chain for the seating components. You can see this diagram here:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: “我在这里添加了一个`WheelchairComponent`抽象类。当我需要添加带有实现的方法时，我通常这样做，而不是添加一个接口。在这种情况下，我们将有`DisplayWeight()`和`DisplayCost()`方法，这些方法将递归地处理子组件，以得出重量和成本的总额。然后，我将所有轮椅组件建模为抽象组件，以防我们以后需要替换这些组件的具体版本。”汤姆创建了一个单独的图表来展示这个想法。经验告诉汤姆，他现在正在将这个最佳实践教授给凯蒂和菲比，最好的图表是小的、专注的、简洁的。汤姆没有在图表中展开类，而是在每个抽象类下附加子类，而是制作了一个仅显示座椅组件继承链的图表。你可以在这里看到这个图表：
- en: '![Figure 6.21: The concrete seat objects inherit from the abstract WheelChairSeat
    class, which inherits from WheelchairComponent ](img/B18605_Figure_6.21.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![图6.21：具体的座位对象继承自抽象的WheelChairSeat类，该类继承自WheelchairComponent](img/B18605_Figure_6.21.jpg)'
- en: 'Figure 6.21: The concrete seat objects inherit from the abstract WheelChairSeat
    class, which inherits from WheelchairComponent'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.21：具体的座位对象继承自抽象的WheelChairSeat类，该类继承自WheelchairComponent
- en: Tom looked over at Phoebe. Clearly, the gears were turning in her mind. She
    finally spoke, saying, “What we’re doing here is have everything inherit from
    `WheelchairComponent`. The `WheelchairSeat` abstract class is there to make sure
    the concrete seat objects can be represented in the composite structure using
    Liskov substitution. Any seat will have the structure of the parent classes.”
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆看向菲比。显然，她的脑海中正在转动齿轮。她终于开口说话，说：“我们在这里做的是让所有东西都继承自`WheelchairComponent`。`WheelchairSeat`抽象类存在是为了确保具体的座位对象可以使用Liskov替换在组合结构中表示。任何座位都将具有父类的结构。”
- en: '“That’s right,” Tom said. Kitty continued her sister’s thought. “We can put
    any seat on a frame and still be able to have weight and price. That means as
    long as we assemble the hierarchy in the right order,”—she pointed back to the
    whiteboard (*Figure 6.18*) as she spoke—“we’ll be able to have the benefits of
    the Composite pattern and we will also have a flexible way to compose our wheelchairs.”
    Tom nodded in agreement. “Think of it this way: it’s like basic composition, which
    might be why the GoF called this the *Composite* pattern, but it is composition
    done a different way. It is just as flexible, but it is also iterable because
    the composition uses lists to hold the parts.”'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: “没错，”汤姆说。凯蒂继续她姐姐的想法。“我们可以在任何框架上放置任何座位，同时仍然能够拥有重量和价格。这意味着只要我们按照正确的顺序组装层次结构，”——她边说边指着白板（*图6.18*）——“我们就能享受到组合模式的优点，同时我们也将拥有一种灵活的方式来组合我们的轮椅。”汤姆点头表示同意。“这样想吧：它就像基本的组合，这可能就是为什么GoF将其称为*组合*模式，但它是以不同的方式进行的组合。它同样灵活，但它也是可迭代的，因为组合使用列表来持有部分。”
- en: Phoebe wrinkled her nose. “Should we worry about the fact this structure might
    make it possible to add 200 seats to a wheelchair?”
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 菲比皱了皱鼻子。“我们应该担心这种结构可能会使我们在轮椅上添加200个座位的事实吗？”
- en: “No,” said Tom. “You can handle that with encapsulation logic. Each class can
    impose rules on the list of components it contains. Liskov substitution makes
    the structure flexible, which gives you the power to construct anything. But you
    need to temper this by added encapsulation methods that control what goes into
    the composition.” This time it was Kitty’s face that was scrunched up like she’d
    smelled something awful. “This seems very complicated for the developer that has
    to use this method. They’ll have to remember to assemble the object in the right
    order. They’ll have to look back at the diagram (*Figure 6.18*) anytime they want
    to build a wheelchair.”
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: “不，”汤姆说。“你可以用封装逻辑来处理这个问题。每个类都可以对其包含的组件列表施加规则。Liskov替换使结构灵活，这给了你构建任何东西的能力。但你需要通过添加控制组成内容的封装方法来平衡这一点。”这次是凯蒂的脸皱了起来，好像闻到了什么难闻的东西。“这对必须使用这个方法的开发者来说似乎很复杂。他们必须记得按照正确的顺序组装对象。每次他们想要构建轮椅时，都必须查看图表(*图6.18*)。”
- en: “Not so,” said Tom. “Remember the Builder pattern we are using to direct the
    assembly of the object?” Both the girls’ faces relaxed. They instantly got it.
    “The patterns can be used together! The builder’s job, its *raison d’être*, is
    to handle the construction of complex objects using a well-defined set of steps.”
    “We’ll need to alter our builder class diagram to account for this change,” said
    Kitty. Phoebe looked alarmed. “Aren’t we violating the open-closed principle?
    We’ve already designed that class!” Kitty rolled her eyes as Tom grinned. “No,
    Phoebe. It’s just a diagram. It’s not production code!” At that moment, Phoebe
    fully understood why Tom had chosen to diagram his work before he committed it
    to code. At a master’s keyboard, coding becomes a discipline. We need a way to
    relax the rules so that we can at least have a chance at getting our design right
    the first time.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: “不，”汤姆说。“还记得我们用来指导对象组装的构建者模式吗？”两个女孩的脸放松了。她们立刻明白了。“这些模式可以一起使用！构建者的工作，它的*存在理由*，是使用一组定义良好的步骤来处理复杂对象的构建。”“我们需要修改我们的构建者类图来适应这个变化，”凯蒂说。菲比看起来很惊讶。“我们不是违反了开闭原则吗？我们已经设计了那个类！”凯蒂翻了个白眼，汤姆则露出了笑容。“不，菲比。那只是一个图表。它不是生产代码！”就在那一刻，菲比完全理解了为什么汤姆在将代码提交之前选择先绘制工作图表。在大师的键盘上，编码变成了一种纪律。我们需要一种方法来放松规则，这样我们至少有机会第一次就设计出正确的设计。
- en: “The parent `WheelchairComponent` class has the `Subcomponents` list in it,
    but I’m thinking of hiding it. For now, it’s public, but my idea is to have the
    builder add the appropriate subcomponents to the array at build time. This means
    I can have a traversable component tree without forcing my whole structure to
    conform to a common interface, which is probably impossible,” said Tom.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: “父类`WheelchairComponent`中包含`Subcomponents`列表，但我正在考虑将其隐藏起来。目前它是公开的，但我的想法是在构建时让构建器将适当的子组件添加到数组中。这意味着我可以在不强迫整个结构符合通用接口的情况下拥有一个可遍历的组件树，这可能是无法实现的，”汤姆说。
- en: '“Hey, that’s pretty neat!” Kitty said enthusiastically. “Can we deal with the
    changes to the Builder pattern really quickly?” Kitty asked. The trio brought
    up the diagram they had created in *Figure 6.16* and began to modify it. After
    a few minutes, it looked like this:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: “嘿，这真不错！”凯蒂热情地说。“我们能快速处理对构建者模式的更改吗？”凯蒂问道。三人拿出他们在*图6.16*中创建的图表并开始修改它。几分钟过后，它看起来是这样的：
- en: '![Figure 6.22: The Builder pattern with the addition of methods to build the
    composite ](img/B18605_Figure_6.22.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![图6.22：添加了构建复合方法后的构建者模式](img/B18605_Figure_6.22.jpg)'
- en: 'Figure 6.22: The Builder pattern with the addition of methods to build the
    composite'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.22：添加了构建复合方法后的构建者模式
- en: “That’s it?” asked Phoebe. “What about all that fancy encapsulation logic we
    talked about? Where is that on the diagram?” Phoebe pressed. “The logic will be
    the `Make` method in the `WheelchairBuilderDirector` class. Remember, it is the
    director class that is responsible for the logic that assembles and returns the
    object.”
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: “就这样了吗？”菲比问道。“我们之前讨论的所有那些花哨的封装逻辑呢？在图表上在哪里？”菲比追问。“逻辑将是`WheelchairBuilderDirector`类中的`Make`方法。记住，负责组装和返回对象的逻辑是导演类。”
- en: Kitty and Phoebe seemed enthusiastic about Tom’s work. He moved on to the next
    pattern.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 凯蒂和菲比对汤姆的工作表现出热情。他转向下一个模式。
- en: The Bridge pattern
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 桥接模式
- en: “In our last meeting, we discussed reusing the Bridge pattern work from the
    bicycle project. I think having paintable frames will be popular because most
    companies just make black or gray wheelchairs. That’s fine for hospital loaners,
    but if you’re a lifer like me, after a while you’re ready to upgrade.” Tom smiled.
    His chair had a little bit of red paint on a few parts of the frame, but it was
    far from *upgraded*.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: “在我们上次会议中，我们讨论了从自行车项目中重用桥接模式的工作。我认为可涂漆的框架将会很受欢迎，因为大多数公司只是制作黑色或灰色的轮椅。这对医院的借用轮椅来说是可以的，但如果你像我一样是终身用户，过一段时间你可能会想要升级。”汤姆微笑着说。他的轮椅框架上有一点红色油漆，但远未达到*升级*的程度。
- en: Phoebe said, “With our bicycles, one of our Kickstarter backers designed our
    first custom paint job. Maybe you should come up with one for the wheelchairs.”
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 菲比说：“在我们的自行车中，我们的一位Kickstarter支持者设计了我们的第一个定制喷漆工作。也许你应该为轮椅想一个设计。”
- en: Tom flushed. “I’m honored, but really, I’d rather bring in a bunch of the kids
    from the hospital and see about making some designs they like.” Kitty smiled warmly.
    Phoebe’s respect for Tom deepened.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆脸红了。“我很荣幸，但说实话，我更愿意带一些医院的孩子来，看看他们是否喜欢一些设计。”凯蒂热情地微笑着。菲比对汤姆的尊重加深了。
- en: 'Changing the subject, Tom once again focused on his screen. “I didn’t change
    anything from the bicycle project’s implementation except for adding the concrete
    painter classes.” Kitty and Phoebe nodded, glad that Tom was going to be able
    to reuse some of their earlier work. “Of course, I also added a `FramePainter`
    attribute to the abstract `Wheelchair` class so that all the subclasses will have
    it,” Tom concluded. You can see the UML diagram for the Bridge pattern applied
    to the wheelchair project here:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 改变话题后，汤姆再次专注于他的屏幕。“我没有从自行车项目的实现中改变任何东西，除了添加具体的画家类。”凯蒂和菲比点头，很高兴汤姆将能够重用他们的一些早期工作。“当然，我还向抽象的`Wheelchair`类添加了一个`FramePainter`属性，这样所有的子类都会有它，”汤姆总结道。你可以在这里看到应用于轮椅项目的桥接模式的UML图：
- en: '![Figure 6.23: The Bridge pattern is generally unchanged save for the concrete
    classes ](img/B18605_Figure_6.23.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![图6.23：桥接模式除了具体的类外，一般没有变化](img/B18605_Figure_6.23.jpg)'
- en: 'Figure 6.23: The Bridge pattern is generally unchanged save for the concrete
    classes'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.23：桥接模式除了具体的类外，一般没有变化
- en: '“Are the builder classes going to be directly adding the paint to the wheelchair
    objects?” Kitty asked. Tom said, “I’m glad you reminded me. I would have forgotten
    to add that to the builder diagrams.” Tom made a quick modification to the builder
    diagram we last saw in *Figure 6.22*. The new version can be seen in *Figure 6.24*:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: “建造类会直接将油漆添加到轮椅对象上吗？”凯蒂问。汤姆说：“很高兴你提醒我。我差点忘了在建造图中添加这一点。”汤姆对我们上次看到的图6.22中的建造图进行了快速修改。新版本可以在图6.24中看到：
- en: '![Figure 6.24: Builder pattern diagram revised with the addition of the BuildFramePainter()
    method ](img/B18605_Figure_6.24.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![图6.24：添加了BuildFramePainter()方法后的Builder模式图](img/B18605_Figure_6.24.jpg)'
- en: 'Figure 6.24: Builder pattern diagram revised with the addition of the BuildFramePainter()
    method'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.24：添加了BuildFramePainter()方法后的Builder模式图
- en: Next on the list was the Command pattern.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是命令模式。
- en: The Command pattern
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 命令模式
- en: “*There is one* *last refactor I want to make. You used the Command pattern
    to direct the manufacturing robotics to build your bicycle. Naturally, I want
    to use the same manufacturing system. I think the differences can be easily handled,”*
    Tom said.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: “*还有最后一个重构我想做。你使用了命令模式来指导制造机器人建造你的自行车。当然，我想使用相同的制造系统。我认为差异可以很容易地处理，"* 汤姆说。
- en: '*“OK,”* Phoebe said quizzically with one raised eyebrow. “*What are you doing
    to my babies?*”'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '*“好的，"* 菲比好奇地挑起一边眉毛说。*“*你在对我的宝贝们做什么？"*”'
- en: 'Tom dragged some classes to the diagram and arranged them to form the Command
    pattern. Once he got everything filled in, his diagram looked like this:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆将一些类拖到图中，并排列它们以形成命令模式。一旦他填完了所有内容，他的图看起来就像这样：
- en: '![Figure 6.25: Tom’s change to the Command pattern is fairly minor ](img/B18605_Figure_6.25.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![图6.25：汤姆对命令模式的改动相当小](img/B18605_Figure_6.25.jpg)'
- en: 'Figure 6.25: Tom’s change to the Command pattern is fairly minor'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.25：汤姆对命令模式的改动相当小
- en: 'Tom said, “*We need to make a* *change to the DoBusinessLogic method in AssemblyLineReceiver*.
    *You have it set up to only take one interface: the IPaintableBike interface.
    I can’t force-fit my wheelchair to be a paintable bike. We could change the central
    interface for my project from IMobilityDevice* *to IManufacturable*.” He made
    the change as he was talking. Tom continued, “*This way, the interface has elements
    common to bicycles and wheelchairs, and probably anything else you’d ever want
    to make*.” He finished speaking as he added a new member variable to the `IManufacturable`
    interface: `ManufacturingStatus`. This was in the `PaintableBicycle` class, but
    to this point, Tom hadn’t thought to put it in the diagram. You can review the
    revisions here:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆说：“*我们需要对* *AssemblyLineReceiver 中的 DoBusinessLogic 方法进行更改*。*您将其设置为只接受一个接口：IPaintableBike
    接口。我无法将我的轮椅强行改装成可涂漆的自行车。我们可以将我项目的中央接口从 IMobilityDevice* *更改为 IManufacturable*。”他在说话的同时进行了更改。汤姆继续说：“*这样，接口具有自行车和轮椅等元素的共同点，也许还有你想要制作的任何其他东西*。”当他添加一个新的成员变量到
    `IManufacturable` 接口：`ManufacturingStatus` 时，他说完了。这本来是在 `PaintableBicycle` 类中，但到目前为止，汤姆还没有想到把它放在图中。您可以在这里查看修订内容：
- en: '![Figure 6.26: The final change renames the central interface IManufacturable.
    ](img/B18605_Figure_6.26.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.26：最终更改将中央接口重命名为 IManufacturable](img/B18605_Figure_6.26.jpg)'
- en: 'Figure 6.26: The final change renames the central interface IManufacturable.'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.26：最终更改将中央接口重命名为 IManufacturable。
- en: For the first time during the presentation, Phoebe was standing up. She stared
    blankly for a moment. “I don’t know about that,” she said. She didn’t say another
    word for the rest of the meeting.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在这次演示中，菲比第一次站起来。她茫然地 staring for a moment. “我不知道那件事，”她说。在会议的剩余时间里，她没有再说一句话。
- en: Kitty picked up the slack. “Tom, this looks great! I can see Phoebe has some
    trepidation about your last refactor, but we can work through that. Let’s get
    started on the base classes for your project right away.” Kitty and Tom spent
    the rest of the afternoon setting up a repository on GitHub and configuring a
    **continuous integration** (**CI**) build for the new project. Having pushed a
    trivial class and watched it build, Tom added a simple unit test to the class.
    It too passed. It was about this time when the three realized it was very late
    at night, or very early in the morning, depending on your point of view. Though
    they didn’t really want to, they reluctantly broke for the evening (or morning)
    and resolved to get started the next day at the crack of noon.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 基蒂接过了接力棒。“汤姆，这看起来很棒！我看到菲比对你的上次重构有些犹豫，但我们可以克服这一点。让我们立即开始为你的项目设置基础类。”基蒂和汤姆在下午剩余的时间里在
    GitHub 上设置了一个仓库，并为新项目配置了一个 **持续集成**（**CI**）构建。在推送了一个微不足道的类并看到它构建后，汤姆为该类添加了一个简单的单元测试。它也通过了。大约在这个时候，三个人意识到已经很晚了，或者很早了，这取决于你的观点。尽管他们并不真的想，但他们不情愿地结束了晚上（或早上）的活动，并决定第二天中午开始工作。
- en: Summary
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter presented a design scenario where we saw a drastic change in business
    requirements for our nascent bicycle company as they made the brave decision to
    branch out and make wheelchairs to help those in need. As usually happens with
    these things, this change was not planned and happened at an inopportune moment.
    Strapped for time and inspiration, Kitty and Phoebe hired Tom, a wheelchair-bound
    software engineer who found himself aggressively unemployed following an executive
    meltdown at his previous employer.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了一个设计场景，我们看到了我们新兴自行车公司在勇敢地决定拓展业务并制造轮椅以帮助有需要的人时，业务需求发生了剧烈变化。正如这些事情通常发生的那样，这个变化没有计划，而且发生在不合适的时候。在时间和灵感都紧张的情况下，基蒂和菲比雇佣了汤姆，一位轮椅软件工程师，他在前雇主公司高管崩溃后发现自己被无情地解雇了。
- en: Tom leveraged his expertise in software development, his personal experience,
    and his experience as a volunteer helping recently injured patients learn to cope
    with living in a wheelchair. He was able to bring a fresh perspective to the problem
    and began to design a solution that fits the manufacturing environment as well
    as the very real cost and resource constraints already extant at Bumble Bikes.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆利用他在软件开发方面的专业知识、个人经验以及作为志愿者帮助最近受伤的患者学习如何在轮椅上生活的经验。他能够为问题带来新的视角，并开始设计一个既适合制造环境，又符合
    Bumble Bikes 已经存在的非常实际的成本和资源限制的解决方案。
- en: After about a week of analysis and design using UML, Tom was able to plan his
    development effort leading up to the first release of the new wheelchair project.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 经过大约一周的分析和设计，使用UML，汤姆能够规划他的开发工作，为新的轮椅项目的第一个版本做准备。
- en: Tom did a number of things differently than the girls did on the bicycle project.
    Mainly, he designed with patterns and UML first, instead of trying to find patterns
    as he went. Hopefully, this will lead to fewer instances where we need to make
    a drastic change to the code that might violate our sacrosanct SOLID principles.
    Tom was adamant that this practice would save a lot of time and frustration on
    the project.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆在自行车项目上做了一些与女孩们不同的事情。主要的是，他首先使用模式和UML进行设计，而不是在寻找模式的过程中尝试。希望这能减少我们需要对代码进行重大更改的情况，这些更改可能会违反我们神圣的SOLID原则。汤姆坚信这种做法将节省大量时间和挫折。
- en: 'Tom followed a process for developing his design diagrams as follows:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆按照以下步骤开发他的设计图表：
- en: In the first pass, he designed all the base classes upfront. He just drew the
    classes and the inheritance lines.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第一次迭代中，他提前设计了所有基本类。他只是画出了类和继承线。
- en: Once he had the classes, he filled in the inheritance and composition lines.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦有了类，他就填写了继承和组合线。
- en: He thought about patterns, but didn’t diagram them. Instead, he held a meeting
    with his development team who had experience and insight with the same set of
    patterns he was working with. Effectively, he was using iterative development,
    but with a diagram instead of code. He got input from his stakeholders before
    trying to finish the whole design project.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 他考虑了模式，但没有将它们绘制成图表。相反，他与他的开发团队举行了一次会议，该团队拥有与他在工作中使用的相同模式的经验和洞察力。实际上，他正在使用迭代开发，但用图表代替代码。在尝试完成整个设计项目之前，他从利益相关者那里获得了反馈。
- en: Tom, Phoebe, and Kitty as a team made a second pass and collaboratively added
    in the patterns.
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 汤姆、菲比和凯蒂作为一个团队进行了第二次迭代，并共同添加了这些模式。
- en: The last consideration of Tom’s performance was that he didn’t feel compelled
    to use every single pattern available to him. He went out of his way to reuse
    work wherever he could. Kitty and Phoebe were far more impressed by this than
    if Tom had suggested a total rewrite, as many developers seem to want to do when
    they start at a new company.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆对性能的最后一个考虑是他没有感到有必要使用他可用的每一个模式。他尽力在可能的地方重用工作。凯蒂和菲比对这一点印象深刻，这比汤姆建议完全重写要强得多，许多开发者在加入新公司时似乎都想要这样做。
- en: In the next chapter, we’ll follow Tom, Kitty, and Phoebe as they writes the
    code that implements his diagrams.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将跟随汤姆、凯蒂和菲比，看看他们如何编写实现其图表的代码。
- en: Questions
  id: totrans-262
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What are the advantages of diagramming a project instead of simply modeling
    everything in code?
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与仅将所有内容建模为代码相比，绘制项目图表有哪些优点？
- en: What is the one time we definitely use an abstract class instead of an interface?
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在什么情况下一定会使用抽象类而不是接口？
- en: How did Tom leverage the Builder pattern to work with other patterns in the
    second pass of the design session?
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 汤姆是如何在设计的第二次迭代中利用建造者模式与其他模式协同工作的？
- en: Can you think of any improvements to Tom’s design?
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你能想到对汤姆的设计有任何改进的地方吗？
- en: Further reading
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: Check out this book’s companion website at [https://csharppatterns.dev](https://csharppatterns.dev).
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 查看本书的配套网站[https://csharppatterns.dev](https://csharppatterns.dev)。
