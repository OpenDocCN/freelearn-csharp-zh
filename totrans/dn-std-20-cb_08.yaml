- en: To iOS with Xamarin
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Xamarin进入iOS
- en: 'In this chapter, we will be looking at these recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下菜谱：
- en: Installing Visual Studio for Mac
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Visual Studio for Mac
- en: Hello iOS – creating a Xamarin iOS app
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hello iOS – 创建一个Xamarin iOS应用
- en: Creating the .NET Standard 2.0 library
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建.NET Standard 2.0库
- en: Putting things together and testing the application
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整合组件并测试应用
- en: Technical requirements
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Readers should have a basic knowledge of C#. They should also have a basic knowledge
    of using Visual Studio, installing packages using NuGet, and referencing libraries
    within projects from other projects.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 读者应具备C#的基本知识。他们还应具备使用Visual Studio、使用NuGet安装包以及在项目中引用其他项目库的基本知识。
- en: 'The code files for this chapter can be found on GitHub:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码文件可以在GitHub上找到：
- en: '[https://github.com/PacktPublishing/DotNET-Standard-2-Cookbook/tree/master/Chapter08](https://github.com/PacktPublishing/DotNET-Standard-2-Cookbook/tree/master/Chapter08)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/DotNET-Standard-2-Cookbook/tree/master/Chapter08](https://github.com/PacktPublishing/DotNET-Standard-2-Cookbook/tree/master/Chapter08)'
- en: 'Check out the following video to see the code in action:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频以查看代码的实际操作：
- en: '[https://goo.gl/fG1ErJ](https://goo.gl/fG1ErJ)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://goo.gl/fG1ErJ](https://goo.gl/fG1ErJ)'
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Xamarin is a development platform that allows you to build native applications
    for iOS, Android, and Windows. The most amazing thing about Xamarin is that you
    can use your existing C# skills to develop these applications. At the beginning,
    Xamarin was called Xamarin Studio and was used for building applications in both
    macOS and Windows. Windows users had the extra privilege of using Visual Studio.
    After its acquisition by Microsoft, Xamarin Studio became Visual Studio for Mac.
    In this chapter, we will be using Visual Studio for Mac to build our applications,
    throughout the recipes.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Xamarin是一个开发平台，允许您为iOS、Android和Windows构建原生应用。Xamarin最令人惊奇之处在于，您可以使用现有的C#技能来开发这些应用。最初，Xamarin被称为Xamarin
    Studio，用于在macOS和Windows上构建应用。Windows用户有额外特权使用Visual Studio。在微软收购后，Xamarin Studio变成了Visual
    Studio for Mac。在本章中，我们将使用Visual Studio for Mac构建我们的应用，贯穿整个菜谱。
- en: Installing Visual Studio for Mac
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Visual Studio for Mac
- en: In this recipe, we will be looking at how to get Visual Studio for Mac and install
    it. We will also be looking at setting up a few other things.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将探讨如何获取Visual Studio for Mac并安装它。我们还将探讨设置一些其他事情。
- en: Getting ready
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have a Mac to complete this recipe. Currently, I am using macOS
    High Sierra version 10.13.3\. Also make sure you have already installed the latest
    version of XCode. XCode is required, alongside Visual Studio, for Mac to build
    iOS applications.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您有一台Mac来完成此菜谱。目前，我正在使用macOS High Sierra版本10.13.3。同时，请确保您已经安装了最新的XCode版本。XCode是Mac构建iOS应用时所需的，与Visual
    Studio一起使用。
- en: How to do it...
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Let's open up your favorite browser.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们打开您最喜欢的浏览器。
- en: Type [https://www.xamarin.com/download](https://www.xamarin.com/download) in
    the address bar and press *Enter*.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在地址栏中输入[https://www.xamarin.com/download](https://www.xamarin.com/download)，然后按*Enter*。
- en: 'You should see a screen similar to this:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该看到一个类似的屏幕：
- en: '![](img/14a6727e-719b-4e77-8f26-db4c38ef8f09.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/14a6727e-719b-4e77-8f26-db4c38ef8f09.png)'
- en: Now, fill in your details and press the Download VS for Mac Communitybutton.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，填写您的详细信息并按下“下载VS for Mac Community”按钮。
- en: This will download a file to the `Downloads` directory by default, named  `VisualStudioForMacInstaller__215259590.1517557727.dmg`
    or something similar (the end numbers might change when you download it.)
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将默认将文件下载到“下载”目录，命名为“VisualStudioForMacInstaller__215259590.1517557727.dmg”或类似名称（下载时末尾数字可能会变化。）
- en: Double-click on that file.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击该文件。
- en: 'You should see a window similar to this:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该看到一个类似的窗口：
- en: '![](img/b848f119-fae7-45d4-aa6e-15df9607ae24.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b848f119-fae7-45d4-aa6e-15df9607ae24.png)'
- en: 'Double-click on the down arrow. In the next screen, choose the components to
    be installed:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击下箭头。在下一个屏幕中，选择要安装的组件：
- en: '![](img/f10758c4-2865-4038-8080-3b51658ac601.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f10758c4-2865-4038-8080-3b51658ac601.png)'
- en: Click the Install button to install all the components. Make sure you have selected
    Android and iOS.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击安装按钮安装所有组件。请确保您已选择了Android和iOS。
- en: 'After a successful installation, you should see this:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装成功后，你应该看到这个：
- en: '![](img/806dfbab-e7ba-4498-b11e-d29730d476fb.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/806dfbab-e7ba-4498-b11e-d29730d476fb.png)'
- en: 'Now, you can click Done to exit and start Visual Studio for Mac to launch the
    IDE:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以点击完成以退出，并启动Visual Studio for Mac以打开IDE：
- en: '![](img/7d6ac192-bd59-465e-9f99-0d01c7beca64.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7d6ac192-bd59-465e-9f99-0d01c7beca64.png)'
- en: Visual Studio for Mac
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio for Mac
- en: How it works...
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: These are simple steps for installing Visual Studio for Mac. In step 8, you
    should see Install instead of Update. This screen appeared because I already have
    a version of Visual Studio for Mac installed.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是安装 Visual Studio for Mac 的简单步骤。在第 8 步，你应该看到安装而不是更新。这个屏幕出现是因为我已经安装了 Visual
    Studio for Mac 的一个版本。
- en: Hello iOS – Creating a Xamarin iOS app
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hello iOS – 创建一个 Xamarin iOS 应用
- en: In this recipe, we will be creating our first iOS application. This will be
    a `Hello World` type of application. Later on, we will change this application
    to use a .NET Standard 2.0 library.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在本菜谱中，我们将创建我们的第一个 iOS 应用程序。这将是一个类似于“Hello World”的应用程序。稍后，我们将修改这个应用程序以使用 .NET
    Standard 2.0 库。
- en: Getting ready
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have completed the previous recipe and installed Visual Studio
    for Mac. Also, make sure you have XCode installed alongside Visual Studio for
    Mac.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你已经完成了上一个菜谱，并且安装了 Visual Studio for Mac。同时，请确保你已经安装了与 Visual Studio for Mac
    一起使用的 XCode。
- en: How to do it...
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Open Finder.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Finder。
- en: Click Applications in the left-hand pane.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧面板中点击应用程序。
- en: Now, double-click on the Visual Studio icon.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，双击 Visual Studio 图标。
- en: Now, click on the New Project button.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击新建项目按钮。
- en: In the Choose a template for your project dialog box, scroll down till you reach
    the other section.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在选择项目模板对话框中，向下滚动直到到达其他部分。
- en: 'Select Miscellaneous and, under Generic, select Blank Solution:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧面板的 iOS 部分，选择杂项，然后在通用部分选择空白解决方案：
- en: '**![](img/a78f2955-3fb0-4626-9a15-e6c05a57b3a5.png)**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/a78f2955-3fb0-4626-9a15-e6c05a57b3a5.png)**'
- en: Now, click the Next button.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击下一步按钮。
- en: 'In the Solution Name: textbox, type `Chapter8.Xamarin`. Also make sure you
    have selected a proper location:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在解决方案名称：文本框中输入 `Chapter8.Xamarin`。同时确保你已经选择了合适的存储位置：
- en: '![](img/dd1fadee-247e-46c8-bafd-40b18bbcdc11.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dd1fadee-247e-46c8-bafd-40b18bbcdc11.png)'
- en: Now, click Create.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击创建。
- en: 'Now, the Solution Explorer should look like this:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，解决方案资源管理器应该看起来像这样：
- en: '![](img/1e4a4df0-0a42-4902-b963-9b16fff192f9.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1e4a4df0-0a42-4902-b963-9b16fff192f9.png)'
- en: Now, *Ctrl* + click on the Chapter8.Xamarin label and select Add  | New Project.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，*Ctrl* + 点击 Chapter8.Xamarin 标签并选择添加 | 新项目。
- en: Select App under the iOS section in the left-hand pane and select Single View
    App in the right-hand pane.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧面板的 iOS 部分，选择应用程序，然后在右侧面板中选择单视图应用程序。
- en: 'Make sure C# is selected as the programming language:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保选择 C# 作为编程语言：
- en: '![](img/7902ab69-3413-47d6-bc6f-bbebcb8ed5dd.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7902ab69-3413-47d6-bc6f-bbebcb8ed5dd.png)'
- en: Click the Next button.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击下一步按钮。
- en: The New Project dialog box will be displayed.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新建项目对话框将显示。
- en: 'Type `Chapter8.Xamarin.iOSApp` in the App Name: textbox, `com.chapter8` in
    the Organization Identifier: textbox, and uncheck iPad from the devices. Leave
    the Target: OS as it is:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在应用程序名称：文本框中输入 `Chapter8.Xamarin.iOSApp`，在组织标识符：文本框中输入 `com.chapter8`，并取消选中
    iPad。保持目标：操作系统不变：
- en: '![](img/846187d5-f89a-4900-a60e-2fc279bca039.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/846187d5-f89a-4900-a60e-2fc279bca039.png)'
- en: Click Next.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击下一步。
- en: 'Leave everything as it is and click Create:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持一切不变并点击创建：
- en: '![](img/3d2f89e6-fafc-4c71-bed9-9e5ec24fe000.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d2f89e6-fafc-4c71-bed9-9e5ec24fe000.png)'
- en: 'Now, the Solution Explorer should look like this:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，解决方案资源管理器应该看起来像这样：
- en: '![](img/a3d87b1b-ba63-478d-8234-64268c4298d2.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a3d87b1b-ba63-478d-8234-64268c4298d2.png)'
- en: Solution Explorer
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案资源管理器
- en: Now, press the *command* + *return* to debug the application or press the Play
    button on top of the Solution Explorer.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，按下 *command* + *return* 以调试应用程序或按下解决方案资源管理器顶部的播放按钮。
- en: 'Now, you should see the iOS emulator kicking in, which displays the first screen
    of the app:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你应该能看到 iOS 模拟器启动，它显示了应用的第一屏：
- en: '![](img/fa0a3cf1-187e-4a83-95f8-814cbebff80e.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fa0a3cf1-187e-4a83-95f8-814cbebff80e.png)'
- en: Congratulations! You have tested your first iOS application.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 恭喜！你已经测试了你的第一个 iOS 应用程序。
- en: Now, stop the debugger by pressing *shift* + *command* + *return*.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过按下 *shift* + *command* + *return* 停止调试器。
- en: How it works...
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In steps 1 to 3, we opened Visual Studio for Mac and, in steps 6 to 9, we created
    a blank solution. We assigned a proper name to the solution as well. This blank
    solution will act as the base throughout this chapter. In steps 11 to 18, we added
    an iOS Single View app to the solution. In step 16, we added an Organization Identifier,
    which is a unique identifier for recognizing your app when you deploy to the app
    store. A single view app is a starter template to help developers build for iOS
    and has one custom `ViewController` to start with. We gave it a proper name too.
    At the end, in steps 20 to 23, we tested the default template generated by Visual
    Studio for Mac.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 1 到 3 中，我们打开了 Visual Studio for Mac，在步骤 6 到 9 中，我们创建了一个空白解决方案。我们还为该解决方案分配了一个合适的名称。这个空白解决方案将作为本章的基础。在步骤
    11 到 18 中，我们将 iOS 单视图应用程序添加到解决方案中。在步骤 16 中，我们添加了一个组织标识符，这是在您部署到应用商店时识别您的应用程序的唯一标识符。单视图应用程序是一个入门模板，帮助开发者为
    iOS 开发，并附带一个自定义的 `ViewController` 以便开始。我们也给它起了一个合适的名称。最后，在步骤 20 到 23 中，我们测试了 Visual
    Studio for Mac 生成的默认模板。
- en: We will come back to this application in a later recipe and add a few controls
    and some code.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在后面的菜谱中回到这个应用程序，并添加一些控件和一些代码。
- en: Creating the .NET Standard 2.0 library
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 .NET Standard 2.0 库
- en: In this recipe, we will be building a .NET Standard 2.0 library using Visual
    Studio for Mac. We will be using the same solution from the previous recipe.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将使用 Visual Studio for Mac 构建 .NET Standard 2.0 库。我们将使用之前菜谱中的相同解决方案。
- en: Getting ready
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have completed the previous recipe that added an iOS project.
    If so, let's get started with adding the library and writing some code.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您已经完成了之前菜谱中添加的 iOS 项目。如果是这样，让我们开始添加库并编写一些代码。
- en: How to do it...
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Open Finder.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Finder。
- en: Click Applications in the left-hand pane.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧窗格中点击“应用程序”。
- en: Now, double-click on the Visual Studio icon.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，双击 Visual Studio 图标。
- en: Now, click on Open, locate the `Chapter8.Xamarin` solution, and open it.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击“打开”，定位到 `Chapter8.Xamarin` 解决方案，并打开它。
- en: 'The Solution Explorer should look like this:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解决方案资源管理器应该看起来像这样：
- en: '![](img/19ceee1b-11ea-491d-82fe-deef98f4065f.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/19ceee1b-11ea-491d-82fe-deef98f4065f.png)'
- en: Now, *control (^)* + click on the `Chapter8.Xamarin` label and select Add |
    New Project.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，*按住控制键 (^)* + 点击 `Chapter8.Xamarin` 标签，然后选择“添加”|“新建项目”。
- en: In the New Project dialog box, scroll down the left-hand pane till you see the Multi
    Platform section.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“新建项目”对话框中，滚动左侧窗格，直到看到“多平台”部分。
- en: 'Click on Library and select .NET Standard Library under General in the right-hand
    pane. Also make sure C# is selected:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧窗格中点击“库”，然后在“常规”下选择 .NET Standard 库。同时确保已选择 C#：
- en: '![](img/ad785431-3e8c-48a9-907c-14fb3dd26ede.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ad785431-3e8c-48a9-907c-14fb3dd26ede.png)'
- en: Click Next.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“下一步”。
- en: 'Select Target Framework: as .NET Standard 2.0 and click Next:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“目标框架：”为 .NET Standard 2.0 并点击“下一步”：
- en: '![](img/baf09ab9-1b2e-42f0-b6ae-9e2f442746f6.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/baf09ab9-1b2e-42f0-b6ae-9e2f442746f6.png)'
- en: 'In the Project Name: textbox, type `Chapter8.Xamarin.iOSLib` as the name and
    leave the rest:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“项目名称：”文本框中，输入 `Chapter8.Xamarin.iOSLib` 作为名称，其余保持不变：
- en: '![](img/48bd28d9-b5d8-4753-9dee-3502097e6a8a.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/48bd28d9-b5d8-4753-9dee-3502097e6a8a.png)'
- en: Click Create.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建”。
- en: 'Now, the Solution Explorer should look like this:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，解决方案资源管理器应该看起来像这样：
- en: '![](img/3f3a1b99-45b9-4af9-8133-6492e7c0b7d5.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3f3a1b99-45b9-4af9-8133-6492e7c0b7d5.png)'
- en: Select the `Class1.cs` label and press *command* + *R* to rename.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 `Class1.cs` 标签并按 *command* + *R* 重命名。
- en: Rename it `HelloLib.cs`.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其重命名为 `HelloLib.cs`。
- en: Make sure you change the class name as well from `Class1` to `HelloLib`.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您还将类名从 `Class1` 更改为 `HelloLib`。
- en: 'Now, inside the `HelloLib` class, add the following code:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在 `HelloLib` 类内部，添加以下代码：
- en: '[PRE0]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Click Build | Build All to check that all syntax is correct.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“生成”|“生成所有”以检查所有语法是否正确。
- en: How it works...
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 作用原理...
- en: In steps 1 to 4, we opened the solution we created in the previous recipe. In
    steps 6 to 12, we added a .NET Standard 2.0 library to the solution. Now, the
    solution has two projects, an iOS project and a .NET Standard 2.0 library project.
    In steps 14 to 16, we renamed the class created by Visual Studio. We also renamed
    the actual class name to match the file name.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 1 到 4 中，我们打开了之前菜谱中创建的解决方案。在步骤 6 到 12 中，我们将 .NET Standard 2.0 库添加到解决方案中。现在，解决方案有两个项目，一个
    iOS 项目和一个 .NET Standard 2.0 库项目。在步骤 14 到 16 中，我们重命名了 Visual Studio 创建的类。我们还重命名了实际的类名以匹配文件名。
- en: In step 17, we added a public method that takes a `string` parameter and returns
    a string as a welcome message. Finally, we performed a quick build to check for
    the correct syntax.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 17 中，我们添加了一个公共方法，该方法接受一个 `string` 参数并返回一个欢迎消息作为字符串。最后，我们进行了快速构建以检查语法是否正确。
- en: Putting things together and testing the application
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 整合事物并测试应用程序
- en: In this recipe, we will be adding some controls to the iOS application and using
    the .NET Standard 2.0 library created in the previous recipe.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将向iOS应用程序添加一些控件，并使用之前菜谱中创建的.NET Standard 2.0库。
- en: Getting ready
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have completed the previous two recipes. They are required in
    order to continue. If you have already completed them, let's perform a quick build
    and start.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你已经完成了前面的两个菜谱。它们是继续的必要条件。如果你已经完成了它们，让我们快速构建并开始。
- en: How to do it...
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Open Finder.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Finder。
- en: Click Applications in the left-hand pane.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧窗格中点击“应用程序”。
- en: Double-click on the Visual Studio icon.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击Visual Studio图标。
- en: Click on Open, locate the `Chapter8.Xamarin` solution, and open it.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“打开”，定位 `Chapter8.Xamarin` 解决方案，并打开它。
- en: 'The Solution Explorer should look like this:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解决方案资源管理器应该看起来像这样：
- en: '![](img/3e93c5d9-975e-4daf-8a02-c9d419caee84.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3e93c5d9-975e-4daf-8a02-c9d419caee84.png)'
- en: Now, expand the `Chapter8.Xamarin.iOSApp` project node.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，展开 `Chapter8.Xamarin.iOSApp` 项目节点。
- en: Double-click on the `Main.storyboard` file.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击 `Main.storyboard` 文件。
- en: This will open the storyboard tab for your application.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开应用程序的故事板选项卡。
- en: 'You should see the default layout of the iOS application as follows:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该看到iOS应用程序的默认布局如下：
- en: '![](img/550a0a06-9990-46db-8536-d1b3cbdda88a.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/550a0a06-9990-46db-8536-d1b3cbdda88a.png)'
- en: Default layout of the iOS application
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: iOS应用程序的默认布局
- en: Now, select the Toolbox window.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，选择工具箱窗口。
- en: Click inside the `search` textbox and type `Button`.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `search` 文本框内点击并输入 `Button`。
- en: Now, drag a Button control to the main white area of the canvas, in the middle.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将按钮控件拖到画布中间的主白色区域。
- en: Select the button. In the Properties window, type `Say Hello` under the Title
    label and type `HelloButton` in the Name property.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择按钮。在属性窗口中，在标题标签下输入 `Say Hello`，在名称属性中输入 `HelloButton`。
- en: 'Now, your canvas should look like this:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你的画布应该看起来像这样：
- en: '![](img/dda17003-4a1c-4c10-8cf5-d19cf1f78f45.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dda17003-4a1c-4c10-8cf5-d19cf1f78f45.png)'
- en: Now, in the Solution Explorer, *control (^)* + click on the References label
    and select Edit References.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在解决方案资源管理器中，*control (^)* + 点击“引用”标签并选择“编辑引用”。
- en: In the Edit References dialog box, click on the Projects tab.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“编辑引用”对话框中，点击“项目”选项卡。
- en: 'Check `Chapter8.Xamarin.iOSLib` in the list and click OK:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在列表中勾选 `Chapter8.Xamarin.iOSLib` 并点击确定：
- en: '![](img/985fa586-af0d-4e88-9397-bd7f5eba14a0.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/985fa586-af0d-4e88-9397-bd7f5eba14a0.png)'
- en: Now, double-click on the `VeiwController.cs` file to open its code.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，双击 `VeiwController.cs` 文件以打开其代码。
- en: 'Scroll up till you reach the `using` directives and add the following `using`
    directive to access the library:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向上滚动到 `using` 指令，并添加以下 `using` 指令以访问库：
- en: '[PRE1]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now, scroll down till you reach the `ViewDidLoad()` method.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，向下滚动到 `ViewDidLoad()` 方法。
- en: 'Add the following code next to the `base.ViewDidLoad()` line:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `base.ViewDidLoad()` 行旁边添加以下代码：
- en: '[PRE2]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now, let's press *command* + *return* to debug the application.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，按 *command* + *return* 键来调试应用程序。
- en: 'You should see the following output:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该看到以下输出：
- en: '![](img/52649291-6cf4-4086-864c-c20a000cd5bc.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/52649291-6cf4-4086-864c-c20a000cd5bc.png)'
- en: 'Now click on the Say Hello button:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击“说你好”按钮：
- en: '![](img/4af51ea2-746b-4464-8710-19e027003a9d.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4af51ea2-746b-4464-8710-19e027003a9d.png)'
- en: Now, click OK and stop debugging.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击确定并停止调试。
- en: How it works...
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In steps 1 to 6, we opened an existing project solution. In steps 10 to 13,
    we added a simple button control to the canvas. After that, we changed the Title
    and Name properties of the button. In step 17, we added the reference to the library
    from the iOS project. Again, in step 19, we added a reference to the .NET Standard
    library from the code level.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤1到6中，我们打开了一个现有的项目解决方案。在步骤10到13中，我们在画布上添加了一个简单的按钮控件。之后，我们更改了按钮的标题和名称属性。在步骤17中，我们从iOS项目添加了对库的引用。同样，在步骤19中，我们从代码级别添加了对.NET
    Standard库的引用。
- en: In step 21, we added code to trigger the button touch up event. This event triggers
    when you touch and move up your finger on an actual device, but in the emulator
    it triggers when you click the button. We added the code inside the `ViewDidLoad()`
    method. This method triggers after the View is loaded. In the first two lines
    of the code, we created an instance of the `HelloLib` class from the library.
    Then, we executed the `SayHello` method and saved the return value in a variable.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在第21步中，我们添加了代码来触发按钮触摸抬起事件。此事件在您在真实设备上触摸并抬起手指时触发，但在模拟器中，它会在您点击按钮时触发。我们是在`ViewDidLoad()`方法中添加的这段代码。该方法在视图加载后触发。在代码的前两行中，我们从一个库中创建了一个`HelloLib`类的实例。然后，我们执行了`SayHello`方法，并将返回值保存在一个变量中。
- en: Then, we created an alert box to display the Calcutta message with an OK button.
    Finally, in steps 23 and 24, we tested the iOS application we had just built.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们创建了一个警报框来显示加尔各答消息，并附带一个确定按钮。最后，在第23步和第24步中，我们测试了我们刚刚构建的iOS应用程序。
