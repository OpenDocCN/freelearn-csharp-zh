["```cs\nSickLeaveApplication.Handle(new SendSickLeaveForApproval\n{\n    EmployeeId = context.User.EmployeeId,\n    DateRegistered = request.DateRegistered,\n    FirstDayNotAtWork = request.FirstDayNotAtWork,\n    LeftDuringWorkday = request.LeftDuringWorkday,\n    CameBackToWork = request.CameBackToWork,\n    CameBackAfterLunch = request.CameBackAfterLunch\n});\n```", "```cs\npublic class ClassifiedAd\n{\n    private ClassifiedAdStatus _status;\n\n    public void UpdateStatus(ClassifiedAdStatus newStatus)\n    {\n        _status = newStatus;\n        DomainEvents.Publish(\n            new ClassifiedAdStatusUpdated(_id, newStatus));\n    }\n}\n```", "```cs\nad.UpdateStatus(ClassifiedAdStatus.Published);\n```", "```cs\nad.UpdateStatus(ClassifiedAdStatus.Activated);\n```", "```cs\npublic void UpdateStatus(ClassifiedAdStatus newStatus)\n{\n    if (newStatus == ClassifiedAdStatus.Published\n        && (string.IsNullOrEmpty(_title)\n            || _price == 0 || string.IsNullOrEmpty(_text))\n        throw new DomainException(\n            \"Ad can't be activated because some mandatory fields are empty\");\n\n    if (newStatus == ClassifiedAdStatus.Activated \n        && _status == ClassifiedAdStatus.ViolationReported)\n        throw new DomainException(\"Reported ads can't be activated\");\n\n    if (newStatus == ClassifiedAdStatus.Deactivated\n        && _status != ClassifiedAdStatus.ViolationReported)\n        throw new DomainException(\"Only a reported ad can be deactivated\");\n\n    _status = newStatus;\n    DomainEvents.Publish(new AdStatusUpdated(newStatus));\n}\n```", "```cs\npublic void Handle(ClassifiedAdStatusUpdated @event)\n{\n    // controlling the ad visibility based on it's reported status\n    if (_status == ClassifiedAdStatus.ViolationReported\n        && @event.Status == ClassifiedAdStatus.MaliciousContentDetected)\n        CommandDispatcher.Send(\n            new UpdateAdVisibility(@event.Id, false));\n}\n```", "```cs\npublic class ClassifiedAd\n{\n    private ClassifiedAdStatus _status;\n\n    public void Publish()\n    {\n        _status = ClassifiedAdStatus.Published;\n        DomainEvents.Publish(new ClassifiedAdPublished(_id));\n    }\n}\n```", "```cs\npublic void Handle(ClassifiedAdPublished @event) =>\n    CommandDispatcher.Send(new ShowClassifiedAd(@event.Id));\n```", "```cs\npublic void ReportViolation(User reportedBy, string reason)\n{\n    _violationReports.Add(reportedBy, reason);\n    DomainEvents.Publish(new ViolationReported(reportedBy, reason));\n}\n\npublic void Handle(ViolationReported @even) =>\n    CommandDispatcher.Send(new InformModerators(@event.Id, @event.Reason));\n\npublic void Handle(MalicionsAdDetected @event) =>\n    CommandDispatcher.Send(new InformModerators(@event.Id, @event.Reason));\n```"]