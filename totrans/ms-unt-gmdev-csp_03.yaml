- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: An Introduction to Game Design and Project Management
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 游戏设计与项目管理简介
- en: Step into the realm where creativity meets structure – the Introduction to Game
    Design and Project Organization. This chapter serves as your gateway to understanding
    the core principles that breathe life into games. In this chapter, we’ll navigate
    through the essential elements of game design, exploring the art of crafting engaging
    mechanics and compelling narratives. Additionally, we’ll unravel the secrets of
    effective project organization, providing you with the tools to streamline your
    development process. Whether you’re dreaming of your first game or seeking to
    enhance your skills, this introduction lays the groundwork for an exciting adventure.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 踏入创意与结构相遇的领域——游戏设计与项目管理简介。本章是您了解赋予游戏生命力的核心原则的入门。在本章中，我们将探讨游戏设计的必要元素，探索制作引人入胜的机制和引人入胜的叙事的艺术。此外，我们将揭示有效项目组织的秘密，为您提供简化开发流程的工具。无论您是梦想着您的第一款游戏还是寻求提高技能，这个简介为您提供了一个激动人心的冒险的基础。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Introduction to GDD
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GDD 简介
- en: What about the player’s experience
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 玩家体验如何
- en: Let’s talk about the project organization
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让我们谈谈项目组织
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'Ready to dive into Unity development? Make sure your system is ready:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 准备好深入 Unity 开发了吗？请确保您的系统已准备好：
- en: '**Unity Version 2022.3.13**: Download and install Unity, choosing version 2022.3.13
    for optimal compatibility with the provided content.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Unity 版本 2022.3.13**：下载并安装 Unity，选择版本 2022.3.13 以确保与提供的内容最佳兼容性。'
- en: '**Primary IDE - Visual Studio 2022**: The tutorials and code samples are crafted
    using Visual Studio 2022\. Ensure it’s installed to follow along seamlessly. Feel
    free to explore Rider or other IDEs if you prefer, though instructions are tailored
    for Visual Studio.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主要 IDE - Visual Studio 2022**：教程和代码示例使用 Visual Studio 2022 制作。请确保已安装，以便无缝跟随。如果您更喜欢
    Rider 或其他 IDE，请随意探索，尽管说明是为 Visual Studio 定制的。'
- en: '**Sufficient System Resources**: Ensure your system meets Unity’s minimum requirements
    for a smooth development experience.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**足够的系统资源**：确保您的系统满足 Unity 的最低要求，以获得流畅的开发体验。'
- en: '**GitHub Repository for Code Samples**: Access the code samples and project
    files on our dedicated GitHub repository: [https://github.com/PacktPublishing/Mastering-Unity-Game-Development-with-C-Sharp](https://github.com/PacktPublishing/Mastering-Unity-Game-Development-with-C-Sharp).
    Clone or download the repository to have easy access to the code demonstrated
    in this chapter.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码示例的 GitHub 仓库**：在我们的专用 GitHub 仓库中访问代码示例和项目文件：[https://github.com/PacktPublishing/Mastering-Unity-Game-Development-with-C-Sharp](https://github.com/PacktPublishing/Mastering-Unity-Game-Development-with-C-Sharp)。克隆或下载仓库，以便轻松访问本章中展示的代码。'
- en: Introduction to GDD
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GDD 简介
- en: Let’s get into game design! We’re diving into the world of Game Design Document
    (GDD). Making games isn’t just about code; it’s about creating experiences. These
    basics help turn ideas into exciting games. We’ll explore what GDD is all about
    and how it helps make games that players love.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解游戏设计！我们将深入游戏设计文档（GDD）的世界。制作游戏不仅仅是关于代码；它是关于创造体验。这些基础知识有助于将想法转化为令人兴奋的游戏。我们将探讨
    GDD 是什么以及它如何帮助制作玩家喜爱的游戏。
- en: What is GDD?
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GDD 是什么？
- en: A **Game Design Document**, or **GDD**, serves as a comprehensive guide that
    outlines the core themes, styles, features, mechanics, and ideas for your game
    project. Its main role is to effectively communicate the details of your project,
    whether to yourself as you progress in game development or to other stakeholders
    like team members, publishers, or potential players. Essentially, it’s the tool
    that helps manage and develop the concept of your game, providing a crucial roadmap
    for its creation. While there’s no strict standard for its format, a well-crafted
    GDD becomes an integral part of your game’s development, ensuring clarity and
    alignment among the development team.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**游戏设计文档**（GDD）是一个全面的指南，概述了游戏项目的核心主题、风格、功能、机制和想法。其主要作用是有效地传达项目细节，无论是您在游戏开发过程中自我推进，还是向团队成员、发行商或潜在玩家等利益相关者传达。本质上，它是帮助管理和开发游戏概念的工具，为其创作提供关键路线图。虽然其格式没有严格的标准，但一个精心制作的
    GDD 成为游戏开发不可或缺的一部分，确保开发团队之间的清晰和对齐。'
- en: 'GDD and Pitch: A Comparative Perspective'
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GDD 与提案：比较视角
- en: When it comes to the GDD and the pitch, they serve distinct purposes in the
    game development process. The GDD is an in-depth document, capturing core elements
    and intricacies, offering a detailed guide for the development team. On the other
    hand, a pitch is a concise and impactful presentation crafted to generate interest
    and support. While the GDD provides comprehensive information throughout the game
    creation journey, the pitch acts as a teaser – a compelling snapshot to excite
    potential stakeholders.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到游戏设计文档（GDD）和提案时，它们在游戏开发过程中具有不同的目的。GDD 是一份深入文档，捕捉核心元素和复杂性，为开发团队提供详细指南。另一方面，提案是一种简洁而有力的演示，旨在激发兴趣和支持。虽然
    GDD 在整个游戏创作过程中提供全面信息，但提案充当了一个预告片——一个令人兴奋的快照，以激发潜在利益相关者的兴趣。
- en: 'The Pitch: Sparking Enthusiasm for Your Game Concept'
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提案：激发对游戏概念的激情
- en: A **pitch** is a powerful tool designed to ignite interest and support for your
    game concept. It’s a brief, attention-grabbing presentation that swiftly communicates
    the essence of your game. Unlike the detailed nature of the GDD, the pitch is
    all about creating immediate excitement. It plays a vital role in capturing attention,
    generating curiosity, and laying the groundwork for potential collaboration with
    stakeholders.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 提案是一种强大的工具，旨在激发对游戏概念的兴趣和支持。它是一种简短、引人注目的演示，迅速传达游戏的核心。与 GDD 的详细性质不同，提案完全是关于创造即时的兴奋。它在吸引注意、激发好奇心和为与利益相关者的潜在合作奠定基础方面发挥着至关重要的作用。
- en: 'The following image serves as a pitch for our game, providing a visual representation
    to illustrate the concept:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像作为我们游戏的提案，提供视觉表现来阐述概念：
- en: "![Figure 1.1 \uFEFF– Fusion Fury’s Pitch](img/B22017_01_01.jpg)"
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1 – Fusion Fury 的提案](img/B22017_01_01.jpg)'
- en: Figure 1.1 – Fusion Fury’s Pitch
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – Fusion Fury 的提案
- en: You will find a full GDD on [https://github.com/PacktPublishing/Mastering-Unity-Game-Development-with-C-Sharp](https://github.com/PacktPublishing/Mastering-Unity-Game-Development-with-C-Sharp).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [https://github.com/PacktPublishing/Mastering-Unity-Game-Development-with-C-Sharp](https://github.com/PacktPublishing/Mastering-Unity-Game-Development-with-C-Sharp)
    找到完整的 GDD。
- en: Understanding GDD elements
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 GDD 元素
- en: 'If you’ve ever wondered about the magic behind video games, you’re in the right
    place. Join us on a beginner-friendly exploration of the GDD elements, demystifying
    the language of game development. The following list shows some of the GDD elements:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你曾好奇视频游戏背后的魔法，你就在正确的位置。加入我们，开始对 GDD 元素的入门级探索，揭示游戏开发的神秘语言。以下列表显示了 GDD 的一些元素：
- en: '**Game Concept**:'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**游戏概念**:'
- en: Description of the game’s core idea and overall concept.
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述游戏的核心思想和整体概念。
- en: Defines the setting, theme, and main objectives of the game.
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义游戏的设定、主题和主要目标。
- en: '**Core** **Game Mechanics**:'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**核心游戏机制**:'
- en: Detailed explanation of the fundamental rules and interactions governing the
    game.
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 详细解释支配游戏的基本规则和交互。
- en: Describes how the player will engage with and navigate the game world.
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述玩家如何参与和导航游戏世界。
- en: '**Gameplay Features**:'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**游戏功能特性**:'
- en: Identification and elaboration of key features that enhance the gameplay experience.
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别和详细阐述增强游戏体验的关键特性。
- en: Includes unique selling points, special abilities, and innovative aspects.
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括独特卖点、特殊能力和创新方面。
- en: '**Gameplay Breakdown**:'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**游戏玩法分解**:'
- en: In-depth breakdown of different phases or levels within the game.
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 游戏中不同阶段或级别的深入分解。
- en: Outlines the progression and challenges players will encounter.
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概述玩家将遇到的进展和挑战。
- en: '**Project** **Scope Breakdown**:'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目范围分解**:'
- en: Clear delineation of the scope of the project, including its limitations.
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清晰界定项目的范围，包括其限制。
- en: Defines what is included and, equally important, what is not included in the
    project.
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义项目包含的内容，以及同样重要的是，不包含的内容。
- en: '**Technical Requirements**:'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**技术要求**:'
- en: Specifications related to the technology and tools needed for game development.
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与游戏开发所需的技术和工具相关的规格。
- en: Includes information on platforms, programming languages, and software requirements.
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括有关平台、编程语言和软件要求的信息。
- en: '**Art and** **Sound Assets**:'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**艺术和音效资源**:'
- en: Overview of the visual and auditory elements required for the game.
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 游戏所需的视觉和听觉元素的概述。
- en: Describes character designs, environment art, sound effects, and music.
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述角色设计、环境艺术、音效和音乐。
- en: '**User Interface (****UI) Design**:'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户界面（UI）设计**:'
- en: Design of the user interface, including menus, HUD elements, and navigation.
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户界面的设计，包括菜单、HUD 元素和导航。
- en: Ensures a user-friendly and visually appealing experience.
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保用户体验友好且视觉上吸引人。
- en: '**Monetization Strategy**:'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**货币化策略**：'
- en: Discussion of how the game will generate revenue, if applicable.
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 讨论游戏如何产生收入（如果适用）。
- en: Includes pricing models, in-app purchases, or other revenue streams.
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括定价模式、应用内购买或其他收入来源。
- en: '**Testing and** **Quality Assurance**:'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试和质量保证**：'
- en: Strategy for testing the game to identify and resolve bugs.
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试游戏的策略，以识别和解决错误。
- en: Ensures the game meets quality standards before release.
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保游戏在发布前符合质量标准。
- en: '**Marketing** **and Promotion**:'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**营销和推广**：'
- en: Outlines plans for promoting and marketing the game.
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概述推广和营销游戏的计划。
- en: Identifies the target audience and strategies for building awareness.
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定目标受众和建立认知的策略。
- en: These aren’t the only elements you’d find in a GDD, but that’s not our focus
    in this book. We also offer advice, especially for mid-development or indie game
    developers. It’s often recommended not to create an overly detailed GDD at the
    start because you might need to make changes as your development journey progresses.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这些并不是GDD中唯一的元素，但这本书的重点不是这些。我们还提供了一些建议，特别是针对中期开发或独立游戏开发者。通常建议不要一开始就创建过于详细的GDD，因为随着开发旅程的进行，你可能需要做出更改。
- en: We’ll use this GDD as we create the game in the next chapters. We’ll learn how
    to understand the GDD, break it into tasks, and organize them to complete our
    game.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在接下来的章节中创建游戏时使用这个游戏设计文档（GDD）。我们将学习如何理解GDD，将其分解为任务，并组织它们以完成我们的游戏。
- en: Let’s discuss a crucial aspect related to the player’s experience and why it’s
    vital for the success of our game.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们讨论与玩家体验相关的一个关键方面，以及为什么它对我们游戏的成功至关重要。
- en: What about the player’s experience?
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 玩家的体验如何？
- en: Welcome to the heart of game development, where the magic happens—shaping the
    player’s experience. In this Section, as this section serves as an introduction
    to help you understand player experience, we delve into the art of crafting immersive
    worlds that captivate players and leave a lasting impression. Player experience
    isn’t just a feature; it’s the soul of your game, and we’re here to guide you
    through the elements that will elevate your players’ journey.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到游戏开发的核心，这里是魔法发生的地方——塑造玩家的体验。在本节中，作为本节的介绍，帮助您理解玩家体验，我们深入探讨创造吸引玩家并留下持久印象的沉浸式世界的艺术。玩家体验不仅仅是一个功能；它是你游戏灵魂的一部分，我们将引导您了解将提升玩家旅程的元素。
- en: '**Player experience**, commonly referred to as **PX** or **User Experience**
    (**UX**), stands as a vital aspect outlined in the GDD. It embodies the overall
    impression and emotions players undergo while immersed in a video game. Here are
    key components related to player experience in a GDD:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**玩家体验**，通常称为**PX**或**用户体验**（UX），是GDD中概述的一个关键方面。它体现了玩家在沉浸于电子游戏时所经历的整体印象和情感。以下是GDD中与玩家体验相关的关键组成部分：'
- en: '**Emotional Engagement**:'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**情感投入**：'
- en: Describes intended emotional responses the game aims to evoke.
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述游戏旨在引发的预期情感反应。
- en: Identifies emotional journeys throughout different gameplay stages.
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定不同游戏阶段的情感旅程。
- en: '**Immersion**:'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**沉浸感**：'
- en: Details how the game intends to engage players in its virtual world.
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 详细说明游戏如何让玩家沉浸在其虚拟世界中。
- en: Discusses features like realistic graphics, sound design, and narrative depth.
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 讨论如逼真图形、音效设计和叙事深度等特性。
- en: '**Challenge** **and Difficulty**:'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**挑战** **和难度**：'
- en: Outlines the balance between challenging gameplay and player engagement.
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概述挑战性游戏玩法和玩家参与度之间的平衡。
- en: Defines the difficulty curve and its evolution throughout the game.
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义难度曲线及其在整个游戏中的演变。
- en: '**Reward System**:'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**奖励系统**：'
- en: Describes how the game rewards players for achievements.
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述游戏如何奖励玩家的成就。
- en: Includes points, power-ups, achievements, or other incentives.
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括得分、升级、成就或其他激励措施。
- en: '**Player Progression**:'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**玩家进步**：'
- en: Explains how players advance, gain new abilities, or unlock content.
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解释玩家如何进步，获得新能力或解锁内容。
- en: Outlines the sense of progression and achievement.
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概述进步感和成就感。
- en: '**Narrative Impact**:'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**叙事影响**：'
- en: Discusses how the game’s story contributes to the overall player experience.
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 讨论游戏故事如何对整体玩家体验做出贡献。
- en: Addresses the integration of narrative with gameplay mechanics.
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决叙事与游戏玩法机制的结合。
- en: '**User Interface (****UI) Feedback**:'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户界面（UI）反馈**：'
- en: Defines how the UI communicates essential information to players.
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义UI如何向玩家传达关键信息。
- en: Ensures clear, intuitive feedback for an enhanced overall experience.
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保提供清晰、直观的反馈，以增强整体体验。
- en: '**Interactivity**:'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交互性**：'
- en: Describes the level of player interaction with the game world.
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述玩家与游戏世界的交互程度。
- en: Includes the responsiveness of controls, decision-making impact, and player
    agency.
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括控制响应性、决策影响和玩家自主权。
- en: '**Pacing**:'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节奏**：'
- en: Outlines the rhythm and flow of the game, balancing tension, relaxation, and
    climax.
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概述了游戏节奏和流程，平衡紧张、放松和高潮。
- en: Ensures engaging pacing throughout the player’s journey.
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保在整个玩家旅程中保持引人入胜的节奏。
- en: '**Accessibility**:'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可访问性**：'
- en: Addresses how the game accommodates players of various skill levels and preferences.
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 针对游戏如何适应不同技能水平和偏好的玩家。
- en: Ensures inclusivity and a positive experience for a diverse audience.
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保为多元化的观众群体提供包容性和积极的体验。
- en: As you dive into crafting player experiences, remember that every part of your
    game, be it the gameplay mechanics or the storytelling, plays a role in engaging
    players. It’s more than just creating a game; it’s about connecting emotionally
    with your audience. Through a well-designed player experience, your game evolves
    from simple entertainment to a memorable journey for those who step into your
    virtual realms.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 当你深入到创造玩家体验时，请记住，你的游戏的每个部分，无论是游戏机制还是叙事，都在吸引玩家方面发挥着作用。这不仅仅是创造一个游戏；这是关于与你的观众建立情感联系。通过精心设计的玩家体验，你的游戏从简单的娱乐转变为进入你虚拟领域的玩家难忘的旅程。
- en: In the next section, we’ll explore the process of structuring our Unity project,
    task organization, and the significance of incorporating version control.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将探讨构建我们的Unity项目、任务组织和引入版本控制的重要性。
- en: Let’s talk about the Project organization
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们谈谈项目组织
- en: Let’s jump into project organization—an essential skill for solo developers
    and team players alike. This section reveals the keys to using Git for version
    control and Hack N Plan for project coordination. Mastering project organization
    boosts efficiency, whether you’re working alone or with a team. Starting here
    sets the stage for a smoother game development journey. So, grab your toolkit,
    let’s dive in, and make organization your superpower!
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们跳入项目组织——这是独立开发者和团队成员都必备的一项技能。本节揭示了使用Git进行版本控制和Hack N Plan进行项目协调的秘诀。掌握项目组织可以提高效率，无论你是单独工作还是团队合作。从这里开始，为更顺畅的游戏开发之旅奠定了基础。所以，拿起你的工具包，让我们深入其中，让组织成为你的超级力量！
- en: Whether working solo or in a team, organizing your game project saves time and
    adds flexibility. A structured approach in game development keeps you on track
    and streamlines workflows. It’s like having a map for your journey—easing navigation
    through challenges and ensuring a smoother development path. Together, we’ll embark
    on this journey, keeping chaos at bay and paving the way for efficient game creation.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 无论单独工作还是团队合作，整理你的游戏项目可以节省时间并增加灵活性。在游戏开发中采用结构化的方法可以帮助你保持进度并简化工作流程。这就像是在你的旅途中拥有了一张地图——简化了挑战的导航并确保了更顺畅的开发路径。我们将一起踏上这段旅程，保持混乱远离，为高效的游戏创作铺平道路。
- en: Mastering Project Structure for Efficient Development
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 掌握高效开发的项目结构
- en: 'Let’s delve into the ways we’ll structure our project. We’ll cover three main
    aspects:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入探讨我们将如何构建我们的项目。我们将涵盖三个主要方面：
- en: Discover the importance of using a version control system for seamless collaboration.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现使用版本控制系统进行无缝协作的重要性。
- en: Structuring and organizing the project within Unity, with helpful tips and best
    practices.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Unity中构建和整理项目，提供实用的技巧和最佳实践。
- en: Leveraging Hack N Plan to efficiently organize and manage tasks.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用Hack N Plan高效地组织和管理工作任务。
- en: In the next few sections, we will explore each point to gain valuable insights
    and skills for effective project organization.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几节中，我们将探讨每个要点，以获得有效项目组织的有价值见解和技能。
- en: Version Control System
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 版本控制系统
- en: Using a version control system in game development is crucial for both solo
    developers and teams. It acts like a safety net for your project, allowing you
    to track changes, revert to previous versions if something goes wrong, and collaborate
    seamlessly with others.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在游戏开发中使用版本控制系统对于独立开发者和团队都至关重要。它就像是一个安全网，允许你跟踪变更，在出现问题时回滚到之前的版本，并与他人无缝协作。
- en: Even when working alone, it safeguards against accidental errors and provides
    a structured way to manage your project’s evolution. For teams, it ensures everyone
    stays on the same page, reduces conflicts, and simplifies collaboration, making
    the entire development process smoother and more organized. In essence, it’s a
    tool that keeps your game development journey hassle-free and efficient.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 即使单独工作，它也能防止意外错误，并提供一种结构化的方式来管理项目的发展。对于团队来说，它确保每个人都在同一页面上，减少冲突，简化协作，使整个开发过程更加顺畅和有序。本质上，它是一个让你的游戏开发之旅无烦恼、高效的工具。
- en: In the vast world of version control systems, such as Git, Perforce, and Unity’s
    official version control, Plastic, we’ll simplify things in this book by focusing
    on Git and GitHub. While you’re free to choose your preferred tools, we recommend
    using GitHub for better alignment with the provided code and seamless workflow
    tracking.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在Git、Perforce和Unity官方版本控制Plastic等众多版本控制系统的大千世界中，本书将通过专注于Git和GitHub来简化内容。虽然你可以自由选择你喜欢的工具，但我们推荐使用GitHub，以便更好地与提供的代码保持一致，并实现无缝的工作流程跟踪。
- en: How version control works
  id: totrans-111
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 版本控制的工作原理
- en: Version control is like a safety net for your game project. Imagine you’re trying
    out a new feature, but it doesn’t quite work as expected. With version control,
    you can easily revert to a clean, functional version, undoing any experimental
    changes. It’s like having a time machine for your project, letting you iterate
    on ideas without fear.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 版本控制就像是你的游戏项目的安全网。想象一下，你正在尝试一个新功能，但它并不完全按预期工作。有了版本控制，你可以轻松地回滚到一个干净、功能正常的版本，撤销任何实验性更改。这就像是给你的项目配备了一个时间机器，让你可以无惧地迭代想法。
- en: Moreover, if you need to switch gears and help out with a major issue in the
    main project, version control lets you save your changes for later. Once the urgent
    task is handled, you can seamlessly restore your experimental work. This system
    also prevents accidental overwrites when collaborating with a team. Every time
    you commit your work, you’ll check for the latest updates, ensuring you don’t
    clash with your teammates. While dealing with merge conflicts might sound daunting
    at first, it’s a manageable process once you get the hang of it.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果你需要切换到主项目中的重大问题并协助处理，版本控制让你可以保存你的更改以供稍后使用。一旦紧急任务处理完毕，你可以无缝地恢复你的实验性工作。这个系统还可以防止在团队协作时意外覆盖。每次你提交工作，你都会检查最新更新，确保你不会与你的队友发生冲突。虽然一开始处理合并冲突可能听起来令人畏惧，但一旦掌握了技巧，它就是一个可管理的流程。
- en: Best practices for Version Control
  id: totrans-114
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 版本控制的最佳实践
- en: 'No matter the version control system you choose, various best practices can
    enhance your team’s efficiency. Since each team has unique requirements, not every
    practice will suit all teams. The following are some of the best practices for
    version control:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你选择哪种版本控制系统，各种最佳实践都可以提高团队的效率。由于每个团队都有独特的要求，并非每个实践都适合所有团队。以下是一些版本控制的最佳实践：
- en: Commit frequently, but in small increments.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 经常提交，但每次提交的增量要小。
- en: Ensure that each commit corresponds to a specific task or ticket, keeping the
    changes focused and manageable. This practice makes it easier to identify and
    revert any negative changes without affecting positive ones in case of an issue.
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确保每次提交都对应一个特定的任务或票据，使更改保持专注且易于管理。这种做法使得在出现问题时，更容易识别和撤销任何负面更改，而不会影响到正面更改。
- en: Stay up to date with the latest changes.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持对最新变化的了解。
- en: Regularly pull the latest updates from the repository into your working copy
    to avoid working in isolation and minimize the chances of encountering merge conflicts.
    Incorporate this practice into your daily workflow for smoother collaboration
    and effective version control management.
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定期从仓库中拉取最新更新到你的工作副本中，以避免孤立工作并最小化遇到合并冲突的机会。将这一做法融入你的日常工作中，以实现更顺畅的协作和有效的版本控制管理。
- en: Maintain clean and descriptive commit messages.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持提交信息的清洁和描述性。
- en: Clearly convey the purpose of each commit, making it easier to understand the
    project’s history. If using a task ticketing system, consider including a ticket
    number in your commit for better traceability and collaboration.
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 清晰地传达每次提交的目的，使理解项目的历史更加容易。如果你使用任务票据系统，考虑在提交中包含票据号，以实现更好的可追溯性和协作。
- en: In the next section, we will learn how to organize our Unity project and the
    importance of organizing the project properly.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将学习如何组织我们的Unity项目以及正确组织项目的重要性。
- en: Organizing a Unity project
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 组织Unity项目
- en: Efficiently organizing your Unity project not only simplifies version control
    but also improves overall team collaboration, leading to a smoother workflow.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 高效地组织Unity项目不仅简化了版本控制，还提高了整体团队协作，从而实现更流畅的工作流程。
- en: In this section, we will see how to structure our project and organize our folders.
    We will also learn about the various naming conventions and how to use them.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将了解如何构建我们的项目和组织我们的文件夹。我们还将了解各种命名规范以及如何使用它们。
- en: Folder Structure
  id: totrans-126
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 文件夹结构
- en: 'Here are some best practices for organizing the folders inside Unity:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些组织Unity内部文件夹的最佳实践：
- en: Document naming conventions and folder structure for easy file organization;
    consider a style guide or project template.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档命名规范和文件夹结构以方便文件组织；考虑使用风格指南或项目模板。
- en: Maintain consistency in naming conventions; avoid deviations. Amend rules universally,
    and automate changes using scripts for large-scale updates.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在命名规范上保持一致性；避免偏差。普遍修订规则，并使用脚本自动化大规模更新。
- en: Avoid spaces in file and folder names to prevent issues with Unity’s command
    line tools. Use CamelCase as an alternative.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在文件和文件夹名称中避免使用空格，以防止与Unity的命令行工具出现问题。使用驼峰式作为替代。
- en: Create separate folders for testing or experimentation to keep non-production
    scenes organized. Subfolders with usernames can help divide work areas by team
    member.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为测试或实验创建单独的文件夹，以保持非生产场景的有序。带有用户名的子文件夹可以帮助按团队成员划分工作区域。
- en: Keep internal assets separate from third-party ones, especially if obtained
    from the Asset Store or other plug-ins, as they may have their own project structure.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将内部资产与第三方资产分开，特别是如果是从资产商店或其他插件中获得的，因为它们可能有它们自己的项目结构。
- en: 'While there’s no fixed rule for organizing your folders, the following *Figure
    1**.2* shows examples of how you might structure your Unity project:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然没有固定的规则来组织您的文件夹，但以下**图1.2**显示了您可能如何构建Unity项目的示例：
- en: "![\uFEFFFigure 1.2 – Feature structure (left) and vertical structure (right)](img/B22017_01_02.jpg)"
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图1.2 – 功能结构（左）和垂直结构（右）](img/B22017_01_02.jpg)'
- en: Figure 1.2 – Feature structure (left) and vertical structure (right)
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.2 – 功能结构（左）和垂直结构（右）
- en: These setups revolve around categorizing your project by asset type, features,
    or systems. While you’re not obliged to use these specific folder names, they
    provide a helpful starting point.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这些设置围绕按资产类型、功能或系统对项目进行分类。虽然您不必使用这些特定的文件夹名称，但它们提供了一个有用的起点。
- en: For a more effective and streamlined organizational approach, it is advisable
    to utilize both methods simultaneously.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更有效和简化的组织方法，建议同时利用这两种方法。
- en: 'In the following figure, we can use combined structures for better approach:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下图中，我们可以使用组合结构以获得更好的方法：
- en: "![ \uFEFFFigure 1.3 – Combined structure](img/B22017_01_04.jpg)"
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![图1.3 – 组合结构](img/B22017_01_04.jpg)'
- en: Figure 1.3 – Combined structure
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.3 – 组合结构
- en: Alright, let’s streamline and enhance our workflow by implementing an automated
    system to create folders effortlessly, ensuring a more efficient and time-saving
    approach in our project management.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们通过实施一个自动化的系统来创建文件夹，从而简化我们的工作流程，提高项目管理的效率和节省时间。
- en: In the following script, we’ll employ Unity Editor logic to generate folders
    and subfolders.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下脚本中，我们将使用Unity编辑器逻辑来生成文件夹和子文件夹。
- en: '[PRE0]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The preceding code block shows static functions that you can use in the editor
    once you create the project to setup the folder structure you want.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码块显示了您在创建项目后可以在编辑器中使用的静态函数，以设置您想要的文件夹结构。
- en: You’ll also have the flexibility to modify names, paths, and the entire structure.
    We’ll make use of a dropdown menu when you click right click on mouse in the project
    tab within the editor to facilitate the creation of this folder structure.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 您还将有灵活性来修改名称、路径和整个结构。当您在编辑器中的项目标签页上右键单击鼠标时，我们将使用下拉菜单来方便地创建此文件夹结构。
- en: 'In *Figure 1**.4*, we can see the drop-down menu from which we can choose the
    **Create Default Folders** option to create our own default folders:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在**图1.4**中，我们可以看到下拉菜单，从中我们可以选择**创建默认文件夹**选项来创建我们自己的默认文件夹：
- en: '![  Figure 1.4 – Create default folders from menu](img/B22017_01_05.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图1.4 – 从菜单创建默认文件夹](img/B22017_01_05.jpg)'
- en: Figure 1.4 – Create default folders from menu
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.4 – 从菜单创建默认文件夹
- en: 'Once we click on the **Create Default Folders** option, you will see the following
    panel from where you can name the project:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们点击**创建默认文件夹**选项，您将看到以下面板，您可以在其中命名项目：
- en: '![Figure 1.5 – Type project name](img/B22017_01_06.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.5 – 输入项目名称](img/B22017_01_06.jpg)'
- en: Figure 1.5 – Type project name
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5 – 输入项目名称
- en: Once you name the project, click on **Generate!**.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦命名了项目，点击 **生成**！
- en: Naming Standards
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 命名规范
- en: 'Setting standards isn’t just about project folders. Having a consistent naming
    convention for GameObjects in scenes or Prefabs in project folders can simplify
    collaboration within your team. While there’s no one-size-fits-all naming standard
    for GameObjects, here are some considerations:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 制定标准不仅仅是关于项目文件夹。为场景中的 GameObject 或项目文件夹中的 Prefabs 制定一致的命名约定可以简化团队内的协作。虽然不存在适用于所有
    GameObject 的单一命名标准，以下是一些考虑因素：
- en: 'Use descriptive names:'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用描述性名称：
- en: Choose names you’ll remember months from now.
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择几个月后您还能记住的名称。
- en: Ensure others can understand and pronounce the names.
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保其他人能够理解和发音这些名称。
- en: Avoid confusing abbreviations and spelling mistakes, for example, instead of
    **numBtn** use **numberButton** or **numericButton**.
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免使用混淆的缩写和拼写错误，例如，不要使用 **numBtn**，而应使用 **numberButton** 或 **numericButton**。
- en: 'Use Camel case/Pascal case:'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用驼峰式/Pascal 标准命名：
- en: Enhance readability and typing accuracy, for examples, use **OutOfMemoryException**
    and **dateTimeFormat** and avoid using **Outofmemoryexception** and **datetimeformat**.
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提高可读性和输入准确性，例如，使用 **OutOfMemoryException** 和 **dateTimeFormat**，避免使用 **Outofmemoryexception**
    和 **datetimeformat**。
- en: 'Follow the design document naming:'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遵循设计文档的命名规范：
- en: Use exact spellings from the design document for locations, for example, if
    the design document mentions **HighSpellTower**, maintain that spelling.
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用设计文档中提到的确切拼写，例如，如果设计文档提到 **HighSpellTower**，则保持该拼写。
- en: 'Use underscores sparingly:'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适度使用下划线：
- en: Generally, avoid using underscores, but they are useful in specific cases. Like
    name clarity in long identifiers or avoiding name conflicts.
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常，避免使用下划线，但在特定情况下它们是有用的。例如，在长标识符中的名称清晰度或避免名称冲突。
- en: Prefixing with an underscore place it alphabetically first.
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用下划线作为前缀，使其在字母表中排在前面。
- en: 'Denote variants of a specific object with underscores, for examples:'
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用下划线表示特定对象的变体，例如：
- en: 'Active States: **EnterButton_Active**'
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 激活状态：**EnterButton_Active**
- en: 'Texture Maps: **Foliage_Diffuse**'
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 纹理贴图：**Foliage_Diffuse**
- en: 'In the next section, we’ll explore techniques to streamline the workflow by
    utilizing presets, making the importing process more efficient:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将探讨通过利用预设来简化工作流程的技术，使导入过程更加高效：
- en: Workflow Optimization
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 工作流程优化
- en: Other than deciding how and where to store your assets in the **Assets** folder,
    there are various design and development decisions that can enhance your work
    speed, particularly when utilizing version control. We will take a look at these
    in the following subsections.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 除了决定如何在 **Assets** 文件夹中存储您的资产之外，还有各种设计和开发决策可以增强您的工作速度，尤其是在使用版本控制时。我们将在以下小节中探讨这些内容。
- en: Use Presets
  id: totrans-172
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用预设
- en: Presets are predefined settings or configurations that you can save and apply
    to assets or components. Presets help you quickly apply consistent settings across
    different elements in your project, saving time and ensuring uniformity. They
    are commonly used for materials, lights, and other Unity components to streamline
    the development process. when you apply settings in one of the components you
    can select the preset window from the inspector and create a new preset to apply
    it later.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 预设是您可以保存并应用于资产或组件的预定义设置或配置。预设帮助您快速将一致的设置应用于项目中的不同元素，节省时间并确保一致性。它们通常用于材质、灯光和其他
    Unity 组件，以简化开发过程。当您在组件中应用设置时，您可以从检查器中选择预设窗口并创建一个新的预设以供以后应用。
- en: 'In *Figure 1**.6*, you can see where to select the preset window in the inspector:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *图 1.6* 中，您可以看到在检查器中如何选择预设窗口：
- en: '![Figure 1.6 – Preset button](img/B22017_01_07.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.6 – 预设按钮](img/B22017_01_07.jpg)'
- en: Figure 1.6 – Preset button
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6 – 预设按钮
- en: Applying settings from a preset
  id: totrans-177
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 应用预设设置
- en: Using a Preset is straightforward—go to the **Select Preset** window — this
    window will appear once you click on the preset selector icon (*Figure 1**.6*)
    — or drag the preset from the **Project** window to your GameObject with the component.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 使用预设非常简单——转到 **选择预设** 窗口——当你点击预设选择器图标（*图 1.6*）时，此窗口将出现，或者从 **项目** 窗口拖动预设到具有组件的
    GameObject 上。
- en: '![Figure 1.7 – Preset Menu](img/B22017_01_08.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.7 – 预设菜单](img/B22017_01_08.jpg)'
- en: Figure 1.7 – Preset Menu
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7 – 预设菜单
- en: Important Note
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: When you apply a Preset, it’s like making a copy of the settings from the Preset
    to your item. The Preset and the item aren’t linked, so any changes to the Preset
    won’t affect items you applied it to previously.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 当您应用预设时，就像将预设的设置复制到您的项目项中。预设和项目项之间没有链接，因此对预设的任何更改都不会影响之前应用了它的项目项。
- en: 'To apply a Preset using the **Select Preset** window, follow these steps:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用**选择预设**窗口应用预设，请按照以下步骤操作：
- en: Select the GameObjects or assets where you want to apply the Preset. Click the
    Preset selector (the slider icon) in the **Inspector**.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您想要应用预设的 GameObject 或资产。在**检查器**中点击预设选择器（滑块图标）。
- en: '![Figure 1.8 – Press on this button to choose preset](img/B22017_01_09.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.8 – 点击此按钮选择预设](img/B22017_01_09.jpg)'
- en: Figure 1.8 – Press on this button to choose preset
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.8 – 点击此按钮选择预设
- en: In the **Select Preset** window, find and select the Preset of your choice.
    By doing this, Unity will apply the selected Preset to your component, asset,
    or Project Settings.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**选择预设**窗口中，找到并选择您想要的预设。通过这样做，Unity 将所选预设应用到您的组件、资产或项目设置中。
- en: Close the **Select** **Preset** window.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭**选择** **预设**窗口。
- en: 'If you drag a component Preset onto your GameObject, you can do any one of
    the following things:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您将组件预设拖放到 GameObject 上，您可以执行以下任何一项操作：
- en: Drop it on an existing GameObject in the **Hierarchy** window, and Unity will
    add a new component while copying properties from the Preset.
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将其拖放到**层次结构**窗口中现有的 GameObject 上，Unity 将在复制预设属性的同时添加一个新的组件。
- en: Drop it on an empty area in the **Hierarchy** window to create a new, empty
    GameObject with properties from the Preset.
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将其拖放到**层次结构**窗口的空白区域，以创建一个具有预设属性的新空 GameObject。
- en: Drop it on the **Inspector** window onto the title of an existing component,
    and Unity copies properties from the Preset.
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将其拖放到**检查器**窗口中现有组件的标题上，Unity 将复制预设属性。
- en: Drop it on an empty area in the **Inspector** window, and Unity will add a new
    component while copying properties from the Preset.
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将其拖放到**检查器**窗口的空白区域，Unity 将在复制预设属性的同时添加一个新的组件。
- en: Separating your assets
  id: totrans-194
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**分离您的资产**'
- en: 'The following are some general tips for your project:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些关于您项目的通用提示：
- en: '**Break Down Unity Scenes**: Divide levels into smaller scenes for efficient
    teamwork.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分解 Unity 场景**：将级别分解为更小的场景以提高团队合作效率。'
- en: '**Use SceneManager for Additive Loading**: At runtime, employ SceneManager
    LoadSceneAsync with **Additive** mode.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用 SceneManager 进行增量加载**：在运行时，使用具有**增量**模式的 SceneManager LoadSceneAsync。'
- en: '**Utilize Prefabs for Modularity**: Break work into Prefabs for easier management.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**利用预制件实现模块化**：将工作分解为预制件以方便管理。'
- en: Here, we’ve shared just a handful of insightful tips to kickstart your project
    on the right foot, ensuring a clean and efficient foundation.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们分享了一些有价值的提示，以帮助您项目顺利起步，确保有一个干净高效的基础。
- en: The HacknPlan Management tool
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: HacknPlan 管理工具
- en: Now, let’s talk about the Hack N Plan management tool. It’s a crucial tool that
    will make organizing and managing your game development easier. Stay tuned as
    we explore its features, making your project management more straightforward and
    successful.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们谈谈 Hack N Plan 管理工具。这是一个至关重要的工具，它将使您组织和管理游戏开发变得更加容易。请继续关注，我们将探讨其功能，使您的项目管理更加简单和成功。
- en: 'While numerous management tools exist, for the purposes of this book, we’ll
    focus on demonstrating HacknPlan—a dedicated project management solution designed
    specifically for game development teams. Serving as a centralized hub, it caters
    to developers, designers, and team members, offering a suite of tools to effectively
    plan, monitor, and oversee the intricate process of creating video games. Key
    highlights of HacknPlan include:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管存在许多管理工具，但出于本书的目的，我们将专注于演示 HacknPlan——一个专门为游戏开发团队设计的项目管理解决方案。作为中央枢纽，它服务于开发者、设计师和团队成员，提供一系列工具，以有效地规划、监控和监督创建视频游戏的复杂过程。HacknPlan
    的关键亮点包括：
- en: '**Task Management**: Users leverage HacknPlan to organize and oversee tasks
    systematically, categorizing them effectively. This tool is well-suited for the
    dynamic and ever-evolving nature of game development projects.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务管理**：用户利用 HacknPlan 系统性地组织和监督任务，有效地进行分类。此工具非常适合游戏开发项目的动态和不断变化的特点。'
- en: '**Kanban Boards**: Utilizing a Kanban-style system, It’s like sticky notes.
    HacknPlan provides a visually intuitive representation of tasks as they move through
    different project stages like **To Do**, **In Progress**, and **Done**.'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**看板板**：利用看板式系统，就像便利贴一样。HacknPlan 提供了任务在不同项目阶段（如**待办**、**进行中**和**完成**）移动时的直观视觉表示。'
- en: '**Integration with Version Control Systems**: HacknPlan seamlessly integrates
    with version control systems like Git, fostering collaboration and ensuring meticulous
    tracking of changes contributed by diverse team members.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与版本控制系统的集成**：HacknPlan 与 Git 等版本控制系统无缝集成，促进协作并确保跟踪不同团队成员的贡献的变更。'
- en: '**Time Tracking**: HacknPlan enables users to track time spent on various tasks,
    offering insights into project timelines and resource allocation.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间跟踪**：HacknPlan 允许用户跟踪在各项任务上花费的时间，为项目时间表和资源分配提供洞察。'
- en: '**Team Collaboration**: HacknPlan facilitates collaboration among team members
    by enabling task-related discussions, file sharing, and fostering overall communication
    within the platform.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**团队协作**：HacknPlan 通过允许任务相关的讨论、文件共享以及在平台内促进整体沟通，促进团队成员之间的协作。'
- en: '**Agile Methodology Support**: Aligned with agile development principles, HacknPlan
    empowers teams to adapt to changes effectively and implement gradual improvements
    through an iterative development process.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**敏捷方法支持**：与敏捷开发原则相一致，HacknPlan 使团队能够有效地适应变化，并通过迭代开发过程逐步改进。'
- en: '**Roadmap Planning**: Teams can create and visualize project roadmaps on HacknPlan,
    outlining essential milestones and objectives for different development phases.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**路线图规划**：团队可以在 HacknPlan 上创建和可视化项目路线图，概述不同开发阶段的关键里程碑和目标。'
- en: '**Game Design Documentation**: HacknPlan often includes tools for creating
    and managing game design documentation, ensuring a centralized repository for
    project-related information that’s easily accessible to the team.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**游戏设计文档**：HacknPlan 经常包括创建和管理游戏设计文档的工具，确保项目相关信息集中存储，便于团队轻松访问。'
- en: 'The following image shows the default screen inside HacknPlan which we can
    start adding cards for tasks check *Figure 1**.9*:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像显示了 HacknPlan 内的默认屏幕，我们可以开始为任务添加卡片以进行检查 *图 1**.9*：
- en: '![Figure 1.9 – Empty project at HacknPlan](img/B22017_01_10.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.9 – HacknPlan 中的空项目](img/B22017_01_10.jpg)'
- en: Figure 1.9 – Empty project at HacknPlan
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.9 – HacknPlan 中的空项目
- en: 'The following image shows the example of organizing tasks, check *Figure 1**.10*:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像显示了组织任务的示例，检查 *图 1**.10*：
- en: '![Figure 1.10 – Example of organizing cards](img/B22017_01_11.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.10 – 组织卡片示例](img/B22017_01_11.jpg)'
- en: Figure 1.10 – Example of organizing cards
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.10 – 组织卡片示例
- en: As we wrap up our exploration of organizing projects in game development, it’s
    time to sum up what we’ve learned. We’ve dug into the essentials of working together
    seamlessly with version control, arranging our game elements efficiently within
    Unity, and mastering task management using Hack N Plan.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们结束对游戏开发中组织项目的探索，是时候总结我们所学的内容了。我们深入研究了使用版本控制无缝协作的基本要素，在 Unity 中高效地安排我们的游戏元素，以及使用
    Hack N Plan 精通任务管理。
- en: Now that we’ve covered these key aspects, you’re standing at the end of this
    chapter with a toolbox of valuable skills. Whether you’re a lone wolf or part
    of a team, these insights will be your companions in the world of game development.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经涵盖了这些关键方面，你正站在本章的结尾，手中拿着一套宝贵的技能工具箱。无论你是独行侠还是团队的一员，这些见解都将是你进入游戏开发世界的伴侣。
- en: So, as you close this chapter, remember that effective organization is not just
    a skill; it’s the backbone of a successful game development adventure. May your
    future projects be smooth, your collaborations thrive, and your games leave a
    lasting impact. Best of luck as you apply these lessons to your game-making endeavours!
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，当你关闭这一章时，请记住，有效的组织不仅仅是一项技能；它是成功游戏开发冒险的支柱。愿你的未来项目顺利，你的合作蓬勃发展，你的游戏留下持久的印象。祝你将这些课程应用到你的游戏制作努力中一切顺利！
- en: Summary
  id: totrans-220
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we looked into the basics of game design, introducing the GDD
    and how it shapes the gaming experience. Moving to project organization in Unity
    2024, we explored the details of a version control system, understanding how it
    works and sharing best practices for working together. Then, we talked about organizing
    Unity projects, focusing on having a well-arranged folder system, using consistent
    names, and making work smoother. We also learned about presets and why it’s important
    to keep assets separate.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了游戏设计的基础，介绍了GDD及其如何塑造游戏体验。转向Unity 2024中的项目组织，我们探讨了版本控制系统的细节，理解了它是如何工作的，并分享了团队合作的最佳实践。然后，我们讨论了Unity项目的组织，重点在于拥有一个井然有序的文件夹系统，使用一致的名称，并使工作更加顺畅。我们还学习了预设及其为何保持资产分离的重要性。
- en: The chapter ended with a closer look at “Hack N Plan,” a helpful tool for team
    collaboration, organizing tasks well, and making communication effective. Now,
    with insights into game design basics, project organization tips, and powerful
    tools, we’re ready for the hands-on part of game development. Join us in the next
    chapters for practical applications of these principles!
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 本章以对“Hack N Plan”的深入探讨结束，这是一个有助于团队协作、良好组织任务并使沟通有效的实用工具。现在，在了解了游戏设计基础、项目组织技巧和强大工具之后，我们已准备好进入游戏开发的实战部分。请加入我们，在下一章中我们将看到这些原则的实际应用！
- en: In the next chapter, *Writing Clean and Modular C# Code*, we’ll delve deeper
    into project organization, focusing on clean and modular code structures. Building
    on this chapter’s foundation, we’ll explore game design principles through practical
    examples from our own game development.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章“编写清晰和模块化的C#代码”中，我们将更深入地探讨项目组织，重点关注清晰和模块化的代码结构。基于本章的基础，我们将通过我们自己的游戏开发中的实际例子来探索游戏设计原则。
- en: A key highlight will be an exploration of SOLID principles and other software
    fundamentals, helping us write efficient code that follows best practices. This
    chapter aims to demystify the principles behind robust and flexible code, providing
    the tools to create captivating and enduring games.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 一个关键亮点将是探索SOLID原则和其他软件基础，帮助我们编写遵循最佳实践的效率代码。本章旨在揭示稳健和灵活代码背后的原则，提供创建引人入胜且持久的游戏所需的工具。
- en: Get ready to apply these principles hands-on, forging a path towards mastery
    in the art and science of game development.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 准备好将这些原则付诸实践，开辟通往游戏开发艺术和科学之精通的道路。
