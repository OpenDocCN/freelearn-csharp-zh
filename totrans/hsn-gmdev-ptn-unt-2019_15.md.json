["```cs\npublic interface IRobotPartVisitor\n{\n    void Visit(Robot robot);\n    void Visit(Battery battery);\n    void Visit(MechanicalArm mechanicalArm);\n    void Visit(ThermalImager thermalImager);\n}\n```", "```cs\nusing UnityEngine;\n\npublic class RobotPartActivateVisitor : IRobotPartVisitor\n{\n    public void Visit(Robot robot)\n    {\n        Debug.Log(\"Robot waking up.\");\n    }\n\n    public void Visit(Battery battery)\n    {\n        Debug.Log(\"Battery is charged up.\");\n    }\n\n    public void Visit(MechanicalArm mechanicalArm)\n    {\n        Debug.Log(\"The mechanical arm is actiaved.\");\n    }\n\n    public void Visit(ThermalImager thermalImager)\n    {\n        Debug.Log(\"The thermal imager is turned on.\");\n    }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class RobotPartShutdownVisitor : IRobotPartVisitor\n{\n    public void Visit(Robot robot)\n    {\n        Debug.Log(\"Robot is going back to sleep.\");\n    }\n\n    public void Visit(Battery battery)\n    {\n        Debug.Log(\"Battery is charging down.\");\n    }\n\n    public void Visit(MechanicalArm mechanicalArm)\n    {\n        Debug.Log(\"The mechanical arm is folding back to it's default position.\");\n    }\n\n    public void Visit(ThermalImager thermalImager)\n    {\n        Debug.Log(\"The thermal imager is turned off.\");\n    }\n}\n```", "```cs\npublic interface IRobotPart\n{\n    void Accept(IRobotPartVisitor robotPartVisitor);\n}\n```", "```cs\npublic class Battery : IRobotPart\n{\n    public void Accept(IRobotPartVisitor robotPartVisitor)\n    {\n        robotPartVisitor.Visit(this);\n    }\n}\n```", "```cs\npublic class ThermalImager : IRobotPart\n{\n    public void Accept(IRobotPartVisitor robotPartVisitor)\n    {\n        robotPartVisitor.Visit(this);\n    }\n}\n```", "```cs\npublic class MechanicalArm : IRobotPart\n{\n    public void Accept(IRobotPartVisitor robotPartVisitor)\n    {\n        robotPartVisitor.Visit(this);\n    }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class Robot : IRobotPart\n{\n    private IRobotPart[] robotParts;\n\n    public Robot()\n    {\n        robotParts = new IRobotPart[] { new MechanicalArm(), new ThermalImager(), new Battery() };\n    }\n\n    public void Accept(IRobotPartVisitor robotPartVisitor)\n    {\n        for (int i = 0; i < robotParts.Length; i++)\n        {\n            robotParts[i].Accept(robotPartVisitor);\n        }\n        robotPartVisitor.Visit(this);\n    }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class Client : MonoBehaviour\n{\n    void Update()\n    {\n        // Active robot\n        if (Input.GetKeyDown(KeyCode.O))\n        {\n            IRobotPart robot = new Robot();\n            robot.Accept(new RobotPartActivateVisitor());\n        }\n\n        // Shutdown robot\n        if (Input.GetKeyDown(KeyCode.S))\n        {\n            IRobotPart robot = new Robot();\n            robot.Accept(new RobotPartShutdownVisitor());\n        }\n    }\n}\n```"]