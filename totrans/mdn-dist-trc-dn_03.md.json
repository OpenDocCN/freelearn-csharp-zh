["```cs\n$ aws s3api create-bucket –bucket <name> --region <region>\n```", "```cs\n$ az storage account create –-resource-group <group> --name\n<account>\n$ az storage account show-connection-string -–resource-\ngroup <group> --name <account>\n```", "```cs\nAZURE_BLOB_CONNECTION_STRING=\"DefaultEndpointsProtocol=\n  https;....\"\n```", "```cs\nbuilder.Services.AddOpenTelemetry()\n  .WithTracing(tracerProviderBuilder =>\n        tracerProviderBuilder.\n      .AddRedisInstrumentation(redisConnection, o =>\n            o.SetVerboseDatabaseStatements = true)\n      .AddAWSInstrumentation(o =>\n            o.SuppressDownstreamInstrumentation = false)\n     ...);\n```", "```cs\nAddRedisInstrumentation(redisConnection, o =>\n  o.SetVerboseDatabaseStatements = true)\n```", "```cs\nAddAWSInstrumentation(o => o\n  .SuppressDownstreamInstrumentation = false)\n```", "```cs\nAppContext.SetSwitch(\n  \"Azure.Experimental.EnableActivitySource\",\n  true)\n```", "```cs\nspec:\n  metric:\n    enabled: true\n  tracing:\n    samplingRate: \"1\"\n    zipkin:\n      endpointAddress: \"http://otelcollector:9412/\n        api/v2/spans\"\n```", "```cs\nstatic Function()\n{\n  Sdk.SetDefaultTextMapPropagator(new\n      AWSXRayPropagator());\n    TracerProvider = Sdk.CreateTracerProviderBuilder()\n      .AddAWSLambdaConfigurations()...;\n}\n```", "```cs\nasync Task<APIGatewayProxyResponse> TracingHandler(\n  APIGatewayHttpApiV2ProxyRequest req, ILambdaContext ctx)\n    =>\n    await AWSLambdaWrapper.TraceAsync(TracerProvider,\n      MemeHandler, req, ctx);\n```", "```cs\n\"Values\": {\n  ...\n  \"APPLICATIONINSIGHTS_CONNECTION_STRING\":\n       \"InstrumentationKey=<key>;IngestionEndpoint=\n           <endpoint>\"\n}\n```", "```cs\nvar host = new HostBuilder()\n  .ConfigureFunctionsWorkerDefaults\n  .ConfigureServices(services => services\n    .AddOpenTelemetry()\n    .WithTracing(builder => builder\n      .AddSource(\"Microsoft.Azure.Functions.Worker\")\n      ...)\n    )\n  .Build();\n```", "```cs\n$ az monitor app-insights component create --app <resource-\n  name> --location <region> -g <resource-group>\n```", "```cs\nserverless/azure/frontend$ dotnet run\nserverless/azure/memefunc$ func start --port 5050\n```"]