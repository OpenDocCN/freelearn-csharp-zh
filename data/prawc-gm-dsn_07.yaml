- en: Prototyping
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 原型制作
- en: At this point in the book, you might have realized that, practical as it may
    be, game design happens in the designer's head first, on a document of some sort
    second, and only in a third step is it possible to implement it.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的这个阶段，你可能已经意识到，尽管游戏设计在现实中可能很实用，但它首先发生在设计师的头脑中，其次是某种文档，最后才是实现它的第三步。
- en: To actually make the game happen, the designer has to get their hands on a tool
    that allows them to create working software; to write some code. Not all game
    designers are programmers, and even if they know how to program, designing and
    programming are two different jobs both requiring a person's full attention (and
    the bigger the project, the more this truth cannot be bent).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 要真正制作出游戏，设计师必须掌握一个工具，这个工具允许他们创建可工作的软件；编写一些代码。并非所有游戏设计师都是程序员，即使他们知道如何编程，设计和编程是两种不同的工作，都需要一个人全神贯注（而且项目越大，这个真理越不能弯曲）。
- en: There is one activity where a game designer is required to turn the design into
    a playable thing as if he was the only person working on it. This is the quintessence
    of practical game design.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种活动要求游戏设计师将设计转化为可玩的东西，就像他是唯一一个在制作它的人一样。这是实用游戏设计的精髓。
- en: This is the creation of a game prototype.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是游戏原型的创建。
- en: What is a prototype?
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是原型？
- en: A prototype is a model built to prove a concept.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 原型是为了证明一个概念而构建的模型。
- en: This definition is applicable to anything really, not only games. Most of the
    products we use every day, from the keyboard I am typing on to the complex machines
    that can fly outside the Earth's atmosphere and reach other planets, all of these
    things are the result of endless designs, prototypes, iterations, and failures.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这个定义实际上适用于任何事物，而不仅仅是游戏。我们每天使用的绝大多数产品，从我现在正在敲打的键盘到可以在地球大气层外飞行并到达其他行星的复杂机器，所有这些事物都是无数设计、原型、迭代和失败的结果。
- en: Game prototypes are not meant to be representative of what the entire game will
    look like; in that case, we talk more about tech demo or pre-alpha development
    builds. If you have a pre-alpha ready, that means you are at a later stage of
    the development and you have probably already prototyped your core mechanics to
    get to the pre-alpha stage. Nonetheless, even at later stages, you might need
    to address problems that were not obvious before. Maybe finally feeling how your
    game actually plays in the hands of a playtester—or even your own—raises questions
    about something you could have done differently or better.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏原型并不旨在代表整个游戏的外观；在这种情况下，我们更多地谈论技术演示或预alpha开发版本。如果你已经准备好了预alpha版本，这意味着你处于开发的后一个阶段，你很可能已经为了达到预alpha阶段而原型化了你的核心机制。尽管如此，即使在后期阶段，你也可能需要解决之前不明显的问题。也许最终感受到你的游戏在测试玩家——甚至你自己——手中的实际玩法，会引发关于你可以做得不同或更好的问题。
- en: Prototyping ultimately means answering those questions. It is crucial to nail
    down what those questions are as early as possible.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 原型最终意味着回答这些问题。尽早确定这些问题至关重要。
- en: 'They could be generic questions, such as Would this work?, Would this be more
    interesting?, or Which one is the best? We will be more specific later, but for
    now, keep this in mind: if you don''t have a clear question, why are you prototyping?
    And how will you be able to tell whether the prototype is working or not?'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些可能是通用问题，比如“这会起作用吗？”，“这会更有趣吗？”，或者“哪一个是最好的？”我们稍后会更加具体，但在此期间，请记住：如果你没有明确的问题，为什么你要进行原型制作？你将如何判断原型是否有效？
- en: Why a prototype?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么需要原型？
- en: The main reason why prototypes exist is that we need to narrow down the risk
    of making something that doesn't work. Imagine that you have infinite time and
    resources; what would be the point of creating a prototype? Why not just create
    the entire game, and if it doesn't work, we'd have all we need to try again? Prototypes
    exist exactly because we need to make the best use of the scarce time and resources
    we've got.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 原型存在的主要原因是我们需要缩小制作出无效产品的风险。想象一下，如果你有无穷的时间和资源；创建原型的意义何在？为什么不直接创建整个游戏，如果它不起作用，我们就有所有需要的东西来再次尝试？原型存在正是因为我们需要充分利用我们拥有的稀缺时间和资源。
- en: 'When we build a prototype for a game, we''re generally looking at:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们为游戏制作原型时，我们通常关注的是：
- en: Whether a mechanic is engaging
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无论是机械师是否在参与
- en: Selecting the best idea from a set of alternatives
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从一系列替代方案中选择最佳想法
- en: Testing the technical feasibility of an idea (where the idea can be anything
    from a full game to a graphics technique or AI algorithm)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试一个想法的技术可行性（这个想法可以是完整游戏、图形技术或AI算法等任何东西）
- en: If the user can navigate the game UI effectively and intuitively
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户能够有效地直观地导航游戏用户界面
- en: Please note that our first point is a huge one! To know what a fun mechanic
    is and how to judge whether yours is fun or not, you'd need to master everything
    we said in [`Chapter 5`](index_split_133.html#filepos359600), Adaptation of Mechanics,
    and [`Chapter 6`](index_split_150.html#filepos399514), Invention of Mechanics;
    make sure to go back to those chapters whenever you need more clarity!
  id: totrans-18
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 请注意，我们的第一个要点非常重要！要知道什么是有趣的机制，以及如何判断你的机制是否有趣，你需要掌握我们在第5章【机制改编】和第6章【机制发明】中说的所有内容；确保在需要更多清晰度时回到这些章节！
- en: Prototyping techniques
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 原型技术
- en: 'When it comes to creating a prototype, there are two main options: physical
    and digital.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到创建原型时，主要有两种选择：物理和数字。
- en: You would be surprised to know how many times a physical prototype is used in
    the video game industry. Many game mechanics can be reproduced through board games,
    card games, miniature games, or just one sheet of paper with a pen and maybe a
    few coloring pencils.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会惊讶地知道，在视频游戏行业中，物理原型被使用了多少次。许多游戏机制可以通过棋盘游戏、卡牌游戏、微型游戏，或者只是一张纸和一支笔，再加上几支彩色铅笔来重现。
- en: Digital prototypes are a bit more complex to put together, but of course, their
    fidelity to the medium and ability to create real-time environments and handle
    complex calculations makes them the go-to choice. Most of the time, though, it
    is always a great idea to start very simply on paper, and then move to digital
    with clearer ideas.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 数字原型在组装上稍微复杂一些，但当然，它们对媒介的忠实度以及创建实时环境和处理复杂计算的能力使它们成为首选选择。然而，大多数时候，在纸上非常简单地开始，然后带着更清晰的想法转向数字，总是一个好主意。
- en: Paper prototyping
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 纸质原型
- en: 'Paper prototypes are my favorites. Making them is as quick as it takes to write
    on a piece of paper and cut out some cardboard elements. Each time is like creating
    a little board game! Here''s an example:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 纸质原型是我最喜欢的。制作它们就像在纸上写字和剪出一些纸板元素一样快。每次都像是创建一个小型桌面游戏！以下是一个例子：
- en: '![](img/00006.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00006.jpg)'
- en: A simple sketch on a piece of paper might be a great start for a prototype;
    in this case, the emphasis is on the touch inputs for an RTS game
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在一张纸上简单地勾勒出一个草图可能是一个原型的好开始；在这种情况下，重点是RTS游戏的触控输入
- en: 'If you''re wondering what a paper prototype might look like, have a look at
    the following screenshot:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想知道纸质原型可能是什么样子，请看下面的截图：
- en: '![](img/00068.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00068.jpg)'
- en: 'A paper prototype for an alternative combat system for Battlehand: Heroes.
    We''re going to discuss this particular prototype as a case study later in this
    chapter'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 'Battlehand: Heroes的替代战斗系统的纸质原型。我们将在本章后面将这个特定的原型作为一个案例研究进行讨论'
- en: I'm sure you imagined something much nicer and professional-looking. That's
    not the case at all!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信你想象出的东西要漂亮得多，专业得多。但事实并非如此！
- en: Never trust a prototype that looks too good; as we said, by definition prototypes
    are stripped of anything not essential.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 不要相信看起来太好的原型；正如我们所说的，根据定义，原型去除了所有非必要的东西。
- en: It is important to note that there is a huge difference between a UX-UI paper
    prototype and a game paper prototype. Sometimes a game prototype might include
    UI and UX elements, but the questions we want to answer by paper prototyping a
    game are not related to usability or interface—we want to investigate the game
    mechanics and how fun they are. Always keep this in mind!
  id: totrans-32
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 重要的是要注意，UX-UI纸质原型和游戏纸质原型之间有很大的区别。有时一个游戏原型可能包括UI和UX元素，但我们通过纸质原型来回答的问题与可用性或界面无关——我们想要调查游戏机制以及它们有多有趣。始终牢记这一点！
- en: Advantages of paper prototyping
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 纸质原型的优点
- en: 'So let''s have a look at the main advantages of paper prototyping:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看纸质原型的主要优点：
- en: 'Cheap: Paper prototypes are cheap, both in terms of time and resources.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 便宜：纸质原型在时间和资源上都很便宜。
- en: 'No programming involved: This is straightforward; everyone can create a paper
    prototype. You can apply your game design knowledge and be in full control of
    the game creation without involving any programmers or being limited by technology.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不涉及编程：这一点很简单；每个人都可以创建纸质原型。你可以应用你的游戏设计知识，并在不涉及任何程序员或受技术限制的情况下完全控制游戏创作。
- en: 'Easy and quick to create: You can create a paper prototype by sketching on
    a sheet of paper with a pencil. No creative process is quicker than this. Most
    of the prototypes require a bit more work though, such as cutting pieces of cardboard,
    printing some images or placeholders, and writing cards. Some paper prototypes
    can even use elements such as miniatures (from other games or easily purchasable
    online) or dice. No matter how much stuff you might need to create them, it will
    always be much quicker and easier than creating anything on a computer.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易于创建且快捷：你可以用铅笔在一张纸上绘制草图来创建纸原型。没有比这更快的创意过程。尽管如此，大多数原型需要做更多的工作，比如切割纸板，打印一些图像或占位符，以及编写卡片。一些纸原型甚至可以使用诸如微型模型（来自其他游戏或易于在线购买）或骰子等元素。无论你可能需要多少东西来创建它们，这总是比在电脑上创建任何东西要快得多且容易。
- en: 'Easy to try and iterate: This is another incredible advantage. You can build
    a paper prototype in a couple of hours and try it with anyone (friends, family,
    colleagues) without having to build any working software. Anything that doesn''t
    work can be changed immediately, even during the test itself. Iteration speed
    is the fastest it could be.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易于尝试和迭代：这是另一个难以置信的优势。你可以在几小时内构建一个纸原型，并尝试给任何人（朋友、家人、同事）使用，而无需构建任何工作软件。任何不起作用的东西都可以立即更改，甚至在测试过程中也是如此。迭代速度可以达到最快。
- en: 'Abstraction: Abstraction is great when it comes to testing prototypes. There
    are no distractions coming from how the game looks or anything else that is not
    important. If those pieces of paper come to life and the rules generate fun dynamics,
    they could only get better by adding a theme and a visual aesthetic on top of
    them. Abstraction, as we are going to see in the next paragraph, is a double-edged
    sword as it also presents some risks.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 抽象化：在测试原型时，抽象化非常出色。游戏的外观或其他不重要的东西不会产生任何干扰。如果这些纸张变得生动起来，规则产生了有趣的动态，通过在上面添加主题和视觉美学，它们只会变得更好。正如我们将在下一段中看到的那样，抽象化是一把双刃剑，因为它也带来了一些风险。
- en: Limitations of paper prototypes
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 纸原型的局限性
- en: 'Of course, like any tools, paper prototypes present some disadvantages:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，像任何工具一样，纸原型也带来了一些缺点：
- en: 'Abstraction: To abstract on a system in a way that works on paper before the
    virtual world, the experience is required. You need to be able to distill the
    essential elements and leave out everything else. You''d need to make compromises
    and still create something that can answer real questions for the game as it is
    going to be on screen. Experience is the only way to master abstraction. The good
    news is that you can start prototype games right now, without studying any programming
    language, even away from your computer. You don''t even have to invent a game,
    just pick an existing game and imagine how would you paper prototype some of its
    core mechanics. Don''t be afraid of failure. Prototyping is all about making mistakes
    when they don''t have dramatic repercussions. Prototype and fail as much as you
    can and with everything you can.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 抽象化：在虚拟世界之前，在纸上对系统进行抽象化，需要经验。你需要能够提炼出基本要素，并排除其他所有内容。你需要做出妥协，同时创造出能够回答游戏在屏幕上即将出现的问题的东西。经验是掌握抽象化的唯一途径。好消息是，你现在就可以开始原型游戏，无需学习任何编程语言，甚至不需要在电脑前。你甚至不需要发明一款游戏，只需选择一款现有的游戏，想象一下你会如何用纸原型来模拟其核心机制。不要害怕失败。原型设计就是关于在它们没有产生重大影响时犯错误。尽可能多地原型设计和失败，用尽你所能的一切。
- en: 'Struggle to represent complex and real-time scenarios: This is the main problem
    of paper prototypes. Just imagine what a paper prototype of a fighting game like
    Street Fighter would look like. Already giving you a headache, right? Even more
    difficult, imagine a paper prototype of a VR game, where the main mechanic is
    based on the navigation of a 3D space. Games that require the use of physical
    skill, complex calculations, physics, and many others present a huge challenge
    and sometimes they simply cannot be effectively abstracted into something that
    works on paper. So be aware that sometimes a paper prototype is simply not the
    right tool to answer your questions. That is fair enough, as fortunately, you
    have much more available!'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 难以表示复杂和实时场景：这是纸制原型的主要问题。想象一下像街头霸王这样的格斗游戏的纸制原型会是什么样子。这已经让你头疼了，对吧？更困难的是，想象一个VR游戏的纸制原型，其中主要机制基于3D空间的导航。需要使用物理技能、复杂计算、物理和其他许多游戏的挑战巨大，有时它们根本无法有效地抽象成可以在纸上工作的东西。所以要注意，有时纸制原型根本不是回答你问题的正确工具。这很公平，幸运的是，你有很多其他选择！
- en: 'Can''t fully replace digital prototypes: Another problem of paper prototypes
    is that they need to be translated into the digital world at some point. So they
    are indeed an extra step, as cheap as they are. The value of a paper prototype
    lies in the chance to catch big problems before any implementation; when your
    design seems to work on paper and the most evident problems have been discarded,
    move on to digital as soon as possible. Cheap and fast are the key-words for paper
    prototypes. As soon as a paper prototype shows signs of being slow and complex,
    you know this is the time to move on to digital or to realize you have to ask
    a more specific question and start from scratch again.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法完全替代数字原型：纸制原型的另一个问题是它们最终需要被转换到数字世界。因此，尽管它们很便宜，但确实是一个额外的步骤。纸制原型的价值在于有机会在实施之前捕捉到重大问题；当你的设计在纸上看起来可行，并且最明显的问题已经被排除时，尽快转向数字原型。对于纸制原型来说，便宜和快速是关键词。一旦纸制原型显示出缓慢和复杂的迹象，你就知道这是时候转向数字原型，或者意识到你需要提出一个更具体的问题，并重新从头开始。
- en: Digital prototyping
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 数字原型
- en: When your designs and paper prototypes come to life on screen is when things
    get serious. Be prepared to see what you have imagined in a very different way—be
    prepared to see things that don't work. The faster you realize something's wrong,
    the quicker you'll get back to the drawing board, and the better your chance of
    releasing a fun game. This is the idea behind digital prototypes. Put a working
    software together as soon as possible and iterate as much as you can on it to
    define and redefine your vision. Unlike paper prototyping, digital prototyping
    is a necessary step. If you're not prototyping, you are making a mistake. Period.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的设计和纸制原型在屏幕上呈现出来时，事情就变得严肃起来。准备好以非常不同的方式看到你所想象的东西——准备好看到不工作的事情。你越快意识到有问题，就越快回到绘图板，你发布有趣游戏的机会就越好。这就是数字原型的理念。尽快组装一个可工作的软件，并在其上尽可能多地迭代，以定义和重新定义你的愿景。与纸制原型不同，数字原型是一个必要的步骤。如果你不做原型，你就是在犯错误。这就是全部。
- en: It might happen that the prototyping phase is skipped, maybe because there's
    no time, no resources or the team is extremely confident to just move on to production
    right away. Remember, prototyping means seeking answers to specific questions.
    If you already have these answers, there's no need for a prototype. But if the
    answers are not clear, and the prototyping phase is skipped and the team moves
    onto development, what is really happening is that a very complex and high-fidelity
    prototype is being developed with the intention of selling it as a finished product.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会跳过原型设计阶段，可能是因为没有时间、没有资源，或者团队非常自信，可以直接进入生产阶段。记住，原型设计意味着寻求对特定问题的答案。如果你已经有了这些答案，就不需要原型。但如果答案不明确，跳过原型设计阶段，团队直接进入开发，实际上发生的事情是正在开发一个非常复杂和高保真度的原型，目的是将其作为成品出售。
- en: You can imagine how disastrous this approach would be if something doesn't work.
    You'd be surprised how often this happens, even in the most respected studios.
    And as a professional in the games industry, I guarantee you will hear a lot phrases
    such as "it's too late to change that", "it doesn't work, but we have to live
    with it" and so on and so forth. These phrases are the result of designs being
    implemented without questions, developed for months without early reviews and,
    in short, with no prototyping at all.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以想象，如果这种方法出了问题会多么灾难性。你会惊讶地发现这种情况发生的频率有多高，即使在最受人尊敬的工作室里也是如此。作为一个游戏行业专业人士，我保证你会听到很多类似“现在改变太晚了”、“它不起作用，但我们不得不忍受”之类的说法。这些话是设计在没有质疑的情况下实施、开发数月而没有早期审查以及简而言之，完全没有原型设计的结果。
- en: Common prototyping mistakes
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 常见原型设计错误
- en: The only con of developing a digital prototype is that it will take some time,
    although it's guaranteed that it will save time in the long run. There are also
    some other pitfalls, though. Prototypes are tools, and as such, they could be
    used in the wrong way.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 开发数字原型的唯一缺点是它需要一些时间，尽管可以保证从长远来看它会节省时间。尽管如此，还有一些其他的陷阱。原型是工具，因此可能会被错误地使用。
- en: Let's have a look at the most common mistakes and pitfalls of prototyping.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看原型设计中最常见的错误和陷阱。
- en: The never-ending prototype
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 永无止境的原型
- en: When working on a prototype, it is easy to get attached and try to make it right
    by iterating on the same thing over and over again. If something doesn't work,
    the design has to change. The sooner the team realizes it, the more the prototyping
    phase will serve its purpose. The risk of a quickly built prototype is that it
    might miss some important elements that might end up being essential for making
    a final judgment. As part of the iterative nature of prototypes, this is fine.
    A prototype can start very small (that is, just the core mechanic of a new game),
    and expand to something larger through successive iterations (that is, core mechanics
    and a few puzzles or enemies). However, the risk is to keep iterating outside
    of the scope of the initial question, such as by building a progression system
    on top of that core mechanic because it felt weak or incomplete. Whenever you
    feel that a prototype is increasing in scope and starts looking like an entire
    game, it is probably time to stop and re-assess whether those initial questions
    have been answered.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在制作原型时，很容易沉迷其中，并试图通过反复迭代相同的内容来使其正确。如果某件事不起作用，设计就必须改变。团队越早意识到这一点，原型阶段就越能发挥其作用。快速构建的原型的风险是可能会遗漏一些可能最终对做出最终判断至关重要的元素。作为原型迭代的本质部分，这是可以接受的。原型可以从非常小的地方开始（即，新游戏的核心理念），通过连续迭代（即，核心机制和一些谜题或敌人）扩展到更大。然而，风险是继续在初始问题的范围之外迭代，例如，在核心机制之上构建一个进度系统，因为它感觉薄弱或不完整。每当你觉得原型范围在扩大，开始看起来像整个游戏时，可能就是停止并重新评估那些初始问题是否得到解答的时候了。
- en: Spending time creating systems
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 花时间创建系统
- en: Diving into the game's final implementation with the hope of iterating later
    is always a bad idea. When building software, good engineering is required. The
    software has to be designed, just like the game. Systems need to be built before
    actual gameplay. Imagine a car racing game. The programmer needs to engineer a
    system that can handle different types of cars, with different values of speed,
    acceleration, braking, stability, and so on. He has to build this data system
    first, and only then will the designer be able to define the numbers and try them.
    When working on a prototype, the engineer should just hard-code the values the
    designer wants to try (maybe with a rudimentary system to expose those variables
    and make them changeable to the designer, so he can play with different values).
    The role of the programmer here is to get something playable on screen as soon
    as possible, by any means possible. System implementation should be always postponed
    to the implementation stage.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 希望稍后迭代而跳入游戏的最终实现总是一个坏主意。在构建软件时，需要良好的工程实践。软件必须像游戏一样被设计。在真正的游戏玩法之前需要构建系统。想象一下赛车游戏。程序员需要设计一个可以处理不同类型汽车、不同速度、加速度、制动、稳定性等的系统。他必须首先构建这个数据系统，然后设计师才能定义数字并尝试它们。在制作原型时，工程师应该尽快通过任何可能的方式将设计师想要尝试的值硬编码到屏幕上（可能需要一个原始的系统来暴露这些变量并使它们可变，以便设计师可以玩不同的值）。在这里，程序员的角色是尽快将可玩的内容展示在屏幕上。系统实现应该始终推迟到实施阶段。
- en: Using the prototype as a code-base for the production project
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 将原型作为生产项目的代码库使用
- en: 'A good, quick, on-the-point prototype is very likely to be a code mess, full
    of hacks and horrendous code writing, especially if it was written by the designer
    himself. You don''t want to end up with that code in the final project. When a
    prototype works and all the questions have been answered, it''s time to start
    from scratch. Now is the time to build those systems and allow an engineer to
    design the code properly. Again, the mirage of using the prototype code as a base
    to save time is just that: a mirage. Some time might be saved early on, but rest
    assured that the first time a problem arises all the time initially saved and
    more will be lost. This is true even if the prototype worked perfectly fine.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好、快、切中要点的原型很可能是一个代码混乱，充满了黑客技术和糟糕的代码编写，尤其是如果它是设计师自己编写的。你不想在最终项目中留下这样的代码。当原型工作并且所有问题都得到解答时，就是从头开始的时候了。现在是时候构建那些系统，并让工程师正确地设计代码了。再次强调，将原型代码作为节省时间的基座的想法只是一个幻影。虽然一开始可能会节省一些时间，但请放心，一旦问题出现，最初节省的时间和更多的都会丢失。即使原型工作得非常完美，这也是正确的。
- en: That said, some experienced engineers might be able to create prototypes with
    perfectly engineered code ready to be taken into production. It is their call
    in the end and there are surely situations where this would be possible. However,
    when a designer or another less technical team member is involved in the creation,
    is always a better idea to let the engineer make this kind of decision.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，一些经验丰富的工程师可能能够创建出具有完美工程代码的原型，这些代码可以直接投入生产。最终这是他们的决定，当然，肯定有情况是这种情况可行的。然而，当设计师或其他不太技术性的团队成员参与创建时，让工程师做出这种决定总是更好的选择。
- en: Spending time adding features, art, and effects
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 花时间添加功能、艺术和效果
- en: Any time spent adding stuff to a prototype that is not directly related to answering
    the initial questions is time lost. Not only that, every unnecessary thing added
    to a prototype is a step toward the prototype code evolving into the final game.
    Be wary of anything that seems to be working better after some good art, animations,
    or effects are added. You will be tempted to think that just by looking good a
    game could hide its design flaws.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在原型上花费的时间，如果与回答初始问题无关，就是浪费时间。不仅如此，添加到原型中的每一件不必要的东西，都是使原型代码演变成最终游戏的一个步骤。要警惕那些在添加了一些好的艺术作品、动画或效果后看起来工作得更好的东西。你可能会被诱惑认为，仅仅因为看起来不错，一个游戏就能隐藏其设计缺陷。
- en: That is never true.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这永远不是真的。
- en: Seeking confirmations
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 寻求确认
- en: This is the most dangerous pitfall of prototyping.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这是原型制作的最大的陷阱。
- en: If you are convinced you already have an answer and you are building a prototype
    to demonstrate that it is right at all costs, you're missing a great opportunity.
    It is crucial to remain open-minded. It is very likely that you'd be building
    a prototype based on a hypothesis to make something new and better.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你确信你已经找到了答案，并且不惜一切代价在构建原型来证明它是正确的，那么你错过了一个大好机会。保持开放的心态是至关重要的。你很可能是在基于一个假设来构建原型，以创造一些新的、更好的东西。
- en: Everyone would love to hear how brilliant the solution provided by their prototypes
    is, and it's great when it happens. If it doesn't, the biggest mistake you can
    make is to be protective of your work and fail to see how a negative response
    is as useful as a good one. A prototype that shows how something does not work
    is a success as much as one that has been proven right.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都愿意听到他们提供的原型解决方案是多么的精彩，当这种情况发生时，那真是太好了。如果它没有发生，你可能会犯的最大错误就是保护你的工作，而未能看到负面反馈和正面反馈一样有用。一个展示某物不工作的原型，就像一个被证明是正确的原型一样，是一个成功。
- en: 'Remember: the goal is to have answers, not to actually build the game.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 记住：目标是得到答案，而不是真正制作游戏。
- en: A step-by-step guide to prototyping
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 模型原型制作的逐步指南
- en: Here follows a step-by-step process for developing an effective prototype. These
    steps can be used to prototype an entire game or just a single feature, or maybe
    just to evaluate a change to an existing system.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个开发有效原型的逐步过程。这些步骤可以用来制作整个游戏的原型，或者只是单个功能的原型，或者只是评估对现有系统的更改。
- en: 'Step 1: Ask the right questions'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步：提出正确的问题
- en: Whether the prototype is for trying out a game idea or a new mechanic or to
    evaluate and improve something within your game, you need to have a clear problem
    in mind and how you imagine the prototype is going to solve it. Never start prototyping
    if you don’t know what you need to evaluate or prove.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 无论原型是用来尝试游戏想法、新机制，还是评估和改进游戏中的某个部分，你都需要有一个清晰的问题，以及你想象原型将如何解决它。如果你不知道你需要评估或证明什么，就永远不要开始原型制作。
- en: What would make a good question? And a bad one?
  id: totrans-71
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 什么是一个好问题？什么是一个坏问题？
- en: 'Usually, good questions are specific. Asking whether a mechanic is fun or not
    would be a bad question. What do we mean by fun? A better question would probably
    be: does this mechanic provide enough decision-making for the player? Are his
    choices meaningful?'
  id: totrans-72
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 通常，好问题是具体的。问一个机制是否有趣不是一个好问题。我们所说的“有趣”是什么意思？可能更好的问题会是：这个机制是否为玩家提供了足够的决策？他的选择是否有意义？
- en: 'Step 2: Select the framework and tools'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 第2步：选择框架和工具
- en: Paper or digital prototyping? If paper, is it going to need anything other than
    just pen and paper? Maybe dice, miniatures, cards? If digital, does it require
    a game engine? A spreadsheet? A presentation?
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 纸制还是数字原型？如果是纸制，除了笔和纸还需要其他东西吗？也许需要骰子、微型模型、卡片？如果是数字的，是否需要游戏引擎？电子表格？演示文稿？
- en: Some of these things might not be very clear at the beginning. In that case,
    start with something and evaluate what else you might need as you go. If you realize
    something does work—say you find out you're not able to prototype a system on
    paper—just scrap it and start over with a better tool.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这些事情中的一些可能在开始时并不非常清楚。在这种情况下，先从某处开始，然后评估你在进行过程中可能还需要什么。如果你意识到某些东西是可行的——比如说你发现你无法在纸上原型化一个系统——那就放弃它，用更好的工具重新开始。
- en: 'Step 3: Create the rules'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 第3步：创建规则
- en: 'This is extremely important for paper prototypes: what are the rules? How do
    you actually play the prototype? Paper prototype rules look a lot like a board
    game rule manual. Make sure the rules are simple and clear. Also, digital prototypes
    need rules. What kind of mechanic do you need to implement? How will you be able
    to condense a complex game into its abstract and essential version?'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于纸制原型来说非常重要：规则是什么？你实际上如何玩这个原型？纸制原型的规则看起来很像一个桌面游戏规则手册。确保规则简单明了。此外，数字原型也需要规则。你需要实现什么样的机制？你将如何将复杂的游戏浓缩成其抽象和本质版本？
- en: 'Step 4: Implement and create the prototype'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 第4步：实现并创建原型
- en: It doesn't matter if this is writing the code or cutting out the elements with
    a pair of scissors. Make something playable happen as soon as possible
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 无论这是编写代码还是用剪刀剪掉元素，都要尽快让某个可玩的部分发生。
- en: 'Step 5: First Playtest'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 第5步：第一次试玩
- en: As soon as you've got something playable, try it. Nothing is going to work as
    you imagined. The first play of a prototype is crucial because if you approach
    it with bias, thinking that it is going to work, you are committing one of the
    common mistakes. The first iteration of any prototype is not going to work. So
    when you play the first time, take notes and go back to the drawing board to make
    the changes you need. When we say play, we mean to play it with as many people
    as you can—especially people not involved in the development. At this stage what
    you really need is an unbiased opinion.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了可玩的部分，就试试看。没有什么会像你想象的那样工作。原型的第一次试玩至关重要，因为如果你带着偏见去尝试，认为它一定会成功，你就是在犯一个常见的错误。任何原型的第一次迭代都不会成功。所以当你第一次试玩时，要记笔记，然后回到画板上去做出你需要的变化。当我们说试玩时，意味着尽可能多的人来试玩——特别是那些不参与开发的人。在这个阶段，你真正需要的是一个无偏见的意见。
- en: 'Step 6: Iterate'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 第6步：迭代
- en: Re-implement anything that wasn't right the last time, play with your variables,
    change the rules. Do this until you find an answer to your initial question.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 重新实现上次不正确的东西，调整你的变量，改变规则。做到你找到对初始问题的答案为止。
- en: Play and iterate should be quick processes. If you don't find your answers after
    a few iterations, it might well be that you're asking the wrong question or that
    you don't want to admit that the answers are just disproving your concept.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 试玩和迭代应该是快速的过程。如果你在几次迭代后找不到答案，可能是因为你提出了错误的问题，或者你不愿意承认答案只是在证伪你的概念。
- en: If your hypothesis is disproved by your prototype, don't try to pursue that
    solution anyway.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的假设被原型所证伪，那就不要继续追求那个解决方案。
- en: Prototyping is a process worth doing only if you’re willing to accept the consequences
    and dump what doesn't work.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 只有当你愿意接受后果并丢弃不工作的事物时，原型制作才是一个值得做的事情。
- en: 'Step 7: Move on'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 第7步：继续前进
- en: 'There are only two possible outcomes from the previous steps: you either prove
    or disprove your hypothesis. In both cases, the job of your prototype is over.
    If the answer is not the one you hoped for, don''t make the mistake of forcing
    things to work out your way. If the answer is positive, don''t try to add on top
    of your prototype and make it the feature or the game. Move on and build something
    new from the answers you have got, not from the prototype you have created.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的步骤中，只有两种可能的结果：你要么证明要么反驳你的假设。在两种情况下，你的原型的工作就结束了。如果答案不是你希望的那样，不要犯强迫事情按照你的方式发展的错误。如果答案是积极的，不要试图在你的原型上添加功能或游戏。继续前进，从你得到的答案中构建新的东西，而不是从你创建的原型中。
- en: Prototyping exercise
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 原型制作练习
- en: So, you know the differences between paper and digital prototyping. You can
    start working and getting the experience right now with paper.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，你知道纸质原型和数字原型的区别。你现在就可以开始使用纸质材料进行工作并获得经验。
- en: In fact, you must start right now.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，你必须立即开始。
- en: Before reading on, grab a pen and a piece of paper and try to prototype something.
    It has to be something doable in under an hour, don't worry about trying something
    really cool or a real game idea you have. Try to get really practical.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续阅读之前，拿一支笔和一张纸，尝试制作一个原型。它必须在不到一个小时之内完成，不用担心尝试一些真正酷的东西或你真正有想法的游戏。尽量做到实际。
- en: 'Here are some ideas:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些想法：
- en: A racing game for two players A and B, such as Game of the Goose
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一款两人玩家A和B的赛车游戏，例如鹅的游戏
- en: A simple combat system for a 1v1 card game
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一款简单的1v1卡牌游戏的战斗系统
- en: A puzzle level for a platformer game such as Super Meat Boy
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一款平台游戏如超级肉男孩的解谜关卡
- en: A 1v1 strategy game that uses a board and a grid, like Chess
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一款使用棋盘和网格的1v1策略游戏，就像象棋一样
- en: Don’t worry about the results, just try it and see what you come up with in
    under one hour.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 不要担心结果，只尝试一下，看看在一小时内你能想出什么。
- en: The hands-on game designer
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 动手游戏设计师
- en: If you tried to create some paper prototypes, you might have found answers to
    your questions. If you did right, you might also have even more questions.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你尝试创建一些纸质原型，你可能会找到你的问题的答案。如果你做得对，你可能也会有更多的问题。
- en: 'One question could be: does it really work like this? Absolutely yes.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 一个可能的问题是：它真的会这样工作吗？绝对会的。
- en: 'Prototyping is about discovering, trying, and making mistakes. If you don''t
    try, you will never learn. The next step would be trying to create something in
    the digital world. Here things become tougher because you might not have any programming
    skills and probably not even know where to start. Mark these words: by learning
    how to use a game engine and program basic game mechanics and small prototypes,
    you will be ahead of any aspiring game designers who don''t have this skill.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 原型制作是关于发现、尝试和犯错误。如果你不尝试，你就永远不会学到东西。下一步将是尝试在数字世界中创造一些东西。这里事情变得更难，因为你可能没有任何编程技能，甚至可能不知道从哪里开始。记住这些话：通过学习如何使用游戏引擎和编程基本的游戏机制和小型原型，你将比那些没有这种技能的任何有抱负的游戏设计师都要领先。
- en: This is the real skill that will always give you an edge over the thousands
    of other designers that will be competing with you for the few design roles available
    in the game industry. Reading and studying is the bare minimum, so don't think
    that by reading this and many other game design books you will be any better than
    your competition. All of them have done the same!
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这是真正的技能，它将始终让你在与其他数千名设计师竞争游戏行业少数设计职位时保持优势。阅读和学习是最基本的，所以不要认为通过阅读这本书和许多其他游戏设计书籍，你将比你的竞争对手更好。他们都已经做了同样的事情！
- en: 'The other factor that makes you a better (more desirable, to be precise) designer
    is your experience. If you have never worked on a game professionally, it is unlikely
    that you’ll be ever considered better than a designer who did. When you have little
    or no professional experience there''s only one thing that will make you stand
    out: your personal projects and the ability to design and implement your ideas.
    I call this game designer The hands-on game designer. It is a rare breed, and
    as such it is in high demand anywhere in the game industry.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 使你成为一个更好的（更受欢迎的，更准确地说）设计师的另一个因素是你的经验。如果你从未在游戏方面进行过专业工作，你不太可能被认为比那些有经验的设计师更好。当你几乎没有专业经验时，唯一能让你脱颖而出的就是你的个人项目以及设计和实施你想法的能力。我把这个游戏设计师称为“动手游戏设计师”。这是一个稀有品种，因此它在游戏行业的任何地方都需求旺盛。
- en: Learn how to implement and code your games. You don't need to learn how to go
    beyond the prototyping stage. You don't have to master computer science or software
    engineering principles. You just need to know how to make your design happen on
    screen in a prototype. Do so and you’ll have one foot already in your first job
    as a game designer.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 学习如何实现和编写你的游戏。你不需要学习如何超越原型阶段。你不需要掌握计算机科学或软件工程原则。你只需要知道如何让你的设计在原型中在屏幕上实现。做到这一点，你已经在游戏设计师的第一份工作中迈出了第一步。
- en: Not only that, as your experience increases in game design, you will find your
    technical skills to be an incredible tool for communicating ideas, pitching projects,
    demonstrating your hypotheses, and most of all, for working independently or freeing
    up the engineers from some implementation work, leaving them more time to focus
    on more important tasks. You yourself will have more control over how your designs
    make it into the game. Be a hands-on designer. Be practical and evaluate your
    work in terms of how many things you can make happen.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅如此，随着你在游戏设计方面的经验增加，你会发现你的技术技能是一个令人难以置信的工具，用于传达想法、提出项目、展示你的假设，最重要的是，用于独立工作或让工程师从一些实现工作中解放出来，让他们有更多时间专注于更重要的事情。你自己将会有更多控制权来决定你的设计如何进入游戏。成为一个亲力亲为的设计师。要务实，并从你能实现多少事情的角度来评估你的工作。
- en: A paper prototype case-study
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 论文原型案例研究
- en: We are going to examine in detail a case study from my personal work experience
    at Another Place Productions. At a certain point during the development of our
    latest game, Battlehand Heroes, we had to address an unexpected problem. The combat
    system that was good enough for the first title of the Battlehand IP was proving
    problematic in the new game.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将详细研究我在Another Place Productions的个人工作经验中的一个案例研究。在我们最新游戏Battlehand Heroes的开发过程中，某个时刻我们遇到了一个意外的问题。Battlehand
    IP的第一个标题中的战斗系统在新游戏中证明是有问题的。
- en: Questioning a combat system
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 对战斗系统的质疑
- en: 'Battlehand: Heroes is a turn-based RPG in which the player builds his team
    of heroes, each with a unique deck of cards to battle. The combat system that
    worked quite well in the first game, Battlehand, was lacking the depth to engage
    a new generation of players. The first game was released in 2015, and player''s
    tastes and expectations for games always evolve, so games need to also. The players
    struggled to understand why they should play one card instead of another, how
    to choose their strategy, and how to correctly react to the enemy''s moves.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 'Battlehand: Heroes是一款回合制RPG，玩家可以组建自己的英雄团队，每个英雄都有独特的牌组来战斗。在第一款游戏Battlehand中表现良好的战斗系统，缺乏深度来吸引新一代玩家。第一款游戏于2015年发布，玩家的游戏口味和期望总是不断演变，因此游戏也需要如此。玩家们难以理解为什么他们应该玩一张牌而不是另一张，如何选择他们的策略，以及如何正确应对敌人的行动。'
- en: 'You might wonder how we actually found out these problems in the game: by playtesting!
    It is crucial to test your game as soon as possible with real players and note
    down everything about their experience. We''re going to talk more about playtesting
    and user research later in this book.'
  id: totrans-111
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可能会想知道我们是如何在游戏中发现这些问题的：通过测试！尽快用真实玩家测试你的游戏，并记录下他们体验的每一件事。我们将在本书的后面部分更多地讨论测试和用户研究。
- en: We discussed many different solutions for improving the core of the combat systems,
    but before committing the development team to any of those, we decided to prototype
    on paper the more promising ideas.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了许多不同的解决方案来改进战斗系统的核心，但在将开发团队投入到任何这些方案之前，我们决定在纸上原型化更有希望的想法。
- en: 'The combat system is based on 2v2 heroes battles, the player can manage each
    of his heroes and their own deck of 8 cards. Each hero belongs to an element:
    Earth, Fire, Water, Air, or Spirit. They are governed by a rock-paper-scissors
    (RPS) strength/weakness relation:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 战斗系统基于2v2英雄战斗，玩家可以管理他自己的每个英雄和他们自己的8张牌组。每个英雄属于一个元素：地球、火、水、空气或精神。它们遵循一个剪刀石头布（RPS）的强弱关系：
- en: '![](img/00104.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00104.jpg)'
- en: 'Battlehand elemental RPS mechanic: Fire is strong against Earth, Earth is strong
    against Air, Air against Spirit, Spirit against Water and Water against Fire'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Battlehand元素RPS机制：火强于地球，地球强于空气，空气强于精神，精神强于水，水强于火
- en: My hypothesis was that the game could have benefited from the introduction of
    a multi-layered RPS system on top of the elements. Up to this point, each hero
    could have cards that could be heal, shield, and attack. All of them balanced
    around their mere power (the more the damage, the shield points, or the HP cured,
    the better the card, basically). The idea was to try to assign to each card a
    property that could make it strong or weak against other cards regardless of their
    numbers. If a shield could block most of the attacks but some attacks can automatically
    pierce a shield, that would create an interesting scenario where the right card
    for the right situation may not always be the most powerful one, and it would
    be up to the player to select it.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我的假设是，游戏可以从在元素之上引入一个多层次的RPS系统而受益。到目前为止，每个英雄都可以有可以治疗、盾牌和攻击的卡片。所有这些卡片都围绕着它们的力量（伤害、护盾点数或治愈的HP越多，卡片越好）进行平衡。想法是尝试为每张卡片分配一个属性，使其无论其数量如何，都能对其他卡片产生强或弱的影响。如果盾牌可以阻挡大部分攻击，但有些攻击可以自动穿透盾牌，这将创造一个有趣的场景，在这个场景中，适合特定情况的正确卡片可能不总是最强大的，这取决于玩家来选择。
- en: Addressing the problem
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 解决问题
- en: This is an advanced, real-life scenario; as such, things are never exactly as
    predicted. In fact, the prototype needed to answer more than one question. But
    let's get back to the problems again.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个高级、现实生活中的场景；因此，事情永远不会完全如预测的那样。事实上，原型需要回答的问题不止一个。但让我们再次回到问题上来。
- en: 'The combat lacks depth in the sense that:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 战斗在深度上缺乏，因为：
- en: One of the most important strategic choices in the fight is about which hero
    you select for that specific combat (to be strong against the enemy elements).
    The strategy should also propagate into the combat itself, not just exist in the
    pre-fight.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 战斗中最重要的战略选择之一是选择哪个英雄进行特定战斗（以对抗敌人的元素）。这种策略也应该传播到战斗本身，而不仅仅是存在于战斗前。
- en: When it is time to play a card, the best one to play is always the most powerful.
    The choice could be more interesting.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当是时候出牌时，最好的选择总是最强大的牌。选择可能会更有趣。
- en: All the heroes have access to all the card types (shields, heals, attacks),
    so each hero can fulfill all the roles in combat (healer, supporter, attacker,
    defender, and so on).
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有英雄都可以使用所有类型的卡片（盾牌、治疗、攻击），因此每个英雄都可以在战斗中扮演所有角色（治疗者、支持者、攻击者、防御者等等）。
- en: With these problems clearly in mind, we can ask the right questions.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 明确这些问题后，我们可以提出正确的问题。
- en: Asking the right questions – step 1
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 提出正确的问题 – 第1步
- en: 'Does the prototyped system:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这个原型系统：
- en: Create a scenario where I don't always choose the most powerful card, but the
    most useful for that specific situation?
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个场景，在这个场景中，我不总是选择最强大的牌，而是选择对特定情况最有用的牌？
- en: Allow me to think and plan a few card draws ahead?
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让我思考并计划一些卡牌抽取？
- en: Shift the attention from the RPS mechanic to the cards?
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将注意力从RPS机制转移到卡片上？
- en: Selecting the tools – step 2
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 选择工具 – 第2步
- en: With a clear problem and clear questions to answer, it is time to identify which
    kind of prototype are we going to need. A great thing about old school turn-based
    RPG and card games is that using paper prototypes comes just naturally to them!
    If you consider the few other solutions to evaluate and prototype, paper prototyping
    sounds like the quickest and cheapest solution.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 明确的问题和要回答的问题很清楚，现在是时候确定我们需要哪种类型的原型了。老式回合制RPG和卡牌游戏的一个优点是，使用纸原型对他们来说来得非常自然！如果你考虑其他一些评估和原型化的解决方案，纸原型听起来是最快、最便宜的解决方案。
- en: Creating the rules – step 3
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 创建规则 – 第3步
- en: A paper prototype is always an abstraction of what you get in a digital game,
    so it's more important than ever to get in only the essential stuff.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 纸原型总是你从数字游戏中获得的抽象，所以只包含必要的内容比以往任何时候都更重要。
- en: 'These are the rules I came up with:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我想出的规则：
- en: '![](img/00040.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00040.jpg)'
- en: Don't worry if these rules are not very clear to you, the point of this exercise
    is to understand the prototyping process more than the specific example!
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这些规则对你来说不是很清楚，这个练习的目的是更多地了解原型制作过程，而不是具体的例子！
- en: 'For your reference, this is a screenshot of a few Battlehand Heroes cards at
    the time of the prototype creation:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 供您参考，这是在原型创建时期的一些战斗手英雄卡片的截图：
- en: '![](img/00132.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00132.jpg)'
- en: 'Four cards from an early version of Battlehand: Heroes'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 来自《战斗手：英雄》早期版本的4张卡片
- en: As you can see, there is a huge difference between the real game mechanics and
    the prototype's rules, but the core is really the same. The questions we asked
    can be answered by a much simpler abstraction of the digital game.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，真实游戏机制和原型规则之间存在巨大差异，但核心确实是相同的。我们提出的问题可以通过数字游戏的更简单抽象来回答。
- en: Implementation – step 4
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 实现 – 第4步
- en: This is the part I love the most. To create the prototype, I simply cut 8 cards
    per hero and wrote the card rules on each of them. Then I created the various
    tokens needed and used 4 miniatures to represent the heroes.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我最喜欢的一部分。为了创建原型，我简单地为每个英雄剪了8张卡片，并在每张卡片上写下了规则。然后我创建了所需的各个标记，并使用4个迷你模型来代表英雄。
- en: I also used dice to keep track of the various numbers going on in the game and
    colored cardboard on which I took various notes related to the heroes during the
    gameplay.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我还使用了骰子来跟踪游戏中出现的各种数字，并在游戏过程中在彩色的卡纸上记录与英雄相关的各种笔记。
- en: 'Each hero''s deck was designed to create a compelling experience with just
    a few cards. We will learn later about balancing and how to set up every number
    and variable in a game:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 每个英雄的牌组都是为了用几张卡片就能创造一个引人入胜的经验而设计的。我们稍后会了解平衡以及如何在游戏中设置每个数字和变量：
- en: '![](img/00199.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00199.jpg)'
- en: Our Water hero, with his 8 cards and all the necessary pieces to play the prototype
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的水系英雄，拥有8张卡片和玩原型的所有必要部件
- en: First play – step 5
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 第一轮 – 第5步
- en: The first play showed a very promising experience. Playing the prototype was
    fun and it was clear that the whole thing was on the right track. Of course, the
    initial questions were really spot-on, as the knowledge of the game we had was
    deep and based on a previous title for the same IP and a long list of well-known
    problems and possible improvements.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 第一轮展示了非常令人期待的经验。玩原型很有趣，很明显整个事情都在正确的轨道上。当然，最初的问题确实非常准确，因为我们对游戏的了解很深入，基于同一IP的前一个标题以及一系列众所周知的问题和可能的改进。
- en: 'What really required some more thought were the rules. The damage and HP ranges
    were too tight: with attacks dealing 1 to 4 damage and heroes having from 6 to
    12 HP, some cards were too strong and some heroes were too weak.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 真正需要更多思考的是规则。伤害和HP的范围太窄：攻击造成1到4点伤害，英雄的HP从6到12点，有些卡片太强，有些英雄太弱。
- en: Another flaw was the lack of a combination of card plays (COMBO) to get greater
    advantages (that is, two consecutive DOT attacks dealing extra damage).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个缺陷是缺乏卡片操作的组合（COMBO）来获得更大的优势（即，连续两次DOT攻击造成额外伤害）。
- en: Iteration – step 6
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代 – 第6步
- en: 'With the problems of the first play in mind, the iterative process of improving
    the prototype started: we tweaked the numbers, added a combo system, and switched
    some of the cards (for example, we removed all the healing cards from a hero that
    was supposed to be more focused on attacking).'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到第一轮的问题，改进原型的迭代过程开始了：我们调整了数字，添加了组合系统，并更换了一些卡片（例如，我们从原本更专注于攻击的英雄中移除了所有治疗卡片）。
- en: 'By continuing to play the prototype, two other flaws emerged. Some battles
    were dragging on for too long in a sort of stall, so we added a damage crescendo
    after a certain number of turns passed. We also found that the combo was hard
    to line up and a bit unsatisfactory, so we decided on an extreme solution: lining
    up a combo means instant-killing the target hero. This little change spiced up
    the entire combat a lot, giving a great reward to long-term planning. Of course
    in the real game nothing that powerful would be implemented, but the game was
    clearly more fun and engaging. So we noted that down and kept it in mind for our
    final version of the combo system.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 通过继续玩原型，出现了另外两个缺陷。有些战斗拖得太久，陷入了一种僵局，所以我们增加了一定回合数后的伤害递增。我们还发现组合很难排列，有点令人不满意，所以我们决定采取极端措施：排列组合意味着立即杀死目标英雄。这个小改动极大地丰富了整个战斗，为长期规划提供了巨大的回报。当然，在真实游戏中，不会有这么强大的功能被实现，但游戏显然更有趣，更具吸引力。因此，我们将其记录下来，并牢记于心，为我们的最终版本组合系统做准备。
- en: Final step
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步
- en: Were all the questions answered?
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 所有问题都解答了吗？
- en: 'I’d say yes, perfectly:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我会说，是的，完美：
- en: Having different types of cards be more or less powerful against different types
    of shields moved the attention away from just the mere numbers, so I found myself
    going for a less powerful card that had the proper effect to rightly counter the
    enemy setup. This was happening consistently enough to make me think about new
    interesting types of cards and abilities and how to build a more effective deck.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同的卡片对不同的护盾有强有弱，这使人们的注意力从单纯的数字转移开，所以我发现自己正在寻找一张不那么强大的卡片，它具有正确的效果，可以正确地对抗敌人的布局。这种情况发生得足够频繁，以至于让我开始思考新的有趣类型的卡片和能力，以及如何构建一个更有效的牌组。
- en: The extreme combo system forced me to always think how to pull out a good combo
    and added a lot of thrill to the next card draw.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 极端组合系统迫使我总是思考如何拉出一个好的组合，并为下一张牌的抽取增添了无数刺激。
- en: The elemental advantage became almost irrelevant, with the whole focus of the
    combat shifted onto the battle itself. It even cast some doubts about the elemental
    wheel, as it made it clear that the RPS mechanic was previously too much on the
    meta-game side (limiting the strategic choices to the pre-battle phase, when deciding
    which elements to bring into battle).
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元素优势几乎变得无关紧要，整个战斗焦点转向了战斗本身。它甚至对元素轮产生了一些怀疑，因为它清楚地表明，RPS机制之前在元游戏方面过于突出（将战略选择限制在战斗前的阶段，即决定将哪些元素带入战斗）。
- en: With these great answers, we were able to move to digital. As we mentioned,
    the downside of paper prototypes is that if they work on paper, you have to try
    them in the digital world too before starting the actual production. There are
    rare cases where the answer is so clear that you can move to production really
    quickly, but what you want to do with paper prototypes is to fail fast more than
    really find a working solution. If it doesn't work on paper, it most likely won't
    anywhere. On the other hand, if it does work on paper, you still have to make
    sure you can translate that abstraction into something that works in a video game.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些出色的答案的帮助下，我们能够转向数字原型。正如我们提到的，纸张原型的缺点是，如果它们在纸张上工作，在开始实际生产之前，你必须在数字世界中尝试它们。有极少数情况下，答案如此清晰，你可以真正快速地进入生产，但你用纸张原型想要做的更多的是快速失败，而不是真正找到一个可行的解决方案。如果它在纸张上不起作用，它很可能在任何地方都不会起作用。另一方面，如果它在纸张上起作用，你仍然必须确保你能够将这种抽象转化为在视频游戏中起作用的东西。
- en: From paper to digital
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 从纸张到数字
- en: In our specific case, bringing the prototype to the digital game was a fairly
    easy and quick job.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的特定情况下，将原型带到数字游戏中是一项相对简单快捷的工作。
- en: 'As the game was already developed to a playable stage, the main job was to
    modify the current game system to reflect the new changes. Of course, we had to
    adapt the rules from the paper prototype to the digital game logic, implement
    them in the quickest and efficient way, play, and iterate:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 由于游戏已经开发到可玩阶段，主要工作是修改当前的游戏系统以反映新的变化。当然，我们必须将纸张原型的规则适应到数字游戏逻辑中，以最快和最有效的方式实现它们，然后进行游戏和迭代：
- en: '![](img/00063.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00063.jpg)'
- en: The cards from the paper prototype were implemented in the digital game
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 纸张原型中的卡片被实现了在数字游戏中
- en: Abstraction versus reality
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 抽象与现实
- en: After we implemented the prototype principles in the actual game, we were ready
    to start over with the iterations.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们将原型原则实现到实际游戏中后，我们准备开始新一轮的迭代。
- en: In fact, what has been proved on paper was just a quick way to commit to a more
    serious prototype. It wasn't a definitive answer that the system would have worked.
    Think about paper prototyping as a green light for the actual digital prototyping.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，在纸张上证明的只是对更严肃的原型进行承诺的一种快速方式。它并不是一个明确的答案，即系统将会起作用。将纸张原型视为实际数字原型的一个绿灯。
- en: 'The digital prototype was replicating quite well the experience that we had
    on paper, but some improvements became obvious and necessary only at this stage:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 数字原型很好地复制了我们在纸张上所拥有的体验，但一些改进只有在这一阶段才变得明显和必要：
- en: The focus on the numbers became too prominent again. Instead of enjoying the
    immediate action of dragging a card on the enemies and seeing its effect, a lot
    of calculations were required to understand which card was the best choice.
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对数字的关注再次变得过于突出。不再是享受将卡片拖到敌人身上并看到其效果的即时行动，而是需要进行大量计算才能理解哪张卡片是最好的选择。
- en: The number of cards (8 per hero's deck and 4 in each hand at any given time)
    was still overwhelming; with so many choices it felt like none were really meaningful
    (and some were too obviously wrong).
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卡片的数量（每个英雄的牌组有8张，任何给定时间的手中有4张）仍然很多；在这么多选择中，感觉没有一个是真正有意义的（有些显然是错误的）。
- en: 'We needed to introduce the entire library of card effects. Not only Damage
    Over Time, Piercing shield, and the few others we had in the prototype—the list
    of Battlehand: Heroes card''s effects included many others, such as Speed Up,
    various immunities, Stun, Freeze, and dozens more. The complexity of rumped add
    a lot, and with those effects at the center of the RPS mechanic, the cognitive
    overload was a problem.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要引入整个卡片效果库。不仅包括持续伤害、穿透护盾和我们在原型中拥有的少数其他效果——战斗手：英雄卡片的效果还包括许多其他效果，如加速、各种免疫、昏迷、冻结等，数十种之多。这些效果的复杂性增加了很多，而且这些效果位于RPS机制的中心，认知过载成为一个问题。
- en: Moving on
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来
- en: 'After assessing the reality of the digital prototype, we iterated, again and
    again, removing everything that wasn''t quite working in the more realistic digital
    scenario. This process took around two weeks and when we felt we had all our answers,
    we went back to our game in the production environment, leaving the prototype
    behind. The following is a screenshot of how the battle screen looked prior to
    our updating:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在评估了数字原型的现实情况后，我们一次又一次地迭代，移除了在更现实的数字场景中不太起作用的一切。这个过程大约花费了两周时间，当我们觉得我们有了所有答案时，我们回到了生产环境中的游戏，留下了原型。以下是我们更新之前战斗屏幕的截图：
- en: '![](img/00134.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00134.jpg)'
- en: 'Battlehand: Heroes before the combat system update. Note the Initiative bar
    on the right, the number of cards in the hand, and the card layout'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 战斗手：英雄在战斗系统更新之前。注意右边的移动条、手中的卡片数量和卡片布局
- en: 'We made all the changes necessary to bring across all the good things that
    truly worked in our prototype, and we were confident in doing so. In the following
    screenshot, you can see what the game looked like after this process:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对原型中真正有效的一切都进行了必要的改变，并且我们对这样做充满信心。在下面的截图中，你可以看到这个过程之后游戏的样子：
- en: '![](img/00035.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00035.jpg)'
- en: 'Battlehand: Heroes after the combat system update, there are only three cards
    in each hero''s hand and their layout is much more essential'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 战斗手：英雄在战斗系统更新后，每个英雄手中的牌只有三张，它们的布局更加关键。
- en: 'The preceding screenshots can''t convey how the gameplay has changed from one
    version to other, but you can see how everything that we have changed in the layout
    of the battle screen and the cards reflects our findings from the prototyping:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的截图无法传达游戏从一个版本到另一个版本的变化，但你可以看到我们在战斗屏幕和卡片布局中进行的所有改变都反映了我们从原型中得出的发现：
- en: The number of cards in each hero's hand has been decreased to three (and those
    in the decks to six).
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个英雄手中的卡片数量已减少到三张（牌组中的六张）。
- en: The numbers have been removed from the cards—both the turn counters (top-left
    corner) and the value of damage/healing/shield from the center of the card.
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卡片上的数字已被移除——包括回合计数器（左上角）和卡片中心的伤害/治疗/护盾值。
- en: The target icon has been made clearer.
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标图标已经变得更清晰。
- en: Each card has a clear effect, which can be seen on the round icon in the bottom
    left corner of the card. The first one, Smoking Girder, has the ability to destroy
    the target's shield in one hit. The second, Oil Drum, can weaken the enemy, increasing
    the damage he takes, and the last one, Kapow, always hits regardless of the target
    evading or any other modifier on the hero's accuracy.
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每张卡片都有一个明确的效果，这可以在卡片左下角的圆形图标上看到。第一张，烟囱，有能力在一击中摧毁目标护盾。第二张，油桶，可以削弱敌人，增加他受到的伤害，最后一张，Kapow，无论目标是否闪避或英雄的准确度有任何其他修改，总是能击中。
- en: The initiative bar has been removed and replaced with a turn bar (yellow bar
    with the five notches) above the HP bar of each character (the green bar underneath
    each character).
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动条已被移除，并替换为位于每个角色HP条（绿色条，位于每个角色下方）上方的回合条（带有五个凹槽的黄色条）。
- en: All of these changes reflect the need to change and tweak parts of the game
    that were simply not possible to evaluate without a prototype. They are the result
    of an iterative process that, through subsequent changes and evaluation, allowed
    us to sculpt a final product from a rough initial model.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些变化都反映了我们需要改变和调整游戏的部分，这些部分在没有原型的情况下根本无法评估。它们是迭代过程的成果，通过后续的变化和评估，我们能够从粗糙的初始模型中塑造出最终产品。
- en: The screenshots used in this chapter are for illustrative purposes only. We
    do not recommend you to misuse these in any way. For more information please consult
    the terms and conditions of the publishers mentioned in the Disclaimer section
    of this book.
  id: totrans-186
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 本章中使用的截图仅用于说明目的。我们不推荐你以任何方式滥用这些截图。如需更多信息，请参阅本书免责声明部分提到的出版商的条款和条件。
- en: Summary
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have learned how to prototype a game and why it is important
    to do so. We described in detail paper prototyping and how you can start doing
    it right now, without any particular technical knowledge. This chapter heavily
    emphasized paper prototyping over its digital counterpart, because it is really
    at the core of what you can do to create a game and become a better game designer
    without having to learn anything else. The reader who, at this point of the book,
    will try to create his own paper prototype and start experimenting with some board
    game design is the one who already stepped out from being a learner to being a
    maker.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何原型化一个游戏以及为什么这样做很重要。我们详细描述了纸面原型化以及如何立即开始进行，无需任何特定的技术知识。本章强调了纸面原型化相对于其数字版本的重要性，因为它确实是你在不学习其他任何东西的情况下，能够为创建游戏和成为一名更好的游戏设计师所做的一切的核心。在这个阶段尝试创建自己的纸面原型并开始尝试一些桌面游戏设计的读者，已经从学习者转变为创造者。
- en: We moved onto digital prototyping, and how even pretty basic technical skills
    could make all the difference for a rookie game designer and give them a great
    competitive edge to break into the game industry and be able to give life to their
    own vision. We can't recommend enough that you practice with what you have learned
    so far. Regardless of the platform of your choice, design and create something,
    right now!
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 我们转向了数字原型化，以及即使是相当基本的技术技能也能为初出茅庐的游戏设计师带来巨大的竞争优势，并使他们能够进入游戏行业并实现自己的愿景。我们强烈建议你练习你所学到的一切。无论你选择哪个平台，现在就设计和创建一些东西吧！
- en: Now that you have understood how to create the atoms of a game and implement
    them into prototypes, we're ready to learn how to tie them up into a consistent
    experience that has a beginning and (most of the time) an end. In the next chapter,
    we're going to talk about the use of Narrative and how to pace the progression
    of the player throughout the game experience.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了如何创建游戏的基本元素并将它们实现到原型中，我们准备学习如何将它们组合成一个有开始（大多数情况下）也有结束的连贯体验。在下一章中，我们将讨论叙事的使用以及如何调整玩家在整个游戏体验中的进度。
