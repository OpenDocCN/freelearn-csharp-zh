["```cs\ncinder::Vec2f( float x, float y )\n```", "```cs\ncinder::Vec2i( int x, int y )\n```", "```cs\ncinder::Vec3f( float x, float y, float z )\n```", "```cs\ncinder::Rectf( float x1, float y1, float x2, float y2 )\n```", "```cs\ncinder::Color( float r, float g, float b, float a )\n```", "```cs\nvoid YourApp::setup() {\n  // setup goes here\n}\n\nvoid YourApp::update() {\n  // prepare data\n}\n\nvoid YourApp::draw() {\n  // draw\n}\nvoid YourApp::shutdown() {\n  // do something before the app closes\n}\n```", "```cs\nvoid YourApp::prepareSettings( Settings * settings ) {\n  settings->setWindowSize( 800, 600 ); // set window to 800x600 px\n}\n```", "```cs\ncinder::app::getWindowWidth()\n```", "```cs\ncinder::app::getWindowHeight()\n```", "```cs\ncinder::app::getWindowSize()\n```", "```cs\ncinder::app::getFrameRate()\n```", "```cs\ncinder::app::getElapsedSeconds()\n```", "```cs\ncinder::app::getElapsedFrames()\n```", "```cs\nconsole()\n```", "```cs\nisFullScreen()\n```", "```cs\nsetFullScreen( bool fullScreen )\n```", "```cs\n#include \"cinder/app/AppBasic.h\"\n```", "```cs\ncinder::gl::clear( Color color )\n```", "```cs\ncinder::gl::drawLine( Vec2f from, Vec2f to )\n```", "```cs\ncinder::gl::color( float r, float g, float b, float a )\n```", "```cs\ncinder::glLineWidth( float width )\n```", "```cs\ncinder::gl::drawSolidCircle( Vec2f center, float radius, int numSegments = 0 )\n```", "```cs\ncinder::gl::drawStrokedCircle( Vec2f center, float radius, int numSegments = 0 )\n```", "```cs\ncinder::gl::drawSolidRect( Rectf rect )\n```", "```cs\ncinder::gl::drawStrokedRect( Rectf rect )\n```", "```cs\ncinder::gl::drawSolidEllipse( Vec2f position, float radiusX, float radiusY, int numSegments = 0 )\n```", "```cs\ncinder::gl::drawStrokedEllipse( Vec2f position, float radiusX, float radiusY, int numSegments = 0 )\n```", "```cs\ncinder::gl::drawSolidRoundedRect( Rectf rect, float cornerRadius, int numSegmentsPerCorner = 0 )\n```", "```cs\ncinder::gl::drawStrokedRoundedRect( Rectf, float cornerRadius, int numSegmentsPerCorner = 0 )\n```", "```cs\n#include \"cinder/gl/gl.h\"\n```", "```cs\ngl::Texture myTexture = gl::Texture( loadImage( loadAsset( \"image.png\" ) ) );\n```", "```cs\ngl::draw( myTexture, Rectf(100,100,540,380) );\n```", "```cs\n#include \"cinder/gl/gl.h\"\n#include \"cinder/ImageIo.h\"\n#include \"cinder/gl/Texture.h\"\n```"]