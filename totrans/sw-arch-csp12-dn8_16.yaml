- en: '16'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '16'
- en: Working with Serverless – Azure Functions
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与无服务器架构一起工作 – Azure Functions
- en: In *Chapter 10*, *Deciding on the Best Cloud-Based Solution*, we explored the
    fundamentals and strategic advantages of different cloud architectures and serverless
    can be considered one of the newest ways to provide flexible cloud-based solutions.
    We delved into how serverless systems offer scalability, cost-efficiency, and
    agility – key factors that drive today’s software architecture decisions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第 10 章*，*选择最佳云解决方案*中，我们探讨了不同云架构的基本原理和战略优势，而无服务器可以被认为是提供灵活云解决方案的最新的方式之一。我们深入探讨了无服务器系统如何提供可扩展性、成本效益和敏捷性——这些是驱动当今软件架构决策的关键因素。
- en: 'Building on that foundation, this chapter delves deeper into a pivotal component
    of serverless architecture: Azure Functions.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个基础上，本章将进一步深入探讨无服务器架构的一个关键组件：Azure Functions。
- en: Azure Functions stands out as the component that Microsoft delivers as a prime
    example of serverless architecture in action. It offers a versatile, event-driven
    approach that integrates seamlessly with the .NET ecosystem, making it the for
    architects and developers aiming to build efficient, scalable, and responsive
    applications.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Functions 作为微软提供的无服务器架构行动的典范组件而脱颖而出。它提供了一种灵活的事件驱动方法，能够无缝集成到 .NET 生态系统，使其成为旨在构建高效、可扩展和响应式应用的架构师和开发者的首选。
- en: We will navigate through the intricacies of Azure Functions, emphasizing their
    application in complex enterprise environments. This chapter will arm you with
    practical insights into leveraging Azure Functions for robust application architecture,
    discussing best practices, design patterns, and advanced features specific to
    the .NET stack.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将深入探讨 Azure Functions 的复杂性，强调其在复杂企业环境中的应用。本章将为您提供利用 Azure Functions 构建稳健应用架构的实用见解，讨论最佳实践、设计模式和针对
    .NET 堆栈的特定高级功能。
- en: This chapter provides a comprehensive understanding of Azure Functions, focusing
    on enhancing your technical mastery of this platform. We delve into the specifics
    of Azure Functions, covering its setup, programming using C#, and various hosting
    plans like the Consumption, Premium, and App Service plans. By the end of this
    chapter, you will have a thorough understanding of Azure Functions, equipped with
    the knowledge to deploy, maintain, and optimize its functions effectively in your
    projects.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章提供了对 Azure Functions 的全面理解，侧重于提高您对该平台的技术掌握。我们深入探讨了 Azure Functions 的具体细节，包括其设置、使用
    C# 进行编程以及各种托管计划，如消费、高级和应用程序服务计划。到本章结束时，您将全面了解 Azure Functions，并具备在项目中有效部署、维护和优化其函数的知识。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Understanding the Azure Functions app
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 Azure Functions 应用
- en: Programming Azure Functions using C#
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 C# 编程 Azure Functions
- en: Maintaining Azure Functions
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维护 Azure Functions
- en: By the end of this chapter, you will understand how to use Azure Functions in
    C# to speed up your development cycle.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将了解如何使用 C# 中的 Azure Functions 加快您的开发周期。
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'This chapter requires that you have the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章要求您具备以下条件：
- en: The free Visual Studio 2022 Community Edition or, even better, with all the
    Azure tools installed.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 免费的 Visual Studio 2022 Community Edition 或，更好的是，安装了所有 Azure 工具的版本。
- en: A free Azure account. The *Creating an Azure account* section of *Chapter 1*,
    *Understanding the Importance of Software Architecture*, explains how to create
    one.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个免费的 Azure 账户。*第 1 章*，*理解软件架构的重要性*中的*创建 Azure 账户*部分解释了如何创建一个。
- en: Understanding the Azure Functions app
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Azure Functions 应用
- en: The Azure Functions app is an Azure **PaaS** (**platform as a service**) where
    you can build pieces of code (functions), connect them to your application, and
    use triggers to start them. The concept is quite simple – you build a function
    in the language you prefer and decide on the trigger that will start it. You can
    write as many functions as you want in your system. There are cases where the
    system is written entirely with functions.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Functions 应用是一个 Azure **PaaS**（**平台即服务**）应用，您可以在其中构建代码片段（函数），将它们连接到您的应用程序，并使用触发器来启动它们。这个概念相当简单——您使用您喜欢的语言构建一个函数，并决定启动它的触发器。您可以在系统中编写尽可能多的函数。有些情况下，系统完全是用函数编写的。
- en: 'The steps to create the necessary environment are as simple as the ones we
    need to follow to create the function itself. The following screenshot shows the
    parameters that you must decide on when you create the environment. After you
    select **Create a resource** in Azure and filter by **Function App**, upon clicking
    the **Create** button, you will see the following screen:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 创建必要环境的步骤与创建函数本身需要遵循的步骤一样简单。下面的截图显示了你在创建环境时必须决定的参数。在你选择 Azure 中的“创建资源”并按“函数应用”筛选后，点击“创建”按钮，你会看到以下屏幕：
- en: '![](img/B19820_16_01.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B19820_16_01.png)'
- en: 'Figure 16.1: Creating an Azure function app'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.1：创建 Azure 函数应用
- en: 'There are a couple of key points that you should consider while creating your
    Azure Functions environment. The possibilities given for running functions increase
    from time to time, as do the programming language options and publishing styles.
    One of the most important configurations we have is the hosting plan, which is
    where you will run your functions. There are three options for the hosting plan:
    a Consumption (Serverless), Premium, and App Service plan. Let’s talk about them.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建你的 Azure 函数环境时，有几个关键点你应该考虑。运行函数的可能性、编程语言选项和发布样式都会随着时间的推移而增加。我们最重要的配置之一是托管计划，这是你将运行函数的地方。托管计划有三个选项：消费型（无服务器）、高级和应用程序服务计划。让我们来谈谈它们。
- en: Consumption plan
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 消费型计划
- en: If you choose a Consumption plan, your functions will only consume resources
    when they are executed. This means that you will only be charged while your functions
    are running. Scalability and memory resources will be automatically managed by
    Azure. This is truly what we call serverless.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择消费型计划，你的函数只有在执行时才会消耗资源。这意味着你只有在函数运行时才会被收费。可扩展性和内存资源将由 Azure 自动管理。这正是我们所说的无服务器。
- en: Something we need to take note of while writing functions in this plan is the
    timeout. By default, after 5 minutes, the function will time out. You can change
    the timeout value using the `functionTimeout` parameter in the `host.json` file.
    The maximum value is 10 minutes.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个计划中编写函数时，我们需要注意的一个问题是超时。默认情况下，5 分钟后函数将超时。你可以通过在 `host.json` 文件中使用 `functionTimeout`
    参数来更改超时值。最大值是 10 分钟。
- en: When you choose the Consumption plan, how you will be charged will depend on
    what you are executing, the execution time, and memory usage. More information
    on this can be found at [https://azure.microsoft.com/en-us/pricing/details/functions/](https://azure.microsoft.com/en-us/pricing/details/functions/).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当你选择消费型计划时，你的收费将取决于你执行的内容、执行时间和内存使用情况。更多关于这方面的信息可以在[https://azure.microsoft.com/en-us/pricing/details/functions/](https://azure.microsoft.com/en-us/pricing/details/functions/)找到。
- en: Note that this can be a good option when you do not have app services in your
    environment, and you are running functions with low periodicity. On the other
    hand, if you need continuous processing, you may want to consider using a Premium
    plan or an App Service plan. Let’s have a look at them below.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，当你环境中没有应用程序服务，并且以低周期性运行函数时，这可以是一个不错的选择。另一方面，如果你需要持续处理，你可能想要考虑使用高级计划或应用程序服务计划。下面我们来了解一下。
- en: Premium plan
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高级计划
- en: Depending on what you use your functions for, especially if they need to run
    continuously or almost continuously, or if some function executions take longer
    than 10 minutes, you may want to consider a Premium plan. Besides, you may need
    to connect your function to a VNET/VPN environment, and in this case, you will
    be forced to run in this plan.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你使用函数的目的，特别是如果它们需要持续或几乎持续运行，或者某些函数执行时间超过 10 分钟，你可能想要考虑使用高级计划。此外，你可能需要将你的函数连接到
    VNET/VPN 环境，在这种情况下，你将被迫运行在这个计划中。
- en: You may also need more CPU or memory options than what is provided with the
    Consumption plan. The Premium plan gives you one-core, two-core, and four-core
    instance options.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还需要比消费型计划提供的更多 CPU 或内存选项。高级计划为你提供了一核心、两核心和四核心实例选项。
- en: It is worth mentioning that even with unlimited time to run your function if
    you decide to use an HTTP trigger function, 230 seconds is the maximum allowed
    for responding to a request. The reason this is a limit is related to the default
    idle timeout value of Azure Load Balancer.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，即使你有无限的时间来运行你的函数，如果你决定使用 HTTP 触发函数，响应请求的最大允许时间是 230 秒。这个限制的原因与 Azure
    负载均衡器的默认空闲超时值有关。
- en: You may have to redesign your solution in such situations to adhere to the best
    practices set by Microsoft ([https://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices](https://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices)).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，您可能需要重新设计您的解决方案，以符合微软设定的最佳实践([https://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices](https://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices))。
- en: Although the Premium plan is a great alternative, if you want to optimize the
    usage of your App Services instances, the best option is the App Service plan.
    Let’s have a look at it.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然高级计划是一个很好的替代方案，但如果您想优化您的应用服务实例的使用，最佳选项是应用服务计划。让我们来看看它。
- en: The App Service plan
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用服务计划
- en: 'The App Service plan is one of the options you can choose when you want to
    create an Azure Functions app. Here are a couple of reasons (suggested by Microsoft)
    why you should use the App Service plan instead of the Consumption plan to maintain
    your functions:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 应用服务计划是在您想要创建 Azure 函数应用时可以选择的选项之一。以下是一些原因（由微软建议），为什么您应该使用应用服务计划而不是消耗计划来维护您的函数：
- en: You can use underutilized existing App Service instances.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以使用未充分利用的现有应用服务实例。
- en: You can run your function app on a custom image if you want to.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您想的话，可以在自定义镜像上运行您的函数应用。
- en: In the App Service plan scenario, the `functionTimeout` value varies according
    to the Azure Functions runtime version. However, the value needs to be at least
    30 minutes.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用服务计划场景中，`functionTimeout` 的值根据 Azure 函数运行时版本而变化。然而，该值至少需要 30 分钟。
- en: You can find a tabled comparison between the timeouts in each Consumption plan
    at [https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout](https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout](https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout)找到每个消耗计划中超时时间的表格比较。
- en: Now that we have a foundational understanding of the Azure Functions app and
    its role in serverless architecture, let’s explore how to bring these concepts
    into action. In the following section, we’ll dive into programming Azure Functions
    using C#, turning theoretical knowledge into practical application.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对 Azure 函数应用及其在无服务器架构中的作用有了基础的了解，让我们探索如何将这些概念付诸实践。在接下来的部分，我们将深入探讨使用 C# 编程
    Azure 函数，将理论知识转化为实际应用。
- en: Programming Azure Functions using C#
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 C# 编程 Azure 函数
- en: In this section, you will learn how to create Azure Functions. It is worth mentioning
    that there are several ways to create them using C#. The first one is by creating
    the functions and developing them in the Azure portal itself. To do this, let
    us assume that you have created an Azure Functions app with similar configurations
    to the ones in the screenshot at the beginning of the chapter.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将学习如何创建 Azure 函数。值得一提的是，有几种方法可以使用 C# 创建它们。第一种是通过在 Azure 门户本身中创建和开发这些函数。为此，让我们假设您已经创建了一个与本章开头截图中的配置相似的
    Azure 函数应用。
- en: 'By selecting the resource created and navigating to the **Functions** menu,
    you will be able to add new functions to this environment, as you can see in the
    following screenshot:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 通过选择创建的资源并导航到**函数**菜单，您将能够向此环境添加新的函数，如下面的截图所示：
- en: '![](img/B19820_16_02.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图片 B19820_16_02.png](img/B19820_16_02.png)'
- en: 'Figure 16.2: Adding a function'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.2：添加函数
- en: Here, you will need to decide the kind of trigger that you want to use to start
    the execution. The most frequently used ones are the **HTTP trigger** and the
    **Timer trigger**. The first enables the creation of an HTTP API that will trigger
    the function. The second means functions will be triggered by a timer you set.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您需要决定您想要使用的触发器类型来启动执行。最常用的有**HTTP 触发器**和**定时器触发器**。第一个允许创建一个 HTTP API，该
    API 将触发函数。第二个意味着函数将由您设置的定时器触发。
- en: 'When you decide on the trigger you want to use, you must name the function.
    Depending on the trigger you decide on, you will have to set up some parameters.
    For instance, an **HTTP trigger** requires that you set up an authorization level.
    Three options are available: **Function**, **Anonymous**, and **Admin**. The **Function**
    option requires a specific key to access each HTTP trigger, while **Anonymous**
    does not require anything. For the **Admin** option, the key used is the master
    one, which is created together with the function app.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当你决定使用哪个触发器时，你必须为函数命名。根据你选择的触发器，你可能需要设置一些参数。例如，**HTTP触发器**需要你设置一个授权级别。有三个选项可供选择：**函数**、**匿名**和**管理员**。**函数**选项需要特定的密钥来访问每个HTTP触发器，而**匿名**则不需要任何东西。对于**管理员**选项，使用的密钥是主密钥，它与函数应用一起创建。
- en: '![Interface gráfica do usuário, Texto, Aplicativo  Descrição gerada automaticamente](img/B19820_16_03.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![用户界面，文本，应用程序，自动生成的描述](img/B19820_16_03.png)'
- en: 'Figure 16.3: Configuring an HTTP function'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.3：配置HTTP函数
- en: It is important to note that this book does not cover all the options that are
    available when it comes to building functions. As a software architect, you should
    understand that Azure provides a good service for serverless architectures in
    terms of functions. This can be useful in several situations. This was discussed
    in more detail in *Chapter 10*, *Deciding on the Best Cloud-Based Solution*.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要注意，这本书并没有涵盖构建函数时所有可用的选项。作为一名软件架构师，你应该了解Azure在函数方面为无服务器架构提供了一个良好的服务。这在几种情况下都可能很有用。这已在*第10章*，*选择最佳云解决方案*中进行了更详细的讨论。
- en: 'The result of this is as follows. Notice that Azure provides an editor that
    allows us to run the code, check logs, and test the function that we have created.
    This is a good interface for testing and coding basic functions:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下。请注意，Azure提供了一个编辑器，允许我们运行代码、检查日志和测试我们创建的函数。这是一个测试和编码基本函数的好界面：
- en: '![](img/B19820_16_04.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B19820_16_04.png)'
- en: 'Figure 16.4: HTTP function environment'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.4：HTTP函数环境
- en: However, if you want to create more sophisticated functions, you may need a
    more sophisticated environment so that you can code and debug them more efficaciously.
    This is where the Visual Studio Azure Functions project can help you. Besides,
    using Visual Studio to execute the development of the function moves you in the
    direction of using source control and CI/CD for your functions.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你想创建更复杂的函数，你可能需要一个更复杂的开发环境，以便更有效地进行编码和调试。这就是Visual Studio Azure Functions项目能帮到你的地方。此外，使用Visual
    Studio来执行函数的开发将使你朝着为函数使用源代码控制和CI/CD的方向发展。
- en: 'In Visual Studio, you can create a project dedicated to Azure Functions by
    going to **Create a new project**:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在Visual Studio中，你可以通过访问**创建新项目**来创建一个专门用于Azure Functions的项目：
- en: '![Texto  Descrição gerada automaticamente](img/B19820_16_05.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![自动生成的描述文本](img/B19820_16_05.png)'
- en: 'Figure 16.5: Creating an Azure Functions project in Visual Studio 2022'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.5：在Visual Studio 2022中创建Azure Functions项目
- en: Once you have created your project, Visual Studio will ask you for the type
    of triggers you are using and for the Azure version that your function will run
    on. It is worth mentioning that, for some scenarios, a storage account is required
    while creating the function app, such as managing triggers and logging executions.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 创建完项目后，Visual Studio将询问你使用的触发器类型以及函数将运行的Azure版本。值得一提的是，在某些情况下，在创建函数应用时需要存储账户，例如管理触发器和记录执行。
- en: '![](img/B19820_16_06.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B19820_16_06.png)'
- en: 'Figure 16.6: Creating a new Azure Functions application'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.6：创建新的Azure Functions应用程序
- en: It is worth mentioning that Azure Functions supports different platforms and
    programming languages. At the time of writing, there are two available runtime
    versions of Azure Functions with support provided. The first version (v1) is compatible
    with .NET Framework 4.8\. The v2 and v3 versions are not supported anymore, so
    for .NET 8, you shall use version 4 (v4).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，Azure Functions支持不同的平台和编程语言。在撰写本文时，Azure Functions提供了两个可用的运行时版本，并提供了支持。第一个版本（v1）与.NET
    Framework 4.8兼容。v2和v3版本不再受支持，因此对于.NET 8，你应该使用版本4（v4）。
- en: You can always check for up-to-date information about it at [https://learn.microsoft.com/en-us/azure/azure-functions/functions-versions](https://learn.microsoft.com/en-us/azure/azure-functions/functions-versions).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以始终在[https://learn.microsoft.com/en-us/azure/azure-functions/functions-versions](https://learn.microsoft.com/en-us/azure/azure-functions/functions-versions)上检查有关它的最新信息。
- en: As a software architect, you must keep code reusability in mind. In this case,
    you should pay attention to which version of Azure Functions you decide to build
    your functions in. However, it is always recommended that you use the latest version
    of the runtime as soon as it acquires general availability status.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名软件架构师，你必须考虑到代码的可重用性。在这种情况下，你应该注意你决定用于构建函数的 Azure Functions 的版本。然而，一旦运行时达到通用可用状态，始终建议你使用最新版本的运行时。
- en: 'By default, the code that is generated is similar to that generated when you
    create Azure Functions in the Azure portal:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，生成的代码与你在 Azure 门户中创建 Azure Functions 时生成的代码类似：
- en: '[PRE0]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Since you have understood the basis for creating Azure Functions using C#, it
    is also important to understand the number of triggers that are available as templates
    for Azure Functions. Let’s have a look at that.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 既然你已经了解了使用 C# 创建 Azure Functions 的基础知识，那么了解可用于 Azure Functions 的触发器模板数量也同样重要。让我们来看看吧。
- en: Listing Azure Functions templates
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列出 Azure Functions 模板
- en: 'There are several templates in the Azure portal that you can use to create
    Azure Functions. The number of templates that you can choose from is updated continuously.
    The following are just a few of them:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 门户中有几个模板可供你创建 Azure Functions，你可以选择的模板数量会持续更新。以下只是其中的一些：
- en: '**Blob Trigger**: You may want to process something for a file as soon as the
    file is uploaded to your blob storage. This can be a good use case for Azure Functions.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Blob 触发器**：你可能希望在文件上传到你的 Blob 存储后立即处理某个文件。这可能是 Azure Functions 的一个很好的用例。'
- en: '**Cosmos DB Trigger**: You may want to synchronize data that arrives in a Cosmos
    DB database with a processing method. Cosmos DB was discussed in detail in *Chapter
    12*, *Choosing Your Data Storage in the Cloud*.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Cosmos DB 触发器**：你可能希望将到达 Cosmos DB 数据库的数据与处理方法同步。Cosmos DB 在 *第 12 章*，*选择你的云数据存储*
    中有详细的讨论。'
- en: '**Event Grid Trigger**: This is a good way to manage Azure events. Functions
    can be triggered so that they manage each event.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件网格触发器**：这是一种管理 Azure 事件的好方法。函数可以被触发以管理每个事件。'
- en: '**Event Hub Trigger**: With this trigger, you can build functions that are
    linked to any system that sends data to Azure Event Hubs.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件中心触发器**：使用这个触发器，你可以构建与任何向 Azure 事件中心发送数据的系统链接的函数。'
- en: '**HTTP Trigger**: This trigger is useful for building serverless APIs and web
    app events.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTTP 触发器**：这个触发器对于构建无服务器 API 和 Web 应用程序事件非常有用。'
- en: '**IoT Hub Trigger**: When your application is connected to devices using IoT
    Hub, you can use this trigger whenever a new event is received by one of the devices.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IoT Hub 触发器**：当你的应用程序通过 IoT Hub 连接到设备时，你可以在接收到设备的新事件时使用此触发器。'
- en: '**Queue Trigger**: You can handle queue processing using a function-as-a-service
    solution.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**队列触发器**：你可以使用函数即服务解决方案来处理队列处理。'
- en: '**Service Bus Queue Trigger**: This is another messaging service that can be
    a trigger for functions. Azure Service Bus was covered in more detail in *Chapter
    11*, *Applying a Microservice Architecture to Your Enterprise Application*.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务总线队列触发器**：这是另一种可以作为函数触发器的消息服务。Azure Service Bus 在 *第 11 章*，*将微服务架构应用于企业应用程序*
    中有更详细的介绍。'
- en: '**Timer Trigger**: This is commonly used with functions and is where you specify
    time triggers so that you can continuously process data from your system.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定时器触发器**：这是与函数一起常用的触发器，你可以在这里指定时间触发器，以便可以持续处理来自你系统的数据。'
- en: You can find the complete list of triggers and bindings available for Azure
    Functions at [https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings)
    找到适用于 Azure Functions 的所有触发器和绑定列表。
- en: With a solid understanding of how to program Azure Functions in C#, let’s now
    ensure their longevity and performance. In the upcoming section, we will uncover
    the best practices and tools necessary for the effective management and monitoring
    of your serverless architecture.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在对如何使用 C# 编程 Azure Functions 有了一个稳固的理解之后，现在让我们确保它们的长期性和性能。在接下来的部分中，我们将揭示有效管理和监控你的无服务器架构所需的最佳实践和工具。
- en: Maintaining Azure Functions
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 维护 Azure Functions
- en: Once you have created and programmed your function, you need to monitor and
    maintain it. To do this, you can use a variety of tools, all of which you can
    find in the Azure portal. These tools will help you solve problems due to the
    amount of information you will be able to collect with them.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您创建并编程了您的函数，您就需要监控和维护它。为此，您可以使用各种工具，所有这些工具您都可以在Azure门户中找到。这些工具将帮助您解决由于您将能够收集的大量信息而引起的问题。
- en: 'The first option when it comes to monitoring your function is using the **Monitor**
    menu inside the Azure Functions interface in the Azure portal. There, you will
    be able to check all your function executions, including successful results and
    failures:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当您需要监控您的函数时，第一个选项是在Azure门户中Azure Functions界面内的**监控**菜单中使用。在那里，您将能够检查所有函数执行情况，包括成功结果和失败：
- en: '![](img/B19820_16_07.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19820_16_07.png)'
- en: 'Figure 16.7: Monitoring a function'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.7：监控一个函数
- en: It will take about 5 minutes for any results to be available. The date shown
    in the grid is in UTC time.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 结果大约需要5分钟才能可用。网格中显示的日期是UTC时间。
- en: 'By clicking on **Run query in Application Insights**, the same interface allows
    you to connect to this tool. This will take you to a world of almost infinite
    options that you can use to analyze your function data. Application Insights is
    an excellent option for **Application Performance Management** (**APM**):'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**在Application Insights中运行查询**，相同的界面允许您连接到这个工具。这将带您进入一个几乎无限选项的世界，您可以使用这些选项来分析您的函数数据。Application
    Insights是**应用性能管理（APM**）的一个优秀选择：
- en: '![](img/B19820_16_08.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19820_16_08.png)'
- en: 'Figure 16.8: Monitoring using Application Insights'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.8：使用Application Insights进行监控
- en: Beyond the query interface, you can also check all the performance issues of
    your function using the Application Insights interface in the Azure portal. There,
    you can analyze and filter all the requests that have been received by your solution
    and check their performance and dependencies. You can also trigger alerts when
    something abnormal happens to one of your endpoints.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 除了查询界面之外，您还可以使用Azure门户中的Application Insights界面检查您函数的所有性能问题。在那里，您可以分析和筛选您的解决方案接收到的所有请求，并检查它们的性能和依赖关系。当您的端点之一发生异常时，您还可以触发警报。
- en: You can find this resource in the Azure portal by selecting your function resource
    and searching for **Application Insights**.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在Azure门户中选择您的函数资源并搜索**Application Insights**来找到此资源。
- en: '![](img/B19820_16_09.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19820_16_09.png)'
- en: 'Figure 16.9: Monitoring using Application Insights live metrics'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.9：使用Application Insights实时指标进行监控
- en: As a software architect, you will find a good daily helper for your projects
    in this tool. Please remember that Application Insights works on several other
    Azure services, such as Web Apps and Virtual Machines. This means that you can
    monitor the health of your system and maintain it using the wonderful features
    provided by Azure.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名软件架构师，您将在项目中找到这个工具是一个很好的日常助手。请记住，Application Insights在多个其他Azure服务上运行，例如Web
    Apps和虚拟机。这意味着您可以使用Azure提供的出色功能来监控和维护您系统的健康。
- en: Azure Durable Functions
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure Durable Functions
- en: If you decide to delve deeper into the usage of serverless, you may consider
    Azure Durable Functions as a good option for designing orchestration scenarios.
    Azure Durable Functions let us write stateful workflows, managing the state behind
    the scenes. To do so, you will have to write an **orchestrator function**, which
    is basically a procedure that defines the workflow that you want to run. You may
    also need some **entity functions** to enable the reading of small pieces of state.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您决定深入研究无服务器技术的使用，您可以考虑Azure Durable Functions作为设计编排场景的一个好选择。Azure Durable
    Functions允许我们编写有状态的流程，管理幕后状态。为此，您将需要编写一个**编排函数**，这基本上是一个定义您想要运行的流程的流程。您可能还需要一些**实体函数**来启用对小块状态的读取。
- en: 'The following are some application patterns where this solution can be used;
    however, it is important to remember that it is not suitable for all applications:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些可以使用此解决方案的应用模式；然而，重要的是要记住，它并不适合所有应用：
- en: '**Function chaining**: When you need to execute a sequence of functions in
    a particular order.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**函数链式调用**：当您需要按特定顺序执行一系列函数时。'
- en: '**Async HTTP APIs**: A good way to solve long-running operations with external
    clients, where you will have the opportunity to get a status API because of the
    orchestrator function. There is a sample code of this pattern as soon as you create
    an orchestrator function in Visual Studio.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**异步 HTTP API**：一种解决与外部客户端的长运行操作的好方法，你将有机会由于编排函数而获取状态 API。一旦你在 Visual Studio
    中创建编排函数，就会有这个模式的示例代码。'
- en: '**Fan-out/fan-in**: The ability to run multiple functions in parallel and wait
    for them to finish to conclude work in an aggregate function.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扇出/扇入**：在并行运行多个函数并等待它们完成以在聚合函数中得出结论的能力。'
- en: '**Monitors**: A way to monitor a process without using a timer trigger, enabling
    configured intervals to monitor many instances of a process.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控器**：一种在不使用计时器触发器的情况下监控进程的方式，允许配置间隔来监控多个进程实例。'
- en: '**Human interaction**: A way to automate a process even when you need human
    interaction, but you need to monitor the response after a period.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**人工交互**：即使在需要人工交互的情况下自动化流程，但你需要监控一段时间后的响应。'
- en: '**Aggregator**: A way to address event data over a period into a single entity.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**聚合器**：一种将一段时间内的事件数据汇总到单个实体的方式。'
- en: When it comes to pricing, we should keep in mind that Azure Durable Functions
    are billed the same way common Azure Functions are. The only concern you must
    consider is that orchestrator functions might replay several times throughout
    the lifetime of an orchestration, and you will be billed for each replay.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到定价时，我们应该记住 Azure Durable Functions 的计费方式与常见的 Azure Functions 相同。你必须考虑的唯一问题是编排函数可能会在整个编排生命周期中重放多次，并且你将为每次重放付费。
- en: Once we have covered the possibilities presented by Azure Durable Functions,
    it is also important to evaluate the roadmap of Azure Functions. The reason why
    we keep writing about this arises from the changes Azure Functions has suffered
    since its creation. Considering that a serverless application based on Azure Functions
    can be the kernel of your solution, this is a very important topic that needs
    to be discussed. Let’s check it out now.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们了解了 Azure Durable Functions 所提供的可能性，评估 Azure Functions 的路线图也同样重要。我们之所以不断撰写关于这一点的内容，是因为自其创建以来
    Azure Functions 经历了变化。考虑到基于 Azure Functions 的无服务器应用程序可能是你解决方案的核心，这是一个需要讨论的重要话题。现在让我们来看看。
- en: Azure Functions roadmap
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure Functions 路线图
- en: The structure of Azure Functions has changed since it was rolled out in 2016\.
    The number of people using the tool and the changes related to .NET caused some
    compatibility problems that saw Microsoft come up with a new way of delivering
    the deployment of functions. This new way is called the isolated process model,
    and it has been available since .NET 5\. It is also important to mention that
    the currently supported available runtime versions for Azure Functions are v1
    and v4\.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 自 2016 年推出以来，Azure Functions 的结构已经发生了变化。使用该工具的人数和与 .NET 相关的变化导致了一些兼容性问题，这促使微软找到了一种新的方法来交付函数的部署。这种新方法被称为隔离进程模型，它自
    .NET 5 起就可用。还重要的是要提到，目前支持的 Azure Functions 可用运行时版本是 v1 和 v4。
- en: According to the current roadmap, using the isolated process model is the only
    way to run Azure Functions in .NET 8 and future versions. There is a plan to have
    the in-process model for .NET 8, but no date has been confirmed yet.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 根据当前的路线图，使用隔离进程模型是运行 .NET 8 和未来版本中 Azure Functions 的唯一方式。有一个计划为 .NET 8 提供进程内模型，但尚未确定日期。
- en: '![thumbnail image 1 captioned A diagram showing the change in release patterns
    after parity. .NET 8 has an in-process model option on a delay after the isolated
    worker model. All subsequent updates use the isolated worker model.](img/B19820_16_10.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![缩略图图像 1，标题为“显示在平等性之后发布模式的变化。.NET 8 在隔离工作模型之后延迟提供进程内模型选项。所有后续更新都使用隔离工作模型。”](img/B19820_16_10.png)'
- en: 'Figure 16.10: Azure Functions roadmap'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.10：Azure Functions 路线图
- en: As a software architect, you must keep an eye on the roadmaps provided so that
    you can decide on the best implementation for your solution.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名软件架构师，你必须关注提供的路线图，以便你可以为你的解决方案选择最佳的实现方式。
- en: 'When implementing an Azure function using the isolated process model, you will
    have access to the startup of the function in a `Program.cs` file. This means
    that you will have to configure and create the instance of your function:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用隔离进程模型实现 Azure 函数时，你将能够访问 `Program.cs` 文件中函数的启动。这意味着你将需要配置和创建你函数的实例：
- en: '[PRE1]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: It is worth mentioning that to do so, you will need `Microsoft.Azure.Functions.Worker.Extensions`
    packages. You can find a very good guide to doing this at [https://docs.microsoft.com/en-us/azure/azure-functions/dotnet-isolated-process-guide](https://docs.microsoft.com/en-us/azure/azure-functions/dotnet-isolated-process-guide).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，为了这样做，你需要`Microsoft.Azure.Functions.Worker.Extensions`包。你可以在[https://docs.microsoft.com/en-us/azure/azure-functions/dotnet-isolated-process-guide](https://docs.microsoft.com/en-us/azure/azure-functions/dotnet-isolated-process-guide)找到一个非常好的指南。
- en: The decision to use serverless and Azure Functions
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用无服务器和Azure Functions的决定
- en: Even with the benefits presented during this chapter, there is always a question
    about why one would use a serverless function over having it as part of a bigger
    web application.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 即使在本章中介绍了这些好处，也总是有人会问为什么要在更大的Web应用程序中将其作为一部分而不是使用无服务器函数。
- en: If you think exclusively about HTTP Trigger functions, this question is more
    difficult to answer because you can create a Web API application that generally
    solves the problems in this scenario.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只考虑HTTP触发函数，这个问题就更加难以回答，因为你可以创建一个Web API应用程序，通常可以解决这个场景中的问题。
- en: 'However, there are some use cases where an Azure Function is truly the best
    option. Let’s list them to help you with this decision in your scenario:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，有些用例中，Azure Function确实是最佳选择。让我们列出它们，以帮助你在你的场景中做出决定：
- en: '**When you need to execute a periodic task**: Azure Functions with *Timer Trigger*
    is, for sure, a great option. Using Cron expressions, you will be able to set
    different periods to have your function running. You can check out more details
    at [https://learn.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer](https://learn.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer).'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**当你需要执行周期性任务时**：Azure Functions的*Timer Trigger*无疑是一个很好的选择。使用Cron表达式，你可以设置不同的周期来让函数运行。你可以在[https://learn.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer](https://learn.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer)了解更多详细信息。'
- en: '**When you want to execute a task after some data changes**: By using triggers
    like *Blob Trigger*, *Queue Trigger*, or *CosmosDB Trigger*, you can monitor data
    changes and subsequently execute a specific task in response to these changes,
    which may be useful in some scenarios. There is a great example of how to use
    it at [https://learn.microsoft.com/en-us/azure/azure-functions/functions-create-cosmos-db-triggered-function](https://learn.microsoft.com/en-us/azure/azure-functions/functions-create-cosmos-db-triggered-function).'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**当你想在某些数据变化后执行任务时**：通过使用*Blob Trigger*、*Queue Trigger*或*CosmosDB Trigger*等触发器，你可以监控数据变化，并随后根据这些变化执行特定的任务，这在某些场景中可能很有用。关于如何使用它的一个很好的例子可以在[https://learn.microsoft.com/en-us/azure/azure-functions/functions-create-cosmos-db-triggered-function](https://learn.microsoft.com/en-us/azure/azure-functions/functions-create-cosmos-db-triggered-function)找到。'
- en: '**When you want to execute a task after some event happens on devices or another
    system**: Again, without needing to pool data, you can use *Event Grid Trigger*,
    *Event Hub Trigger*, *IoT Hub Trigger*, or *Service Bus Queue Trigger* to track
    an event and start a task with the information provided by it. You can check out
    more information about it at [https://learn.microsoft.com/en-us/azure/azure-functions/functions-bindings-event-hubs-trigger](https://learn.microsoft.com/en-us/azure/azure-functions/functions-bindings-event-hubs-trigger).'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**当你想在设备或另一个系统上发生某些事件后执行任务时**：同样，无需池化数据，你可以使用*Event Grid Trigger*、*Event Hub
    Trigger*、*IoT Hub Trigger*或*Service Bus Queue Trigger*来跟踪事件，并使用它提供的信息启动任务。你可以在[https://learn.microsoft.com/en-us/azure/azure-functions/functions-bindings-event-hubs-trigger](https://learn.microsoft.com/en-us/azure/azure-functions/functions-bindings-event-hubs-trigger)了解更多相关信息。'
- en: To make this decision easier, in *Chapter 21*, *Case Study*, you will find the
    complete tutorial to implement the architecture presented below.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使这个决定更容易，在*第21章*的*案例研究*中，你将找到实现以下架构的完整教程。
- en: To give users a great experience, all the emails that are sent by the application
    will be queued asynchronously, thereby preventing significant delays in the system’s
    responses.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 为了给用户提供良好的体验，应用程序发送的所有电子邮件都将异步排队，从而防止系统响应出现重大延迟。
- en: '![Diagram  Description automatically generated](img/B19820_16_11.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![图描述自动生成](img/B19820_16_11.png)'
- en: 'Figure 16.11: Architectural design for sending emails'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.11：发送电子邮件的架构设计
- en: The great thing about this design is that although you have a solution with
    different components, you cannot recognize some computational characteristics,
    like the amount of memory used, the number of CPUs designed for this process,
    or even the storage needed to guarantee the solution quality. This is what we
    call serverless in its essential meaning – a solution where the focus is not on
    where the code runs.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这个设计的伟大之处在于，尽管你有一个由不同组件组成的解决方案，但你无法识别一些计算特性，比如使用的内存量、为该过程设计的CPU数量，甚至保证解决方案质量的存储需求。这就是我们所说的无服务器在本质意义上的含义——一个关注点不在代码运行位置的解决方案。
- en: Summary
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we looked at some of the advantages of developing functionality
    with serverless Azure Functions. You can use it as a guideline to check the different
    types of triggers that are available in Azure Functions and to plan how to monitor
    them. We also saw how to program and maintain Azure Functions.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了使用无服务器Azure Functions开发功能的一些优点。你可以将其作为指南来检查Azure Functions中可用的不同触发器类型，并规划如何监控它们。我们还看到了如何编程和维护Azure
    Functions。
- en: In the next chapter, we will discuss the current news related to ASP.NET Core
    MVC.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论与ASP.NET Core MVC相关的最新新闻。
- en: Questions
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What are Azure Functions?
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure Functions是什么？
- en: What are the programming options for Azure Functions?
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure Functions的编程选项有哪些？
- en: What are the plans that can be used with Azure Functions?
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以与Azure Functions一起使用的计划有哪些？
- en: How can you deploy Azure Functions with Visual Studio?
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何使用Visual Studio部署Azure Functions？
- en: What triggers can you use to develop Azure Functions?
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用哪些触发器来开发Azure Functions？
- en: What is the difference between Azure Functions v1, v2, v3, and v4?
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure Functions v1、v2、v3和v4之间的区别是什么？
- en: How does Application Insights help us to maintain and monitor Azure Functions?
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Application Insights如何帮助我们维护和监控Azure Functions？
- en: What are Azure Durable Functions?
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure Durable Functions是什么？
- en: Further reading
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'If you want to learn more about creating Azure functions, check out the following
    links:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于创建Azure函数的信息，请查看以下链接：
- en: 'Azure Functions scale and hosting: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale](https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale)'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Functions的扩展和托管：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale](https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale)
- en: '*Microsoft Azure For .NET Developers [Video], by Trevoir Williams:* [https://www.packtpub.com/product/microsoft-azure-for-net-developers-video/9781835465059](https://www.packtpub.com/product/microsoft-azure-for-net-developers-video/9781835465059)'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*《.NET开发者的Microsoft Azure [视频]，作者Trevoir Williams：* [https://www.packtpub.com/product/microsoft-azure-for-net-developers-video/9781835465059](https://www.packtpub.com/product/microsoft-azure-for-net-developers-video/9781835465059)'
- en: '*Azure Serverless Computing Cookbook - Third Edition, by Praveen Kumar Sreeram:*
    [https://www.packtpub.com/product/azure-serverless-computing-cookbook-third-edition/9781800206601](https://www.packtpub.com/product/azure-serverless-computing-cookbook-third-edition/9781800206601)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*《Azure Serverless Computing Cookbook - 第三版，作者Praveen Kumar Sreeram：* [https://www.packtpub.com/product/azure-serverless-computing-cookbook-third-edition/9781800206601](https://www.packtpub.com/product/azure-serverless-computing-cookbook-third-edition/9781800206601)'
- en: 'Azure Functions runtime overview: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions](https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions)'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Functions运行时概述：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions](https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions)
- en: 'An overview of Azure Event Grid: [https://docs.microsoft.com/en-us/azure/event-grid/](https://docs.microsoft.com/en-us/azure/event-grid/)'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Event Grid概述：[https://docs.microsoft.com/en-us/azure/event-grid/](https://docs.microsoft.com/en-us/azure/event-grid/)
- en: 'Timer trigger for Azure Functions: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer
    )'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Functions的定时器触发器：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer)
- en: 'The *Application Insights* section of the book *Azure for Architects*, by Ritesh
    Modi: [https://subscription.packtpub.com/book/virtualization_and_cloud/9781788397391/12/ch12lvl1sec95/application-insights](https://subscription.packtpub.com/book/virtualization_and_cloud/9781788397391/12/ch12lvl1sec95/application-insights
    )'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 书籍《Azure for Architects》，作者Ritesh Modi中的*Application Insights*部分：[https://subscription.packtpub.com/book/virtualization_and_cloud/9781788397391/12/ch12lvl1sec95/application-insights](https://subscription.packtpub.com/book/virtualization_and_cloud/9781788397391/12/ch12lvl1sec95/application-insights)
- en: 'The *Monitoring Azure Functions using the Application Insights* section of
    the book *Azure Serverless Computing Cookbook*, by Praveen Kumar Sreeram: [https://subscription.packtpub.com/book/virtualization_and_cloud/9781788390828/6/06lvl1sec34/monitoring-azure-functions-using-application-insights](https://subscription.packtpub.com/book/virtualization_and_cloud/9781788390828/6/06lvl1sec34/monitoring-azure-functions-using-application-insights)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 《Azure Serverless Computing Cookbook》一书中关于*使用 Application Insights 监控 Azure
    Functions*的部分，作者 Praveen Kumar Sreeram：[https://subscription.packtpub.com/book/virtualization_and_cloud/9781788390828/6/06lvl1sec34/monitoring-azure-functions-using-application-insights](https://subscription.packtpub.com/book/virtualization_and_cloud/9781788390828/6/06lvl1sec34/monitoring-azure-functions-using-application-insights)
- en: 'Get started with Azure Queue storage using .NET: [https://docs.microsoft.com/en-us/azure/storage/queues/storage-dotnet-how-to-use-queues](https://docs.microsoft.com/en-us/azure/storage/queues/storage-dotnet-how-to-use-queues)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 .NET 开始使用 Azure 队列存储：[https://docs.microsoft.com/en-us/azure/storage/queues/storage-dotnet-how-to-use-queues](https://docs.microsoft.com/en-us/azure/storage/queues/storage-dotnet-how-to-use-queues)
- en: 'Azure Functions triggers and bindings concepts: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Functions 触发器和绑定概念：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings)
- en: 'Azure Queue Storage bindings for Azure Functions: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Functions 的 Azure 队列存储绑定：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue)
- en: 'Azure emulator for local Azure Storage Development: [https://docs.microsoft.com/en-us/azure/storage/common/storage-use-azurite](https://docs.microsoft.com/en-us/azure/storage/common/storage-use-azurite)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于本地 Azure 存储开发的 Azure 模拟器：[https://docs.microsoft.com/en-us/azure/storage/common/storage-use-azurite](https://docs.microsoft.com/en-us/azure/storage/common/storage-use-azurite)
- en: 'Azure Durable Functions: [https://docs.microsoft.com/en-us/azure/azure-functions/durable/](https://docs.microsoft.com/en-us/azure/azure-functions/durable/   )'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Durable Functions：[https://docs.microsoft.com/en-us/azure/azure-functions/durable/](https://docs.microsoft.com/en-us/azure/azure-functions/durable/)
- en: Learn more on Discord
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Discord 上了解更多
- en: 'To join the Discord community for this book – where you can share feedback,
    ask questions to the authors, and learn about new releases – follow the QR code
    below:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 要加入这本书的 Discord 社区——在那里您可以分享反馈，向作者提问，并了解新版本——请扫描下面的二维码：
- en: '[https://packt.link/SoftwareArchitectureCSharp12Dotnet8](https://packt.link/SoftwareArchitectureCSharp12Dotnet8)'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/SoftwareArchitectureCSharp12Dotnet8](https://packt.link/SoftwareArchitectureCSharp12Dotnet8)'
- en: '![](img/QR_Code175081751210902046.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code175081751210902046.png)'
