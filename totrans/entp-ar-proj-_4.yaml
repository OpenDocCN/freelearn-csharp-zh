- en: AR for Training with WebAR and Augmented Class!
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用WebAR和增强类！进行AR培训
- en: In this chapter, we will explore two different tools that work on Android devices
    that can be applied to the training field. The first one will be based on WebAR,
    specifically, the Google Web Component `<model-viewer>`, which will let us visualize
    3D models in a real environment through a web page using ARCore. We will be able
    to select a model from a series of them on the web page, place it in the real
    world, and manipulate it (move, rotate, and scale it).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨两种适用于Android设备的工具，这些工具可以应用于培训领域。第一个工具将基于WebAR，具体来说，是Google Web组件`<model-viewer>`，它将允许我们通过网页使用ARCore在真实环境中可视化3D模型。我们将能够在网页上从一系列模型中选择一个，将其放置在现实世界中，并对其进行操作（移动、旋转和缩放）。
- en: The second one will be Augmented Class!, an educational-oriented authoring tool
    that will let us create AR training projects to show different elements (images,
    audio files, videos, and 3D models, among others) over images or real-life pictures,
    add interactivity to our projects, and exchange them between users.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个工具将是增强类！，这是一个以教育为导向的创建工具，它将允许我们创建AR培训项目，在图像或真实生活中的图片上展示不同的元素（图像、音频文件、视频和3D模型等），为我们的项目添加交互性，并在用户之间交换它们。
- en: The main goal of this chapter is to introduce you to two AR tools in a slightly
    different context than the rest of the chapters have. The main idea of this chapter
    is for you to discover other forms of AR that are different than the rest of the
    SDKs that we have covered or will be covering, and their value for such a transversal
    field as training. By the end of this chapter, you will be able to create your
    own AR viewer through the web with ARCore, but you will have also discovered the
    possibilities of interactivity to enrich the user experience in AR applications
    using the Augmented Class! tool.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的主要目标是介绍两种AR工具，其应用场景与本书其他章节略有不同。本章的主要思想是让你发现与我们已覆盖或将要覆盖的其他SDK不同的AR形式，以及它们在如此跨领域的培训领域中的价值。到本章结束时，你将能够通过Web使用ARCore创建自己的AR查看器，但你也将发现使用增强类！工具丰富AR应用程序用户体验的交互性可能性。
- en: At the time of writing this book, both tools are under constant development
    and improvement, with new functionalities and integrations being added. Currently,
    they only work on Android devices, but it is expected they will soon work on iOS.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，这两个工具都在持续开发和改进中，不断添加新的功能和集成。目前，它们仅适用于Android设备，但预计它们很快也将支持iOS。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Using AR for training
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用AR进行培训
- en: Exploring WebAR with Google Component `<model-viewer>`
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索使用Google组件`<model-viewer>`的WebAR
- en: Exploring Augmented Class!
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索增强类！
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: The technical requirements for this chapter are as follows.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的技术要求如下。
- en: 'For the `<model-viewer>` project, you will need the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`<model-viewer>`项目，你需要以下内容：
- en: An ARCore-supporting Android device (see the list here: [https://developers.google.com/ar/discover/supported-devices](https://developers.google.com/ar/discover/supported-devices)).
    The project has been tested on a Pocophone F1.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持ARCore的Android设备（请参阅以下列表：[https://developers.google.com/ar/discover/supported-devices](https://developers.google.com/ar/discover/supported-devices)）。该项目已在Pocophone
    F1上进行了测试。
- en: 'For the Augmented Class! project, you will need the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于增强类！项目，你需要以下内容：
- en: An Android device with Android 5.0 or above
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装有Android 5.0或更高版本的Android设备
- en: The resources and the code files for this chapter can be found here: [https://github.com/PacktPublishing/Enterprise-Augmented-Reality-Projects/tree/master/Chapter04](https://github.com/PacktPublishing/Enterprise-Augmented-Reality-Projects/tree/master/Chapter04).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的资源和相关代码文件可以在这里找到：[https://github.com/PacktPublishing/Enterprise-Augmented-Reality-Projects/tree/master/Chapter04](https://github.com/PacktPublishing/Enterprise-Augmented-Reality-Projects/tree/master/Chapter04)。
- en: Using AR for training
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用AR进行培训
- en: AR has been present in the educational field for more than 20 years, especially
    inside the university scope, although its growth has been much slower and less
    noticed than in more commercial fields such as marketing or tourism.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 增强现实在教育领域已经存在了20多年，尤其是在大学范围内，尽管其增长速度比在更商业化的领域如市场营销或旅游要慢得多，也较少受到关注。
- en: With the evolution of the supporting hardware (phones, tablets, and digital
    whiteboards, for example), AR has become a valuable asset in education and training.
    It allows students to visualize concepts in three dimensions over an image or
    directly in the room so that they can access information in a quicker and more
    dynamic way (just pointing with the camera instead of searching on a book or the
    internet for the information) or to create deeper personal projects (giving life
    to a painting, adding instructions or extra information over a handcrafted project,
    creating an animated presentation, and more).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 随着支持硬件（如手机、平板电脑和数字白板）的演变，AR已经成为教育和培训中的一个宝贵资产。它允许学生通过图像或直接在房间内以三维形式可视化概念，以便他们能够更快、更动态地获取信息（只需用摄像头指向而不是在书本或互联网上搜索信息），或者创建更深入的个人项目（使一幅画栩栩如生，在手工项目上添加说明或额外信息，创建动画演示等）。
- en: 'One important consideration to make is that AR in education/training is transversal to
    all ages and subjects: a child can use it in the classroom to learn forms and
    colors, while a company can use it to train workers on its occupational risk prevention
    plan—it just depends on the tool and the target of the AR content.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一个重要的考虑因素是，在教育/培训中，AR技术适用于所有年龄段和学科：一个孩子可以在课堂上用它来学习形状和颜色，而一家公司可以用它来培训员工关于其职业风险预防计划——这完全取决于工具和AR内容的目标。
- en: 'In this chapter, we will learn how to use two different and easy tools that
    will help us create two different educational projects in little time. For that, we
    will be using the following 3D models:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何使用两种不同且易于使用的工具，这些工具将帮助我们快速创建两个不同的教育项目。为此，我们将使用以下3D模型：
- en: '[https://sketchfab.com/3d-models/gearbox-planetary-2bee7992d266456aaef1f1394b0ebb98](https://sketchfab.com/3d-models/gearbox-planetary-2bee7992d266456aaef1f1394b0ebb98)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://sketchfab.com/3d-models/gearbox-planetary-2bee7992d266456aaef1f1394b0ebb98](https://sketchfab.com/3d-models/gearbox-planetary-2bee7992d266456aaef1f1394b0ebb98)'
- en: '[https://sketchfab.com/3d-models/warm-gearbox-e7fedd86a90b4c46a53fe88882e66aa3](https://sketchfab.com/3d-models/warm-gearbox-e7fedd86a90b4c46a53fe88882e66aa3)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://sketchfab.com/3d-models/warm-gearbox-e7fedd86a90b4c46a53fe88882e66aa3](https://sketchfab.com/3d-models/warm-gearbox-e7fedd86a90b4c46a53fe88882e66aa3)'
- en: '[https://sketchfab.com/3d-models/gearbox-conical-60f023924ee0456daa758eb590b6064b](https://sketchfab.com/3d-models/gearbox-conical-60f023924ee0456daa758eb590b6064b)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://sketchfab.com/3d-models/gearbox-conical-60f023924ee0456daa758eb590b6064b](https://sketchfab.com/3d-models/gearbox-conical-60f023924ee0456daa758eb590b6064b)'
- en: Let's get started with WebAR by learning about what the Google Web Component
    `<model-viewer>` is and how it works.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从学习Google Web Component `<model-viewer>`是什么以及它是如何工作的开始，来了解WebAR。
- en: Exploring WebAR with Google Web Component <model-viewer>
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Google Web Component `<model-viewer>` 探索WebAR
- en: Before smartphones hit the market, AR was exclusively developed on computers.
    Later on, web applications appeared, first written in Flash and then in HTML5,
    but always requiring the webcam from a computer. Since the appearance of the ARCore
    (Google) and ARKit (Apple) toolkits, AR is also arriving on smartphones through
    the web.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在智能手机进入市场之前，增强现实（AR）技术仅在计算机上开发。后来，出现了网络应用程序，最初是用Flash编写的，然后是HTML5，但始终需要计算机的摄像头。自从ARCore（谷歌）和ARKit（苹果）工具包出现以来，AR技术也通过网络进入了智能手机。
- en: WebXR Device API is one of the current standards that's working to provide the
    specifications for accessing both VR and AR from the web, including the use of
    devices' sensors or **head-mounted displays** (**HMDs**). This standard specification
    is being written by the **World Wide Web Consortium** (**W3C**) and it's currently
    under development. At the time of writing, the integration of AR in this WebXR
    specification is still unstable and thus it's not presented in this chapter. It
    is expected that this functionality will be further developed during the following
    months. For more information on the standard and its progress, you can check their
    website ([https://www.w3.org/TR/webxr](https://www.w3.org/TR/webxr)) and GitHub
    ([https://github.com/immersive-web/webxr/](https://github.com/immersive-web/webxr/)).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: WebXR设备API是当前正在努力提供从网络访问VR和AR的规范之一，包括使用设备的传感器或**头戴式显示器**（**HMDs**）。这个标准规范是由**万维网联盟**（**W3C**）编写的，目前正处于开发中。在撰写本文时，AR在WebXR规范中的集成仍然不稳定，因此没有在本章中介绍。预计在接下来的几个月里，这一功能将得到进一步开发。有关标准和其进展的更多信息，您可以查看他们的网站（[https://www.w3.org/TR/webxr](https://www.w3.org/TR/webxr)）和GitHub（[https://github.com/immersive-web/webxr/](https://github.com/immersive-web/webxr/)）。
- en: In this section, for the development of a WebAR application, we will be using
    Google's `<model-viewer>` Web Component, which allows us to easily embed 3D models
    into a web page and visualize them in AR using a smartphone or tablet.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，为了开发WebAR应用程序，我们将使用Google的`<model-viewer>`网络组件，它允许我们轻松地将3D模型嵌入到网页中，并使用智能手机或平板电脑在AR中可视化它们。
- en: A Web Component is a custom HTML element that is based on existing web standards
    and works across modern browsers.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Web组件是一个基于现有网络标准的自定义HTML元素，它可以在现代浏览器中工作。
- en: Google's `<model-viewer>` Component was first launched in February 2019 to allow
    users to display 3D models in web pages. In May 2019, they announced AR compatibility
    through the `ar` attribute. It's based on the ARCore functionality Scene Viewer
    and at the moment it only works on Android devices that support this technology.
    We will see that its use is quite straightforward and works on any browser. In [Chapter
    3](2d2b4e6f-1ee8-46ab-9041-24e36d57f949.xhtml), *AR for Manufacturing with ARCore*,
    we learned how to implement a whole AR mobile project. In this case, we will only
    have to use its web feature using the mentioned `<model-viewer>` Component. We
    will see which type of models we can use, how to create a web page to contain
    the component, and how to actually add the component and make it work on a mobile
    device.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Google的`<model-viewer>`组件首次于2019年2月推出，允许用户在网页中显示3D模型。2019年5月，他们宣布通过`ar`属性实现AR兼容性。它基于ARCore功能场景查看器，目前仅适用于支持此技术的Android设备。我们将看到它的使用非常简单，并且可以在任何浏览器上工作。在[第3章](2d2b4e6f-1ee8-46ab-9041-24e36d57f949.xhtml)，“使用ARCore的AR制造”，我们学习了如何实现一个完整的AR移动项目。在这种情况下，我们只需使用提到的`<model-viewer>`组件来使用其网络功能。我们将看到我们可以使用哪种类型的模型，如何创建一个包含组件的网页，以及如何实际上添加组件并在移动设备上使其工作。
- en: Now that we have looked at the tool we are going to use, in the next section,
    we will cover the 3D models that are accepted by this component (at the time of
    writing).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了我们将要使用的工具，在下一节中，我们将介绍此组件接受的3D模型（截至编写时）。
- en: Working with 3D models
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与3D模型一起工作
- en: Because we are displaying our models in the browser, the supported format is **GL
    Transmission Format** (**glTF**) 2.0/glb, a format that's designed to minimize
    the size and runtime processing, making it the best option for web transmission.
    Nowadays, many 3D designing programs such as Blender, 3ds Max, and Maya, as well
    as some 3D model platforms, such as Sketchfab, provide exporters to this format.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在浏览器中显示模型，支持的格式是**GL传输格式**（**glTF**）2.0/glb，这是一种旨在最小化大小和运行时处理的格式，使其成为网络传输的最佳选择。如今，许多3D设计程序，如Blender、3ds
    Max和Maya，以及一些3D模型平台，如Sketchfab，都提供了导出此格式的工具。
- en: You can find more information on the functionality of glTF and its possibilities
    at [https://www.khronos.org/gltf/](https://www.khronos.org/gltf/) and [https://github.com/KhronosGroup/glTF/blob/master/README.md](https://github.com/KhronosGroup/glTF/blob/master/README.md).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://www.khronos.org/gltf/](https://www.khronos.org/gltf/)和[https://github.com/KhronosGroup/glTF/blob/master/README.md](https://github.com/KhronosGroup/glTF/blob/master/README.md)上找到有关glTF功能及其可能性的更多信息。
- en: The 3D models' textures can be in `.jpg` or `.png` format, the tool supports
    animations, and, because models are going to be displayed via a web browser, they
    should not be very heavy on keeping the AR experience fluid.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 3D模型的纹理可以是`.jpg`或`.png`格式，该工具支持动画，并且由于模型将通过网络浏览器显示，它们不应太重，以保持AR体验流畅。
- en: More information on these requirements can be found at [https://developers.google.com/ar/develop/java/scene-viewer](https://developers.google.com/ar/develop/java/scene-viewer).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于这些要求的信息可以在[https://developers.google.com/ar/develop/java/scene-viewer](https://developers.google.com/ar/develop/java/scene-viewer)找到。
- en: For this project, we are going to use three static models called `gearbox_conical.glb`,
    `gearbox_planetary.glb`, and `gearbox_worm.glb`. These models provide good detail
    for a more realistic AR experience, and we are going to use them in the project
    in the next section with Augmented Class!.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，我们将使用三个静态模型，分别是`gearbox_conical.glb`、`gearbox_planetary.glb`和`gearbox_worm.glb`。这些模型提供了良好的细节，以实现更真实的AR体验，我们将在下一节中使用增强类来使用它们！
- en: Now that we have understood the basics of how the `<model-viewer>` Component
    works, let's start creating a web page.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了`<model-viewer>`组件的基本工作原理，让我们开始创建一个网页。
- en: Creating a simple web page
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建简单的网页
- en: The first thing we are going to do is create the web page where the 3D models
    will be displayed and ready to be launched in AR. For this, we are also going
    to use Glitch, an online tool that will help us create this project.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要做的第一件事是创建一个网页，其中将显示3D模型，并准备好在AR中启动。为此，我们也将使用Glitch，这是一个在线工具，将帮助我们创建此项目。
- en: First, we are going to learn how to prepare a Glitch project before actually
    coding the style sheet and HTML page.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将学习如何在编写样式表和HTML页面之前如何准备Glitch项目。
- en: Coding with Glitch
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Glitch进行编码
- en: 'Glitch is a simple tool for creating web apps with a strong collaboration component.
    It allows us to remix existing apps or clone projects from services such as GitHub
    or GitLab. In our case, since we''ll only want to create a simple demo web page,
    we will use Glitch to store both the HTML page and the 3D models. To create a
    new Glitch project, follow these steps:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Glitch是一个用于创建具有强大协作组件的Web应用的简单工具。它允许我们混搭现有应用或从GitHub或GitLab等服务克隆项目。在我们的情况下，因为我们只想创建一个简单的演示网页，我们将使用Glitch来存储HTML页面和3D模型。要创建一个新的Glitch项目，请按照以下步骤操作：
- en: First of all, go to [https://glitch.com](https://glitch.com/) and click on the
    Sign-in button. It will automatically create an account.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，前往[https://glitch.com](https://glitch.com/)并点击登录按钮。它将自动创建一个账户。
- en: 'In the top-right corner of the page, click on New Project to start a new project.
    Then, click on the first option, hello-webpage:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在页面右上角，点击新建项目以开始新项目。然后，点击第一个选项，`hello-webpage`：
- en: '![](img/35886204-c874-4130-9e0d-0613c0886623.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/35886204-c874-4130-9e0d-0613c0886623.png)'
- en: Selecting our project template
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 选择我们的项目模板
- en: 'You will be directed to a board that will look similar to this:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将被导向一个看起来类似的板：
- en: '![](img/10a2eb29-89f2-48a8-906f-f6a9bf69cca0.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/10a2eb29-89f2-48a8-906f-f6a9bf69cca0.png)'
- en: The Gitch board
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Gitch板
- en: Take a look at the README file as it explains the main functionality of the
    page.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 查看README文件，因为它解释了页面的主要功能。
- en: 'The next step will be to change the name of the project that Glitch has provided
    us. Click on the name in the top-left corner of the page and provide a name and
    description:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步将是更改Glitch为我们提供的项目名称。点击页面左上角的名称并提供名称和描述：
- en: '![](img/e1bf670f-d670-4e47-a468-d0e9e939414b.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e1bf670f-d670-4e47-a468-d0e9e939414b.png)'
- en: Changing the default name of the project
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 修改项目的默认名称
- en: 'Now, from the dropdown button ''Show'', select ''Next to The Code'':'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，从下拉按钮“显示”中选择“紧邻代码”：
- en: '![](img/84fea2be-a229-4c45-9bbd-0206f74a2940.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/84fea2be-a229-4c45-9bbd-0206f74a2940.png)'
- en: Selecting how to see the final web page
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 选择如何查看最终网页
- en: 'This will divide our window to show us the result of the code we are writing:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将把我们的窗口分割，以显示我们正在编写的代码的结果：
- en: '![](img/ecd11b24-5802-4203-89b2-5dce2e193537.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ecd11b24-5802-4203-89b2-5dce2e193537.png)'
- en: The window shows the code on the left and the result on the right
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口显示左侧的代码和右侧的结果
- en: 'Let''s upload our models. Click on assets on the left-hand bar and drag and
    drop the three models of this project, that is, `gearbox_planetary.glb`, `gearbox_worm.glb`,
    and `gearbox_conical.glb`, onto the square:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们上传我们的模型。点击左侧栏上的资产，并将此项目的三个模型（即`gearbox_planetary.glb`、`gearbox_worm.glb`和`gearbox_conical.glb`）拖放到方块上：
- en: '![](img/452758c2-c778-46c4-b608-527114b5b1ae.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/452758c2-c778-46c4-b608-527114b5b1ae.png)'
- en: The assets window
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 资产窗口
- en: 'Once the models have been uploaded, they will appear on the dashboard:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦模型已上传，它们将出现在仪表板上：
- en: '![](img/099e9a52-b0b7-4709-a32f-c89931dd67db.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/099e9a52-b0b7-4709-a32f-c89931dd67db.png)'
- en: Assets listed in the assets window
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 资产窗口中列出的资产
- en: 'Selecting each model will allow you to Copy the link to the asset or `Delete`
    it:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择每个模型将允许你复制资产的链接或`删除`它：
- en: '![](img/231a763e-7128-4327-b887-c719e1447659.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/231a763e-7128-4327-b887-c719e1447659.png)'
- en: Link to the assets and a button to delete it
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 链接到资产和删除按钮
- en: Glitch saves every key we press, so there is no need for us to manually save
    the code.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Glitch保存我们按下的每个键，因此我们不需要手动保存代码。
- en: With our basic elements ready, let's write the web page code, starting with
    the style sheet and then the HTML page.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备好基本元素后，让我们编写网页代码，从样式表开始，然后是HTML页面。
- en: Coding the style sheet
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写样式表
- en: 'In the style sheet, we are going to decide on the appearance of our web page.
    Since our main goal is to show the AR, we will keep it simple for now. The Glitch
    `style.css` file will already have some code in it. Let''s modify this file and
    adapt it to our needs. Follow these steps to do so:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在样式表中，我们将决定我们网页的外观。由于我们的主要目标是展示AR，所以我们现在会保持简单。Glitch的`style.css`文件中已经有一些代码。让我们修改这个文件并适应我们的需求。按照以下步骤进行操作：
- en: 'We are going to leave the body brackets as they are:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将保持`body`括号不变：
- en: '[PRE0]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here, we specify the font we are going to use for the web page and the margins
    of the body element.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们指定了网页将使用的字体和`body`元素的边距。
- en: 'Next, we''re going to modify the `h1` title element:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将修改`h1`标题元素：
- en: '[PRE1]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now, the title will be centered, black, and in bold.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，标题将居中、黑色和粗体。
- en: 'Let''s add some class elements:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们添加一些类元素：
- en: '[PRE2]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This class will encapsulate the 3D models when they are displayed over the
    web page (not in AR). They will appear inside a box, with rounded borders and
    a soft shadow on it. The text we will add will be centered inside the box and
    the `overflow: hidden` parameter will prevent the content from overflowing from
    the box.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '这个类将封装在网页上显示的3D模型（不在AR中）。它们将出现在一个盒子里，带有圆角边框和柔和的阴影。我们将添加的文本将居中在盒子内，并且`overflow:
    hidden`参数将防止内容从盒子溢出。'
- en: 'Now, we''ll add another class for the CC BY message of the models, which is
    required for these types of models:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将为模型的CC BY信息添加另一个类，这对于这些类型的模型是必需的：
- en: '[PRE3]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Here, we are locating the content on the left-hand side and with italic text.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将内容定位在左侧，并使用斜体文本。
- en: 'We''ll also change the appearance of the `cc` class'' images:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还将更改`cc`类图像的外观：
- en: '[PRE4]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: With these two lines, we are selecting the `height` of the images inside this
    class and making them a little bit transparent.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这两条线将选择这个类中图像的`height`并使它们略微透明。
- en: 'Finally, we are going to modify the `<model-viewer>` Component''s style:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们将修改`<model-viewer>`组件的样式：
- en: '[PRE5]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: With this, we will make the model viewer take the `width` of the container box
    and set its `height`.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，我们将使模型查看器占据容器盒子的`width`并设置其`height`。
- en: Now that the style sheet is ready, we can create our page.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在样式表已经准备好了，我们可以创建我们的页面。
- en: Coding the index.html page
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编码index.html页面
- en: Now open the `index.html` and, at the beginning of the document, change the
    title of the web page from `Hello!` to `AR Training Web App`. You can leave the
    rest of the code between the `<head>` `</head>` tags as it is. Now, remove everything
    between the `<body>` `</body>` tags (if you want, you can leave the last two lines
    with the Glitch button).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开`index.html`文件，在文档的开头将网页标题从`Hello!`改为`AR Training Web App`。你可以保留`<head>`
    `<head>`标签之间的其余代码不变。现在，删除`<body>` `<body>`标签之间的所有内容（如果你愿意，可以保留带有Glitch按钮的最后两行）。
- en: 'Now, let''s add the title and the three boxes for the models inside the `<body>`
    tags:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在`<body>`标签内添加标题和三个模型盒子：
- en: 'Add the title between `<h1>` tags so that it uses our `.css` file''s style:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`<h1>`标签之间添加标题，使其使用我们的`.css`文件中的样式：
- en: '[PRE6]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now, after the title, add the first box with the title on top and the CC BY
    message at the bottom:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在标题之后，添加第一个带有顶部标题和底部CC BY信息的盒子：
- en: '[PRE7]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The main component is the `box` class. Inside it, we have the title in `<h2>`
    format and the `cc` class with a link to the license, the two images from `creativecommons`
    to identify the CC BY license type, and the author of the model with a link to
    the Sketchfab page where it comes from.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 主要组件是`box`类。在里面，我们有`<h2>`格式的标题和带有指向许可证的`cc`类，以及两个来自`creativecommons`的图像来标识CC
    BY许可证类型，还有指向模型来源的Sketchfab页面的作者链接。
- en: 'Do the same for the other two models:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对其他两个模型也做同样的处理：
- en: '[PRE8]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'At the moment, your project should look like this:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，你的项目应该看起来像这样：
- en: '![](img/ac063760-5f8a-45fb-92cd-2001da70f4e9.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ac063760-5f8a-45fb-92cd-2001da70f4e9.png)'
- en: The web page with the three boxes
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 带有三个盒子的网页
- en: Now, we have to include the 3D models with the `<model-viewer>` Component.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们必须包含`<model-viewer>`组件的3D模型。
- en: Adding the <model-viewer> Component to our page
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将<model-viewer>组件添加到我们的页面
- en: 'Adding the `<model-viewer>` Component is quite straightforward. Follow these
    steps to do so:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 添加`<model-viewer>`组件相当简单。按照以下步骤进行操作：
- en: 'First of all, we have to add the following two lines at the end of the `<body>` element:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们不得不在`<body>`元素末尾添加以下两行：
- en: '[PRE9]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: With these lines, we are adding the module to our page and making it work in
    new and old browsers.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些行，我们将模块添加到我们的页面，并使其在新旧浏览器中工作。
- en: 'If you want to work with a specific version of the module, add the version
    number on the URL after `model-viewer`, like this: `/model-viewer@0.3.1/`*.*'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想使用模块的特定版本，请在 `model-viewer` 后的 URL 中添加版本号，例如：`/model-viewer@0.3.1/`*.*
- en: 'Then, we can call it inside the `box` class, after the `h2` title and before
    the `cc` class, making reference to the models'' URLs (put your own model''s URL
    in the `src` attribute):'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们可以在 `box` 类内部调用它，在 `h2` 标题之后和 `cc` 类之前，引用模型的 URL（在 `src` 属性中放入您自己的模型 URL）：
- en: '[PRE10]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The code interface can be seen in the following screenshot:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了代码界面：
- en: '![](img/50393a44-4b8d-4d5b-ae13-926e3ae598b4.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/50393a44-4b8d-4d5b-ae13-926e3ae598b4.png)'
- en: Final code for the <model-viewer>
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`<model-viewer>` 的最终代码'
- en: 'As you can see, the `<model-viewer>` tag supports several attributes:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，`<model-viewer>` 标签支持多个属性：
- en: The `src`, `background-color`, and `alt` attributes define the source URL, the
    color of the background, and the description, respectively.
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`src`、`background-color` 和 `alt` 属性分别定义了源 URL、背景颜色和描述。'
- en: The `auto-rotate` attribute will have the model rotating by default on the web
    page (flat view, not in AR).
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto-rotate` 属性将使模型在网页上默认旋转（平面视图，不是 AR 视图）。'
- en: With `camera-controls`, we can rotate/scale the model while it's in a flat view.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `camera-controls`，我们可以在模型处于平面视图时旋转/缩放模型。
- en: The really important attribute for us here is `ar`; without it, the option of
    seeing the model in AR will not be available.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于我们来说，这里最重要的属性是 `ar`；没有它，查看模型在 AR 中的选项将不可用。
- en: 'Do the same with the other two models:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对其他两个模型做同样的操作：
- en: '[PRE11]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'With this, you should see the three models loaded and rotating on the web page:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这样，您应该会看到网页上加载并旋转的三个模型：
- en: '![](img/00de810c-5f91-45cd-b407-4b27285aeed6.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00de810c-5f91-45cd-b407-4b27285aeed6.png)'
- en: The web page with the 3D models in the display
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 显示 3D 模型的网页
- en: We have finished coding. Now, let's take our mobile phone or tablet and see
    the models in AR.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了编码。现在，让我们拿出我们的手机或平板电脑，查看 AR 中的模型。
- en: Visualizing the 3D models in AR
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 AR 中可视化 3D 模型
- en: 'To see the models in AR, you need to open the web page with an ARCore-supporting
    device. Once you have one, the steps to visualize the model are as follows:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 AR 中查看模型，您需要使用支持 ARCore 的设备打开网页。一旦您有了这样的设备，可视化模型的步骤如下：
- en: Get the URL to your final page by clicking on the Share button in the top-left
    corner of the Glitch web page and selecting Live App.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击 Glitch 网页左上角的分享按钮并选择 Live App 来获取您最终页面的 URL。
- en: 'Now, copy the URL and paste it into your mobile device. You should see the
    3D models loading (it might take a little more time than it would on a computer
    since they are detailed models):'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，复制 URL 并将其粘贴到您的移动设备上。您应该看到 3D 模型正在加载（由于它们是详细的模型，可能需要比在电脑上更多的时间）：
- en: '![](img/ea44a044-896f-4568-8cfb-0c2fdf3f9d0e.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ea44a044-896f-4568-8cfb-0c2fdf3f9d0e.png)'
- en: The web page displayed on the mobile phone
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 显示在手机上的网页
- en: In the bottom-right corner of each model, you will see a little box that doesn't
    appear in the computer's browser. Click on it.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在每个模型的右下角，您会看到一个在电脑浏览器中不会出现的方块。点击它。
- en: 'The first time you do this, a message will appear, asking if the page can open
    Google Play Services for AR, and if you don''t have it installed, it will ask
    you to install it:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一次这样做时，会出现一条消息，询问页面是否可以打开 Google Play 服务 AR，如果您还没有安装，它会要求您安装它：
- en: '![](img/3ef307b0-1949-4243-9b65-b196ec49d48d.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3ef307b0-1949-4243-9b65-b196ec49d48d.png)'
- en: Google Play Services for AR in the Google Play Store
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: Google Play 商店中的 AR Google Play 服务
- en: 'Now, you will see the 3D model in fullscreen, along with a button at the bottom
    to View in your space (AR). Click on it to launch the camera and point it at a
    flat surface:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您将看到全屏的 3D 模型，底部有一个按钮可以查看您的空间中的 AR 版本。点击它以启动相机并将其指向一个平坦的表面：
- en: '![](img/9912b89e-b83b-4d04-862b-0c880ab86492.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9912b89e-b83b-4d04-862b-0c880ab86492.png)'
- en: The model displayed fullscreen with the button to see it in AR below
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 全屏显示的模型，下面有按钮可以查看 AR 版本
- en: 'Once the model has been fixed to a surface, we can move around it. By touching
    the screen, you can move, rotate, and scale it:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦模型被固定到表面上，我们就可以在它周围移动。通过触摸屏幕，您可以移动、旋转和缩放它：
- en: '![](img/0c54e02a-e42b-4c49-920e-267d947930df.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0c54e02a-e42b-4c49-920e-267d947930df.png)'
- en: The model in AR over the real floor
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在真实地板上方的 AR 模型
- en: Now, you can play with the size and position of the model to view it from different
    angles and to move inside it.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以调整模型的大小和位置，从不同的角度查看它，并在其中移动。
- en: Important! 3D models must be accessed through an HTTPS connection. Otherwise,
    when clicking on the little box in the bottom-right corner, the View in your space
    button won't appear for the model. Keep this in mind if you use your own server
    in a future application instead of Glitch.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 重要！3D模型必须通过HTTPS连接访问。否则，当点击右下角的小方块时，模型中的“在您的空间中查看”按钮将不会出现。如果您在未来应用程序中使用自己的服务器而不是Glitch，请记住这一点。
- en: And that's it. Now, you know how to display models in AR using the Web Component
    `<model-viewer>` and ARCore.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样。现在，您知道了如何使用Web组件`<model-viewer>`和ARCore在AR中显示模型。
- en: As we mentioned previously, the Component is quite new and constantly changing.
    To see the latest features and accepted properties, you can take a look at [https://googlewebcomponents.github.io/model-viewer/](https://googlewebcomponents.github.io/model-viewer/)
    and [https://github.com/GoogleWebComponents/model-viewer](https://github.com/GoogleWebComponents/model-viewer).
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们之前提到的，组件相当新，并且一直在不断变化。要查看最新功能和接受属性，您可以查看[https://googlewebcomponents.github.io/model-viewer/](https://googlewebcomponents.github.io/model-viewer/)和[https://github.com/GoogleWebComponents/model-viewer](https://github.com/GoogleWebComponents/model-viewer)。
- en: In the next section, we will create another training project using the same
    3D models but with the Augmented Class! tool instead. We will use an image marker
    and add interaction to our final project.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将使用相同的3D模型创建另一个培训项目，但使用Augmented Class!工具。我们将使用图像标记并向我们的最终项目添加交互。
- en: Exploring Augmented Class!
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索Augmented Class!
- en: Augmented Class! is an educational authoring tool born from the motivation of
    a group of developers and teachers/professors and provides a complete solution
    that allows all the members of the educational community (teachers, students,
    and parents) to create and share interactive AR projects without technical knowledge
    and without the usual constraints of these kinds of tools, such as limited content
    and functionalities.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: Augmented Class!是一个由一群开发者和教师/教授的动机产生的教育内容创作工具，它提供了一个完整的解决方案，允许教育社区的全体成员（教师、学生和家长）无需技术知识，无需这些工具通常的约束（如内容有限和功能有限），创建和共享交互式AR项目。
- en: Currently, in its 3.0.30 version, it's freely available in the Google Play Store
    and in private beta versions for PC. The application uses image markers, which
    are known as targets in other tools. This means it displays the virtual content
    over a real image, such as a picture, book cover, and so on, instead of over a
    flat surface like ARCore does. Augmented Class! allows a wide variety of content
    (images, audio files, videos, 3D models, and text), also we can add interaction
    (touching the screen, playing with the distance from the camera to the marker,
    and playing with the distance between two markers) and share our projects between
    users. It's free in this version and it is expected they will launch more free
    and pro functionalities in the upcoming months. For more information, visit [www.augmentedclass.com](http://www.augmentedclass.com).
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，在3.0.30版本中，它可以在Google Play Store中免费获取，并且为PC提供私人测试版。该应用程序使用图像标记，在其他工具中称为目标。这意味着它会在真实图像上显示虚拟内容，例如图片、书封面等，而不是像ARCore那样在平坦表面上显示。Augmented
    Class!允许广泛的内容（图像、音频文件、视频、3D模型和文本），我们还可以添加交互（触摸屏幕、与相机和标记之间的距离互动，以及两个标记之间的距离互动），并在用户之间共享我们的项目。在这个版本中它是免费的，预计他们将在接下来的几个月内推出更多免费和专业的功能。更多信息，请访问[www.augmentedclass.com](http://www.augmentedclass.com)。
- en: In this chapter, we will use the Android app to create a simple project to display
    a 3D model of a gearbox. Then, we will add user interaction to display further
    information. Finally, we will create another marker and create an interaction
    between them. For that, we will prepare our material (images and 3D models) on
    the mobile device, create a simple project, add some user interaction to it, and
    create an interaction between two different markers.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将使用Android应用程序创建一个简单的项目来显示变速箱的3D模型。然后，我们将添加用户交互以显示更多信息。最后，我们将创建另一个标记并在它们之间创建交互。为此，我们将在移动设备上准备我们的材料（图像和3D模型），创建一个简单的项目，向其中添加一些用户交互，并创建两个不同标记之间的交互。
- en: To do this, we'll need to prepare all the material for our mobile device.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，我们需要为我们的移动设备准备所有材料。
- en: Preparing the material
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备材料
- en: 'Before we start the project, we have to prepare the material in our mobile
    device so that we can access it quickly:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始项目之前，我们必须在我们的移动设备上准备材料，以便我们可以快速访问它：
- en: The first thing we need to do is register on their web page ([http://creativitic.es/augmentedclass/beta/](http://creativitic.es/augmentedclass/beta/))
    and download the Android app at [https://play.google.com/store/apps/details?id=com.AugmentedClass.AClass&hl=es_419](https://play.google.com/store/apps/details?id=com.AugmentedClass.AClass&hl=es_419).
    The app allows us demo access without us having to log in, but it has more restrictions
    for projects than it does with registered access.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先需要做的是在他们网页上注册（[http://creativitic.es/augmentedclass/beta/](http://creativitic.es/augmentedclass/beta/））并下载Android应用（[https://play.google.com/store/apps/details?id=com.AugmentedClass.AClass&hl=es_419](https://play.google.com/store/apps/details?id=com.AugmentedClass.AClass&hl=es_419)）。该应用允许我们进行演示访问，而无需登录，但对于项目来说，它比注册访问有更多的限制。
- en: Now, on your phone or tablet, create a folder called `AClass` in the `root`
    folder and copy the model file, `gearbox_worm.glb`, and the markers, `gearbox_worm.jpg`
    and `component_desc.jpg`, into it. Creating a folder isn't required, but it will
    make using and searching for content from the app easier.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在您的手机或平板电脑上，在`root`文件夹中创建一个名为`AClass`的文件夹，并将模型文件`gearbox_worm.glb`以及标记`gearbox_worm.jpg`和`component_desc.jpg`复制到其中。创建文件夹不是必需的，但它会使使用和搜索应用中的内容更容易。
- en: Now, we are ready to start the app.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经准备好开始使用应用了。
- en: Creating a simple project
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个简单项目
- en: 'We are going to start by creating a simple project to see how AR can be used
    in a training project using image-based markers. Let''s get started:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先创建一个简单项目，看看如何使用基于图像的标记在培训项目中使用AR。让我们开始吧：
- en: 'Open the app, give the required permissions, and on the login page, enter the
    username and password you should have received from the email address you provided
    previously:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开应用，授予所需的权限，并在登录页面输入您之前提供的电子邮件地址收到的用户名和密码：
- en: '![](img/176b10c4-dace-42e6-82dc-07ea605a653e.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](img/176b10c4-dace-42e6-82dc-07ea605a653e.png)'
- en: Augmented Class! app login window
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: Augmented Class! 应用登录窗口
- en: 'The first time you open the app, you will be asked to complete a simple tutorial,
    where you have to follow some basic steps to create a very simple project with
    some given resources:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一次打开应用时，您将需要完成一个简单的教程，其中您需要遵循一些基本步骤来使用一些给定资源创建一个非常简单的项目：
- en: '![](img/0aa109d2-76c9-41e5-a5ab-e4486885ee0c.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0aa109d2-76c9-41e5-a5ab-e4486885ee0c.png)'
- en: Initial tutorial
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 初始教程
- en: Once you have completed the tutorial, from the main menu, press Go to Inventor.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成教程后，从主菜单中，按“进入发明者”。
- en: 'In the inventor window, click on the created New Project to select it and delete
    it by pressing the delete icon:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在发明者窗口中，点击创建的新项目以选择它，然后通过按删除图标来删除它：
- en: '![](img/477c957e-61dd-4cb9-9e60-003382ecf632.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![](img/477c957e-61dd-4cb9-9e60-003382ecf632.png)'
- en: Inventor window with the project created and the tutorial deleted
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了项目并删除了教程的发明者窗口
- en: Now, click on Create a new project to enter the blackboard window.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击创建新项目以进入黑板窗口。
- en: Before anything else, give the project a name so that you can identify it later.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在做任何事情之前，给项目命名，这样您以后就可以识别它了。
- en: 'Here, we can select our type of marker. They are as follows:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，我们可以选择我们的标记类型。它们如下所示：
- en: Simple Marker: Shows the AR content over the selected image
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单标记：在所选图像上显示AR内容
- en: 'Camera Interaction: Shows some AR content when the camera is far from the marker
    and another different AR content when the camera is close to the marker'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 摄像头交互：当摄像头远离标记时显示一些AR内容，当摄像头靠近标记时显示另一种不同的AR内容
- en: 'Marker Interaction: Shows an AR content in each marker when they are separated
    and other content in each one when they are close'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标记交互：当标记分离时在每个标记上显示AR内容，当它们靠近时在每个标记上显示其他内容
- en: 'Choose Simple Marker:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 选择 简单标记：
- en: '![](img/1b1a8a31-4df0-4ce9-8671-9001952fee98.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1b1a8a31-4df0-4ce9-8671-9001952fee98.png)'
- en: Giving the project a name from the top bar
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 从顶部栏给项目命名
- en: 'The first thing we need to do is select a marker. We could select a previous
    one, take a picture of an image from our camera, or upload a marker. Drag the
    square Load MARKER over the white square in the middle and select the `gearbox_worm.jpg`
    image from your mobile device:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先需要做的是选择一个标记。我们可以选择一个之前的标记，用我们的相机拍摄一个图像，或者上传一个标记。将“加载标记”的方形拖动到中间的白色方形上，并从您的移动设备中选择`gearbox_worm.jpg`图像：
- en: '![](img/46224ee9-d4ed-431b-b7de-7a7fcc3120dd.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](img/46224ee9-d4ed-431b-b7de-7a7fcc3120dd.png)'
- en: Dragging the Load MARKER square from the left scrollview to the middle
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 将“加载标记”方形从左侧滚动视图拖动到中间
- en: 'Now, we can add our 3D model to the marker. Click on the 3D button on the left
    and drag Load model to the marker in the middle of the screen:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以将我们的3D模型添加到标记中。点击左侧的3D按钮，并将“加载模型”拖到屏幕中间的标记上：
- en: '![](img/1e4a0391-4d4c-407d-a352-1cdfbf498fd5.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1e4a0391-4d4c-407d-a352-1cdfbf498fd5.png)'
- en: Dragging the Load model square to the marker in the middle
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 将“加载模型”方块拖到中间的标记上
- en: 'Navigate to the `AClass` folder we created earlier and select `gearbox_worm.glb`.
    As you can see, many file types are accepted:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到我们之前创建的`AClass`文件夹并选择`gearbox_worm.glb`。如你所见，接受许多文件类型：
- en: '![](img/0d54980c-0ddd-4ee2-8c3e-2f2d90360542.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0d54980c-0ddd-4ee2-8c3e-2f2d90360542.png)'
- en: Selecting our 3D model
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 选择我们的3D模型
- en: 'Wait until the model has loaded. You will see that the model is selected by
    default and that new buttons are being displayed on the top bar. Select the hand icon
    to manipulate the model. Using the move/rotate/scale buttons, manipulate the gearbox
    until it looks as follows:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待模型加载完毕。你会看到模型默认被选中，并且顶部栏上显示着新的按钮。选择手形图标来操纵模型。使用移动/旋转/缩放按钮，操纵齿轮箱，直到它看起来如下：
- en: '![](img/4ebf9ad2-f477-4853-8e24-8d1a6354bf98.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4ebf9ad2-f477-4853-8e24-8d1a6354bf98.png)'
- en: 3D model rotated and scaled down
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 3D模型旋转并缩小
- en: The multi-gesture option allows you to manipulate the model with fewer buttons.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 多手势选项允许你用更少的按钮来操纵模型。
- en: 'Now, press on the Scene save icon under the Hierarchy panel. Our current marker
    will be saved and a thumbnail will appear on the bottom bar:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在层次结构面板下按场景保存图标。我们的当前标记将被保存，并在底部栏上出现缩略图：
- en: '![](img/04333232-c818-480c-8a71-cd0286c05de0.png)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![](img/04333232-c818-480c-8a71-cd0286c05de0.png)'
- en: The current marker appears as a thumbnail in the bottom bar
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 当前标记作为缩略图出现在底部栏
- en: 'Click on the Projects button in the top-left corner to quit the blackboard.
    Then, from the top-left corner, click on the Home button to go to the main menu.
    There, press Go to Viewer. Here, we can see our project on the grid:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左上角点击“项目”按钮退出黑板。然后，从左上角点击“主页”按钮进入主菜单。在那里，按“转到查看器”。在这里，我们可以看到我们的项目在网格上：
- en: '![](img/dbb0e531-30a8-4263-b2a6-c6487a7e295d.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dbb0e531-30a8-4263-b2a6-c6487a7e295d.png)'
- en: The viewer window with our project
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 带有我们项目的查看者窗口
- en: 'Since we only have one project and it''s already selected, press the eye icon
    to load the AR. Then, point with the camera to the marker to see the 3D model
    appear over the image. Move and rotate the image and get closer to/further away
    from it to see the model from all angles:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们只有一个项目并且它已经被选中，请按眼睛图标来加载AR。然后，用摄像头指向标记，以在图像上看到3D模型出现。移动和旋转图像，靠近或远离它，从所有角度查看模型：
- en: '![](img/d6004136-857a-4321-a99b-86620169f8ec.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d6004136-857a-4321-a99b-86620169f8ec.png)'
- en: The gearbox appearing over the image marker
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 齿轮箱出现在图像标记上
- en: Both the inventor and the viewer windows have a printer button so that you can
    print a PDF with the markers in case you don't have them at hand.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 发明者和查看者窗口都有一个打印按钮，这样你就可以在没有它们的情况下打印带有标记的PDF。
- en: That's it. We have the basic project ready. Now, let's add some interaction
    to it.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样。我们已经准备好了基本项目。现在，让我们给它添加一些交互功能。
- en: Adding user interaction
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加用户交互
- en: 'Let''s add some interactivity to our project by letting the user touch the
    screen so that they can view more AR information when hovering over the marker.
    Follow these steps to do so:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过让用户触摸屏幕来添加一些交互性，这样他们就可以在悬停在标记上时查看更多的AR信息。按照以下步骤操作：
- en: 'Go back to the Inventor window and select our project. Press the pencil icon
    to edit it:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到发明者窗口并选择我们的项目。按铅笔图标来编辑它：
- en: '![](img/34b57faa-3a06-472a-939e-9414ea65b39d.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![](img/34b57faa-3a06-472a-939e-9414ea65b39d.png)'
- en: Editing a project
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑一个项目
- en: 'Press the thumbnail and then the pencil icon to edit the marker''s scene:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下缩略图然后按铅笔图标来编辑标记的场景：
- en: '![](img/8a0f1450-c063-4520-8615-94cc9233e729.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8a0f1450-c063-4520-8615-94cc9233e729.png)'
- en: Selecting and editing the scene
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 选择和编辑场景
- en: 'Let''s add some information. On the left-hand bar, press the texts button and
    drag one of the fonts over the marker:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们添加一些信息。在左侧栏中，按文本按钮并将其中一个字体拖到标记上：
- en: '![](img/e74591fb-3bb6-4ec8-b8e7-a96957ca8945.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e74591fb-3bb6-4ec8-b8e7-a96957ca8945.png)'
- en: Dragging a text element over the marker
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 将文本元素拖到标记上
- en: 'Enter the text `Worm gear` and, with the manipulation buttons, move it until
    it''s next to the gold-colored gear (the worm gear) of our 3D model:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入文本`Worm gear`，并使用操作按钮将其移动到金色齿轮（蜗轮齿轮）旁边我们的3D模型：
- en: '![](img/b299f30d-71bf-4347-bc6c-0d8554655d96.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b299f30d-71bf-4347-bc6c-0d8554655d96.png)'
- en: Locating the text next to the object it makes reference to
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 将文本定位在它所引用的对象旁边
- en: 'To make it easier to place, you can change the camera perspective by pressing
    the camera icon and then on the camera with the eye:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了更容易放置，你可以通过按相机图标然后按带有眼睛的相机来更改相机视角：
- en: '![](img/c8d94898-9b73-4896-8029-5f5cd19537fc.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c8d94898-9b73-4896-8029-5f5cd19537fc.png)'
- en: Switching the camera view to top view
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 将相机视图切换到俯视图
- en: 'Now, with the text selected, press the clock icon to add the interaction and
    select the hand icon. This way, the text will appear when the user touches the
    screen once the model is visible:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，选择文本后，按时钟图标以添加交互并选择手形图标。这样，当模型可见时，用户触摸屏幕，文本将出现：
- en: '![](img/7f8aabb5-c2e5-4e77-954e-33f034549b1a.png)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7f8aabb5-c2e5-4e77-954e-33f034549b1a.png)'
- en: Selecting the interaction of the text
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 选择文本的交互
- en: You can select the different elements on the scene by pressing them or on their
    names in the Hierarchy panel.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过按它们或在层次结构面板中按它们的名称来选择场景中的不同元素。
- en: 'Save the scene and go back to the viewer window to launch the AR. Now, when
    the model appears over the image, press it. The text will appear:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存场景并返回到观众窗口以启动AR。现在，当模型出现在图像上时，按它。文本将出现：
- en: '![](img/c29c7a7f-811d-4a37-ab7f-17a9f875386b.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c29c7a7f-811d-4a37-ab7f-17a9f875386b.png)'
- en: The text appearing when touching the element on the screen
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 当触摸屏幕上的元素时出现的文本
- en: In this section, we've learned how to add basic interaction to our marker. In
    the next section, we will create a marker interaction instead.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了如何为我们的标记添加基本交互。在下一节中，我们将创建一个标记交互。
- en: Creating interaction between markers
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在标记之间创建交互
- en: 'Now, we will create a marker interaction. We will have two markers: the model,
    as in the previous sections, and some simple text, `Component Description`.'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将创建一个标记交互。我们将有两个标记：模型，如前几节所述，以及一些简单的文本，“组件描述”。
- en: For this example, we will keep it simple, and when we focus on the model's marker
    with the camera, it will show the 3D model. However, when we put both markers
    together, the description text will appear.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将保持简单，当我们用相机聚焦于模型的标记时，它将显示3D模型。然而，当我们把两个标记放在一起时，描述文本将出现。
- en: 'Because we are going to reuse our 3D model''s marker, we will create another
    project. Inside a project, single markers can''t be repeated as the viewer won''t
    know which content it should display over the marker. Thus, we will start a new
    project and create the necessary interaction. Let''s get started:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们将重用我们的3D模型的标记，我们将创建另一个项目。在一个项目中，单个标记不能重复，因为观众不知道它应该在标记上显示哪个内容。因此，我们将启动一个新的项目并创建必要的交互。让我们开始吧：
- en: 'In the project window, create a new project, and in the blackboard window,
    call it `Interactive Gearbox`. For this project, select two marker interactions:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目窗口中创建一个新的项目，在黑板窗口中将其命名为`交互式变速箱`。对于此项目，选择两个标记交互：
- en: '![](img/2512ed6f-4d84-4fa0-8a75-a03fd59703a4.png)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2512ed6f-4d84-4fa0-8a75-a03fd59703a4.png)'
- en: The new project with two markers
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 带有两个标记的新项目
- en: 'As you can see, a new button will appear in the top-right corner: Separated/Together.
    This button will switch between the two modes (when the markers are separated
    and together), allowing us to place different content over the markers in each
    case.'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，右上角将出现一个新的按钮：分离/一起。此按钮将在两种模式之间切换（当标记分离和在一起时），允许我们在每种情况下在标记上放置不同的内容。
- en: 'Now, from the list of markers, make `gearbox_worm` the first marker:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，从标记列表中，将`gearbox_worm`作为第一个标记：
- en: '![](img/dc8bfb59-d2ca-4c74-9c55-2e1ac8ea2aff.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dc8bfb59-d2ca-4c74-9c55-2e1ac8ea2aff.png)'
- en: Dragging the previously uploaded gearbox_womr1 image onto the first marker
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 将之前上传的gearbox_womr1图像拖动到第一个标记上
- en: 'Now, drag the Load MARKER square onto the second one to load the `component_desc.png`
    picture on it:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将加载标记方框拖动到第二个标记上以加载`component_desc.png`图片：
- en: '![](img/746b0a65-63b5-40de-a94f-db2e8fb404c7.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/746b0a65-63b5-40de-a94f-db2e8fb404c7.png)'
- en: Dragging the Load MARKER square to load an image from the mobile device
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 拖动负载标记方框从移动设备加载图像
- en: 'Press the 3D button and drag and drop the `gearbox_worm` model from the scrollview''s
    end over the first marker. This will be our content for when markers are separated:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下3D按钮，并将`gearbox_worm`模型从滚动视图的末端拖动并放到第一个标记上。这将是我们标记分离时的内容：
- en: '![](img/6b8ca40b-b02d-4adf-b21c-268ad0a4bacf.png)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6b8ca40b-b02d-4adf-b21c-268ad0a4bacf.png)'
- en: Dragging the previously uploaded model
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 拖动之前上传的模型
- en: 'Now, click on the Together button to change to the content that''s going to
    appear when we put them close to each other. You will see that the previous content
    will disappear from the scene:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击“一起”按钮，切换到我们将它们放在一起时将出现的内容。你会看到之前的内容将从场景中消失：
- en: '![](img/5674cd7f-dd59-4615-8be8-c69021e95e24.png)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5674cd7f-dd59-4615-8be8-c69021e95e24.png)'
- en: The scene changed to the Together mode
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 场景变为“一起”模式
- en: Repeat *step 4* to place the model over the first marker.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复*步骤4*，将模型放置在第一个标记上方。
- en: 'Select the text button and drag and drop one of the fonts over the first marker
    in two separate instances to create two different sets of text. Select and place
    them like so:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择文本按钮，并将其中一个字体拖放到第一个标记的两个单独实例中，以创建两组不同的文本。选择并放置如下：
- en: '![](img/8ac77d5b-9755-4c9f-b919-a4c4ec098226.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8ac77d5b-9755-4c9f-b919-a4c4ec098226.png)'
- en: The scene with the model and the information text
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 包含模型和信息文本的场景
- en: 'You can make use of the camera''s buttons to reduce the scene and see it from
    the top in order to place the text properly:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以利用相机的按钮来缩小场景，从顶部查看，以便正确放置文本：
- en: '![](img/abe72f57-a28d-4881-9ac5-51ae0427e8ef.png)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/abe72f57-a28d-4881-9ac5-51ae0427e8ef.png)'
- en: The same scene from above after changing the camera view
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 改变相机视图后的相同场景
- en: 'That''s it. Now, press the save button and go back to the viewer window to
    launch the AR. Select the current project in the grid and press the eye icon:'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这样。现在，按保存按钮并返回到查看器窗口以启动AR。在网格中选择当前项目并按眼睛图标：
- en: '![](img/ac94cf3d-d136-4732-b4f2-d967c0076b09.png)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ac94cf3d-d136-4732-b4f2-d967c0076b09.png)'
- en: Selecting the current project to display in AR
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 选择在AR中显示的当前项目
- en: 'Now, you will see that, when they are separated, the gearbox shows the 3D model:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你会看到，当它们分离时，变速箱显示3D模型：
- en: '![](img/d34a2090-b541-41e6-833c-55f5a8f4421d.png)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d34a2090-b541-41e6-833c-55f5a8f4421d.png)'
- en: When the markers are separated, only the model appears
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 当标记分离时，只显示模型
- en: 'Now, when they''re put together, we''re shown the 3D model and the text we
    added earlier:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当它们放在一起时，我们展示了之前添加的3D模型和文本：
- en: '![](img/65df9321-4f28-48a6-831a-76ecfafb8c56.png)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/65df9321-4f28-48a6-831a-76ecfafb8c56.png)'
- en: When the markers have joined the model and the information is displayed
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 当标记与模型结合并显示信息时
- en: Beyond this example, this kind of interaction is very useful for complex explanations
    such as chemical reactions (we have different components that behave in one way
    when they are separated and in another way when they are together), for word-forming,
    for commands (we can have markers such as Component Description, Assembly, or
    Basic Maintenance and, depending on which one we put close to the model, different
    information will appear), and more.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，这种交互对于复杂的解释非常有用，例如化学反应（当它们分离时，不同的成分以某种方式表现，当它们在一起时以另一种方式表现），对于构词，对于指令（我们可以有如组件描述、组装或基本维护等标记，并且根据我们将哪个标记靠近模型，将显示不同的信息），等等。
- en: Sharing the project
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享项目
- en: 'All the projects that are created on a device are stored locally. However,
    you may want to share one or more with your students or colleagues. For that,
    follow these steps:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在设备上创建的所有项目都存储在本地。然而，你可能希望与你的学生或同事分享其中之一或多个。为此，请按照以下步骤操作：
- en: Go to the projects window.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往项目窗口。
- en: 'Select the project and press the share icon:'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择项目并按分享图标：
- en: '![](img/6303151d-f757-4acb-8fca-f372e20af7e1.png)'
  id: totrans-271
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6303151d-f757-4acb-8fca-f372e20af7e1.png)'
- en: Sharing the selected project
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 分享所选项目
- en: 'For multiple selection, long-press on a project until the checkboxes appear
    and select as many as you want:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于多选，长按项目直到出现复选框，然后选择你想要的任意多个：
- en: '![](img/c158e4e6-40a1-49db-ab91-3b3c25c6d53d.png)'
  id: totrans-274
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c158e4e6-40a1-49db-ab91-3b3c25c6d53d.png)'
- en: Sharing multiple projects
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 分享多个项目
- en: 'A window will open so that you can share your project file via email, social
    networks, and so on:'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将打开一个窗口，你可以通过电子邮件、社交媒体等方式分享你的项目文件：
- en: '![](img/90a93b6e-6adb-48c6-9a0e-7ca55a68db77.png)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/90a93b6e-6adb-48c6-9a0e-7ca55a68db77.png)'
- en: Selecting how to share the project(s)
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 选择如何分享项目（们）
- en: 'To import another person''s project (or a project you created in another device),
    follow these steps:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 要导入另一个人的项目（或你在另一台设备上创建的项目），请按照以下步骤操作：
- en: 'Download the projects file from your email or drive, or where you had shared
    it (remember the folder you downloaded it from):'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从你的电子邮件或驱动器下载项目文件，或你分享它的地方（记住你下载它的文件夹）：
- en: Go to the projects window.
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前往项目窗口。
- en: 'Click on the download icon (the only active one when a project is not selected):'
  id: totrans-282
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击下载图标（当未选择项目时唯一的激活图标）：
- en: '![](img/39622147-27c9-49ef-bf0e-c386a4b405da.png)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/39622147-27c9-49ef-bf0e-c386a4b405da.png)'
- en: Selecting to import a project file
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 选择导入项目文件
- en: 'Browse to the folder where you downloaded the file and select it:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到下载文件的文件夹并选择它：
- en: '![](img/0f7c00c3-1014-4a8b-8f14-b586f4e35a70.png)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0f7c00c3-1014-4a8b-8f14-b586f4e35a70.png)'
- en: Choosing the project file
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 选择项目文件
- en: The project(s) will be imported automatically.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 项目（s）将自动导入。
- en: Once the new projects have been imported into your projects window, you can
    edit and delete them like any other project you have created.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦新的项目被导入到你的项目窗口中，你可以像编辑和删除其他任何你创建的项目一样编辑和删除它们。
- en: What's next?
  id: totrans-290
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接下来是什么？
- en: So far, you've learned how to create a simple marker and two marker interactions,
    and added interaction for touchscreens. To do so, we've used a 3D model and some
    text, but you can try enriching the current projects with video files or audio
    explanations.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经学会了如何创建一个简单的标记和两个标记交互，并为触摸屏添加了交互功能。为此，我们使用了3D模型和一些文本，但你也可以尝试用视频文件或音频解释来丰富当前的项目。
- en: On the other hand, Augmented Class! offers more options, including interaction
    with the camera (content changes when the camera is far from the marker and when
    it's close to it), delayed showing of the content (elements appear after a time
    and they can disappear again or not), and content editing (video and audio loop,
    text color and style, and so on). Once you've tried out all of these options and you're
    familiar with them, design and create a fully interactive project using every
    possible interaction.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，增强类！提供了更多选项，包括与摄像头的交互（当摄像头远离标记时内容改变，当摄像头靠近标记时内容改变），延迟显示内容（元素在一段时间后出现，它们可以再次消失或不消失），以及内容编辑（视频和音频循环，文本颜色和样式等）。一旦你尝试了所有这些选项并且熟悉了它们，就可以设计并创建一个使用所有可能交互的完全交互式项目。
- en: Summary
  id: totrans-293
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you have learned about two different tools for training projects.
    The first one is based on ARCore's web feature, which allows us, without having
    to code much, to add AR visualization to any 3D model that's displayed on a web
    page. The second tool, Augmented Class!, has allowed us to easily create interactive
    educational projects that can serve different purposes, such as learning the basics
    of a piece, training a maintenance engineer, and so on.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了两种不同的训练项目工具。第一个是基于ARCore的Web功能，它允许我们无需编写太多代码，就可以将AR可视化添加到任何在网页上显示的3D模型。第二个工具增强类！使我们能够轻松创建可以服务于不同目的的交互式教育项目，例如学习某个作品的基础知识，培训维护工程师等。
- en: Now, you have a better understanding of the versatility of AR, how it can be
    used on mobile devices and through web apps, and how interaction can help create
    a deeper and more valuable experience. With the skills you've acquired in this
    chapter, you can try to migrate your projects into other areas and needs, as well
    as exploring both tools even further so that you can improve the current projects.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你对AR的通用性有了更好的理解，它可以在移动设备和Web应用程序上使用，以及交互如何帮助创建更深入和更有价值的体验。凭借你在本章中获得的技术，你可以尝试将你的项目迁移到其他领域和需求，以及进一步探索这两个工具，以便你可以改进当前的项目。
- en: In the next chapter, we will start using the Unity 3D environment and some other
    AR tools that can be integrated into it. Here, you will learn how to use the EasyAR
    tool's image recognition process to create an AR catalog.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将开始使用Unity 3D环境和一些可以集成到其中的其他AR工具。在这里，你将学习如何使用EasyAR工具的图像识别过程来创建一个AR目录。
