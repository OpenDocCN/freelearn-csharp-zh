- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: 'Seamless Integration: Importing and Integrating Assets'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 无缝集成：导入和集成资源
- en: In the previous chapter, we created a prototype of our level. Now, let’s suppose
    that we have coded the game and tested it, confirming the game idea is fun. With
    that, it’s time to replace the prototype art with the real finished art. We are
    going to actually code the game in the next chapter, *Chapter 5*, *Unleashing
    the Power of C# and Visual Scripting*, but for learning purposes, let’s just skip
    that part for now. In order to use the final assets, we need to learn how to get
    them (images, 3D models, and so on), how to import them into Unity, and how to
    integrate them into our scene.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们创建了我们级别的原型。现在，让我们假设我们已经编写了游戏并进行了测试，确认游戏想法很有趣。有了这个，现在是时候用真正的完成的艺术来替换原型艺术了。我们将在下一章，*第5章*，*释放C#和视觉脚本的力量*中实际编写游戏，但为了学习目的，让我们现在先跳过这部分。为了使用最终资源，我们需要学习如何获取它们（图像、3D模型等），如何将它们导入Unity，以及如何将它们集成到我们的场景中。
- en: 'In this chapter, we will examine the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下主题：
- en: Importing assets
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入资源
- en: Integrating assets
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成资源
- en: Configuring assets
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置资源
- en: Let’s start by learning how to get assets in Unity, such as 3D models and textures.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先学习如何在Unity中获取资源，例如3D模型和纹理。
- en: Importing assets
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入资源
- en: We have different sources of assets we can use in our project. We can simply
    receive a file from our artist, download them from different free and paid asset
    sites or use the **Asset Store**, Unity’s official asset virtual store, where
    we can get free and paid assets ready to use with Unity. We will use a mix of
    downloading assets from the internet and from the Asset Store, just to use all
    possible resources.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在项目中使用不同来源的资源。我们可以简单地从我们的艺术家那里接收文件，从不同的免费和付费资源网站上下载，或者使用**资源商店**，这是Unity的官方资源虚拟商店，在那里我们可以获取免费和付费的资源，这些资源可以直接用于Unity。我们将使用从互联网和资源商店下载资源的混合方式，以便使用所有可能资源。
- en: 'In this section, we will cover the following concepts related to importing
    assets:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍与导入资源相关的以下概念：
- en: Importing assets from the internet
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从互联网导入资源
- en: Importing assets from the Asset Store
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从资源商店导入资源
- en: Importing assets from Unity packages
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从Unity包中导入资源
- en: Let’s start by exploring the first source of assets, the internet.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先探索第一个资源来源，互联网。
- en: Importing assets from the internet
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从互联网导入资源
- en: 'In terms of getting art assets for our project, let’s start with our terrain
    textures. Remember that we have our terrain painted with a grid pattern, so the
    idea is to replace that with grass, mud, rock, and other kinds of textures. To
    do that, we need images. In this case, these kinds of images are usually top-down
    views of different terrain patterns, and they have the requirement of being “tileable,”
    meaning you can repeat them with no noticeable pattern in their connections. You
    can see an example of this in the following image:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在获取项目中的艺术资源方面，让我们从我们的地形纹理开始。记住，我们的地形被涂上了网格图案，所以想法是用草地、泥、岩石和其他类型的纹理来替换它。为了做到这一点，我们需要图像。在这种情况下，这类图像通常是不同地形图案的俯视图，并且它们有“可拼接”的要求，这意味着你可以重复它们，而不会在它们的连接处出现明显的图案。你可以在以下图像中看到这个例子：
- en: '![A close-up of a green field  Description automatically generated with low
    confidence](img/B21361_04_01.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![一张绿色田野的特写  描述由低置信度自动生成](img/B21361_04_01.png)'
- en: 'Figure 4.1: Left – grass patch; Right – the same grass patch separated to highlight
    the texture tiling'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1：左 - 草地；右 - 分割后的同一草地，以突出纹理拼接
- en: The grass on the left seems to be one single big image, but if you pay attention,
    you should be able to see some patterns repeating themselves. In this case, this
    grass is just a single image repeated four times in a grid, like the one on the
    right. This way, you can cover large areas by repeating a single small image,
    saving lots of RAM on the user’s computer.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 左边的草地看起来像是一张单独的大图像，但如果你仔细观察，你应该能够看到一些图案在重复。在这种情况下，这种草地只是单个图像在网格中重复了四次，就像右边的那样。这样，你可以通过重复单个小图像来覆盖大面积，从而在用户的计算机上节省大量的RAM。
- en: 'The idea is to get these kinds of images to paint our terrain. You can get
    them from several places, but the easiest way is to use *Google Images* or any
    image search engine. Always check for copyright permissions before using something
    from these sources. Use the keywords “PATTERN seamless tileable texture” when
    searching for the texture, replacing “PATTERN” with the kind of terrain you are
    looking for, such as “grass seamless tileable texture” or “mud seamless tileable
    texture.” In this case, I typed “grass seamless tileable texture.” Once you have
    downloaded the image, you can add it to your project in several ways. The simplest
    one would be doing the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 策略是获取这些类型的图像来绘制我们的地形。你可以从几个地方获取它们，但最简单的方法是使用*Google图片*或任何图像搜索引擎。在使用这些来源的任何内容之前，请始终检查版权许可。在搜索纹理时使用关键词“PATTERN无缝平铺纹理”，用你正在寻找的地形类型替换“PATTERN”，例如“草地无缝平铺纹理”或“泥土无缝平铺纹理”。在这种情况下，我输入了“草地无缝平铺纹理”。一旦你下载了图像，你可以通过几种方式将其添加到你的项目中。最简单的一种方法是执行以下操作：
- en: Locate your image using File Explorer (Finder on Mac).
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用文件资源管理器（Mac上的Finder）定位你的图像。
- en: Locate or create the `Textures` folder in the **Project** window in Unity.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Unity的**项目**窗口中定位或创建`纹理`文件夹。
- en: Put File Explorer and the Unity Project window next to each other.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件资源管理器和Unity项目窗口并排放置。
- en: 'Drag the file from File Explorer to the `Textures` folder in the Unity Project
    window:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件从文件资源管理器拖到Unity项目窗口中的`纹理`文件夹：
- en: '![A screenshot of a computer  Description automatically generated with medium
    confidence](img/B21361_04_02_PRE_BOOK.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![计算机屏幕截图  描述自动生成，置信度中等](img/B21361_04_02_PRE_BOOK.png)'
- en: 'Figure 4.2: Texture being dragged from Windows File Explorer to Unity’s Project
    view'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2：从Windows文件资源管理器拖动纹理到Unity的项目视图
- en: For simple textures like the ones in the previous figure, any search engine
    can be helpful, but if you want to replace the player’s base geometry with detailed
    walls and doors or place enemies in your scene, you need to get 3D models. If
    you search for those in any search engine using keywords such as “free zombie
    3D model,” you will find endless free and paid 3D model sites such as TurboSquid
    and Mixamo, but those sites can be problematic because those meshes are usually
    not prepared for being used in Unity, or even games. You will find models with
    very high polygon counts, incorrect sizes or orientations, unoptimized textures,
    and so on. To prevent those problems, we’ll want to use a better source, and in
    this case, we will use Unity’s Asset Store, so let’s explore it.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于像前图中的简单纹理，任何搜索引擎都可以有所帮助，但如果你想要用详细的墙壁和门替换玩家的基础几何形状，或者在场景中放置敌人，你需要获取3D模型。如果你在搜索引擎中使用诸如“免费僵尸3D模型”等关键词搜索，你会找到无数免费和付费的3D模型网站，如TurboSquid和Mixamo，但那些网站可能会有问题，因为那些网格通常没有为在Unity中使用或甚至用于游戏而准备。你会发现具有非常高的多边形计数、不正确的尺寸或方向、未优化的纹理等问题的模型。为了避免这些问题，我们希望使用更好的来源，在这种情况下，我们将使用Unity的资产商店，让我们来探索它。
- en: Importing assets from the Asset Store
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从资产商店导入资产
- en: The Asset Store is Unity’s official asset marketplace where you can find lots
    of models, textures, sounds, and even entire Unity plugins to extend the capabilities
    of the engine. In this case, we will limit ourselves to downloading 3D models
    to replace the player’s base prototype. You will want to get 3D models with a
    modular design, meaning that you will get several pieces, such as walls, floors,
    corners, and so on. You can connect them to create any kind of scenario.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 资产商店是Unity的官方资产市场，在这里你可以找到大量的模型、纹理、声音，甚至完整的Unity插件来扩展引擎的功能。在这种情况下，我们将限制自己下载3D模型以替换玩家的基础原型。你将想要获取具有模块化设计的3D模型，这意味着你将得到几块部件，例如墙壁、地板、角落等。你可以将它们连接起来创建任何类型的场景。
- en: 'In order to do that, you must follow these steps:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，你必须遵循以下步骤：
- en: 'Click on **Window | Asset Store** in Unity, which will open your web browser
    on the site [https://assetstore.unity.com](https://assetstore.unity.com). In previous
    versions of Unity, you could see the Asset Store directly inside the editor, but
    now, it is mandatory to open it in a regular web browser, so just click the **Search
    Online** button, which will open the site [https://assetstore.unity.com/](https://assetstore.unity.com/)
    in your preferred browser. Also, you can check **Always open in browser from menu**
    to directly open the page whenever you click on **Window | Asset Store**:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Unity中点击**窗口 | 资产商店**，这将打开你的网络浏览器到网站[https://assetstore.unity.com](https://assetstore.unity.com)。在Unity的早期版本中，你可以在编辑器内直接看到资产商店，但现在，必须在一个常规网络浏览器中打开它，所以点击**在线搜索**按钮，这将在你首选的浏览器中打开网站[https://assetstore.unity.com/](https://assetstore.unity.com/)。此外，你可以检查**从菜单始终在浏览器中打开**，以便在点击**窗口
    | 资产商店**时直接打开页面：
- en: '![A picture containing text, screenshot, font  Description automatically generated](img/B21361_04_03_PRE_BOOK.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本、截图、字体的图片，自动生成描述](img/B21361_04_03_PRE_BOOK.png)'
- en: 'Figure 4.3: Asset Store moved message'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.3：资产商店移动消息
- en: 'In the top menu, click on the **3D** category to browse 3D assets:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部菜单中，点击**3D**类别来浏览3D资产：
- en: '![A picture containing text, screenshot, font  Description automatically generated](img/B21361_04_04.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本、截图、字体的图片，自动生成描述](img/B21361_04_04.png)'
- en: 'Figure 4.4: 3D assets menu'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.4：3D资产菜单
- en: On the recently opened page, click the arrow to the right of the **3D** category
    in the **All Categories** panel on the right, and then open **Environments** and
    check the **Sci-Fi** box, as we will make a future-themed game:![A picture containing
    text, screenshot, font, number  Description automatically generated](img/B21361_04_05_PRE_BOOK.png)
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在最近打开的页面上，点击右侧**所有类别**面板中**3D**类别右侧的箭头，然后打开**环境**并勾选**科幻**框，因为我们将会制作一个未来主题的游戏：![包含文本、截图、字体、数字的图片，自动生成描述](img/B21361_04_05_PRE_BOOK.png)
- en: 'Figure 4.5: 3D assets menu'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图4.5：3D资产菜单
- en: As you can see, there are several categories for finding different types of
    assets, and you can pick another one if you want to. In **Environments**, you
    will find 3D models that can be used to generate the scenery for your game.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，有几个类别用于查找不同类型的资产，如果你想的话，可以挑选另一个。在**环境**类别中，你可以找到可用于为你的游戏生成场景的3D模型。
- en: 'If you need to, you can pay for an asset, but let’s hide the paid ones for
    now. You can do that by checking the **Free Assets** checkbox from the **Pricing**
    dropdown on the right side:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要，你可以为资产付费，但现在让我们先隐藏付费的资产。你可以通过在右侧的**定价**下拉菜单中勾选**免费资产**复选框来实现：
- en: '![](img/B21361_04_06.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21361_04_06.png)'
- en: 'Figure 4.6: Free Assets option'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.6：免费资产选项
- en: In the search area, find any asset that seems to have the aesthetic you are
    looking for and click it. Remember to look out for outdoor assets, because most
    environment packs are usually interiors only. In my case, I have picked one called
    **Sci-Fi Styled Modular Pack**, which serves both interiors and exteriors. Take
    into account that that package might not exist by the time you are reading this,
    so you might need to choose another one. If you don’t find a suitable package,
    you can download and pick the asset files we used in the GitHub repository at
    [https://github.com/PacktPublishing/Hands-On-Unity-2023-Game-Development-Fourth-Edition](https://github.com/PacktPublishing/Hands-On-Unity-2023-Game-Development-Fourth-Edition).
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索区域，找到任何看起来具有你想要的审美的资产并点击它。记得要留意户外资产，因为大多数环境包通常只包含室内场景。在我的例子中，我选择了一个名为**科幻风格模块化包**的资产，它既包含室内也包含室外。请注意，当你阅读这篇文档时，这个包可能已经不存在了，所以你可能需要选择另一个。如果你找不到合适的包，你可以从GitHub仓库[https://github.com/PacktPublishing/Hands-On-Unity-2023-Game-Development-Fourth-Edition](https://github.com/PacktPublishing/Hands-On-Unity-2023-Game-Development-Fourth-Edition)下载并选择我们使用的资产文件。
- en: '![A screenshot of a video game  Description automatically generated](img/B21361_04_07_PRE_BOOK.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![视频游戏的截图，自动生成描述](img/B21361_04_07_PRE_BOOK.png)'
- en: 'Figure 4.7: Preview of Asset Store searched packages'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.7：资产商店搜索包的预览
- en: 'Now, you will see the package details in the **Asset Store** window. Here,
    you can find information regarding the package’s description, videos/images, the
    package’s contents, and the most important part – the reviews, where you can see
    whether the package is worth getting:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你将在**资产商店**窗口中看到包的详细信息。在这里，你可以找到有关包的描述、视频/图片、包的内容，以及最重要的部分——评论，你可以看到这个包是否值得购买：
- en: '![A screenshot of a video game  Description automatically generated with medium
    confidence](img/B21361_04_08_PRE_BOOK.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![视频游戏截图，描述自动生成，置信度中等](img/B21361_04_08_PRE_BOOK.png)'
- en: 'Figure 4.8: Asset Store package details'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.8：资产商店包详细信息
- en: 'If you are OK with this package, click the **Add To My Assets** button, log
    in to Unity if requested, and then click the **Open In Unity** button. You might
    be prompted to accept the browser to open Unity; if so, just accept:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您对这个包没有异议，请点击**添加到我的资产**按钮，如果需要，请登录 Unity，然后点击**在 Unity 中打开**按钮。您可能会被提示接受浏览器打开
    Unity；如果是这样，只需接受即可：
- en: '![A screenshot of a phone  Description automatically generated with low confidence](img/B21361_04_09_PRE_BOOK.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![手机截图，描述自动生成，置信度低](img/B21361_04_09_PRE_BOOK.png)'
- en: 'Figure 4.9: Switching apps'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9：切换应用
- en: 'This will open the **Package Manager** again, but this time in the **My Assets**
    mode, you should see a list of all assets you have ever downloaded from the Asset
    Store, and the one you just selected in the list:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将再次打开**包管理器**，但这次是在**我的资产**模式下，您应该能看到您从资产商店下载的所有资产的列表，以及您刚刚在列表中选择的资产：
- en: '![](img/B21361_04_10.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21361_04_10.png)'
- en: 'Figure 4.10: Package Manager showing assets'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10：包管理器显示资源
- en: Click on **Download** in the bottom-right part of the window and wait for it
    to finish. Then hit **Import**.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击窗口右下角的**下载**，等待其完成。然后点击**导入**。
- en: 'After a while, the Package Contents window will show up, allowing you to select
    exactly which assets of the package you want in your project. For now, leave it
    as is and click **Import**:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一段时间后，包内容窗口将显示出来，允许您选择项目中需要哪些包资源。现在，保持原样并点击**导入**：
- en: '![A screenshot of a computer  Description automatically generated with medium
    confidence](img/B21361_04_11.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![计算机截图，描述自动生成，置信度中等](img/B21361_04_11.png)'
- en: 'Figure 4.11: Assets to import selection'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.11：导入资源选择
- en: After some importing time, you will see all the package files in your **Project**
    window.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在导入一段时间后，您将在**项目**窗口中看到所有包文件。
- en: Having something like the Asset Store is really a great help. When I worked
    on other engines or lesser-known game development frameworks, getting content
    for the game was a challenge. There are tons of pages to get 3D models and textures,
    but they were not always optimized for video games, or even compatible with Unity.
    Of course, it is still a great skill to know what to do if the Asset Store doesn’t
    have what you need, so I recommend you also explore other possible sources of
    assets and see the kind of challenges you will face working with those.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有像资产商店这样的工具确实非常有帮助。当我在其他引擎或不太知名的游戏开发框架上工作时，获取游戏内容是一个挑战。有大量的页面可以获取 3D 模型和纹理，但它们并不总是针对视频游戏进行优化，甚至可能不与
    Unity 兼容。当然，如果资产商店没有您需要的资源，知道如何处理也是一个很好的技能，所以我建议您也探索其他可能的资产来源，并看看您将面临哪些挑战。
- en: 'Take into account that importing lots of full packages will increase your project’s
    size considerably, and that, later, you will probably want to remove the assets
    that you didn’t use. Also, if you import assets that generate errors that prevent
    you from playing the scene, just delete all the `.cs` files that come with the
    package. They are usually in folders called `Scripts`. Those are code files that
    might not be compatible with your Unity version:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，导入大量完整包会增加您项目的大小，并且之后您可能希望删除未使用的资产。此外，如果您导入的资产生成了阻止您播放场景的错误，只需删除包中附带的所有`.cs`文件。它们通常在名为`Scripts`的文件夹中。这些是可能与您的
    Unity 版本不兼容的代码文件：
- en: '![](img/B21361_04_12.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21361_04_12.png)'
- en: 'Figure 4.12: Code error warning when hitting play'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.12：播放时出现的代码错误警告
- en: 'Before you continue with this chapter, try to download a character 3D model
    using the Asset Store, following the previous steps. In order to do this, you
    must complete the same steps as we did with the level environment pack but look
    in the **3D | Characters | Humanoid** category of the Asset Store. In my case,
    I picked the **Robot Hero: PBR HP Polyart** package:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续本章之前，尝试使用资产商店下载一个角色 3D 模型，按照之前的步骤操作。为了做到这一点，您必须完成与我们之前使用的关卡环境包相同的步骤，但在资产商店的**3D
    | 角色 | 人形**类别中查找。在我的情况下，我选择了**机器人英雄：PBR HP Polyart**包：
- en: '![A screenshot of a video game  Description automatically generated](img/B21361_04_13_PRE_BOOK.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![视频游戏截图，描述自动生成](img/B21361_04_13_PRE_BOOK.png)'
- en: 'Figure 4.13: Character package used in our game'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.13：我们游戏中使用的角色包
- en: 'Now, let’s explore yet another source of Unity Assets: **Unity packages**.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们探索Unity资产的另一个来源：**Unity包**。
- en: Importing assets from Unity packages
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从Unity包中导入资产
- en: The Asset Store is not the only source of asset packages; you can get `.unitypackage`
    files from the internet, or maybe from a coworker who wants to share assets with
    you.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 资产商店并非资产包的唯一来源；您可以从互联网上获取`.unitypackage`文件，或者可能从想要与您共享资产的同事那里获取。
- en: If you want to create your own asset packages to share your assets with other
    developers, check the documentation at [https://docs.unity3d.com/Manual/AssetPackagesCreate.html](https://docs.unity3d.com/Manual/AssetPackagesCreate.html).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想创建自己的资产包以便与其他开发者共享资产，请查看[https://docs.unity3d.com/Manual/AssetPackagesCreate.html](https://docs.unity3d.com/Manual/AssetPackagesCreate.html)上的文档。
- en: 'In order to import a `.unitypackage` file, you need to do the following:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 为了导入`.unitypackage`文件，您需要执行以下操作：
- en: 'Go to the **Assets | Import Package | Custom Package...** option:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**资产 | 导入包 | 自定义包...**选项：
- en: '![](img/B21361_04_14.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21361_04_14.png)'
- en: 'Figure 4.14: Importing custom packages'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.14：导入自定义包
- en: Search for the `.unitypackage` file in the displayed dialog.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在显示的对话框中搜索`.unitypackage`文件。
- en: Click the **Import** option in the **Import** **Unity Package** window that
    appears – the one we saw earlier, in the *Importing assets from the Asset Store*
    section.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的**导入** **Unity包**窗口中点击**导入**选项——我们在*从资产商店导入资产*部分看到的那个。
- en: Now that we have imported lots of art assets, let’s learn how to use them in
    our scene.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经导入了很多艺术资产，让我们学习如何在场景中使用它们。
- en: Integrating assets
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成资产
- en: We have just imported lots of files that can be used in several ways, so the
    idea of this section is to see how Unity integrates those assets with the GameObjects
    and components that need them.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚导入了很多可以以多种方式使用的文件，所以本节的想法是看看Unity如何将这些资产与需要它们的GameObject和组件集成。
- en: 'In this section, we will cover the following concepts related to importing
    assets:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍与导入资产相关的以下概念：
- en: Integrating terrain textures
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成地形纹理
- en: Integrating meshes
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成网格
- en: Integrating materials
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成材质
- en: Let’s start by using tileable textures to cover the terrain.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先使用可平铺的纹理来覆盖地形。
- en: Integrating terrain textures
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成地形纹理
- en: 'In order to apply textures to our terrain, do the following:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将纹理应用到我们的地形上，请执行以下操作：
- en: Select the **Terrain** object.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**地形**对象。
- en: In the **Inspector**, click the brush icon of the **Terrain** component (second
    button).
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**检查器**中，点击**地形**组件的画笔图标（第二个按钮）。
- en: 'From the drop-down menu, select **Paint Texture**:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择**绘制纹理**：
- en: '![A screen shot of a computer  Description automatically generated with low
    confidence](img/B21361_04_15.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![计算机屏幕截图  描述由低置信度自动生成](img/B21361_04_15.png)'
- en: 'Figure 4.15: Terrain Paint Texture option'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.15：地形绘制纹理选项
- en: Click the **Edit Terrain Layers…** | **Create Layer** option.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**编辑地形层…** | **创建层**选项。
- en: Find and double-click the terrain texture you downloaded previously in the Texture
    Picker window that appears:![A screenshot of a computer  Description automatically
    generated with medium confidence](img/B21361_04_16_PRE_BOOK.png)
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的纹理选择器窗口中找到并双击之前下载的地形纹理：![计算机屏幕截图  描述由中等置信度自动生成](img/B21361_04_16_PRE_BOOK.png)
- en: 'Figure 4.16: Texture picker window'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图4.16：纹理选择器窗口
- en: You will see how the texture will be immediately applied to the whole terrain.
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您将看到纹理将立即应用到整个地形的上。
- en: Repeat *steps 4* and *5* to add other textures. This time, you will see that
    that texture is not immediately applied.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复*步骤4*和*步骤5*以添加其他纹理。这次，您将看到该纹理不会立即应用。
- en: In the **Terrain Layers** section, select the new texture you have created to
    start painting with that. I used a mud texture in my case.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**地形层**部分，选择您创建的新纹理以开始使用它进行绘制。我使用的是泥地纹理。
- en: Just like when you edited the terrain, in the **Brushes** section, you can select
    and configure a brush to paint the terrain.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就像编辑地形时一样，在**画笔**部分，您可以选择并配置一个画笔来绘制地形。
- en: In the **Scene** view, paint the areas you want to have that texture applied
    to.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**场景**视图中，绘制你想应用该纹理的区域。
- en: If your texture patterns are too obvious, open the **New Layer N** section at
    the top of the **Brushes** section, where *N* is a number that depends on the
    layer you have created. Each time you add a texture to the terrain, you will see
    that a new asset called **New Layer N** is created in the **Project** view. It
    holds data on the terrain layer you have created, and you can use it on other
    terrains if you need to. You can also rename that asset to give it a meaningful
    name or reorganize those assets in their own folder for organization purposes.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你的纹理图案过于明显，请打开**新层N**部分，位于**笔刷**部分的顶部，其中*N*是一个取决于你创建的层的数字。每次你将纹理添加到地形中，你都会在**项目**视图中看到创建了一个名为**新层N**的新资产。它包含有关你创建的地形层的数据，如果你需要，可以在其他地形中使用它。你还可以重命名该资产以赋予它一个有意义的名称，或者为了组织目的将这些资产重新组织到它们自己的文件夹中。
- en: 'Open the section using the triangle to its left and increase the **Size** property
    in the **Tiling Settings** section until you find a suitable size where the pattern
    is not that obvious:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用左侧的三角形打开该部分，并在**平铺设置**部分中增加**大小**属性，直到找到一个图案不明显合适的尺寸：
- en: '![](img/B21361_04_17.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21361_04_17.png)'
- en: 'Figure 4.17: Painting texture options'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.17：绘制纹理选项
- en: 'Repeat *steps* *4* to *11* until you have applied all the textures you wanted
    to add to your terrain. In my case, I’ve applied the mud texture to the river
    basin and used a rock texture for the hills. For the texture of the rocks, I reduced
    the opacity property of the brush to blend it better with the grass in the mountains.
    You can try to add a layer of snow at the top just for fun:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复步骤**4**到**11**，直到你将想要添加到地形中的所有纹理都应用完毕。在我的例子中，我已经将泥地纹理应用到河盆地，并为山丘使用了岩石纹理。对于岩石纹理，我降低了笔刷的不透明度属性，以便更好地与山脉中的草地混合。你可以尝试在顶部添加一层雪，只为增添乐趣：
- en: '![A picture containing grass, sky, landscape, outdoor  Description automatically
    generated](img/B21361_04_18.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![包含草地、天空、景观、户外场景的图片，描述自动生成](img/B21361_04_18.png)'
- en: 'Figure 4.18: Results of painting our terrain with three different textures'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.18：使用三种不同纹理绘制地形的结果
- en: Of course, we can improve this significantly using several of the advanced tools
    of the system, but let’s just keep things simple for now. Next, let’s see how
    we can integrate the 3D models into our game.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可以使用系统的几个高级工具显著提高这一点，但现在让我们保持简单。接下来，让我们看看我们如何将3D模型集成到我们的游戏中。
- en: Integrating meshes
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成网格
- en: 'If you select one of the 3D assets we downloaded previously and click the arrow
    to its right, one or more sub-assets will appear in the **Project** window. This
    means that the 3D model files we downloaded from the Asset Store (the FBX files)
    are containers of assets that define the 3D model:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择我们之前下载的3D资产之一并点击其右侧的箭头，**项目**窗口中会出现一个或多个子资产。这意味着我们从资产商店（FBX文件）下载的3D模型文件是包含定义3D模型的资产的容器：
- en: '![A screenshot of a video game  Description automatically generated](img/B21361_04_19_PRE_BOOK.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![视频游戏的截图，描述自动生成](img/B21361_04_19_PRE_BOOK.png)'
- en: 'Figure 4.19: Mesh picker'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.19：网格选择器
- en: Some of those sub-assets are meshes, which are a collection of triangles that
    define the geometry of your model. You can find at least one of these mesh sub-assets
    inside the file, but you can also find several, and that can happen if your model
    is composed of lots of pieces. For example, a car can be a single rigid mesh,
    but that won’t allow you to rotate its wheels or open its doors; it will be just
    a static car, and that can be enough if the car is only a prop in the scene, but
    if the player will be able to control it, you will probably need to modify it.
    The idea is that all pieces of your car are different GameObjects parented to
    one another in such a way that if you move one, all of them will move, but you
    can still rotate its pieces independently.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一些子资产是网格，它们是一系列定义你的模型几何形状的三角形。你可以在文件中至少找到一个这样的网格子资产，但你也可以找到几个，这可能会发生如果你的模型由很多部分组成。例如，一辆车可以是一个单一的刚性网格，但这不会让你旋转它的车轮或打开它的车门；它将只是一个静态的车，如果车只是场景中的一个道具，这可能就足够了，但如果玩家将能够控制它，你可能需要对其进行修改。想法是，你的汽车的所有部分都是不同的GameObject，彼此作为父对象，这样如果你移动一个，所有这些都会移动，但你仍然可以独立旋转它的部分。
- en: 'When you drag the 3D model file to the scene (not the sub-asset), Unity will
    automatically create all the objects for each piece and its proper parenting based
    on how the artist created those. You can select the object in the Hierarchy and
    explore all its children to see this:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将3D模型文件拖到场景中（不是子资产）时，Unity将自动为每一部分及其适当的父级创建所有对象。你可以在层次结构中选择对象并探索其所有子对象以查看这一点：
- en: '![](img/B21361_04_20.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21361_04_20.png)'
- en: 'Figure 4.20: Sub-object selection'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.20：子对象选择
- en: Also, you will find that each of those objects may have its own `Mesh Filter`
    and `Mesh Renderer` components, each one rendering just that piece of the model.
    Remember that the `Mesh Filter` is a component that has a reference to the mesh
    asset to render, so the `Mesh Filter` is the one using those mesh sub-assets we
    talked about previously. In the case of animated characters, you will find the
    `Skinned Mesh Renderer` component instead, but we will discuss that component
    later, in *Section 3**, Elevating Visuals, Effects, and Audio*.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你会发现每个对象可能都有自己的`Mesh Filter`和`Mesh Renderer`组件，每个组件仅渲染模型的那一部分。记住，`Mesh Filter`是一个具有对要渲染的网格资产的引用的组件，因此`Mesh
    Filter`是使用我们之前讨论过的那些网格子资产的那个组件。在动画角色的案例中，你会找到`Skinned Mesh Renderer`组件，但我们将稍后在*第3节*，*提升视觉效果、效果和音频*中讨论该组件。
- en: Now, when you drag the 3D model file into the scene, you will get a similar
    result as if the model were a Prefab and you were instancing it, but 3D model
    files are more limited than Prefabs because you can’t apply changes to the model.
    If you’ve dragged the object onto the scene and edited it to have the behavior
    you want, I suggest that you create a Prefab to get all the benefits we discussed
    in *Chapter 2*, *Crafting Scenes and Game Elements*, such as applying changes
    to all the instances of the Prefab and so on. Never create lots of instances of
    a model from its model file—always create them from the Prefab you created based
    on that file to allow you to add extra behavior to it.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你将3D模型文件拖入场景时，你会得到一个类似于模型是预制件并且你在实例化的结果，但3D模型文件比预制件更有限，因为你不能对模型应用更改。如果你已经将对象拖到场景中并编辑它以具有你想要的行为，我建议你创建一个预制件以获得我们在*第2章*，*构建场景和游戏元素*中讨论的所有好处，例如将更改应用于预制件的全部实例等等。永远不要从模型文件创建大量模型的实例——始终从基于该文件创建的预制件创建它们，以便你可以向其添加额外的行为。
- en: That’s the basic usage of 3D meshes. Now, let’s explore the texture integration
    process, which will give our 3D models more detail.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这是3D网格的基本用法。现在，让我们探索纹理集成过程，这将使我们的3D模型更加详细。
- en: Integrating textures
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成纹理
- en: Maybe your model already has the texture applied but has a magenta color applied
    to all of it. If this is the case, that means the asset wasn’t prepared to work
    with the **Universal Render Pipeline** (**URP**) template you selected when creating
    the project.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 可能你的模型已经应用了纹理，但整个模型都应用了洋红色。如果是这种情况，这意味着资产没有准备好与你在创建项目时选择的**通用渲染管线**（**URP**）模板一起工作。
- en: 'Some assets in the Asset Store are created by third-party editors and could
    be meant to be used in older versions of Unity:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 资产商店中的一些资产是由第三方编辑器创建的，可能旨在用于Unity的旧版本：
- en: '![A pink ladder on a white surface  Description automatically generated with
    medium confidence](img/B21361_04_21.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![白色表面上的一架粉色梯子  描述由中等置信度自动生成](img/B21361_04_21.png)'
- en: 'Figure 4.21: Mesh being rendered with erroneous material or no material at
    all'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.21：使用错误材质或根本没有材质渲染的网格
- en: 'One option to fix magenta assets is using the **Render Pipeline Converter**,
    a tool that will find them and reconfigure them (if possible) to work with URP.
    To do so, perform the following steps every time you import an asset that looks
    magenta:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 修复洋红色资产的一个选项是使用**渲染管线转换器**，这是一个工具，它将找到它们并将它们（如果可能）重新配置以与URP一起工作。为此，每次导入看起来像洋红色的资产时，都要执行以下步骤：
- en: Go to **Window | Rendering | Render Pipeline Converter**.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**窗口 | 渲染 | 渲染管线转换器**。
- en: 'Select the **Built-in to URP** option from the dropdown:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择**内置到URP**选项：
- en: '![A screenshot of a phone  Description automatically generated with low confidence](img/B21361_04_22_PRE_BOOK.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![手机的截图  描述由低置信度自动生成](img/B21361_04_22_PRE_BOOK.png)'
- en: 'Figure 4.22: Upgrading older assets to URP'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.22：将旧资产升级到URP
- en: Scroll until you see the **Material Upgrade** checkbox and check it.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动直到你看到**材质升级**复选框并勾选它。
- en: 'Click the **Initialize Converters** button in the bottom-left corner. This
    will display a list of all the materials that need to be upgraded. We will discuss
    materials more later:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左下角点击**初始化转换器**按钮。这将显示所有需要升级的材料列表。我们稍后会更多地讨论材料：
- en: '![A screenshot of a computer  Description automatically generated with low
    confidence](img/B21361_04_23_PRE_BOOK.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![计算机屏幕截图  描述由低置信度自动生成](img/B21361_04_23_PRE_BOOK.png)'
- en: 'Figure 4.23: Fixing material to work with URP'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.23：修复材料以与URP一起工作
- en: Click the **Convert Assets** button and see if the model was fixed.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**转换资产**按钮，查看模型是否已修复。
- en: You will need to close the window for it to detect new magenta assets that weren’t
    there before opening it. The con of this method is that, sometimes, it won’t upgrade
    the material properly. Luckily, we can fix this by reapplying the textures of
    the objects manually. Even if your assets work just fine, I suggest that you reapply
    your textures anyway, just to learn more about the concept of materials.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要关闭窗口以便检测之前打开时未存在的新的洋红色资产。这种方法的一个缺点是，有时它不会正确升级材料。幸运的是，我们可以通过手动重新应用物体的纹理来修复这个问题。即使您的资产工作得很好，我也建议您无论如何都重新应用您的纹理，这样您可以更多地了解材料的概念。
- en: A texture is not applied directly to the object. That’s because the texture
    is just one single configuration of all the ones that control the aspect of your
    model. In order to change the appearance of a model, you must create a **material**.
    A material is a separate asset that contains lots of settings about how Unity
    should render your object. You can apply that asset to several objects that share
    the same graphics settings, and if you change the settings of the material, it
    will affect all the objects that are using it. It works like a graphics profile.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 纹理不是直接应用到物体上的。这是因为纹理只是控制模型外观的所有配置中的一个。为了改变模型的外观，您必须创建一个**材料**。材料是一个独立的资产，其中包含大量关于Unity如何渲染您的对象的设置。您可以将该资产应用到具有相同图形设置的多个对象上，如果您更改材料的设置，它将影响所有使用它的对象。它就像一个图形配置文件。
- en: 'In order to create a material to apply the textures of your object, you need
    to follow these steps:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建一个应用物体纹理的材料，您需要遵循以下步骤：
- en: In the **Project** window, click the plus (**+**) button in the top-left part
    of the window.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**项目**窗口中，点击窗口左上角的加号（**+**）按钮。
- en: Click the **Material** option in that menu.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在该菜单中点击**材料**选项。
- en: Name your material. This is usually the name of the asset we will be applying
    the material to (for example, `Car`, `Ship`, `Character`, and so on).
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的材料命名。这通常是我们要应用材料的资产名称（例如，`Car`、`Ship`、`Character`等等）。
- en: Drag the created material to the model instance on your scene. If you move the
    mouse with the dragged asset over the object, you will be able to see a preview
    of how it will look with that material, which would be white in the case of a
    new material. We will change that in the following steps.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将创建的材料拖动到场景中的模型实例上。如果您在拖动资产的同时移动鼠标，您将能够看到该材料应用后的预览，对于新材料来说将是白色。我们将在以下步骤中更改这一点。
- en: Apply the material by releasing the mouse.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过释放鼠标来应用材料。
- en: If your object has several parts, you will need to drag the material to each
    part. Dragging the material will change the material’s property of the `MeshRenderer`
    component of the object you have dragged.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的物体有多个部分，您需要将材料拖动到每个部分。拖动材料将改变您拖动的物体的`MeshRenderer`组件的材料属性。
- en: Select the material and click the circle to the left of the **Base Map** property
    (see *Figure 4.23*).
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择材料并点击**基础图**属性左侧的圆圈（见*图4.23*）。
- en: 'In the **Texture Selector**, click on the texture of your model. It can be
    complicated to locate the texture just by looking at it. Usually, the name of
    the texture will match the model’s name. If not, you will need to try different
    textures until you see one that fits your object. Also, you may find several textures
    with the same name as your model. Just pick the one that seems to have the proper
    colors instead of the ones that look black and white or light blue; we will use
    those later:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**纹理选择器**中，点击您模型的纹理。仅通过观察可能很难找到纹理。通常，纹理的名称将与模型名称匹配。如果不匹配，您需要尝试不同的纹理，直到找到适合您物体的纹理。此外，您可能会发现几个与您的模型名称相同的纹理。只需选择看起来颜色合适的纹理，而不是那些看起来是黑白或浅蓝色的纹理；我们稍后会使用那些：
- en: '![A screenshot of a computer  Description automatically generated with medium
    confidence](img/B21361_04_24_PRE_BOOK.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![计算机截图，描述自动生成，中等置信度](img/B21361_04_24_PRE_BOOK.png)'
- en: 'Figure 4.24: Base Map property of URP materials'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.24：URP材质的基础图属性
- en: With this, you have successfully applied the texture to the object through a
    material. For each object that uses the same texture, just drag the same material.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，您已经成功通过材质将纹理应用到对象上。对于使用相同纹理的每个对象，只需拖动相同的材质即可。
- en: 'Materials have a concept like Prefab Variants, called Material Variants. It
    consists of the same idea of creating a base material and then alternative versions
    of it with small changes. For more information check the following documentation:
    [https://docs.unity3d.com/2022.2/Documentation/Manual/materialvariant-landingpage.html](https://docs.unity3d.com/2022.2/Documentation/Manual/materialvariant-landingpage.html),
    and the following blog post: [https://blog.unity.com/engine-platform/material-variants-the-solution-for-managing-complex-material-libraries](https://blog.unity.com/engine-platform/material-variants-the-solution-for-managing-complex-material-libraries).'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 材质有一个类似于预制件变体的概念，称为材质变体。它包含创建一个基础材质，然后通过对其进行微小修改来创建其替代版本的想法。有关更多信息，请参阅以下文档：[https://docs.unity3d.com/2022.2/Documentation/Manual/materialvariant-landingpage.html](https://docs.unity3d.com/2022.2/Documentation/Manual/materialvariant-landingpage.html)，以及以下博客文章：[https://blog.unity.com/engine-platform/material-variants-the-solution-for-managing-complex-material-libraries](https://blog.unity.com/engine-platform/material-variants-the-solution-for-managing-complex-material-libraries)。
- en: Now that we have a basic understanding of how to apply the model textures, let’s
    learn how to properly configure the import settings before spreading models all
    over the scene.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经对如何应用模型纹理有了基本的了解，让我们学习如何在将模型散布到场景之前正确配置导入设置。
- en: Configuring assets
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置资产
- en: As we mentioned earlier, artists are used to creating art assets outside Unity,
    and that can cause differences between how an asset is seen from that tool and
    how Unity will import it. As an example, 3D Studio Max can work in centimeters,
    inches, and so on, while Unity works in meters. We have just downloaded and used
    lots of assets, but we have skipped the configuration step to solve those discrepancies,
    so let’s take a look at this now.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们之前提到的，艺术家习惯于在Unity之外创建艺术资产，这可能会导致从该工具看到的资产与Unity导入的资产之间存在差异。例如，3D Studio
    Max可以在厘米、英寸等长度单位下工作，而Unity使用米作为单位。我们刚刚下载并使用了大量资产，但跳过了配置步骤以解决这些差异，现在让我们来看看这个问题。
- en: 'In this section, we will cover the following concepts related to importing
    assets:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍与导入资产相关的以下概念：
- en: Configuring meshes
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置网格
- en: Configuring textures
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置纹理
- en: Let’s start by discussing how to configure 3D meshes.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先讨论如何配置3D网格。
- en: Configuring meshes
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置网格
- en: 'In order to change the model’s import settings, you need to locate the model
    file you have downloaded. There are several file extensions that contain 3D models,
    with the most common one being the `.fbx` file, but you can encounter others such
    as `.obj`,`.3ds`, `.blender`, `.mb`, and so on. You can identify whether the file
    is a 3D mesh via its extension:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更改模型的导入设置，您需要定位您下载的模型文件。包含3D模型的文件扩展名有多种，其中最常见的是`.fbx`文件，但您可能会遇到其他格式，如`.obj`、`.3ds`、`.blender`、`.mb`等。您可以通过文件的扩展名来识别文件是否为3D网格：
- en: '![A screenshot of a computer  Description automatically generated with medium
    confidence](img/B21361_04_25_PRE_BOOK.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![计算机截图，描述自动生成，中等置信度](img/B21361_04_25_PRE_BOOK.png)'
- en: 'Figure 4.25: Selected asset path extension'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.25：所选资产路径扩展
- en: 'Also, you can click the asset and check in the **Inspector** for the tabs you
    can see in the following screenshot:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您还可以单击资产，并在**检查器**中查看以下截图所示的选项卡：
- en: '![A picture containing text, screenshot, font  Description automatically generated](img/B21361_04_26_PRE_BOOK.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本、截图、字体的图片，描述自动生成](img/B21361_04_26_PRE_BOOK.png)'
- en: 'Figure 4.26: Mesh materials settings'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.26：网格材质设置
- en: Now that you have located the 3D mesh files, you can configure them properly.
    Right now, the only thing we should take into account is the proper scale of the
    model. Artists are used to working with different software with different setups;
    maybe one artist created the model using meters as its metric unit, while other
    artists used inches, feet, and so on. When importing assets that have been created
    in different units, they will probably be unproportioned, which means we will
    get results such as humans being bigger than buildings and so on.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经找到了3D网格文件，你可以正确地配置它们。目前，我们唯一需要考虑的是模型的适当比例。艺术家们习惯于使用不同软件和不同设置进行工作；也许一位艺术家使用米作为其度量单位创建了模型，而其他艺术家则使用了英寸、英尺等等。当导入使用不同单位创建的资产时，它们可能会不成比例，这意味着我们可能会得到人类比建筑物更大的结果等等。
- en: 'The best solution is to just ask the artist to fix that. If all the assets
    were authored in your company, or if you used an external asset, you could ask
    the artist to fix it to the way your company works, but right now, you are probably
    a single developer learning Unity by yourself. Luckily, Unity has a setting that
    allows you to rescale the original asset before using it in Unity. In order to
    change the **Scale Factor** of an object, you must do the following:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳解决方案是直接要求艺术家进行修复。如果所有资产都是你公司创作的，或者如果你使用了外部资产，你可以要求艺术家按照你公司的标准进行修复，但你现在可能是一个自学Unity的单个开发者。幸运的是，Unity有一个设置允许你在Unity中使用之前重新调整原始资产的比例。为了改变对象的**缩放因子**，你必须执行以下操作：
- en: Locate the 3D mesh in your Project window.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的项目窗口中定位3D网格。
- en: Drag it to the scene. You will see that an object will appear in your scene.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其拖动到场景中。你会看到你的场景中会出现一个对象。
- en: Create a capsule using the **GameObject | 3D Object | Capsule option**.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**GameObject | 3D Object | Capsule选项**创建一个胶囊。
- en: 'Put the capsule next to the model you dragged into the editor. See if the scale
    makes sense. The idea is that the capsule represents a human being (2 meters tall)
    so that you have a reference for the scale:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将胶囊放在你拖入编辑器的模型旁边。看看这个比例是否合理。想法是胶囊代表一个人类（2米高），这样你就有了一个比例的参考：
- en: '![A cartoon of a robot  Description automatically generated with low confidence](img/B21361_04_27.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![一个机器人的卡通  描述由低置信度自动生成](img/B21361_04_27.png)'
- en: 'Figure 4.27: Using a capsule as reference for scale'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.27：使用胶囊作为参考来调整比例
- en: If the model is bigger or smaller than expected, select the mesh again in the
    **Project** window (not the GameObject instance you dragged to the editor) and
    you will see some import settings in the **Inspector**. In the image, we can see
    that the model has a good relative size, but just for learning purposes, I recommend
    proceeding with the next steps.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果模型比预期的大或小，请在**项目**窗口中再次选择网格（而不是你拖到编辑器中的GameObject实例）并你将在**检查器**中看到一些导入设置。在图片中，我们可以看到模型有一个良好的相对尺寸，但仅为了学习目的，我建议继续进行下一步。
- en: 'Look for the **Scale Factor** property and modify it, increasing it if your
    model is smaller than expected, or reducing it in the opposite case:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找**缩放因子**属性并修改它，如果你的模型比预期的小，则增加它；如果相反，则减少它：
- en: '![A screenshot of a computer  Description automatically generated with medium
    confidence](img/B21361_04_28_PRE_BOOK.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![计算机的截图  描述由中等置信度自动生成](img/B21361_04_28_PRE_BOOK.png)'
- en: 'Figure 4.28: Model mesh options'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.28：模型网格选项
- en: Click the **Apply** button at the bottom of the **Inspector**.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**检查器**底部的**应用**按钮。
- en: Repeat *steps 6* and *7* until you get the desired result.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复*步骤6*和*步骤7*，直到你得到期望的结果。
- en: There are plenty of other options to configure, but let’s stop here for now.
    Next, let’s discuss how to properly configure the textures of our models.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多其他选项可以配置，但现在我们先到此为止。接下来，让我们讨论如何正确配置我们模型的纹理。
- en: Configuring textures
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置纹理
- en: Again, there are several settings to configure here, but let’s focus on **Texture
    Size** for now. The idea is to use the size that best fits the usage of that texture,
    and that depends on lots of factors.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，这里有许多设置可以配置，但让我们现在先关注**纹理大小**。想法是使用最适合该纹理大小的尺寸，这取决于许多因素。
- en: The first factor to take into account is the distance from the object to the
    camera. If you are creating a first-person game, you will probably encounter many
    objects up close – enough to justify the use of a big texture. However, if you
    have several distant objects, such as billboards at the top of buildings, which
    you will never be near enough to see the details of, you can use smaller textures
    for that.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 需要考虑的第一个因素是对象与相机之间的距离。如果你正在创建第一人称游戏，你可能会遇到很多近距离的对象——足够多，可以证明使用大纹理的合理性。然而，如果你有几个远距离的对象，比如建筑物顶部的广告牌，你永远不会足够近以看到细节，你可以为这些对象使用较小的纹理。
- en: Another thing to take into account is the importance of the object. If you are
    creating a racing game, you will probably have lots of 3D models that will be
    onscreen for a few seconds and the player will never focus on them; they will
    be paying attention to the road and other cars. In this case, an object such as
    a trash can on the street could have little texture and a low-polygon model and
    the user will never notice that (unless they stop to appreciate the scenery),
    but that’s acceptable.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要考虑的因素是对象的重要性。如果你正在创建赛车游戏，你可能会有很多3D模型将在屏幕上显示几秒钟，玩家永远不会关注它们；他们会关注道路和其他车辆。在这种情况下，例如，街道上的垃圾桶可能只有很少的纹理和低多边形模型，用户永远不会注意到（除非他们停下来欣赏风景），但这是可以接受的。
- en: 'Finally, you can have a game with a top-down view that will never zoom in on
    the scene, so the same object that has a big texture in first-person games will
    have a less detailed texture here. In the following images, you can see that the
    smaller ship could use a smaller texture:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以玩一个俯视视角的游戏，它永远不会放大场景，所以在这里，与第一人称游戏中具有大纹理的相同对象将具有更少的纹理细节。在以下图像中，你可以看到较小的飞船可以使用较小的纹理：
- en: '![A picture containing art, cartoon, graphic design  Description automatically
    generated](img/B21361_04_29.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![包含艺术、卡通、图形设计的图片，描述自动生成](img/B21361_04_29.png)'
- en: 'Figure 4.29: The same model seen at different distances'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.29：从不同距离看到的相同模型
- en: 'The ideal size of the texture is relative. The usual way to determine the right
    size is by changing the dimensions until you find the smallest possible size exhibiting
    decent quality when the object is seen from the nearest possible position in the
    game. This is a trial-and-error method and you can do the following:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 纹理的理想尺寸是相对的。确定正确尺寸的常用方法是改变尺寸，直到你找到在游戏中从最近的位置看到对象时，可以展示良好质量的可能最小尺寸。这是一个试错方法，你可以做以下操作：
- en: Locate the 3D model and put it into the scene.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位3D模型并将其放入场景中。
- en: Put the **Scene view** camera in a position that shows the object at its largest
    possible in-game size. As an example, in a **first-person-shooter** (**FPS**)
    game, the camera can be almost right next to the object, while in a top-down game,
    it would be a few meters above the object. Again, that depends on your game. Remember
    our game is a third-person shooter.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**场景视图**相机放置在可以显示对象在游戏中可能最大尺寸的位置。例如，在一个**第一人称射击**（**FPS**）游戏中，相机可以几乎紧挨着对象，而在俯视游戏中，它会在对象上方几米处。再次强调，这取决于你的游戏。记住，我们的游戏是第三人称射击游戏。
- en: Find and select the texture that the object is using in the folders that were
    imported with the package or from the material you created previously. They usually
    have `.png`, `.jpg`, or `.tif` extensions.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在与包一起导入的文件夹中或从你之前创建的材料中找到并选择对象使用的纹理。它们通常具有`.png`、`.jpg`或`.tif`扩展名。
- en: In the Inspector, look at the **Max Size** property and reduce it, trying the
    next smaller value. For example, if the texture is **2048**, try **1024**.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在检查器中查看**最大尺寸**属性并减小它，尝试下一个更小的值。例如，如果纹理是**2048**，尝试**1024**。
- en: Click **Apply** and check the **Scene view** to see if the quality has decreased
    dramatically or if the change is unnoticeable. You will be surprised.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**应用**并检查**场景视图**，看看质量是否大幅下降，或者变化是否不明显。你会感到惊讶。
- en: Repeat *Steps 4* to *5* until you get a bad-quality result. Once you do, just
    increase the previous resolution to get an acceptable quality. Of course, if you
    are targeting PC games, you can expect higher resolutions than mobile games.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复*步骤4*到*步骤5*，直到你得到一个质量较差的结果。一旦你做到了，只需提高之前的分辨率以获得可接受的质量。当然，如果你针对的是PC游戏，你可以期望比移动游戏更高的分辨率。
- en: Now that you have imported, integrated, and configured your objects, let’s create
    our player’s base with those assets.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经导入、集成和配置了你的对象，让我们使用这些资产创建玩家的基地。
- en: Assembling the scene
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组装场景
- en: 'Let’s start replacing our prototype base using the environment pack we have
    downloaded. To do that, you must do the following:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始使用我们下载的环境包替换我们的原型基础。为此，您必须执行以下操作：
- en: 'In the **Environment** pack we imported before, locate the folder that contains
    all the models for the different pieces of the scene and try to find a corner.
    You can use the search bar in the **Project** window to search for the `corner`
    keyword:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们之前导入的**环境**包中，找到包含场景中不同部件所有模型的文件夹，并尝试找到一个角落。您可以在**项目**窗口中的搜索栏中搜索`角落`关键词：
- en: '![A screenshot of a computer  Description automatically generated](img/B21361_04_30.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21361_04_30.png)'
- en: 'Figure 4.30: Mesh picker'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.30：网格选择器
- en: In my specific case, I have the outer and inner sides of the corner as separate
    models, so I need to put them together.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我的具体情况下，角落的外侧和内侧是分开的模型，所以我需要将它们组合在一起。
- en: 'Place it in the same position as any corner of your prototype base:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其放置在原型基础任何角落相同的位置：
- en: '![](img/B21361_04_31.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21361_04_31.png)'
- en: 'Figure 4.31: Positioning the mesh on a placeholder for replacement'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.31：在占位符上定位网格以替换
- en: Find the proper model that will connect with that corner to create walls. Again,
    you can try searching for the `wall` keyword in the **Project** window.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到与该角落连接以创建墙壁的正确模型。同样，您可以在**项目**窗口中尝试搜索`墙壁`关键词。
- en: Instance it and position it so that it’s connected to the corner. Don’t worry
    if it doesn’t fit perfectly; you will go over the scene when necessary later.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实例化它，并将其定位以便与角落连接。如果它没有完美地匹配，不要担心；您将在必要时返回场景。
- en: You can select an object and press the *V* key to select a vertex of the selected
    object. Then you can drag it, click on the rectangle in the middle of the translate
    gizmo, and direct it to a vertex of another object. This is called **vertex snapping**.
    It allows you to connect two pieces of the scene exactly as intended.
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以选择一个对象并按*V*键选择所选对象的顶点。然后您可以拖动它，点击变换工具中部的矩形，并将其指向另一个对象的顶点。这被称为**顶点吸附**。它允许您将场景中的两个部件精确地连接起来。
- en: '![A picture containing screenshot, table, design  Description automatically
    generated](img/B21361_04_32.png)'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](img/B21361_04_32.png)'
- en: 'Figure 4.32: Connecting two modules'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图4.32：连接两个模块
- en: Repeat the walls until you reach the other end of the player base and position
    another corner. You might get a wall that’s a little bit larger or smaller than
    the original prototype, but that’s fine:![A picture containing composite material,
    design  Description automatically generated](img/B21361_04_33.png)
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复墙壁，直到到达玩家基地的另一端，并放置另一个角落。您可能会得到比原始原型略大或略小的墙壁，但这没关系：![包含复合材料、设计的图片  描述自动生成](img/B21361_04_33.png)
- en: 'Figure 4.33: Chain of connected modules'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图4.33：连接的模块链
- en: You can move an object while pressing the *Ctrl* key (*Command* on Mac) to snap
    the object’s position so that the clones of the wall can be easily located right
    next to the others. Another option is to manually set the **Position** property
    of the **Transform** component in the **Inspector**.
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以在按*Ctrl*键（在Mac上为*Command*）的同时移动对象，以便将对象的定位吸附到顶点，以便可以轻松地找到墙壁的克隆体。另一个选项是在**检查器**中手动设置**变换**组件的**位置**属性。
- en: Complete the rest of the walls and destroy the prototype cube we made in ProBuilder.
    Remember that this process is slow and you will need to be patient.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成剩余的墙壁，并销毁在ProBuilder中制作的原型立方体。请记住，这个过程很慢，您需要耐心。
- en: 'Add floors by looking for floor tiles and repeating them all over the surface:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过寻找地板砖并在整个表面上重复它们来添加地板：
- en: '![A picture containing grate  Description automatically generated](img/B21361_04_34.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21361_04_34.png)'
- en: 'Figure 4.34: Floor modules with a hole for the pit'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.34：带有坑洞的地板模块
- en: Add whatever details you want to add with other modular pieces in the package.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用包中的其他模块化部件添加您想要添加的任何细节。
- en: 'Put all those pieces in a container object called `Base`. Remember to create
    an empty object and drag the base pieces into it:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有这些部件放入一个名为`Base`的容器对象中。请记住创建一个空对象并将基础部件拖入其中：
- en: '![A screenshot of a computer  Description automatically generated with medium
    confidence](img/B21361_04_35_PRE_BOOK.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![计算机截图  描述自动生成，置信度中等](img/B21361_04_35_PRE_BOOK.png)'
- en: 'Figure 4.35: Mesh sub-assets'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.35：网格子资产
- en: With this, we learned how to create a scene easily by using a module approach,
    assembling the different pieces by using Unity’s snapping features. After a lot
    of practice doing this, you will slowly gain experience with the common pitfalls
    and good practices of modular scene design. All the packages have a different
    modular design in mind, so you will need to adapt to them.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，我们学会了如何通过模块化方法轻松创建场景，利用Unity的吸附功能组装不同的部件。经过大量实践，你将逐渐积累关于模块化场景设计的常见陷阱和良好实践的宝贵经验。所有包都考虑到了不同的模块化设计，因此你需要适应它们。
- en: Summary
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to import models and textures and integrate
    them into our scene. We discussed how to apply textures to the terrain, how to
    replace our prototype mesh with modular models, how to apply textures to those,
    and how to properly configure the assets, all while taking several criteria into
    account according to the usage of the object.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何导入模型和纹理并将它们集成到我们的场景中。我们讨论了如何将纹理应用到地形上，如何用模块化模型替换我们的原型网格，如何将这些纹理应用到模型上，以及如何根据对象的用途适当配置资产，同时考虑到多个标准。
- en: With this, we have finished *Section 1*, *Getting Started with Unity* of this
    book and discussed several basic Unity concepts we will use throughout the book.
    In *Section 2*, *Mastering Programming and Gameplay Mechanics*, we will start
    coding the gameplay of our game, like the player’s movement and the health system.
    We will start learning how to create our own components to add behavior to our
    objects and the basic anatomy of a script.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '通过这种方式，我们已经完成了本书的*第1部分*，*Unity入门*，并讨论了我们在整本书中将会使用的几个基本Unity概念。在*第2部分*，*精通编程和游戏玩法机制*中，我们将开始编写游戏的游戏玩法，如玩家的移动和健康系统。我们将开始学习如何创建自己的组件来为我们的对象添加行为，以及脚本的基本结构。 '
- en: Learn more on Discord
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Discord上了解更多信息
- en: 'Read this book alongside other users, Unity game development experts, and the
    author himself. Ask questions, provide solutions to other readers, chat with the
    author via Ask Me Anything sessions, and much more. Scan the QR code or visit
    the link to join the community:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他用户、Unity游戏开发专家以及作者本人一起阅读这本书。提出问题，为其他读者提供解决方案，通过Ask Me Anything（问我任何问题）环节与作者聊天，等等。扫描二维码或访问链接加入社区：
- en: '[https://packt.link/unitydev](https://packt.link/unitydev)'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/unitydev](https://packt.link/unitydev)'
- en: '![](img/QR_Code1498477041053909218.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![二维码](img/QR_Code1498477041053909218.png)'
