["```cs\n      using System.Net;\n      using System.Net.Sockets;\n      using System.Collections.Generic;\n```", "```cs\n      public List<string> GetMyIPAddress()\n      {\n          var hostName = Dns.GetHostName();\n          var hostAddress = Dns.GetHostAddresses(hostName);\n\n          var ipList = new List<string>();\n\n          foreach (var ipaddres in hostAddress)\n          {\n              if (ipaddres.AddressFamily == AddressFamily.InterNetwork)\n              {\n                  ipList.Add(ipaddres.ToString());\n              }\n          }\n\n          return ipList;\n      }\n```", "```cs\n      using Chapter7.Networking.ReadIPLib;\n```", "```cs\n      var ipLib = new IPReader();\n      IPListBox.Items.AddRange(ipLib.GetMyIPAddress().ToArray());\n```", "```cs\n      using System.Net;\n      using System.Net.Mail;\n```", "```cs\n      public string From { get; set; }\n      public string To { get; set; }\n      public string Subject { get; set; }\n      public string Body { get; set; }\n```", "```cs\n      public void Send()\n      {\n          var toAddress = new MailAddress(To);\n          var fromAddress = new MailAddress(From);\n\n          var message = new MailMessage(fromAddress, toAddress);\n          message.Subject = Subject;\n          message.Body = Body;\n\n          var credentials = new NetworkCredential(\"<your_smtp_username>\", \"<your_smtp_password>\"); \n\n          var smtp = new SmtpClient();\n          smtp.Host = \"<smtp_host>\";\n          smtp.Port = <port>;\n          smtp.EnableSsl = true;\n          smtp.Credentials = credentials;\n          smtp.DeliveryMethod = SmtpDeliveryMethod.Network;\n\n          smtp.Send(message); \n      }\n```", "```cs\n      using Chapter7.MailBox.MailerLib;\n```", "```cs\n      var mailer = new SendMail();\n\n      mailer.From = FromTextBox.Text;\n      mailer.To = ToTextBox.Text;\n      mailer.Subject = SubjectTextBox.Text;\n      mailer.Body = BodyTextBox.Text;\n\n      mailer.Send();\n\n      MessageBox.Show(\"Your mail has been sent\");\n```", "```cs\n      using System.Net.Http;\n      using System.Threading.Tasks;\n```", "```cs\n      private string _serviceURL;\n```", "```cs\n      public PostsReader(string serviceURL)\n      {\n          _serviceURL = serviceURL;\n      }\n```", "```cs\n      public async Task<string> GetPostById(int id)\n      {\n          string output; \n\n          using (var httpClient = new HttpClient())\n          {\n\n              Uri uri = new Uri($\"{_serviceURL}/posts/{id}\");\n              using (HttpResponseMessage response = \n                  await httpClient.GetAsync(uri))\n              {\n                  output = await response.Content.ReadAsStringAsync();\n              }\n          }\n\n          return output;\n      }\n```", "```cs\n      using System.Threading.Tasks;\n      using System.Web.Script.Serialization;\n      using Chapter7.RestAPI.RestLib;\n```", "```cs\n      public async Task<ActionResult> Index()\n```", "```cs\n      var service = \"https://jsonplaceholder.typicode.com\";\n      var restClient = new PostsReader(service);\n\n      var result = await restClient.GetPostById(1);\n      ViewBag.Post = new JavaScriptSerializer().Deserialize<Dictionary\n          <string, string>>(result);\n\n      return View();\n```", "```cs\n      @{\n          var post = (Dictionary<string, string>)ViewBag.Post;\n      }\n\n      @foreach (var item in post)\n      {\n          <p>\n              <strong>@item.Key</strong> : @item.Value\n          </p>\n      }\n```"]