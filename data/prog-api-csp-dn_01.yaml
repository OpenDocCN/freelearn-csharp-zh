- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Getting Started
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入门
- en: Let’s start by making sure you’re in the right place. This is a book about creating
    **Application Programming Interfaces** ( **APIs** ) using .NET. Along the way,
    we will look at a very simple backend (database) and frontend (user interface)
    and the tools we use to create and test APIs.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先确保你处于正确的位置。这是一本关于使用.NET创建**应用程序编程接口**（**APIs**）的书。在这个过程中，我们将查看一个非常简单的后端（数据库）和前端（用户界面），以及我们用来创建和测试API的工具。
- en: The core responsibility of an API is to decouple an application (web, mobile,
    and so on) from the backend (database, another API, and more). The API sits between
    the frontend (the user interface to your application) and the backend (for our
    purposes, a database).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: API的核心职责是将应用程序（Web、移动等）从后端（数据库、另一个API等）解耦。API位于前端（你的应用程序的用户界面）和后端（在我们的情况下，是一个数据库）之间。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: What software you will need
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你将需要的软件
- en: How to obtain the software you need
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何获取所需的软件
- en: Installing Visual Studio
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Visual Studio
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To proceed through this book, you will need a computer running Windows (10 or
    11) and an internet connection. It is best if your computer has at least 16 GB
    of memory, and, of course, you’ll need room on your disk for the software and
    for the code you will write.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了继续阅读本书，你需要一台运行Windows（10或11）的计算机和互联网连接。最好你的计算机至少有16GB的内存，当然，你还需要在磁盘上为软件和你要编写的代码腾出空间。
- en: You can create APIs on any platform (e.g., Linux) and use any development environment
    (e.g., Visual Studio Code instead of Visual Studio). This book, however, will
    focus on Visual Studio and Windows as they are the most popular and arguably the
    most powerful way to create . NET APIs.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在任何平台上创建API（例如，Linux）并使用任何开发环境（例如，使用Visual Studio Code而不是Visual Studio）。然而，本书将专注于Visual
    Studio和Windows，因为它们是最受欢迎的，并且可以说是创建.NET API最强大和最有效的方式。
- en: 'The code files for this book are available in the book’s GitHub repository:
    [https://github.com/PacktPublishing/Programming-APIs-with-C-Sharp-and-.NET](https://github.com/PacktPublishing/Programming-APIs-with-C-Sharp-and-.NET)
    .'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的相关代码文件可在GitHub仓库中找到：[https://github.com/PacktPublishing/Programming-APIs-with-C-Sharp-and-.NET](https://github.com/PacktPublishing/Programming-APIs-with-C-Sharp-and-.NET)
    。
- en: Where does the API fit in?
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: API适合在哪里？
- en: 'When you are creating a decoupled application, your principal parts are:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当你创建一个解耦的应用程序时，你的主要部分包括：
- en: The front end
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前端
- en: The back end
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后端
- en: The middleware
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中间件
- en: A typical front end might be a web application, a mobile application, or other
    ways of displaying data.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的前端可能是一个Web应用、移动应用或其他显示数据的方式。
- en: A typical backend might be a database or another service.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的后端可能是一个数据库或其他服务。
- en: The middleware sits between the front end and the back end. The most important
    middleware is the API. The job of the API is to ensure that the front end and
    back end are decoupled – that is, you can modify one without affecting the other.
    This is simply good programming practice and will save you hours (or months) of
    rewriting should either of these change (which they will!).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 中间件位于前端和后端之间。最重要的中间件是API。API的职责是确保前端和后端解耦——也就是说，你可以修改其中一个而不会影响另一个。这仅仅是良好的编程实践，并且如果其中任何一个发生变化（它们会的！），这将为你节省数小时（或数月）的重新编写代码的时间。
- en: The players
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参与者
- en: Typically, the backend and the frontend are created by different teams, though,
    of course, you can have one developer creating it all. We’re also going to restrict
    our backend to a simple database, though any source of data can be a backend.
    Finally, we’re not going to build a full frontend (that would be a distraction
    from the point of this book) but, rather, we’re going to use a tool, **Postman**
    , to mimic a frontend. There will be more on Postman throughout this book.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，后端和前端由不同的团队创建，尽管当然可以由一个开发者完成所有工作。我们还将把后端限制为一个简单的数据库，尽管任何数据源都可以作为后端。最后，我们不会构建一个完整的客户端（那会分散本书的重点），而是将使用工具**Postman**来模拟前端。本书中将有更多关于Postman的内容。
- en: Getting set up
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置环境
- en: You can create your backend, API, and frontend on any operating system you like.
    For this book, we’ll be creating all three on Windows, using **Visual Studio 2022**
    , the latest Postman, and **Dapper** as a simple **Object Relational Mapper**
    ( **ORM** ) to make our lives easier. There are a few other simple tools we’ll
    be using, so let’s get you set up.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在您喜欢的任何操作系统上创建您的后端、API 和前端。对于本书，我们将使用 Windows 创建所有三个，使用 **Visual Studio 2022**，最新的
    Postman，以及 **Dapper** 作为简单的 **对象关系映射器**（**ORM**），以使我们的工作更轻松。我们还将使用一些其他简单的工具，让我们为您设置好。
- en: Downloading the free software you need
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载您需要的免费软件
- en: 'To get started, if you don’t have Visual Studio installed, go to [https://visualstudio.com](https://visualstudio.com)
    and click on **Downloads** (this site changes frequently but the basic steps remain
    the same). You have three choices of which version to download: **Community**
    , **Professional** , and **Enterprise** . The Community version is free and will
    provide all you need to follow along in this book.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，如果您尚未安装 Visual Studio，请访问 [https://visualstudio.com](https://visualstudio.com)
    并点击 **下载**（此网站经常更改，但基本步骤保持不变）。您有三个选择下载哪个版本：**社区版**、**专业版**和**企业版**。社区版是免费的，将提供您在本书中所需的所有内容。
- en: When you click on your choice, Visual Studio Setup will download to your **downloads**
    directory. Double-click on it and click on **Yes** at the security prompt. The
    installer will update itself and then will begin the installation. This can take
    a little while, but don’t go away as you have some selections to make.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当您点击您的选择时，Visual Studio 设置将下载到您的 **下载** 目录。双击它，并在安全提示中点击 **是**。安装程序将更新自身，然后开始安装。这可能需要一点时间，但请不要离开，因为您还有一些选择要做。
- en: Note
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you have Visual Studio installed but for some reason want to install the
    Community Edition as well, that is no problem as they can run side by side.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已安装 Visual Studio 但出于某种原因还想安装社区版，那没问题，因为它们可以并行运行。
- en: A menu will appear similar to *Figure 1* *.1* (if it does not, click **Modify**
    ).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 将出现一个类似于 *图 1.1* 的菜单（如果未出现，请点击 **修改**）。
- en: '![Figure 1.1 – Setting up Visual Studio: please note that this screenshot intends
    to show the layout, so text readability is not essential](img/B21988_01_1.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1 – 设置 Visual Studio：请注意，此截图旨在显示布局，因此文本可读性不是必需的](img/B21988_01_1.jpg)'
- en: 'Figure 1.1 – Setting up Visual Studio: please note that this screenshot intends
    to show the layout, so text readability is not essential'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – 设置 Visual Studio：请注意，此截图旨在显示布局，因此文本可读性不是必需的
- en: Be sure that **ASP.NET and web development** is checked. Scroll down and check
    **Data storage and processing** (if you are short on disk space, skip this one).
    Once you are satisfied, click on **Install while downloading** and then click
    on **Modify** .
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 确保已勾选 **ASP.NET 和 Web 开发**。向下滚动并勾选 **数据存储和处理**（如果您磁盘空间不足，请跳过此选项）。一旦您满意，请点击 **下载时安装**，然后点击
    **修改**。
- en: SQL Server will be installed for you, as will **SQL Server Management Studio**
    ( **SSMS** ). You will typically interact with SQL Server through SSMS. We will
    look at how to work with this tool, and all the others, as we go.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 将为您安装 SQL Server，以及 **SQL Server Management Studio**（**SSMS**）。您通常将通过 SSMS 与
    SQL Server 交互。我们将随着我们的进展查看如何使用此工具以及所有其他工具。
- en: Your next tool is Dapper. This is a small, lightweight ORM (often called a micro-ORM)
    that does one important part of the work of the much bigger SQL platform, Entity
    Framework, but with much less overhead. Specifically, Dapper will map queries
    to objects.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 您的下一个工具是 Dapper。这是一个小型、轻量级的 ORM（通常称为微 ORM），它执行了比 SQL 平台 Entity Framework 大得多的一部分工作，但开销却小得多。具体来说，Dapper
    将查询映射到对象。
- en: 'Since our needs will be minimal, Dapper will be more than enough. You can read
    more about Dapper here: [https://www.learndapper.com/](https://www.learndapper.com/)
    .'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的需求将是最小的，Dapper 将绰绰有余。您可以在[https://www.learndapper.com/](https://www.learndapper.com/)了解更多关于
    Dapper 的信息。
- en: We will mimic our user interface with Postman, which we will also use for end-to-end
    testing. You can get the latest version of Postman at [https://postman.com/downloads](https://postman.com/downloads)
    . You can also access Postman through your browser, but we’ll be using the downloaded
    version.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 Postman 模拟我们的用户界面，我们也将使用它进行端到端测试。您可以在 [https://postman.com/downloads](https://postman.com/downloads)
    获取 Postman 的最新版本。您也可以通过浏览器访问 Postman，但我们将使用下载的版本。
- en: Postman is surprisingly powerful, and we will review how we will use it as we
    go along. That said, we will only scratch the surface of what you can do with
    this tool, so at some point, you may want to read the documentation.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Postman 非常强大，随着我们的进行，我们将回顾如何使用它。尽管如此，我们只会触及这个工具所能做到的一小部分，所以某个时候，你可能需要阅读其文档。
- en: We will be using Swagger for documentation (see [*Chapter 4*](B21998_04.xhtml#_idTextAnchor056)
    ), and the built-in logger functionality for (surprise!) logging errors and issues
    that will not be surfaced to the user, but which will be useful for you as the
    programmer.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 Swagger 进行文档编写（见 [*第4章*](B21998_04.xhtml#_idTextAnchor056) ），并使用内置的日志记录功能来记录错误和问题，这些问题不会直接展示给用户，但对于作为程序员的你来说将非常有用。
- en: Summary
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you saw what software you will need, how to download it, and
    how to install it. All of the software we’ll be using in this book is free. In
    the next chapter, we will see the example application that we’ll build to illustrate
    a meaningful use of an API.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了你需要哪些软件，如何下载和安装它们。本书中我们将使用的所有软件都是免费的。在下一章中，我们将看到我们将构建的示例应用程序，以展示 API
    的有意义使用。
- en: You try it
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你可以试试
- en: Be sure to download and install all of the software described if you want to
    follow along as we create the API.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要在我们创建 API 的过程中跟随操作，请确保下载并安装本章中描述的所有软件。
