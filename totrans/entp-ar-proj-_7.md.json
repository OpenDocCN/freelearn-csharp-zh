["```cs\nprivate IEnumerator coroutine;\nprivate bool blinking; \n```", "```cs\ncoroutine = BlinkingArrow(); \nblinking = false;\n```", "```cs\nprivate IEnumerator BlinkingArrow()\n{\n    while (true)\n    {\n        GetComponent<MeshRenderer>().enabled = false;\n        yield return new WaitForSeconds(0.5f);\n        GetComponent<MeshRenderer>().enabled = true;\n        yield return new WaitForSeconds(0.5f);\n    }\n} \n```", "```cs\nif (GetComponentInParent<DefaultTrackableEventHandler>().found && !blinking)\n{\n    blinking = true;\n    StartCoroutine(coroutine);\n}\nelse if (!GetComponentInParent<DefaultTrackableEventHandler>().found && blinking)\n{\n    blinking = false;\n    StopAllCoroutines();\n    GetComponent<MeshRenderer>().enabled = false;\n}\n```", "```cs\nusing Vuforia;\nusing UnityEngine.UI;\n```", "```cs\n public DefaultTrackableEventHandler targetSide;\n public DefaultTrackableEventHandler targetClose;\n public DefaultTrackableEventHandler targetOpen;\n\n public GameObject mainMessage;\n public GameObject bottomMessage;\n public GameObject fileButton;\n public GameObject okButton;\n```", "```cs\npublic bool Finished { get; set; }\n```", "```cs\nprivate enum State\n{\n    Init = 0,\n    Side = 1,\n    Engine = 2,\n    Close = 3,\n    Open = 4,\n    Plug = 5\n}\nprivate State state;\n```", "```cs\nprivate void ShowElements()\n{\n}\n```", "```cs\nswitch (state)\n{\n    case State.Init:\n    break;\n    case State.Side:\n    break;\n    case State.Engine:\n    break; \n    case State.Close:\n    break;\n    case State.Open:\n    break;\n    case State.Plug:\n    break;\n}\n```", "```cs\ntargetSide.gameObject.SetActive(true);\ntargetOpen.gameObject.SetActive(false);\ntargetClose.gameObject.SetActive(false);\n\nmainMessage.SetActive(true);\nbottomMessage.SetActive(false);\nfileButton.SetActive(false);\nokButton.SetActive(false);\n\nmainMessage.GetComponentInChildren<Text>().text = \"Point with the camera at the side of the car to start the maintenance process.\";\n```", "```cs\nmainMessage.SetActive(false);\nbottomMessage.SetActive(true);\n\nbottomMessage.GetComponentInChildren<Text>().text = \"Touch the red components to see instructions.\";\n```", "```cs\ntargetClose.gameObject.SetActive(true);\n\nmainMessage.SetActive(true);\nbottomMessage.SetActive(false);\n\nmainMessage.GetComponentInChildren<Text>().text = \"One of the spark plugs is broken. Point at the trunk and follow the steps.\";\n```", "```cs\ntargetSide.gameObject.SetActive(false);\ntargetOpen.gameObject.SetActive(true);\n\nmainMessage.SetActive(false);\nbottomMessage.SetActive(true);\n\nbottomMessage.GetComponentInChildren<Text>().text = \"Open the trunk to access the engine.\";\n```", "```cs\ntargetClose.gameObject.SetActive(false);\n\nfileButton.SetActive(true);\nokButton.SetActive(true);\n\nbottomMessage.GetComponentInChildren<Text>().text = \"Take the spark plug out and replace it. When you finish press 'Done'\";\n```", "```cs\ntargetOpen.gameObject.SetActive(false);\n\nmainMessage.SetActive(true);\nbottomMessage.SetActive(false);\nfileButton.SetActive(false);\nokButton.SetActive(false);\n\nmainMessage.GetComponentInChildren<Text>().text = \"Well done, you can take a coffee now :)\";\n```", "```cs\nprivate void NextStep()\n{\n    state++;\n    ShowElements();\n}\n```", "```cs\npublic void ResetInstructions()\n{\n    state = 0;\n    ShowElements();\n}\n```", "```cs\nIEnumerator Start()\n{\n    while (!VuforiaARController.Instance.HasStarted) //waits until Vuforia has instanciated the three markers\n        yield return null;\n    state = State.Init;\n    ShowElements();\n }\n```", "```cs\nif ((state == State.Init && targetSide.found) || (state == State.Engine && targetClose.found) || (state == State.Close && targetOpen.found))\n{\n    NextStep();\n}\nelse if (state == State.Side)\n{\n    if (Input.GetMouseButtonDown(0))\n    {\n        RaycastHit hit;\n        Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);\n        if (Physics.Raycast(ray, out hit))\n            if (hit.transform.name == \"Engine\")\n                NextStep();\n    }\n}\nelse if (state == State.Open && Finished)\n{\n    Finished = false;\n    NextStep();\n}\n```", "```cs\nforeach (Transform child in transform)\n{\n   Vector3 scale = child.localScale;\n    scale *= 2.5f;\n    child.localScale = scale;\n\n    Vector3 position = child.position;\n    position += new Vector3(0.5f, 0, 0);\n    child.position = position;\n}\n```", "```cs\nusing System.IO;\n```", "```cs\nprivate string originalPath;\nprivate string savePath;\n```", "```cs\noriginalPath = Application.streamingAssetsPath + \"/PDF/WorkOrder_0021.pdf\";\nsavePath = Application.persistentDataPath + \"/WorkOrder_0021.pdf\";\n```", "```cs\nprivate IEnumerator OpenFileCoroutine()\n{\n    WWW www = new WWW(originalPath);\n    yield return www;\n    if (www.error != null)\n        Debug.Log(\"Error loading: \" + www.error);\n    else\n    {\n        byte[] bytes = www.bytes;\n        File.WriteAllBytes(savePath, bytes);\n        Application.OpenURL(savePath);\n    }\n}\n```", "```cs\npublic void OpenPDFFile()\n{\n    if (File.Exists(savePath))\n        Application.OpenURL(savePath);\n    else\n        StartCoroutine(OpenFileCoroutine());\n}\n```"]