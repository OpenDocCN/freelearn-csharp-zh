- en: Deploying
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will look at the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating a free Azure Cloud subscription
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating an ASP.NET Core web application to use the library from NuGet
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying the application to Azure Cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Readers should have a basic knowledge of C#. They should also have a basic knowledge
    of using Visual Studio, installing packages using NuGet, and referencing libraries
    within projects from other projects.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code files for this chapter can be found on GitHub:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/PacktPublishing/DotNET-Standard-2-Cookbook/tree/master/Chapter12/Chapter12.Azure.WebAppCore](https://github.com/PacktPublishing/DotNET-Standard-2-Cookbook/tree/master/Chapter12/Chapter12.Azure.WebAppCore)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Check out the following video to see the code in action:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://goo.gl/syvoGK](https://goo.gl/syvoGK)'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will be working with a library we worked on in the previous
    chapter. In that chapter, we created a library and submitted it at NuGet. We will
    be using the same library with an ASP.NET core application and deploying it to
    Azure and testing it.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a free Azure Cloud subscription
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we will create an Azure free account for you. This will help
    you to deploy the application at Azure. We will be using Visual Studio tools for
    Azure to deploy our project. At the time of writing this book, Microsoft allows
    you to create one free account worth USD 200; it is also freely available for
    one year.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Make sure you have a valid credit card before you start this process. The credit
    card is only required for validation purposes.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open your preferred browser.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type `azure.microsoft.com`, and press *Enter:*
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d783f6f6-3bff-419c-a159-cc6f3fea431f.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, click on the Free Account green button in the top right-hand corner, or
    click the Start free button at the left-hand side.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After that, you will get a screen of information.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Again, click on the Start free button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will then be requested to sign in using a Microsoft account or any other
    account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After sign in, you will be asked to give payment information. Follow the instructions
    and you are good to go with a new Azure account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After all that has been completed, you will be presented with the Azure Portal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Or else, type `portal.azure.com` in the address bar, and press *Enter*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You should be presented with the Azure Portal and should see a screen similar
    to this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/64a53679-6302-4709-80b7-dffb905f5017.png)'
  prefs: []
  type: TYPE_IMG
- en: Azure Portal
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The steps are straightforward and all you need to do is follow the instructions
    from the Azure Portal on creating a new subscription.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an ASP.NET core web application to use the library from NuGet
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we will create an ASP.NET core web application, and then we
    will install the .NET Standard 2.0 library we uploaded at NuGet in the previous
    chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Make sure you have the latest version of Visual Studio 2017 installed and updated,
    and also make sure you have completed the previous chapter.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open Visual Studio 2017.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click File | New | Project and select Web in the right-hand pane under Visual
    C#.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select ASP.NET Core Web Application in the right-hand pane:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/30d03149-771d-4e4d-8f7a-aee357ececfe.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, in the Name: textbox, type `Chapter12.Azure.WebAppCore`, and, under the Location:
    textbox, select a proper location and leave the other fields as they are:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8323e168-9ff2-448e-ab5b-322e4ae2217f.png)'
  prefs: []
  type: TYPE_IMG
- en: Click OK.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the New ASP.NET Core Web Application dialog box, select Empty and leave
    the other fields as they are:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2b88c6c4-e3bc-44af-8013-682216552b0c.png)'
  prefs: []
  type: TYPE_IMG
- en: Click OK.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The Solution Explorer (*Ctrl* + *Alt* + *L*) should look like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2684ec47-922a-420c-ab0a-e2b0abdb42b1.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, right-click on the Dependencies label.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select `Manage NuGet Packages`**.**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click Browse and, in the search box, type the Package ID you have selected while
    uploading.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In this case, `Packt_DotNetStandard_CookBook_Chap1`, and press *Enter*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5172a21c-e7b3-429c-a94e-54f327d272c4.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, click on the package.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click the Install button in the right-hand pane:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8a06cd2b-0f15-4990-b2b7-1b833098f503.png)'
  prefs: []
  type: TYPE_IMG
- en: Click OK in the confirmation dialog box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/08cccc37-a72b-4352-87e6-d8bc96099569.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After a successful installation, the output window should look like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8062d9a7-e09e-4739-ae6f-847f4ec8b910.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, in the Solution Explorer, expand the Dependencies | NuGet  tab and you
    should see our library there:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ad592a4c-8417-485b-83b3-802c583b38a8.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, double-click on the `Startup.cs` button to reach the code window.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scroll up till you see the `using` directives.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add the following directive at the end of the `using` directives:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Now, scroll down till you reach the `app.Run()` method inside the `Configure()`
    method.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the code with this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Press *F5* to debug.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You should get an output like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5f015a64-c3f9-461e-b705-57a4ff3596cf.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In steps 1 to 9, we created an ASP.NET core project. We selected an empty project
    for this recipe. After that, in steps 10 to 17, we installed the library created
    in the previous chapter. We used the NuGet Package Manager to install it and we
    also confirmed that the library was successfully installed.
  prefs: []
  type: TYPE_NORMAL
- en: In step 20, we referenced the library using a `using` directive. Finally, in
    step 22, we created an instance of the `Calculator` class and stored it in a variable.
    Finally, we sent the output to the browser using the `WriteAsync()` method. In
    step 24, we tested our application in the browser.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying the application to Azure Cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we will look at deploying our application to Azure. We will
    be using Visual Studio 2017 to deploy the application to an Azure App Service.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Make sure you have an Azure account. If not, you can create a free account at
    `azure.microsoft.com`. Also, make sure you have completed the previous recipe.
    We will need Visual Studio 2017, with its latest updates. Let's get going.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open Visual Studio 2017.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, open the solution from the previous recipe. Click File | Open | Open Project/Solution, or
    press *Ctrl* + *Shift* + *O*, and select the `Chapter12.Azure.WebAppCore` solution.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The Solution Explorer (*Ctrl* + *Alt* + *L*) should look like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/74e11b86-37e8-45a2-b93f-8e7c80d45b16.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, right-click on `Chapter12.Azure.WebAppCore` and select Publish.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the Pick a publish target window, select App Service in the left-hand pane
    and Create New in the right-hand pane:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/39770eaf-b519-45be-84bd-4b3099427816.png)'
  prefs: []
  type: TYPE_IMG
- en: Click Publish.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, in the Create App Service screen, supply a proper App Name, and select
    a Resource Group and a Hosting Plan:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6759df1d-8e62-490d-9de3-2c2e10786abf.png)'
  prefs: []
  type: TYPE_IMG
- en: Click Create.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This will deploy your application to Azure.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If everything goes well, you should see this in the browser:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/793f7aa3-f6e4-4456-b151-468099bbd94e.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In steps 1, 2 and 3, we opened the existing solution that we created in the
    previous recipe. We performed a quick build to check for any syntax errors and
    to confirm that everything is fine. In step 5, we used Visual Studio tools to
    publish the application to Azure. In this case, we selected a new App Service.
    In the next screen, at step 7, we had to use the Azure subscription bound with
    your login. This should be the account you created in the previous recipe. You
    can select an existing Resource Group here, or you can create a new one by clicking
    the New link. You will see a dialog box similar to this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/be0bfcff-20f9-4d37-9402-5db9198e56c2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You will have to give a name for your Resource Group and click OK. A Resource
    Group is a way of categorizing your resources in Azure. And again, you can select
    a new Hosting Plan by clicking on the New link. Again, you should see a screen
    such as this to select your new plan:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ccda37dc-0f67-47ed-a5b7-3594e278b250.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The Location and Size drop-down lists give you different options to select.
    Location will help you to select a region close to your customers. This will help
    you to access your website quickly. Also, Size will tell you the processor and
    RAM you are going to use for this App Service. Finally, you hit the Create button
    and Visual Studio will take care of the process. This will include uploading your
    files to Azure, opening the browser, and showing the final result. In the Azure
    Portal, your App Service should appear in the list like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/70949f05-25f9-424f-b0f7-93c403b8219c.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, Visual Studio has done a great job of doing all the hard work
    for you.
  prefs: []
  type: TYPE_NORMAL
