["```cs\nusing UnityEngine;\npublic class CollisionTest : MonoBehaviour\n{\n[SerializeField] \nprivate Transform _explosionPrefab;\n    private void OnCollisionEnter(Collision collision)\n    {\n        var contact = collision.contacts[0];\n        var rotation =\n          Quaternion.FromToRotation(Vector3.up,\n          contact.normal);\n        var position = contact.point;\n        Instantiate(_explosionPrefab, position, rotation);\n        Destroy(gameObject);\n    }\n}\n```", "```cs\nusing UnityEngine;\npublic class CollisionTest : MonoBehaviour\n{\n    private void OnCollisionStay(Collision collision)\n    {\n        if (collision.gameObject.name == \"Ground\")\n        {\n            //Reduce engine strength to 60%\n        }\n    }\n}\n```", "```cs\nusing UnityEngine;\npublic class CollisionTest : MonoBehaviour\n{\n    private bool _isGrounded;\n    private void OnCollisionEnter(Collision collision)\n    {\n        _isGrounded = true;\n    }\n    private void OnCollisionExit(Collision collision)\n    {\n        _isGrounded = false;\n    }\n}\n```", "```cs\nusing UnityEngine;\npublic class TriggerTest : MonoBehaviour\n{\n    private void OnTriggerEnter(Collider other)\n    {\n        Debug.Log($\"{this} enters {other}\");\n    }\n}\n```", "```cs\nusing UnityEngine;\npublic class TriggerTest : MonoBehaviour\n{\n    private void OnTriggerStay(Collider other)\n    {\n        Debug.Log($\"{this} stays {other}\");\n    }\n}\n```", "```cs\nusing UnityEngine;\npublic class TriggerTest : MonoBehaviour\n{\n    private void OnTriggerExit(Collider other)\n    {\n        Destroy(other.gameObject);\n    }\n}\n```", "```cs\npublic void AddForce(Vector3 force,\n  [DefaultValue(\"ForceMode.Force\")] ForceMode mode);\n```", "```cs\nnamespace UnityEngine\n{\n    //\n    // Summary:\n    //     Use ForceMode to specify how to apply a force\n           using Rigidbody.AddForce.\n    public enum ForceMode\n    {\n        //\n        // Summary:\n        //     Add a continuous force to the rigidbody,\n               using its mass.\n        Force = 0,\n        //\n        // Summary:\n        //     Add an instant force impulse to the\n               rigidbody, using its mass.\n        Impulse = 1,\n        //\n        // Summary:\n        //     Add an instant velocity change to the\n               rigidbody, ignoring its mass.\n        VelocityChange = 2,\n        //\n        // Summary:\n        //     Add a continuous acceleration to the\n               rigidbody, ignoring its mass.\n        Acceleration = 5\n    }\n}\n```", "```cs\nusing UnityEngine;\npublic class RigidbodyMethods : MonoBehaviour\n{\n[SerializeField] \nprivate Rigidbody _rigidbody;\n[SerializeField] \nprivate float _thrust = 50f;\n    private void Start()\n    {\n        _rigidbody = GetComponent<Rigidbody>();\n    }\n    private void FixedUpdate()\n    {\n        if (Input.GetKey(KeyCode.F))\n        {\n            _rigidbody.AddForce(transform.forward *\n              _thrust);\n        }\n        if (Input.GetKey(KeyCode.A))\n        {\n            _rigidbody.AddForce(transform.forward *\n              _thrust, ForceMode.Acceleration);\n        }\n    }\n}\n```", "```cs\npublic void MovePosition(Vector3 position);\n```", "```cs\nusing UnityEngine;\npublic class RigidbodyMethods : MonoBehaviour\n{\n[SerializeField] \nprivate Rigidbody _rigidbody;\n[SerializeField] \nprivate float _speed = 50f;\n    private void Start()\n    {\n        _rigidbody = GetComponent<Rigidbody>();\n    }\n    private void FixedUpdate()\n    {\n        var direction = new\n          Vector3(Input.GetAxis(\"Horizontal\"), 0,\n          Input.GetAxis(\"Vertical\"));\n        _rigidbody.MovePosition(transform.position +\n          direction * Time.deltaTime * _speed);\n    }\n}\n```", "```cs\nusing UnityEngine;\npublic class PingPongBall : MonoBehaviour\n{\n    [SerializeField] private Rigidbody _rigidbody;\n    [SerializeField] private Vector3 _initialImpulse;\n    private void Start()\n    {\n        _rigidbody.AddForce(_initialImpulse,\n          ForceMode.Impulse);\n    }\n}\n```", "```cs\nusing UnityEngine;\npublic class Player : MonoBehaviour\n{\n[SerializeField] \nprivate Rigidbody _rigidbody;\n[SerializeField] \nprivate float _speed = 10f;\n[SerializeField] \nprivate bool _isPlayerOne;\n    private void Start()\n    {\n        _rigidbody = GetComponent<Rigidbody>();\n    }\n    private void FixedUpdate()\n    {\n        var inputAxis = _isPlayerOne ? \"PlayerOneMove\" :\n          \"PlayerTwoMove\";\n        var direction = new\n          Vector3(Input.GetAxis(inputAxis), 0, 0);\n        _rigidbody.MovePosition(transform.position +\n          direction * Time.deltaTime * _speed);\n    }\n}\n```"]