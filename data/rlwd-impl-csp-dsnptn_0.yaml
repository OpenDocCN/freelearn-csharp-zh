- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: This is a book about design patterns written in the context of the C# coding
    language. I know what you’re probably thinking. What does that even mean? Well,
    I could tell you but I’d spoil the rest of the book, and trust me, it’s a doozy!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一本关于设计模式的书籍，它是在C#编程语言的背景下编写的。我知道你可能正在想什么。这究竟是什么意思呢？好吧，我可以告诉你，但那样就会破坏这本书的剩余部分，相信我，那部分内容非常精彩！
- en: Design Patterns are a codified set of best practices for software problems that
    come up so often that we can learn to recognize them and immediately know how
    to solve them. The solutions for these recurring problems found in patterns have
    been used for decades and they have proven to be effective.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 设计模式是一套针对软件问题中经常出现的最佳实践，我们可以学会识别它们，并立即知道如何解决它们。这些模式中发现的重复问题的解决方案已经使用了数十年，并且已被证明是有效的。
- en: Patterns also become a battle language for developers because they are so pervasive.
    This idea comes from the popular television and movie franchise, *Star Trek*.
    In *Star Trek*, the warrior race known as the Klingons has two languages. They
    have the regular Klingon language that they learn in Klingon kindergarten and
    an abbreviated version they use during combat. The phrase “*Load torpedo tubes
    1 and 2 and fire a full spread*” can be reduced to one or two words. All Klingons
    know what that phrase means, and they win battles because they are a few seconds
    faster than their linguistically-challenged foes. Similarly, you can say “*Just
    use the decorator pattern*.” Any developer who has studied patterns will understand
    what to do next.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 由于模式无处不在，它们也成为了开发者的战斗语言。这个想法来源于流行的电视和电影系列《星际迷航》。在《星际迷航》中，被称为克林贡人的战士种族有两种语言。他们在克林贡幼儿园学习的是常规的克林贡语，而在战斗中使用的则是简化的版本。短语“*装载鱼雷管1和2并发射全弹*”可以缩减为一到两个词。所有克林贡人都知道这个短语的意思，他们之所以能赢得战斗，是因为他们比语言能力受限的对手快了几秒钟。同样，你可以说“*就使用装饰者模式*。”任何研究过模式的开发者都会知道接下来该做什么。
- en: 'Patterns are not specific to the C# language. However, in order to learn patterns
    effectively, you need an implementation language. The original book on patterns
    was written by Erich Gamma, Richard Helm, Ralph Johnson, and John Vlissides, collectively
    known as the **Gang of Four**, or **GoF** for short. Their book, *Design Patterns:
    Elements of Reusable Object-Oriented Software*, is often referred to as *the GoF
    book*.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 模式并不特定于C#语言。然而，为了有效地学习模式，你需要一种实现语言。关于模式的原始书籍是由Erich Gamma、Richard Helm、Ralph
    Johnson和John Vlissides共同撰写的，他们合称为**四人帮**，简称**GoF**。他们的书《设计模式：可复用面向对象软件元素》通常被称为**GoF书**。
- en: The GoF book was published in 1994, which makes it a technological dinosaur.
    While it may be old, the patterns explained within its pages are still very relevant.
    My criticism of the GoF book is it is written in a very academic format, and its
    implementation language is one you don’t really see anymore. The implementation
    language is an important detail. The GoF book covers 23 patterns, which is the
    same number of herbs and spices found in KFC’s original recipe. That can’t be
    a coincidence. This book doesn’t cover all 23 patterns, which is fine, because
    too much fried chicken isn’t very good for you. I’ve focused on patterns you’ll
    need every day in most of the projects you work on. I cover the remainder briefly
    in [*Chapter 8*](B18605_08.xhtml#_idTextAnchor152) at the end of the book.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: GoF（设计模式：可复用面向对象软件元素）这本书是在1994年出版的，这使得它成为了一个技术上的恐龙。虽然它可能已经过时了，但书中解释的模式仍然非常相关。我对GoF书的批评是它采用了非常学术的格式，而且它的实现语言是你现在很少见到的。实现语言是一个重要的细节。GoF书涵盖了23个模式，这与肯德基原味秘制配方中使用的香料和草药数量相同。这不会是巧合。这本书并没有涵盖所有23个模式，这很好，因为太多的炸鸡对你的健康并不好。我已经专注于你在大多数你参与的项目中每天都会用到的模式。我在书的末尾的[*第8章*](B18605_08.xhtml#_idTextAnchor152)中简要地介绍了剩余的部分。
- en: There are some books out there that try to use pseudocode in order to be generic.
    I posit that such books are not useful to most people. If you’re like me, and
    you probably are in this regard, you’d wish for a code example that is easy to
    read, isn’t overly clever, and has a firm basis in the real world. Books and blog
    sites that try to teach you patterns with phrases such as “`Class A` inherits
    from `Class B`, which depends on `Class C`” are too vague to be useful. Equally
    annoying are books and sites that try to show you the pattern in 20 languages.
    They usually do a poor job with all 20 instead of focusing on doing a good job
    in just one. I am only using C# and the **Unified Modeling Language** (**UML**).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 有些书籍试图使用伪代码来使其通用。我认为这样的书籍对大多数人来说没有用。如果你像我一样，你在这方面可能也是这样，你希望看到一个易于阅读、不太聪明且基于现实世界的代码示例。那些试图用“`类A`继承自`类B`，而`类B`依赖于`类C`”之类的短语教你模式的书籍和博客网站过于模糊，无法使用。同样令人烦恼的是那些试图用20种语言展示模式的书籍和网站。它们通常对这20种语言都做得很差，而不是专注于只做好一种。我只使用C#和**统一建模语言**（**UML**）。
- en: 'If you’ve never heard of UML before, don’t let it scare you. UML is a convention
    used to create diagrams. There are 14 types of UML diagrams. I only use one diagram
    type: class diagrams. I’ve included a primer in [*Appendix 2*](B18605_Appendix_2.xhtml#_idTextAnchor204)
    to help you if you are new to UML.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你之前从未听说过UML，不要让它吓到你。UML是一种用于创建图表的约定。有14种UML图表类型。我只使用一种图表类型：类图。我包括了一个入门指南在[*附录2*](B18605_Appendix_2.xhtml#_idTextAnchor204)，如果你对UML不熟悉，这将有所帮助。
- en: This book is about the real world, or at least a close facsimile. I’ve written
    this book using the same techniques that are used in real software projects. There’s
    realistic code in the book that solves legitimate business problems. There are
    also design mistakes included, along with thoughtful ways out of trouble.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是关于现实世界的，或者至少是一个非常接近的复制品。我写这本书使用了在真实软件项目中使用的相同技术。书中包含了解决真实商业问题的实际代码。还包括了设计错误，以及解决问题的深思熟虑的方法。
- en: Another issue with academic books is that they are wordy and hard to read. I
    have strived to take a dry subject and avoid being boring. I realize that nobody
    intentionally writes a boring book. Unfortunately, many have succeeded. I think
    the main cause of this boredom is how a lot of authors in technology view the
    task of writing a book. I think a lot of authors write books to prove how smart
    they are. These tend to be very academic. They are built to impress other academics.
    That’s great! The world needs academics. Most developers are not professional
    academics. I dare say, a great many developers have never taken a formal CS course.
    My aim in writing this book isn’t to prove I’m smart or capable. My wife would
    tell you that I am obnoxiously self-deprecating. Instead, my aim is to help you
    over the wall that is keeping you from moving to the next level in your coding.
    I had to climb this wall by myself, and for me, it wasn’t easy. However, if I
    can do it, you can too, with my help.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 学术书籍的另一个问题是它们冗长且难以阅读。我努力将枯燥的主题变得不无聊。我意识到没有人故意写一本无聊的书。不幸的是，很多人做到了。我认为这种无聊的主要原因在于许多科技作者看待写书任务的方式。我认为许多作者写书是为了证明自己有多聪明。这些书往往非常学术化。它们旨在给其他学者留下深刻印象。那很好！世界需要学者。大多数开发者并不是专业的学者。我敢说，很多开发者从未正式上过计算机科学课程。我写这本书的目的不是证明我有多聪明或有多能干。我的妻子会告诉你，我总是过分地自我贬低。相反，我的目的是帮助你越过那堵阻碍你提升编程水平的墙。我必须独自攀登这堵墙，对我来说，这并不容易。然而，如果我能做到，你也能，在我的帮助下。
- en: Instead of a dry academic treatment, this book presents a story that could actually
    happen in the real world. There’s just enough light science fiction involved to
    make it “just a story.” The circumstances in the story, though, are very real,
    and you’ll recognize them, even if you have a few years in the field.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 与枯燥的学术处理方式不同，这本书讲述了一个在现实世界中可能发生的故事。故事中涉及的科学幻想元素恰到好处，使其“仅仅是一个故事”。然而，故事中的情况非常真实，即使你在该领域工作了几年，你也会认出它们。
- en: On that point, I want to make a few things clear. The story in this book is
    fiction. While I am a **fantastic** software engineer, I am not a roboticist or
    a mechanical engineer, nor am I a qualified bicycle mechanic. At several points
    in the coming story, you may need to suspend your disbelief if these subjects
    are in your wheelhouse.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '关于这一点，我想澄清几点。这本书中的故事是虚构的。虽然我是一个**出色的**软件工程师，但我不是机器人学家或机械工程师，也不是合格的自行车修理工。在即将到来的故事中的几个点上，如果你对这些主题很熟悉，你可能需要暂时放下你的怀疑。 '
- en: Who this book is for
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书面向的对象
- en: This book is for anyone who wants to become a better software developer. I wish
    I could get away with just saying that, but I probably can’t. Let me add a few
    thoughts on who will benefit from this book.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是为任何想要成为更好的软件开发者的人而写的。我希望我可以说得简单一些，但可能不行。让我再补充几点，关于谁会从这本书中受益。
- en: The easy answer is what I would call *mid-level* developers. These are developers
    who have a few years of experience with C# and are very comfortable with the basic
    principles of object-oriented programming. Ideally, you’ve seen a few UML class
    diagrams.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 简单的回答是，我称之为*中级*开发者。这些开发者拥有几年的C#经验，并且对面向对象编程的基本原则非常熟悉。理想情况下，你已经看过一些UML类图。
- en: Another beneficiary of this book is a student who is learning C#. If you’re
    even remotely comfortable with basic OOP concepts, such as inheritance and composition,
    and you know your way around an **integrated development environment** (**IDE**),
    I want you to read this book. Sure, the mid-level developer might have an easier
    time, but learning patterns and SOLID principles will give you a strong foundation.
    You might avoid picking up some bad habits, or correct those you’ve already learned.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书的另一个受益者是正在学习C#的学生。如果你对基本面向对象概念，如继承和组合，感到稍微舒适，并且熟悉**集成开发环境**（**IDE**），我希望你阅读这本书。当然，中级开发者可能会更容易一些，但学习模式和SOLID原则会给你打下坚实的基础。你可能会避免养成一些坏习惯，或者纠正你已经学到的那些。
- en: I also encourage you to read this book if you’re a recent graduate of either
    a university or a code boot camp. If you haven’t done a lot of C# work, but you’ve
    worked in other languages such as Java, C++, Python, or JavaScript, you are invited
    to read this book as well. I’ve tried to give you a bit of a boost by including
    a lengthy primer on C# and object-oriented programming concepts in [*Appendix
    1*](B18605_Appendix_1.xhtml#_idTextAnchor178) of this book.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我也鼓励你阅读这本书，如果你是大学或代码训练营的应届毕业生。如果你没有做过很多C#工作，但你在Java、C++、Python或JavaScript等其他语言中工作过，我也邀请你阅读这本书。我在这本书的[*附录1*](B18605_Appendix_1.xhtml#_idTextAnchor178)中包含了一段关于C#和面向对象编程概念的详细入门，希望能给你一些帮助。
- en: There is one group I want to reach most of all.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我最想接触的一个群体。
- en: I especially want to encourage self-taught developers like myself. Those in
    this camp tend to have learned only what is absolutely necessary as a means of
    surviving your current sprint. If your teachers are YouTube and the blogosphere,
    chances are you will readily recognize the anti-patterns found in [*Chapter 1*](B18605_01.xhtml#_idTextAnchor016),
    because by now, you’ve probably committed every sin relevant to software engineering.
    I only know this because I have too. As such, I know you stand to benefit the
    most from reading this book.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我特别希望鼓励像我这样的自学开发者。这个群体的人往往只学习绝对必要的知识，作为生存当前冲刺的手段。如果你的老师是YouTube和博客圈，那么你很可能会迅速识别出[*第1章*](B18605_01.xhtml#_idTextAnchor016)中发现的反模式，因为你现在可能已经犯过与软件工程相关的每一个错误。我只知道这一点，因为我犯过。因此，我知道你从阅读这本书中受益最大。
- en: As I said, this book is for anyone who wants to become a better software developer.
    I guess I should have just stuck with that.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我说的，这本书是为任何想要成为更好的软件开发者的人而写的。我想我应该坚持这一点。
- en: What this book covers
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书涵盖的内容
- en: '[*Chapter 1*](B18605_01.xhtml#_idTextAnchor016), *There’s a Big Ball of Mud
    on Your Plate of Spaghetti*: Before we dive into patterns, let’s dive into why
    we need them. The world of software development is very messy, but it doesn’t
    have to be. The mess comes from a set of degenerative forces in our work that
    you will surely recognize.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*](B18605_01.xhtml#_idTextAnchor016)，*你的意大利面盘上有一大团泥巴*：在我们深入研究模式之前，让我们先探讨一下为什么我们需要它们。软件开发的世界非常混乱，但不必如此。混乱源于我们工作中的一系列退化力量，你一定会认识到的。'
- en: '[*Chapter 2*](B18605_02.xhtml#_idTextAnchor036), *Prepping For Practical Real-World
    Applications of Patterns in C#*: To defeat the degenerative forces mentioned in
    [*Chapter 1*](B18605_01.xhtml#_idTextAnchor016), you’re going to have to step
    up your game. This chapter presents some rules and principles. If you can adhere
    to them, you will have the discipline needed to use design patterns to their greatest
    effect.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*](B18605_02.xhtml#_idTextAnchor036)，*为C#中模式在实际现实世界应用中的准备*：为了克服[*第1章*](B18605_01.xhtml#_idTextAnchor016)中提到的退化力量，你必须提高你的水平。这一章提出了一些规则和原则。如果你能坚持这些规则，你将拥有使用设计模式达到最大效果所需的纪律。'
- en: '[*Chapter 3*](B18605_03.xhtml#_idTextAnchor063), *Getting Creative with Creational
    Patterns*: Now that you are thoroughly prepared, this chapter introduces our story.
    It covers patterns designed to make the instantiation of your classes more robust
    and more flexible. After reading this chapter, you’ll never look at the `new`
    keyword the same way.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*](B18605_03.xhtml#_idTextAnchor063)，*运用创建型模式进行创新*：现在你已经充分准备，本章介绍了我们的故事。它涵盖了设计模式，旨在使你的类实例化更加健壮和灵活。阅读本章后，你将不会再以同样的方式看待`new`关键字。'
- en: '[*Chapter 4*](B18605_04.xhtml#_idTextAnchor078), *Fortify Your Code with Structural
    Patterns*: This chapter covers techniques you can use to structure your classes
    for maximum flexibility while honoring the SOLID principles covered in [*Chapter
    2*](B18605_02.xhtml#_idTextAnchor036).'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](B18605_04.xhtml#_idTextAnchor078)，*用结构模式加固你的代码*：本章介绍了你可以用来为你的类结构化以实现最大灵活性同时遵守在[*第2章*](B18605_02.xhtml#_idTextAnchor036)中提到的SOLID原则的技术。'
- en: '[*Chapter 5*](B18605_05.xhtml#_idTextAnchor089), *Wrangling Problem Code by
    Applying Behavioral Patterns*: Got algorithms? You need a flexible set of patterns
    in order to maximize their effectiveness and flexibility. You need behavioral
    patterns.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B18605_05.xhtml#_idTextAnchor089)，*通过应用行为模式处理问题代码*：你有算法吗？你需要一组灵活的模式来最大化其效果和灵活性。你需要行为模式。'
- en: '[*Chapter 6*](B18605_06.xhtml#_idTextAnchor110), *Step Away from the IDE! Designing
    with Patterns Before You Code*: In this chapter, we consider ways to design our
    code with patterns before we write a single line in our IDE. After an unfortunate
    turn of events in our story, we find our company drastically and rapidly changing
    direction. We need a new product design, and we need it last week! Let’s draw
    our designs in UML first! This saves a lot of time and energy and prevents the
    possibility of some pointy-haired boss telling us to ship a prototype.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](B18605_06.xhtml#_idTextAnchor110)，*在编码前使用模式进行设计*：在本章中，我们考虑了在IDE中编写第一行代码之前使用模式来设计我们的代码的方法。在我们的故事中发生了一些不幸的事件后，我们发现我们的公司急剧且迅速地改变方向。我们需要一个新的产品设计，而且我们需要它在上周！让我们先在UML中绘制我们的设计！这可以节省大量的时间和精力，并防止某些自以为是的老板告诉我们发货原型。'
- en: '[*Chapter 7*](B18605_07.xhtml#_idTextAnchor136), *Nothing Left but the Typing
    – Implementing the Wheelchair Project*: In the last chapter, we came up with an
    elegant set of design diagrams. In this chapter, we do the typing. You’ll implement
    the same patterns you learned earlier in the book, but this time, you’ll use them
    in concert with each other on a real-world project.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B18605_07.xhtml#_idTextAnchor136)，*除了打字别无他法 – 实现轮椅项目*：在上一个章节中，我们提出了一套优雅的设计图。在本章中，我们将进行打字。你将实现本书中早期学到的相同模式，但这次，你将在一个真实的项目中使用它们。'
- en: '[*Chapter 8*](B18605_08.xhtml#_idTextAnchor152), *Now You Know Some Patterns.
    What Next?*: We’ve had a lot of fun learning patterns so far, but this is only
    the tip of the iceberg. There are patterns everywhere! They aren’t limited to
    the practice of OOP. In this chapter, we cover the GoF patterns we didn’t cover
    in our story.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B18605_08.xhtml#_idTextAnchor152)，*你已经了解了一些模式。接下来是什么？*：到目前为止，我们已经愉快地学习了很多模式，但这只是冰山一角。模式无处不在！它们不仅限于面向对象实践。在本章中，我们涵盖了我们在故事中没有涉及到的GoF模式。'
- en: '*Chapter 9*, [*Appendix 1*](B18605_Appendix_1.xhtml#_idTextAnchor178) *– A
    Brief Review of OOP Principles in C#*: This appendix is designed for those who
    are new to C# or maybe haven’t used it in a while, or are coming from another
    language.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*第9章*，[*附录1*](B18605_Appendix_1.xhtml#_idTextAnchor178) *– C#面向对象原则简要回顾*：本附录是为那些刚接触C#或可能有一段时间没有使用它，或者是从其他语言过来的读者设计的。'
- en: '*Chapter 10*, [*Appendix 2*](B18605_Appendix_2.xhtml#_idTextAnchor204) *– A
    Primer on the Unified Modeling Language*: The Unified Modeling Language is a documentation
    convention used by software developers. It defines the structure of the pattern
    design diagrams used throughout the book. While UML has 14 different diagram types,
    we really only use class diagrams. Most presentations on patterns have two diagrams.
    I draw a generic one, and a second diagram that mirrors the project code. This
    appendix shows you the conventions used in the diagrams.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*第10章*，[*附录2*](B18605_Appendix_2.xhtml#_idTextAnchor204) *– 统一建模语言入门*：统一建模语言是软件开发者使用的文档规范。它定义了本书中使用的模式设计图的架构。虽然UML有14种不同的图类型，但我们实际上只使用类图。大多数关于模式的演示都有两个图。我画了一个通用的图，以及一个反映项目代码的第二张图。本附录展示了图中使用的规范。'
- en: To get the most out of this book
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了最大限度地利用这本书
- en: 'To get the most out of this book you should be familiar with C#. You need to
    be competent in using one of the three popular IDEs: Visual Studio, Rider, or
    Visual Studio Code. You should also understand basic object-oriented programming
    principles such as abstraction, inheritance, encapsulation, and composition.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为了充分利用这本书，你应该熟悉 C#。你需要能够熟练使用三种流行的 IDE 之一：Visual Studio、Rider 或 Visual Studio
    Code。你还应该了解基本的面向对象编程原则，如抽象、继承、封装和组合。
- en: I don’t spend very much time covering how to use your IDE in this book. However,
    I do include [*Appendix 1*](B18605_Appendix_1.xhtml#_idTextAnchor178), which covers
    how to create a project just in case you’re rusty. This book isn’t designed to
    be a step-by-step guide through a set of projects. The code in the sample projects
    doesn’t matter. We’re focusing on the structure of the code, rather than the content
    of the classes.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这本书中并没有花很多时间来介绍如何使用你的集成开发环境（IDE）。然而，我确实包括了[*附录1*](B18605_Appendix_1.xhtml#_idTextAnchor178)，它涵盖了如何创建项目，以防你有些生疏。这本书的设计并不是要逐步引导你通过一系列项目。示例项目中的代码并不重要。我们关注的是代码的结构，而不是类的内容。
- en: The projects in this book are all either command-line or library projects. We
    won’t be working with any frontend or user interface code. This is done to reduce
    the level of noise in the projects. I want you focused on the structure of the
    classes, not what is inside them, nor even what the program is really doing.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书中的所有项目都是命令行或库项目。我们不会处理任何前端或用户界面代码。这样做是为了减少项目中的噪音水平。我希望你专注于类的结构，而不是它们内部的内容，甚至不是程序真正在做什么。
- en: I used Windows 10 to create the code in this book. If you want to follow along
    with the code in the book, you can probably use macOS or Linux. However, I don’t
    cover those operating systems explicitly, nor do I test the sample code in operating
    systems other than Windows.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用 Windows 10 创建了这本书中的代码。如果你想跟随书中的代码，你可能会使用 macOS 或 Linux。然而，我没有明确涵盖那些操作系统，也没有在其他操作系统上测试示例代码。
- en: If you intend to code along with our book’s heroes, you’ll need to set up your
    computer with an appropriate IDE, and .NET Core 6 or later. I used Rider as my
    IDE, but I verified the code in Visual Studio 2022 and Visual Studio Code.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打算与本书的英雄一起编码，你需要设置一个合适的 IDE 和 .NET Core 6 或更高版本。我使用 Rider 作为我的 IDE，但我在 Visual
    Studio 2022 和 Visual Studio Code 中验证了代码。
- en: '| **Software/hardware covered in the book** | **Operating system requirements**
    |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| **本书涵盖的软件/硬件** | **操作系统要求** |'
- en: '| C# 10 | Windows |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| C# 10 | Windows |'
- en: '| .NET Core 6 | Windows |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| .NET Core 6 | Windows |'
- en: '| Rider, Visual Studio, or Visual Studio Code | Windows |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| Rider、Visual Studio 或 Visual Studio Code | Windows |'
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting of code.**'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你使用的是这本书的数字版，我们建议你亲自输入代码或从书的 GitHub 仓库（下一节中有一个链接）获取代码。这样做将帮助你避免与代码复制粘贴相关的任何潜在错误。**'
- en: I strongly encourage you to type the code from the book by hand. You’ll learn
    more by typing it out, by making mistakes, and then fixing them yourself.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我强烈建议你亲手输入书中的代码。通过这样做，你会从打字中学习更多，通过犯错误，然后自己修复它们。
- en: Download the example code files
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: 'You can download the example code files for this book from GitHub at [https://github.com/Kpackt/Real-World-Implementation-of-C-Design-Patterns](https://github.com/Kpackt/Real-World-Implementation-of-C-Design-Patterns).
    Please note that GitHub won’t allow us to use the # character in C# so the name
    of the repository is slightly misleading. If there’s an update to the code, it
    will be updated in the GitHub repository.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '你可以从 GitHub 下载这本书的示例代码文件，链接为 [https://github.com/Kpackt/Real-World-Implementation-of-C-Design-Patterns](https://github.com/Kpackt/Real-World-Implementation-of-C-Design-Patterns)。请注意，GitHub
    不允许我们在 C# 中使用 # 字符，所以仓库的名称有些误导。如果代码有更新，它将在 GitHub 仓库中更新。'
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有来自我们丰富的图书和视频目录的其他代码包，可在 [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)
    获取。查看它们！
- en: This book has a companion website developed by the author. You can find it at
    [https://csharppatterns.dev](https://csharppatterns.dev).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书有一个由作者开发的配套网站。你可以在 [https://csharppatterns.dev](https://csharppatterns.dev)
    找到它。
- en: Download the images
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载图片
- en: 'We also provide a PDF file that has color images of the screenshots and diagrams
    used in this book. You can download it here: [https://packt.link/3KWzG](https://packt.link/3KWzG).'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一份包含本书中使用的截图和图表彩色图像的PDF文件。您可以从这里下载：[https://packt.link/3KWzG](https://packt.link/3KWzG)。
- en: Conventions used
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “Kitty starts by creating an abstraction for what
    the builders will be producing – that is, the product. She creates an interface
    called `IBicycleProduct`.”'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称。以下是一个示例：“Kitty首先为构建者将要生产的内容创建一个抽象——即产品。她创建了一个名为`IBicycleProduct`的接口。”'
- en: 'A block of code is set as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望将您的注意力引到代码块的一个特定部分时，相关的行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都如下所示：
- en: '[PRE2]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tips or important notes
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士或重要提示
- en: Appear like this.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来是这样的。
- en: Get in touch
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们欢迎读者的反馈。
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**: 如果你对本书的任何方面有疑问，请通过[客户关怀@packtpub.com](mailto:customercare@packtpub.com)给我们发邮件，并在邮件主题中提及书名。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误表**: 尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果您在本书中发现错误，我们将不胜感激，如果您能向我们报告，请访问[www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)并填写表格。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**: 如果你在互联网上以任何形式遇到我们作品的非法副本，如果你能提供位置地址或网站名称，我们将不胜感激。请通过[版权@packt.com](mailto:copyright@packt.com)与我们联系，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**：如果您在某个领域有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问[authors.packtpub.com](http://authors.packtpub.com)。'
- en: Share Your Thoughts
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享您的想法
- en: Once you’ve read *Real-World Implementation of C# Design Patterns*, we’d love
    to hear your thoughts! Please [click here to go straight to the Amazon review
    page](https://packt.link/r/1-803-24273-6) for this book and share your feedback.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 读完《C#设计模式的实际应用》后，我们非常乐意听到您的想法！请[点击此处直接进入此书的亚马逊评论页面](https://packt.link/r/1-803-24273-6)并分享您的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您的评论对我们和科技社区都很重要，并将帮助我们确保我们提供高质量的内容。
- en: '![](img/part-1-big-ball-of-mud-on-you-plate-of-spaghetti-2-bw.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/part-1-big-ball-of-mud-on-you-plate-of-spaghetti-2-bw.jpg)'
- en: 'Part 1: Introduction to Patterns (Pasta) and Antipatterns (Antipasta)'
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一部分：模式的介绍（意大利面）和反模式（反意大利面）
- en: We will begin *Part 1* by describing what patterns are and where they came from
    and giving an overview of how they work and why you’d want to learn them.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在第一部分中描述模式是什么，它们从何而来，以及它们是如何工作的概述，以及为什么你想学习它们。
- en: 'This part covers the following chapters:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分涵盖了以下章节：
- en: '[*Chapter 1*](B18605_01.xhtml#_idTextAnchor016), *There’s a Big Ball of Mud
    on Your Plate of Spaghetti*'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第一章*](B18605_01.xhtml#_idTextAnchor016)，*你的意大利面盘上有一大团泥巴*'
- en: '[*Chapter 2*](B18605_02.xhtml#_idTextAnchor036), *Prepping for Practical Real-World
    Applications of Patterns in C#*'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第二章*](B18605_02.xhtml#_idTextAnchor036)，*为C#中模式的应用做准备*'
