- en: Using Custom Controls and User Controls
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating a custom control
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customizing the template of a custom control
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exposing properties from a custom control
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exposing events from a custom control
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extending the functionality of a control using behavior
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a User Control interface
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exposing events from a User Control
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customizing the XMLNS namespace
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A custom control is a loosely coupled control defined in a class which derives
    from the `System.Windows.Controls.Control` class. You may also derive it from
    a different custom control, depending on your requirement.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/53586c85-931b-4eee-a86d-64a0612cc73f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The UI of custom control is generally defined in a **resource dictionary**
    inside the `resource` file. We can create themes for custom control and reuse
    them in various projects very easily:'
  prefs: []
  type: TYPE_NORMAL
- en: Generally, the **custom controls** are compiled into a `dll` assembly and can
    be reused in multiple places very easily. You have total control over its code,
    and thus it gives you more flexibility to extend the behavior. Once you build
    and add a reference to the custom control in your project, you can find it in
    the Visual Studio control toolbox, which will allow you to drag and drop the control
    in your XAML design view and start working with it.
  prefs: []
  type: TYPE_NORMAL
- en: 'On the other end, **User Control** is nothing but a custom control that you
    derive to control the UI specific to your project. It derives from the `System.Windows.Controls.UserControls`
    class, which basically inherits from `System.Windows.Controls.Control`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e96ee1e2-b353-4385-81d8-a2bdb808dfdb.png)'
  prefs: []
  type: TYPE_IMG
- en: Generally, the User Control gets placed inside a XAML page with tight bonding
    to its code behind. You can directly access its UI elements from the code behind
    and do some specific operations.
  prefs: []
  type: TYPE_NORMAL
- en: A point to remember is that you can't create theming support for User Controls
    but you can style them by creating theme for its child, custom controls. Also,
    once you create a User Control UI in one project, you can't change it in the other
    projects.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will learn how to create custom controls and User Controls,
    and then customize them based on need.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a custom control
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before working with custom controls, you will need to know how to create custom
    controls and how to add them to any XAML pages. In this recipe, we will learn
    these basic operations first.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's open the Visual Studio IDE and create a new WPF application project, called
    `CH05.SearchControlDemo`.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to create your first custom control, which will
    contain a text input box and a button to build a search control. At the end, we
    will add it to the application window:'
  prefs: []
  type: TYPE_NORMAL
- en: Once the project has been created, right-click on the project, from Solution
    Explorer, and follow Add | New Item... from the context menu entries. A new dialog
    window will pop up on the screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Inside the Add New Item dialog window, expand the Installed | Visual C# | WPF
    tree item, from the left navigation panel, and select Custom Control (WPF) from
    the right screen:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a82f1bde-027d-4863-a7f8-04f7646a1311.png)'
  prefs: []
  type: TYPE_IMG
- en: Give the custom control a name (let's say, `SearchControl.cs`) and click Add
    to create it. This will create the class file named `SearchControl.cs` inside
    the project, and a folder (named `Themes`) containing a `Generic.xaml` file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open the `Generic.xaml` file, which will contain a `Style` for the custom control
    that we created. This gets generated automatically by the Visual Studio IDE, while
    creating the custom control from the default template. Here''s the default `Style`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Now replace the preceding `Style` of the control with the following one, which
    contains an input box and a button, as the control template inside a `Grid`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Now open the `MainWindow.xaml` page, and add the following XMLNS namespace:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: <Grid>
  prefs: []
  type: TYPE_NORMAL
- en: <controls:SearchControl Height="30"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Width="180"/>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </Grid>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: <TextBox x:Name="PART_TextBox"
  prefs: []
  type: TYPE_NORMAL
- en: Grid.Column="0"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Margin="2"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Background="{TemplateBinding Background}"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: HorizontalAlignment="Stretch"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: VerticalAlignment="Stretch"/>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: <ControlTemplate TargetType="{x:Type local:SearchControl}">
  prefs: []
  type: TYPE_NORMAL
- en: <Grid>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <Grid.ColumnDefinitions>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <ColumnDefinition Width="*"/>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <ColumnDefinition Width="Auto"/>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </Grid.ColumnDefinitions>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBox x:Name="PART_TextBox"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Grid.Column="0"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Margin="2"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Background="{TemplateBinding Background}"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderBrush="{TemplateBinding
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderBrush}"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderThickness="{TemplateBinding
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderThickness}"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Foreground="{TemplateBinding Foreground}"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: HorizontalAlignment="Stretch"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: VerticalAlignment="Stretch"/>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <Button x:Name="PART_Button"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Content="Search"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Grid.Column="1"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Margin="2" Padding="4 2"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Background="{TemplateBinding Background}"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Foreground="{TemplateBinding Foreground}"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: HorizontalAlignment="Stretch"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: VerticalAlignment="Stretch"/>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </Grid>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </ControlTemplate>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: <Setter Property="Height" Value="30"/>
  prefs: []
  type: TYPE_NORMAL
- en: <Setter Property="Width" Value="280"/>
  prefs: []
  type: TYPE_NORMAL
- en: <Setter Property="Background" Value="AliceBlue"/>
  prefs: []
  type: TYPE_NORMAL
- en: <Setter Property="BorderBrush" Value="LightSkyBlue"/>
  prefs: []
  type: TYPE_NORMAL
- en: <Setter Property="BorderThickness" Value="1"/>
  prefs: []
  type: TYPE_NORMAL
- en: <Setter Property="Foreground" Value="Navy"/>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: <Grid>
  prefs: []
  type: TYPE_NORMAL
- en: <controls:SearchControl
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Background="#2200FF00"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderThickness="2"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderBrush="GreenYellow"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Foreground="Green"/>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </Grid>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: <TextBox x:Name="PART_TextBox"
  prefs: []
  type: TYPE_NORMAL
- en: Grid.Column="0"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Margin="2"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Text="{TemplateBinding SearchTerm}"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Background="{TemplateBinding Background}"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderBrush="{TemplateBinding BorderBrush}"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderThickness="{TemplateBinding
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderThickness}"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Foreground="{TemplateBinding Foreground}"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: HorizontalAlignment="Stretch"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: VerticalAlignment="Stretch"/>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: <controls:SearchControl
  prefs: []
  type: TYPE_NORMAL
- en: SearchTerm="my search term"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Background="#2200FF00"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderThickness="2"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderBrush="GreenYellow"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Foreground="Green"/>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'public class SearchEventArgs : EventArgs'
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: public string SearchTerm { get; set; }
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: public delegate void OnSearchClick(object sender,
  prefs: []
  type: TYPE_NORMAL
- en: SearchEventArgs e);
  prefs: []
  type: TYPE_NORMAL
- en: public event OnSearchClick SearchButtonClick;
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: public override void OnApplyTemplate()
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: base.OnApplyTemplate();
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (GetTemplateChild("PART_Button") is Button
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: searchButton)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: searchButton.Click +=
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: OnSearchButtonClicked_Internal;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: private void OnSearchButtonClicked_Internal(object sender,
  prefs: []
  type: TYPE_NORMAL
- en: RoutedEventArgs e)
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: SearchButtonClick?.Invoke(this, new SearchEventArgs {
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: SearchTerm = SearchTerm });
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: <TextBox x:Name="PART_TextBox"
  prefs: []
  type: TYPE_NORMAL
- en: Grid.Column="0"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Margin="2"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Text="{Binding SearchTerm, RelativeSource={RelativeSource TemplatedParent},
    Mode=TwoWay}"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Background="{TemplateBinding Background}"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderBrush="{TemplateBinding BorderBrush}"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderThickness="{TemplateBinding
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderThickness}"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Foreground="{TemplateBinding Foreground}"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: HorizontalAlignment="Stretch"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: VerticalAlignment="Stretch"/>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: <controls:SearchControl
  prefs: []
  type: TYPE_NORMAL
- en: SearchTerm="my search term"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Background="#2200FF00"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderThickness="2"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: BorderBrush="GreenYellow"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Foreground="Green"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: SearchButtonClick="OnSearchButtonClicked"/>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: private void OnSearchButtonClicked(object sender,
  prefs: []
  type: TYPE_NORMAL
- en: SearchEventArgs e)
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: 'MessageBox.Show("You searched for: "" +'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: e.SearchTerm + """);
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: public override void OnApplyTemplate()
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: base.OnApplyTemplate();
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (GetTemplateChild("PART_Button") is Button searchButton)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: searchButton.Click += OnSearchButtonClicked_Internal;
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: <Grid>
  prefs: []
  type: TYPE_NORMAL
- en: <TextBlock Text="Hover to Grow the size!"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: HorizontalAlignment="Center"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: VerticalAlignment="Center">
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </TextBlock>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </Grid>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'public class GrowTextBehavior : Behavior<TextBlock>'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: public int GrowBySize { get; set; }
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: protected override void OnAttached()
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: base.OnAttached();
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: AssociatedObject.MouseEnter +=
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: AssociatedObject_MouseEnter;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: AssociatedObject.MouseLeave +=
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: AssociatedObject_MouseLeave;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: protected override void OnDetaching()
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: base.OnDetaching();
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: AssociatedObject.MouseEnter -=
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: AssociatedObject_MouseEnter;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: AssociatedObject.MouseLeave -=
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: AssociatedObject_MouseLeave;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: private void AssociatedObject_MouseLeave(object sender,
  prefs: []
  type: TYPE_NORMAL
- en: MouseEventArgs e)
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: AssociatedObject.FontSize -= GrowBySize;
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: private void AssociatedObject_MouseEnter(object sender,
  prefs: []
  type: TYPE_NORMAL
- en: MouseEventArgs e)
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: AssociatedObject.FontSize += GrowBySize;
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: <Grid>
  prefs: []
  type: TYPE_NORMAL
- en: <TextBlock Text="Hover to Grow the size!"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: HorizontalAlignment="Center"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: VerticalAlignment="Center">
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <i:Interaction.Behaviors>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <b:GrowTextBehavior GrowBySize="10"/>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </i:Interaction.Behaviors>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </TextBlock>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </Grid>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: <TextBlock Text="Hover to Grow the size!"
  prefs: []
  type: TYPE_NORMAL
- en: HorizontalAlignment="Center"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: VerticalAlignment="Center">
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <i:Interaction.Behaviors>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <b:GrowTextBehavior GrowBySize="10"/>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </i:Interaction.Behaviors>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </TextBlock>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: public Color SelectedColor
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: get { return (Color)GetValue(SelectedColorProperty); }
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: set { SetValue(SelectedColorProperty, value); }
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: public static readonly DependencyProperty
  prefs: []
  type: TYPE_NORMAL
- en: SelectedColorProperty =
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: DependencyProperty.Register("SelectedColor",
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: typeof(Color), typeof(ColorMixer),
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: new PropertyMetadata(Colors.OrangeRed));
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: DataContext="{Binding ElementName=userControl}"
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: <Grid.RowDefinitions>
  prefs: []
  type: TYPE_NORMAL
- en: <RowDefinition Height="*"/>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <RowDefinition Height="Auto"/>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </Grid.RowDefinitions>
  prefs: []
  type: TYPE_NORMAL
- en: <Grid.ColumnDefinitions>
  prefs: []
  type: TYPE_NORMAL
- en: <ColumnDefinition Width="*"/>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <ColumnDefinition Width="Auto"/>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </Grid.ColumnDefinitions>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: <Border BorderThickness="1" BorderBrush="Gray"
  prefs: []
  type: TYPE_NORMAL
- en: Grid.Row="0" Grid.Column="0">
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <Border.Background>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <SolidColorBrush Color="{Binding SelectedColor}"/>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </Border.Background>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </Border>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: <StackPanel Orientation="Vertical"
  prefs: []
  type: TYPE_NORMAL
- en: Grid.Row="0" Grid.Column="1"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Margin="8 4">
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBlock Text="R:"/>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBox Width="100" />
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBlock Text="G:"/>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBox Width="100" />
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBlock Text="B:"/>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBox Width="100" />
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBlock Text="A:"/>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBox Width="100" />
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </StackPanel>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: <StackPanel Orientation="Horizontal"
  prefs: []
  type: TYPE_NORMAL
- en: Margin="4">
  prefs: []
  type: TYPE_NORMAL
- en: <local:ColorMixer />
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <local:ColorMixer />
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </StackPanel>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: public object Convert(object value,
  prefs: []
  type: TYPE_NORMAL
- en: Type targetType,
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: object parameter,
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: CultureInfo culture)
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: if (value is Color color &&
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: parameter is string parameterValue) //C# 7.x syntax
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: oldColor = color;
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: switch (parameterValue)
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'case "r":'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: return color.R;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'case "g":'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: return color.G;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'case "b":'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: return color.B;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'default:'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: return color.A;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: return value;
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: public object ConvertBack(object value,
  prefs: []
  type: TYPE_NORMAL
- en: Type targetType,
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: object parameter,
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: CultureInfo culture)
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: var color = oldColor;
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: var colorValue = System.Convert.ToByte(value);
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (parameter is string parameterValue) //C# 7.x syntax
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: switch (parameterValue)
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'case "r":'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: color.R = (byte)colorValue;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: break;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'case "g":'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: color.G = (byte)colorValue;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: break;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'case "b":'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: color.B = (byte)colorValue;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: break;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'default:'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: color.A = (byte)colorValue;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: break;
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: oldColor = color;
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: return color;
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: <UserControl.Resources>
  prefs: []
  type: TYPE_NORMAL
- en: <local:ColorToByteConverter
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: x:Key="ColorToByteConverter"/>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </UserControl.Resources>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: <StackPanel Orientation="Vertical"
  prefs: []
  type: TYPE_NORMAL
- en: Grid.Row="0" Grid.Column="1"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Margin="8 4">
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBlock Text="R:"/>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBox Width="100"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Text="{Binding SelectedColor, Converter={StaticResource ColorToByteConverter},
    ConverterParameter=r, Mode=TwoWay}"/>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBlock Text="G:"/>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBox Width="100"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Text="{Binding SelectedColor, Converter={StaticResource ColorToByteConverter},
    ConverterParameter=g, Mode=TwoWay}"/>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBlock Text="B:"/>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBox Width="100"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Text="{Binding SelectedColor, Converter={StaticResource ColorToByteConverter},
    ConverterParameter=b, Mode=TwoWay}"/>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBlock Text="A:"/>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <TextBox Width="100"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Text="{Binding SelectedColor, Converter={StaticResource ColorToByteConverter},
    ConverterParameter=a, Mode=TwoWay}"/>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </StackPanel>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: switch (parameterValue)
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: 'case "r":'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: return color.R;
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'case "g":'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: return color.G;
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'case "b":'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: return color.B;
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'default:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: return color.A;
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: <StackPanel Orientation="Horizontal"
  prefs: []
  type: TYPE_NORMAL
- en: Grid.Row="1" Grid.Column="0"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Grid.ColumnSpan="2"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Margin="4 10 4 4"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: HorizontalAlignment="Right">
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <Button Content="OK" Margin="4"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Width="50" Click="OnOkClicked"/>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <Button Content="Cancel" Margin="4"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Width="50" Click="OnCancelClicked"/>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </StackPanel>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: public delegate void OnOkButtonClick(object sender,
  prefs: []
  type: TYPE_NORMAL
- en: EventArgs e);
  prefs: []
  type: TYPE_NORMAL
- en: public delegate void OnCancelButtonClick(object sender,
  prefs: []
  type: TYPE_NORMAL
- en: EventArgs e);
  prefs: []
  type: TYPE_NORMAL
- en: public event OnOkButtonClick OkButtonClick;
  prefs: []
  type: TYPE_NORMAL
- en: public event OnCancelButtonClick CancelButtonClick;
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: private void OnOkClicked(object sender, RoutedEventArgs e)
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: OkButtonClick?.Invoke(sender, e);
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: private void OnCancelClicked(object sender, RoutedEventArgs e)
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: CancelButtonClick?.Invoke(sender, e);
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: <local:ColorMixer OkButtonClick="OnOkClicked"
  prefs: []
  type: TYPE_NORMAL
- en: CancelButtonClick="OnCancelClicked"/>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: private void OnOkClicked(object sender, EventArgs e)
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: MessageBox.Show("OK button clicked");
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: private void OnCancelClicked(object sender, EventArgs e)
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: MessageBox.Show("Cancel button clicked");
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '[assembly: XmlnsPrefix("http://schemas.kunal-chowdhury.com/xaml/behaviors",
    "behaviors")]'
  prefs: []
  type: TYPE_NORMAL
- en: '[assembly: XmlnsDefinition("http://schemas.kunal-chowdhury.com/xaml/behaviors",
    "CH05.NamespaceCustomizationDemo.Behaviors")]'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '[assembly: XmlnsPrefix("http://schemas.kunal-chowdhury.com/xaml/converters",
    "converters")]'
  prefs: []
  type: TYPE_NORMAL
- en: '[assembly: XmlnsDefinition("http://schemas.kunal-chowdhury.com/xaml/converters",
    "CH05.NamespaceCustomizationDemo.Converters")]'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
