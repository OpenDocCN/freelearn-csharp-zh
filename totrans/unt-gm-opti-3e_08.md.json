["```cs\nfloat4 input = float4(1.0, 2.0, 3.0, 4.0);  // initial test value (x, y, z, w)\n\n// swizzle two components\nfloat2 val1 = input.yz; // val1 = (2.0, 3.0)\n\n// swizzle three components in a different order\nfloat3 val2 = input.zyx; // val2 = (3.0, 2.0, 1.0)\n\n// swizzle the same component multiple times\nfloat4 val3 = input.yyy; // val3 = (2.0, 2.0, 2.0)\n\n// swizzle a scalar multiple times\nfloat sclr = input.w; // sclr = (4.0)\nfloat3 val4 = sclr.xxx; // val4 = (4.0, 4.0, 4.0)\n```", "```cs\nCGPROGRAM\n// other includes\n#include \"UnityCG.cginc\"\n// Shader code here\nENDCG\n```", "```cs\nfloat sum = input.color1.r;\nsum = sum + input.color2.g;\nsum = sum + input.color3.b;\nsum = sum + input.color4.a;\nfloat result = calculateSomething(sum);\n```", "```cs\nfloat sum1, sum2, sum3, sum4;\nsum1 = input.color1.r;\nsum2 = input.color2.g;\nsum3 = input.color3.b;\nsum4 = input.color4.a;\nfloat sum = sum1 + sum2 + sum3 + sum4;\nfloat result = CalculateSomething(sum);\n```", "```cs\nfloat4 val1 = tex2D(_tex1, input.texcoord.xy);\nfloat4 val2 = tex2D(_tex2, val1.yz); // requires data from _tex1\nfloat4 val3 = tex2D(_tex3, val2.zw); // requires data from _tex2\n```", "```cs\nGetComponent<Renderer>().material.texture = textureToPreload;\n```"]