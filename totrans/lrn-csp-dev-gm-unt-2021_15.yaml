- en: Pop Quiz Answers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Chapter 1 – Getting to Know Your Environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pop quiz – dealing with scripts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Q1 | Unity and Visual Studio have a symbiotic relationship |'
  prefs: []
  type: TYPE_TB
- en: '| Q2 | The Reference Manual |'
  prefs: []
  type: TYPE_TB
- en: '| Q3 | None, as it is a reference document, not a test |'
  prefs: []
  type: TYPE_TB
- en: '| Q4 | When the new file appears in the **Project** tab with the filename in
    edit mode, which will make the class name the same as the filename and prevent
    naming conflicts |'
  prefs: []
  type: TYPE_TB
- en: Chapter 2 – The Building Blocks of Programming
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pop quiz – C# building blocks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Q1 | Storing a specific type of data for use elsewhere in a C# file |'
  prefs: []
  type: TYPE_TB
- en: '| Q2 | Methods store executable lines of code for fast and efficient reuse
    |'
  prefs: []
  type: TYPE_TB
- en: '| Q3 | By adopting `MonoBehaviour` as its parent class and attaching it to
    a GameObject |'
  prefs: []
  type: TYPE_TB
- en: '| Q4 | To access variables and methods of components or files attached to different
    GameObjects |'
  prefs: []
  type: TYPE_TB
- en: Chapter 3 – Diving into Variables, Types, and Methods
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Pop quiz #1 – variables and methods'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Q1 | Using camelCase |'
  prefs: []
  type: TYPE_TB
- en: '| Q2 | Declare the variable as `public` |'
  prefs: []
  type: TYPE_TB
- en: '| Q3 | `public`, `private`, `protected`, and `internal` |'
  prefs: []
  type: TYPE_TB
- en: '| Q4 | When an implicit conversion doesn''t already exist |'
  prefs: []
  type: TYPE_TB
- en: '| Q5 | The type of data returned from the method, the name of the method with
    parentheses, and a pair of curly brackets for the code block |'
  prefs: []
  type: TYPE_TB
- en: '| Q6 | To allow parameter data to be passed into the code block |'
  prefs: []
  type: TYPE_TB
- en: '| Q7 | The method will not return any data |'
  prefs: []
  type: TYPE_TB
- en: '| Q8 | The `Update()` method is called every frame |'
  prefs: []
  type: TYPE_TB
- en: Chapter 4 – Control Flow and Collection Types
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Pop quiz #1 – if, and, or but'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Q1 | True or false |'
  prefs: []
  type: TYPE_TB
- en: '| Q2 | The NOT operator, written with the exclamation mark symbol (`!`) |'
  prefs: []
  type: TYPE_TB
- en: '| Q3 | The AND operator, written with double ampersand symbols (`&&`) |'
  prefs: []
  type: TYPE_TB
- en: '| Q4 | The OR operator, written with double bars (`&#124;&#124;`) |'
  prefs: []
  type: TYPE_TB
- en: 'Pop quiz #2 – all about collections'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Q1 | The location where data is stored |'
  prefs: []
  type: TYPE_TB
- en: '| Q2 | The first element in an array or list is 0, as they are both zero-indexed
    |'
  prefs: []
  type: TYPE_TB
- en: '| Q3 | No — when an array or a list is declared, the type of data it stores
    is defined, making it impossible for elements to be of different types |'
  prefs: []
  type: TYPE_TB
- en: '| Q4 | An array cannot be dynamically expanded once it is initialized, which
    is why lists are a more flexible choice as they can be dynamically modified |'
  prefs: []
  type: TYPE_TB
- en: Chapter 5 – Working with Classes, Structs, and OOP
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pop quiz – all things OOP
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Q1 | The constructor |'
  prefs: []
  type: TYPE_TB
- en: '| Q2 | By copy, rather than by reference like classes |'
  prefs: []
  type: TYPE_TB
- en: '| Q3 | Encapsulation, inheritance, composition, and polymorphism |'
  prefs: []
  type: TYPE_TB
- en: '| Q4 | `GetComponent` |'
  prefs: []
  type: TYPE_TB
- en: Chapter 6 – Getting Your Hands Dirty with Unity
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pop quiz – basic Unity features
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Q1 | Primitives |'
  prefs: []
  type: TYPE_TB
- en: '| Q2 | The *z* axis |'
  prefs: []
  type: TYPE_TB
- en: '| Q3 | Drag the GameObject into the `Prefabs` folder |'
  prefs: []
  type: TYPE_TB
- en: '| Q4 | Keyframes |'
  prefs: []
  type: TYPE_TB
- en: Chapter 7 – Movement, Camera Controls, and Collisions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pop quiz – player controls and physics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Q1 | `Vector3` |'
  prefs: []
  type: TYPE_TB
- en: '| Q2 | `InputManager` |'
  prefs: []
  type: TYPE_TB
- en: '| Q3 | A `Rigidbody` component |'
  prefs: []
  type: TYPE_TB
- en: '| Q4 | `FixedUpdate` |'
  prefs: []
  type: TYPE_TB
- en: Chapter 8 – Scripting Game Mechanics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pop quiz – working with mechanics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Q1 | A set or collection of named constants that belong to the same variable
    |'
  prefs: []
  type: TYPE_TB
- en: '| Q2 | Using the `Instantiate()` method with an existing Prefab |'
  prefs: []
  type: TYPE_TB
- en: '| Q3 | The `get` and `set` accessors |'
  prefs: []
  type: TYPE_TB
- en: '| Q4 | `OnGUI()` |'
  prefs: []
  type: TYPE_TB
- en: Chapter 9 – Basic AI and Enemy Behavior
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pop quiz – AI and navigation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Q1 | It''s generated automatically from the level geometry |'
  prefs: []
  type: TYPE_TB
- en: '| Q2 | `NavMeshAgent` |'
  prefs: []
  type: TYPE_TB
- en: '| Q3 | Procedural programming |'
  prefs: []
  type: TYPE_TB
- en: '| Q4 | Don''t repeat yourself |'
  prefs: []
  type: TYPE_TB
- en: Chapter 10 – Revisiting Types, Methods, and Classes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pop quiz – leveling up
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Q1 | `Readonly` |'
  prefs: []
  type: TYPE_TB
- en: '| Q2 | Change the number of method parameters or their parameter types |'
  prefs: []
  type: TYPE_TB
- en: '| Q3 | Interfaces cannot have method implementations or stored variables |'
  prefs: []
  type: TYPE_TB
- en: '| Q4 | Create a type alias to differentiate conflicting namespaces |'
  prefs: []
  type: TYPE_TB
- en: Chapter 11 – Introducing Stacks, Queues, and HashSets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pop quiz – intermediate collections
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Q1 | Stacks |'
  prefs: []
  type: TYPE_TB
- en: '| Q2 | Peek |'
  prefs: []
  type: TYPE_TB
- en: '| Q3 | Yes |'
  prefs: []
  type: TYPE_TB
- en: '| Q4 | `ExceptWith` |'
  prefs: []
  type: TYPE_TB
- en: Chapter 12 – Saving, Loading, and Serializing Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pop quiz – data management
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Q1 | The `System.IO` namespace |'
  prefs: []
  type: TYPE_TB
- en: '| Q2 | `Application.persistentDataPath` |'
  prefs: []
  type: TYPE_TB
- en: '| Q3 | Streams read and write data as bytes |'
  prefs: []
  type: TYPE_TB
- en: '| Q4 | The entire C# class object is converted into JSON format |'
  prefs: []
  type: TYPE_TB
- en: Chapter 13 – Exploring Generics, Delegates, and Beyond
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pop quiz – intermediate C#
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Q1 | Generic classes need to have a defined type parameter |'
  prefs: []
  type: TYPE_TB
- en: '| Q2 | The `values` method and the `delegates` method signature |'
  prefs: []
  type: TYPE_TB
- en: '| Q3 | The `-=` operator |'
  prefs: []
  type: TYPE_TB
- en: '| Q4 | The `throw` keyword |'
  prefs: []
  type: TYPE_TB
- en: JOIN us on Discord!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Read this book alongside other users, Unity/C# experts, and Harrison Ferrone.
    Ask questions, provide solutions to other readers, chat with the author via *Ask
    Me Anything sessions* and much more.
  prefs: []
  type: TYPE_NORMAL
- en: Join Now!
  prefs: []
  type: TYPE_NORMAL
- en: '[https://packt.link/csharpunity2021](https://packt.link/csharpunity2021)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/QR_Code_9781801813945.png)'
  prefs: []
  type: TYPE_IMG
