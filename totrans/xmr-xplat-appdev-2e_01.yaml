- en: Chapter 1. Setting Up Xamarin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Xamarin's development tools have given us the power to develop native iOS, Android,
    and Mac applications in C#, which is one of the most popular programming languages.
    There are many advantages of choosing Xamarin to develop mobile applications instead
    of Java and Objective-C. You can share code between both the platforms and can
    be more productive by taking advantage of the advanced language features of C#
    and the .NET base class libraries. Alternatively, you would have to write the
    app twice for Android and iOS and lose the benefits of garbage collection when
    using Objective-C.
  prefs: []
  type: TYPE_NORMAL
- en: In comparison to other techniques of developing cross-platform applications
    with JavaScript and HTML, Xamarin also has some distinct advantages. C# is generally
    more performant than JavaScript, and Xamarin gives developers direct access to
    the native APIs on each platform. This allows Xamarin applications to have a native
    look and perform in a manner similar to their Java or Objective-C counterparts.
  prefs: []
  type: TYPE_NORMAL
- en: Xamarin's tooling works by compiling your C# into a native **ARM** executable
    that can be packaged as an iOS or Android application. It bundles a stripped-down
    version of the Mono runtime with your application that only includes the features
    of the base class libraries your app uses.
  prefs: []
  type: TYPE_NORMAL
- en: '![Setting Up Xamarin](img/00002.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: In this chapter, we'll set up everything you need to get started on developing
    with Xamarin. By the end of this chapter, we'll have all the proper SDKs and tools
    installed and all the developer accounts needed for app store submission.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: An introduction to Xamarin tools and technology
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Xcode, Apple's IDE
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up all Xamarin tools and software
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up the Android emulator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enrolling in the iOS Developer Program
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Registering for Google Play
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Xamarin tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Xamarin has developed three core products for developing cross-platform applications:
    **Xamarin Studio** (formerly MonoDevelop), **Xamarin.iOS** (formerly MonoTouch),
    and **Xamarin.Android** (formerly Mono for Android). These tools allow developers
    to leverage the native libraries on iOS and Android and are built on the Mono
    runtime.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Mono**, an open source implementation of C# and the .NET framework, was originally
    developed by Novell to be used on Linux operating systems. Since iOS and Android
    are similarly based on Linux, Novell was able to develop MonoTouch and Mono for
    Android as products to target the new mobile platforms. Shortly after their release,
    another company acquired Novell, and the Mono team left to form a new company.
    Very shortly after, Xamarin was founded to focus completely on these tools for
    developing with C# on iOS and Android.'
  prefs: []
  type: TYPE_NORMAL
- en: Getting a development machine ready for cross-platform application development
    can take some time. And to make matters worse, Apple and Google both have their
    own requirements for development on their respective platforms. Let's go over
    what needs to be installed on your machine.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started on iOS, we''ll need to install the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Xcode**: This is the core IDE for developing iOS and Mac applications in
    Objective-C'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Xcode Command Line Tools**: These are installed inside Xcode, and provide
    common command-line tools and scripting languages that developers will find useful,
    such as Subversion, Git, Perl, and Ruby'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Mono runtime for Mac**: This is required for compiling and running C#
    programs on OS X'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Xamarin.iOS**: This is Xamarin''s core product for iOS development'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Android also requires the following software to be installed to get started:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Java**: This is the core runtime for running Java applications on OS X'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Android SDK**: This contains Google''s standard SDK, device drivers, and
    emulators for native Android development'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Mono runtime for Mac**: This is required for compiling and running C#
    programs on OS X'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Xamarin.Android**: This is Xamarin''s core product for Android development'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each of these will take some time to download and install. If you can access
    a fast Internet connection, it will help speed up the installation and setup process.
    With everything ready to go, let's move ahead step-by-step, and hopefully, we
    can skip a few dead-ends you might otherwise run into.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is important to note that Xamarin can also be used on Windows and Visual
    Studio, even though it is not covered in this book. A Mac is required for iOS
    development, so Windows developers must connect Visual Studio to a Mac to compile
    for iOS. Luckily, most of what we learn in this book can be directly applied to
    using Xamarin on Windows.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Xcode
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To make things progress more smoothly, let''s start off by installing Xcode
    for Mac. Along with Apple''s IDE, it will also install the most commonly used
    developer tools on the Mac. Make sure you have at least OS X 10.8 (Mountain Lion),
    and locate Xcode in the App Store, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Xcode](img/00003.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: This will take quite some time to download and install. I'd recommend that you
    take the time to enjoy a nice cup of coffee or work on another project to pass
    the time.
  prefs: []
  type: TYPE_NORMAL
- en: When that is out of the way, launch Xcode for the first time and progress through
    the initial startup dialog. Next, navigate to **Xcode** | **Preferences…** to
    open Xcode's main settings dialog.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **Downloads** tab, you''ll notice several additional packages you can
    install inside Xcode. Here, you can download the official iOS documentation, which
    the Xamarin installer will make use of. Optionally, you can install older iOS
    simulators, but we can just use the default one for the content in this book.
    When you''re finished, your Xcode''s **Components** section should look something
    similar to the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Xcode](img/00004.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Installing Xcode installs the iOS SDK, which is a requirement for iOS development
    in general. As a restriction from Apple, the iOS SDK can only run on a Mac. Xamarin
    has done everything possible to make sure they follow Apple's guidelines for iOS,
    such as restricting dynamic code generation. Xamarin's tools also leverage features
    of Xcode wherever possible to avoid reinventing the wheel.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Xamarin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After installing Xcode, there are several other dependencies that need to be
    installed in order prior to developing with Xamarin's tools. Luckily, Xamarin
    has improved the experience by creating a neat all-in-one installer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Install the free Xamarin Starter Edition by performing the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to [http://Xamarin.com](http://Xamarin.com) and click on the large **Download
    now** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fill out some basic information about yourself.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Download the `XamarinInstaller.dmg` file and mount the disk image.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Launch `Install Xamarin.app` and accept any OS X security warnings that appear.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Progress through the installer; the default options will work fine. You can
    optionally install **Xamarin.Mac**, but this topic is not covered in this book.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Xamarin installer will download and install prerequisites such as the Mono
    runtime, Java, the Android SDK (including the Android emulator and tools), and
    everything else you need to get up and running.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will end up with something similar to what is shown in the following screenshot,
    and we can move on to conquer bigger topics in cross-platform development:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Xamarin](img/00005.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Choosing a Xamarin license
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Xamarin's tools can seem a bit pricy to the casual observer, but I tend to think
    of it as how much time you will save using a more productive language such as
    C#. Additionally, their products will save you a good percentage of development
    time by enabling you to develop a cross-platform application instead of writing
    it twice in Java and Objective-C.
  prefs: []
  type: TYPE_NORMAL
- en: 'Xamarin has several editions, so it is good to know the differences in order
    to determine which license you might need to purchase. The editions are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Starter Edition**: This is available to individuals only, and it has a limit
    of 64 KB of compiled user code. Certain features are unavailable such as the Xamarin.Forms
    framework and calling into third-party native libraries.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Indie Edition**: This is available to individuals only, and it does not include
    Visual Studio support.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Business Edition**: This is available for companies; it adds features for
    Visual Studio and includes better Xamarin product support.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enterprise Edition**: This includes prime components in the Xamarin Component
    Store for free and many more Xamarin support options such as hotfixes and less
    than 24 hours response time to issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up the Android emulator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Android emulator has historically been known to be sluggish compared to
    developing on a physical device. To help solve this issue, Google has produced
    a new x86 emulator that supports hardware acceleration on desktop computers. It
    isn't installed by default in the **Android Virtual Device** (**AVD**) Manager,
    so let's set that up.
  prefs: []
  type: TYPE_NORMAL
- en: 'The x86 Android emulator can be installed by performing the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open Xamarin Studio.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to **Tools** | **Open Android SDK Manager…**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scroll down to **Extras**; install **Intel x86 Emulator Accelerator (HAXM)**.
    This will download an installer that we have to run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open Finder and press *Command* + *Shift* + *G* to open the navigation popup.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to `~/Library/Developer/Xamarin/android-sdk-macosx/extras/intel` and
    install the appropriate package (based on your Mac OS X version).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scroll to **Android 4.4.2 (API 19)**; install **Intel x86 Atom System Image**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Optionally, install any other packages you are interested in. As a shortcut,
    the Android SDK Manager automatically selects certain packages for you to install
    by default.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Close the Android SDK Manager and switch back to Xamarin Studio.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to **Tools** | **Open Android Emulator Manager…**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Create…**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter an AVD name of your choice, such as `x86 Emulator`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Pick a generic device that will be appropriately sized for your display, such
    as one with a **4" WVGA** display.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As **Target**, make sure that you select **Intel x86 Atom System Image**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After creating the device, go ahead and click on **Start…** to make sure the
    emulator runs properly.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The emulator will take some time to start up, so it is a good idea to leave
    the emulator running while performing Android development. Xamarin is using the
    standard Android tools here, so you would have the same issue while developing
    with Java. If everything starts properly, you will see an Android boot screen
    followed by a virtual Android device ready for deploying applications from Xamarin
    Studio, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Setting up the Android emulator](img/00006.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Enrolling in the iOS Developer Program
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To deploy to an iOS device, Apple requires membership to its iOS Developer Program.
    Membership is $99 USD per year and gives you access to deploy 200 devices for
    development purposes. You also get access to test servers for implementing more
    advanced iOS features such as in-app purchases, push notifications, and iOS Game
    Center. Testing your Xamarin.iOS applications on a physical device is important,
    so I recommend that you get an account prior to starting iOS development. Performance
    is very different in a simulator running on your desktop versus a real mobile
    device. There are also a few Xamarin-specific optimizations that only occur when
    running on a real device. We'll fully cover the reasons for testing your apps
    on devices in the later chapters.
  prefs: []
  type: TYPE_NORMAL
- en: 'Signing up for the iOS Developer Program can be performed through the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to [https://developer.apple.com/programs/ios](https://developer.apple.com/programs/ios).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Enroll Now**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Sign in with an existing iTunes account or create a new one. This can't be changed
    later, so choose one that is appropriate for your company.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enroll either as an individual or a company. Both are priced at $99; but, registering
    as a company will require paperwork to be faxed to Apple with the assistance of
    your company's accountant.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Review the developer agreement.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fill out Apple's survey for developers.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Purchase the $99 developer registration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Wait for a confirmation e-mail.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You should receive an e-mail that looks something similar to the following
    screenshot within two business days:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Enrolling in the iOS Developer Program](img/00007.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'From here, we can continue setting up your account:'
  prefs: []
  type: TYPE_NORMAL
- en: Either click on **Log in now** from the e-mail you received or go to [https://itunesconnect.apple.com](https://itunesconnect.apple.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log in with your earlier iTunes account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Agree to any additional agreements that appear on the home page of your dashboard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the iTunes Connect dashboard, navigate to **Agreements, Tax, and Banking**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In this section, you will see three columns for **Contact Info**, **Bank Info**,
    and **Tax Info**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fill out the appropriate information for your account in all of these sections.
    Assistance from an accountant will most likely be needed for a company account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When all is said and done, your **Contracts, Tax, and Banking** section should
    look something similar to the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Enrolling in the iOS Developer Program](img/00008.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: With your iOS developer account successfully registered, you will now be able
    to deploy to iOS devices and publish your apps to the Apple App Store.
  prefs: []
  type: TYPE_NORMAL
- en: Registering as a Google Play developer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Unlike iOS, deploying your applications to Android devices is free and just
    requires a few changes in your device settings. A Google Play developer account
    has only a one-time fee of $25 and doesn't have to be renewed each year. However,
    just like iOS, you will need a Google Play account to develop in-app purchases,
    push notifications, or Google Play game services. I would recommend that you set
    up an account ahead of time if you inevitably plan on submitting an app to Google
    Play or need to implement one of these features.
  prefs: []
  type: TYPE_NORMAL
- en: 'To register as a developer for Google Play, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to [https://play.google.com/apps/publish](https://play.google.com/apps/publish).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log in with an existing Google Account or create a new one. This can't be changed
    later, so choose one that is appropriate for your company if needed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Accept the agreement and enter your credit card information.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose a developer name and enter other important information for your account.
    Again, choose names appropriate for your company to be seen by users in the app
    store.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If everything is filled out correctly, you will end up with the following Google
    Play Developer Console:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Registering as a Google Play developer](img/00009.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: If you plan on selling paid apps or in-app purchases, at this point, I would
    recommend that you set up your **Google merchant account**. This will enable Google
    to pay you the proceeds toward your app sales by applying the appropriate tax
    laws in your country. If you are setting this up for your company, I would recommend
    that you get the assistance of your company's accountant or bookkeeper.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are the steps to set up a Google merchant account:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **set up a merchant account** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log in with your Google account a second time.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Fill out the appropriate information for selling apps: address, phone number,
    tax information, and a display name to appear on your customers'' credit card
    bill.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When done, you will see that the help tip for setting up a merchant account
    is now missing from the developer console, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Registering as a Google Play developer](img/00010.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'At this point, one would think that our account would be fully set up, but
    there is one more crucial step prior to being able to sell apps: we have to enter
    the banking information.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Setting up banking for your Google merchant account can be performed with the
    following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go back to the Google Play **Developer Console** at [https://play.google.com/apps/publish](https://play.google.com/apps/publish).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Financial Reports** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the small link titled **Visit your merchant account for details**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You should see a warning indicating that you do not have a bank account set
    up. Click on the **Specify a Bank Account** link to get started.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter your banking information. Again, a company accountant might be needed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In a few days, look for a small deposit in your account from Google.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Confirm the amount by going to [http://checkout.google.com/sell](http://checkout.google.com/sell).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Settings** tab, then **Financials**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, click on **Verify Account**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the amount that appeared on your bank account and click on **Verify deposit**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Your Google merchant account is also the place where you can cancel or refund
    customer orders. Google Play is different from the iOS App Store in that all customer
    issues are directed to the developers.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we discussed Xamarin''s core products for developing Android
    and iOS applications in C#: Xamarin Studio, Xamarin.iOS, and Xamarin.Android.
    We installed Xcode and then ran the Xamarin all-in-one installer, which installs
    Java, the Android SDK, Xamarin Studio, Xamarin.iOS, and Xamarin.Android. We set
    up the x86 Android emulator for a faster, more fluid experience when debugging
    applications. Finally, we set up iOS and Google Play developer accounts for distributing
    our applications.'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you should have acquired everything you need to get started
    on building cross-platform applications with Xamarin. Your development computer
    should be ready to go and you should have all the native SDKs installed and ready
    for creating the next great app to take the world by storm.
  prefs: []
  type: TYPE_NORMAL
- en: The concepts in this chapter will set us up for more advanced topics that will
    require the proper software installed as well as developer accounts with Apple
    and Google. We will be deploying applications to real devices and implementing
    more advanced features such as push notifications. In the next chapter, we'll
    create our first iOS and Android application and cover the basics of each platform.
  prefs: []
  type: TYPE_NORMAL
