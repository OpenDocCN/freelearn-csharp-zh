["```cs\nDebug.LogException(\n    new System.Exception((\"Cloud diagnostics test!\")));\n```", "```cs\npublic class RemoteConfigSettings : MonoBehaviour\n{\n    public static RemoteConfigSettings Instance\n        { get; private set; }\n    private void Awake()\n    {\n        if (Instance == null)\n            Instance = this;\n        else\n            Destroy(gameObject);\n        DontDestroyOnLoad(gameObject);\n    }\n    public event UnityAction<RuntimeConfig> OnSettingsChanged;\n    …\n}\n```", "```cs\nprivate void ApplyRemoteSettings(ConfigResponse configResponse)\n{\n    …\n    OnSettingsChanged?.Invoke(\n        RemoteConfigService.Instance.appConfig);\n}\n```", "```cs\n[SerializeField] private GameObject[] _graphics;\nprivate const string THEME_HOLIDAY = \"Theme_Holiday\";\n```", "```cs\nprivate void OnEnable()\n    => RemoteConfigSettings.Instance.\n        OnSettingsChanged += ConfigSettingsChanged;\nprivate void OnDisable()\n    => RemoteConfigSettings.Instance.\n        OnSettingsChanged -= ConfigSettingsChanged;\n```", "```cs\nprivate void ConfigSettingsChanged(RuntimeConfig config)\n{\n    var isThemeEnabled = config.GetBool(THEME_HOLIDAY, false);\n    if (!isThemeEnabled)\n        return;\n    ShowThemeGraphics(1);\n}\nprivate void ShowThemeGraphics(int value)\n{\n    foreach (var g in _graphics)\n    {\n        g.SetActive(false);\n    }\n    _graphics[value].SetActive(true);\n}\n```"]