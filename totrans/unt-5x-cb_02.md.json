["```cs\n    using UnityEngine;\n    using System.Collections;\n\n    public class PlayerMove : MonoBehaviour {\n      public float speed = 10;\n      private Rigidbody2D rigidBody2D;\n\n      void Awake(){\n        rigidBody2D = GetComponent<Rigidbody2D>();\n      }\n\n      void FixedUpdate(){\n        float xMove = Input.GetAxis(\"Horizontal\");\n        float yMove = Input.GetAxis(\"Vertical\");\n\n        float xSpeed = xMove * speed;\n        float ySpeed = yMove * speed;\n\n        Vector2 newVelocity = new Vector2(xSpeed, ySpeed);\n\n        rigidBody2D.velocity = newVelocity;\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using UnityEngine.UI;\n\n    public class Player : MonoBehaviour {\n      public Text starText;\n      private bool carryingStar = false;\n\n      void Start(){\n        UpdateStarText();\n      }\n\n      void OnTriggerEnter2D(Collider2D hit){\n        if(hit.CompareTag(\"Star\")){\n          carryingStar = true;\n          UpdateStarText();\n          Destroy(hit.gameObject);\n        }\n      }\n\n      private void UpdateStarText(){\n        string starMessage = \"no star :-(\";\n        if(carryingStar) starMessage = \"Carrying star :-)\";\n        starText.text = starMessage;\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using UnityEngine.UI;\n\n    public class PlayerInventoryDisplay : MonoBehaviour\n    {\n      public Text starText;\n\n      public void OnChangeCarryingStar(bool carryingStar){\n        string starMessage = \"no star :-(\";\n        if(carryingStar) starMessage = \"Carrying star :-)\";\n        starText.text = starMessage;\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n\n    public class PlayerInventory : MonoBehaviour {\n      private PlayerInventoryDisplay playerInventoryDisplay;\n      private bool carryingStar = false;\n\n      void Start(){\n        playerInventoryDisplay = GetComponent<PlayerInventoryDisplay>();\n      playerInventoryDisplay.OnChangeCarryingStar(carryingStar);\n      }\n\n      void OnTriggerEnter2D(Collider2D hit){\n        if(hit.CompareTag(\"Star\")){\n          carryingStar = true;\n      playerInventoryDisplay.OnChangeCarryingStar(carryingStar);\n          Destroy(hit.gameObject);\n        }\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using UnityEngine.UI;\n\n    public class Player : MonoBehaviour {\n      public Image starImage;\n      public Sprite iconStar;\n      public Sprite iconNoStar;\n      private bool carryingStar = false;\n\n      void OnTriggerEnter2D(Collider2D hit){\n        if(hit.CompareTag(\"Star\")){\n          carryingStar = true;\n          UpdateStarImage();\n          Destroy(hit.gameObject);\n        }\n      }\n\n      private void UpdateStarImage(){\n        if(carryingStar)\n          starImage.sprite = iconStar;\n        else\n          starImage.sprite = iconNoStar;\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using UnityEngine.UI;\n\n    public class Player : MonoBehaviour {\n      public Text starText;\n      private int totalStars = 0;\n\n      void Start(){\n        UpdateStarText();\n      }\n\n      void OnTriggerEnter2D(Collider2D hit){\n        if(hit.CompareTag(\"Star\")){\n          totalStars++;\n          UpdateStarText();\n          Destroy(hit.gameObject);\n        }\n      }\n\n      private void UpdateStarText(){\n        string starMessage = \"stars = \" + totalStars;\n        starText.text = starMessage;\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using UnityEngine.UI;\n\n    public class Player : MonoBehaviour {\n      private PlayerInventoryDisplay playerInventoryDisplay;\n      private int totalStars = 0;\n\n      void Start(){\n        playerInventoryDisplay = GetComponent<PlayerInventoryDisplay>();\n      }\n\n      void OnTriggerEnter2D(Collider2D hit){\n        if(hit.CompareTag(\"Star\")){\n          totalStars++;\n      playerInventoryDisplay.OnChangeStarTotal(totalStars);\n          Destroy(hit.gameObject);\n        }\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using UnityEngine.UI;\n\n    public class PlayerInventoryDisplay : MonoBehaviour\n    {\n      public Image[] starPlaceholders;\n\n      public Sprite iconStarYellow;\n      public Sprite iconStarGrey;\n\n      public void OnChangeStarTotal(int starTotal){\n        for (int i = 0;i < starPlaceholders.Length; ++i){\n        if (i < starTotal)\n            starPlaceholders[i].sprite = iconStarYellow;\n          else\n            starPlaceholders[i].sprite = iconStarGrey;\n        }\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using UnityEngine.UI;\n\n    public class PlayerInventoryDisplay : MonoBehaviour\n    {\n      public Image iconStarsYellow;\n\n      public void OnChangeStarTotal(int starTotal){\n        float newWidth = 100 * starTotal;\n        iconStarsYellow.rectTransform.SetSizeWithCurrentAnchors(RectTransform.Axis.Horizontal, newWidth);\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n\n    public class PickUp : MonoBehaviour {\n      public string description;\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using UnityEngine.UI;\n    using System.Collections.Generic;\n\n    public class Player : MonoBehaviour {\n      private PlayerInventoryDisplay playerInventoryDisplay;\n      private List<PickUp> inventory = new List<PickUp>();\n\n      void Start(){\n        playerInventoryDisplay = GetComponent<PlayerInventoryDisplay>();\n        playerInventoryDisplay.OnChangeInventory(inventory);\n      }\n\n      void OnTriggerEnter2D(Collider2D hit){\n        if(hit.CompareTag(\"Pickup\")){\n          PickUp item = hit.GetComponent<PickUp>();\n          inventory.Add( item );\n          playerInventoryDisplay.OnChangeInventory(inventory);\n          Destroy(hit.gameObject);\n        }\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using UnityEngine.UI;\n    using System.Collections.Generic;\n\n    public class PlayerInventoryDisplay : MonoBehaviour\n    {\n      public Text inventoryText;\n\n      public void OnChangeInventory(List<PickUp> inventory){\n        // (1) clear existing display\n        inventoryText.text = \"\";\n\n        // (2) build up new set of items\n        string newInventoryText = \"carrying: \";\n        int numItems = inventory.Count;\n        for(int i = 0; i < numItems; i++){\n          string description = inventory[i].description;\n          newInventoryText += \" [\" + description+ \"]\";\n        }\n\n        if(numItems < 1) newInventoryText = \"(empty inventory)\";\n\n        // (3) update screen display\n        inventoryText.text = newInventoryText;\n      }\n    }\n    ```", "```cs\n    public void OnChangeInventory(List<PickUp> inventory){\n      inventory.Sort(\n        delegate(PickUp p1, PickUp p2){\n          return p1.description.CompareTo(p2.description);\n        }\n      );\n\n      // rest of the method as before â€¦\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n\n    public class PickUp : MonoBehaviour {\n      public enum PickUpType {\n        Star, Key, Heart\n      }\n\n      public PickUpType type;\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using UnityEngine.UI;\n    using System.Collections.Generic;\n\n    public class Player : MonoBehaviour {\n      private InventoryManager inventoryManager;\n\n      void Start(){\n        inventoryManager = GetComponent<InventoryManager>();\n      }\n\n      void OnTriggerEnter2D(Collider2D hit){\n        if(hit.CompareTag(\"Pickup\")){\n          PickUp item = hit.GetComponent<PickUp>();\n          inventoryManager.Add( item );\n          Destroy(hit.gameObject);\n        }\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using UnityEngine.UI;\n    using System.Collections.Generic;\n\n    public class PlayerInventoryDisplay : MonoBehaviour {\n      public Text inventoryText;\n      private string newInventoryText;\n\n      public void OnChangeInventory(Dictionary<PickUp.PickUpType, int> inventory){\n        inventoryText.text = \"\";\n\n        newInventoryText = \"carrying: \";\n        int numItems = inventory.Count;\n\n        foreach(var item in inventory){\n          int itemTotal = item.Value;\n          string description = item.Key.ToString();\n          newInventoryText += \" [ \" + description + \" \" + itemTotal +  \" ]\";\n        }\n\n        if(numItems < 1) newInventoryText = \"(empty inventory)\";\n\n        inventoryText.text = newInventoryText;\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using System.Collections.Generic;\n\n    public class InventoryManager : MonoBehaviour {\n      private PlayerInventoryDisplay playerInventoryDisplay;\n      private Dictionary<PickUp.PickUpType, int> items = new Dictionary<PickUp.PickUpType, int>();\n\n      void Start(){\n        playerInventoryDisplay = GetComponent<PlayerInventoryDisplay>();\n        playerInventoryDisplay.OnChangeInventory(items);\n      }\n\n      public void Add(PickUp pickup){\n        PickUp.PickUpType type = pickup.type;\n        int oldTotal = 0;\n        if(items.TryGetValue(type, out oldTotal))\n          items[type] = oldTotal + 1;\n        else\n          items.Add (type, 1);\n\n        playerInventoryDisplay.OnChangeInventory(items);\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n\n    public class PickupUI : MonoBehaviour {\n      public GameObject starYellow;\n      public GameObject starGrey;\n\n      void Awake(){\n        DisplayEmpty();\n      }\n\n      public void DisplayYellow(){\n        starYellow.SetActive(true);\n        starGrey.SetActive(false);\n      }\n\n      public void DisplayGrey(){\n        starYellow.SetActive(false);\n        starGrey.SetActive(true);\n      }\n\n      public void DisplayEmpty(){\n        starYellow.SetActive(false);\n        starGrey.SetActive(false);\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using UnityEngine.UI;\n\n    public class Player : MonoBehaviour {\n      private PlayerInventoryModel playerInventoryModel;\n\n      void Start(){\n        playerInventoryModel = GetComponent<PlayerInventoryModel>();\n      }\n\n      void OnTriggerEnter2D(Collider2D hit){\n        if(hit.CompareTag(\"Star\")){\n          playerInventoryModel.AddStar();\n          Destroy(hit.gameObject);\n        }\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n\n    public class PlayerInventoryModel : MonoBehaviour {\n      private int starTotal = 0;\n      private PlayerInventoryDisplay playerInventoryDisplay;\n\n      void Start(){\n        playerInventoryDisplay = GetComponent<PlayerInventoryDisplay>();\n        playerInventoryDisplay.OnChangeStarTotal(starTotal);\n      }\n\n      public void AddStar(){\n        starTotal++;\n        playerInventoryDisplay.OnChangeStarTotal(starTotal);\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using UnityEngine.UI;\n\n    public class PlayerInventoryDisplay : MonoBehaviour\n    {\n      const int NUM_INVENTORY_SLOTS = 10;\n      public PickupUI[] slots = new PickupUI[NUM_INVENTORY_SLOTS];\n\n      public void OnChangeStarTotal(int starTotal){\n        for(int i = 0; i < NUM_INVENTORY_SLOTS; i++){\n          PickupUI slot = slots[i];\n          if(i < starTotal)\n            slot.DisplayYellow();\n          else\n            slot.DisplayGrey();\n        }\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using UnityEngine.UI;\n\n    public class PlayerInventoryDisplay : MonoBehaviour\n    {\n      const int NUM_INVENTORY_SLOTS = 10;\n      private PickupUI[] slots = new PickupUI[NUM_INVENTORY_SLOTS];\n      public GameObject slotGrid;\n      public GameObject starSlotPrefab;\n\n      void Awake(){\n        for(int i=0; i < NUM_INVENTORY_SLOTS; i++){\n          GameObject starSlotGO = (GameObject)\n          Instantiate(starSlotPrefab);\n          starSlotGO.transform.SetParent(slotGrid.transform);\n          starSlotGO.transform.localScale = new Vector3(1,1,1);\n          slots[i] = starSlotGO.GetComponent<PickupUI>();\n        }\n      }\n\n      public void OnChangeStarTotal(int starTotal){\n        for(int i = 0; i < NUM_INVENTORY_SLOTS; i++){\n         PickupUI slot = slots[i];\n          if(i < starTotal)\n            slot.DisplayYellow();\n          else\n            slot.DisplayGrey();\n        }\n      }\n    }\n    ```", "```cs\n    void Start(){\n      float panelWidth = slotGrid.GetComponent<RectTransform>().rect.width;\n      print (\"slotGrid.GetComponent<RectTransform>().rect = \" + slotGrid.GetComponent<RectTransform>().rect);\n\n      GridLayoutGroup gridLayoutGroup = slotGrid.GetComponent<GridLayoutGroup>();\n      float xCellSize = panelWidth / NUM_INVENTORY_SLOTS;\n      xCellSize -= gridLayoutGroup.spacing.x;\n      gridLayoutGroup.cellSize = new Vector2(xCellSize, xCellSize);\n    }\n    ```", "```cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\n\npublic static class RectTransformExtensions\n{\n  public static void SetSize(this RectTransform trans, Vector2 newSize) {\n    Vector2 oldSize = trans.rect.size;\n    Vector2 deltaSize = newSize - oldSize;\n    trans.offsetMin = trans.offsetMin - new Vector2(deltaSize.x * trans.pivot.x, deltaSize.y * trans.pivot.y);\n    trans.offsetMax = trans.offsetMax + new Vector2(deltaSize.x * (1f - trans.pivot.x), deltaSize.y * (1f - trans.pivot.y));\n  }\n\n  public static void SetWidth(this RectTransform trans, float newSize) {\n    SetSize(trans, new Vector2(newSize, trans.rect.size.y));\n  }\n\n  public static void SetHeight(this RectTransform trans, float newSize) {\n    SetSize(trans, new Vector2(trans.rect.size.x, newSize));\n  }\n}\n```"]