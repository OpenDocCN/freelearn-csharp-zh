- en: '5'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '5'
- en: User Interface and Input Systems in Unity
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Unity 中的用户界面和输入系统
- en: Now that we’ve discussed various design considerations for developing user interfaces,
    we can start discussing how to implement them within Unity. Unity provides various
    systems for creating UI. It has systems in place that allow you to create a UI
    that will be displayed in your game, or UI that will be displayed only in the
    Editor. Additionally, it provides multiple systems for receiving input from the
    player.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经讨论了开发用户界面的各种设计考虑因素，我们可以开始讨论如何在 Unity 中实现它们。Unity 提供了各种用于创建 UI 的系统。它有现成的系统，允许你创建将在你的游戏中显示的
    UI，或者只会在编辑器中显示的 UI。此外，它还提供了多个系统用于接收玩家的输入。
- en: At the time of writing, two of these systems are still in active development
    and do not come packaged in Unity by default. This book will primarily focus on
    development with the systems that are complete, but since Unity does intend to
    make these systems standard features at some point, I would be remiss not to discuss
    them just because they are still in **preview**.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，这两个系统仍在积极开发中，并且默认情况下不包含在 Unity 中。本书将主要关注使用完整系统进行开发，但由于 Unity 有意向在某个时候将这些系统作为标准功能，因此我必须讨论它们，即使它们目前仍处于
    **预览** 状态。
- en: 'In this chapter, I will discuss the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将讨论以下主题：
- en: Identifying UI Toolkit, Unity UI, and IMGUI
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别 UI Toolkit、Unity UI 和 IMGUI
- en: Choosing between the three UI systems
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在三个 UI 系统之间进行选择
- en: Identifying the Input Manager and the Input System
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别输入管理器和输入系统
- en: Choosing between the Input Manager and the Input System
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在输入管理器和输入系统之间进行选择
- en: Let’s start by looking at the three UI systems within Unity.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先看看 Unity 中的三个 UI 系统。
- en: The three UI systems
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 三个 UI 系统
- en: Unity has three systems that can be used to build UI. Which you choose will
    depend on where your UI will be displayed, what you are trying to accomplish,
    whether you’re working on a pre-existing project, and how comfortable you are
    with coding.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 有三个系统可以用来构建 UI。你选择哪个将取决于你的 UI 将在哪里显示，你试图实现什么，你是否在处理一个现有项目，以及你对编码的熟悉程度。
- en: The UI you build can either be in-game or in-Editor. In-game UI is the UI that
    can be accessed by your players. In-Editor UI is UI that displays within the Unity
    Editor and assists with development.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你构建的 UI 可以是游戏内或编辑器内。游戏内 UI 是玩家可以访问的 UI。编辑器内 UI 是在 Unity 编辑器中显示并辅助开发的 UI。
- en: 'If you want to build UI for your game or application, you can choose between
    the Unity UI (uGUI) system or the UI Toolkit. If you want to build UI that appears
    in your Unity Editor, you can use either the UI Toolkit or IMGUI. The following
    Venn diagram summarizes the uses of the different UI systems:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要为你的游戏或应用程序构建 UI，你可以选择 Unity UI（uGUI）系统或 UI Toolkit。如果你想要构建只会在 Unity 编辑器中显示的
    UI，你可以使用 UI Toolkit 或 IMGUI。以下维恩图总结了不同 UI 系统的用途：
- en: '![Figure 5.1: A comparison of in-game and in-Editor UI](img/Figure_5.01_B18327.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.1：游戏内和编辑器 UI 的比较](img/Figure_5.01_B18327.jpg)'
- en: 'Figure 5.1: A comparison of in-game and in-Editor UI'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.1：游戏内和编辑器 UI 的比较
- en: Looking at *Figure 5**.1*, you may be thinking, “Well, UI Toolkit works for
    everything! I’m just going to learn that and be done with my UI learning journey!
    That was an easy choice!” Well, unfortunately, it’s not that simple. Let’s look
    at the different systems a little more in-depth so that you can decide which is
    right for you.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 看看 *图 5**.1*，你可能会有这样的想法：“嗯，UI Toolkit 适用于所有东西！我只需要学习它，就能结束我的 UI 学习之旅！这是一个简单的选择！”不幸的是，事情并不那么简单。让我们更深入地了解不同的系统，以便你可以决定哪个适合你。
- en: Unity UI (or uGUI)
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Unity UI（或 uGUI）
- en: The **Unity UI** system, also known as **uGUI**, is the system that is built
    into Unity *out of the box* and doesn’t require any additional downloads. It is
    GameObject and Component-based and includes multiple types of UI elements to choose
    from. When it comes to developing UI for a game or application, this is the most
    robust and stable option. Since this is the only system for building in-game UI
    that is not in preview mode and is included within Unity, the majority of this
    text will focus on how to develop UI using this system.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**Unity UI** 系统也称为 **uGUI**，是 Unity 内置的系统，无需任何额外下载。它基于 GameObject 和 Component，并包含多种
    UI 元素以供选择。当涉及到为游戏或应用程序开发 UI 时，这是最稳健和最稳定的选项。由于这是唯一一个不在预览模式中且包含在 Unity 中的游戏内 UI
    构建系统，因此本文的大部分内容将专注于如何使用此系统开发 UI。'
- en: IMGUI
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IMGUI
- en: The **IMGUI**, or **Immediate Mode GUI**, system is a code-based GUI system
    used to make interfaces within the editor. Its primary function is to assist programmers
    with development, and it is not recommended for the development of in-game UI
    due to performance issues. Due to the fact that this system is not intended to
    be used in-game and this book will primarily concern itself with UI development
    for games, I won’t spend a significant amount of time covering it, but I will
    discuss some of its basic functionality and usage in [*Chapter 19*](B18327_19.xhtml#_idTextAnchor501).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**IMGUI**，或**即时模式GUI**系统，是一个基于代码的GUI系统，用于在编辑器中创建界面。其主要功能是帮助程序员进行开发，由于性能问题，不建议用于游戏中的UI开发。由于这个系统不是为了在游戏中使用而设计的，并且本书将主要关注游戏中的UI开发，因此我不会花费大量时间介绍它，但我会讨论一些其基本功能和用法，在[*第19章*](B18327_19.xhtml#_idTextAnchor501)中。'
- en: UI Toolkit
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: UI Toolkit
- en: '**UI Toolkit** is a new UI system that is in active development. It is not
    included within the engine by default and must be downloaded with the Package
    Manager. Additionally, it is a preview package, which means you have to elect
    to even see it in the list of available packages provided by Unity. Unity does
    plan on replacing both uGUI and IMGUI with UI Toolkit eventually. UI Toolkit is
    being designed with traditional web-development concepts and is structured entirely
    differently than the GameObject-based uGUI. In [*Chapter 18*](B18327_18.xhtml#_idTextAnchor481),
    I will cover how to download the UI Toolkit package and how to work with it.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**UI Toolkit**是一个正在积极开发中的新UI系统。它默认不包含在引擎中，必须通过包管理器下载。此外，它是一个预览包，这意味着您必须选择才能在Unity提供的可用包列表中看到它。Unity计划最终用UI
    Toolkit替换uGUI和IMGUI。UI Toolkit的设计采用了传统的Web开发概念，并且与基于GameObject的uGUI结构完全不同。在[*第18章*](B18327_18.xhtml#_idTextAnchor481)中，我将介绍如何下载UI
    Toolkit包以及如何使用它。'
- en: Choosing between the UI systems
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择UI系统
- en: Which system you choose to use is going to depend on a few things. As discussed
    earlier, whether you are making UI for the Editor or a game will determine which
    system you choose. If you’re working on UI for a game, you can use Unity UI or
    UI Toolkit. If you’re working on UI for the Editor, you can use IMGUI or UI Toolkit.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您选择使用哪个系统将取决于几个因素。如前所述，您是为编辑器还是为游戏制作UI将决定您选择哪个系统。如果您正在为游戏制作UI，您可以使用Unity UI或UI
    Toolkit。如果您正在为编辑器制作UI，您可以使用IMGUI或UI Toolkit。
- en: UI Toolkit is a new system that is not fully implemented, so if you are working
    on a pre-existing game with UI already in place, you probably won’t be using UI
    Toolkit. It also may not have all the features you are looking to work with. Because
    UI Toolkit is in development, it is not guaranteed to be stable, and updating
    it mid-development may adversely affect your project.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: UI Toolkit是一个尚未完全实现的系统，因此如果您正在为已经包含UI的现有游戏工作，您可能不会使用UI Toolkit。它可能也不具备您想要使用的所有功能。由于UI
    Toolkit处于开发中，它可能无法保证稳定性，并且在开发过程中更新它可能会对您的项目产生不利影响。
- en: Your comfort with coding could also drive your decision. In general, the coding
    required to use Unity UI is less intensive than IMGUI and may be more familiar
    to you than UI Toolkit, since it is GameObject-based. However, if you are familiar
    with web-based UI creation, UI Toolkit may seem really familiar to you.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您对编码的舒适度也可能影响您的决定。一般来说，使用Unity UI所需的编码强度低于IMGUI，并且可能比UI Toolkit更熟悉，因为它是基于GameObject的。然而，如果您熟悉基于Web的UI创建，UI
    Toolkit可能对您来说非常熟悉。
- en: 'If you are considering using the UI Toolkit, I recommend reviewing the examples
    in this book, as well as the following Unity documentation page, before you make
    your decision on which system to use: [https://docs.unity3d.com/Manual/UI-system-compare.xhtml](https://docs.unity3d.com/Manual/UI-system-compare.xhtml).'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在考虑使用UI Toolkit，我建议在决定使用哪个系统之前，先查看本书中的示例以及以下Unity文档页面：[https://docs.unity3d.com/Manual/UI-system-compare.xhtml](https://docs.unity3d.com/Manual/UI-system-compare.xhtml)。
- en: Now that we’ve reviewed the three UI systems provided by Unity, we can review
    the two input systems.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经回顾了Unity提供的三个UI系统，我们可以回顾两个输入系统。
- en: The two input systems
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 两个输入系统
- en: As defined in [*Chapter 1*](B18327_01.xhtml#_idTextAnchor014), **UI** stands
    for **user interface** and encompasses all mechanisms by which the user and the
    game convey information to each other. When discussing the three UI systems, we
    talked about three ways in which the game communicates with the user – specifically
    through the use of GUI on an output device (i.e., a screen). However, if the user
    wants to communicate with the game, the user will have to have some means through
    which they can provide input. The game will then need to process that input.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如[*第1章*](B18327_01.xhtml#_idTextAnchor014)中定义，**UI**代表**用户界面**，包括用户和游戏之间传达信息的所有机制。在讨论三个UI系统时，我们提到了游戏与用户沟通的三个方式——具体来说是通过输出设备（即屏幕）上的GUI。然而，如果用户想要与游戏沟通，用户将需要某种方式来提供输入。然后游戏需要处理这些输入。
- en: There are two core ways in which Unity can handle input. The **Input Manager**
    or the **Input System**. Just as there are varying factors that would determine
    which UI system you may use, there are also varying factors that can help you
    determine which input system to use. Both systems allow you to easily process
    multiple types of input as if they are the same thing. For example, each system
    will let you process a keyboard space bar and an Xbox controller A button as if
    they are the same type of input. How they do that will be discussed more thoroughly
    in later chapters, but for now, let’s just look at the general differences between
    the two.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Unity可以以两种核心方式处理输入。**输入管理器**或**输入系统**。正如有各种因素会影响您可能使用的UI系统一样，也有各种因素可以帮助您确定使用哪个输入系统。这两个系统都允许您轻松处理多种类型的输入，就像它们是同一种输入一样。例如，每个系统都会让您处理键盘空格键和Xbox控制器A按钮，就像它们是同一种类型的输入一样。它们是如何做到这一点的将在后面的章节中更详细地讨论，但就目前而言，让我们先看看这两个系统之间的一般区别。
- en: The Input Manager
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 输入管理器
- en: The Input Manager is the input system that comes with Unity by default and does
    not require any additional package downloads. Without having to configure any
    settings, you can easily accept input from things such as a keyboard, mouse, joystick,
    or touchscreen. It achieves this by providing pre-defined *input axes* that essentially
    specify keywords and buttons that bind to them. We will review how this functions
    more thoroughly in [*Chapter 8*](B18327_08.xhtml#_idTextAnchor147).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 输入管理器是Unity默认提供的输入系统，无需下载任何额外的包。无需配置任何设置，您就可以轻松地接受来自键盘、鼠标、游戏手柄或触摸屏等设备的输入。它是通过提供预定义的*输入轴*来实现的，这些轴本质上指定了关键词和与之绑定的按钮。我们将在[*第8章*](B18327_08.xhtml#_idTextAnchor147)中更详细地回顾这一功能。
- en: The new Input System
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 新输入系统
- en: 'The Input System (colloquially referred to as *the new Input System*) is a
    package that is currently in development and is, as Unity states in its documentation,
    *intended to be more powerful, flexible, and configurable* than the Input Manager:
    [https://docs.unity3d.com/Packages/com.unity.inputsystem@1.3/manual/index.xhtml](mailto:https://docs.unity3d.com/Packages/com.unity.inputsystem@1.3/manual/index.xhtml).'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 输入系统（俗称*新输入系统*）是一个目前正在开发中的包，正如Unity在其文档中所述，它旨在比输入管理器更强大、更灵活、更可配置：[https://docs.unity3d.com/Packages/com.unity.inputsystem@1.3/manual/index.xhtml](mailto:https://docs.unity3d.com/Packages/com.unity.inputsystem@1.3/manual/index.xhtml)。
- en: If you have been working on a project that is using the Input Manager, it is
    possible to convert your project to one that uses the new Input System. We will
    discuss how to implement the Input System in [*Chapter 20*](B18327_20.xhtml#_idTextAnchor513).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您一直在使用输入管理器进行项目开发，您可以将项目转换为使用新输入系统的项目。我们将在[*第20章*](B18327_20.xhtml#_idTextAnchor513)中讨论如何实现输入系统。
- en: Choosing between the Input System and the new Input System
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在输入系统和新输入系统之间进行选择
- en: Let me start by saying there’s not necessarily a right answer on which system
    you choose. You can theoretically process any type of input you wish with either
    system. Which you choose will primarily be based on preference, how complicated
    your project’s set of inputs is, and whether you are developing for multiple platforms.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我先说，关于选择哪个系统并没有必然的正确答案。理论上，您可以使用任何一个系统来处理任何类型的输入。您选择哪个系统将主要基于个人偏好、您项目输入集的复杂程度以及您是否在为多个平台开发。
- en: If you are not planning on allowing your player to remap controls (as discussed
    in [*Chapter 4*](B18327_04.xhtml#_idTextAnchor054)) or are not planning on cross-platform
    development, you are probably fine with using the Input Manager and don’t need
    to go through the process of downloading the Input System. However, if you want
    to have ultra-configurable control schemes, accept inputs from a variety of devices,
    and accept complicated input actions, you will likely find it easier to write
    the code that processes these inputs using the Input System than you would using
    the Input Manager.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有计划允许玩家重新映射控制（如[*第4章*](B18327_04.xhtml#_idTextAnchor054)中所述）或者没有计划进行跨平台开发，那么使用输入管理器可能就足够了，你不需要经历下载输入系统的过程。然而，如果你想要拥有超可配置的控制方案，接受来自各种设备的输入，以及接受复杂的输入动作，你可能会发现使用输入系统来编写处理这些输入的代码比使用输入管理器要容易得多。
- en: Since the Input Manager is used in so many projects that are currently in development,
    I would be doing you a disservice to completely omit it just because it is not
    the *new hot*. Additionally, the new Input System is still new and still in active
    development, so it is subject to drastic changes with each update. However, it
    does make some things significantly easier to build and is gaining traction in
    popularity among developers. Therefore, I will not choose just one of these systems
    to focus on in this book.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 由于输入管理器被用于许多正在开发的项目中，如果仅仅因为它不是“新热点”就完全忽略它，那将是对你的一种不公平。此外，新的输入系统仍然处于开发阶段，并且随着每次更新都会发生重大变化。然而，它确实使某些事情的建设变得更加容易，并且在开发者中越来越受欢迎。因此，我不会在这本书中只关注这些系统中的任何一个。
- en: Summary
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Unity provides multiple ways in which you can display information to your user
    through the use of three UI systems. Which you choose depends on your needs and
    whether you are developing UI for a game or the Editor. This book will primarily
    focus on uGUI, since it is the most stable UI version used for in-game development
    and is provided within Unity, without additional downloads. However, how you can
    use IMGUI to develop Editor UI and the UI Toolkit to use both Editor UI and in-game
    UI will be discussed in the later chapters of this book.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Unity提供了多种方式，你可以通过使用三个UI系统向用户显示信息。你选择哪种方式取决于你的需求和是否在为游戏或编辑器开发UI。这本书将主要关注uGUI，因为它是用于游戏开发中最稳定的UI版本，并且由Unity提供，无需额外下载。然而，如何使用IMGUI开发编辑器UI以及如何使用UI
    Toolkit同时使用编辑器UI和游戏UI将在本书的后续章节中讨论。
- en: Unity also provides multiple ways in which you can process inputs from a user.
    While the new Input System is still in development and does not come with Unity
    by default, I will make sure to give you enough information to use it in your
    projects.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Unity还提供了多种方式来处理用户输入。虽然新的输入系统仍在开发中，并且默认情况下不包含在Unity中，但我将确保给你足够的信息，以便你在项目中使用它。
- en: In the next chapter, we will start developing UI using the uGUI system, by exploring
    UI Canvases, Panels, and layouts.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将开始使用uGUI系统开发UI，通过探索UI画布、面板和布局。
