["```cs\nusing Vuforia;\n```", "```cs\npublic GameObject chairButton;\npublic Sprite[] buttonSprites;\nprivate ContentPositioningBehaviour contentPosBehaviour; \nprivate bool multipleChairs = false;\n```", "```cs\ncontentPosBehaviour = GetComponent<ContentPositioningBehaviour>(); \n```", "```cs\npublic void SwitchMultipleChairs()\n {\n     if (!multipleChairs) \n     {\n         chairButton.GetComponent<UnityEngine.UI.Image>().sprite = buttonSprites[1];\n         contentPosBehaviour.DuplicateStage = true;\n         multipleChairs = true;\n     }\n     else\n     {\n         chairButton.GetComponent<UnityEngine.UI.Image>().sprite = buttonSprites[0];\n         contentPosBehaviour.DuplicateStage = false;\n         multipleChairs = false;\n     }\n }\n```", "```cs\npublic GameObject rotateGO;\nprivate float rotateSpeed = 0.8f;\n```", "```cs\nrotateGO.SetActive(false);\n```", "```cs\nTouch[] touches = Input.touches;\nif (Input.touchCount == 2 && (touches[0].phase == TouchPhase.Moved || touches[1].phase == TouchPhase.Moved))\n{\n rotateGO.SetActive(true);\n\n Vector2 previousPosition= touches[1].position - touches[1].deltaPosition - (touches[0].position - touches[0].deltaPosition);\n Vector2 currentPosition = touches[1].position - touches[0].position;\n float angleDelta = Vector2.Angle(previousPosition, currentPosition);\n Vector3 cross = Vector3.Cross(previousPosition, currentPosition);\n\n Vector3 previousRotation = transform.localEulerAngles;\n if (cross.z > 0)\n {\n transform.localEulerAngles = previousRotation - new Vector3(0, angleDelta * rotateSpeed, 0);\n }\n else if (cross.z < 0)\n {\n transform.localEulerAngles = previousRotation + new Vector3(0, angleDelta * rotateSpeed, 0);\n } \n}\nelse\n{\n rotateGO.SetActive(false);\n} \n```"]