["```cs\nx:Class=\"ForgetMeNotDemo.View.MainPage\"\n```", "```cs\nnamespace ForgetMeNotDemo.View;\n```", "```cs\n<Label Text=\"Hello World\" />\n```", "```cs\n<VerticalStackLayout>\n    <Label Text=\"Welcome to Forget Me Not\"/>\n</VerticalStackLayout>\n```", "```cs\n<VerticalStackLayout>\n    <Label\n        x:Name=\"HelloLabel\"\n        Margin=\"20\"\n        BackgroundColor=\"Red\"\n        FontAttributes=\"Bold\"\n        FontSize=\"Small\"\n        HorizontalOptions=\"Center\"\n        HorizontalTextAlignment=\"Center\"\n        Text=\"Welcome to Forget Me Not\"\n        TextColor=\"Yellow\"\n        VerticalTextAlignment=\"Center\" />\n</VerticalStackLayout>\n```", "```cs\n<VerticalStackLayout>\n    <Label\n        BackgroundColor=\"Red\"\n        FontAttributes=\"Bold\"\n        FontSize=\"Small\"\n        HorizontalOptions=\"Center\"\n        HorizontalTextAlignment=\"Center\"\n        LineBreakMode=\"WordWrap\"\n        Margin=\"20\"\n        MaxLines=\"5\"\n        Padding=\"10\"\n        Text=\"Welcome to Forget Me Not\"\n        TextColor=\"Yellow\"\n        VerticalTextAlignment=\"Center\"\n        x:Name=\"HelloLabel\" />\n</VerticalStackLayout>\n```", "```cs\nprivate string fullName;\npublic string FullName\n{\n   get => fullName;\n   set\n   {\n     fullName = value;\n     OnPropertyChanged();\n   }\n}\n```", "```cs\nusing CommunityToolkit.Mvvm.ComponentModel;\nnamespace ForgetMeNotDemo.ViewModel;\n[ObservableObject]\npublic partial class MainViewModel\n{\n}\n```", "```cs\n[ObservableProperty]\n  private string fullName;\n```", "```cs\nprivate MainViewModel vm = new MainViewModel();\nNext, we assign the BindingContext to that instance in the\n  constructor:\npublic MainPage()\n{\n  InitializeComponent();\n  BindingContext = vm;\n}\n```", "```cs\npublic partial class MainPage : ContentPage\n{\n  private MainViewModel vm = new MainViewModel();\n  public MainPage()\n  {\n    InitializeComponent();\n    BindingContext = vm;\n  }\n}\n```", "```cs\nprotected override void OnAppearing()\n{\n  base.OnAppearing();\n  vm.FullName = \"Jesse Liberty\";\n}\n```", "```cs\nText=\"{Binding FullName}\"\n```", "```cs\nmyMemberField), though there is no agreement at all as to whether member fields should be prepended with an underbar as in _myMemberField. We won’t use the underbar in this book, but feel free to do so as long, again, as you are consistent.\n```", "```cs\nLoginPage.xaml.cs:\npublic partial class LoginPage : ContentPage\n{\n    LoginViewModel vm = new LoginViewModel();\n    public LoginPage()\n    {\n        BindingContext = vm;\n        InitializeComponent();\n    }\n}\n```", "```cs\n<Image\n    HeightRequest=\"200\"\n    HorizontalOptions=\"Center\"\n    Source=\"{Binding FavoriteFlower}\" />\n```", "```cs\n<Image\n    HeightRequest=\"200\"\n    HorizontalOptions=\"Center\"\n    RotationX=\"45\"\n    Source=\"flower.png\" />\n```", "```cs\n<Grid>\n    <Label\n        BackgroundColor=\"Red\"\n        FontAttributes=\"Bold\"\n        FontSize=\"Small\"\n        HeightRequest=\"50\"\n        HorizontalOptions=\"Center\"\n        HorizontalTextAlignment=\"Center\"\n        LineBreakMode=\"WordWrap\"\n        Margin=\"20\"\n        MaxLines=\"5\"\n        Padding=\"10\"\n        Text=\"{Binding FullName}\"\n        TextColor=\"Yellow\"\n        VerticalTextAlignment=\"Center\"\n        x:Name=\"HelloLabel\" />\n    <Image\n        HeightRequest=\"200\"\n        HorizontalOptions=\"Center\"\n        IsVisible=\"True\"\n        Opacity=\".25\"\n        RotationX=\"45\"\n        Source=\"{Binding FavoriteFlower}\"\n        x:Name=\"BigFlower\" />\n</Grid>\n```", "```cs\n<Button\n    Text=\"Click me\"\n    Command=\"{Binding ToggleFlowerVisibilityCommand}\"/>\n```", "```cs\n[ObservableObject]\npublic partial class MainViewModel\n{\n  [ObservableProperty] private bool flowerIsVisible = true;\n    [1]\n  [ObservableProperty] private string fullName;\n  [ObservableProperty] private string favoriteFlower =\n    \"flower.png\";\n  [RelayCommand]  [2]\n  private void ToggleFlowerVisibility()  [3]\n  {\n    FlowerIsVisible = !FlowerIsVisible;\n  }\n}\n```", "```cs\n<Button\n     BackgroundColor=\"Red\"\n     BorderColor=\"Black\"\n     BorderWidth=\"2\"\n     Command=\"{Binding ToggleFlowerVisibilityCommand}\"\n     CornerRadius=\"20\"\n     FontSize=\"Small\"\n     HeightRequest=\"35\"\n     Padding=\"5\"\n     Text=\"Don't Click Me\"\n     TextColor=\"Yellow\"\n     WidthRequest=\"150\" />\n```", "```cs\n<ImageButton\n    BorderColor=\"Black\"\n    BorderWidth=\"2\"\n    Command=\"{Binding ToggleFlowerVisibilityCommand}\"\n    MaximumHeightRequest=\"75\"\n    MaximumWidthRequest=\"75\"\n    Padding=\"5\"\n    Source=\"{Binding FavoriteFlower}\" />\n```", "```cs\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage\n    BackgroundColor=\"White\"\n    x:Class=\"ForgetMeNotDemo.View.MainPage\"\n    xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\">\n    <ScrollView>\n        <VerticalStackLayout>\n            <Label\n                BackgroundColor=\"Red\"\n                FontAttributes=\"Bold\"\n                FontSize=\"Small\"\n                HeightRequest=\"50\"\n                HorizontalOptions=\"Center\"\n                HorizontalTextAlignment=\"Center\"\n                LineBreakMode=\"WordWrap\"\n                Margin=\"20\"\n                MaxLines=\"5\"\n                Padding=\"10\"\n                Text=\"{Binding FullName}\"\n                TextColor=\"Yellow\"\n                VerticalTextAlignment=\"Center\"\n                x:Name=\"HelloLabel\" />\n            <Image\n                HeightRequest=\"200\"\n                HorizontalOptions=\"Center\"\n                IsVisible=\"{Binding FlowerIsVisible}\" [1]\n                Source=\"{Binding FavoriteFlower}\"\n                x:Name=\"BigFlower\">\n                <Image.GestureRecognizers>     [2]\n                    <TapGestureRecognizer      [3]\n                        Command=\"{Binding\n                          ImageTappedCommand}\" [4]\n                        NumberOfTapsRequired=\"2\" /> [5]\n                </Image.GestureRecognizers>\n            </Image>\n        </VerticalStackLayout>\n    </ScrollView>\n</ContentPage>\n```", "```cs\n[RelayCommand]\nprivate void ImageTapped()\n{\n  FlowerIsVisible = !FlowerIsVisible;\n}\n```", "```cs\n<Label\n    BackgroundColor=\"Red\"\n    FontAttributes=\"Bold\"\n    FontSize=\"Small\"\n    HeightRequest=\"50\"\n    HorizontalOptions=\"Center\"\n    HorizontalTextAlignment=\"Center\"\n    LineBreakMode=\"WordWrap\"\n    Margin=\"20\"\n    MaxLines=\"5\"\n    Padding=\"10\"\n    Text=\"{Binding FullName}\"\n    TextColor=\"Yellow\"\n    VerticalTextAlignment=\"Center\"\n    x:Name=\"HelloLabel\">\n    <Label.GestureRecognizers>\n        <TapGestureRecognizer Command=\"{Binding\n          ImageTappedCommand}\" />\n    </Label.GestureRecognizers>\n</Label>\n```", "```cs\nnamespace ForgetMeNotDemo.ViewModel\n{\n  [ObservableObject]\n  internal partial class LoginViewModel\n  {\n    [ObservableProperty] private string name;\n```", "```cs\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage\n    Title=\"LoginPage\"\n    x:Class=\"ForgetMeNotDemo.View.LoginPage\"\n    xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\">\n    <VerticalStackLayout>\n        <HorizontalStackLayout WidthRequest=\"300\">\n            <Label\n                FontSize=\"Medium\"\n                HorizontalOptions=\"Start\"\n                Margin=\"10,20,10,0\"\n                Text=\"User Name\"\n                VerticalOptions=\"Center\"\n                VerticalTextAlignment=\"Center\" />\n            <Entry\n                HorizontalOptions=\"End\"\n                Placeholder=\"User Name\"\n                Text=\"{Binding Name}\"\n                WidthRequest=\"150\" />\n        </HorizontalStackLayout>\n    </VerticalStackLayout>\n</ContentPage>\n```", "```cs\n<ShellContent\n    Title=\"Home\"\n    ContentTemplate=\"{DataTemplate view1:LoginPage}\"\n    Route=\"LoginPage\" />\n```", "```cs\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage\n    Title=\"LoginPage\"\n    x:Class=\"ForgetMeNotDemo.View.LoginPage\"\n    xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\">\n    <VerticalStackLayout>\n        <HorizontalStackLayout WidthRequest=\"300\">\n            <Label\n                FontSize=\"Medium\"\n                HorizontalOptions=\"Start\"\n                Margin=\"10,20,10,0\"\n                Text=\"User Name\"\n                VerticalOptions=\"Center\"\n                VerticalTextAlignment=\"Center\" />\n            <Entry\n                HorizontalOptions=\"End\"\n                Placeholder=\"User Name\"\n                Text=\"{Binding Name}\"\n                WidthRequest=\"150\" />\n        </HorizontalStackLayout>\n        <Label\n            Margin=\"10,30,10,0\"\n            Text=\"{Binding Name}\" />\n    </VerticalStackLayout>\n</ContentPage>\n```", "```cs\npublic partial class LoginPage : ContentPage\n{\n    LoginViewModel vm = new LoginViewModel();\npublic LoginPage()\n    {\n        BindingContext = vm;\n        InitializeComponent();\n    }\n}\n```", "```cs\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage\n    Title=\"LoginPage\"\n    x:Class=\"ForgetMeNotDemo.View.LoginPage\"\n    xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\">\n    <VerticalStackLayout>\n        <HorizontalStackLayout WidthRequest=\"300\">\n            <Label\n                FontSize=\"Medium\"\n                HorizontalOptions=\"Start\"\n                Margin=\"10,20,10,0\"\n                Text=\"User Name\"\n                VerticalOptions=\"Center\"\n                VerticalTextAlignment=\"Center\" />\n            <Entry\n                HorizontalOptions=\"End\"\n                Placeholder=\"User Name\"\n                Text=\"{Binding Name}\"\n                WidthRequest=\"150\" />\n        </HorizontalStackLayout>\n        <HorizontalStackLayout WidthRequest=\"300\">\n            <Label\n                FontSize=\"Medium\"\n                HorizontalOptions=\"Start\"\n                Margin=\"10,10,10,0\"\n                Text=\"Password\"\n                VerticalOptions=\"Center\"\n                VerticalTextAlignment=\"Center\" />\n            <Entry\n                HorizontalOptions=\"End\"\n                Placeholder=\"Password\"\n                IsPassword=\"True\"\n                Text=\"{Binding Password}\"\n                WidthRequest=\"150\" />\n        </HorizontalStackLayout>\n    </VerticalStackLayout>\n</ContentPage>\n```", "```cs\n<HorizontalStackLayout Margin=\"10,10,10,0\">\n    <Button\n        BackgroundColor=\"Gray\"\n        Command=\"{Binding SubmitCommand}\"\n        Margin=\"5\"\n        Text=\"Submit\" />\n    <Button\n        BackgroundColor=\"Gray\"\n        Margin=\"5\"\n        Text=\"Create Account\" />\n    <Button\n        BackgroundColor=\"Gray\"\n        Margin=\"5\"\n        Text=\"Forgot Password\" />\n</HorizontalStackLayout>\n```", "```cs\n<ContentPage\n    Title=\"LoginPage\"\n```", "```cs\n<Editor\n    FontSize=\"Small\"\n    HeightRequest=\"300\"\n    IsTextPredictionEnabled=\"True\"  [1]\n    Margin=\"10\"\n    MaxLength=\"500\"   [2]\n    Placeholder=\"Explain yourself here (up to 500\n      characters)\"\n    PlaceholderColor=\"Red\" [3]\n    Text=\"{Binding LostPasswordExcuse}\"\n    TextColor=\"Blue\"  [4]\n    VerticalTextAlignment=\"Center\" [5]\n    x:Name=\"LoginEditor\" />\n```", "```cs\n<Editor\n    FontSize=\"Small\"\n    HeightRequest=\"300\"\n    IsTextPredictionEnabled=\"True\"\n    Margin=\"10\"\n    MaxLength=\"500\"\n    Placeholder=\"Explain yourself here (up to 500\n        characters)\"\n    PlaceholderColor=\"Red\"\n    Text=\"{Binding LostPasswordExcuse}\"\n    TextColor=\"Blue\"\n    VerticalTextAlignment=\"Start\"\n    x:Name=\"LoginEditor\">\n    <Editor.Behaviors>\n        <behaviors:EventToCommandBehavior\n            EventName=\"Completed\"\n            Command=\"{Binding EditorCompletedCommand}\" />\n    </Editor.Behaviors>\n</Editor>\n```", "```cs\nVar editor = new Editor();\nvar behavior = new EventToCommandBehavior\n{\n   EventName = nameof(Editor.Completed),\n   Command= new EditorCompletedCommand()\n};\n```", "```cs\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage\n    Title=\"Login Page\"\n    x:Class=\"ForgetMeNotDemo.View.LoginPage\"\n    xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n    xmlns:behaviors=\"http://schemas.microsoft.com/dotnet/\n        2022/maui/toolkit\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\">\n    <VerticalStackLayout>\n        <HorizontalStackLayout WidthRequest=\"300\">\n            <Label\n                FontSize=\"Medium\"\n                HorizontalOptions=\"Start\"\n                Margin=\"10,20,10,0\"\n                Text=\"User Name\"\n                VerticalOptions=\"Center\"\n                VerticalTextAlignment=\"Center\" />\n            <Entry\n                HorizontalOptions=\"End\"\n                Placeholder=\"User Name\"\n                Text=\"{Binding Name}\"\n                WidthRequest=\"150\" />\n        </HorizontalStackLayout>\n        <HorizontalStackLayout WidthRequest=\"300\">\n            <Label\n                FontSize=\"Medium\"\n                HorizontalOptions=\"Start\"\n                Margin=\"10,10,10,0\"\n                Text=\"Password\"\n                VerticalOptions=\"Center\"\n                VerticalTextAlignment=\"Center\" />\n            <Entry\n                HorizontalOptions=\"End\"\n                IsPassword=\"True\"\n                Placeholder=\"Password\"\n                Text=\"{Binding Password}\"\n                WidthRequest=\"150\" />\n        </HorizontalStackLayout>\n        <HorizontalStackLayout Margin=\"10,10,10,0\">\n            <Button\n                BackgroundColor=\"Gray\"\n                Command=\"{Binding SubmitCommand}\"\n                Margin=\"5\"\n                Text=\"Submit\" />\n            <Button\n                BackgroundColor=\"Gray\"\n                Margin=\"5\"\n                Text=\"Create Account\" />\n            <Button\n                BackgroundColor=\"Gray\"\n                Margin=\"5\"\n                Text=\"Forgot Password\" />\n        </HorizontalStackLayout>\n        <Editor\n            FontSize=\"Small\"\n            HeightRequest=\"300\"\n            IsTextPredictionEnabled=\"True\"\n            Margin=\"10\"\n            MaxLength=\"5\"\n            Placeholder=\"Explain yourself here (up to 500\n                characters)\"\n            PlaceholderColor=\"Red\"\n            Text=\"{Binding LostPasswordExcuse}\"\n            TextColor=\"Blue\"\n            VerticalTextAlignment=\"Start\"\n            x:Name=\"LoginEditor\">\n            <Editor.Behaviors>\n                <behaviors:EventToCommandBehavior\n                    EventName=\"Completed\"\n                    Command=\"{Binding EditorCompleted\n                        Command}\" />\n            </Editor.Behaviors>\n        </Editor>\n        <Label\n            FontSize=\"Small\"\n            IsVisible=\"{Binding EditorContentVisible}\"\n            LineBreakMode=\"WordWrap\"\n            Margin=\"10\"\n            Text=\"{Binding LostPasswordExcuse}\"\n            x:Name=\"EditorContents\" />\n    </VerticalStackLayout>\n</ContentPage>\n```", "```cs\n<Button\n    BackgroundColor=\"Gray\"\n    Clicked=\"OnSubmit\"\n    Margin=\"5\"\n    Text=\"Submit\" />\n```", "```cs\nprivate async void OnSubmit(object sender, EventArgs e)\n {\n   await DisplayAlert(\n     \"Submit\",\n     $\"You entered {vm.Name} and {vm.Password}\",\n     \"OK\");\n }\n```", "```cs\n<Button\n    BackgroundColor=\"Gray\"\n    Clicked=\"OnCreate\"\n    Margin=\"5\"\n    Text=\"Create Account\" />\n```", "```cs\n<Label Text=\"Create account?\" x:Name=\"CreateAccount\" />\n```", "```cs\nprivate async void OnCreate(object sender, EventArgs e)\n{\n  CreateAccount.Text = (await DisplayAlert(\n    \"Create?\",\n    \"Did you want to create an account?\",\n    \"Yes\",\n    \"No\")).ToString();\n}\n```", "```cs\n<Button\n    BackgroundColor=\"Gray\"\n    Clicked=\"OnForgotPassword\"\n    Margin=\"5\"\n    Text=\"Forgot Password\" />\n```", "```cs\nprivate async void OnForgotPassword(object sender,\n  EventArgs e)\n{\n  CreateAccount.Text = (await DisplayActionSheet(\n    \"How can we solve this?\", [1]\n    \"Cancel\",   [2]\n    null,       [3]\n    \"Get new password\",\n    \"Show me my hint\",\n    \"Delete account\"));\n}\n```", "```cs\nprivate async void OnCreate(object sender, EventArgs e)\n{\n  CreateAccount.Text = await DisplayPromptAsync(\n    title:\"New Account\",\n    message:\"How old are you?\",\n    placeholder:\"Please enter your age\",\n    keyboard:Keyboard.Numeric,\n    accept: \"OK\",\n    cancel: \"Cancel\");\n}\n```", "```cs\nprivate async void OnCreate(object sender, EventArgs e)\n{\n    CancellationTokenSource = [1]\n      new CancellationTokenSource();\n    var message = \"Your account was created\";\n    ToastDuration duration = ToastDuration.Short;  [2]\n    var fontSize = 14;\n    var toast = Toast.Make(message, duration, fontSize);\n    await toast.Show(cancellationTokenSource.Token); [3]\n}\n```", "```cs\nprivate async void OnCreate(object sender, EventArgs e)\n{\n  CancellationTokenSource =  [1]\n    new CancellationTokenSource();\n  var message = \"Your account was created\";  [2]\n  var dismissalText = \"Click Here to Close the SnackBar\";\n    [3]\n  TimeSpan duration = TimeSpan.FromSeconds(10);  [4]\n  Action = async () =>  [5]\n    await DisplayAlert(\n      \"Snackbar Dismissed!\",\n      \"The user has dismissed the snackbar\",\n      \"OK\");\n  var snackbarOptions = new SnackbarOptions    [6]\n  {\n    BackgroundColor = Colors.Red,\n    TextColor = Colors.Yellow,\n    ActionButtonTextColor = Colors.Black,   [7]\n    CornerRadius = new CornerRadius(20),\n    Font = Microsoft.Maui.Font.SystemFontOfSize(14),\n    ActionButtonFont = Microsoft.Maui.Font\n      .SystemFontOfSize(14)\n  };\n  var snackbar = Snackbar.Make(\n    message,\n    action,\n    dismissalText,\n    duration,\n    snackbarOptions);\n  await snackbar.Show(cancellationTokenSource.Token);\n}\n```", "```cs\n<BoxView\n    Color=\"Red\"\n    CornerRadius=\"20\"\n    HeightRequest=\"125\"\n    WidthRequest=\"100\" />\n```", "```cs\n        <BoxView\n            Color=\"Red\"\n            HeightRequest=\"2\"\n            Margin=\"0,20\"\n            WidthRequest=\"400\" />\n```", "```cs\n<Frame\n     BorderColor=\"Blue\"\n     CornerRadius=\"5\">\n     <Entry\n         HorizontalOptions=\"End\"\n         IsPassword=\"True\"\n         Placeholder=\"Password\"\n         Text=\"{Binding Password}\"\n         WidthRequest=\"150\" />\n </Frame>\n```", "```cs\n<Frame\n    BorderColor=\"Blue\"\n    CornerRadius=\"10\"\n    HasShadow=\"True\"\n    HeightRequest=\"100\"\n    WidthRequest=\"100\">\n    <Frame.Background>  [1]\n        <LinearGradientBrush EndPoint=\"1,0\"> [2]\n            <GradientStop Color=\"Yellow\" Offset=\"0.2\" />\n              [3]\n            <GradientStop Color=\"Red\" Offset=\"0.1\" /> [4]\n        </LinearGradientBrush>\n    </Frame.Background>\n</Frame>\n```", "```cs\n<Frame\n    BorderColor=\"Blue\"\n    CornerRadius=\"10\"\n    HasShadow=\"True\"\n    HeightRequest=\"100\"\n    WidthRequest=\"100\">\n    <Frame.Background>\n        <RadialGradientBrush>\n            <GradientStop Color=\"Yellow\" Offset=\"0.2\" />\n            <GradientStop Color=\"Red\" Offset=\"0.1\" />\n        </RadialGradientBrush>\n    </Frame.Background>\n</Frame>\n```"]