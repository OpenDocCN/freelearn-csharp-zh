- en: To Android with Xamarin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will be looking at these recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Hello Android – creating a Xamarin Android app
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding a .NET Standard 2.0 library to the Xamarin project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Putting things together and testing the application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Readers should have a basic knowledge of C#. They should also have a basic knowledge
    of using Visual Studio, installing packages using NuGet, and referencing libraries
    within projects from other projects.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code files for this chapter can be found on GitHub:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/PacktPublishing/DotNET-Standard-2-Cookbook/tree/master/Chapter09/Chapter9.Xamarin](https://github.com/PacktPublishing/DotNET-Standard-2-Cookbook/tree/master/Chapter09/Chapter9.Xamarin)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Check out the following video to see the code in action:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://goo.gl/dMi9PZ](https://goo.gl/dMi9PZ)'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will be looking at building an Android application using
    Visual Studio for Mac. We will also be building a .NET Standard 2.0 class library
    that the Android application will use. Visual Studio for Mac allows you to build
    Xamarin-based applications for iOS, Android, and Windows using your favorite C#
    programming language. It also has F# support by default. In the previous chapter,
    [Chapter 8](03c5bbfe-3780-4928-9256-c9f13a856479.xhtml), *To iOS with Xamarin*,
    we talked about how to install Visual Studio for Mac.
  prefs: []
  type: TYPE_NORMAL
- en: Hello Android – Creating a Xamarin Android app
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we will be looking at support for Android-based applications
    in Visual Studio for Mac. We will be looking at an Android project, setting up
    a solution for it, and checking for all the bits and pieces required.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Make sure you have installed Visual Studio for Mac for your macOS system. If
    not, follow the *Installing Visual Studio for Mac* *and preparation* recipe, which
    shows you how to install it.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open Finder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click Applications in the left-hand pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, double-click on the Visual Studio icon:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cb7fc017-56bb-4707-987a-0051a40a7a8f.png)'
  prefs: []
  type: TYPE_IMG
- en: Visual Studio
  prefs: []
  type: TYPE_NORMAL
- en: Click on the New Project button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Choose a template for your project** dialog box, scroll down till you
    reach the other section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select Miscellaneous and, under Generic, select Blank Solution:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**![](img/d8e26056-1cb2-459b-b291-b2c21fe3be6c.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: Now, click the Next button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the Solution Name: textbox, type `Chapter9.Xamarin`. Also make sure you
    have selected a proper location:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8558734e-9654-4c68-8f1a-80676d65d8f4.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, click Create.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, the Solution Explorer should look like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fbbc0780-56c8-4cb7-b095-403901d42121.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, *control (^)* + click on the `Chapter9.Xamarin` label and select Add  |
    New Project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select App under the Android section in the left-hand pane. Select Android App
    in the right-hand pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Make sure C# is selected as the programming language:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9d9b22e5-da20-44a3-9139-0ade2dc577e2.png)'
  prefs: []
  type: TYPE_IMG
- en: Click Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, in the App Name: textbox, type `Chapter9.Xamarin.AndroidApp` and, in the
    Organization Identifier: textbox, type `com.chapter9`. Leave the rest as it is:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e6e6e42e-a50a-4dbf-a4f1-91d10faf0d85.png)'
  prefs: []
  type: TYPE_IMG
- en: Click Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Leave everything as it is and click Create:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f69931e1-9595-47c9-ab54-60e087df3f76.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, the Solution Explorer should look like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/77aa9e2a-8760-4252-8115-09f1894dbeb4.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, you should see that the default template already has a working application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Press the *command* + *return* keys to debug the application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, you should see the default `HelloWorld` application running in the emulator:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e9ae392d-a6dc-496b-897e-505a8cc41361.png)'
  prefs: []
  type: TYPE_IMG
- en: Click on the button to see it in action. Press *shift* + *command* + *return*
    to stop debugging.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6c451a43-fee9-4a35-ac9a-684cfa2b3fee.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In steps 1 to 10, we created a blank solution and gave it a proper name. In
    step 10, we added an Android App project to that solution. The Android App project
    is a default template created by Visual Studio for Mac. It's a working prototype
    application for testing that everything is intact.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you look at the Solution Explorer and click on the `MainActivity.cs` file,
    you will see all the action. Inside the `OnCreate()` method, the code looks like
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: You can see a simple button. When you click on the button, its increments are
    counted and it updates the button label. `FindViewById` will locate the button
    and create a `Button` class. Finally, the `button.Click` event triggers the process
    of counting and storing it in the button caption.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a .NET Standard 2.0 library to the Xamarin project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we will be looking at creating a .NET Standard 2.0 library and
    moving the default count code into the library. The counting code was created
    by Visual Studio for Mac as a default template for the Android app.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Make sure you have completed the previous recipe that creates a default Android
    Application. If you have already completed it, let's open up that solution and
    get started.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open Finder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click Applications in the left-hand pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, double-click on the Visual Studio icon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Open, locate the `Chapter9.Xamarin` solution, and open it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The Solution Explorer should look like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b827d7b7-a14b-43dd-ab9b-7d448b888351.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, *control (^)* + click on the `Chapter9.Xamarin` label and select Add |
    New Project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the New Project dialog box, scroll down the left-hand pane until you see
    the Multi Platform section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on Library and select .NET Standard Library under General in the right-hand
    pane. Also make sure C# is selected:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e6d85d77-8e2f-41d5-b5e9-408eae258321.png)'
  prefs: []
  type: TYPE_IMG
- en: Click Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select Target Framework: as .NET Standard 2.0 and click Next:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/88ec6e88-0f48-4b86-bb6d-3f74fc5913a4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the Project Name: textbox, type `Chapter9.Xamarin.AndroidLib` as the name
    and leave the rest:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/aa651d87-9342-4f19-922c-38d43b850822.png)'
  prefs: []
  type: TYPE_IMG
- en: Click Create.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, the Solution Explorer should look like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/76eed9d2-5c0f-47a4-8d95-4f1a29e93241.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, select the `Class1.cs` label and press *command* + *R* to rename.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Rename it `CounterLib.cs`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make sure you change the class name as well from `Class1` to `CounterLib`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, inside the `CounterLib` class, add the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Click Build | Build All to check that all syntax is correct.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In steps 1 to 4, we opened the solution created in the previous recipe. In
    steps 6 to 12, we added a .NET Standard 2.0 library to the solution. Now, the
    solution has two projects: an Android project and a .NET Standard 2.0 library
    project. In steps 14 to 16, we renamed the class created in Visual Studio. We
    also renamed the actual class name to match the filename.'
  prefs: []
  type: TYPE_NORMAL
- en: In step 17, we added a public method that took an `integer` parameter and returned
    an integer value with one added to the value supplied. Finally, we performed a
    quick build to check for the correct syntax.
  prefs: []
  type: TYPE_NORMAL
- en: Putting things together and testing the application
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we will be putting everything together and testing the final
    application. We will be referencing the .NET Standard 2.0 library from the Android
    application and using the library from the Android application.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Make sure you have completed the previous recipe that builds the .NET Standard
    2.0 library. If you have, open up the solution and get started on this application.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open Finder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click Applications in the left-hand pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, double-click on the Visual Studio icon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Open, locate the `Chapter9.Xamarin` solution, and open it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The Solution Explorer should look like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fae6e9e0-535b-4e74-8aae-285f623e5026.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, expand the `Chapter9.Xamarin.AndroidApp` project node.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Solution Explorer, *control (^)* + click on the References label and
    select Edit References.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Edit References dialog box, click on the Projects tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Check `Chapter9.Xamarin.AndroidLib` in the list and click OK:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/61d4c365-7274-44c5-b64d-907ec553a677.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Scroll up until you reach the `using` directives and add the following `using`
    directive to access the library:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Now, double-click on the MainActivity.cs file to open its code.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Under the `MainActivity` class, find this code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Replace the previous code with the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Now, scroll down until you reach the `OnCreate()` method.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add the following code next to the `base.OnCreate()` line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, replace the default button click code with the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Press *command* + *return* to debug the application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click the button a few times and you should see the following output:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/72e458ec-2708-4eb2-9246-cf21a3b9ac5c.png)'
  prefs: []
  type: TYPE_IMG
- en: Press *shift* + c*ommand* + *return* to stop debugging.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In steps 1 to 6, we opened the existing solution we created in previous recipes.
    In step 9, we added a reference to the library from the Android application. In
    step 10, we added the code-level reference to the library. This will allow us
    to grab all the available methods from the library. In step 12, we changed the
    existing code. In step 14, we created an instance of `CounterLib()` and stored
    it in a variable.
  prefs: []
  type: TYPE_NORMAL
- en: In step 15, again, we made a small change to the button's existing click code
    to use the `IncrementByOne()` method from the class library. Finally, in steps
    16, 17, and 18, we tested our new code.
  prefs: []
  type: TYPE_NORMAL
