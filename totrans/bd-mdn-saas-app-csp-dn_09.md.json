["```cs\npublic class CustomerControllerb : ICustomerController\n{\n    public Customer GetCustomerById(int id)\n    {\n        return new Customer { Id = id, Name = \"Dave\n            Gilmore\" };\n    }\n}\n```", "```cs\nmkdir test; \\\ncd test; \\\ndotnet new xunit --name GoodHabits.HabitService.Tests; \\\ncd GoodHabits.HabitService.Tests; \\\ndotnet add reference ../../GoodHabits.HabitService/\n    GoodHabits.HabitService.csproj; \\\ndotnet add package Moq; \\\ndotnet add package FluentAssertions; \\\nrm UnitTest1.cs ; \\\ntouch HabitsControllerTest.cs ; \\\ncd ../..\ndotnet sln add ./tests/GoodHabits.HabitService.Tests/\n    GoodHabits.HabitService.Tests.csproj;\n```", "```cs\nusing Moq;\nusing FluentAssertions;\nusing GoodHabits.HabitService.Controllers;\nusing Microsoft.Extensions.Logging;\nusing GoodHabits.HabitService;\nusing AutoMapper;\nusing Microsoft.AspNetCore.Mvc;\npublic class HabitsControllerTests\n{\n    private readonly HabitsController _habitsController;\n    private readonly Mock<ILogger<HabitsController>>\n    _loggerMock;\n    private readonly Mock<IHabitService> _habitServiceMock;\n    private readonly Mock<IMapper> _mapperMock;\n    public HabitsControllerTests()\n    {\n        _loggerMock = new Mock<Ilogger\n            <HabitsController>>();\n        _habitServiceMock = new Mock<IHabitService>();\n        _mapperMock = new Mock<IMapper>();\n        _habitsController = new HabitsController\n            (_loggerMock.Object, _habitServiceMock.Object,\n                _mapperMock.Object);\n    }\n    [Fact]\n    public async Task GetVersion_ReturnsExpectedVersion()\n    {\n        var result = await _habitsController.GetVersion();\n        var okResult = result.Should().BeOfType\n            <OkObjectResult>().Subject;\n        okResult.Value.Should().Be(\"Response from version\n            1.0\");\n    }\n}\n```", "```cs\nokResult.Value.Should().Be(\"Response from version 1.0\")\n```"]