["```cs\nusing UnityEngine; \nusing System.Collections; \n\npublic class RandomPosition : MonoBehaviour { \n\n  void Start () { \n    StartCoroutine (RePositionWithDelay()); \n  } \n\n  IEnumerator RePositionWithDelay() { \n    while (true) { \n      SetRandomPosition(); \n      yield return new WaitForSeconds (5); \n    } \n  } \n\n  void SetRandomPosition() { \n    float x = Random.Range (-5.0f, 5.0f); \n    float z = Random.Range (-5.0f, 5.0f); \n    Debug.Log (\"X,Z: \" + x.ToString(\"F2\") + \", \" + \n       z.ToString(\"F2\")); \n    transform.position = new Vector3 (x, 0.0f, z); \n  } \n} \n```", "```cs\nusing UnityEngine; \nusing System.Collections; \n\npublic class LookMoveTo : MonoBehaviour { \n  public GameObject ground; \n\n  void Update () { \n    Transform camera = Camera.main.transform; \n    Ray ray; \n    RaycastHit hit; \n    GameObject hitObject; \n\n    Debug.DrawRay (camera.position, \n      camera.rotation * Vector3.forward * 100.0f); \n\n    ray = new Ray (camera.position, \n      camera.rotation * Vector3.forward); \n    if (Physics.Raycast (ray, out hit)) { \n      hitObject = hit.collider.gameObject; \n      if (hitObject == ground) { \n        Debug.Log (\"Hit (x,y,z): \" + hit.point.ToString(\"F2\")); \n        transform.position = hit.point; \n      } \n    } \n  } \n\n} \n```", "```cs\npublic GameObject ground; \n```", "```cs\n  void Update () { \n    Transform camera = Camera.main.transform; \n    Ray ray; \n    RaycastHit hit; \n    GameObject hitObject; \n```", "```cs\n    ray = new Ray (camera.position, \n      camera.rotation * Vector3.forward); \n```", "```cs\nif (Physics.Raycast (ray, out hit)) {\n```", "```cs\n      if (hitObject == ground) { \n        transform.position = hit.point; \n      } \n```", "```cs\n    Transform camera = Camera.main.transform; \n    Ray ray; \n    RaycastHit[] hits; \n    GameObject hitObject; \n\n    Debug.DrawRay (camera.position, camera.rotation * \n       Vector3.forward * 100.0f);\n    ray = new Ray (camera.position, camera.rotation * \n       Vector3.forward); \n    hits = Physics.RaycastAll (ray); \n    for (int i = 0; i < hits.Length; i++) { \n      RaycastHit hit = hits [i]; \n      hitObject = hit.collider.gameObject; \n      if (hitObject == ground) { \n        Debug.Log (\"Hit (x,y,z): \" + \n           hit.point.ToString(\"F2\")); \n        transform.position = hit.point; \n      } \n    } \n```", "```cs\nusing UnityEngine; \nusing System.Collections; \n\npublic class KillTarget : MonoBehaviour { \n  public GameObject target; \n  public ParticleSystem hitEffect; \n  public GameObject killEffect; \n  public float timeToSelect = 3.0f; \n  public int score; \n\n  private float countDown; \n\n  void Start () { \n    score = 0; \n    countDown = timeToSelect; \n  } \n```", "```cs\nvoid Update () { \n    Transform camera = Camera.main.transform; \n    Ray ray = new Ray (camera.position, camera.rotation * \n       Vector3.forward); \n    RaycastHit hit; \n    if (Physics.Raycast (ray, out hit) && (hit.collider.gameObject \n       == target)) { \n      if (countDown > 0.0f) { \n        // on target \n        countDown -= Time.deltaTime; \n        // print (countDown); \n        hitEffect.transform.position = hit.point; \n        hitEffect.Play(); \n      } else { \n        // killed \n        Instantiate( killEffect, target.transform.position, \n           target.transform.rotation ); \n        score += 1; \n        countDown = timeToSelect; \n        SetRandomPosition(); \n      } \n    } else { \n      // reset \n      countDown = timeToSelect; \n      hitEffect.Stop(); \n    } \n  } \n\n  void SetRandomPosition() { \n    float x = Random.Range (-5.0f, 5.0f); \n    float z = Random.Range (-5.0f, 5.0f); \n    target.transform.position = new Vector3 (x, 0.0f, z); \n  } \n} \n```", "```cs\n  public GameObject target; \n  public ParticleSystem hitEffect; \n  public GameObject killEffect; \n  public float timeToSelect = 3.0f; \n  public int score; \n```", "```cs\nusing UnityEngine; \nusing System.Collections; \n\npublic class RandomPosition : MonoBehaviour { \n\n  // Use this for initialization \n  void Start () { \n\n  } \n\n  // Update is called once per frame \n  void Update () { \n\n  } \n}\n```"]