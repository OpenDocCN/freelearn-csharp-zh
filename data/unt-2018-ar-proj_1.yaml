- en: What AR is and How to Get Set up
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AR是什么以及如何设置环境
- en: This book begins with some introductory information and theory regarding **Augmented
    Reality** (**AR**). Unfortunately, we can't just jump right into programming without
    first properly tackling the fundamentals. Without knowing the fundamentals and
    theory behind how AR projects work, we would not be able to fully understand how
    the technology works or how to take advantage of some of the more abstract features
    of the technology. This doesn't mean that you wouldn't be able to use the technology,
    just that there are many underlying features that would be difficult to grasp
    at more advanced levels.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书从一些关于**增强现实**（**AR**）的介绍性信息和理论开始。不幸的是，我们无法在不首先解决基础知识的情况下直接进入编程。如果不了解AR项目背后的基础知识和理论，我们就无法完全理解这项技术的工作原理或如何利用这项技术的某些更抽象的功能。这并不意味着您无法使用这项技术，只是说在更高级别上，有许多底层功能可能会难以掌握。
- en: This book and its code files are set up with the experienced programmer in mind.
    There are optimization strategies employed and esoteric language constructs used
    that beginner programmers may not immediately understand. If you have not been
    studying programming for at least two years and have not used C# extensively during
    that period, I suggest having a reference manual or two at hand in order to clarify
    any programming terms or syntax usage that you are unfamiliar with. Some of the
    best sources for really diving into the C# language are the C# Language Specification ([https://www.ecma-international.org/publications/files/ECMA-ST/Ecma-334.pdf](https://www.ecma-international.org/publications/files/ECMA-ST/Ecma-334.pdf))
    and *Learning C# By Developing Games with Unity 2017* ([https://www.packtpub.com/game-development/learning-c-7-developing-games-unity-2017-third-edition](https://www.packtpub.com/game-development/learning-c-7-developing-games-unity-2017-third-edition)).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书及其代码文件是为经验丰富的程序员设计的。其中采用了优化策略和某些难以理解的编程语言结构，初学者程序员可能无法立即理解。如果您在至少两年内没有学习编程，或者在那段时间内没有广泛使用C#，我建议您手头备有一两本参考手册，以便澄清您不熟悉的任何编程术语或语法用法。真正深入研究C#语言的最好资源之一是C#语言规范（[https://www.ecma-international.org/publications/files/ECMA-ST/Ecma-334.pdf](https://www.ecma-international.org/publications/files/ECMA-ST/Ecma-334.pdf)）和《通过Unity
    2017开发游戏学习C#》（[https://www.packtpub.com/game-development/learning-c-7-developing-games-unity-2017-third-edition](https://www.packtpub.com/game-development/learning-c-7-developing-games-unity-2017-third-edition)）。
- en: Please be aware that at least two projects in this book will require the use
    of Xcode and will require a macOS and iOS device to compile and run properly.
    If you do not have, at the bare minimum, a 2011 model or later macOS, you should
    skip implementing the examples in the chapters and sections that deal with ARKit
    entirely, as you will not be able to follow along with the book. Feel free to
    read the sections, though, as there is always something to learn, even if you
    can't follow the examples.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，本书中至少有两个项目需要使用Xcode，并且需要macOS和iOS设备才能正确编译和运行。如果您至少没有2011年款或更新的macOS，您应该跳过实现涉及ARKit的章节和部分中的示例，因为您将无法跟随本书的内容。不过，您可以自由阅读这些部分，因为总有东西可以学习，即使您不能跟随示例。
- en: The version of Unity3D we will be using for this book is Unity 2017.2.0f3 (64-bit)
    for both Windows 10 and macOS. We will be using Windows 10 version 1703 build
    number 15063.726 to build for Android, and macOS High Sierra (version 10.13) for
    building for iOS, as these are the latest versions of both operating systems at
    the time of writing this book.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本书中使用Unity3D的版本是Unity 2017.2.0f3（64位），适用于Windows 10和macOS。我们将使用Windows 10版本1703构建号15063.726来构建Android版本，以及macOS
    High Sierra（版本10.13）来构建iOS版本，因为这些是撰写本书时的最新操作系统版本。
- en: 'The core information we will go over is as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论的核心信息如下：
- en: Which AR toolkits are available for usage
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可用的AR工具包有哪些
- en: How to get started with each toolkit
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何开始使用每个工具包
- en: What the pros and cons of each toolkit are
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个工具包的优缺点
- en: Reasons for developing AR applications and games
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发AR应用和游戏的原因
- en: Available AR packages
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可用的AR包
- en: 'Unity3D has several options readily available via plugins for creating AR applications
    and games:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Unity3D通过插件提供了几个创建AR应用和游戏的选项：
- en: Vuforia AR Starter Kit
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vuforia AR入门套件
- en: ARCore (Tango)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARCore (Tango)
- en: ARToolKit
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARToolKit
- en: ARKit
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARKit
- en: It should be noted that Vuforia Starter Kit has been fully integrated into Unity3D
    and is quite easy to jump right into creating projects with. ARKit and ARCore,
    however, are slightly different. Because they are still in the experimental and
    early developmental phases, Apple and Google have not released full and proper
    SDKs for Unity Technologies to incorporate into the engine.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 应该注意的是，Vuforia Starter Kit已经完全集成到Unity3D中，并且非常容易直接开始创建项目。然而，ARKit和ARCore则略有不同。因为它们仍然处于实验和早期开发阶段，苹果和谷歌尚未发布完整且适当的SDK，以便Unity
    Technologies将其纳入引擎。
- en: There is a plugin that exists for both of them that you will have to compile
    to get it to work with your project for Apple and Android devices, and we will
    go into how to compile and integrate into Unity3D to get it to work appropriately
    later in this chapter. For now, it is good to know that there is a little bit
    more setup involved with getting AR to work with iOS and Android.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于苹果和Android设备，存在一个插件，您需要编译才能使其与项目一起工作，我们将在本章后面介绍如何编译并将其集成到Unity3D中，以便正确地使用它。现在，了解与iOS和Android一起使用AR需要一些额外的设置是有用的。
- en: With the introduction out of the way, we can finally begin to really talk about
    AR, what it is exactly, and how to set up Unity3D to take advantage of the SDKs
    available to create your own AR games and applications. Without further ado, let's
    define what AR actually is.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍完毕后，我们终于可以真正地讨论AR了，即它究竟是什么，以及如何设置Unity3D以利用可用的SDK来创建自己的AR游戏和应用。现在，让我们不再拖延，来定义AR实际上是什么。
- en: Defining AR
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义AR
- en: 'AR is augmented reality. Augmented reality is taking some form of reality and
    changing it in a specific way to enhance the experience. What augmented reality
    typically refers to is as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: AR是增强现实。增强现实是以某种形式改变现实，以特定方式增强体验。增强现实通常指的是以下内容：
- en: 'Sound:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 声音：
- en: '![](img/96fb24bc-8ff9-4f95-a150-34c0fc7ecc28.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/96fb24bc-8ff9-4f95-a150-34c0fc7ecc28.png)'
- en: Sound perception
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 声音感知
- en: 'Video:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 视频：
- en: '![](img/cf81cab4-6b43-4f2c-9108-45d30769ecd1.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/cf81cab4-6b43-4f2c-9108-45d30769ecd1.png)'
- en: The text in this image is not important. We are just showcasing the video perception
    overlay
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图片中的文字并不重要。我们只是展示视频感知叠加。
- en: 'Graphics:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图形：
- en: '![](img/849c7abc-735f-4321-b04d-96b7cc32c5fd.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/849c7abc-735f-4321-b04d-96b7cc32c5fd.png)'
- en: The text in this image is not important. We are just showcasing the Graphic
    perception overlay
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图片中的文字并不重要。我们只是展示图形感知叠加。
- en: 'Haptics:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 触觉：
- en: '![](img/1ea208f7-4d11-4c87-92c9-be14c5f44aa1.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1ea208f7-4d11-4c87-92c9-be14c5f44aa1.png)'
- en: Haptic perception
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 触觉感知
- en: 'GPS data:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GPS数据：
- en: '![](img/0fc552b5-7eec-4dfa-8bd7-7ee3ee4d4ffe.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0fc552b5-7eec-4dfa-8bd7-7ee3ee4d4ffe.jpg)'
- en: GPS perception
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: GPS感知
- en: This means that we could boost visual graphics of an object and view it in a
    different perspective than what we are accustomed to, or we could add something
    that isn't there. The video is a little bit different, as it requires the software
    to interface with specialized hardware, such as glasses, cell phones, HUDs, and
    other devices.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们可以增强一个物体的视觉图形，并以不同于我们习惯的视角来观察它，或者我们可以添加一些原本不存在的东西。视频则略有不同，因为它需要软件与专用硬件（如眼镜、手机、HUD和其他设备）进行交互。
- en: We could boost the auditory aspect of the world around us. We could take words
    we see in one language and have it say those words in another, or we could pick
    up those faint sounds that we always hear and tune out, then amplify them and
    really bring them to the forefront.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以增强我们周围世界的听觉方面。我们可以将我们看到的一种语言中的文字转换成另一种语言，或者我们可以捕捉那些我们总是听到但忽略的微弱声音，然后放大它们，真正地将它们带到前台。
- en: Haptic perception is a little more difficult, but it could be achieved with
    sensors that emulate touch. We could make something vibrate softly or harshly
    to simulate various effects, or we could make the game or application entirely
    touch- or motion-sensor-based. There are many other things we could use for haptic
    perception in applications or games. It is a field that is constantly being researched
    and expanded upon.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 触觉感知稍微困难一些，但可以通过模拟触觉的传感器来实现。我们可以使某些东西轻微或强烈地振动来模拟各种效果，或者我们可以使游戏或应用完全基于触觉或运动传感器。在应用或游戏中，我们可以使用许多其他东西来进行触觉感知。这是一个不断被研究和扩展的领域。
- en: For GPS data, we can use the user's location to know where the user is in the
    app or game world. Another use for GPS data would be to know if something of interest
    to the user should be shown to them.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 对于GPS数据，我们可以使用用户的位置来了解用户在应用或游戏世界中的位置。GPS数据的另一个用途是确定用户感兴趣的内容是否应该显示给他们。
- en: Because Unity3D loves to take care of most of the finer details of implementation
    for us, we don't have to worry too much about incorporating DLLs (dynamic-link
    libraries) or writing the wrapper classes to work with the majority of the popular
    AR and VR devices. There are exceptions to this rule, depending on the platform
    and whether the engine has been updated to specifically work with those devices.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Unity3D喜欢为我们处理实现的大部分细节，我们不必太担心将DLL（动态链接库）或编写包装类与大多数流行的AR和VR设备一起使用。根据平台和引擎是否已更新以专门用于这些设备，这个规则可能有例外。
- en: Android and iOS are the most popular devices for applications and games to have
    AR incorporated into them, however, the various tech giants have been working
    hard to add more and more devices into the mix, with varying amounts of success.
    Some of these will obviously not have implementation with Unity3D, although you
    can write wrapper classes as previously mentioned, however, that is outside the
    scope of this book.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Android和iOS是最受欢迎的应用和游戏集成AR的设备，然而，各种技术巨头一直在努力将更多设备加入其中，效果各有不同。其中一些显然不会使用Unity3D进行实现，尽管你可以像之前提到的那样编写包装类，但这超出了本书的范围。
- en: An incomplete list of AR devices
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AR设备的不完全列表
- en: 'Let''s take a quick look at some AR-capable devices. This should give us a
    slightly better idea of the different types of devices we can use and deploy to:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速浏览一些具有AR功能的设备。这应该能让我们对可以使用和部署的不同类型设备有一个更清晰的认识：
- en: 'The **Meta 2** is a head-mounted display headset that uses a sensory array
    for hand interactions and positional tracking, it has a visual field view of 90
    degrees, and a resolution of 2560 x 1440:'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Meta 2** 是一款头戴式显示器，用于手部交互和位置跟踪，它具有90度的视野和2560 x 1440的分辨率：'
- en: '![](img/6956d511-e8e6-4216-9186-822a5b45a92b.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6956d511-e8e6-4216-9186-822a5b45a92b.jpg)'
- en: Meta 2
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Meta 2
- en: 'AR displays can be rendered on devices resembling eyeglasses, such as the **Google
    Glass**:'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AR显示可以渲染在类似眼镜的设备上，例如**Google Glass**：
- en: '![](img/1964ae84-2b2c-45b5-bee9-a6d87a0a9a4e.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1964ae84-2b2c-45b5-bee9-a6d87a0a9a4e.jpg)'
- en: Google Glass
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Google Glass
- en: 'Another such device is the HoloLens:'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一种这样的设备是HoloLens：
- en: '![](img/c8de6845-b156-46e4-abe9-310f8fa3e13d.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c8de6845-b156-46e4-abe9-310f8fa3e13d.jpg)'
- en: HoloLens
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: HoloLens
- en: 'There is something called a **head-up display**, which is commonly referred
    to as a **HUD**. It is an alternate implementation of AR displays:'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一种称为**抬头显示**的东西，通常被称为**HUD**。它是AR显示的另一种实现方式：
- en: '![](img/4e252c51-b4e7-4e8c-b601-778c56f8e469.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4e252c51-b4e7-4e8c-b601-778c56f8e469.jpg)'
- en: HUD
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: HUD
- en: There are many new devices being researched on and created all the time. Augmented
    reality is still in its infancy.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正在研究和创建许多新的设备。增强现实仍然处于起步阶段。
- en: All throughout this book, we will create applications and games that are inspired
    by the definition of AR. Since there are four main aspects of AR, we will use
    those four aspects and create a specific application or game for that chapter.
    Since we have a finite number of sensors that are available for Android and iOS
    devices, some sensors will be utilized in multiple projects.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我们将创建受AR定义启发的应用程序和游戏。由于AR有四个主要方面，我们将使用这四个方面并为每一章创建一个特定的应用程序或游戏。由于Android和iOS设备可用的传感器数量有限，一些传感器将在多个项目中使用。
- en: Advantages and disadvantages of the different AR toolkits available
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不同AR工具包的优缺点
- en: In this section, we will discuss the advantages and disadvantages of ARCore,
    Vuforia, ARToolKit, and ARKit.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论ARCore、Vuforia、ARToolKit和ARKit的优缺点。
- en: ARCore
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ARCore
- en: 'ARCore is a platform for building augmented reality apps for Android devices.
    ARCore uses three key technologies to integrate virtual content with the world
    through the camera. It uses motion tracking, environmental understanding, and
    light estimation. ARCore works by tracking the position of the device as it moves
    and builds its own understanding of the real world. It is able to identify interesting
    points and readings from the phone''s sensors and has the ability to determine
    both the position and the orientation of the phone as it moves. ARCore only has
    a few supported devices at the present time, which are as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: ARCore 是一个用于为 Android 设备构建增强现实应用的平台。ARCore 使用三种关键技术通过摄像头将虚拟内容与真实世界集成。它使用运动跟踪、环境理解和光照估计。ARCore
    通过跟踪设备移动时的位置并构建对真实世界的理解来工作。它能够从手机的传感器中识别有趣的位置和读数，并且能够确定手机移动时的位置和方向。目前 ARCore 只支持少数设备，如下所示：
- en: Google Pixel
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Pixel
- en: Pixel XL
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pixel XL
- en: Pixel 2
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pixel 2
- en: Pixel 2 XL
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pixel 2 XL
- en: Samsung Galaxy S8
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Samsung Galaxy S8
- en: If you don't own one of these devices, you are stuck using the Android Emulator
    for testing purposes. This is a very obvious downside, since not everyone owns
    one of these specific phones; additionally, the Android Emulator is an experimental
    piece of software and is subject to change often. The upside is that ARCore works
    with Unity3D and Unreal Engine as well as native to Android devices using the
    Java programming language.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有这些设备中的任何一个，你将不得不使用 Android 模拟器进行测试。这是一个非常明显的缺点，因为并非每个人都拥有这些特定的手机；此外，Android
    模拟器是一个实验性软件，经常发生变化。优点是 ARCore 与 Unity3D 和 Unreal Engine 兼容，并且可以原生支持使用 Java 编程语言的
    Android 设备。
- en: ARKit
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ARKit
- en: 'ARKit, which was introduced in iOS 11, is a framework for easily creating augmented
    reality projects for the iPhone and iPad. ARKit''s features include:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: ARKit，自 iOS 11 以来推出，是一个用于轻松创建适用于 iPhone 和 iPad 的增强现实项目的框架。ARKit 的功能包括：
- en: TrueDepth Camera
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TrueDepth 相机
- en: Visual Inertial Odometry
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视觉惯性里程计
- en: Scene Understanding
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 场景理解
- en: Lighting Estimation
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 光照估计
- en: Rendering Optimizations
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渲染优化
- en: The downsides to ARKit are that it is an experimental software and subject to
    change often, and that it requires the use of the Apple iPhone X to take full
    advantage of the TrueDepth Camera. You cannot compile this on Windows for Mac,
    so it is a requirement to have a macOS to even test the code properly. The pros,
    however, are that ARKit works with Unity3D and Unreal Engine and can utilize the
    A9, A10, and A11 Apple processors. In other words, it works with the iPhone 6S
    and beyond.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: ARKit 的缺点是它是一个实验性软件，经常发生变化，并且需要使用 Apple iPhone X 来充分利用 TrueDepth 相机。你不能在 Windows
    上编译它用于 Mac，因此即使是测试代码也需要 macOS。然而，优点是 ARKit 与 Unity3D 和 Unreal Engine 兼容，并且可以利用
    A9、A10 和 A11 Apple 处理器。换句话说，它与 iPhone 6S 及以上版本兼容。
- en: Vuforia
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vuforia
- en: 'Vuforia is one of the most popular platforms to help you work with augmented
    reality development. It supports the following:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Vuforia 是最受欢迎的平台之一，可以帮助你进行增强现实开发。它支持以下功能：
- en: Android
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android
- en: iOS
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS
- en: UWP
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UWP
- en: Unity3D Editor
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity3D 编辑器
- en: Vuforia is able to do many different things, such as recognition of different
    types of visual objects (such as boxes, cylinders, and planes), text and environment
    recognition, and VuMark, which is a combination of picture and QR code. Also,
    using the Vuforia Object Scanner, you can scan and create object targets. The
    recognition process can be implemented using the database (local or cloud storage).
    The Unity plugin is simple to integrate and very powerful. All plugins and functionalities
    of the platform are free to use but include the Vuforia watermarks.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Vuforia 能够执行许多不同的事情，例如识别不同类型的视觉对象（如盒子、圆柱体和平面），文本和环境识别，以及 VuMark，这是一种图片和二维码的组合。此外，使用
    Vuforia Object Scanner，你可以扫描并创建对象目标。识别过程可以使用数据库（本地或云存储）实现。Unity 插件易于集成且功能强大。平台的所有插件和功能都可以免费使用，但包含
    Vuforia 水印。
- en: 'The limitations just relate to the number of VuMarks and the amount of Cloud
    recognition:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 限制仅与 VuMark 的数量和云识别的数量有关：
- en: Paid plan without watermarks
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无水印的付费计划
- en: 1,000 Cloud recognitions
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1,000 云识别
- en: 100,000 targets
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 100,000 个目标
- en: Costs $99 per month
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每月费用为 $99
- en: The obvious downside is that this is not 100% free software, although they do
    have a developer tier with 1,000 cloud recognitions and 1,000 targets for free
    per month.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 显而易见的缺点是这并不是100%免费的软件，尽管他们确实有一个开发者级别，每月免费提供1,000个云识别和1,000个目标。
- en: ARToolKit
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ARToolKit
- en: 'ARToolKit is an open source tracking library for AR projects. It is supported
    on Android, iOS, Linux, and macOS. ARToolKit has the functionality to utilize
    the following:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: ARToolKit是一个开源的AR项目跟踪库。它支持Android、iOS、Linux和macOS。ARToolKit具有利用以下功能的能力：
- en: Single or stereo camera for position/orientation tracking
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单个或立体相机用于位置/方向跟踪
- en: Tracking of simple black squares
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单黑色方块的跟踪
- en: Tracking of planar images
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平面图像跟踪
- en: Camera calibration
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 摄像机标定
- en: Optical stereo calibration
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 光学立体标定
- en: Optical head-mounted display support
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 光学头戴式显示器支持
- en: It is fast enough for real-time AR applications. It is also free and open source
    software, with plugins for Unity and OpenSceneGraph. The downside to this software
    is that it has a huge variety of functions, so it is difficult to integrate the
    library, and it takes more time to explore all the available options and settings.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 它足够快，可以用于实时AR应用。它也是免费的开源软件，有Unity和OpenSceneGraph的插件。这个软件的缺点是它有大量的功能，因此集成库很困难，探索所有可用选项和设置需要更多时间。
- en: Building our first AR applications
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建我们的第一个AR应用程序
- en: This section will define all the main points of each of the different SDKs available
    to us, and we will build our first program with them. This will be in a step-by-step
    and very in-depth tutorial design sort of way, since this is a lot of information
    to package and condense into a small section without needing to reiterate the
    information in later chapters.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这个部分将定义我们可用的每个不同SDK的主要点，我们将用它们构建我们的第一个程序。这将是一个逐步的、非常深入的教程设计方式，因为这是一些需要打包和压缩到小节中的大量信息，而不需要在后面的章节中重复信息。
- en: Setting up Vuforia
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Vuforia
- en: 'It is now time to set up a Unity3D project for each of the different SDKs that
    will serve as the basis for later chapters when we use each of them to build an
    application or a game. Let''s start with Vuforia, since it is the simplest one
    to set up:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候为每个不同的SDK设置一个Unity3D项目了，这些项目将作为我们稍后章节的基础，当我们使用它们来构建应用程序或游戏时。让我们从Vuforia开始，因为它是最容易设置的：
- en: 'We now need to register with Vuforia. Navigate to [https://developer.vuforia.com/vui/user/register](https://developer.vuforia.com/vui/user/register)
    in order to go to the registration landing page. If you live in a country in which
    Google is blocked, you should use a VPN, because the registration page uses the
    Google-powered reCAPTCHA and you can''t continue without it:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在需要注册Vuforia。导航到[https://developer.vuforia.com/vui/user/register](https://developer.vuforia.com/vui/user/register)以进入注册登录页面。如果你居住在Google被封锁的国家，你应该使用VPN，因为注册页面使用了Google驱动的reCAPTCHA，没有它你无法继续：
- en: '![](img/42ef57f4-6936-45af-99a2-8835027edf52.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/42ef57f4-6936-45af-99a2-8835027edf52.png)'
- en: Registering on Vuforia
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在Vuforia上注册
- en: 'Once you can log in, navigate to the Develop tab; alternatively, follow this
    link: [https://developer.vuforia.com/targetmanager/licenseManager/licenseListing](https://developer.vuforia.com/targetmanager/licenseManager/licenseListing).'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你可以登录，导航到“开发”标签页；或者，点击以下链接：[https://developer.vuforia.com/targetmanager/licenseManager/licenseListing](https://developer.vuforia.com/targetmanager/licenseManager/licenseListing)。
- en: 'You will see two main items, License Manager and Target Manager. The License
    Manager will allow you to create a free Development Key or purchase a Development
    Key. We want to create a free one. Click on Get Development Key. Enter a name
    for the app, which you can change at any time. I shall call mine `VuforiaIntro`:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将看到两个主要项目，许可证管理器和目标管理器。许可证管理器将允许你创建一个免费的开发密钥或购买一个开发密钥。我们想创建一个免费的。点击获取开发密钥。为应用输入一个名称，你可以随时更改。我将称它为`VuforiaIntro`：
- en: '![](img/d5348c09-268f-40d4-aca4-c3b1c7e42fc4.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d5348c09-268f-40d4-aca4-c3b1c7e42fc4.png)'
- en: Adding a Vuforia key
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 添加Vuforia密钥
- en: 'Now, we have our key with Vuforia. In order to see the license key, we need
    to click on the name of our app:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们有了Vuforia的密钥。为了查看许可证密钥，我们需要点击我们应用的名称：
- en: '![](img/9f14c744-5628-440b-bcb1-7cae4163f781.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9f14c744-5628-440b-bcb1-7cae4163f781.png)'
- en: Vuforia key info
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Vuforia密钥信息
- en: 'This next page gives us two very important pieces of information: License Key
    and Usage details. The Usage details tells us how many Cloud recognitions, Cloud
    databases, Recognitions used, Cloud targets used, VuMarks generated, VuMark databases,
    VuMark templates, and VuMarks we have used or currently have remaining:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一页提供了两个非常重要的信息：许可证密钥和使用详情。使用详情告诉我们有多少云识别、云数据库、使用的识别、使用的云目标、生成的VuMark、VuMark数据库、VuMark模板和使用的VuMark，以及我们目前剩余的VuMark数量：
- en: '![](img/a2f8d584-ccc2-48aa-a8e0-8026eb04dccd.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a2f8d584-ccc2-48aa-a8e0-8026eb04dccd.png)'
- en: The License Key details tell us our key (which is easy to copy to the clipboard),
    the type of key it is, the status of the key, the date it was created, and the
    history of the key.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 许可密钥详细信息告诉我们我们的密钥（它很容易复制到剪贴板），密钥的类型，密钥的状态，创建日期以及密钥的历史。
- en: Now, we are ready to set up Vuforia and get the demo project working appropriately.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经准备好设置Vuforia并使演示项目适当地工作。
- en: As stated previously, Vuforia is fully integrated into Unity3D as of 2017.2,
    and is a dream to work with once you learn the basics of the SDK. Vuforia is made
    to strictly deal with the graphics portion of AR. It can recognize images and
    objects, and it has the ability to interact with the real world, because it uses
    computer vision. Since Vuforia is built into Unity3D, we will do the installation
    of Unity with Vuforia all in one go.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Vuforia自2017.2版本起完全集成到Unity3D中，一旦你学会了SDK的基础知识，它就是一个梦想的工作。Vuforia旨在严格处理AR的图形部分。它可以识别图像和对象，并且因为它使用计算机视觉，所以它能够与真实世界互动。由于Vuforia集成到Unity3D中，我们将一次性安装带有Vuforia的Unity。
- en: 'If you don''t have Unity3D installed on your computer now, let''s go ahead
    and do that:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在电脑上没有安装Unity3D，让我们先去安装它：
- en: 'Navigate to [http://www.Unity3D.com](http://www.Unity3D.com) and download the
    latest Personal edition (or one of the others, if you are a high roller) installer
    for Unity:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到[http://www.Unity3D.com](http://www.Unity3D.com)并下载最新的个人版（或其他版本，如果你是高端用户）安装程序：
- en: '![](img/427eebe8-abe7-4fca-8bd7-8cfe4eba6fe4.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/427eebe8-abe7-4fca-8bd7-8cfe4eba6fe4.png)'
- en: 'When you get to the components section of the installer, make sure to select
    all the platforms you want to support. I typically select Android Build Support,
    Linux Build Support, SamsungTV Build Support, Tizen Build Support, WebGL Build
    Support, and UWP (Universal Windows Platform) Build Support. There is one additional
    one you need to make sure you select, and that is Vuforia Augmented Reality Support:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你到达安装程序的组件部分时，请确保选择你想要支持的所有平台。我通常选择Android构建支持、Linux构建支持、SamsungTV构建支持、Tizen构建支持、WebGL构建支持以及UWP（通用Windows平台）构建支持。还有一个额外的选项你需要确保选择，那就是Vuforia增强现实支持：
- en: '![](img/5e13d0f1-b6ab-4f09-9747-79e26e33775f.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5e13d0f1-b6ab-4f09-9747-79e26e33775f.png)'
- en: Vuforia Unity installation
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Vuforia Unity安装
- en: 'Now that Unity3D has been installed, let''s create a brand new Unity project:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在Unity3D已经安装完毕，让我们创建一个全新的Unity项目：
- en: 'Vuforia recommends that you use a 3D project setup for their AR apps, so, with
    that in mind, I will keep it as a 3D project with Enable Unity Analytics disabled,
    and the name of the project shall be `VuforiaIntro`:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vuforia建议你为他们的AR应用使用3D项目设置，所以，考虑到这一点，我将保持它作为一个3D项目，禁用启用Unity分析，并且项目的名称应该是`VuforiaIntro`：
- en: '![](img/097c1e9b-7582-40fe-a104-05647ea4d036.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/097c1e9b-7582-40fe-a104-05647ea4d036.png)'
- en: 'Once the project has loaded, we can take a look at some of the additional editor
    items we have access to now. In the toolbar at the top of the Unity Editor, we
    will see File, Edit, Assets, GameObject, Component, Window, and Help:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦项目加载完毕，我们可以查看我们现在可以访问的一些额外的编辑器项目。在Unity编辑器顶部的工具栏中，我们将看到文件、编辑、资产、游戏对象、组件、窗口和帮助：
- en: '![](img/87806eac-3350-404a-b6d7-9a710d06c191.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/87806eac-3350-404a-b6d7-9a710d06c191.png)'
- en: 'GameObject, Component, Window, and Help have additional items added to them.
    Looking at GameObject, we can see that the additional item is Vuforia. Inside
    the Vuforia item, we have AR Camera, Image, Multi Image, Cylindrical Image, Cloud
    Image, Camera Image, VuMark, and 3D Scan:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 游戏对象、组件、窗口和帮助中都有额外的项目被添加。看看游戏对象，我们可以看到额外的项目是Vuforia。在Vuforia项目中，我们有AR相机、图像、多图像、圆柱形图像、云图像、相机图像、VuMark和3D扫描：
- en: '![](img/153a0985-9590-493f-967d-e084f5ec7c9d.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/153a0985-9590-493f-967d-e084f5ec7c9d.png)'
- en: 'Cloud Image has some additional items, so let''s take a look at that. We have
    Cloud Provider and Cloud Image Target available to us:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 云图像也有一些额外的项目，让我们看看那些。我们有云提供商和云图像目标可供我们使用：
- en: '![](img/b4d76e26-6a62-481a-a92c-9a0d452c2f6c.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b4d76e26-6a62-481a-a92c-9a0d452c2f6c.png)'
- en: 'Camera Image also has some additional items, so we should also be familiar
    with those options. The options available are Camera Image Builder and Camera
    Image Target:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 相机图像也有一些额外的项目，因此我们也应该熟悉那些选项。可用的选项包括相机图像构建器和相机图像目标：
- en: '![](img/d753d3b8-c918-4172-ad29-1e8ce625d59d.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d753d3b8-c918-4172-ad29-1e8ce625d59d.png)'
- en: Before we go any further, we should know exactly what these options do and how
    they look when added to the project prior to the license being applied.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，我们应该确切地知道这些选项的功能以及它们在应用许可证之前添加到项目中的样子。
- en: 'AR Camera replaces the standard camera, as it has the base camera component
    and Audio Listener components. We also see that it has two scripts attached, Vuforia
    Behavior and Default Initialization Error Handler:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: AR Camera 替换了标准相机，因为它具有基础相机组件和音频监听器组件。我们还看到它附加了两个脚本，Vuforia Behavior 和 Default
    Initialization Error Handler：
- en: '![](img/94a1ced0-7f64-4e3d-9852-e6c5210ec383.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/94a1ced0-7f64-4e3d-9852-e6c5210ec383.png)'
- en: Image is what allows you to add a trackable object into your AR project and
    serves as the basis for allowing you to have a mount point for bringing models
    into the camera feed.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Image 允许你将可追踪的对象添加到你的 AR 项目中，并作为允许你在相机流中设置模型基点的依据。
- en: Multi Image allows you to add multiple trackable objects into your AR project
    and serves as the anchor for bringing models into the camera feed in real time.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Multi Image 允许你将多个可追踪对象添加到你的 AR 项目中，并作为将模型实时引入相机流的锚点。
- en: Cylindrical Image is an anchor for images wrapped onto objects that are cylindrical
    in shape.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cylindrical Image 是一个锚点，用于将图像包裹在圆柱形物体上。
- en: VuMark is a custom barcode made by the Vuforia team. It allows you to encode
    data into it as well as act as an AR target like the Image, Multi Image, and Cylindrical
    Image.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VuMark 是 Vuforia 团队制作的一种自定义条码。它允许你将其编码数据，同时充当类似于 Image、Multi Image 和 Cylindrical
    Image 的 AR 目标。
- en: Cloud Provider is a direct link to your cloud database for specialized AR-designed
    branding. It is supposed to be used for publications (catalogs, magazines, newspapers,
    and so on), retailers (product visualization and in-store traffic generation),
    advertisers (multi-branded content, coupons, and promotions), and product recognition
    (wine labels/ bottles, cereal boxes, and so on).
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cloud Provider 是直接链接到你的云端数据库的专用 AR 设计品牌链接。它应该用于出版物（目录、杂志、报纸等）、零售商（产品可视化和店内流量生成）、广告商（多品牌内容、优惠券和促销）以及产品识别（酒标/瓶子、谷物箱等）。
- en: Cloud Image Target is what allows you to add a trackable object into the AR
    project and serves as the anchor for the app to send the recognized data to the
    cloud database to retrieve the information and display it as you wish.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cloud Image Target 允许你将可追踪的对象添加到 AR 项目中，并作为应用将识别数据发送到云端数据库以检索信息并按需显示的锚点。
- en: Camera Image Builder is what allows you to define a target image to be stored
    in a database for retrieval and usage in an AR application.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Camera Image Builder 是一个允许你定义一个目标图像并将其存储在数据库中以供检索和在 AR 应用中使用的功能。
- en: Camera Image Target serves as the anchor for which to use the self-defined target
    image to display what you want on screen when recognized.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Camera Image Target 作为锚点使用，用于使用自定义目标图像在识别时在屏幕上显示你想要的内容。
- en: 'The next set of items to talk about is in the Component toolbar. The special
    components lie within the AR, Scripts, and XR portions of the Component window,
    as marked in the following screenshot for reference. In order to use them, you
    have to have a GameObject in the scene and add the component from the toolbar
    to it. We have World Anchor, Tracked Pose Driver, Spatial Mapping Collider, and
    Spatial Mapping Renderer available. We should do a deep dive in so that we can
    know exactly what these items do:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来要讨论的一组项目位于组件工具栏中。特殊组件位于组件窗口的 AR、脚本和 XR 部分，如下面的截图所示以供参考。为了使用它们，你必须在场景中有一个游戏对象，并从工具栏中将组件添加到它。我们提供了
    World Anchor、Tracked Pose Driver、Spatial Mapping Collider 和 Spatial Mapping Renderer。我们应该深入了解这些项目，以便确切了解它们的功能：
- en: '![](img/0f518a8d-3c6f-4e7f-a4ac-d3be6035f706.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0f518a8d-3c6f-4e7f-a4ac-d3be6035f706.png)'
- en: World Anchor is a component that represents a link between an exact point in
    the physical world and the parent GameObject of the World Anchor. Once added,
    a GameObject with a World Anchor component remains locked in place to locations
    in the real world.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: World Anchor 是一个组件，它代表物理世界中一个确切点与 World Anchor 的父 GameObject 之间的链接。一旦添加，带有 World
    Anchor 组件的游戏对象将锁定在现实世界中的位置。
- en: Tracked Pose Driver is a component that applies the current Pose value of a
    tracked device to the transform of the Game Object.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tracked Pose Driver 是一个组件，它将跟踪设备的当前姿态值应用于游戏对象的变换。
- en: Spatial Mapping Collider allows for holographic content (or character) interaction,
    such as physics, with the spatial mapping mesh.
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Spatial Mapping Collider 允许进行与空间映射网格的物理（或角色）交互，例如物理交互。
- en: Spatial Mapping Renderer is a component that gives a visual representation of
    Spatial Mapping surfaces. This is useful for visually debugging surfaces and adding
    visual effects to the environment.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空间映射渲染器是一个组件，它为空间映射表面提供视觉表示。这对于在视觉上调试表面和在环境中添加视觉效果非常有用。
- en: 'It should be noted that there are items related to Vuforia in the Scripts section,
    however, we will not cover those here. But, just for the sake of making sure that
    the items are listed, they are as follows:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 应该注意的是，在脚本部分有一些与Vuforia相关的项目，但是我们将不会在这里介绍它们。但是，为了确保项目被列出，它们如下：
- en: '![](img/86b579d2-222a-4af3-88c1-02c0853d7b6b.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/86b579d2-222a-4af3-88c1-02c0853d7b6b.png)'
- en: Background Plane Behaviour
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 背景平面行为
- en: Cloud Reco Behaviour
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云端识别行为
- en: Cylinder Target Behaviour
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 圆柱目标行为
- en: GL Error Handler
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GL错误处理器
- en: Image Target Behaviour
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像目标行为
- en: Mask Out Behaviour
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遮罩排除行为
- en: Multi Target Behaviour
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多目标行为
- en: Object Target Behaviour
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物体目标行为
- en: Prop Behaviour
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 属性行为
- en: Reconstruction Behaviour
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重建行为
- en: Reconstruction From Target Behaviour
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从目标重建行为
- en: Surface Behaviour
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表面行为
- en: Text Reco Behaviour
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文字识别行为
- en: Turn Off Behaviour
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关闭行为
- en: Turn off Word Behaviour
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关闭文字行为
- en: User Defined Target Building Behaviour
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户定义的目标构建行为
- en: Video Background Behaviour
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视频背景行为
- en: Virtual Button Behaviour
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟按钮行为
- en: Vuforia Behaviour
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vuforia行为
- en: Vuforia Deinit Behaviour
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vuforia Deinit行为
- en: Vu Mark Behaviour
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vu Mark行为
- en: Wireframe Behaviour
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线框行为
- en: Wireframe Trackable Event Handler
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线框可追踪事件处理器
- en: Word Behaviour
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文字行为
- en: 'In the Inspector pane, we have Vuforia Configuration. The following is a screenshot
    of it; next, we will define what it does:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在检查器面板中，我们有Vuforia配置。以下是其截图；接下来，我们将定义它所做的工作：
- en: '![](img/47d00b0a-4e6a-45dd-ad49-111fdf64371d.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/47d00b0a-4e6a-45dd-ad49-111fdf64371d.png)'
- en: Vuforia Configuration allows you to enter your License Key. Clicking on Add
    License will load the Vuforia Developer landing page. It also allows you to specify
    what you want Vuforia to be configured to work for, such as a HUD, smartglasses,
    a webcam, or a smartphone.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: Vuforia配置允许你输入你的许可证密钥。点击添加许可证将加载Vuforia开发者登录页面。它还允许你指定你想要Vuforia配置为工作的内容，例如HUD、智能眼镜、摄像头或智能手机。
- en: I also want to note that Smart Terrain Tracker has been deprecated and will
    be removed in the next release of Vuforia. If you are reading this book and that
    screenshot does not look the same, you now know why and should not be worried.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 我还想指出，智能地形追踪器已被弃用，将在Vuforia的下一个版本中移除。如果你正在阅读这本书，并且截图看起来不一样，你现在知道原因了，所以不必担心。
- en: 'Since we are here, let''s go ahead and add our app key to Vuforia (see Vuforia
    Add License for its location):'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在这里，让我们继续将我们的应用密钥添加到Vuforia中（参见Vuforia添加许可证以获取其位置）：
- en: 'You should create your own app key, since my app key will not be valid by the
    time of the release of this book. After copying and pasting your key into the
    license key box, just press the *Return*/*Enter* key and you are done:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该创建自己的应用密钥，因为我的应用密钥在本书发布时将不再有效。在将你的密钥复制粘贴到许可证密钥框中后，只需按下*Return*/*Enter*键即可完成：
- en: '![](img/e872ac45-8076-49d8-a532-f5658dffdf3a.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e872ac45-8076-49d8-a532-f5658dffdf3a.png)'
- en: 'Since we are testing on PC and if you have a webcam that works for said PC,
    make sure that the Camera Device selects the proper webcam for usage:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们正在PC上进行测试，如果你有适用于该PC的工作摄像头，请确保摄像头设备选择了正确的摄像头用于使用：
- en: '![](img/b82e4567-c824-497c-92d0-bd3eee7c6106.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b82e4567-c824-497c-92d0-bd3eee7c6106.png)'
- en: 'Next, we need to go into the Unity Player Settings and fix some options. Navigate
    to File and click on Build Settings. The Build Settings box should appear. Make
    sure you change the project type to build to Android, and then click on Player
    Settings:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要进入Unity播放器设置并修复一些选项。导航到文件并点击构建设置。构建设置窗口应该会出现。确保将项目类型更改为构建到Android，然后点击播放器设置：
- en: '![](img/9806882d-c6b9-4892-8221-37167940367b.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9806882d-c6b9-4892-8221-37167940367b.png)'
- en: Vuforia does not support FAT device filter or Android TV, so we need to change
    those two options. Device Filter, which is located in Other Settings, needs to
    be changed to ARMv7, and Android TV Compatibility needs to be unchecked.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vuforia不支持FAT设备过滤器或Android TV，因此我们需要更改这两个选项。位于其他设置中的设备过滤器需要更改为ARMv7，并且需要取消选中Android
    TV兼容性。
- en: 'Now, we can finally build our "Hello World" AR application for testing to make
    sure Vuforia and Unity3D are working well together. If you haven''t done so already,
    remove the regular camera component from the Hierarchy Pane and replace it with
    the ARCamera:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以最终构建我们的“Hello World”AR 应用程序进行测试，以确保 Vuforia 和 Unity3D 一起工作良好。如果您还没有这样做，请从
    Hierarchy 窗口中删除常规相机组件，并用 ARCamera 替换它：
- en: '![](img/d834ac02-5ca4-4c53-8ad9-935b0dea81a8.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d834ac02-5ca4-4c53-8ad9-935b0dea81a8.png)'
- en: 'The next step is to add the Vuforia Image to the scene, which is also known
    as the ImageTarget:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是将 Vuforia 图像添加到场景中，这同样也被称为 ImageTarget：
- en: '![](img/2eea5ee4-a9e6-4cef-8f15-a13b02c178d1.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2eea5ee4-a9e6-4cef-8f15-a13b02c178d1.png)'
- en: 'We now need to download and add a 3D model to the scene. So, let''s go with
    the easy route and just add a sphere to the scene with the *x*, *y*, and *z* scale
    set to `0.3`. Take extra special care to make sure that the sphere is a child
    of the ImageTarget. *This is very important*:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要下载并将一个 3D 模型添加到场景中。所以，让我们走捷径，只需将一个球体添加到场景中，并将 *x*、*y* 和 *z* 缩放设置为 `0.3`。特别小心确保球体是
    ImageTarget 的子对象。*这一点非常重要*：
- en: '![](img/41ff3c37-203b-4822-82ad-63c8c992c19a.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/41ff3c37-203b-4822-82ad-63c8c992c19a.png)'
- en: 'The next step is to navigate to Editor | Vuforia | ForPrint | ImageTargets,
    and print out on a piece of paper `target_images_A4` or `target_images_USLetter`:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是导航到 Editor | Vuforia | ForPrint | ImageTargets，并在一张纸上打印出 `target_images_A4`
    或 `target_images_USLetter`：
- en: '![](img/4b57d8ba-9bd2-4472-935f-68c90d96b536.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4b57d8ba-9bd2-4472-935f-68c90d96b536.png)'
- en: 'Once you have it printed, we can begin the final portion of the test, which
    is to run the program and hold the printout of the drone in front of the webcam:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦打印出来，我们就可以开始测试的最后部分，即运行程序并将打印出的无人机图像放在网络摄像头前：
- en: '![](img/017131ff-49f0-4855-b513-2a565087ef72.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![](img/017131ff-49f0-4855-b513-2a565087ef72.png)'
- en: The text in this screenshot is not important. It shows a sphere that appears
    on the camera feed when the image is recognized.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 本截图中的文本并不重要。它显示了一个当图像被识别时出现在相机输入中的球体。
- en: Vuforia has now been properly configured and tested appropriately, so we can
    move on to the next SDK to set up and configure.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vuforia 已正确配置并经过适当测试，因此我们可以继续设置和配置下一个 SDK。
- en: Setting up ARToolKit
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 ARToolKit
- en: ARToolKit is a bit more difficult to set up and get started with.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: ARToolKit 的设置和开始使用稍微有些复杂。
- en: ARToolKit has been depreciated and is now part of the Daqri Vos API. which you
    can view at [https://developer.daqri.com/#!/content/develop](https://developer.daqri.com/#!/content/develop)
    This section has been kept in for incase you want to utilize ARToolkit from the
    github link [https://github.com/artoolkit/arunity5](https://github.com/artoolkit/arunity5)
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: ARToolKit 已被弃用，现在它是 Daqri Vos API 的一部分。您可以在[https://developer.daqri.com/#!/content/develop](https://developer.daqri.com/#!/content/develop)查看它。本节保留在此，以防您想从
    github 链接[https://github.com/artoolkit/arunity5](https://github.com/artoolkit/arunity5)使用
    ARToolkit。
- en: 'There are two different ways you can get ARToolKit in a project and ready to
    develop with. The first option is the easiest, and that is through the Asset Store:
    [https://assetstore.unity.com/packages/tools/artoolkit-6-unitypackage-94863](https://assetstore.unity.com/packages/tools/artoolkit-6-unitypackage-94863).
    This is the latest version of ARToolKit in the Asset Store and it will be imported
    directly into Unity for you. The other option is to go to the main website of
    ARToolKit: [https://github.com/artoolkit/artoolkit5](https://github.com/artoolkit/artoolkit5).
    This allows you to get additional tools and the actual SDK, along with the Unity
    Package.'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 您有两种不同的方式可以在项目中获取 ARToolKit 并准备开发。第一种选项是最简单的，那就是通过 Asset Store：[https://assetstore.unity.com/packages/tools/artoolkit-6-unitypackage-94863](https://assetstore.unity.com/packages/tools/artoolkit-6-unitypackage-94863)。这是
    Asset Store 中 ARToolKit 的最新版本，它将直接导入到 Unity 中。另一种选项是访问 ARToolKit 的官方网站：[https://github.com/artoolkit/artoolkit5](https://github.com/artoolkit/artoolkit5)。这允许您获取额外的工具和实际的
    SDK，以及 Unity 包。
- en: 'For installation into Unity3D, we will go with the second option, since it
    is less intuitive than the first option:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Unity3D 的安装，我们将选择第二种选项，因为它不如第一种选项直观：
- en: '![](img/d709223b-b1f8-437c-9f72-48f71ba776d5.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d709223b-b1f8-437c-9f72-48f71ba776d5.png)'
- en: 'Navigate to the main website for ARToolKit and click on DOWNLOAD SDK. The macOS,
    Windows, iOS, Android, Linux, Windows 8.1, and Source Dependencies don''t need
    to be downloaded, but they can be if you want to go deeper into how ARToolKit
    works under the hood or if you want to use it in a non-Unity capacity. Instead,
    head toward the bottom of the page and click on the DOWNLOAD UNITY PACKAGE button:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 ARToolKit 的官方网站，点击下载 SDK。macOS、Windows、iOS、Android、Linux、Windows 8.1 和源依赖项不需要下载，但如果你想深入了解
    ARToolKit 的内部工作原理，或者你想在非 Unity 环境中使用它，则可以下载。相反，转到页面底部并点击下载 Unity 包按钮：
- en: '![](img/edaadbbf-a509-4305-9adf-f212a60700ad.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![图片8](img/edaadbbf-a509-4305-9adf-f212a60700ad.png)'
- en: Unless you are doing something more involved, you don't need the additional
    Unity tools at the present time if you are on a macOS, but if you are on a PC,
    I suggest getting the Windows Tools, since ARToolKit needs them to debug on PC
    without using the Android Emulator or testing on Linux.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你目前没有进行更复杂的工作，那么如果你在 macOS 上，你不需要额外的 Unity 工具，但如果你在 PC 上，我建议获取 Windows 工具，因为
    ARToolKit 需要它们在 PC 上进行调试，而无需使用 Android 模拟器或测试 Linux。
- en: 'Now that the package has been downloaded, we need to open Unity3D and create
    a new project. I will call mine `ARToolKitIntro`. Keep the settings as default
    for simplicity''s sake:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在包已经下载，我们需要打开 Unity3D 并创建一个新的项目。我将我的项目命名为 `ARToolKitIntro`。为了简单起见，保持默认设置：
- en: '![](img/08d97be7-c52e-4d55-bce6-b5adf40d3f9f.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![图片10](img/08d97be7-c52e-4d55-bce6-b5adf40d3f9f.png)'
- en: 'Now, we need to import the Unity Package into Unity. This is pretty straightforward.
    Right-click the `Assets` folder, highlight Import Package, and select Custom Package:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要将 Unity 包导入到 Unity 中。这个过程非常直接。右键点击 `Assets` 文件夹，选择导入包，然后选择自定义包：
- en: '![](img/bf186f82-bc85-40c2-883f-2bc81d12bb81.png)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![图片5](img/bf186f82-bc85-40c2-883f-2bc81d12bb81.png)'
- en: 'Navigate to the folder that houses the downloaded Unity Package, click on it,
    and select Open. You should see a dialog box with checkboxes inside. Click on
    All and then click on Import:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到存放下载的 Unity 包的文件夹，点击它，然后选择打开。你应该会看到一个带有复选框的对话框。点击全选，然后点击导入：
- en: '![](img/f3f48703-e106-4dca-81d6-cc616436db90.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![图片3](img/f3f48703-e106-4dca-81d6-cc616436db90.png)'
- en: 'You will see three folders after the import is complete (`ARToolKit5-Unity`,
    `Plugins`, and `StreamingAssets`):'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入完成后，你会看到三个文件夹（`ARToolKit5-Unity`、`Plugins` 和 `StreamingAssets`）：
- en: '![](img/1d90b7e9-875c-4578-9a0d-8ea218d8c857.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![图片1](img/1d90b7e9-875c-4578-9a0d-8ea218d8c857.png)'
- en: 'Inside the `ARToolKit5-Unity` folder, there are the `Example Scenes`, `Examples`,
    `Materials`, `Resources`, `Scripts`, `Changelog`, and `Readme` files and folders:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `ARToolKit5-Unity` 文件夹中，有 `Example Scenes`、`Examples`、`Materials`、`Resources`、`Scripts`、`Changelog`
    和 `Readme` 文件和文件夹：
- en: 'Inside `Scripts`, we have an `Editor` folder with the features shown in the
    following screenshot:'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Scripts` 中，我们有一个带有以下截图所示功能的 `Editor` 文件夹：
- en: '![](img/4c9ea14e-a1b1-4f10-a956-a58f7c2c14e1.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![图片9](img/4c9ea14e-a1b1-4f10-a956-a58f7c2c14e1.png)'
- en: 'Inside the `Editor` folder, we have the following:'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Editor` 文件夹中，我们有以下内容：
- en: '![](img/fe4afda0-b719-4760-8101-023eab765ed3.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图片12](img/fe4afda0-b719-4760-8101-023eab765ed3.png)'
- en: 'Next up is the `Plugins` folder. It has folders listed as follows:'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来是 `Plugins` 文件夹。它列出了以下文件夹：
- en: '![](img/8f6c3434-1803-4e77-8348-98a3317c977b.png)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![图片7](img/8f6c3434-1803-4e77-8348-98a3317c977b.png)'
- en: 'If you look at the menu bar at the top of the Unity Editor, you will see an
    additional toolbar item: ARToolKit. The drop-down menu shows several options:
    ARToolKit for Unity Version 5.3.2, Download Tools, Build, Support, and Source
    Code:'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你查看 Unity 编辑器顶部的菜单栏，你会看到一个额外的工具栏项：ARToolKit。下拉菜单显示了几个选项：Unity 版本 5.3.2 的 ARToolKit、下载工具、构建、支持和源代码：
- en: '![](img/c41b9582-5808-4e48-8565-367a60e3809f.png)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![图片4](img/c41b9582-5808-4e48-8565-367a60e3809f.png)'
- en: 'Support has Home Page, Documentation, and Community Forums:'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持包括主页、文档和社区论坛：
- en: '![](img/b2b8d760-6bc3-4f9b-8594-52910b0762c4.png)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![图片6](img/b2b8d760-6bc3-4f9b-8594-52910b0762c4.png)'
- en: 'Source Code has View ARToolKit Source and View Unity Plugin Source:'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源代码有查看 ARToolKit 源代码和查看 Unity 插件源代码：
- en: '![](img/7b496bc3-c529-478c-9e6d-78da16c9b79c.png)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![图片11](img/7b496bc3-c529-478c-9e6d-78da16c9b79c.png)'
- en: 'The basics are out of the way, so we can begin building our "Hello World" with
    ARToolKit:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 基本步骤完成，我们可以开始使用 ARToolKit 构建 "Hello World"：
- en: The first thing we need to do is create an empty game object in the Hierarchy
    pane and rename it `ARToolKit`.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是在层次结构面板中创建一个空的游戏对象，并将其重命名为 `ARToolKit`。
- en: 'The next step is to add the `ARController` script to the game object and delete
    the Camera:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是将 `ARController` 脚本添加到游戏对象中，并删除相机：
- en: '![](img/96f4b489-3f87-455f-91dc-94603db0280c.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![图片2](img/96f4b489-3f87-455f-91dc-94603db0280c.png)'
- en: The `ARController` script handles the creation and management of AR tracking.
    It automatically adds a camera at runtime and is controlled by the user layers
    that we provide.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ARController`脚本处理AR跟踪的创建和管理。它在运行时自动添加一个摄像头，并由我们提供的用户层控制。'
- en: 'With this latest version of ARToolKit, the basic user layers are provided for
    you already: `AR background`, `AR background 2`, and `AR foreground` for User
    Layer 8, User Layer 9, and User Layer 10, respectively:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用ARToolKit的最新版本，已经为你提供了基本用户层：分别为用户层8、9和10提供了`AR背景`、`AR背景2`和`AR前景`：
- en: '![](img/ddc63854-e8c8-4305-ba0b-814a91a2cc89.png)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ddc63854-e8c8-4305-ba0b-814a91a2cc89.png)'
- en: 'The AR Controller script has a Video Options drop-down menu:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AR控制器脚本有一个视频选项下拉菜单：
- en: '![](img/0ee00050-1788-443f-b966-0812347dee1a.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0ee00050-1788-443f-b966-0812347dee1a.png)'
- en: 'Since we have so many different options for video, we need to set it up properly:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们有这么多不同的视频选项，我们需要正确设置：
- en: '![](img/1406686a-b73f-4dd7-86cc-e1f31819dfc1.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1406686a-b73f-4dd7-86cc-e1f31819dfc1.png)'
- en: If you get errors in the console of the Unity Editor, then you don't have the
    latest version of ARToolKit with the version of Unity we are using in this book.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你发现在Unity编辑器的控制台中出现错误，那么你使用的ARToolKit版本不是最新的，与本书中使用的Unity版本不匹配。
- en: 'Since I am building for Windows, I will go to the first option of Video config
    and input the following:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我正在为Windows构建，我将选择视频配置的第一个选项，并输入以下内容：
- en: '[PRE0]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now, since my computer does not presently have a webcam attached to it, I get
    an in-game error message, but the code compiles and runs as expected. If you have
    a webcam attached and it is recognized appropriately, you should have a direct
    feed from your webcam.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，由于我的电脑目前没有连接摄像头，我收到了游戏中的错误消息，但代码按预期编译并运行。如果你连接了摄像头并且它被正确识别，你应该有来自摄像头的直接视频流。
- en: This concludes the Hello World for ARToolKit; we will be revisiting this one
    later on for more in-depth and fun usage of this SDK.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 这就完成了ARToolKit的Hello World示例；我们稍后会再次访问这个示例，以便更深入和有趣地使用这个SDK。
- en: Setting up ARCore
  id: totrans-247
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置ARCore
- en: ARCore and ARKit are fundamentally very similar, but you can't compile ARKit
    on a Windows environment, which is what I'm presently using. Not to worry; when
    we get to ARKit, I will be using a macOS to give you a proper view and feel of
    how things are when using it.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: ARCore和ARKit在本质上非常相似，但你不能在Windows环境中编译ARKit，这正是我现在使用的环境。不用担心；当我们到达ARKit时，我会使用macOS来给你一个使用时的正确视图和感受。
- en: That being said, it is now time to take a deeper look at ARCore.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，现在是时候更深入地了解ARCore了。
- en: ARCore was made by Google and is currently in the early preview stages; it hasn't
    even reached release 1.0 yet, so there are bound to be many changes, some of which
    could be extremely damaging to existing apps or games.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: ARCore是由谷歌制作的，目前处于早期预览阶段；它甚至还没有达到1.0版本，因此肯定会发生许多变化，其中一些可能会对现有的应用程序或游戏造成极大的损害。
- en: 'There are two ways to get the SDK preview for Unity. The first is through a
    Unity Package file ([https://developers.google.com/ar/develop/unity/quickstart-android](https://developers.google.com/ar/develop/unity/quickstart-android))
    and the other is through GitHub ([https://github.com/google-ar/arcore-unity-sdk](https://github.com/google-ar/arcore-unity-sdk)).
    Now, since I have been having an issue with downloading from Amazon Web Services
    lately, I will use the second link:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种方式可以获取Unity的SDK预览。第一种是通过Unity包文件（[https://developers.google.com/ar/develop/unity/quickstart-android](https://developers.google.com/ar/develop/unity/quickstart-android)），另一种是通过GitHub（[https://github.com/google-ar/arcore-unity-sdk](https://github.com/google-ar/arcore-unity-sdk)）。现在，由于我最近从亚马逊网络服务下载时遇到了问题，我将使用第二个链接：
- en: '![](img/7c948f4e-8581-4f83-8b47-dc9720b032b6.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7c948f4e-8581-4f83-8b47-dc9720b032b6.png)'
- en: 'It is key to remember that, if you don''t have a Samsung Galaxy 8 or a Google
    Pixel phone, you will not be able to run proper tests on your device. However,
    if you also install Android Studio, you do get access to the Android Emulator:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 记住这一点至关重要，如果你没有三星Galaxy 8或谷歌Pixel手机，你将无法在设备上运行适当的测试。然而，如果你还安装了Android Studio，你确实可以访问Android模拟器：
- en: 'To begin, create a new project in Unity and call it `ARCoreTutorial`:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，在Unity中创建一个新的项目，并将其命名为`ARCoreTutorial`：
- en: '![](img/e6458da9-0c13-4874-9676-993cff72a989.png)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e6458da9-0c13-4874-9676-993cff72a989.png)'
- en: 'We need to change the Build Settings to Android before doing anything else:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在进行任何其他操作之前，我们需要将构建设置更改为Android：
- en: '![](img/ad527667-325b-4418-baa0-d47b963d7a7e.png)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ad527667-325b-4418-baa0-d47b963d7a7e.png)'
- en: Next up, we need to change the Player Settings. The main settings we need to
    change are within the Other Settings tab, so let's take a look at what needs to
    be changed.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要更改玩家设置。我们需要更改的主要设置在“其他设置”标签页内，所以让我们看看需要更改什么。
- en: 'Other Settings: We want Multithreaded Rendering unchecked; Minimum API Level
    should be Android 7.0 ‘Nougat'' API level 24; and Target API Level should be Android
    7.0 ‘Nougat'' API level 24 or Android 7.1 ‘Nougat'' API level 25:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 其他设置：我们希望取消勾选多线程渲染；最小API级别应为Android 7.0 ‘Nougat’ API级别24；目标API级别应为Android 7.0
    ‘Nougat’ API级别24或Android 7.1 ‘Nougat’ API级别25：
- en: '![](img/3cd5530e-792e-432e-bac4-9d7dd54cab45.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3cd5530e-792e-432e-bac4-9d7dd54cab45.png)'
- en: '5\. XR Settings: We want ARCore Supported to be checked:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 5. XR设置：我们希望ARCore Supported被勾选：
- en: '![](img/3dbe4f63-b3db-4e6e-9096-47290aa3d33b.png)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3dbe4f63-b3db-4e6e-9096-47290aa3d33b.png)'
- en: '6\. Next up, we want to unzip the SDK or import the package into Unity3D:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 6. 接下来，我们想要解压SDK或将包导入Unity3D：
- en: '![](img/35d4f040-e69e-4ed4-8075-29f8e447d78e.png)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
  zh: '![](img/35d4f040-e69e-4ed4-8075-29f8e447d78e.png)'
- en: Right away, we should see a DLLNotFoundException for `tango_client_api2`. This
    is normal and is well-known by the community. It should not cause any errors at
    runtime, though; it should be fixed in a later release.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 立即，我们应该看到`tango_client_api2`的DLLNotFoundException。这是正常的，并且社区中广为人知。尽管如此，它不应该在运行时引起任何错误；它应该在后续版本中修复。
- en: Setting up ARKit
  id: totrans-266
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置ARKit
- en: ARKit requires the usage of macOS High Sierra, because of the XCode 9 and above
    requirement for compiling and making changes to the API itself. So, I would highly
    suggest having a macOS from late 2011 or newer. I am utilizing a Mac Mini 2011
    model with 8 GB of RAM, although the standard 4 GB should be plenty. Unity3D does
    utilize OpenCL/OpenGL extensively, which requires a GFX card capable of utilizing
    Metal. 2011 and earlier macOSs do not have this ability natively; this could be
    circumvented by having an external GPU (Radeon RX 480 is currently the only GPU
    supported officially for this).
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: ARKit需要使用macOS High Sierra，因为编译和修改API本身需要XCode 9及更高版本。因此，我强烈建议使用2011年后期或更新的macOS。我正在使用2011型号的Mac
    Mini，拥有8GB的RAM，尽管标准的4GB应该足够。Unity3D广泛使用OpenCL/OpenGL，这需要能够利用Metal的GFX卡。2011年及更早的macOS没有这种原生能力；可以通过拥有外部GPU（目前官方仅支持Radeon
    RX 480）来解决这个问题。
- en: With that out of the way, we can begin with installing and configuring ARKit
    for Unity3D on our macOS.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理完这些之后，我们可以开始在我们的macOS上安装和配置Unity3D的ARKit。
- en: 'There are a couple of ways you can install ARKit:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 您有几种方式可以安装ARKit：
- en: 'We can navigate to the plugin page on the Asset Store ([https://www.assetstore.unity3d.com/en/#!/content/92515](https://www.assetstore.unity3d.com/en/#!/content/92515)):'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以导航到Asset Store上的插件页面（[https://www.assetstore.unity3d.com/en/#!/content/92515](https://www.assetstore.unity3d.com/en/#!/content/92515)）：
- en: '![](img/e41fe61f-88e4-45c8-a1a9-77184326328e.png)'
  id: totrans-271
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e41fe61f-88e4-45c8-a1a9-77184326328e.png)'
- en: 'Or we can download the plugin directly from the Bitbucket repository ([https://bitbucket.org/Unity-Technologies/unity-arkit-plugin/overview](https://bitbucket.org/Unity-Technologies/unity-arkit-plugin/overview)):'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 或者我们可以直接从Bitbucket仓库下载插件（[https://bitbucket.org/Unity-Technologies/unity-arkit-plugin/overview](https://bitbucket.org/Unity-Technologies/unity-arkit-plugin/overview)）：
- en: '![](img/9e1c37ed-a2cc-45d0-ab1f-7ca3d4b7a624.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9e1c37ed-a2cc-45d0-ab1f-7ca3d4b7a624.png)'
- en: 'If we go the first route and install from the Asset Store, we don''t have to
    worry about copying the files into our project ourselves, but either way it is
    simple enough to do, so take your pick on the method you want to go with and create
    a new project called `ARKitTutorial`:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们选择第一种方式，从Asset Store安装，我们就不必担心自己将文件复制到我们的项目中，但无论如何，这样做都很简单，所以选择你想要的方法，创建一个名为`ARKitTutorial`的新项目：
- en: '![](img/eb3ae1f0-ff4b-4b82-b769-fda7386cbf48.png)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eb3ae1f0-ff4b-4b82-b769-fda7386cbf48.png)'
- en: 'Next up, we have quite a bit to unpack regarding what is actually in this package:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们有很多东西要解开这个包实际上包含的内容：
- en: '`/Assets/Plugins/iOs/UnityARKit/NativeInterface/ARsessionNative.mm` – This
    is the Objective-C code that is the actual interfaces with the ARKit SDK.'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/Assets/Plugins/iOs/UnityARKit/NativeInterface/ARsessionNative.mm` – 这是与ARKit
    SDK实际接口的Objective-C代码。'
- en: '`/Assets/Plugins/iOS/UnityARKit/NativeInterface/UnityARSessionNativeInterface.cs`
    – This is the scripting API that glues the native code to ARKit.'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/Assets/Plugins/iOS/UnityARKit/NativeInterface/UnityARSessionNativeInterface.cs`
    – 这是将原生代码与ARKit粘合的脚本API。'
- en: '`/Assets/Plugins/iOS/UnityARKit/NativeInterface/AR*.cs` – These are the equivalents
    of the data structures exposed by ARKit.'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/Assets/Plugins/iOS/UnityARKit/NativeInterface/AR*.cs` – 这些是ARKit公开的数据结构的等效物。'
- en: '`/Assets/Plugins/iOS/UnityARKit/Utility/UnityARAnchorManager.cs` – This is
    a utility script that tracks the anchor updates from ARKit and can create the
    proper corresponding GameObjects in Unity for them.'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/Assets/Plugins/iOS/UnityARKit/Utility/UnityARAnchorManager.cs` – 这是一个实用脚本，用于跟踪ARKit的锚点更新，并可以在Unity中为它们创建适当的相应GameObject。'
- en: '`/Assets/Plugins/iOS/UnityARKit/Editor/UnityARBuildPostprocessor.cs` – This
    is an editor script that runs at build time on iOS.'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/Assets/Plugins/iOS/UnityARKit/Editor/UnityARBuildPostprocessor.cs` – 这是一个在iOS构建时运行的编辑器脚本。'
- en: '`/Assets/Plugins/iOS/UnityARKit/UnityARCameraManager.cs` – This is the component
    that should be placed on a GameObject in the scene that references the camera
    that you want to control. It will position and rotate the camera as well as provide
    the correct projection matrix based on updates from ARKit. This component also
    initializes as ARKit Session.'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/Assets/Plugins/iOS/UnityARKit/UnityARCameraManager.cs` – 这是应该放置在场景中GameObject上的组件，该GameObject引用您想要控制的相机。它将定位和旋转相机，并根据ARKit的更新提供正确的投影矩阵。此组件还作为ARKit会话初始化。'
- en: '`/Assets/Plugins/iOS/UnityARKit/UnityARVideo.cs` – This is the component that
    should be placed on the camera and grabs the textures needed for rendering the
    video. It sets the material needed for blitting to the backbuffer and sets up
    the command buffer for blitting.'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/Assets/Plugins/iOS/UnityARKit/UnityARVideo.cs` – 这是应该放置在相机上的组件，用于获取渲染视频所需的纹理。它设置用于将内容写入后缓冲区的材质，并设置用于写入的命令缓冲区。'
- en: '`/Assets/Plugins/iOS/UnityARKit/UnityARUserAnchorComponent.cs` – This is the
    component that adds and removes Anchors from ARKit based on the life cycle of
    the GameObject it is added to.'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/Assets/Plugins/iOS/UnityARKit/UnityARUserAnchorComponent.cs` – 这是根据添加到其上的GameObject的生命周期添加和删除ARKit锚点的组件。'
- en: Before we build our own "Hello World" example, we should build the `UnityARKitScene.unity`
    to iOS to get a taste of what ARKit is capable of, as it demonstrates all of the
    basic functionality of ARKit in that scene.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们构建自己的“Hello World”示例之前，我们应该将`UnityARKitScene.unity`构建到iOS中，以了解ARKit的能力，因为它演示了该场景中ARKit的所有基本功能。
- en: '`UnityARKitScene` is included in the plugin as well as a couple of other example
    projects. We will compile the `UnityARKitScene` as our Hello World application.'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '`UnityARKitScene`包含在插件中，以及几个其他示例项目。我们将编译`UnityARKitScene`作为我们的Hello World应用程序。'
- en: However, before we do that, we need to talk about the file structure, because
    those who are not well-versed with compiling to iOS will have some serious issues
    compiling without further clarification. You may have noticed quite a few items
    that we have not mentioned that are in the plugin, so let's go ahead and discuss
    what all of them do before moving on.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在我们这样做之前，我们需要讨论文件结构，因为那些不熟悉编译到iOS的人在没有进一步说明的情况下编译会遇到一些严重问题。您可能已经注意到插件中有许多我们没有提到的事项，所以让我们在继续之前讨论它们的功能。
- en: '`\UnityARKitPlugin` main directory files:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '`\UnityARKitPlugin` 主目录文件：'
- en: '`ARKitRemote` – Allows you to send remote commands from your device to the
    Unity3D editor'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARKitRemote` – 允许您从您的设备向Unity3D编辑器发送远程命令。'
- en: '`Examples` – This directory houses example scripts and scenes to showcase various
    things you can do with ARKit and this plugin'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Examples` – 此目录包含示例脚本和场景，以展示您可以使用ARKit和此插件完成的各种操作。'
- en: '`Plugins` – Houses the directories required to run ARKit'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Plugins` – 存储运行ARKit所需的目录。'
- en: '`Resources` – Houses the resource files required for ARKit'
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Resources` – 存储ARKit所需的资源文件。'
- en: '`Plugins\iOS\UnityARKit\NativeInterface` cs files:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '`Plugins\iOS\UnityARKit\NativeInterface` cs文件：'
- en: '`ARAnchor` – Anchors an object to a location in the world from the camera feed.'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARAnchor` – 将对象锚定到来自相机流的世界上某个位置。'
- en: '`ARCamera` – Tracks the camera''s position.'
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARCamera` – 跟踪相机的位置。'
- en: '`ARErrorCode` – Error codes.'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARErrorCode` – 错误代码。'
- en: '`ARFaceAnchor` – Face tracking anchor.'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARFaceAnchor` – 面部跟踪锚点。'
- en: '`ARFrame` – Returns data about the camera, anchors, and light estimates.'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARFrame` – 返回有关相机、锚点和光估计的数据。'
- en: '`ARHitTestResult` –Returns any collision results.'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARHitTestResult` – 返回任何碰撞结果。'
- en: '`ARHitTestResultType` – Enumeration for the hit test types available.'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARHitTestResultType` – 可用碰撞测试类型的枚举。'
- en: '`ARLightEstimate` – Calculates how much luminosity is in the image or video.'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARLightEstimate` – 计算图像或视频中的亮度。'
- en: '`ARPlaneAnchor` – Anchors a plane to a specific 4x4 matrix.'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARPlaneAnchor` – 将平面锚定到特定的4x4矩阵。'
- en: '`ARPlaneAnchorAlignment` – Aligns the anchor horizontally with respect to gravity.'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARPlaneAnchorAlignment` – 使锚点相对于重力水平对齐。'
- en: '`ARPoint` – A point struct for x and y values as a double.'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARPoint` – 一个包含x和y值的点结构，以双精度表示。'
- en: '`ARRect` – A struct that takes `ARPoint` as the origin and `ARSize` as the
    size.'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARRect` – 一个结构体，以 `ARPoint` 作为原点，以 `ARSize` 作为大小'
- en: '`ARSessionNative` – Native plugin used to specify framework dependencies and
    the platforms the plugin should work for.'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARSessionNative` – 用于指定框架依赖项和插件应针对哪些平台工作的原生插件'
- en: '`ARSize` –A struct that takes a width and height value as a double.'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARSize` – 一个结构体，接受宽度和高度值作为双精度浮点数'
- en: '`ARTextureHandles` – A native Metal texture handler for the camera buffer which
    takes an `IntPtr`  (`int pointer`) for both `textureY` and `textureCbCr` values.'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARTextureHandles` – 一个用于相机缓冲区的原生 Metal 纹理处理程序，它为 `textureY` 和 `textureCbCr`
    值都接受 `IntPtr`（`int 指针`）'
- en: '`ARTrackingQuality` – Enumeration for tracking qualities available.'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARTrackingQuality` – 可用跟踪质量的枚举'
- en: '`ARTrackingState` –Enumeration for tracking states. Limited, Normal, and NoAvailable
    are the options.'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARTrackingState` – 跟踪状态的枚举。选项有限制、正常和不可用'
- en: '`ARTrackingStateReason` – Enumeration for the state reasons. Options are Excessive
    Motion, Insufficient Features, and Initializing.'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARTrackingStateReason` – 状态原因的枚举。选项有过度运动、特征不足和初始化'
- en: '`ARUserAnchor` – Defines this anchor''s transformation matrix for rotation,
    translation, and scale in world coordinates.'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARUserAnchor` – 定义此锚点在世界坐标系中的旋转、平移和缩放变换矩阵'
- en: '`UnityARSessionNativeInterface` – Native plugin wrapper code.'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARSessionNativeInterface` – 原生插件包装代码'
- en: '`\Plugins\iOS\UnityARKit\Helpers` cs files:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '`\Plugins\iOS\UnityARKit\Helpers` cs 文件：'
- en: '`AR3DOFCameraManager` – A helper class for 3D objects with the AR Camera'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AR3DOFCameraManager` – 一个用于 AR 摄像头的 3D 对象的辅助类'
- en: '`ARPlaneAnchorGameObject` – A class that attaches a GameObject with the `ARPlaneAnchor`'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARPlaneAnchorGameObject` – 一个附加有 `ARPlaneAnchor` 的 GameObject 的类'
- en: '`DontDestroyOnLoad` – Makes sure the GameObject doesn''t get destroyed on load'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DontDestroyOnLoad` – 确保在加载时不会销毁 GameObject'
- en: '`PointCloudParticleExample` – Creates a point cloud particle system'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PointCloudParticleExample` – 创建一个点云粒子系统'
- en: '`UnityARAmbient` – A helper function for ambient lighting'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARAmbient` – 一个用于环境照明的辅助函数'
- en: '`UnityARAnchorManager` – A manager for `ARPlaneAnchorGameObjects`'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARAnchorManager` – `ARPlaneAnchorGameObjects` 的管理器'
- en: '`UnityARCameraManager` – A helper class for the `` `ARCamera` ``'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARCameraManager` – 一个用于 `ARCamera` 的辅助类'
- en: '`UnityARCameraNearFar` – Sets the Near Far distance of the camera appropriately'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARCameraNearFar` – 设置摄像机的近远距离'
- en: '`UnityARGeneratePlane` – Creates an `ARPlaneAnchorGameObject`'
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARGeneratePlane` – 创建一个 `ARPlaneAnchorGameObject`'
- en: '`UnityARHitTestExample` – Tests collisions with various amounts of planes,
    from few to infinite'
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARHitTestExample` – 测试从少量到无限量的平面碰撞'
- en: '`UnityARKitControl` – A helper class designed for creating a test `ARSession`'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARKitControl` – 一个用于创建测试 `ARSession` 的辅助类'
- en: '`UnityARKitLightManager` – A helper class for managing the various lighting
    possibilities'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARKitLightManager` – 一个用于管理各种照明可能的辅助类'
- en: '`UnityARMatrixOps` – A class for converting a 4x4 matrix to Euclidean space
    for quaternion rotation'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARMatrixOps` – 一个将 4x4 矩阵转换为欧几里得空间以进行四元数旋转的类'
- en: '`UnityARUserAnchorComponent` – A helper class for creating Anchor added and
    removed events'
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARUserAnchorComponent` – 一个用于创建锚点添加和删除事件的辅助类'
- en: '`UnityARUtility` – A helper class to do coordinate conversions from ARKit to
    Unity'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARUtility` – 一个用于将 ARKit 坐标转换到 Unity 的辅助类'
- en: '`UnityARVideo` – A helper function to render the video texture to the scene'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARVideo` – 一个将视频纹理渲染到场景的辅助函数'
- en: '`UnityPointCloudExamples` – A helper function to draw a point cloud using particle
    effects'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityPointCloudExamples` – 一个用于使用粒子效果绘制点云的辅助函数'
- en: '`\Plugins\iOS\UnityARKit\Shaders` shader files:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '`\Plugins\iOS\UnityARKit\Shaders` 着色器文件：'
- en: '`YUVShader` – A gamma Unlit Shader for rendering Textures'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`YUVShader` – 用于渲染纹理的伽玛 Unlit 着色器'
- en: '`YUVShaderLinear` – A linear Unlit Shader for rendering Textures'
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`YUVShaderLinear` – 用于渲染纹理的线性 Unlit 着色器'
- en: '`\UnityARKitPlugin\Resources` file:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '`\UnityARKitPlugin\Resources` 文件：'
- en: '`UnityARKitPluginSettings.cs` – Is a scriptable object that toggles whether
    ARKit is required for the app and toggles Facetracking for the iPhone X.'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARKitPluginSettings.cs` – 一个可脚本化的对象，用于切换应用是否需要 ARKit 以及切换 iPhone X 的面部追踪'
- en: '`UnityARKitPlugin\ARKitRemote` files:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '`UnityARKitPlugin\ARKitRemote` 文件：'
- en: '`ARKitRemote.txt` – A text file that explains how to set up and use ARKitRemote'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARKitRemote.txt` – 一个文本文件，解释如何设置和使用 ARKitRemote'
- en: '`EditorTestScene.unity` – Test scene that should run when running `ARKitRemote`'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`EditorTestScene.unity` – 当运行 `ARKitRemote` 时应该运行的测试场景'
- en: '`UnityARKitRemote.unity` – Scene that should be compiled and installed on an
    applicable device'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARKitRemote.unity` – 应该在适用设备上编译和安装的场景'
- en: '`ARKitRemoteConnection.cs` – Used to send data from the device to the UnityEditor'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARKitRemoteConnection.cs` – 用于将设备数据发送到UnityEditor'
- en: '`ConnectionMessageIds` – GUIDs for the Editor Session Message'
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ConnectionMessageIds` – 编辑器会话消息的GUID'
- en: '`ConnectToEditor.cs` – Creates a network connection between the editor and
    the device'
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ConnectToEditor.cs` – 在编辑器和设备之间创建网络连接'
- en: '`EditorHitTest` – Returns collision data from device to editor'
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`EditorHitTest` – 从设备返回碰撞数据到编辑器'
- en: '`ObjectSerializationExtension.cs` – An extension to convert an object to a
    byte array'
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ObjectSerializationExtension.cs` – 将对象转换为字节数组的扩展'
- en: '`SerializableObjects.cs` – Serializes Vector 4 data and a 4x4 matrix'
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SerializableObjects.cs` – 序列化Vector 4数据和一个4x4矩阵'
- en: '`UnityRemoteVideo.cs` – Connects to the editor and transfers a video feed from
    the device to the editor'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityRemoteVideo.cs` – 连接到编辑器，并将设备视频流传输到编辑器'
- en: '`UnityARKitPlugin\Examples` files:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '`UnityARKitPlugin\Examples`文件：'
- en: '`AddRemoveAnchorExample` – An example program to add and remove anchors'
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AddRemoveAnchorExample` – 一个示例程序，用于添加和删除锚点'
- en: '`Common` – Has common materials, models, prefabs, shaders, and textures that
    are used in various projects'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Common` – 包含在各个项目中使用的通用材料、模型、预制体、着色器和纹理'
- en: '`FaceTracking` – Face tracking example application'
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FaceTracking` – 面部追踪示例应用程序'
- en: '`FocusSquare` – An example scene where it finds a specific anchor'
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FocusSquare` – 一个示例场景，它找到了特定的锚点'
- en: '`UnityARBallz` – An example scene where you play a game with balls'
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARBallz` – 一个示例场景，你可以在这里玩球类游戏'
- en: '`UnityARKitScene` – A basic scene with minimal scripts attached to test if
    ARKit works appropriately'
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARKitScene` – 一个带有最小脚本的简单场景，用于测试ARKit是否正常工作'
- en: '`UnityAROcclusion` – An example project that showcases various lighting conditions'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityAROcclusion` – 一个展示各种光照条件的示例项目'
- en: '`UnityARShadows` – An example project that handles low lighting conditions'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityARShadows` – 一个处理低光照条件的示例项目'
- en: '`UnityParticlePainter` – An example project that lets you paint with particles'
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UnityParticlePainter` – 一个示例项目，让你可以用粒子来绘画'
- en: Now that we have a fundamental understanding of everything inside this package,
    let's build our Hello World with ARKit.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经对这个包内部的所有内容有了基本的理解，让我们用ARKit构建我们的Hello World。
- en: Building Hello World in ARKit
  id: totrans-359
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在ARKit中构建Hello World
- en: 'The first thing we need to do after we open the UnityARKitScene is to set up
    the build settings:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们打开UnityARKitScene之后，我们需要做的第一件事是设置构建设置：
- en: '![](img/c796f255-e848-4868-901d-400e50a6ea56.png)'
  id: totrans-361
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c796f255-e848-4868-901d-400e50a6ea56.png)'
- en: Click on Build Settings and select Player Settings.
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击构建设置并选择玩家设置。
- en: 'We want to scroll down to Identification. The Bundle Identifier should be set
    to `com.unity.ARKitHelloTutorial`, Version to `0.1`, and Build to `10.1`. The
    Automatically Sign checkbox should be checked. Leave the Automatic Signing Team
    ID settings blank:'
  id: totrans-363
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们想要滚动到“识别”部分。包标识符应该设置为`com.unity.ARKitHelloTutorial`，版本为`0.1`，构建为`10.1`。自动签名复选框应该被勾选。自动签名团队ID设置留空：
- en: '![](img/7ce47936-e44a-4789-8c1e-44a6b6694b95.png)'
  id: totrans-364
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7ce47936-e44a-4789-8c1e-44a6b6694b95.png)'
- en: Build the `UnityARKitScene` for iOS only. Run Xcode in Debug mode.
  id: totrans-365
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅构建iOS的`UnityARKitScene`。以调试模式运行Xcode。
- en: Only the Development Build checkbox should be checked; everything else should
    be left as default.
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅勾选“开发构建”复选框；其他所有内容应保持默认设置。
- en: 'Click Build. I will save the file as `iOSTest` in my data drive within a folder
    called `iOS`:'
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击构建。我将把这个文件保存为`iOSTest`，保存在我的数据驱动器中名为`iOS`的文件夹里：
- en: '![](img/38c5dcf3-bde3-4dee-8268-8dd48b753997.png)'
  id: totrans-368
  prefs: []
  type: TYPE_IMG
  zh: '![](img/38c5dcf3-bde3-4dee-8268-8dd48b753997.png)'
- en: Building should not take very long at all, perhaps around two minutes for a
    first build.
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建过程不会花费很长时间，可能第一次构建只需要大约两分钟。
- en: 'The next thing we want to do is open the folder we saved the project in and
    open the `.xcodeproj` file in Xcode:'
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步我们要做的是打开我们保存项目的文件夹，并在Xcode中打开`.xcodeproj`文件：
- en: '![](img/e6694395-d086-41f5-835c-535953fbf81b.png)'
  id: totrans-371
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e6694395-d086-41f5-835c-535953fbf81b.png)'
- en: 'Let''s take a look at the Base project you will see in Xcode:'
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们看看在Xcode中你会看到的基项目：
- en: '![](img/b3447925-d649-4d2f-9d84-76c6237e5f27.png)'
  id: totrans-373
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b3447925-d649-4d2f-9d84-76c6237e5f27.png)'
- en: 'The first thing we want to check is the Identity tab to make sure that these
    settings are the same as in Unity3D:'
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先想要检查的是“身份”选项卡，以确保这些设置与Unity3D中的设置相同：
- en: '![](img/c10deef1-0f4a-4d08-92b3-65eec326bd75.png)'
  id: totrans-375
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c10deef1-0f4a-4d08-92b3-65eec326bd75.png)'
- en: 'Now, we need to look at the Signing subsection:'
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要查看“签名”子部分：
- en: '![](img/23b01e02-0038-4703-b98d-5112fbeb94e7.png)'
  id: totrans-377
  prefs: []
  type: TYPE_IMG
  zh: '![](img/23b01e02-0038-4703-b98d-5112fbeb94e7.png)'
- en: 'We need to make sure to add our Personal Team name to it, which you can get
    by signing in to your Apple Developer account and clicking on the arrow for the
    team you want to use:'
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要确保添加我们的个人团队名称，你可以通过登录你的Apple开发者账户并点击你想要使用的团队的箭头来获取：
- en: '![](img/ffe0a41b-5f2d-4096-82a6-a17a23a06261.png)'
  id: totrans-379
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ffe0a41b-5f2d-4096-82a6-a17a23a06261.png)'
- en: 'Deployment Info is next. The Deployment Target needs to be changed to `11.2`.
    Devices should be set to iPhone only. The Main Interface is `LaunchScreen-iPhone.xib`:'
  id: totrans-380
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署信息接下来。部署目标需要更改为`11.2`。设备应设置为仅iPhone。主界面是`LaunchScreen-iPhone.xib`：
- en: '![](img/5ed9d47b-3096-4a57-879d-12e83f7bc9c7.png)'
  id: totrans-381
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5ed9d47b-3096-4a57-879d-12e83f7bc9c7.png)'
- en: Click on Build Settings at the top, as there are a few settings we need to change
    here as well.
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击顶部的构建设置，因为这里也有一些设置需要更改。
- en: 'In Architectures, ARCHS for iPhone should be set to Standard. SDKROOT should
    be Latest iOS (iOS 11.2). SUPPORTED_PLATFORMS should be iOS:'
  id: totrans-383
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在架构中，iPhone的ARCHS应设置为标准。SDKROOT应为最新iOS（iOS 11.2）。SUPPORTED_PLATFORMS应为iOS：
- en: '![](img/0d3ed973-b87f-4768-b67e-64ccda3099bf.png)'
  id: totrans-384
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0d3ed973-b87f-4768-b67e-64ccda3099bf.png)'
- en: 'Next up, scroll down to look at signing, and the values should be already set
    to the correct ones:'
  id: totrans-385
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，向下滚动查看签名，值应该已经设置为正确的值：
- en: '![](img/46da1605-6d20-4344-95e7-179124c130a7.png)'
  id: totrans-386
  prefs: []
  type: TYPE_IMG
  zh: '![](img/46da1605-6d20-4344-95e7-179124c130a7.png)'
- en: 'Now, click on Product and Build:'
  id: totrans-387
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击产品并构建：
- en: '![](img/07508ad8-52bb-4298-9bf2-fa3e11310a57.png)'
  id: totrans-388
  prefs: []
  type: TYPE_IMG
  zh: '![](img/07508ad8-52bb-4298-9bf2-fa3e11310a57.png)'
- en: 'The build should have completed successfully with roughly 47 warnings, which
    is normal:'
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建应该成功完成，大约有47个警告，这是正常的：
- en: '![](img/6a16962a-3078-4c83-babe-1c1f97bdf320.png)'
  id: totrans-390
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6a16962a-3078-4c83-babe-1c1f97bdf320.png)'
- en: 'Now, we can build and test in the simulator. What we want to do is change from
    the iPhone to one of the simulators in the list, so click on the device list next
    to your iPhone or whatever device you have:'
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以在模拟器中构建和测试。我们想要做的是从iPhone切换到列表中的任何一个模拟器，所以点击你iPhone或任何你拥有的设备旁边的设备列表：
- en: '![](img/d4d37cb8-72ef-48e3-8d91-90a0e52f20dd.png)'
  id: totrans-392
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d4d37cb8-72ef-48e3-8d91-90a0e52f20dd.png)'
- en: 'You will see a big list of devices you want to use. This will range from simulations
    of devices to the iOS device you have connected to your macOS:'
  id: totrans-393
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将看到一个你想使用的设备的大列表。这将从设备的模拟到连接到你的macOS的iOS设备：
- en: '![](img/6dde950c-a669-4df6-b021-caa4506d4d6d.png)'
  id: totrans-394
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6dde950c-a669-4df6-b021-caa4506d4d6d.png)'
- en: Click on the simulation you want to use, and then build and run the application.
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击你想要使用的模拟器，然后构建并运行应用程序。
- en: Congratulations! We have completed this Hello World application.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！我们已经完成了这个Hello World应用程序。
- en: Summary
  id: totrans-397
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We learned the basics of the four main AR SDKs made available to us from many
    companies. We installed and compiled a working example in each one of the SDKs
    with minimal effort, and we can now move on to utilizing these SDKs to their full
    potential, as they currently stand in their respective stages of development.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了从许多公司提供的四个主要AR SDK的基本知识。我们只需付出最小的努力，就在每个SDK中安装并编译了一个工作示例，现在我们可以继续利用这些SDK的潜力，因为它们目前处于各自的发展阶段。
- en: We can see that all four SDKs are simple enough to use and are relatively easy
    to install. In my opinion, the best SDK to use at the moment is Vuforia. It has
    the most robust API and is extremely well-documented for usage and further learning.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，所有四个SDK都足够简单易用，安装相对容易。在我看来，目前最好的SDK是Vuforia。它具有最强大的API，并且对于使用和进一步学习有非常详细的文档。
- en: In the next chapter, we will focus on learning the history of GIS and how that
    history has shaped the way we use GIS in AR applications and games today.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将专注于学习GIS的历史以及这段历史是如何塑造我们今天在AR应用程序和游戏中使用GIS的方式的。
- en: Questions
  id: totrans-401
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'ARView is an SDK that you can use to make AR applications in Unity:'
  id: totrans-402
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ARView是一个你可以用来在Unity中制作AR应用程序的SDK：
- en: A.) True
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'ARKit is specifically designed for iOS devices only:'
  id: totrans-405
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ARKit是专门为iOS设备设计的：
- en: A.) True
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'ARCore is specifically designed for Windows devices only:'
  id: totrans-408
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ARCore是专门为Windows设备设计的：
- en: A.) True
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'Vuforia is designed for iOS, Windows, and Android devices:'
  id: totrans-411
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vuforia是为iOS、Windows和Android设备设计的：
- en: A.) True
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'Haptic perception is all about using the sense of touch:'
  id: totrans-414
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 触觉感知完全是关于使用触觉：
- en: A.) True
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'Sound perception is what you see with your eyes:'
  id: totrans-417
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 声音感知是你用眼睛看到的东西：
- en: A.) True
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'GPS data lets the application specify the user''s location by random guessing:'
  id: totrans-420
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GPS数据让应用程序可以通过随机猜测来指定用户的位置：
- en: A.) True
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'DLL files are required for Windows and Android plugins with Unity:'
  id: totrans-423
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Unity 的 Windows 和 Android 插件需要 DLL 文件：
- en: A.) True
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'Meta 2, HoloLens, HUD, and Google Glass are all considered AR devices:'
  id: totrans-426
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Meta 2、HoloLens、抬头显示（HUD）和谷歌眼镜都被视为增强现实（AR）设备：
- en: A.) True
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'Vuforia is not a free SDK to use:'
  id: totrans-429
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vuforia 并不是一个免费使用的 SDK：
- en: A.) True
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
