["```cs\nDictionary<Guid, int> data = new Dictionary<Guid, int>();\n```", "```cs\nvar data = new Dictionary<Guid, int>();\n```", "```cs\nDictionary<Guid, int> data = new();\n```", "```cs\nnamespace Packt.FlightQueryDecoder;\npublic class FlightQueryParser\n{\n  public FlightQuery ParseQuery(string query) {\n    if (query.StartsWith(\"AD\") && query.Length == 13)\n    {\n      var flightQuery = new FlightQuery {\n        Date = DateTime.Parse(query.Substring(2, 5)),\n        Origin = query.Substring(7, 3),\n        Destination = query.Substring(10, 3)\n      };\n      return flightQuery;\n    }\n    else {\n      throw new ArgumentException(\"Invalid query format\");\n    }\n  }\n```", "```cs\n  public FlightQueryResult ParseResult(string result)\n  {\n    var fqr = new FlightQueryResult();\n    var segments = result.Split(' ',\n      StringSplitOptions.RemoveEmptyEntries\n      | StringSplitOptions.TrimEntries);\n    fqr.Origin = segments[0];\n    fqr.Destination = segments[1];\n    string today = DateTime.Today.ToShortDateString();\n    fqr.DepartureTime = DateTime.Parse(\n      today + \" \"+segments[2] + 'M');\n    string seg3 = segments[3];\n    fqr.ArrivalTime = DateTime.Parse($\"{today} {seg3}M\");\n    fqr.AircraftTypeDesignator = segments[4];\n    fqr.FlightDuration = TimeSpan.Parse(segments[5]);\n    return fqr;\n  }\n}\n```"]