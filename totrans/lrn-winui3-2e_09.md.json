["```cs\n    <StackPanel Orientation=\"Horizontal\"\n                HorizontalAlignment=\"Center\"\n                VerticalAlignment=\"Center\">\n        <Button x:Name=\"myButton\"\n                Click=\"myButton_Click\">\n            Click Me\n        </Button>\n    </StackPanel>\n    ```", "```cs\n    private void myButton_Click(object sender, RoutedEventArgs e)\n    {\n        myButton.Content = \"Clicked\";\n    }\n    ```", "```cs\n    public class HardwareItem\n    {\n        public long id { get; set; }\n        public string name { get; set; }\n        public string category { get; set; }\n        public int quantity { get; set; }\n        public decimal cost { get; set; }\n        public decimal price { get; set; }\n    }\n    ```", "```cs\n    public HardwareItem[] HardwareItems { get; set; }\n    ```", "```cs\n    private void PopulateItems()\n    {\n        HardwareItems = new HardwareItem[]\n        {\n            new HardwareItem { id = 1, name = \"Wood Screw\", category = \"Screws\", cost = 0.02M, price = 0.10M, quantity = 504 },\n            new HardwareItem { id = 2, name = \"Sheet Metal Screw\", category = \"Screws\", cost = 0.03M, price = 0.15M, quantity = 655 },\n            new HardwareItem { id = 3, name = \"Drywall Screw\", category = \"Screws\", cost = 0.02M, price = 0.11M, quantity = 421 },\n            new HardwareItem { id = 4, name = \"Galvanized Nail\", category = \"Nails\", cost = 0.04M, price = 0.16M, quantity = 5620 },\n            new HardwareItem { id = 5, name = \"Framing Nail\", category = \"Nails\", cost = 0.06M, price = 0.20M, quantity = 12000 },\n            new HardwareItem { id = 6, name = \"Finishing Nail 2 inch\", category = \"Nails\", cost = 0.02M, price = 0.11M, quantity = 1405 },\n            new HardwareItem { id = 7, name = \"Finishing Nail 1 inch\", category = \"Nails\", cost = 0.01M, price = 0.10M, quantity = 1110 },\n            new HardwareItem { id = 8, name = \"Light Switch - White\", category = \"Electrical\", cost = 0.25M, price = 1.99M, quantity = 78 },\n            new HardwareItem { id = 9, name = \"Outlet - White\", category = \"Electrical\", cost = 0.21M, price = 1.99M, quantity = 56 },\n            new HardwareItem { id = 10, name = \"Outlet - Beige\", category = \"Electrical\", cost = 0.21M, price = 1.99M, quantity = 90 },\n            new HardwareItem { id = 11, name = \"Wire Ties\", category = \"Electrical\", cost = 0.50M, price = 4.99M, quantity = 125 },\n            new HardwareItem { id = 12, name = \"Switch Plate - White\", category = \"Electrical\", cost = 0.21M, price = 2.49M, quantity = 200 }\n        };\n    }\n    ```", "```cs\n    public MainWindow()\n    {\n        this.InitializeComponent();\n        PopulateItems();\n    }\n    ```", "```cs\n    <Grid>\n        <wct:HeaderedContentControl Header=\"Hardware Inventory\"\n                                    Margin=\"6\">\n        </wct:HeaderedContentControl>\n    </Grid>\n    ```", "```cs\n    <Window\n        x:Class=\"HardwareSupplies.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:local=\"using:HardwareSupplies\"\n        xmlns:wct=\"using:CommunityToolkit.WinUI.UI.Controls\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        mc:Ignorable=\"d\">\n    ```", "```cs\n    <wct:HeaderedContentControl Header=\"Hardware Inventory\"\n                                Margin=\"6\" x:Name=\"headerPanel\">\n        <wct:DropShadowPanel BlurRadius=\"8\"\n                             ShadowOpacity=\"1\"\n                             OffsetX=\"2\"\n                             OffsetY=\"2\"\n                             Color=\"Gray\"\n                             IsMasked=\"True\"\n                             Margin=\"6\">\n        </wct:DropShadowPanel>\n    </wct:HeaderedContentControl>\n    ```", "```cs\n    <wct:DropShadowPanel BlurRadius=\"8\"\n                         ShadowOpacity=\"1\"\n                         OffsetX=\"2\"\n                         OffsetY=\"2\"\n                         Color=\"Gray\"\n                         IsMasked=\"True\"\n                         Margin=\"6\">\n        <wct:DataGrid ItemsSource=\"{x:Bind HardwareItems}\"\n                  AutoGenerateColumns=\"True\"\n                  AlternatingRowBackground=\"{ThemeResource SystemControlBackgroundListLowBrush}\"\n                  Background=\"{ThemeResource SystemControlBackgroundAltHighBrush}\"/>\n    </wct:DropShadowPanel>\n    ```", "```cs\n<Button ui:FrameworkElementExtensions.Cursor=\"Wait\"\n        Content=\"Show Wait Cursor\" />\n<Button ui:FrameworkElementExtensions.Cursor=\"Hand\"\n        Content=\"Show Hand Cursor\" />\n<Button ui:FrameworkElementExtensions.Cursor=\"UniversalNo\"\n        Content=\"Show UniversalNo Cursor\" />\n```", "```cs\nstring name = \"Bobby Joe Johnson\";\nstring city = \"San Francisco\";\nname.Truncate(10); // name will be \"Bobby Joe \"\ncity.Truncate(7, true); // city will be \"San Fra...\"\n```", "```cs\npublic void TestData(decimal[] numbers, int size, string data)\n{\n    Guard.IsNotNull(numbers);\n    Guard.IsInRangeFor(size, numbers);\n    Guard.IsNotNullOrWhitespace(data);\n}\n```", "```cs\nThrowHelper.ThrowArgumentException<int>(nameof(size));\n```"]