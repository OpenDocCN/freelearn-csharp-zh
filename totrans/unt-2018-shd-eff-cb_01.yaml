- en: Post Processing Stack
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 后期处理堆栈
- en: 'In this chapter, you will learn about the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习以下食谱：
- en: Installing the Post Processing Stack
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装后期处理堆栈
- en: Getting a filmic look using grain, vignetting, and anti-aliasing
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用颗粒、渐晕和抗锯齿获得电影般的视觉效果
- en: Mimicking real life with bloom and anti-aliasing
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用辉光和抗锯齿模仿现实生活
- en: Setting the mood with color grading
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用色彩分级设定氛围
- en: Creating a horror game look with fog
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用雾气创建恐怖游戏的外观
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: It's great to write your own shaders and effects so that you can fine-tune your
    project to look just the way that you want, and this is what we will be spending
    the majority of the book looking into. However, it's also good to point out that
    Unity already comes with some prebuilt ways to get some of the more common effects
    that users like to have through the use of the Post Processing Stack.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 编写自己的着色器和效果以精细调整你的项目，使其看起来正是你想要的，这是我们将在本书的大部分内容中探讨的。然而，指出Unity已经内置了一些预构建的方式来获取用户喜欢通过后期处理堆栈使用的一些更常见的效果，这也是很好的。
- en: For those who just want to get something up and running, the Post Processing
    Stack can be an excellent way for you to tweak the appearance of your game without
    having to write any additional code. Using the Post Processing Stack can also
    be useful in showing you just what shaders can do and how they can improve your
    game projects as, behind the scenes, the Post Processing Stack is itself a shader
    that is applied to the screen, aptly called a screen shader.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于只想快速启动的人来说，后期处理堆栈可以是一个极好的方式，让你在不编写任何额外代码的情况下调整游戏的外观。使用后期处理堆栈还可以帮助你了解着色器能做什么以及它们如何改进你的游戏项目，因为幕后，后期处理堆栈本身就是一个应用于屏幕的着色器，恰当地称为屏幕着色器。
- en: Installing the Post Processing Stack
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装后期处理堆栈
- en: Before we can use the Post Processing Stack, we must first get it from the newly
    introduced Package Manager. A Unity package is a single file that contains various
    assets that can be used in Unity in a similar manner to a `.zip` file. Previously,
    Unity used the Asset Store to share these files with users, but as time has gone
    on, the Package Manager has been added to give users an easy way to get free content
    from Unity. We will actually be using the Package Manager again in [Chapter 12](part0258.html#7M1H40-e8c76c858d514bc3b1668fda96f8fa08), *Shader
    Graph*, but right now we will be using it for the Post-Processing package that
    it contains.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们能够使用后期处理堆栈之前，我们必须首先从新引入的包管理器中获取它。Unity包是一个包含各种资产的单个文件，这些资产可以在Unity中以类似.zip文件的方式使用。以前，Unity使用资产商店与用户共享这些文件，但随着时间的推移，包管理器被添加以使用户能够轻松地从Unity获取免费内容。我们实际上将在第12章[Shader
    Graph](part0258.html#7M1H40-e8c76c858d514bc3b1668fda96f8fa08)中再次使用包管理器，但现在我们将使用它来安装它所包含的后期处理包。
- en: Getting ready
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: To get started with this recipe, you will need to have Unity running and have
    created a new project. This chapter also requires you to have an environment to
    work from. The code files provided with this book will contain a basic scene and
    content to create the scene Unity's Standard Assets.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始这个食谱，你需要运行Unity并创建一个新的项目。本章还要求你有一个工作环境。本书提供的代码文件将包含一个基本的场景和内容，用于创建Unity的标准资产场景。
- en: 'Open the `Chapter 1  `| `Starting Point` scene inside of the `Asset` | `Chapter
    01` | `Scenes` folder from the Project browser. If all goes well, you should see
    something like this from the Game tab:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 打开项目浏览器中的`Asset` | `Chapter 01` | `Scenes`文件夹内的`Chapter 1  `| `Starting Point`场景。如果一切顺利，你应该在游戏标签页中看到如下内容：
- en: '![](img/00005.jpeg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00005.jpeg)'
- en: This is a simple environment that will allow us to easily see how changes made
    in post-processing effects can modify how things are drawn on the screen.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的环境，它将使我们能够轻松地看到在后期处理效果中做出的更改如何修改屏幕上绘制的内容。
- en: If you are interested in learning how to create the environment used, check
    out my previous book, *Unity 5.x Game Development Blueprints*, also available
    from Packt Publishing.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对学习如何创建所使用的环境感兴趣，请查看我的上一本书，*Unity 5.x 游戏开发蓝图*，也由Packt Publishing出版。
- en: How to do it...
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To begin:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 开始：
- en: 'Open up the Package Manager by going to Window | Package Manager (or by pressing
    *Ctrl + 9*):'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过前往窗口 | 包管理器（或按*Ctrl + 9*）打开包管理器：
- en: '![](img/00006.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00006.jpeg)'
- en: 'From the list view, click on the All button to display a list of all of the
    possible packages that are there. Once the list populates with all of the choices,
    select the Post-processing option:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从列表视图，点击“全部”按钮以显示所有可能的包列表。一旦列表填充了所有选项，选择“后处理”选项：
- en: '![](img/00007.jpeg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00007.jpeg)'
- en: 'From there, at the top right of the menu, click on the Install 2.0.7-preview
    button. You may need to wait for a while for it to complete downloading the content.
    Once it''s completed, you should be brought back to the In Project selection and
    now you''ll see Post-processing added to the list:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从那里，在菜单的右上角，点击安装2.0.7-preview按钮。可能需要等待一段时间，直到它完成内容的下载。一旦完成，你应该会返回到“在项目中选择”界面，现在你会在列表中看到添加了“后处理”：
- en: '![](img/00008.jpeg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00008.jpeg)'
- en: 'Close out of the Packages tab and go back to the Scene window to see the level.
    Then, from the Hierarchy window, we want to select the object that has our Camera component
    attached to it, as the Post Processing Stack needs to know which screen we want
    to modify. If you are using your own project, you may select the MainCamera object
    that comes with the default Unity scene, but the example project that is being
    used has the Camera located as a child of the `FPSController` object. To select
    it, click on the arrow next to the name to extend the object''s children and then
    select the `FirstPersonCharacter` object:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭“包”标签页，返回到场景窗口查看级别。然后，从层次窗口，我们需要选择带有我们的相机组件的对象，因为后处理堆栈需要知道我们想要修改哪个屏幕。如果你使用自己的项目，你可以选择默认Unity场景中附带的主相机对象，但正在使用的示例项目中，相机位于`FPSController`对象的子对象中。要选择它，点击名称旁边的箭头以展开对象的子对象，然后选择`FirstPersonCharacter`对象：
- en: '![](img/00009.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00009.jpeg)'
- en: This object has the Camera component on it, which is in charge of drawing what
    it sees to the Game tab when the game starts.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 此对象上有相机组件，负责在游戏开始时将所看到的内容绘制到游戏标签页。
- en: You can double-click on a game object in the Hierarchy tab to zoom the camera
    from the Scene tab to its location. This makes it very easy to find things, even
    in a large game level.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在Hierarchy标签页中双击一个游戏对象，从Scene标签页将其相机缩放到其位置。这使得在大型游戏级别中查找事物变得非常容易。
- en: 'With the object selected and our Camera component attached to it, next we need
    to add the Post-processing Behavior component to the object by going into Component
    | Rendering | Post-process Layer:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在对象被选中并且我们的相机组件附加到它之后，接下来我们需要通过进入Component | Rendering | Post-process Layer来向对象添加后处理行为组件：
- en: '![](img/00010.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00010.jpeg)'
- en: Once added, from the Inspector tab, scroll down to the Post Process Layer (Script)
    component and, under Layer, change the dropdown to `PostProcessing`.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加后，从Inspector标签页向下滚动到Post Process Layer（脚本）组件，并在Layer下，将下拉菜单更改为`PostProcessing`。
- en: This tells the component which objects we want to draw on the screen. When setting
    this, an object must have its Layer property set to `PostProcessing` in order
    to be seen.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这告诉组件我们想要在屏幕上绘制哪些对象。在设置此属性时，对象必须将其Layer属性设置为`PostProcessing`才能被看到。
- en: 'To create a Post Process Volume, go to the menu and select GameObject | 3D
    Object | Post Process Volume. From there, go to the Inspector tab and change the Layer property
    to `PostProcessing`. Finally, to make it easier to work with, change the Position to `0`, `0`, `0` and
    under the Post Process Volume component, check the Is Global property:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建后处理体积，转到菜单并选择GameObject | 3D Object | Post Process Volume。从那里，转到Inspector标签页，将Layer属性更改为`PostProcessing`。最后，为了便于工作，将Position更改为`0`，`0`，`0`，并在Post
    Process Volume组件下，勾选Is Global属性：
- en: '![](img/00011.jpeg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00011.jpeg)'
- en: Notice that there is a Profile property to the volume. This property will contain
    information about how we wish to modify the screen. By checking Is Global, we
    are saying that this information should always be drawn on an object. By unchecking
    it, the effects will only be visible from a certain distance from where the volume
    is placed. Depending on the game, this could allow you to drastically modify how
    the game appears in certain areas, but we care only about getting the visual effect
    at this point.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，体积有一个Profile属性。此属性将包含有关我们希望如何修改屏幕的信息。通过勾选Is Global，我们表示这些信息应该始终绘制在对象上。通过取消勾选它，效果将仅在从放置体积的一定距离处可见。根据游戏的不同，这可能允许你极大地改变游戏在某些区域的外观，但我们目前只关心获得视觉效果。
- en: Getting a filmic look using grain, vignetting, and depth of field
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用颗粒、渐晕和景深获得电影般的视觉效果
- en: Now that we have the Post Processing Stack installed, we can create our first
    Post-processing Volume. The new Post Processing Stack relies on using volumes
    that describe how things should be drawn, either globally or within a certain
    area.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装了后处理堆栈，我们可以创建第一个后处理体积。新的后处理堆栈依赖于使用描述如何绘制的体积，无论是全局还是特定区域。
- en: One of the most common appearances people like projects to have is that of a
    film. This is used quite frequently in titles such as the *Uncharted* series and
    *Grand Theft Auto V*. It's also used quite effectively in the *Left 4 Dead* series,
    as its creator are trying to emulate the B-movie zombie films that the games are
    based on.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 人们喜欢项目的外观之一是电影风格。这在诸如《未知的》系列和《侠盗猎车手V》等标题中相当常用。它也在《左4死》系列中被非常有效地使用，因为它的创作者试图模仿基于游戏的B级僵尸电影。
- en: Getting ready
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have completed the *Installing the Post Processing Stack* recipe
    before starting this one.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你在开始这个之前已经完成了“安装后处理堆栈”配方。
- en: How to do it...
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We first create a new Post Processing Profile by right-clicking within the `Assets `| `Chapter
    1` folder in the Project window and then selecting Create | Post Processing Profile.
    Once selected, it will allow us to rename the item. Go ahead and set the name
    to `FilmicProfile`:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先通过在项目窗口中的`Assets` | `第1章`文件夹内右键单击并选择创建 | 后处理配置文件来创建一个新的后处理配置文件。一旦选择，它将允许我们重命名项目。继续并将名称设置为`FilmicProfile`：
- en: '![](img/00012.jpeg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00012.jpeg)'
- en: If you happen to not enter the name correctly, you can rename an item from the
    Project tab by clicking on the name and then clicking again.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有正确输入名称，你可以通过在项目选项卡中点击名称然后再次点击来重命名项目。
- en: Once created, you should notice that, when selected, the Inspector window will
    now contain a button that says Add effect... (as you can see in the preceding
    image), which will allow us to augment what is normally drawn on the screen.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦创建，你应该注意到，当选择时，检查器窗口现在将包含一个显示“添加效果...”（如前图所示）的按钮，这将允许我们增强通常绘制在屏幕上的内容。
- en: 'From the Hierarchy tab, select the Post-process Volume object again and from
    the Inspector tab go to the Post Process Volume component and assign the Profile property
    to the `FilmicProflie` we just created:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从层次结构选项卡中再次选择后处理体积对象，然后从检查器选项卡转到后处理体积组件，并将“配置文件”属性分配给刚刚创建的`FilmicProfile`：
- en: '![](img/00013.jpeg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00013.jpeg)'
- en: Notice that, once the Profile has been set, the Add effect... button shows up
    here as well. We can use this at either place and the changes will be saved in
    the file.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，一旦设置了配置文件，添加效果...按钮也会在这里显示。我们可以在任何地方使用它，并且更改将被保存在文件中。
- en: 'To get started, click on the Add effect... button and select the Unity | Grain option.
    By default, you''ll only see the Grain option with a check, so click on the arrow
    to expand its contents:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始，点击“添加效果...”按钮并选择Unity | 粒子选项。默认情况下，你只会看到带有勾选的粒子选项，因此点击箭头以展开其内容：
- en: '![](img/00014.jpeg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00014.jpeg)'
- en: By default, you'll see that everything is greyed out. In order to have it affect
    anything, you have to click on the checkbox on the left-hand side. You can quickly
    turn them all on or off by pressing the All or None buttons on the screen.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，你会看到所有内容都是灰色的。为了使其影响任何内容，你必须点击左侧的复选框。你可以通过按屏幕上的全部或无按钮快速打开或关闭它们。
- en: 'In our case, check the Intensity option and set it to `0.2`. Then, check the
    Size property and set it to `0.3`. Afterward, switch to the Game tab to see a
    representation of what our tweaks have done:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的情况下，勾选强度选项并将其设置为`0.2`。然后，勾选大小属性并将其设置为`0.3`。之后，切换到游戏选项卡以查看我们的调整所产生的影响：
- en: '![](img/00015.jpeg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00015.jpeg)'
- en: You will notice that the screen has become much fuzzier than before. Decrease
    the Intensity to `0.2`, the Size to `0.3`, and uncheck the Colored option.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会注意到屏幕比之前模糊得多。将强度降低到`0.2`，大小降低到`0.3`，并取消选中彩色选项。
- en: Unlike how users typically work in Unity, due to Post Processing Profiles being
    filed, you can modify them while playing your game and, upon stopping the game,
    the values are still saved. This can be useful for tweaking values to achieve
    the exact look that you're after.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 与用户在Unity中通常的工作方式不同，由于后处理配置文件已归档，你可以在玩游戏时修改它们，停止游戏后，值仍然被保存。这可以用于调整值以实现你想要的精确外观。
- en: 'The next property we want to tweak is the Vignette property. Note the blackened
    edges around the screen. Click on Add effect... and select Unity | Vignette. Open
    up the properties and change the Intensity to `0.5` and the Smoothness to `0.35`:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们接下来想要调整的属性是Vignette属性。注意屏幕周围的变暗边缘。点击添加效果...并选择Unity | Vignette。打开属性并将强度设置为`0.5`，平滑度设置为`0.35`：
- en: '![](img/00016.jpeg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00016.jpeg)'
- en: 'Next, select Add effect... again and, this time, select Unity | Depth of Field.
    Check the Depth of Field option. It may be difficult to see a change right off
    the bat, but change the Focus Distance to `6` and Focal Length to `80` and you
    should notice the grass in front of the background and the mountain in the distance
    are now blurred:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，再次选择添加效果...，这次选择Unity | 景深。勾选景深选项。一开始可能难以看到变化，但将焦点距离设置为`6`，焦距设置为`80`，你应该会注意到背景前的草地和远处的山现在变模糊了：
- en: '![](img/00017.jpeg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00017.jpeg)'
- en: 'Now, if we go into the game itself, you should see our filmic look in action:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果我们进入游戏本身，你应该能看到我们的影视风格正在发挥作用：
- en: '![](img/00018.jpeg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00018.jpeg)'
- en: The final result of the filmic look
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 影视风格的最终效果
- en: And with that, we now have a scene that looks much more like a film than what
    we had to begin with!
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些，我们现在有一个场景看起来比一开始更像电影了！
- en: How it works...
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Each time we add an effect to a Post-processing Volume, we are overriding what
    would normally be put onto the screen.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 每次我们将效果添加到后处理体积中，我们都是在覆盖原本应该显示在屏幕上的内容。
- en: If you've been to a movie theater that still uses film, you may have noticed
    how there were little specks in the filmstock while the film was playing. The
    **grain** effect simulates this film grain, causing the effect to become more
    pronounced the more the movie is played. This is often used in horror games to
    obscure the player's vision.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你曾经去过仍然使用胶片的电影院，你可能注意到了在电影播放时胶片上会有一些小颗粒。**颗粒**效果模拟了这种胶片颗粒，随着电影的播放，效果变得更加明显。这通常用于恐怖游戏，以模糊玩家的视野。
- en: For more information on the grain effect, check out: [https://github.com/Unity-Technologies/PostProcessing/wiki/Grain](https://github.com/Unity-Technologies/PostProcessing/wiki/Grain).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 关于颗粒效果的信息，请查看：[https://github.com/Unity-Technologies/PostProcessing/wiki/Grain](https://github.com/Unity-Technologies/PostProcessing/wiki/Grain).
- en: In the film world, **vignetting** can be an unintended effect of using the wrong
    type of lens for the type of shot you are trying to achieve or the aspect ratio
    that you are shooting for. In game development, we typically use vignetting for
    dramatic effect or to have players focus on the center of the screen by darkening
    and/or desaturating the edges of the screen compared to the center.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在电影界，**晕影**可能是由于使用了错误的镜头类型来达到你想要的效果，或者是因为你拍摄的画面宽高比不正确。在游戏开发中，我们通常使用晕影来产生戏剧效果，或者通过暗化屏幕边缘并/或降低其饱和度来让玩家专注于屏幕中心。
- en: For more information on the vignette effect, check out: [https://github.com/Unity-Technologies/PostProcessing/wiki/Vignette](https://github.com/Unity-Technologies/PostProcessing/wiki/Vignette).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 关于光晕效果的信息，请查看：[https://github.com/Unity-Technologies/PostProcessing/wiki/Vignette](https://github.com/Unity-Technologies/PostProcessing/wiki/Vignette).
- en: The **depth of field** setting basically determines what is blurry and what
    isn't. The idea is to have items of importance in focus while items in the background
    are not.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**景深**设置基本上决定了什么会模糊，什么不会。想法是让重要的物品保持清晰，而背景中的物品则不清晰。'
- en: For more information on the depth of field effect, check out: [https://github.com/Unity-Technologies/PostProcessing/wiki/Depth-of-Field](https://github.com/Unity-Technologies/PostProcessing/wiki/Depth-of-Field).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 关于景深效果的信息，请查看：[https://github.com/Unity-Technologies/PostProcessing/wiki/Depth-of-Field](https://github.com/Unity-Technologies/PostProcessing/wiki/Depth-of-Field).
- en: Mimicking real life with bloom and anti-aliasing
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用光晕和抗锯齿模拟真实生活
- en: The **bloom** optical effect aims to mimic the imaging effects of real-world
    cameras, where things in areas with lights will glow along the edges, thus overwhelming
    the camera. The bloom effect is very distinctive and you've likely seen it employed
    in areas in a game that are magical or heaven-like.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**光晕**光学效果旨在模仿现实世界中相机的成像效果，在光线区域内的物品会沿着边缘发光，从而压倒相机。光晕效果非常独特，你很可能在游戏中魔法或天堂般的区域看到过它。'
- en: Getting ready
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have completed the *Installing the Post Processing Stack* recipe before
    starting this one.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始这一步之前，请确保你已经完成了*安装Post Processing Stack*的步骤。
- en: How to do it...
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何实现...
- en: We first create a new Post Processing Profile by right-clicking within the `Assets`
    folder in the Project window and then selecting Create | Post Processing Profile.
    Once selected, it will allow us to rename the item. Go ahead and set the name
    to `BloomProfile`.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先通过在项目窗口中的`Assets`文件夹内右键单击并选择创建 | 后处理配置文件来创建一个新的后处理配置文件。一旦选择，它将允许我们重命名项目。继续并将名称设置为`BloomProfile`。
- en: Select the `Post-process volume` object and, from the Inspector window, go to
    the Post Processing Volume component and assign the Profile property to the `BloomProflie` we
    just created.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`后处理体积`对象，然后从检查器窗口中转到后处理体积组件，并将配置文件属性分配给刚刚创建的`BloomProfile`。
- en: Afterward, select the Game tab, if it hasn't been selected already to see the
    results of the changes we are about to make in the following steps.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，选择游戏标签页，如果尚未选择，以查看我们将在以下步骤中进行的更改的结果。
- en: 'Select the Add effect... button and select Unity | Bloom. Once the effect has
    been added to the Overrides section of the Post Processing Volume component, select
    the arrow to open its properties. Check the Intensity property and set it to `3`.
    Afterward, check and set the Threshold to `0.75`, the Soft Knee to `0.1`, and
    the Radius to `3`:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择添加效果...按钮，选择Unity | Bloom。一旦效果被添加到后处理体积组件的覆盖部分，选择箭头打开其属性。检查强度属性并将其设置为`3`。之后，检查并设置阈值到`0.75`，软膝盖到`0.1`，半径到`3`：
- en: '![](img/00019.jpeg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00019.jpeg)'
- en: 'Next, select the object with the Post Process Layer component attached to it
    (in the example, it is the `FPSController` | `FirstPersonCharacter` object) and,
    from the Inspector tab, scroll down to the Post Process Layer script. From there,
    change the Anti-aliasing property dropdown to `Fast Approximate Anti-aliasing`:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择带有后处理图层组件的对象（在示例中，是`FPSController` | `FirstPersonCharacter`对象），然后从检查器选项卡向下滚动到后处理图层脚本。从那里，将抗锯齿属性下拉菜单更改为`快速近似抗锯齿`：
- en: '![](img/00020.jpeg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00020.jpeg)'
- en: 'Afterward, save your scene and hit the Play button to check out your project:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，保存你的场景并点击播放按钮来检查你的项目：
- en: '![](img/00021.jpeg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00021.jpeg)'
- en: The final result of using bloom and anti-aliasing
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 使用bloom和抗锯齿的最终结果
- en: How it works...
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: As mentioned before, bloom will make bright things even brighter while adding
    a glow to lighter areas. In this recipe, you may notice that the path is much
    lighter than it was previously. This can be used in order to ensure that players
    will follow the path to get to the next section of gameplay.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，bloom会使明亮的东西更加明亮，同时为较亮区域添加光晕。在这个配方中，你可能注意到路径比之前要亮得多。这可以用来确保玩家会沿着路径到达游戏下一部分。
- en: For more information on bloom, check out: [https://github.com/Unity-Technologies/PostProcessing/wiki/Bloom](https://github.com/Unity-Technologies/PostProcessing/wiki/Bloom).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多关于 bloom 的信息，请查看：[https://github.com/Unity-Technologies/PostProcessing/wiki/Bloom](https://github.com/Unity-Technologies/PostProcessing/wiki/Bloom).
- en: Anti-aliasing attempts to reduce the appearance of aliasing, which is the effect
    of lines appearing jagged on the screen. This is typically due to the fact that
    the display the player is using to play the game doesn't have a high enough resolution
    to be displayed properly. Anti-aliasing will combine colors with nearby lines
    in order to remove their prominence, at the cost of the game appearing blurry.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 抗锯齿试图减少锯齿的出现，这是屏幕上线条出现锯齿状效果的原因。这通常是因为玩家使用的显示设备分辨率不够高，无法正确显示。抗锯齿将通过与附近的线条组合颜色来消除它们的突出，但代价是游戏看起来会模糊。
- en: For more information on anti-aliasing and what each mode means, check out: [https://github.com/Unity-Technologies/PostProcessing/wiki/Anti-aliasing](https://github.com/Unity-Technologies/PostProcessing/wiki/Anti-aliasing).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多关于抗锯齿以及每种模式意味着什么的信息，请查看：[https://github.com/Unity-Technologies/PostProcessing/wiki/Anti-aliasing](https://github.com/Unity-Technologies/PostProcessing/wiki/Anti-aliasing).
- en: Setting mood with color grading
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用色彩分级设置氛围
- en: One of the best ways to easily change the mood of a scene is by changing the
    colors a scene uses. One of the best examples of this is in the *Matrix* series
    of films, where the real world is always blue-tinted, while the computer-generated
    world of the Matrix is always tinted green. We can emulate this in our games through
    the use of color grading.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 改变场景氛围的最简单方法之一是通过改变场景使用的颜色。最好的例子之一是电影《黑客帝国》系列，其中现实世界总是带有蓝色调，而矩阵的计算机生成世界总是带有绿色调。我们可以通过使用色彩分级在我们的游戏中模仿这一点。
- en: Getting ready
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have completed the *Installing the Post Processing Stack* recipe before
    starting this one.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始此操作之前，确保已经完成了`安装后处理堆栈`配方。
- en: How to do it...
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: We first create a new Post Processing Profile by right-clicking within the `Assets`
    folder in the Project window and then selecting Create | Post Processing Profile.
    Once selected, it will allow us to rename the item. Go ahead and set it to `ColorProfile`.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先通过在项目窗口的`资产`文件夹内右键单击并选择`创建`|`后处理配置文件`来创建一个新的后处理配置文件。一旦选择，它将允许我们重命名项目。继续并将名称设置为`ColorProfile`。
- en: Select the `Post-process volume` object and, from the Inspector window, go to
    the Post Processing Volume component and assign the Profile property to the `ColorProflie` we
    just created.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`后处理体积`对象，然后从`检查器`窗口进入`后处理体积`组件，将`配置文件`属性分配给刚刚创建的`ColorProfile`。
- en: Afterward, select the Game tab, if it hasn't been selected already, to see the
    results of the changes to be made.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，选择`游戏`选项卡，如果尚未选择，以查看所做的更改结果。
- en: Select the Add effect... button and select Unity | Color Grading.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`添加效果...`按钮并选择`Unity | 色彩分级`。
- en: 'Check the Mode property and set it to Low Definition Range (LDR). From there,
    you''ll see a number of properties that can be used to adjust the colors on the
    screen in a similar manner to how Photoshop''s hue/saturation menu works. Check
    the Temperature property and set it to `30`. Afterward, set the Hue Shift property
    to `-20` and the Saturation to `15`:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`模式`属性，将其设置为低定义范围（LDR）。从那里，你会看到许多可以用来调整屏幕上颜色的属性，类似于Photoshop的色调/饱和度菜单工作方式。检查`温度`属性并将其设置为`30`。之后，将`色调偏移`属性设置为`-20`，将`饱和度`设置为`15`：
- en: '![](img/00022.jpeg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00022.jpeg)'
- en: 'After making the changes, dive into the game to see what it looks like when
    playing:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在进行更改后，进入游戏查看游戏时的效果：
- en: '![](img/00023.jpeg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00023.jpeg)'
- en: The final result of using color grading
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 使用色彩分级后的最终效果
- en: Notice how the previously very green environment is now much warmer and more
    yellow than before.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 注意之前非常绿色的环境现在变得温暖多了，比之前更黄。
- en: For more information on the color grading effect, check out: [https://github.com/Unity-Technologies/PostProcessing/wiki/Color-Grading](https://github.com/Unity-Technologies/PostProcessing/wiki/Color-Grading).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 关于色彩分级效果的更多信息，请查看：[https://github.com/Unity-Technologies/PostProcessing/wiki/Color-Grading](https://github.com/Unity-Technologies/PostProcessing/wiki/Color-Grading)。
- en: Creating a horror game look with fog
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用雾气创建恐怖游戏外观
- en: One of the types of games that best utilize the features of the Post Processing
    Stack is the horror genre. Using things such as depth of field to hide scary objects,
    as well as static to make the screen more menacing, can really help set your game
    firmly in the right place and provide the mood you are going for.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 最有效地利用后处理堆栈功能的游戏类型之一是恐怖游戏。使用诸如景深来隐藏恐怖物体以及静态来使屏幕更具威胁性，这真的可以帮助你的游戏牢牢地定位在正确的位置，并提供你所追求的氛围。
- en: Getting ready
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have completed the *Installing the Post Processing Stack* recipe before
    starting this one.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在开始此操作之前已经完成了`安装后处理堆栈`配方。
- en: How to do it...
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: We first create a new Post Processing Profile by right-clicking within the `Assets`
    folder in the Project window and then selecting Create | Post Processing Profile.
    Once selected, it will allow us to rename the item. Go ahead and set the name
    to `HorrorProfile`.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先通过在项目窗口的`资产`文件夹内右键单击并选择`创建`|`后处理配置文件`来创建一个新的后处理配置文件。一旦选择，它将允许我们重命名项目。继续并将名称设置为`HorrorProfile`。
- en: Select the `Post-process volume` object and, from the Inspector window, go to
    the Post Processing Volume component and assign the Profile property to the `HorrorProflie` we
    just created.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`后处理体积`对象，然后从`检查器`窗口进入`后处理体积`组件，将`配置文件`属性分配给刚刚创建的`HorrorProfile`。
- en: Unlike previous settings, though, the fog settings are located in the Lighting window,
    which can be accessed by going into Window | Lighting.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与之前的设置不同，尽管如此，雾气设置位于`照明`窗口中，可以通过进入`窗口`|`照明`来访问。
- en: 'From there, scroll all the way to the bottom until you reach the Other Settings
    option. Once there, check Fog and set the color to a value that is close to the
    skybox. I used the following settings:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从那里，滚动到最底部直到到达其他设置选项。一旦到达那里，检查雾气并将其颜色设置为接近天空盒的值。我使用了以下设置：
- en: '![](img/00024.jpeg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00024.jpeg)'
- en: If you know the hex values of the color from your graphic editing software you
    can just type it in the Hex Color property of the Color window.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从你的图形编辑软件中知道了颜色的十六进制值，你只需在颜色窗口的十六进制颜色属性中输入即可。
- en: 'Next, change the Mode to `Exponential` and the Density to `0.03`:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将模式改为`指数`，并将密度改为`0.03`：
- en: '![](img/00025.jpeg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00025.jpeg)'
- en: As you can see, it's already much more spooky that it was previously, but there
    are still more options that we can change.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，它已经比之前更加恐怖了，但仍有更多选项我们可以更改。
- en: 'Open up the HorrorProfile again and go to the Inspector tab. Press the Add
    effect... button and select Unity | Ambient Occlusion. Check the Mode option and
    select `Scalable Ambient Obscurance`. Afterward, change the Intensity to `2` and
    the Radius to `20`:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次打开“HorrorProfile”，转到“检查器”选项卡。按下“添加效果...”按钮，选择Unity | 环境遮挡。检查模式选项，并选择“可伸缩环境遮挡”。之后，将强度改为`2`，并将半径改为`20`：
- en: '![](img/00026.jpeg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00026.jpeg)'
- en: Lastly, lighting often has a big effect on the theme of a scene as well. If
    you're using the example map, select the `Directional Light` object in the Hierarchy
    tab and, from the Inspector tab under the Light component, change the Intensity
    to `0.5` and then adjust the Color to something darker. (I used the same color
    as in *step 4* with a HEX of `5F7684FF`.)
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，光照通常对场景的主题也有很大的影响。如果你正在使用示例地图，请在“层次”选项卡中选择“方向光”对象，然后在“灯光组件”下的“检查器”选项卡中，将强度改为`0.5`，然后调整颜色为更暗的色调。（我使用了与*步骤4*相同的颜色，十六进制值为`5F7684FF`。）
- en: 'Save your game and then start it to see the effect of all of the changes:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存你的游戏，然后启动它以查看所有更改的效果：
- en: '![](img/00027.jpeg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00027.jpeg)'
- en: The final result of our horror look
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们恐怖风格的最终结果
- en: How it works...
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The Ambient Occlusion option will calculate areas that should have additional
    shadows. Since our scene is filled with trees, this will make the undersides much
    darker than they were previously.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 环境遮挡选项将计算应该有额外阴影的区域。由于我们的场景中充满了树木，这将使底部比之前暗得多。
- en: 'For more information on the Ambient Occlusion effect, check out: [https://github.com/Unity-Technologies/PostProcessing/wiki/Ambient-Occlusion](https://github.com/Unity-Technologies/PostProcessing/wiki/Ambient-Occlusion).
    If you are interested in looking into the other options that the Post Processing
    stack has, check out: [https://github.com/Unity-Technologies/PostProcessing/wiki](https://github.com/Unity-Technologies/PostProcessing/wiki).'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 关于环境遮挡效果的更多信息，请查看：[https://github.com/Unity-Technologies/PostProcessing/wiki/Ambient-Occlusion](https://github.com/Unity-Technologies/PostProcessing/wiki/Ambient-Occlusion)。如果你对查看后处理堆栈的其他选项感兴趣，请查看：[https://github.com/Unity-Technologies/PostProcessing/wiki](https://github.com/Unity-Technologies/PostProcessing/wiki)。
