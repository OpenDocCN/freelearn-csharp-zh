- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this ever growing world of IT, we have numerous different platforms, frameworks,
    and languages on which applications are built based on the business needs, requirements,
    and the developer's interest. To remove this barrier of different platforms, Microsoft
    came up with the fastest, latest, and greatest version of .NET, the .NET Core
    cross-platform open source framework. Using this framework, beginner-level developers
    can work on different platforms, and experienced developers and architects can
    consume their APIs and libraries across different platforms. This book covers
    simple examples of using .NET Core to build modern, internet-connected, and cloud-based
    applications. The book will help us develop simple yet interesting applications
    to provide the readers with working code examples. We will develop a Tic-Tac-Toe
    game to begin with, then build a real-time chat application, Lets Chat (for chatting
    with our online Facebook buddies), a sample chat bot, and a dummy movie booking
    application.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for developers and architects who want to learn how to build cross-platform
    solutions using Microsoft .NET Core. It is assumed that you have some knowledge
    of the .NET Framework, OOP, and C# (or a similar programming language). This book
    is also useful for developers who want to develop a cross-platform application
    that supports already existing libraries or libraries that they have created on
    different platforms. The book covers a wide breadth of topics and attempts to
    explain all the fundamentals needed to build a .NET Core app. The book also introduces
    you to SignalR Core, Entity Framework Core, containers, F# functional programming,
    and tips and tricks for developing on .NET Core.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html), *Getting Started*, discusses all the prerequisites
    required for all the examples in this book, for example, setting up an Ubuntu
    VM using VirtualBox and through Hyper-V on Windows, and installing .NET Core 2.0
    and tools. We will also be introduced to F# and its features in brief, see how
    F# is different from other object-oriented programming languages, and look at
    the differences between C# and F#. We will also create a simple sample application
    using F#, in order to get familiar with the F# syntax.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html), *Native Libraries in .NET Core*, demonstrates what
    the ncurses library is and how to extend the console capabilities of .NET Core
    by implementing the ncurses native library on Linux, and also how to interoperate
    with existing native and Mono libraries. We will build a sample native library
    and application that implements this new sample library.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html), *Building Our First .NET Core Game – Tic-Tac-Toe*, illustrates
    .NET Core using an example game app, Tic-Tac-Toe. We will be introduced to SignalR
    Core and learn how it can be used to develop a real-time web application. Instead
    of using a monochromatic X and O, players can use their images to play the game.
    With this example game app, we will get an overview of the code (classes, interfaces,
    models, and so on) and will learn about compiling, building, and testing the application,
    which applies to .NET Core in general.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html), *Let''s Chat Web Application*, introduces web development
    with ASP.NET Core. This is done through a simple chat application, Let''s Chat,
    on Windows. We also cover project setup, application architecture and its description,
    SignalR Core, Dependency Injection, configuration, logging, and more. We will
    also get familiar with the fundamentals of the features of ASP.NET Core, which
    are introduced while developing the components of the application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html), *Developing the Let''s Chat Web Application*, demonstrates
    numerous examples and code snippets in order to fundamentals and features of ASP.NET
    Core. By the end of this chapter, the Let''s Chat application will be ready for
    use. We will also get acquainted with testing, hosting, security, and the performance
    aspects of web development.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html), *Testing and Deploying – The Let''s Chat Web Application*, explains
    the .NET Core deployment model. We will deploy the Let''s Chat application. We
    will be introduced to Docker containers. We will also develop and deploy a ASP.NET
    Core-based chat bot and integrate it with the Let''s Chat application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html), *To the Cloud*, teaches you what the cloud is and why
    the modern-day developer should be conversant with cloud technologies. We will
    get started with Azure, and make ourselves aware of the Azure management portal.
    We will learn to create a VM from the portal and see that it is automated using
    PowerShell or other languages using the Azure SDK. We will then manage the VM
    using PowerShell and see how to start and stop it. We will also learn how to create
    a web app in Azure from Visual Studio 2017 itself and learn how to publish profiles.
    Finally, we will have an overview of App Services, and take a quick look at Azure
    storage.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html), *Movie Booking Web App*, discusses **Entity Framework**
    (**EF**) and Entity Framework Core. We will learn about the features of and differences
    between the two. We will also learn that we should use EF Core only if EF cannot
    be used or there is a pressing cross-platform requirement to use EF Core. We will
    learn how to perform CRUD operations using EF Core by creating a simple app. We
    will then develop a simple movie booking app and learn how to deploy it using
    Visual Studio. We will also see how we can monitor our web app by enabling Application
    Insights.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html), *Microservices with .NET Core*, gives an overview of
    the microservice architecture and how it is an extension of SOA and overcomes
    the limitations of traditional monolithic apps. We will learn about the important
    architectural differences between ASP.NET and ASP.NET Core. We will look at tips
    to keep in mind while developing ASP.NET Core 2.0 applications, due to the architectural
    differences. We will then discuss handy information, steps, and tips to improve
    the performance of ASP.NET Core apps, a few tips on Azure as well, and then a
    new experimental project of the ASP.NET Core team, which is called Blazor. We''ll
    wrap up the chapter with a discussion on the .NET Core 2.1 roadmap and the features
    expected in this new version.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html), *Functional Programming with F#*, discusses functional
    programming and its features, such as higher-order functions, purity, lazy evaluation,
    and currying. We will learn about F# basics, such as classes, `let` and `do` bindings,
    generic type parameters, properties in F#, how to write functions and lambda expressions
    in F#, and exception handling. Also, we''ll look at different types of data providers
    in F# and how different types of data parser work. We will also learn about querying
    SQL Server vNext with F#.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is aimed at experienced developers who use different platforms—Windows,
    Linux, Ubuntu, macOS—and want to try Microsoft .NET Core 2.0 cross platform. Developers
    using C#, C, or C++ for development who are interested in extending their knowledge
    of functional programming, beginners who want to understand F# and functional
    programming, we assume that you have a basic understanding of C# and are aware
    of the .NET framework and Windows.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/.NET-Core-2.0-By-Example](https://github.com/PacktPublishing/.NET-Core-2.0-By-Example).
    We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://www.packtpub.com/sites/default/files/downloads/.NETCore2.0ByExample_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/.NETCore2.0ByExample_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "By doing this in `_Layout.cshtml`, we ensure that this functionality
    is common across all the pages."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Enter Display Name and Contact Email, and click on the Create
    App ID button."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book title
    in the subject of your message. If you have questions about any aspect of this
    book, please email us at `questions@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packtpub.com](https://www.packtpub.com/).[](https://www.packtpub.com/)
  prefs: []
  type: TYPE_NORMAL
