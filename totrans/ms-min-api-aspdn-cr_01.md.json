["```cs\ndotnet –list-sdks\n```", "```cs\n    dotnet new webapi -minimal -o Chapter01\n    ```", "```cs\n    cd Chapter01\n    code.\n    ```", "```cs\nvar builder = WebApplication.CreateBuilder(args);\n// Add services to the container.\n// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\nvar app = builder.Build();\n// Configure the HTTP request pipeline.\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwagger();\n    app.UseSwaggerUI();\n}\napp.UseHttpsRedirection();\nvar summaries = new[]\n{\n    \"Freezing\", \"Bracing\", \"Chilly\", \"Cool\", \"Mild\", \"Warm\", \n    \"Balmy\", \"Hot\", \"Sweltering\", \"Scorching\"\n};\napp.MapGet(\"/weatherforecast\", () =>\n{\n  var forecast = Enumerable.Range(1, 5).Select(index =>\n      new WeatherForecast\n      (\n          DateTime.Now.AddDays(index),\n          Random.Shared.Next(-20, 55),\n          summaries[Random.Shared.Next(summaries.Length)]\n      ))\n      .ToArray();\n      return forecast;\n})\n.WithName(\"GetWeatherForecast\");\napp.Run();\ninternal record WeatherForecast(DateTime Date, int TemperatureC, string? Summary)\n{\n    public int TemperatureF => 32 + (int)(TemperatureC / \n    0.5556);\n}\n```", "```cs\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\n```", "```cs\nif (app.Environment.IsDevelopment())\n{\n         app.UseSwagger();\n         app.UseSwaggerUI();\n}\n```", "```cs\nif (app.Environment.IsDevelopment())\n{\n           // your code here\n}\nif (app.Environment.IsStaging())\n{\n           // your code here\n}\nif (app.Environment.IsProduction())\n{\n           // your code here\n}\n```", "```cs\nif (app.Environment.IsEnvironment(\"TestEnvironment\"))\n{\n           // your code here\n}\n```", "```cs\napp.MapPost(\"/weatherforecast\", async (WeatherForecast \n    model, IWeatherService repo) =>\n{\n         // ...\n});\n```"]