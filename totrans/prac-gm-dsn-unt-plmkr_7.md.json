["```cs\nusing UnityEngine;\nusing System.Collections;\n\n// You have to add System in order to access the Convert class\nusing System;\n\npublic class KongregateAPI : MonoBehaviour \n{\n  // We are going to check this variable to confirm that\n  // Kongregate connection is established\n  public static bool isKongregate = false;\n\n  // Player ID\n  public static int userId;\n\n  // Player account name. This can be used for greeting the player,\n  // for example\n  public static string userName;\n\n  // Game ID\n  public static string gameAuthToken;\n\n  void Start()\n  {\n    // Establishing connection with Kongregate\n    // Make sure that the game object this script is attached to\n    // is in the first scene that gets loaded,\n    // and that the name of the object it is attached to is KongregateAPI\n    Application.ExternalEval(\n    \"if(typeof(kongregateUnitySupport) != 'undefined'){\" + \" kongregateUnitySupport.initAPI('\" + gameObject.name +\"','OnKongregateAPILoaded');\" + \"};\" );\n  }\n\n  // This method gets called if the game is on Kongregate\n  void OnKongregateAPILoaded(string userInfoString)\n  {\n    Debug.Log(\"Kongregate connection established.\");\n\n    isKongregate = true;\n\n    // Kongregate returns a string of chars that we divide and save into variables\n    string[] parms = userInfoString.Split(\"|\"[0]);\n    userId = Convert.ToInt32(parms[0]);\n    userName = parms[1];\n    gameAuthToken = parms[2];\n  }\n}\n```", "```cs\nusing UnityEngine;\nusing System.Collections;\n\nnamespace HutongGames.PlayMaker.Actions\n{\n  [ActionCategory(ActionCategory.Level)]\n  [Tooltip(\"Increment the Wins variable on Kongregate.\")]\n  public class KongregateSendAction : FsmStateAction \n  {\n    public override void OnEnter()\n    {\n      if (KongregateAPI.isKongregate)\n      Application.ExternalCall(\"kongregate.stats.submit\", \"Wins\", 1);\n    }\n  }\n}\n```"]