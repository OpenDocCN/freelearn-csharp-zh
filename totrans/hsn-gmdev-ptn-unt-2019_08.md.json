["```cs\nusing UnityEngine;\n\npublic class FactoryProducer : MonoBehaviour\n{\n    public static AbstractFactory GetFactory(FactoryType factoryType)\n    {\n        switch (factoryType)\n        {\n            case FactoryType.Human:\n                AbstractFactory humanFactory = new HumanFactory();\n                return humanFactory;\n            case FactoryType.Animal:\n                AbstractFactory animalFactory = new AnimalFactory();\n                return animalFactory;\n        }\n            return null;\n    }\n}\n```", "```cs\npublic abstract class AbstractFactory\n{\n    public abstract IHuman GetHuman(HumanType humanType);\n    public abstract IAnimal GetAnimal(AnimalType animalType);\n}\n```", "```cs\npublic class HumanFactory : AbstractFactory\n{\n    public override IHuman GetHuman(HumanType humanType)\n    {\n        switch (humanType)\n        {\n            case HumanType.Beggar:\n                IHuman beggar = new Beggar();\n                return beggar;\n            case HumanType.Farmer:\n                IHuman farmer = new Farmer();\n                return farmer;\n            case HumanType.Shopowner:\n                IHuman shopowner = new Shopowner();\n                return shopowner;\n        }\n        return null;\n    }\n\n    public override IAnimal GetAnimal(AnimalType animalType)\n    {\n        return null;\n    }\n}\n```", "```cs\npublic class AnimalFactory : AbstractFactory\n{\n    public override IAnimal GetAnimal(AnimalType animalType)\n    {\n        switch (animalType)\n        {\n            case AnimalType.Cat:\n                IAnimal cat = new Cat();\n                return cat;\n            case AnimalType.Dog:\n                IAnimal dog = new Dog();\n                return dog;\n        }\n        return null;\n    }\n\n    public override IHuman GetHuman(HumanType humanType)\n    {\n        return null;\n    }\n}\n```", "```cs\npublic enum FactoryType\n{\n    Human,\n    Animal\n}\n```", "```cs\npublic enum HumanType\n{\n    Farmer,\n    Beggar,\n    Shopowner\n}\n```", "```cs\npublic enum AnimalType\n{\n    Dog,\n    Cat\n}\n```", "```cs\npublic interface IHuman\n{\n    void Speak();\n}\n```", "```cs\npublic interface IAnimal\n{\n    void Voice();\n}\n```", "```cs\nusing UnityEngine;\n\npublic class Beggar : IHuman\n{\n    public void Speak()\n    {\n        Debug.Log(\"Beggar: Do you have some change to spare?\");\n    }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class Farmer : IHuman\n{\n    public void Speak()\n    {\n            Debug.Log(\"Farmer: You reap what you sow!\");\n    }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class Shopowner : IHuman\n{\n    public void Speak()\n    {\n        Debug.Log(\"Shopowner: Do you wish to purchase something?\");\n    }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class Dog : IAnimal\n{\n    public void Voice()\n    {\n        Debug.Log(\"Dog: Woof!\");\n    }\n}\n```", "```cs\npublic class Cat : IAnimal\n{\n    public void Voice()\n    {\n        Debug.Log(\"Cat: Meow!\");\n    }\n}\n```", "```cs\npublic class NPCSpawner : MonoBehaviour\n{\n    private IAnimal m_Cat;\n    private IAnimal m_Dog;\n\n    private IHuman m_Farmer;\n    private IHuman m_Beggar;\n    private IHuman m_Shopowner;\n\n    private AbstractFactory factory;\n\n    public void SpawnAnimals()\n    {\n        factory = FactoryProducer.GetFactory(FactoryType.Animal);\n\n        m_Cat = factory.GetAnimal(AnimalType.Cat);\n        m_Dog = factory.GetAnimal(AnimalType.Dog);\n\n        m_Cat.Voice();\n        m_Dog.Voice();\n    }\n\n    public void SpawnHumans()\n    {\n        factory = FactoryProducer.GetFactory(FactoryType.Human);\n\n        m_Beggar = factory.GetHuman(HumanType.Beggar);\n        m_Farmer = factory.GetHuman(HumanType.Farmer);\n        m_Shopowner = factory.GetHuman(HumanType.Shopowner);\n\n        m_Beggar.Speak();\n        m_Farmer.Speak();\n        m_Shopowner.Speak();\n    }\n}\n```", "```cs\npublic class Client : MonoBehaviour\n{\n    public NPCSpawner m_SpawnerNPC;\n\n    public void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.U))\n        {\n            m_SpawnerNPC.SpawnHumans();\n        }\n\n        if (Input.GetKeyDown(KeyCode.A))\n        {\n            m_SpawnerNPC.SpawnAnimals();\n        }\n    }\n}\n```"]