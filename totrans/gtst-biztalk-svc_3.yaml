- en: Chapter 3. Bridges
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。桥梁
- en: 'In [Chapter 2](ch02.html "Chapter 2. Messages and Transforms"), *Messages and
    Transforms*, we covered a fundamental aspect of integration and transformation.
    But transformation is just one of the capabilities that bridges in BizTalk Services
    provide. In this chapter, we will take a closer look at bridges and the following
    features:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](ch02.html "第2章。消息和转换")中，我们介绍了集成和转换的基本方面，即*消息和转换*。但转换只是BizTalk服务中桥梁提供的能力之一。在本章中，我们将更深入地探讨桥梁和以下功能：
- en: Pipeline stages
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管道阶段
- en: Validating, enriching, and formatting messages
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证、丰富和格式化消息
- en: Lookup data
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找数据
- en: Message routing and filters
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消息路由和过滤器
- en: BizTalk Services Explorer
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BizTalk服务资源管理器
- en: 'A **bridge** is actually a **Windows Workflow Foundation** (**WF4**) behind
    the scenes. While you cannot create your own bridge definitions, three templates
    are provided for you:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**桥梁**实际上是一个**Windows Workflow Foundation**（**WF4**）的幕后操作。虽然您不能创建自己的桥梁定义，但提供了三个模板供您使用：'
- en: '| Type | Description |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| 类型 | 描述 |'
- en: '| --- | --- |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| **XML One-Way** | Caller sends XML-based messages to the bridge and expects
    no response |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| **XML 单向** | 调用者发送基于XML的消息到桥梁，并期望没有响应 |'
- en: '| **XML Request-Reply** | Caller sends XML-based messages and waits for response
    message |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| **XML 请求-响应** | 调用者发送基于XML的消息并等待响应消息 |'
- en: '| **Pass-Through** | Caller sends message in any format (XML or non-XML) in
    a one-way pattern |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| **透传** | 调用者以任何格式（XML或非XML）的单向模式发送消息 |'
- en: These templates provide some standard processing steps that you can use to act
    on or affect messages as they are processed. These steps form a pipeline of processing,
    with each step following the previous one sequentially. Each step also acts on
    the state of the message and its context from the previous step as well. There
    are also opportunities for you to add your own custom pipeline processing as we'll
    see later in this chapter.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这些模板提供了一些标准处理步骤，您可以使用它们在处理消息时对其产生影响或采取行动。这些步骤形成了一个处理管道，每个步骤依次跟随前一个步骤。每个步骤也会根据前一个步骤的消息状态及其上下文进行操作。您还有机会在本章稍后看到，添加自己的自定义管道处理。
- en: It is worth remembering that bridges are inherently stateless—there is nothing
    durably persisted during bridge processing. If a bridge fails during processing,
    the message could be lost, and so care must be taken to avoid this situation.
    We'll come back to this in much more detail later in this book in [Chapter 7](ch07.html
    "Chapter 7. Tracking and Troubleshooting"), *Tracking and Troubleshooting*.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 值得记住的是，桥梁本质上是无状态的——在桥梁处理过程中没有持久化存储的内容。如果桥梁在处理过程中失败，消息可能会丢失，因此必须小心避免这种情况。我们将在本书的第7章[跟踪和故障排除](ch07.html
    "第7章。跟踪和故障排除")中更详细地讨论这个问题。
- en: Pipeline processing
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管道处理
- en: 'Within a bridge''s pipeline, there are the following steps:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在桥梁的管道中，有以下步骤：
- en: '| Stage | Direction | Purpose |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 阶段 | 方向 | 目的 |'
- en: '| --- | --- | --- |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Message Type | Receive | Match schema to incoming message |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 消息类型 | 接收 | 将架构与传入的消息匹配 |'
- en: '| Decode | Receive | Convert incoming message to XML based on schema |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 解码 | 接收 | 根据架构将传入的消息转换为XML |'
- en: '| Validate | Receive | Determine if message is valid according to the schema
    |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 验证 | 接收 | 根据架构确定消息是否有效 |'
- en: '| Enrich | Receive | Create properties from message or context content |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| 丰富 | 接收 | 从消息或上下文内容创建属性 |'
- en: '| Transform | Receive/Send | Map the message to another message schema format
    |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 转换 | 接收/发送 | 将消息映射到另一个消息架构格式 |'
- en: '| Enrich | Send | Create properties from the message or context content |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 丰富 | 发送 | 从消息或上下文内容创建属性 |'
- en: '| Encode | Send | Get the message ready for transmission |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 编码 | 发送 | 将消息准备好进行传输 |'
- en: Of course, for two-way and pass-through bridges, things are a little different,
    as you would expect. For two-way bridges, there are no Decode and Encode stages,
    and pass-through bridges only have a single stage, Enrich.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，对于双向和透传桥梁，事情会有所不同，正如您所期望的那样。对于双向桥梁，没有解码和解码阶段，透传桥梁只有一个阶段，即丰富。
- en: Message processing
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 消息处理
- en: As BizTalk Services hosted in the cloud exposes default HTTP endpoints to the
    bridges that you publish, this means that it is possible to submit messages to
    a bridge by simply posting them to the endpoint and, with the request/reply bridge,
    receive a response.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 由于BizTalk服务在云中托管并公开默认HTTP端点给您发布的桥梁，这意味着您可以通过将消息简单发布到端点来提交消息，并且在使用请求/响应桥梁的情况下，接收响应。
- en: 'Of course, BizTalk Services provides many more message sources and destinations
    such as FTP, Service Bus queues and topics, and also line of business systems
    such as SAP that are covered in detail in [Chapter 4](ch04.html "Chapter 4. Enterprise
    Application Integration"), *Enterprise Application Integration*. The full list
    is provided in the following table:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，BizTalk 服务还提供了许多其他消息来源和目的地，例如 FTP、服务总线队列和主题，以及在第 4 章[企业应用集成](ch04.html "第
    4 章。企业应用集成")中详细说明的业务系统，如 SAP。完整的列表如下表所示：
- en: '| Transport | Source | Destination | Description |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| 传输 | 来源 | 目的地 | 描述 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| FTP | Yes | Yes | File Transfer Protocol support |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| FTP | 是 | 是 | 支持文件传输协议 |'
- en: '| SFTP | Yes | Yes | Secure File Transfer Protocol |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| SFTP | 是 | 是 | 安全文件传输协议 |'
- en: '| Service Bus Queue | Yes | Yes | Receive and send messages to/from queues
    |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| 服务总线队列 | 是 | 是 | 接收和发送队列中的消息 |'
- en: '| Service Bus Topic | Yes | Yes | Receive and send messages to/from topics
    |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 服务总线主题 | 是 | 是 | 接收和发送主题中的消息 |'
- en: '| HTTP(S) | Yes | Yes | Bridges are exposed as HTTPS endpoints by default on
    the namespace you create the service under. BizTalk Services also supports HTTP
    as a destination by allowing the calling of web services. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| HTTP(S) | 是 | 是 | 默认情况下，在您创建服务的命名空间上，网关以 HTTPS 端点形式暴露。BizTalk 服务还支持 HTTP
    作为目的地，允许调用 Web 服务。 |'
- en: '| Azure Blob Storage | No | Yes | Send a message to Azure Blob Storage |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| Azure Blob 存储 | 否 | 是 | 向 Azure Blob 存储发送消息 |'
- en: '| Relay | No | Yes | The Service Bus relay is used with BizTalk Adapter Services
    to connect to the following line of business systems:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '| 中继 | 否 | 是 | 服务总线中继与 BizTalk 适配器服务一起使用，以连接以下业务系统： |'
- en: SQL Server
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL Server
- en: Oracle DB
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oracle DB
- en: Oracle eBusiness Suite
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oracle eBusiness Suite
- en: mySAP
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mySAP
- en: Siebel
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Siebel
- en: This is covered in detail in [Chapter 4](ch04.html "Chapter 4. Enterprise Application
    Integration"), *Enterprise Application Integration*. |
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这在[第 4 章](ch04.html "第 4 章。企业应用集成")*企业应用集成*中详细说明。 |
- en: Messaging
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 消息传递
- en: 'With XML bridges, there are two stages that are used to identify received messages
    and determine what to do with those that are not expected. In order to know what''s
    not expected, the Message Types section of the bridge allows the specification
    of message schemas. Any number of schemas can be configured under the **Message
    Type Picker** dialog box as shown in the following screenshot:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 XML 网桥，有两个阶段用于识别接收到的消息并确定如何处理那些意外的消息。为了知道什么是不预期的，网桥的消息类型部分允许指定消息模式。可以在**消息类型选择器**对话框中配置任意数量的模式，如图所示：
- en: '![Messaging](img/7401EN_03_01.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![消息传递](img/7401EN_03_01.jpg)'
- en: Message Types
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 消息类型
- en: The first stage in an XML bridge is Decode. This is only applicable for flat
    files, that is, messages that are not received as XML and have a flat file schema
    specified (more on flat file schemas in [Chapter 4](ch04.html "Chapter 4. Enterprise
    Application Integration"), *Enterprise Application Integration*). While processing
    flat files in an XML bridge may sound strange, the purpose of the bridge is to
    normalize the message into an XML format as this is what allows uniformity of
    processing useful features such as transformation and enrichment. In this way,
    data in any format, for example JSON, can be received and processed. There is
    nothing to configure in the Decode stage; instead, it takes its configuration
    from the provided message types and applies the matching flat file schema to create
    an XML representation of the file. The match is made based on the schemas selected
    in the **Message Type Picker** dialog box as shown in the preceding figure. Only
    one message type can be chosen.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: XML 网桥的第一个阶段是解码。这仅适用于平面文件，即未作为 XML 接收且指定了平面文件模式的消息（有关平面文件模式的更多信息，请参阅[第 4 章](ch04.html
    "第 4 章。企业应用集成")*企业应用集成*）。虽然使用 XML 网桥处理平面文件听起来很奇怪，但网桥的目的是将消息标准化为 XML 格式，因为这允许处理有用功能（如转换和增强）的统一性。这样，任何格式的数据，例如
    JSON，都可以接收和处理。在解码阶段没有要配置的内容；相反，它从提供的消息类型中获取配置，并将匹配的平面文件模式应用于创建文件的 XML 表示形式。匹配基于在**消息类型选择器**对话框中选择的模式，如图所示。只能选择一个消息类型。
- en: After the Decode stage, the message is validated against the schemas provided.
    The only configurable property here is the Boolean setting **Report Warnings As
    Errors**. This defaults to `false,` meaning that unrecognized or invalid messages
    are still processed through the rest of the bridge. Setting this property to `true`
    will throw an error in the bridge and the message will not be processed. The caller
    (if the caller is using HTTP) will receive an **HTTP 500** status code response.
    This general "Server Error" response is generally returned with a response detailing
    the problem and providing a tracking ID that can be used to diagnose the cause.
    Fault diagnosis and troubleshooting is covered in more detail in [Chapter 7](ch07.html
    "Chapter 7. Tracking and Troubleshooting"), *Tracking and Troubleshooting*. If
    FTP is the configured source, then the file is left on the FTP server and the
    bridge will be retried up to three times after waiting a number of minutes (which
    extends over the number of retries). This behavior is not currently configurable
    in WABS.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在解码阶段之后，消息将根据提供的架构进行验证。这里唯一可配置的属性是布尔设置**将警告报告为错误**。默认为`false`，这意味着未识别或无效的消息仍然会通过桥接的其余部分进行处理。将此属性设置为`true`将在桥接中引发错误，并且消息将不会处理。调用者（如果调用者使用HTTP）将收到**HTTP
    500**状态代码响应。这种通用的“服务器错误”响应通常与详细说明问题的响应一起返回，并提供一个可用于诊断原因的跟踪ID。故障诊断和故障排除在[第7章](ch07.html
    "第7章。跟踪和故障排除")*跟踪和故障排除*中详细说明。如果配置的源是FTP，则文件将留在FTP服务器上，桥接将在等待一段时间（这超过了重试次数）后重试最多三次。此行为目前在WABS中不可配置。
- en: Enrichment
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 丰富
- en: 'Enrichment occurs at two points in the bridge: pre and post transformation.
    The enrichment stages provide the opportunity to write to message properties that
    can be used in either transformation (in the first Enrich stage) or in routing
    (post transformation). Message properties are simply name/value pairs that are
    moved through the bridge with the message itself and can be created in the Enrich
    stages.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在桥接的以下两个点上发生丰富：在转换之前和之后。丰富阶段提供了将消息属性写入的机会，这些属性可以在任一转换（在第一个丰富阶段）或路由（转换后）中使用。消息属性仅仅是与消息本身一起移动的名称/值对，可以在丰富阶段创建。
- en: 'There are several sources of data available when writing to a message property,
    and these are listed in the following table:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在写入消息属性时，有多个数据源可用，以下表列出了这些数据源：
- en: '| Source type | Purpose |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| 源类型 | 目的 |'
- en: '| --- | --- |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Soap | Access SOAP properties of the message such as the Action |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| Soap | 访问消息的SOAP属性，例如Action |'
- en: '| Http | Access HTTP headers sent by the caller |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| Http | 访问调用者发送的HTTP头 |'
- en: '| Lookup | Look up a value in a Windows Azure SQL database |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| 查找 | 在Windows Azure SQL数据库中查找值 |'
- en: '| Xpath | Look up a value using an XPath expression in the message |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| Xpath | 在消息中使用XPath表达式查找值 |'
- en: '| Ftp | Access FTP properties such as filename if source is FTP |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| Ftp | 如果源是FTP，则访问FTP属性，例如文件名 |'
- en: '| Sftp | Access SFTP properties if source is SFTP |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| Sftp | 如果源是SFTP，则访问SFTP属性 |'
- en: '| System | Provides access to the system properties such as the date/time a
    message was received |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| 系统 | 提供访问系统属性，例如接收消息的日期/时间 |'
- en: '| Brokered | Access Service Bus properties if source or destination is queue/topic
    based |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 中介 | 如果源或目的地基于队列/主题，则访问服务总线属性 |'
- en: 'Using message properties allows bridge processing to be influenced and controlled
    in two primary ways:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 使用消息属性允许桥接处理以两种主要方式受到影响和控制：
- en: '**Through transformation**: The message received from the caller can be transformed
    into a different format that is required by the final receiver. Message properties
    can be accessed.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通过转换**：从调用者接收的消息可以转换为最终接收者所需的不同格式。可以访问消息属性。'
- en: '**Through routing**: We''ll look at this in detail in a moment. Message properties
    can be used to direct a message to a particular destination.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通过路由**：我们将在稍后详细讨论这一点。消息属性可以用来将消息定向到特定的目的地。'
- en: 'Let''s look at a couple of examples. In the following figure, we have a bridge
    with two destination Service Bus queues configured, **Europe** and **Americas**.
    Assume that we would like to create a property that holds the value of a field
    in the incoming message that contains the name of the country the message is from.
    The routing bridge pattern is shown in the following screenshot:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看几个例子。在下面的图中，我们有一个配置了两个目标服务总线队列的网关，**欧洲**和**美洲**。假设我们想要创建一个属性，它包含来自消息的包含国家名称的字段值。路由网关模式如图所示：
- en: '![Enrichment](img/7401EN_03_02.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![富化](img/7401EN_03_02.jpg)'
- en: Routing bridge pattern
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 路由网关模式
- en: 'The incoming message looks like the following XML:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 进入的消息看起来如下所示：
- en: '[PRE0]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We can create an XPath property against this message as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以针对此消息创建一个XPath属性，如下所示：
- en: Click on the first Enrich stage in the designer.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设计器中单击第一个富化阶段。
- en: In the **Properties** window, double-click on the **Property Definitions** collection
    ellipsis.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**属性**窗口中，双击**属性定义**集合省略号。
- en: In the **Property Definitions** dialog box, click on **Add**.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**属性定义**对话框中，单击**添加**。
- en: Select a type of XPath.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一种XPath类型。
- en: 'Enter the following expression in the **Identifier** field:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**标识符**字段中输入以下表达式：
- en: '[PRE1]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tip
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: To easily get the XPath of an item from an XML schema, open the `.xsd` file
    in the Schema editor, select the item you want, and then look in the **Properties**
    window. The **Instance XPath** property will contain the XPath expression required
    to extract it at runtime.
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要轻松获取XML架构中项的XPath，请在架构编辑器中打开`.xsd`文件，选择您想要的项，然后查看**属性**窗口。**实例XPath**属性将包含在运行时提取所需的XPath表达式。
- en: Specify the message type of the `Order` instance.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定`Order`实例的消息类型。
- en: Enter `MappedCountry` in the **Property Name** field.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**属性名称**字段中输入`MappedCountry`。
- en: Select **string** for the **Data Type** field.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**数据类型**字段选择为**string**。
- en: Click on **OK**.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**确定**。
- en: The **Property Definitions** dialog box should now look like the following screenshot.
    At runtime, when messages are received by the bridge, the Enrich stage will extract
    the field from the message using the specified XPath and store the country value
    in the message property.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**属性定义**对话框现在应该看起来像以下截图。在运行时，当网关接收到消息时，富化阶段将使用指定的XPath从消息中提取字段，并将国家值存储在消息属性中。'
- en: '![Enrichment](img/7401EN_03_03.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![富化](img/7401EN_03_03.jpg)'
- en: Property Definitions
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 属性定义
- en: Lookups
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找
- en: Another usage of message properties is with transformation. Here, a common requirement
    is transcoding, where one value needs to be replaced with or mapped to another
    value. Code tables can be used for this purpose, and we can use the lookup capabilities
    of BizTalk Services to do this and then feed the values into a transform to replace
    the value in the message.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 消息属性的另一种用法是与转换一起使用。在这里，一个常见的需求是转码，其中一个值需要替换为或映射到另一个值。代码表可以用于此目的，我们可以使用BizTalk服务的查找功能来完成此操作，然后将值输入到转换中替换消息中的值。
- en: 'Some preparation is needed to set things up. If you recall, when you provision
    a new Windows Azure BizTalk Services instance, you can choose to create a new
    SQL Azure database to hold the various tables needed by the service. We can also
    create a table in this database to hold the transcoding data for the lookups.
    To create a table and add data to it, run the following script against the database:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 需要一些准备工作来设置这些内容。如果您还记得，当您配置新的Windows Azure BizTalk服务实例时，您可以选择创建一个新的SQL Azure数据库来存储服务所需的各种表。我们也可以在这个数据库中创建一个表来存储查找的转码数据。要创建一个表并向其中添加数据，请在数据库上运行以下脚本：
- en: '[PRE2]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The easiest way to do this is to go to the Azure Management Portal at [http://manage.windowsazure.com](http://manage.windowsazure.com)
    and click on the **SQL Databases** tab. The database created for your BizTalk
    Services instance will be named with the service name you provided, appended with
    the `_db` extension. Click on this database and then click on **Manage**. A new
    window (or tab) will open in the browser as shown in the following screenshot.
    In this window, you can select **New Query**, paste in the preceding SQL code,
    and click on **Run** to create the table and populate it with some data.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的方法是访问[Azure管理门户](http://manage.windowsazure.com)并点击**SQL数据库**选项卡。为您的BizTalk服务实例创建的数据库将使用您提供的服务名称命名，并附加`_db`扩展名。点击此数据库，然后点击**管理**。浏览器中将打开一个新窗口（或选项卡），如图所示。在此窗口中，您可以选择**新建查询**，粘贴前面的SQL代码，然后点击**运行**以创建表并填充一些数据。
- en: '![Lookups](img/7401EN_03_04.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![查找](img/7401EN_03_04.jpg)'
- en: Windows Azure SQL query editor
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Azure SQL查询编辑器
- en: 'As shown in the dialog box of **Property Definitions**, we can configure the
    Enrich stage in the bridge as before by performing the following steps:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如**属性定义**对话框所示，我们可以在桥接器中通过以下步骤配置丰富阶段，就像之前一样：
- en: Open the **Property Definitions** dialog box on the first Enrich stage.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第一个丰富阶段打开**属性定义**对话框。
- en: Select **Lookup** for the **Type** field.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**类型**字段，选择**查找**。
- en: Click on the dropdown list for the **Identifier** field and click on **Configure
    New…**.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**标识符**字段的下拉列表，然后点击**配置新…**。
- en: The dialog box will be displayed; complete it as shown in the following screenshot:![Lookups](img/7401EN_03_05.jpg)
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会显示对话框；按照以下截图所示完成它：![查找](img/7401EN_03_05.jpg)
- en: Provider configuration
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提供者配置
- en: Note
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To get the **Connection String** value, log back into the Azure Management Portal,
    click on the **SQL Databases** tab as you did earlier, and click on the WABS database
    that was created when you provisioned your service. Click on **Dashboard** and
    then click on **Show Connection Strings**. Copy the value in the ADO.NET textbox
    into this field.
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要获取**连接字符串**值，请重新登录到Azure管理门户，点击**SQL数据库**选项卡，就像之前一样，然后点击在配置服务时创建的WABS数据库。点击**仪表板**然后点击**显示连接字符串**。将ADO.NET文本框中的值复制到该字段。
- en: Click on **OK** to close the dialog box.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**以关闭对话框。
- en: For the **Lookup** property, select **MappedCountry**—this is the context property
    that was created by the XPath earlier and is used as input to the lookup.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**查找**属性，选择**MappedCountry**——这是之前由XPath创建的上下文属性，用作查找的输入。
- en: Enter `MappedCountry` in the **Property Name** field.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**属性名称**字段中输入`MappedCountry`。
- en: Select **string** in the **Data Type** dropdown.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**数据类型**下拉菜单中选择**字符串**。
- en: Check the values as shown in the following screenshot:![Lookups](img/7401EN_03_06.jpg)
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查以下截图所示值：![查找](img/7401EN_03_06.jpg)
- en: Edit Property dialog box
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 编辑属性对话框
- en: Click on **OK** to create the property.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**以创建属性。
- en: Finally, click on **OK** to close the **Property Definitions** dialog box.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击**确定**以关闭**属性定义**对话框。
- en: 'Now, when a message is received, the country name in the message is looked
    up in the database and the ISO country code will be returned and stored in the
    **MappedCountry** property. To finish off, we need to add a transformation to
    update the message itself with the following steps:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当接收到消息时，消息中的国家名称将在数据库中查找，并将ISO国家代码返回并存储在**MappedCountry**属性中。为了完成，我们需要添加一个转换来更新消息本身，以下是步骤：
- en: Right-click on the project and select **Add** | **New Item…**.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击项目并选择**添加** | **新建项…**。
- en: Select **Map** in the templates dialog box and provide a map name of `CountryNameToCountryCode.trfm`.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模板对话框中选择**映射**，并提供映射名称`CountryNameToCountryCode.trfm`。
- en: Click on **OK** to create the map.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**以创建映射。
- en: In the open map, click on the **Open Source Schema** link. Select the **PO.XSD**
    schema (from [Chapter 2](ch02.html "Chapter 2. Messages and Transforms"), *Messages
    and Transforms*).
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在开放映射中，点击**开源模式**链接。选择**PO.XSD**模式（来自[第2章](ch02.html "第2章。消息和转换"), *消息和转换*）。
- en: Do the same for the **Open Destination Schema** link.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**开放目标模式**链接也执行相同的操作。
- en: In the functoids toolbox, drag-and-drop a **Get Context Property** functoid
    to the designer (it's located in the **Misc Operations** section).
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在functoids工具箱中，将**获取上下文属性**functoid拖放到设计器中（位于**杂项操作**部分）。
- en: Double-click on the functoid on the map to configure it.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击映射上的functoid以配置它。
- en: In the **Property Name** field, enter `MappedCountry`.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**属性名称**字段中，输入`MappedCountry`。
- en: Click on **OK** to close the dialog box.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**以关闭对话框。
- en: Hold down the *Shift* key and click and hold the left mouse button on the `Order`
    node in the left-hand side schema. While still holding the left mouse button and
    the *Shift* key, drag across to the `Order` node in the right-hand side schema
    to connect them. In the pop up that is shown, select **Link by Name**. Recall
    from [Chapter 2](ch02.html "Chapter 2. Messages and Transforms"), *Messages and
    Transforms*, that this action will map every field from the source to the destination.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按住**Shift**键，并点击并按住左侧模式中的`Order`节点。在仍然按住左鼠标按钮和**Shift**键的同时，将鼠标拖动到右侧模式中的`Order`节点以连接它们。在显示的弹出窗口中，选择**按名称链接**。回想一下[第2章](ch02.html
    "第2章。消息和转换")，*消息和转换*，这个操作将映射源到目标的所有字段。
- en: Finally, you need to delete the link between the `Country` nodes on the left
    and right as you are now looking up this value in the functoid.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，您需要删除左侧和右侧的`Country`节点之间的链接，因为您现在正在functoid中查找此值。
- en: The map should now look like the following screenshot.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 地图现在应该看起来像以下截图。
- en: Note
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: There are some limits in the bridge configuration **user interface** (**UI**)
    that can make changing configuration difficult. It is worth remembering that the
    bridge is simply an XML configuration file with associated configuration files
    for each source and destination present on the bridge.
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 桥接器配置**用户界面**（**UI**）中存在一些限制，可能会使更改配置变得困难。值得记住的是，桥接器只是一个XML配置文件，以及与桥接器上每个源和目标关联的配置文件。
- en: For example, there is no way through the UI to change the database details for
    an existing lookup added in an Enrich stage. To do this, though, you simply need
    to open the `LookupProviderConfigurations.xml` file and edit the connection details.
    It is also important to notice that the username and password details for the
    connection are actually stored in this file, and it should therefore be treated
    with some care.
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，没有通过UI更改在 enrich 阶段添加的现有查找的数据库详细信息的途径。但是，要完成此操作，您只需打开`LookupProviderConfigurations.xml`文件并编辑连接详细信息。还应注意，连接的用户名和密码详细信息实际上存储在此文件中，因此应谨慎处理。
- en: '![Lookups](img/7401EN_03_07.jpg)'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![查找](img/7401EN_03_07.jpg)'
- en: The country-code map
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 国家代码地图
- en: The last step needed is to associate the map with the bridge. Double-click on
    the bridge file to open it (the `MessageFlowItinerary.bcs` file in the Solution
    Explorer).
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 需要的最后一个步骤是将地图与桥接器关联起来。双击桥接器文件以打开它（解决方案资源管理器中的`MessageFlowItinerary.bcs`文件）。
- en: Double-click on the **SimpleBridge** component.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击**SimpleBridge**组件。
- en: Scroll down to the **Transform** stage and click on the **XMLTransform** box.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到**转换**阶段，并点击**XML转换**框。
- en: In the **Properties** window, click on the elipsis (**…**) next to the **Maps**
    property.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**属性**窗口中，点击**地图**属性旁边的省略号（**…**）。
- en: The map you just created should be shown in the dialog box; just check the **Selected**
    column to enable it.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您刚刚创建的地图应该显示在对话框中；只需检查**已选择**列以启用它。
- en: Click on **OK**.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**。
- en: Routing
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 路由
- en: Now let's look at another common scenario for messaging—routing. Here, a message
    needs to be delivered to one of a number of potential endpoints depending on some
    criteria. That criteria could be based on the property of the message (such as
    where it came from) or a property in the message (a data item such as `country`).
    Such content-based routing is easily achievable with BizTalk Services, as we'll
    see.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看另一个常见的消息传递场景——路由。在这里，根据某些标准，消息需要发送到多个潜在端点之一。这些标准可能基于消息的属性（例如它来自哪里）或消息中的属性（例如`country`这样的数据项）。这种基于内容的路由可以通过BizTalk
    Services轻松实现，正如我们将看到的。
- en: It should be noted that a message cannot be sent to more than one endpoint.
    This is something BizTalk Server is capable of, but currently BizTalk Services
    is not. Instead, BizTalk Services allows you to choose between destinations based
    on the routing rules you configure.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 应注意，消息不能发送到多个端点。这是BizTalk Server能够做到的，但当前BizTalk Services不能。相反，BizTalk Services允许您根据您配置的路由规则在目的地之间进行选择。
- en: 'Look at the design in the *Routing bridge pattern* figure of the *Enrichment*
    section again. Notice that there are two possible destinations. We will now configure
    the message flow itinerary to route the message to the `Americas` destination
    if the `Country` property is `USA`; otherwise, we''ll route to `Europe`. To do
    this, we need to perform the following steps:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 再次查看*增强*部分的*路由桥梁模式*图中的设计。注意有两个可能的终点。现在我们将配置消息流行程，以便如果`Country`属性是`USA`，则将消息路由到`美洲`目的地；否则，我们将路由到`欧洲`。为此，我们需要执行以下步骤：
- en: Click on the arrow connecting the bridge to the `Americas` destination.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击连接到`美洲`目的地的桥梁的箭头。
- en: In the **Properties** window, click on the **Filter Condition** property.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**属性**窗口中，单击**筛选条件**属性。
- en: Enter `MappedCountry = '844'` or `MappedCountry = '124'`.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `MappedCountry = '844'` 或 `MappedCountry = '124'`。
- en: Now click on the arrow connecting to the `Europe` destination.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在单击连接到`欧洲`目的地的箭头。
- en: In the **Properties** window, click on the **Filter Condition** property.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**属性**窗口中，单击**筛选条件**属性。
- en: Enter `MappedCountry = '826'`.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `MappedCountry = '826'`。
- en: 'You can change the order in which the routes are evaluated by clicking on the
    bridge, and in the **Properties** window, click on the ellipsis (**…**) next to
    the **Route Ordering Table** property. A dialog box, as in the following screenshot,
    will be shown:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过单击桥梁并点击**路由顺序表**属性旁边的省略号（**…**）来更改路由的评估顺序。将显示一个对话框，如图所示：
- en: '![Routing](img/7401EN_03_08.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![路由](img/7401EN_03_08.jpg)'
- en: Changing the route order
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 更改路由顺序
- en: By using the up and down arrows, the evaluation order can be changed so that
    you can ensure that the first matching condition you want is where the message
    will be routed to.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用上下箭头，可以更改评估顺序，以确保您想要的第一匹配条件是消息将被路由到的位置。
- en: Trying it out
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 尝试一下
- en: 'As the bridge sends messages to one of the two Service Bus queues, you need
    to create these first in the Azure Management Portal. Create two queues, one called
    `europe` and the other `americas`. The connection information for these queues
    then needs to be set on each of the queue destinations on the bridge. The **Runtime
    Address** property for each takes the following form:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 由于桥梁将消息发送到两个服务总线队列之一，您需要首先在 Azure 管理门户中创建这些队列。创建两个队列，一个名为`europe`，另一个名为`americas`。然后需要在桥梁上的每个队列目的地设置这些队列的连接信息。每个队列的**运行时地址**属性采用以下形式：
- en: '`sb://<your namespace>.servicebus.windows.net/Europe`'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '`sb://<your namespace>.servicebus.windows.net/Europe`'
- en: The Authentication property also needs to be configured. The Token Provider
    type should be set to Shared Secret and the Issuer Secret set to the ACS Key for
    your Service Bus namespace.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 认证属性也需要进行配置。令牌提供者类型应设置为共享密钥，并将发行者密钥设置为您的服务总线命名空间中的 ACS 密钥。
- en: You're now ready to deploy the solution. Do this in the normal way, and once
    deployed, you will have an HTTPS endpoint deployed to which you can post messages.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已准备好部署解决方案。按照常规方式操作，一旦部署，您将有一个 HTTPS 终端已部署，您可以将消息发送到该终端。
- en: 'To send a message into the deployed bridge, you can use the BizTalk Service
    Explorer, which provides a number of useful features for managing and testing
    your solutions. It is an extension to Visual Studio and can be set up as follows:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 要将消息发送到已部署的桥梁，您可以使用 BizTalk 服务资源管理器，它提供了一些用于管理和测试解决方案的有用功能。它是 Visual Studio
    的一个扩展，可以按照以下方式设置：
- en: Launch Visual Studio 2012, and in the **Tools** menu, select **Extensions and
    Updates…**.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Visual Studio 2012，然后在**工具**菜单中选择**扩展和更新…**。
- en: Click on the **Online** link in the top-left corner, and in the search box,
    enter `biztalk service explorer` as shown in the following screenshot:![Trying
    it out](img/7401EN_03_09.jpg)
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左上角单击**在线**链接，然后在搜索框中输入`biztalk service explorer`，如图所示：![尝试一下](img/7401EN_03_09.jpg)
- en: Installing BizTalk Service Explorer
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 安装 BizTalk 服务资源管理器
- en: Click on the **Download** button, which will download an MSI file. Double-click
    on it to install and relaunch Visual Studio.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**下载**按钮，这将下载一个 MSI 文件。双击它以安装并重新启动 Visual Studio。
- en: On the **View** menu, select **Server Explorer**.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**视图**菜单中，选择**服务器资源管理器**。
- en: The **Server Explorer** window will have a new node, **Windows Azure BizTalk
    Services**; right-click on it and select **Add BizTalk Service…** as shown in
    the following screenshot:![Trying it out](img/7401EN_03_10.jpg)
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**服务器资源管理器**窗口将会有一个新节点，**Windows Azure BizTalk 服务**；右键单击它，并选择**添加 BizTalk 服务…**，如图所示：![尝试一下](img/7401EN_03_10.jpg)'
- en: Adding a BizTalk Service instance
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加 BizTalk 服务实例
- en: In the dialog box that appears, enter the details of your service instance as
    shown in the following screenshot, replacing the details with your values as appropriate,
    and click on **OK**:![Trying it out](img/7401EN_03_11.jpg)
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的对话框中，输入你的服务实例的详细信息，如图所示，用适当的值替换详细信息，然后点击**确定**：![尝试操作](img/7401EN_03_11.jpg)
- en: Configuring the Explorer
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 配置探索器
- en: Now that you have the Explorer set up, expand the **Bridges** node and right-click
    on the bridge you just deployed and click on **Send Test Message…**.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你已经设置了探索器，展开**桥接器**节点，右键单击你刚刚部署的桥接器，然后点击**发送测试消息…**。
- en: In the dialog box that appears, paste the test message from the start of this
    chapter as shown in the following screenshot and click on the **Send** button:![Trying
    it out](img/7401EN_03_12.jpg)
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的对话框中，粘贴本章开头的测试消息，如图所示，然后点击**发送**按钮：![尝试操作](img/7401EN_03_12.jpg)
- en: Testing a bridge
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 测试桥接器
- en: When you do this, remember that depending on the value you set `Country` to
    in the input message, you can direct messages to either the `Europe` or the `Americas`
    queue, as shown in the *Routing bridge pattern* figure of the *Enrichment* section,
    by using the values `UK`, `USA`, or `CANADA`.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 当你这样做时，请记住，根据你在输入消息中设置的`Country`值，你可以通过使用`UK`、`USA`或`CANADA`的值，将消息直接发送到`Europe`或`Americas`队列，如图所示在*增强*部分的*路由桥接器模式*图中。
- en: To view the contents of a queue, you can use the Service Bus Explorer application
    that you can download from [http://code.msdn.microsoft.com/windowsazure/Service-Bus-Explorer-f2abca5a](http://code.msdn.microsoft.com/windowsazure/Service-Bus-Explorer-f2abca5a).
    The following screenshot shows the `Europe` destination queue containing the message
    we just posted into the bridge. Notice the `Country` node in the message contains
    the value `826` from the SQL lookup table, replacing the value `UK` that was in
    the original message.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看队列的内容，你可以使用可以从[http://code.msdn.microsoft.com/windowsazure/Service-Bus-Explorer-f2abca5a](http://code.msdn.microsoft.com/windowsazure/Service-Bus-Explorer-f2abca5a)下载的Service
    Bus Explorer应用程序。以下截图显示了包含我们刚刚发布到桥接器的消息的`Europe`目标队列。注意消息中的`Country`节点包含来自SQL查找表的值`826`，替换了原始消息中的`UK`值。
- en: '![Trying it out](img/7401EN_03_13.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![尝试操作](img/7401EN_03_13.jpg)'
- en: Viewing a message in the queue
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 查看队列中的消息
- en: Try changing the test message country to one that is not in the lookup table
    to see what happens. If you enter a country that does not exist, the lookup will
    fail. You will actually get a 500 HTTP response code back with a SOAP fault error
    message **Lookup returned no results**. Now try changing the value of `UK` in
    the lookup table to, say, `123`. What will happen now is that the route will fail
    as there is no match to either destination. You will get back the same HTTP 500
    code, but this time with a SOAP fault of **No Filter matched for the message**.
    Have fun experimenting on your own!
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试更改测试消息的国家为不在查找表中的国家，看看会发生什么。如果你输入一个不存在的国家，查找将失败。你实际上会收到一个500 HTTP响应代码，并带有SOAP错误消息**查找未返回结果**。现在尝试将查找表中的`UK`值更改为，比如说，`123`。现在会发生的情况是路由将失败，因为没有匹配到任何目的地。你将收到相同的HTTP
    500代码，但这次带有SOAP错误**消息没有匹配的过滤器**。自己尝试实验，享受乐趣！
- en: Brokered messaging
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代理消息
- en: If you refer back to the table in the *Enrichment* section, you may have been
    intrigued by the Brokered property type. Messages that flow through bridges received
    from Service Bus are based on the Service Bus BrokeredMessage type (see [http://msdn.microsoft.com/en-us/library/microsoft.servicebus.messaging.brokeredmessage.aspx](http://msdn.microsoft.com/en-us/library/microsoft.servicebus.messaging.brokeredmessage.aspx)
    for more details). This class provides a number of properties that are exposed
    in BizTalk Services such as `CorrelationId`, `MessageId`, and `SessionId`. What
    is really interesting about this is that when you are using the Service Bus Queue
    or Topic destination, properties you create in the bridge (any property, not just
    brokered properties) or properties set on received messages when Service Bus is
    the source are not just accessible inside the bridge, but outside of it as well.
    This is very useful for passing state from BizTalk Services to a downstream application
    consuming messages from a queue as that application will be able to see the properties
    you set in the bridge.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您回顾了 *增强* 部分的表格，您可能会对代理属性类型感到好奇。通过桥梁流动的消息基于服务总线的 BrokeredMessage 类型（有关更多详细信息，请参阅
    [http://msdn.microsoft.com/en-us/library/microsoft.servicebus.messaging.brokeredmessage.aspx](http://msdn.microsoft.com/en-us/library/microsoft.servicebus.messaging.brokeredmessage.aspx)）。此类提供了一系列在
    BizTalk 服务中公开的属性，如 `CorrelationId`、`MessageId` 和 `SessionId`。真正有趣的是，当您使用服务总线队列或主题目标时，在桥梁中创建的属性（任何属性，而不仅仅是代理属性）或当服务总线是源时在接收消息上设置的属性不仅可以在桥梁内部访问，还可以在外部访问。这对于将状态从
    BizTalk 服务传递到消费队列消息的下游应用程序非常有用，因为该应用程序将能够看到您在桥梁中设置的属性。
- en: Note that though this is only applicable for Service Bus sources and destinations,
    if you were to chain one bridge to another, for example, you would not be able
    to pass these properties because chaining actually makes calls over HTTP and thus
    loses the context. Instead, if you wish to pass properties between bridges and
    from a bridge to another application, you must write the properties to the message
    header (in the case of HTTP) in order to preserve them. However, if you are chaining
    via Service Bus, then properties set in the first sending bridge will be accessible
    in the second receiving bridge.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，尽管这仅适用于服务总线源和目标，但如果要将一个桥梁链接到另一个桥梁，例如，您将无法传递这些属性，因为链接实际上是通过 HTTP 进行调用，从而丢失了上下文。相反，如果您希望在桥梁之间或从桥梁到另一个应用程序之间传递属性，您必须将属性写入消息头（在
    HTTP 的情况下）以保留它们。然而，如果您通过服务总线进行链接，则第一个发送桥梁中设置的属性将在第二个接收桥梁中可访问。
- en: Summary
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have taken a closer look at the fundamental construct of
    Windows Azure BizTalk Services—the bridge. We've seen how bridges can be configured
    to perform a range of integration activities and how to perform content and context-based
    routing. While we have looked at most of what bridges can do, in the next chapter,
    we'll revisit bridges and look at how to perform custom logic on the stages in
    a bridge using message inspectors. We'll then look at how to track and record
    the message properties you create (tracking) and how to batch messages together
    for sending.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们更深入地探讨了 Windows Azure BizTalk 服务的基本构建块——桥梁。我们看到了如何配置桥梁以执行一系列集成活动，以及如何执行基于内容和上下文的路由。虽然我们已经了解了桥梁的大部分功能，但在下一章中，我们将重新审视桥梁，并探讨如何使用消息检查器在桥梁的阶段上执行自定义逻辑。然后，我们将探讨如何跟踪和记录创建的消息属性（跟踪）以及如何批量发送消息。
