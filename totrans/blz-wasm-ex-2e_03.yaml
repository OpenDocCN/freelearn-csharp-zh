- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: Debugging and Deploying a Blazor WebAssembly App
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试和部署 Blazor WebAssembly 应用
- en: Debugging is not always fun, but it is an important aspect of software development.
    When debugging a Blazor WebAssembly app, Microsoft Visual Studio provides most
    of the functionality we need. However, since apps built with Blazor WebAssembly
    run on the client, we also need to learn how to use the browser’s **developer
    tools** (**DevTools**) to debug the app. After we finish debugging a Blazor WebAssembly
    app, we can use Microsoft Visual Studio to deploy it.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 调试并不总是愉快的，但它却是软件开发的重要方面。当调试 Blazor WebAssembly 应用时，Microsoft Visual Studio 提供了我们所需的大部分功能。然而，由于使用
    Blazor WebAssembly 构建的应用在客户端运行，我们还需要学习如何使用浏览器的 **开发者工具** (**DevTools**) 来调试应用。完成
    Blazor WebAssembly 应用的调试后，我们可以使用 Microsoft Visual Studio 来部署它。
- en: In this chapter, we will create a simple game that we will use to practice both
    debugging and deploying a Blazor WebAssembly app. We will debug the app using
    both Visual Studio and `DevTools`. We will learn how to log errors using the ILogger
    interface and we will examine different ways to handle exceptions. After we have
    completed the debugging, we will apply **ahead-of-time** (**AOT**) compilation
    to the app before deploying it to Microsoft Azure.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将创建一个简单的游戏，我们将用它来练习调试和部署 Blazor WebAssembly 应用。我们将使用 Visual Studio 和
    `DevTools` 来调试应用。我们将学习如何使用 ILogger 接口记录错误，并探讨处理异常的不同方法。完成调试后，我们将在部署到 Microsoft
    Azure 之前对应用应用 **即时编译** (**AOT**) 技术。
- en: Shift+Alt+D
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Shift+Alt+D
- en: ''
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: debugging in the browser.
  id: totrans-6
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在浏览器中进行调试。
- en: ''
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Knowledge is power!
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 知识就是力量！
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Debugging a Blazor WebAssembly app
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试 Blazor WebAssembly 应用
- en: Understanding logging
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解日志记录
- en: Handling exceptions
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理异常
- en: Using **ahead-of-time** (**AOT**) compilation
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 **即时编译** (**AOT**) 技术
- en: Deploying a Blazor WebAssembly app to Microsoft Azure
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Blazor WebAssembly 应用部署到 Microsoft Azure
- en: Creating the “guess the number” project
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建“猜数字”项目
- en: Technical requirements
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To complete this project, you need to have Microsoft Visual Studio 2022 installed
    on your PC. For instructions on how to install the free community edition of Microsoft
    Visual Studio 2022, refer to *Chapter 1*, *Introduction to Blazor WebAssembly*.
    Since we will be deploying this project to Microsoft Azure, you will need an account
    on Microsoft Azure. If you do not have an account on Microsoft Azure, refer to
    *Chapter 1*, *Introduction to Blazor WebAssembly*, to create a free account.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成此项目，您需要在您的电脑上安装 Microsoft Visual Studio 2022。有关如何安装 Microsoft Visual Studio
    2022 的免费社区版的说明，请参阅 *第 1 章*，*Blazor WebAssembly 简介*。由于我们将部署此项目到 Microsoft Azure，您需要在
    Microsoft Azure 上有一个账户。如果您没有 Microsoft Azure 账户，请参阅 *第 1 章*，*Blazor WebAssembly
    简介*，以创建一个免费账户。
- en: 'The source code for this chapter is available in the following GitHub repository:
    [https://github.com/PacktPublishing/Blazor-WebAssembly-by-Example-Second-Edition/tree/main/Chapter03](https://github.com/PacktPublishing/Blazor-WebAssembly-by-Example-Second-Edition/tree/main/Chapter03).'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的源代码可在以下 GitHub 仓库中找到：[https://github.com/PacktPublishing/Blazor-WebAssembly-by-Example-Second-Edition/tree/main/Chapter03](https://github.com/PacktPublishing/Blazor-WebAssembly-by-Example-Second-Edition/tree/main/Chapter03)。
- en: 'The Code in Action video is available here: [https://packt.link/Ch3](https://packt.link/Ch3).'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 代码实战视频在此处可用：[https://packt.link/Ch3](https://packt.link/Ch3)。
- en: Debugging a Blazor WebAssembly.app
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试 Blazor WebAssembly.app
- en: 'Debugging is an important and useful skill. You can debug a Blazor WebAssembly
    app by using the debugging tools within Visual Studio or by using `DevTools`.
    To debug on the browser, you must use one of the following browsers:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 调试是一项重要且有用的技能。您可以使用 Visual Studio 内置的调试工具或使用 `DevTools` 来调试 Blazor WebAssembly
    应用。要在浏览器上进行调试，您必须使用以下浏览器之一：
- en: Microsoft Edge (version 80 or later)
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft Edge（版本 80 或更高）
- en: Google Chrome (version 70 or later)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Chrome（版本 70 或更高）
- en: 'All the usual debugging scenarios are supported by both Visual Studio and `DevTools`:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 和 `DevTools` 都支持所有常规的调试场景：
- en: Setting and removing breakpoints.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置和移除断点。
- en: Pressing *F10* to single-step through the code.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按 *F10* 以单步执行代码。
- en: Pressing *F11* to step into the next function.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按 *F11* 以进入下一个函数。
- en: Pressing *F5* in Visual Studio and *F8* in the browser to resume code execution.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中按 *F5* 和在浏览器中按 *F8* 以恢复代码执行。
- en: Viewing the value of local variables in the `Locals` display.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“局部变量”显示中查看局部变量的值。
- en: Viewing the `Call Stack`.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看调用栈。
- en: Setting `Watch` values.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置“监视”值。
- en: 'The following scenarios are not currently supported. But, since Microsoft is
    continuing to make large improvements to the debugging process, they will be supported
    in the future:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以下场景目前不支持。但是，由于微软正在继续对调试过程进行大量改进，它们将在未来得到支持：
- en: Breaking on unhandled exceptions.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在未处理的异常上中断。
- en: Hitting the breakpoints during startup.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在启动时触达断点。
- en: First, we will look at debugging in Visual Studio.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将查看 Visual Studio 中的调试。
- en: Debugging in Visual Studio
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Visual Studio 中的调试
- en: If you have any experience with using Visual Studio, you probably have used
    the debugging tools. To start debugging, select **Debug**, **Start Debugging**
    from the Visual Studio menu, or press *F5*.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有任何使用 Visual Studio 的经验，你可能已经使用过调试工具。要开始调试，从 Visual Studio 菜单中选择 **调试**，**开始调试**，或按
    *F5*。
- en: Once you have started debugging, you can use any of the scenarios listed above
    to debug the code. For example, to set a breakpoint on a line of code, simply
    click in the margin to the left of the line code.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦开始调试，你可以使用上述列出的任何场景来调试代码。例如，要在代码行上设置断点，只需单击该行左侧的空白处。
- en: 'The following screenshot shows a breakpoint that has been set on line 36:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了在第 36 行设置的断点：
- en: '![Graphical user interface, text, application  Description automatically generated](img/B18471_03_01.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序  自动生成的描述](img/B18471_03_01.png)'
- en: 'Figure 3.1: Breakpoint in Visual Studio'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1：Visual Studio 中的断点
- en: Debugging in Visual Studio is as easy as pressing *F5*. Debugging in the browser
    requires a bit more effort.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中调试就像按 *F5* 一样简单。在浏览器中调试需要更多努力。
- en: Debugging in the browser
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 浏览器中的调试
- en: 'Debugging a Blazor WebAssembly app on the browser takes a few steps. The following
    image shows the steps required to start debugging an app in the browser:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中调试 Blazor WebAssembly 应用需要几个步骤。以下图像显示了在浏览器中开始调试应用程序所需的步骤：
- en: '![](img/B18471_03_02.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18471_03_02.png)'
- en: 'Figure 3.2: Enabling debugging in the browser'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2：在浏览器中启用调试
- en: 'These are the steps to enable debugging in the browser:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是启用浏览器调试的步骤：
- en: Press *Ctrl*+*F5* to start the application without debugging.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Ctrl*+*F5* 启动应用程序，无需调试。
- en: Press *Shift*+*Alt*+*D* to start debugging.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Shift*+*Alt*+*D* 开始调试。
- en: '**TIP**'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**提示**'
- en: To successfully start debugging, make sure that your application has focus before
    pressing *Shift*+*Alt*+*D*.
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要成功开始调试，确保在按 *Shift*+*Alt*+*D* 之前你的应用程序具有焦点。
- en: 'Since your browser is not yet running with remote debugging enabled, after
    you press *Shift*+*Alt*+*D*, you will receive the following warning:'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于你的浏览器尚未启用远程调试运行，在你按 *Shift*+*Alt*+*D* 之后，你会收到以下警告：
- en: '![Text  Description automatically generated](img/B18471_03_03.png)'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![文本  自动生成的描述](img/B18471_03_03.png)'
- en: 'Figure 3.3: Unable to find debuggable browser tab warning'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.3：无法找到可调试浏览器标签警告
- en: The **Unable to find debuggable browser tab** warning gives instructions on
    how to proceed for both Google Chrome and Microsoft Edge. Since we are using Microsoft
    Edge for these screenshots, we have highlighted the instructions for Microsoft
    Edge in the preceding image.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**无法找到可调试浏览器标签** 警告提供了关于如何进行操作的说明，适用于 Google Chrome 和 Microsoft Edge。由于我们使用
    Microsoft Edge 进行这些截图，我们在前面的图像中突出显示了 Microsoft Edge 的说明。'
- en: To enable debugging in the browser, we need to copy the provided text from the
    **Unable to find debuggable browser tab** warning to the Windows run command dialog
    box. Press *Win*+*R* to open the run command dialog box, paste the text, and press
    *Enter*.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在浏览器中启用调试，我们需要将提供的文本从 **无法找到可调试浏览器标签** 警告复制到 Windows 运行命令对话框中。按 *Win*+*R* 打开运行命令对话框，粘贴文本，然后按
    *Enter*。
- en: This process will launch another browser window that has debugging enabled.
    If you are asked to sync your devices, you can select **No**.
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此过程将启动另一个具有调试功能的浏览器窗口。如果你被要求同步你的设备，你可以选择 **否**。
- en: Close the previous browser window.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭之前的浏览器窗口。
- en: This step is not required. We have included it because it can be confusing to
    have multiple browsers open.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此步骤不是必需的。我们包括它是因为同时打开多个浏览器可能会造成混淆。
- en: Press *Shift*+*Alt*+*D*.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Shift*+*Alt*+*D*。
- en: We have enabled debugging on the browser.
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们已在浏览器中启用了调试。
- en: 'There are now two tabs open in the browser. The first tab is running the app
    and the second tab is running `DevTools`:'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在浏览器中有两个标签页打开。第一个标签页正在运行应用程序，第二个标签页正在运行 `DevTools`：
- en: '![Graphical user interface, text, application, email  Description automatically
    generated](img/B18471_03_04.png)'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序，电子邮件  自动生成的描述](img/B18471_03_04.png)'
- en: 'Figure 3.4: Browser with debugging enabled'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.4：启用调试的浏览器
- en: The preceding image shows the `DevTools` tab. The area on the left is inactive.
    It is used to display the screen contents from the other tab. The **Console**
    tab in `DevTools` is selected. However, the **Sources** tab is the one that we
    will use for debugging.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述图像显示了 `DevTools` 标签。左侧区域是无效的。它用于显示其他标签的屏幕内容。`DevTools` 中的 **控制台** 标签已选中。然而，我们将使用
    **源** 标签进行调试。
- en: Once we have started debugging, we can use any of the scenarios listed above
    to debug the code. For example, to set a breakpoint on a line of code, we simply
    click in the margin to the left of the line code.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦开始调试，我们可以使用上述列出的任何场景来调试代码。例如，要在代码行上设置断点，我们只需在代码行左侧的空白处单击。
- en: 'The following screenshot shows a breakpoint that has been set on line 36:'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下截图显示了已设置在第 36 行的断点：
- en: '![Graphical user interface, text, application, email  Description automatically
    generated](img/B18471_03_05.png)'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序，电子邮件 描述自动生成](img/B18471_03_05.png)'
- en: 'Figure 3.5: Source tab of DevTools'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.5：DevTools 的源标签
- en: It is possible to debug a Blazor WebAssembly app using Visual Studio or directly
    in the browser. Enabling debugging in the browser takes a little more effort,
    but offers the same robust features as found in Visual Studio.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Visual Studio 或直接在浏览器中调试 Blazor WebAssembly 应用程序是可能的。在浏览器中启用调试需要更多的努力，但提供了与
    Visual Studio 中相同的功能。
- en: By efficiently using logging, debugging can be more efficient. Next, we will
    learn how to use logging in a Blazor WebAssembly app.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 通过有效地使用日志，调试可以更加高效。接下来，我们将学习如何在 Blazor WebAssembly 应用程序中使用日志。
- en: Understanding logging
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解日志记录
- en: Logging is an essential tool for troubleshooting any application. It helps to
    identify and solve problems. Logging is enabled by default in the Blazor WebAssembly
    project templates provided by Microsoft. However, the only logging provider that
    is enabled is the **Console** provider.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 记录日志是解决任何应用程序问题的基本工具。它有助于识别和解决问题。在微软提供的 Blazor WebAssembly 项目模板中，日志默认是启用的。然而，启用的唯一日志提供者是**控制台**提供者。
- en: '**IMPORTANT NOTE**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: The **Console** provider does not store the logs, it only displays them. If
    you need to retain your logs, you will need to use a different provider.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**控制台** 提供者不存储日志，它只显示它们。如果您需要保留日志，您将需要使用不同的提供者。'
- en: 'The following code sample does the following:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码示例执行以下操作：
- en: Injects an `ILogger<Counter>` object into the page. It uses the fully qualified
    name of the class type as the log category. The log category is included with
    each log message that is created by that instance of `ILogger`.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 `ILogger<Counter>` 对象注入到页面中。它使用类的完全限定名称作为日志类别。该日志类别包含由该 `ILogger` 实例创建的每个日志消息。
- en: Calls `LogInformation` to log the indicated string at the `Information` log
    level.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用 `LogInformation` 以在 `Information` 日志级别记录指定的字符串。
- en: 'The following code writes to the log each time the button is clicked:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码在每次点击按钮时都会写入日志：
- en: '**Counter.razor**'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**Counter.razor**'
- en: '[PRE0]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The following screenshot of the **Console** tab within `DevTools` shows the
    results of clicking the **Click me** button:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了 `DevTools` 中的 **控制台** 标签的结果，显示了点击 **点击我** 按钮的结果：
- en: '![Graphical user interface, text, application, email  Description automatically
    generated](img/B18471_03_06.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序，电子邮件 描述自动生成](img/B18471_03_06.png)'
- en: 'Figure 3.6: Logging example'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.6：日志示例
- en: Understanding log levels
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解日志级别
- en: Whenever we log an item to the logger, we must provide the log level. The log
    level indicates the severity of the message.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我们向记录器记录一个项目时，我们必须提供日志级别。日志级别表示消息的严重性。
- en: 'The following table lists the log level values from the lowest to the highest
    level of severity:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了从最低到最高严重程度的日志级别值：
- en: '| Log Level | Method | Description |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 日志级别 | 方法 | 描述 |'
- en: '| Trace | `LogTrace` | These messages are extremely detailed and may contain
    sensitive data. They are disabled by default and should never be enabled in production.
    |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| Trace | `LogTrace` | 这些消息非常详细，可能包含敏感数据。它们默认是禁用的，不应在生产环境中启用。 |'
- en: '| Debug | `LogDebug` | These messages are used only during debugging and development.
    |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| Debug | `LogDebug` | 这些消息仅在调试和开发期间使用。 |'
- en: '| Information | `LogInformation` | These messages track the general flow of
    the application. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| Information | `LogInformation` | 这些消息跟踪应用程序的一般流程。 |'
- en: '| Warning | `LogWarning` | These messages are for unexpected or abnormal events.
    |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| Warning | `LogWarning` | 这些消息用于意外或不正常的事件。 |'
- en: '| Error | `LogError` | These messages are for errors in the current operation,
    such as a failed save. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 错误 | `LogError` | 这些消息是针对当前操作中的错误，例如保存失败。|'
- en: '| Critical | `LogCritical` | These messages are for critical errors that cause
    the entire application to fail. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 严重 | `LogCritical` | 这些消息是针对导致整个应用程序失败的严重错误。|'
- en: 'Table 3.1: Log levels'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 表 3.1：日志级别
- en: '**TIP**'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: You should use `ILogger` rather than `System.Console.WriteLine` or `System.Diagnostics.Debug.WriteLine`
    since those methods only allow you to send text to the console and they do not
    include the name of the class that originated the message. Also, they must be
    either removed or hidden before the app is deployed.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该使用 `ILogger` 而不是 `System.Console.WriteLine` 或 `System.Diagnostics.Debug.WriteLine`，因为那些方法只能让您将文本发送到控制台，并且它们不包括产生消息的类的名称。此外，它们必须在应用程序部署之前被删除或隐藏。
- en: When using logging, try to log using the appropriate log level and try to make
    your messages as short as possible without rendering them meaningless. Use a consistent
    format for your messages so that they can be easily filtered. Finally, avoid logging
    redundant or irrelevant information because logging is not free; it consumes some
    resources.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用日志记录时，请尝试使用适当的日志级别，并尽量使您的消息尽可能简短，同时不要使其失去意义。使用一致的消息格式，以便它们可以轻松过滤。最后，避免记录冗余或不相关信息，因为日志记录不是免费的；它消耗一些资源。
- en: You can adjust the minimum log level as necessary.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以根据需要调整最小日志级别。
- en: 'The following `Logging` component demonstrates how to use each of the various
    log levels:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 以下 `Logging` 组件演示了如何使用各种不同的日志级别：
- en: '**Logging.razor**'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**Logging.razor**'
- en: '[PRE1]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The following screenshot shows how each of the different log levels is rendered
    in `DevTools`.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了在 `DevTools` 中如何渲染不同的日志级别。
- en: '![Text  Description automatically generated](img/B18471_03_07.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![文本描述自动生成](img/B18471_03_07.png)'
- en: 'Figure 3.7: Log levels'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.7：日志级别
- en: Setting the minimum log level
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置最小日志级别
- en: 'By default, the project is configured to display all the logged items with
    a minimum log level of `Information`. You can adjust this setting by completing
    the following steps:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，项目配置为显示所有日志项，其最小日志级别为 `Information`。您可以通过完成以下步骤来调整此设置：
- en: From the **Tools** menu, select **NuGet Package Manager**, **Package Manager
    Console** to open the **Package Manager Console**.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **工具** 菜单中选择 **NuGet 包管理器**，**包管理器控制台** 以打开 **包管理器控制台**。
- en: 'Enter the following text into the **Package Manager Console** and press the
    *Enter* key:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **包管理器控制台** 中输入以下文本并按 *Enter* 键：
- en: '[PRE2]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The preceding code will add the **Microsoft.Extenstions.Logging.Configuration**
    NuGet package to the project.
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码将向项目中添加 **Microsoft.Extenstions.Logging.Configuration** NuGet 包。
- en: Right-click the `wwwroot` folder and select the **Add**, **New Item** option
    from the menu.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击 `wwwroot` 文件夹，从菜单中选择 **添加**，**新建项** 选项。
- en: Press *Ctrl*+*E* to enter the **Search** textbox.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Ctrl*+*E* 进入 **搜索** 文本框。
- en: Enter `app settings file` in the **Search** textbox.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **搜索** 文本框中输入 `app settings file`。
- en: Enter `appsettings.json` in the **Name** textbox and click the **Add** button.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **名称** 文本框中输入 `appsettings.json` 并单击 **添加** 按钮。
- en: 'Replace the default JSON with the following JSON:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将默认的 JSON 替换为以下 JSON：
- en: '[PRE3]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Add the following line to the `Main` method of the `Client/Program.cs` file:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下行添加到 `Client/Program.cs` 文件的 `Main` 方法中：
- en: '[PRE4]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The proceeding code will configure the browser to only log items that have a
    log level of at least `Debug`.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将配置浏览器仅记录日志级别至少为 `Debug` 的项目。
- en: Logging is an essential tool for understanding the flow of a Blazor WebAssembly
    app. There are different log levels depending on the type of message. The minimum
    log level displayed can be adjusted with an `appsetting.json` file.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 日志记录是理解 Blazor WebAssembly 应用程序流程的必要工具。根据消息类型，有不同的日志级别。最小日志级别可以通过 `appsetting.json`
    文件进行调整。
- en: Now let’s look at some different ways to handle exceptions.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看一些处理异常的不同方法。
- en: Handling exceptions
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理异常
- en: 'As part of the template, when an unhandled exception occurs in a Blazor WebAssembly
    app, a yellow bar is displayed at the bottom of the screen:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 作为模板的一部分，当 Blazor WebAssembly 应用程序中出现未处理的异常时，屏幕底部将显示一个黄色条。
- en: '![Graphical user interface, text, application, chat or text message  Description
    automatically generated](img/B18471_03_08.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面、文本、应用程序、聊天或文本消息描述自动生成](img/B18471_03_08.png)'
- en: 'Figure 3.8: Sample unhandled exception'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.8：示例未处理的异常
- en: 'You can modify the text and style of the error message that is displayed by
    modifying the `index.html` file. The UI for the yellow bar is defined in the `wwwroot/index.html`
    file:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过修改 `index.html` 文件来修改显示的错误消息的文本和样式。黄色条目的 UI 在 `wwwroot/index.html` 文件中定义：
- en: '[PRE5]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**TIP**'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: You can modify the style of the error message that is displayed in the `wwwroot/css/app.css`
    file.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以修改在 `wwwroot/css/app.css` 文件中显示的错误消息的样式。
- en: 'In the preceding screenshot, clicking the **Throw Exception** button throws
    an unhandled exception. This is the code for the `ThrowException` component that
    we used to create the **Throw Exception** button in the preceding screenshot:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，点击 **抛出异常** 按钮会抛出一个未处理的异常。这是我们在前面的截图中用于创建 **抛出异常** 按钮的 `ThrowException`
    组件的代码：
- en: '[PRE6]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To view the exception, we need to open `DevTools` by pressing *F12* and selecting
    the **Console** tab. By default, unhandled exceptions are logged to the **Console**.
    The following screenshot shows the **Console** tab:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看异常，我们需要通过按 *F12* 并选择 **控制台** 标签来打开 `DevTools`。默认情况下，未处理的异常会被记录到 **控制台**。以下截图显示了
    **控制台** 标签：
- en: '![Text  Description automatically generated](img/B18471_03_09.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![文本 描述自动生成](img/B18471_03_09.png)'
- en: 'Figure 3.9: Sample critical log'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.9：示例关键日志
- en: In a perfect world, there are not any unhandled exceptions. In our world, there
    are error boundaries and custom error components.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个完美的世界中，没有未处理的异常。在我们的世界中，有错误边界和自定义错误组件。
- en: Setting error boundaries
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置错误边界
- en: Error boundaries can be used to handle exceptions. The **ErrorBoundary** component
    is a built-in component used to handle unhandled errors at the UI level. It includes
    a **ChildContent** property that renders when an error has not occurred and an
    **ErrorContent** property that renders when an error has occurred. The `ErrorBoundary`
    component can be wrapped around any other component.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 错误边界可以用来处理异常。`ErrorBoundary` 组件是一个用于在 UI 层面处理未处理错误的内置组件。它包括一个在未发生错误时渲染的 **ChildContent**
    属性和一个在发生错误时渲染的 **ErrorContent** 属性。`ErrorBoundary` 组件可以包裹在任意其他组件周围。
- en: 'The following code wraps an `ErrorBoundary` component around the `ThrowException`
    component:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将 `ErrorBoundary` 组件包裹在 `ThrowException` 组件周围：
- en: '[PRE7]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'When the **Throw Exception** button is pressed, the following information will
    be displayed:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 当按下 **抛出异常** 按钮时，将显示以下信息：
- en: '![Graphical user interface  Description automatically generated](img/B18471_03_10.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面 描述自动生成](img/B18471_03_10.png)'
- en: 'Figure 3.10: Default ErrorBoundary UI'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.10：默认 ErrorBoundary UI
- en: 'The default UI for the `ErrorBoundary` component is defined in the `wwwroot/css/app.css`
    file. The default message is very generic. We can add our own custom error message
    by using the `ErrorContent` property of the `ErrorBoundary` component. This is
    the updated `ErrorBoundary` component that includes the `ErrorContent` property:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '`ErrorBoundary` 组件的默认 UI 在 `wwwroot/css/app.css` 文件中定义。默认消息非常通用。我们可以通过使用 `ErrorBoundary`
    组件的 `ErrorContent` 属性来添加我们自己的自定义错误消息。这是包含 `ErrorContent` 属性的更新后的 `ErrorBoundary`
    组件：'
- en: '[PRE8]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The following screenshot shows the result of the custom `ErrorContent`:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了自定义 `ErrorContent` 的结果：
- en: '![Graphical user interface, application, Word  Description automatically generated](img/B18471_03_11.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，应用程序，Word 描述自动生成](img/B18471_03_11.png)'
- en: 'Figure 3.11: Custom ErrorContent'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.11：自定义 ErrorContent
- en: The `ErrorBoundary` component only handles errors on the UI level. It allows
    the developer to catch the error at a single point in the UI. To handle the errors
    programmatically, we need to create a custom error component.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '`ErrorBoundary` 组件仅处理 UI 层面的错误。它允许开发者在一个 UI 点处捕获错误。要程序化处理错误，我们需要创建一个自定义错误组件。'
- en: Creating a custom error component
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建自定义错误组件
- en: 'A custom error component can be passed to each child component. The following
    `ErrorHandler` component writes to the log when an error is encountered:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义错误组件可以传递给每个子组件。以下 `ErrorHandler` 组件在遇到错误时将写入日志：
- en: '**ErrorHandler.razor**'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '**ErrorHandler.razor**'
- en: '[PRE9]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The `ErrorHandler` needs to be added as a `CascadingParameter` into the component
    that will use it. This is the `ThrownExceptionHandled` component:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`ErrorHandler` 需要作为 `CascadingParameter` 添加到将使用它的组件中。这是 `ThrownExceptionHandled`
    组件：'
- en: '**ThrownExceptionHandled.razor**'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '**ThrownExceptionHandled.razor**'
- en: '[PRE10]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'When the `ThrownExceptionHandled` component is wrapped in the `ErrorHandler`
    component, all the unhandled errors are logged to the **Console**:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `ThrownExceptionHandled` 组件被 `ErrorHandler` 组件包裹时，所有未处理的错误都会记录到 **控制台**：
- en: '[PRE11]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The following screenshot shows how the error is rendered to the **Console**:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了错误是如何渲染到 **控制台** 的：
- en: '![Graphical user interface, application  Description automatically generated](img/B18471_03_12.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面、应用程序 描述自动生成](img/B18471_03_12.png)'
- en: 'Figure 3.12: Handled error'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.12：处理错误
- en: The Blazor WebAssembly project templates provided by Microsoft render a generic
    yellow bar at the bottom of the page when an unhandled exception is encountered.
    We can use an `ErrorBoundary` component to customize the UI. Even better, we can
    create a custom error component for more control over how errors are handled.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 当遇到未处理的异常时，微软提供的 Blazor WebAssembly 项目模板在页面底部渲染一个通用的黄色条。我们可以使用 `ErrorBoundary`
    组件来自定义 UI。更好的是，我们可以创建一个自定义错误组件，以更好地控制错误处理方式。
- en: Now that we know how to handle errors, let’s learn how to prepare our application
    for deployment.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了如何处理错误，让我们学习如何为部署准备我们的应用程序。
- en: Using ahead-of-time (AOT) compilation
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用即时编译 (AOT) 编译
- en: By default, Blazor WebAssembly apps use a .NET **Intermediate Language** (**IL**)
    interpreter when running on the browser. **Ahead-of-time** (**AOT**) compilation
    allows you to compile your .NET code into WebAssembly before deployment. Since
    compiled code is more performant than interpreted code, your app will run faster.
    The only downside to using AOT is that the app may be larger and, therefore, will
    take more time to load during application startup.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Blazor WebAssembly 应用程序在浏览器上运行时使用 .NET **中间语言 (IL**) 解释器。**即时编译 (AOT**)
    允许您在部署前将 .NET 代码编译成 WebAssembly。由于编译后的代码比解释代码性能更高，因此您的应用程序将运行得更快。使用 AOT 的唯一缺点是应用程序可能更大，因此应用程序启动时加载所需的时间会更长。
- en: 'These are the steps to enable AOT:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 启用 AOT 的步骤如下：
- en: Right-click the project in the **Solution Explorer** and select **Properties**
    from the menu.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **解决方案资源管理器** 中右键单击项目，从菜单中选择 **属性**。
- en: Enter `AOT` in the **Search properties** textbox.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **搜索属性** 文本框中输入 `AOT`。
- en: Check the **Use ahead-of-time (AOT) compilation on publish** checkbox.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选中 **发布时使用即时编译 (AOT**) 复选框。
- en: Once AOT is enabled, AOT compilation will occur every time the project is published.
    It takes much longer to publish an app using AOT compilation, but it can make
    the Blazor WebAssembly app run much faster. This is especially true for CPU-intensive
    apps.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦启用 AOT，每次发布项目时都会进行 AOT 编译。使用 AOT 编译发布应用程序需要更长的时间，但可以使 Blazor WebAssembly 应用程序运行得更快。这对于计算密集型应用程序尤其如此。
- en: '**IMPORTANT NOTE**'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: 'You must have `wasm-tools` installed to use AOT. To install `wasm-tools`, run
    the following command and restart Visual Studio:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须安装 `wasm-tools` 才能使用 AOT。要安装 `wasm-tools`，请运行以下命令并重新启动 Visual Studio：
- en: '`dotnet workload install wasm-tools`'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '`dotnet workload install wasm-tools`'
- en: Now we are ready to deploy the Blazor WebAssembly app.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好部署 Blazor WebAssembly 应用程序了。
- en: Deploying a Blazor WebAssembly app to Microsoft Azure
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Blazor WebAssembly 应用程序部署到微软 Azure
- en: 'Deploying a Blazor WebAssembly app using Visual Studio is quite simple. There
    is an easy-to-follow wizard that is included in Visual Studio. These are the steps
    for deploying a Blazor WebAssembly app to Microsoft Azure using Visual Studio
    2022:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Visual Studio 部署 Blazor WebAssembly 应用程序相当简单。Visual Studio 中包含了一个易于遵循的向导。以下是使用
    Visual Studio 2022 将 Blazor WebAssembly 应用程序部署到微软 Azure 的步骤：
- en: Right-click the project and select **Publish** from the menu.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击项目，从菜单中选择 **发布**。
- en: 'This is the first page of the **Publish** wizard:'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是发布向导的第一页：
- en: '![Graphical user interface, text, application  Description automatically generated](img/B18471_03_13.png)'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面、文本、应用程序 描述自动生成](img/B18471_03_13.png)'
- en: 'Figure 3.13: First page of Publish wizard'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.13：发布向导的第一页
- en: As you can see, there are many options provided. For this project, we will be
    publishing the application to the Microsoft cloud.
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如您所见，提供了许多选项。对于这个项目，我们将把应用程序发布到微软云中。
- en: Select **Azure** and click the **Next** button.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **Azure** 并点击 **下一步** 按钮。
- en: 'This is the second page of the **Publish** wizard:'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是发布向导的第二页：
- en: '![Graphical user interface, text, application  Description automatically generated](img/B18471_03_14.png)'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面、文本、应用程序 描述自动生成](img/B18471_03_14.png)'
- en: 'Figure 3.14: Second page of Publish wizard'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.14：发布向导的第二页
- en: Select **Azure App Service (Windows)** and click the **Next** button.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **Azure App Service (Windows**) 并点击 **下一步** 按钮。
- en: This is the last page of the **Publish** wizard. This page is used to select
    the **Azure App Service** to use for the application. You can also use this page
    to create an **Azure App Service**.
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是 **发布** 向导的最后一页。此页用于选择用于应用程序的 **Azure 应用服务**。您也可以使用此页创建 **Azure 应用服务**。
- en: '![Graphical user interface, text, application, email  Description automatically
    generated](img/B18471_03_15.png)'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序，电子邮件  自动生成的描述](img/B18471_03_15.png)'
- en: 'Figure 3.15: Last page of Publish wizard'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.15：发布向导的最后页面
- en: Create an **Azure App Service** if you do not have one.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您还没有，请创建一个 **Azure 应用服务**。
- en: 'This is a screenshot of the **Create New App Service** dialog:'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是 **创建新应用服务** 对话框的截图：
- en: '![Graphical user interface, application, email  Description automatically generated](img/B18471_03_16.png)'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面，应用程序，电子邮件  自动生成的描述](img/B18471_03_16.png)'
- en: 'Figure 3.16: Create New App Service dialog'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.16：创建新应用服务对话框
- en: 'If you do not already have a Hosting Plan, we recommend that you create a **Free**
    hosting plan for this project. The following screenshot shows the **Create New
    Hosting Plan** dialog with the **Free** option selected:'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您还没有托管计划，我们建议您为该项目创建一个 **免费** 托管计划。以下截图显示了选择 **免费** 选项的 **创建新托管计划** 对话框：
- en: '![Graphical user interface, application, table  Description automatically generated](img/B18471_03_17.png)'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面，应用程序，表格  自动生成的描述](img/B18471_03_17.png)'
- en: 'Figure 3.17: Create New Hosting Plan dialog'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.17：创建新托管计划对话框
- en: Click the **Finish** button.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **完成** 按钮。
- en: Click the **Close** button.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **关闭** 按钮。
- en: The application is now ready to be published.
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 应用程序现在已准备好发布。
- en: '![Graphical user interface, text, application, email  Description automatically
    generated](img/B18471_03_18.png)'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序，电子邮件  自动生成的描述](img/B18471_03_18.png)'
- en: 'Figure 3.18: Publish dialog'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.18：发布对话框
- en: Click the **Publish** button and wait.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **发布** 按钮，等待。
- en: The browser will automatically open once the app is published.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 应用发布后，浏览器将自动打开。
- en: Deploying a Blazor WebAssembly app to Microsoft Azure is as simple as following
    the steps in a wizard.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Blazor WebAssembly 应用部署到 Microsoft Azure 与遵循向导中的步骤一样简单。
- en: Creating the “guess the number” project
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建“猜数字”项目
- en: In this section, we will build a simple number-guessing game. The game will
    allow for multiple guesses and will alert us when we win.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将构建一个简单的数字猜谜游戏。游戏将允许多次猜测，并在我们获胜时提醒我们。
- en: 'This is a screenshot of the completed application:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 这是完成的应用程序的截图：
- en: '![Graphical user interface, text, application  Description automatically generated](img/B18471_03_19.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序  自动生成的描述](img/B18471_03_19.png)'
- en: 'Figure 3.19: Guess the Number game'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.19：猜数字游戏
- en: The build time for this project is approximately 60 minutes.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 此项目的构建时间大约为 60 分钟。
- en: Project overview
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目概述
- en: The `GuessTheNumber` project will be created by using Microsoft’s **Blazor WebAssembly
    App Empty** project template to create an empty Blazor WebAssembly project. First,
    we will add the components needed for the project. Then, we will add logging.
    We will debug the app in both Visual Studio and the browser. We will add an `ErrorBoundary`
    component. Finally, we will deploy the project to Microsoft Azure.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 将使用 Microsoft 的 **Blazor WebAssembly App Empty** 项目模板创建一个空的 Blazor WebAssembly
    项目来创建 `GuessTheNumber` 项目。首先，我们将添加项目所需的功能组件。然后，我们将添加日志记录。我们将在 Visual Studio 和浏览器中调试应用程序。我们将添加一个
    `ErrorBoundary` 组件。最后，我们将该项目部署到 Microsoft Azure。
- en: Getting started with the project
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始使用项目
- en: 'We need to create a new Blazor WebAssembly app. We do this as follows:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要创建一个新的 Blazor WebAssembly 应用。我们这样做如下：
- en: Open Visual Studio 2022.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Visual Studio 2022。
- en: Click the **Create a new project** button.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **创建新项目** 按钮。
- en: Press *Alt*+*S* to enter the **Search for templates** textbox.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Alt*+*S* 进入 **搜索模板** 文本框。
- en: Enter `Blazor` and press the *Enter* key.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `Blazor` 并按 *Enter* 键。
- en: The following screenshot shows the **Blazor WebAssembly App Empty** project
    template.
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下截图显示了 **Blazor WebAssembly App Empty** 项目模板。
- en: '![Graphical user interface, text, application, chat or text message  Description
    automatically generated](img/B18471_03_20.png)'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序，聊天或短信  自动生成的描述](img/B18471_03_20.png)'
- en: 'Figure 3.20: Blazor WebAssembly App Empty project template'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.20：Blazor WebAssembly App Empty 项目模板
- en: Select the **Blazor WebAssembly App Empty**project template and click the **Next**
    button.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **Blazor WebAssembly App Empty** 项目模板并点击 **下一步** 按钮。
- en: Enter `GuessTheNumber` in the **Project name** textbox and click the **Next**
    button.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **项目名称** 文本框中输入 `GuessTheNumber` 并点击 **下一步** 按钮。
- en: 'This is a screenshot of the dialog used to configure our new project:'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是配置我们新项目的对话框截图：
- en: '![Graphical user interface, text, application, email  Description automatically
    generated](img/B18471_03_21.png)'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序，电子邮件  自动生成的描述](img/B18471_03_21.png)'
- en: 'Figure 3.21: Configure your new project dialog'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.21：配置新项目对话框
- en: '**TIP**'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**提示**'
- en: In the preceding example, we placed the `GuessTheNumber` project into the `E:\Blazor`
    folder. However, the location of this project is not important.
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们将 `GuessTheNumber` 项目放置在 `E:\Blazor` 文件夹中。然而，此项目的位置并不重要。
- en: Select **.NET 7.0** as the version of the **Framework** to use.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择使用 **.NET 7.0** 作为 **框架** 的版本。
- en: Check the **Configure for HTTPS** checkbox.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **Configure for HTTPS** 复选框。
- en: Uncheck the **ASP.NET Core Hosted** checkbox.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消选择 **ASP.NET Core Hosted** 复选框。
- en: Uncheck the **Progressive Web Application** checkbox.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消选择 **Progressive Web Application** 复选框。
- en: 'This is a screenshot of the **Additional information** dialog:'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是 **附加信息** 对话框的截图：
- en: '![Graphical user interface, text, application, email  Description automatically
    generated](img/B18471_03_22.png)'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序，电子邮件  自动生成的描述](img/B18471_03_22.png)'
- en: 'Figure 3.22: Additional information dialog'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.22：附加信息对话框
- en: Click the **Create** button.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **创建** 按钮。
- en: We have created the `GuessTheNumber` Blazor WebAssembly project. Now we need
    to add a component.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经创建了 `GuessTheNumber` Blazor WebAssembly 项目。现在我们需要添加一个组件。
- en: Adding a Game component
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加游戏组件
- en: 'We need to add a `Game` component that includes a Razor page, a code-behind
    page, and a cascading style sheet. We do this as follows:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要添加一个包含 Razor 页面、代码隐藏页面和级联样式表的 `Game` 组件。我们这样做如下：
- en: Right-click the `GuessTheNumber` project and select the **Add**, **New Folder**
    option from the menu.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击 `GuessTheNumber` 项目，从菜单中选择 **添加**，**新文件夹** 选项。
- en: Name the new folder `Shared`.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新文件夹命名为 `Shared`。
- en: Right-click the `Shared` folder and select the **Add**, **Razor Component**
    option from the menu.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击 `Shared` 文件夹，从菜单中选择 **添加**，**Razor 组件** 选项。
- en: Name the new component `Game`.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新组件命名为 `Game`。
- en: 'Replace the default code in the `Game` component with the following markup:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用以下标记替换 `Game` 组件中的默认代码：
- en: '[PRE12]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The preceding code creates the framework for the game.
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码为游戏创建了框架。
- en: 'Enter the following code in the `guesses` div:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `guesses` div 中输入以下代码：
- en: '[PRE13]'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The preceding code loops through each of the `guesses` to render them on the
    screen.
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码遍历每个 `guesses` 并在屏幕上渲染它们。
- en: 'Enter the following code beneath the `@foreach` statement:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `@foreach` 语句下方输入以下代码：
- en: '[PRE14]'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The preceding code checks to see if the player is a winner. If they are a winner,
    it displays the **Play Again** button. If they are not a winner, it provides them
    with an `input` element for them to enter another guess.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码检查玩家是否是赢家。如果是赢家，它将显示 **再次播放** 按钮。如果不是赢家，它将提供一个 `input` 元素，让他们可以输入另一个猜测。
- en: Now that we have added the markup, we need to add the code.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经添加了标记，我们需要添加代码。
- en: Adding the code
  id: totrans-254
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加代码
- en: 'We will add the code for the project in a separate file. We do this as follows:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在一个单独的文件中添加项目的代码。我们这样做如下：
- en: Right-click the `Shared` folder and select the **Add**, **Class** option from
    the menu.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击 `Shared` 文件夹，从菜单中选择 **添加**，**类** 选项。
- en: Enter `Game.razor.cs` and click the **Add** button.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `Game.razor.cs` 并点击 **添加** 按钮。
- en: 'Add the following `using` statement to the top of the file:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 `using` 语句添加到文件顶部：
- en: '[PRE15]'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Add the `partial` keyword to the `Game` class:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Game` 类中添加 `partial` 关键字：
- en: '[PRE16]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Add the following code to the `Game` class:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到 `Game` 类中：
- en: '[PRE17]'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The preceding code defines the properties and methods we will use in the `Game`
    component. It also defines the `Row` class.
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码定义了我们将在 `Game` 组件中使用的属性和方法。它还定义了 `Row` 类。
- en: 'Add the following code to the `OnParametersSet` method:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到 `OnParametersSet` 方法中：
- en: '[PRE18]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The preceding code sets the value of `digitCount`. After it has determined the
    value of `digitCount`, it calls the `CalculateAnswer` method.
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码设置了 `digitCount` 的值。在确定 `digitCount` 的值之后，它调用 `CalculateAnswer` 方法。
- en: 'Add the following code to the `CalculateAnswer` method:'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到 `CalculateAnswer` 方法中：
- en: '[PRE19]'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The preceding code calculates the `answer` based on the number of digits specified
    by `digitCount`.
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码根据 `digitCount` 指定的数字位数计算 `answer`。
- en: 'Add the following code to the `GuessAnswer` method:'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到 `GuessAnswer` 方法中：
- en: '[PRE20]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The preceding code compares each digit in the answer with each digit in the
    guess. If the guess is equal to the answer, they are a winner.
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面的代码将答案中的每个数字与猜测中的每个数字进行比较。如果猜测等于答案，他们就是赢家。
- en: 'Add the following code to the `PlayAgain` method:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到 `PlayAgain` 方法中：
- en: '[PRE21]'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The preceding code resets the game.
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面的代码重置了游戏。
- en: We are almost done creating the `Game` component. We just need to add some styling.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 我们几乎完成了 `Game` 组件的创建。我们只需要添加一些样式。
- en: Adding a style sheet
  id: totrans-278
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加样式表
- en: 'We will add a style sheet using CSS isolation. We do this as follows:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 CSS 隔离添加一个样式表。我们这样做如下：
- en: Right-click the `Shared` folder and select the **Add**, **New Item** option
    from the menu.
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击 `Shared` 文件夹，从菜单中选择 **添加**，**新建项** 选项。
- en: Press *Ctrl*+*E* to enter the **Search** textbox.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Ctrl*+*E* 进入 **搜索** 文本框。
- en: Enter `css` in the **Search** textbox.
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **搜索** 文本框中输入 `css`。
- en: Enter `Game.razor.css` in the **Name** textbox and click the **Add** button.
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **名称** 文本框中输入 `Game.razor.css` 并点击 **添加** 按钮。
- en: 'Enter the following styles:'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下样式：
- en: '[PRE22]'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The style sheet sets the font to a monospaced font for both the list of past
    guesses and the current guess. Also, the classes used to designate the color are
    defined.
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样式表将字体设置为等宽字体，用于过去猜测列表和当前猜测。同时，用于指定颜色的类也被定义。
- en: Open the `wwwroot/index.html` file.
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `wwwroot/index.html` 文件。
- en: 'Uncomment the link to the `GuessTheNumber.styles.css` style sheet in the `head`
    element:'
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `head` 元素中取消注释对 `GuessTheNumber.styles.css` 样式表的链接：
- en: '[PRE23]'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Let’s test the app by playing the game.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过玩游戏来测试应用程序。
- en: Setting up and playing the game
  id: totrans-291
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置和玩游戏
- en: 'We need to add the `Game` component to the `Index` component to play the game.
    We do this as follows:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要将 `Game` 组件添加到 `Index` 组件中以便玩游戏。我们这样做如下：
- en: Open the `_Imports.razor` file.
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `_Imports.razor` 文件。
- en: 'Add the following `using` statement to the file:'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 `using` 语句添加到文件中：
- en: '[PRE24]'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: By adding the preceding `using` statement to the `_Imports.razor` file, it is
    automatically imported into the other `.razor` files within the same folder and
    its subfolders.
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过将前面的 `using` 语句添加到 `_Imports.razor` 文件中，它将自动导入同一文件夹及其子文件夹中的其他 `.razor` 文件。
- en: Open the `Pages/Index.razor` file.
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `Pages/Index.razor` 文件。
- en: 'Replace the `h1` element with the following:'
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 `h1` 元素替换为：
- en: '[PRE25]'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Press *Ctrl*+*F5* to start the application without debugging.
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Ctrl*+*F5* 开始应用程序，不进行调试。
- en: Enter a 4-digit number and click the **Guess** button.
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入一个 4 位数字并点击 **猜测** 按钮。
- en: If a digit is in the answer, it will appear in red. If the digit is in the answer
    and it is in the correct position, it will appear in green. The goal is to guess
    the answer.
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果答案中有数字，它将以红色显示。如果数字在答案中，并且它在正确的位置，它将以绿色显示。目标是猜测答案。
- en: Enter another 4-digit number and click the **Guess** button.
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入另一个 4 位数字并点击 **猜测** 按钮。
- en: Try to win the game.
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试赢得游戏。
- en: It is impossible to win the game because there is a bug in our code. Let’s add
    some logging to try and find the issue.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的代码中存在一个错误，所以不可能赢得游戏。让我们添加一些日志记录来尝试找到问题。
- en: Adding logging
  id: totrans-306
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加日志记录
- en: 'We will add logging to the application. We do this as follows:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在应用程序中添加日志记录。我们这样做如下：
- en: Open the `Game.razor.cs` file.
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `Game.razor.cs` 文件。
- en: 'Add the following `using` statement to the top of the file:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 `using` 语句添加到文件顶部：
- en: '[PRE26]'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Add the following code to the top of the `Game` class:'
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到 `Game` 类的顶部：
- en: '[PRE27]'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The preceding code injects an `ILogger` object into the `Game` component to
    create a logger.
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面的代码将一个 `ILogger` 对象注入到 `Game` 组件中，以创建一个记录器。
- en: 'Add the following code to the end of the `CalculateAnswer` method:'
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到 `CalculateAnswer` 方法的末尾：
- en: '[PRE28]'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Add the following code to the end of the `GuessAnswer` method:'
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到 `GuessAnswer` 方法的末尾：
- en: '[PRE29]'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Press *Ctrl*+*F5* to start the application without debugging.
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Ctrl*+*F5* 开始应用程序，不进行调试。
- en: Press *F12* to open `DevTools`.
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *F12* 打开 `DevTools`。
- en: Select the **Console** tab.
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **控制台** 选项卡。
- en: Enter a 4-digit number and click the **Guess** button.
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入一个 4 位数字并点击 **猜测** 按钮。
- en: Enter another 4-digit number and click the **Guess** button.
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入另一个 4 位数字并点击 **猜测** 按钮。
- en: 'The following screenshot shows the messages that have been logged to the **Console**
    tab:'
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下截图显示了已记录到 **控制台** 选项卡的消息：
- en: '![Graphical user interface, text  Description automatically generated](img/B18471_03_23.png)'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面，文本  自动生成的描述](img/B18471_03_23.png)'
- en: 'Figure 3.23: Logged information'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.23：记录的信息
- en: By using logging, we can determine that our guesses are being correctly evaluated.
    Let’s try debugging our code to find the issue.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用日志记录，我们可以确定我们的猜测正在被正确评估。让我们尝试调试我们的代码以找到问题。
- en: Debugging in Visual Studio
  id: totrans-327
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中进行调试
- en: 'First, we will debug the Blazor WebAssembly app using Visual Studio. We do
    this as follows:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将使用 Visual Studio 调试 Blazor WebAssembly 应用程序。我们这样做如下：
- en: Open the `Game.razor.cs` file.
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `Game.razor.cs` 文件。
- en: Add a breakpoint to the first line of the `GuessAnswer` method.
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `GuessAnswer` 方法的第一行添加一个断点。
- en: Press *F5* to run the application with debugging.
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *F5* 以调试模式运行应用程序。
- en: Enter a 4-digit number and click the **Guess** button.
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入一个四位数并点击 **Guess** 按钮。
- en: Hover over `curGuess` to view its contents.
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标悬停在 `curGuess` 上以查看其内容。
- en: View the **Locals** window.
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看 **Locals** 窗口。
- en: Set a **Watch** on `guess`.
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `guess` 上设置 **Watch**。
- en: Press *F10* to step through the code.
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *F10* 以单步执行代码。
- en: Verify that the code is working correctly.
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证代码是否正确运行。
- en: 'View the **Output** window in Visual Studio to help understand the flow:'
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看 Visual Studio 中的 **Output** 窗口以帮助理解流程：
- en: '![Graphical user interface, text, application  Description automatically generated](img/B18471_03_24.png)'
  id: totrans-339
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序，自动生成描述](img/B18471_03_24.png)'
- en: 'Figure 3.24: Output window in Visual Studio'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.24：Visual Studio 中的输出窗口
- en: The problem is that `guess` is being set to an empty string before its value
    is compared to the answer.
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 问题在于在将 `guess` 的值与答案比较之前，它被设置为一个空字符串。
- en: 'Move the following code to the end of the `GuessAnswer` method:'
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码移动到 `GuessAnswer` 方法的末尾：
- en: '[PRE30]'
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Press *F5* to run the application without debugging.
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *F5* 以非调试模式运行应用程序。
- en: Play the game until you win.
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 玩游戏直到获胜。
- en: 'The following screenshot shows a winning game:'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下截图显示了一个获胜的游戏：
- en: '![Text, application  Description automatically generated with medium confidence](img/B18471_03_25.png)'
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![文本，应用程序，自动生成中等置信度的描述](img/B18471_03_25.png)'
- en: 'Figure 3.25: Guess the Number – Winner'
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.25：猜数字 – 获胜者
- en: When your guess matches the answer, you win the game. Let’s make the game harder
    by varying the number of digits.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 当您的猜测与答案匹配时，您就赢了游戏。让我们通过改变数字的位数来使游戏更难。
- en: Updating the code
  id: totrans-350
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新代码
- en: 'To make the game harder, we will allow the player to decide how many digits
    they need to guess. We do this as follows:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使游戏更难，我们将允许玩家决定他们需要猜测多少位数。我们这样做如下：
- en: Return to Visual Studio 2022.
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回 Visual Studio 2022。
- en: Open the `Game.razor` file.
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `Game.razor` 文件。
- en: 'Replace `@digitCount` with the following:'
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `@digitCount` 替换为以下内容：
- en: '[PRE31]'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Open the `Game.razor.cs` file.
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `Game.razor.cs` 文件。
- en: 'Add the following `RestartGame` method:'
  id: totrans-357
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下 `RestartGame` 方法：
- en: '[PRE32]'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The preceding code resets the game every time the number of digits is changed.
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码每次更改数字位数时都会重置游戏。
- en: Press *Ctrl*+*F5* to start the application without debugging.
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Ctrl*+*F5* 以非调试模式启动应用程序。
- en: Play the updated game.
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 播放更新后的游戏。
- en: Now we will use the browser to debug our updates.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将使用浏览器来调试我们的更新。
- en: Debugging in the browser
  id: totrans-363
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在浏览器中进行调试
- en: 'We will debug the new code in the browser. We do this as follows:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在浏览器中调试新代码。我们这样做如下：
- en: Press *Shift*+*Alt*+*D*.
  id: totrans-365
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Shift*+*Alt*+*D*。
- en: Copy the indicated text into your clipboard that corresponds with the browser
    that you are using.
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将指示的文本复制到您的剪贴板，该文本与您使用的浏览器相对应。
- en: Press *Win*+*R*, paste the text that you copied, and click the **OK** button.
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Win*+*R*，粘贴您复制的文本，然后点击 **OK** 按钮。
- en: Press *Shift*+*Alt*+*D*.
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Shift*+*Alt*+*D*。
- en: A second tab opens in the browser.
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 浏览器中打开第二个选项卡。
- en: Click the **Sources** tab and view the files in the `file://` node.
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Sources** 选项卡并查看 `file://` 节点中的文件。
- en: 'Open the `Shared` folder:'
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `Shared` 文件夹：
- en: '![Graphical user interface, text, application  Description automatically generated](img/B18471_03_26.png)'
  id: totrans-372
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序，自动生成描述](img/B18471_03_26.png)'
- en: 'Figure 3.26: Folders in the browser'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.26：浏览器中的文件夹
- en: Add a breakpoint in the `GuessAnswer` method.
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `GuessAnswer` 方法中添加一个断点。
- en: Return to the first tab.
  id: totrans-375
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回第一个选项卡。
- en: Change the number of digits to 5.
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数字位数更改为 5。
- en: Enter a 5-digit number and click the **Guess** button.
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入一个五位数并点击 **Guess** 按钮。
- en: Return to the second tab.
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回第二个选项卡。
- en: View the `Scope`, `Local` value of `curGuess`.
  id: totrans-379
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看 `curGuess` 的 `Scope` 和 `Local` 值。
- en: Press *F10* multiple times to step through the function call.
  id: totrans-380
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按多次 *F10* 以单步执行函数调用。
- en: Press *F8* to resume script execution.
  id: totrans-381
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *F8* 恢复脚本执行。
- en: Return to the first tab.
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回第一个选项卡。
- en: Enter a 3-digit number and press the **Guess** button.
  id: totrans-383
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入一个三位数并按 **Guess** 按钮。
- en: Press *F8* to resume script execution.
  id: totrans-384
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *F8* 恢复脚本执行。
- en: Click the **reload** link at the bottom of the page.
  id: totrans-385
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击页面底部的**重新加载**链接。
- en: We encountered an unhandled error when we entered a guess with fewer digits
    than the answer. Let’s address that issue by adding an `ErrorBoundary` component.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们输入的猜测数字少于答案时，遇到了一个未处理的错误。让我们通过添加一个`ErrorBoundary`组件来解决这个问题。
- en: Adding an ErrorBoundary component
  id: totrans-387
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加ErrorBoundary组件
- en: 'We need to wrap the `Game` component in an `ErrorBoundary` component. We do
    this as follows:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要将`Game`组件包裹在一个`ErrorBoundary`组件中。我们这样做如下：
- en: Return to Visual Studio.
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回Visual Studio。
- en: Open the `Index.razor` file.
  id: totrans-390
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`Index.razor`文件。
- en: 'Replace the `Game` element with the following:'
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Game`元素替换为以下内容：
- en: '[PRE33]'
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Press *Ctrl*+*F5* to start the application without debugging.
  id: totrans-393
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Ctrl*+*F5*启动应用程序，不进行调试。
- en: Enter a 3-digit number and press the **Guess** button.
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入一个三位数并按**猜测**按钮。
- en: Verify that the message defined by the `ErrorContent` property is displayed.
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证由`ErrorContent`属性定义的消息是否显示。
- en: We have added an `ErrorBoundary` component to update the UI when an unhandled
    exception is encountered. The `ErrorContent` property is used to define the UI.
    Now that the application is tested, it’s time to deploy it.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已添加了一个`ErrorBoundary`组件，当遇到未处理的异常时更新UI。`ErrorContent`属性用于定义UI。现在应用程序已经测试完毕，是时候部署它了。
- en: Deploying the application to Microsoft Azure
  id: totrans-397
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将应用程序部署到Microsoft Azure
- en: 'We will enable AOT compilation and deploy the app to Microsoft Azure. We do
    this as follows:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将启用AOT编译并将应用程序部署到Microsoft Azure。我们这样做如下：
- en: Right-click the `GuessTheNumber` project and select **Properties** from the
    menu.
  id: totrans-399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击`GuessTheNumber`项目，从菜单中选择**属性**。
- en: Enter `AOT` in the **Search properties** textbox.
  id: totrans-400
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**搜索属性**文本框中输入`AOT`。
- en: Check the **Use ahead-of-time (AOT) compilation on publish** checkbox.
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 勾选**发布时使用即时编译（AOT）**复选框。
- en: Right-click the `GuessTheNumber` project and select the **Publish** option from
    the menu.
  id: totrans-402
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击`GuessTheNumber`项目，从菜单中选择**发布**选项。
- en: Select **Azure** and click the **Next** button.
  id: totrans-403
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Azure**并点击**下一步**按钮。
- en: Select **Azure App Service (Windows)** and click the **Next** button.
  id: totrans-404
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Azure App Service (Windows**)并点击**下一步**按钮。
- en: Select an existing Azure App Service or create a new one.
  id: totrans-405
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择现有的Azure App Service或创建一个新的。
- en: Click the **Finish** button.
  id: totrans-406
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**按钮。
- en: '**IMPORTANT NOTE**'
  id: totrans-407
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: Be patient, it will take some time to deploy the app to Microsoft Azure.
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请耐心等待，将应用程序部署到Microsoft Azure需要一些时间。
- en: Play the game.
  id: totrans-409
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 玩游戏。
- en: We have deployed the `Guess the Number` web app to Microsoft Azure.
  id: totrans-410
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们已将`猜数字`Web应用程序部署到Microsoft Azure。
- en: '**IMPORTANT NOTE**'
  id: totrans-411
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: After you have finished testing your application, don’t forget to remove the
    resources that you added to your Azure account.
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在您完成应用程序的测试后，别忘了从您的Azure账户中删除您添加的资源。
- en: Summary
  id: totrans-413
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: You should now be able to debug and deploy a Blazor WebAssembly app.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该能够调试和部署一个Blazor WebAssembly应用程序。
- en: In this chapter, we learned about debugging in both Visual Studio and `DevTools`.
    We learned about the different levels of logging and how to write to the log.
    We learned how to handle exceptions. Finally, we learned how to use AOT compilation
    before deploying a Blazor WebAssembly app to Microsoft Azure.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了在Visual Studio和`DevTools`中的调试方法。我们学习了不同的日志级别以及如何写入日志。我们学习了如何处理异常。最后，我们学习了在将Blazor
    WebAssembly应用程序部署到Microsoft Azure之前如何使用AOT编译。
- en: After that, we created a new project using the **Blazor WebAssembly App Empty**
    project template in Visual Studio. We added a simple `Game` component. We added
    some logging to the app. We added a breakpoint to the app using both Visual Studio
    and `DevTools`. We added an `ErrorBoundary` component to capture the unhandled
    errors. Finally, we enabled AOT compilation and deployed the application to Microsoft
    Azure.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们使用Visual Studio中的**Blazor WebAssembly App Empty**项目模板创建了一个新项目。我们添加了一个简单的`Game`组件。我们在应用程序中添加了一些日志记录。我们使用Visual
    Studio和`DevTools`都添加了应用程序的断点。我们添加了一个`ErrorBoundary`组件来捕获未处理的错误。最后，我们启用了AOT编译并将应用程序部署到Microsoft
    Azure。
- en: In the next chapter, we will build a modal dialog using templated components.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将使用模板组件构建一个模态对话框。
- en: Questions
  id: totrans-418
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'The following questions are provided for your consideration:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 以下问题供您参考：
- en: How would you rewrite the `Guess the Number` game to use a custom error component?
  id: totrans-420
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会如何重写`猜数字`游戏以使用自定义错误组件？
- en: What types of applications benefit the most from AOT?
  id: totrans-421
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪些类型的应用程序从AOT中受益最大？
- en: What are the different log levels and when should you use each one?
  id: totrans-422
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不同的日志级别有哪些？何时应该使用每个级别？
- en: How do you debug a Blazor WebAssembly app in the browser?
  id: totrans-423
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你如何在浏览器中调试 Blazor WebAssembly 应用？
- en: Can you deploy a Blazor WebAssembly app to Microsoft Azure for free?
  id: totrans-424
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你能否免费将 Blazor WebAssembly 应用部署到 Microsoft Azure？
- en: Further reading
  id: totrans-425
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'The following resources provide more information concerning the topics in this
    chapter:'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 以下资源提供了有关本章主题的更多信息：
- en: For more information on debugging C# code in Visual Studio, refer to [https://learn.microsoft.com/en-us/visualstudio/get-started/csharp/tutorial-debugger](https://learn.microsoft.com/en-us/visualstudio/get-started/csharp/tutorial-debugger).
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关在 Visual Studio 中调试 C# 代码的更多信息，请参阅 [https://learn.microsoft.com/en-us/visualstudio/get-started/csharp/tutorial-debugger](https://learn.microsoft.com/en-us/visualstudio/get-started/csharp/tutorial-debugger)。
- en: For more information on `DevTools`, refer to [https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/overview](https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/overview).
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关 `DevTools` 的更多信息，请参阅 [https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/overview](https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/overview)。
- en: For more information on logging, refer to [https://learn.microsoft.com/en-us/dotnet/core/extensions/logging](https://learn.microsoft.com/en-us/dotnet/core/extensions/logging).
  id: totrans-429
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关日志记录的更多信息，请参阅 [https://learn.microsoft.com/en-us/dotnet/core/extensions/logging](https://learn.microsoft.com/en-us/dotnet/core/extensions/logging)。
- en: For more information on Microsoft Azure, refer to [https://azure.microsoft.com](https://azure.microsoft.com).
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关 Microsoft Azure 的更多信息，请参阅 [https://azure.microsoft.com](https://azure.microsoft.com)。
