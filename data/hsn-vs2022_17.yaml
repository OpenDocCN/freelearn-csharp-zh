- en: 'Chapter 14: Using Popular Extensions'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 14 章：使用流行扩展
- en: In [*Chapter 13*](B17873_13_ePub.xhtml#_idTextAnchor149), *Working with Extensions
    in Visual Studio*, we learned how to extend utilities and functionalities by installing
    extensions published by the Visual Studio community and third-party vendors. We
    can install these extensions using the extension manager in Visual Studio and
    then restart Visual Studio to see the changes in the user interface.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第 13 章*](B17873_13_ePub.xhtml#_idTextAnchor149)，“在 Visual Studio 中使用扩展”，我们学习了如何通过安装由
    Visual Studio 社区和第三方供应商发布的扩展来扩展实用工具和功能。我们可以使用 Visual Studio 中的扩展管理器安装这些扩展，然后重新启动
    Visual Studio 以查看用户界面的更改。
- en: 'In this chapter, we will analyze some free and useful extensions to increase
    productivity and improve our experience of using Visual Studio. We will install
    and review the extensions in the following sections:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将分析一些免费且有用的扩展，以提高生产力和改善我们使用 Visual Studio 的体验。我们将在以下部分安装和审查这些扩展：
- en: Adding HTML Snippet Pack
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加 HTML 代码片段包
- en: Cleaning up code with CodeMaid
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 CodeMaid 清理代码
- en: Compiling web libraries with Web Compiler
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Web 编译器编译网络库
- en: Identifying white space with Indent Guides
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用缩进引导识别空白
- en: We will start with HTML Snippet Pack, an extension that helps us include some
    additional code snippets in Visual Studio when coding HTML files.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从 HTML 代码片段包开始，这是一个帮助我们当编写 HTML 文件时在 Visual Studio 中包含一些额外代码片段的扩展。
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To install the extensions in Visual Studio 2022, you must have previously installed
    Visual Studio 2022 with the web development workload, as shown in [*Chapter 1*](B17873_01_ePub.xhtml#_idTextAnchor013),
    *Getting Started with Visual Studio 2022*. It's also important to have the SPA
    project created in [*Chapter 4*](B17873_04_ePub.xhtml#_idTextAnchor052), *Creating
    Projects and Templates*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Visual Studio 2022 中安装扩展，您必须已经安装了带有 Web 开发工作负载的 Visual Studio 2022，如[*第 1
    章*](B17873_01_ePub.xhtml#_idTextAnchor013)，“开始使用 Visual Studio 2022”中所示。在[*第 4
    章*](B17873_04_ePub.xhtml#_idTextAnchor052)，“创建项目和模板”中创建 SPA 项目也很重要。
- en: 'You can check out the changes made to the project in this chapter at the following
    link: [https://github.com/PacktPublishing/Hands-On-Visual-Studio-2022/tree/main/Chapter14](https://github.com/PacktPublishing/Hands-On-Visual-Studio-2022/tree/main/Chapter14).'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下链接查看本章中项目所做的更改：[https://github.com/PacktPublishing/Hands-On-Visual-Studio-2022/tree/main/Chapter14](https://github.com/PacktPublishing/Hands-On-Visual-Studio-2022/tree/main/Chapter14)。
- en: Adding HTML Snippet Pack
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加 HTML 代码片段包
- en: In [*Chapter 6*](B17873_06_ePub.xhtml#_idTextAnchor081), *Adding Code Snippets*,
    we reviewed how code snippets can improve our productivity while we are coding.
    We also learned how to create, import, and remove code snippets using the Code
    Snippets Manager.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第 6 章*](B17873_06_ePub.xhtml#_idTextAnchor081)，“添加代码片段”，我们回顾了代码片段如何在我们编码时提高我们的生产力。我们还学习了如何使用代码片段管理器创建、导入和删除代码片段。
- en: 'In Visual Studio''s extension marketplace, we can find many extensions that
    add code snippets for different technologies by navigating to [https://marketplace.visualstudio.com/](https://marketplace.visualstudio.com/)
    and typing `snippet` in the search bar (see *Figure 14.1*):'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Visual Studio 的扩展市场中，我们可以通过导航到 [https://marketplace.visualstudio.com/](https://marketplace.visualstudio.com/)
    并在搜索栏中输入 `snippet` 来找到许多扩展，这些扩展为不同的技术添加代码片段（见图 14.1）：
- en: '![Figure 14.1 – Extensions related to snippets in the Visual Studio Marketplace'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.1 – 与 Visual Studio Marketplace 中的代码片段相关的扩展](img/Figure_14.1_B17873.jpg)'
- en: '](img/Figure_14.1_B17873.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.1 – 与 Visual Studio Marketplace 中的代码片段相关的扩展](img/Figure_14.1_B17873.jpg)'
- en: Figure 14.1 – Extensions related to snippets in the Visual Studio Marketplace
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.1 – 与 Visual Studio Marketplace 中的代码片段相关的扩展
- en: One of the most popular snippet packs for web developers is **HTML Snippet Pack**.
    With this extension, you can code in HTML faster, creating pieces of code and
    HTML elements after typing some charactes in the editor. Let's install this extension
    and see how we can create HTML elements easily using snippets.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于网页开发者来说，最受欢迎的代码片段包之一是**HTML 代码片段包**。使用此扩展，你可以更快地编写 HTML 代码，在编辑器中输入一些字符后，创建代码片段和
    HTML 元素。让我们安装这个扩展，看看我们如何使用代码片段轻松创建 HTML 元素。
- en: Downloading and installing HTML Snippet Pack
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载和安装 HTML 代码片段包
- en: 'Navigate in Visual Studio to `HTML Snippet` in the search bar. Then, select
    **HTML Snippet Pack** and click **Download** (see *Figure 14.2*):'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中，在搜索栏中导航到 `HTML 代码片段`。然后，选择 **HTML 代码片段包** 并点击 **下载**（见图 14.2）：
- en: '![Figure 14.2 – HTML Snippet Pack in the Manage Extensions tool'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.2 – 管理扩展工具中的 HTML 代码片段包](img/Figure_14.2_B17873.jpg)'
- en: '](img/Figure_14.02_B17873.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.1 – 与 Visual Studio Marketplace 中的代码片段相关的扩展](img/Figure_14.02_B17873.jpg)'
- en: Figure 14.2 – HTML Snippet Pack in the Manage Extensions tool
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.2 – 管理扩展工具中的 HTML 片段包
- en: 'We will receive a notification, which means we need to close and open (restart)
    Visual Studio to complete the installation. After opening Visual Studio again,
    it will ask for confirmation to install the extension. Click on **Modify** (see
    *Figure 14.3*):'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将收到通知，这意味着我们需要关闭并重新打开（重启）Visual Studio 以完成安装。再次打开 Visual Studio 后，它将要求确认安装扩展。点击
    **修改**（见 *图 14.3*）：
- en: '![Figure 14.3 – Installing HTML Snippet Pack'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.3 – 安装 HTML 片段包'
- en: '](img/Figure_14.03_B17873.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_14.03_B17873.jpg)'
- en: Figure 14.3 – Installing HTML Snippet Pack
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.3 – 安装 HTML 片段包
- en: 'Then, we will see a progress bar, indicating that the installation is in progress.
    Finally, we will see a successful message:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将看到一个进度条，指示安装正在进行。最后，我们将看到一个成功消息：
- en: '![Figure 14.4 – Installation of HTML Snippet Pack extension completed'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.4 – HTML 片段包扩展安装完成'
- en: '](img/Figure_14.04_B17873.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_14.04_B17873.jpg)'
- en: Figure 14.4 – Installation of HTML Snippet Pack extension completed
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.4 – HTML 片段包扩展安装完成
- en: Click **Close** and continue to Visual Studio.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **关闭** 并继续使用 Visual Studio。
- en: Using HTML Snippet Pack
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 HTML 片段包
- en: We need to navigate to an HTML file to use the HTML Snippet Pack extension,
    so let's go to `index.html`.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要导航到一个 HTML 文件来使用 HTML 片段包扩展，所以让我们转到 `index.html`。
- en: 'Within this file, we can write the word `article` in the body element (see
    *Figure 14.5*):'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在此文件中，我们可以在 body 元素中写下单词 `article`（见 *图 14.5*）：
- en: '![Figure 14.5 – Typing article in index.html'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.5 – 在 index.html 中输入 article'
- en: '](img/Figure_14.05_B17873.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_14.05_B17873.jpg)'
- en: Figure 14.5 – Typing article in index.html
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.5 – 在 index.html 中输入 article
- en: 'After writing the word `article`, press *tab* on your keyboard to easily generate
    the HTML element for an article in this part of the code. In *Figure 14.6*, we
    can see the article element generated automatically:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在键入单词 `article` 后，按键盘上的 *tab* 键可以轻松生成此部分代码中的文章 HTML 元素。在 *图 14.6* 中，我们可以看到自动生成的文章元素：
- en: '![Figure 14.6 – The article generated using a code snippet'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.6 – 使用代码片段生成的文章'
- en: '](img/Figure_14.06_B17873.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_14.06_B17873.jpg)'
- en: Figure 14.6 – The article generated using a code snippet
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.6 – 使用代码片段生成的文章
- en: Just as we generated the `article` element, we can easily create elements for
    `li`, `ul`, `img`, `input`, and almost all the existing elements in the HTML standard.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们生成了 `article` 元素一样，我们可以轻松地创建 `li`、`ul`、`img`、`input` 以及 HTML 标准中几乎所有的现有元素。
- en: You can read more information about HTML Snippet Pack on the official website
    and repository at [https://github.com/madskristensen/HtmlSnippetPack](https://github.com/madskristensen/HtmlSnippetPack).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在官方网站和仓库 [https://github.com/madskristensen/HtmlSnippetPack](https://github.com/madskristensen/HtmlSnippetPack)
    上阅读有关 HTML 片段包的更多信息。
- en: Let's now review a different extension to analyze our code.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来回顾一个不同的扩展来分析我们的代码。
- en: Cleaning up code with CodeMaid
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 CodeMaid 清理代码
- en: CodeMaid is an amazing extension that helps us to simplify and clean up code.
    It is free and compatible with C#, C++, F#, VB, PHP, PowerShell, R, JSON, XAML,
    XML, ASP, HTML, CSS, LESS, SCSS, JavaScript, and TypeScript.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: CodeMaid 是一个惊人的扩展，帮助我们简化并清理代码。它是免费的，并且与 C#、C++、F#、VB、PHP、PowerShell、R、JSON、XAML、XML、ASP、HTML、CSS、LESS、SCSS、JavaScript
    和 TypeScript 兼容。
- en: 'You can read more information about CodeMaid on the official website: [https://www.codemaid.net/](https://www.codemaid.net/).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在官方网站 [https://www.codemaid.net/](https://www.codemaid.net/) 上阅读有关 CodeMaid
    的更多信息。
- en: Let's install CodeMaid and see how we can use it.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们安装 CodeMaid 并看看我们如何使用它。
- en: Installing CodeMaid in Visual Studio 2022
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Visual Studio 2022 中安装 CodeMaid
- en: 'To install CodeMaid, navigate to `codemaid` in the search bar, and then select
    **CodeMaid VS2022** (see *Figure 14.7*):'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 CodeMaid，在搜索栏中导航到 `codemaid`，然后选择 **CodeMaid VS2022**（见 *图 14.7*）：
- en: '![Figure 14.7 – Installing CodeMaid from the Manage Extensions tool'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.7 – 从管理扩展工具安装 CodeMaid'
- en: '](img/Figure_14.07_B17873.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_14.07_B17873.jpg)'
- en: Figure 14.7 – Installing CodeMaid from the Manage Extensions tool
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.7 – 从管理扩展工具安装 CodeMaid
- en: 'After searching `codemaid`, click `SPAProject` again. You can click on **Modify**
    and then wait for the installation to complete:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在搜索 `codemaid` 后，再次点击 `SPAProject`。您可以点击 **修改** 并等待安装完成：
- en: '![Figure 14.8 – The extension installer for CodeMaid in Visual Studio 2022'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.8 – Visual Studio 2022 中的 CodeMaid 扩展安装程序'
- en: '](img/Figure_14.08_B17873.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_14.08_B17873.jpg)'
- en: Figure 14.8 – The extension installer for CodeMaid in Visual Studio 2022
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.8 – Visual Studio 2022 中的 CodeMaid 扩展安装程序
- en: 'Now, you will see a new option in the **Extensions** menu that contains all
    the functionalities and configurations related to CodeMaid (see *Figure 14.9*):'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将在**扩展**菜单中看到一个新选项，其中包含与 CodeMaid 相关的所有功能性和配置（见*图 14.9*）：
- en: '![Figure 14.9 – The new CodeMaid option in the Extensions menu'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.9 – 扩展菜单中的新 CodeMaid 选项'
- en: '](img/Figure_14.09_B17873.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_14.09_B17873.jpg)'
- en: Figure 14.9 – The new CodeMaid option in the Extensions menu
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.9 – 扩展菜单中的新 CodeMaid 选项
- en: Using CodeMaid
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 CodeMaid
- en: 'In this case, there is no active document, and therefore, many options are
    disabled, but we can use the **Cleanup All Code…** option to perform a cleanup
    on the whole project, using the default settings in CodeMaid. We will get a confirmation
    message before starting the process. Click on **Yes** to continue (see *Figure
    14.10*):'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，没有活动文档，因此许多选项被禁用，但我们可以使用**清理所有代码…**选项来对整个项目进行清理，使用 CodeMaid 中的默认设置。在开始过程之前，我们会收到一个确认消息。点击**是**以继续（见*图
    14.10*）：
- en: '![Figure 14.10 – Confirmation to clean up the project using CodeMaid'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.10 – 使用 CodeMaid 清理项目的确认'
- en: '](img/Figure_14.10_B17873.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_14.10_B17873.jpg)'
- en: Figure 14.10 – Confirmation to clean up the project using CodeMaid
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.10 – 使用 CodeMaid 清理项目的确认
- en: 'After confirming, CodeMaid will analyze each file at a time, look for white
    spaces and empty lines, and sort lines, among other things. You will see a progress
    bar and the current file being processed (see *Figure 14.11*):'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 确认后，CodeMaid 将逐个分析每个文件，查找空白空间和空行，并对行进行排序等。您将看到一个进度条和当前正在处理的文件（见*图 14.11*）：
- en: '![Figure 14.11 – A cleanup in process using CodeMaid'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.11 – 使用 CodeMaid 进行清理过程'
- en: '](img/Figure_14.11_B17873.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_14.11_B17873.jpg)'
- en: Figure 14.11 – A cleanup in process using CodeMaid
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.11 – 使用 CodeMaid 进行清理过程
- en: 'After completing the cleanup, all the files will be saved. We can open a file
    to see the changes, but using the Git integration in Visual Studio, we can see
    the differences easily. This works only if you already have the project connected
    with a Git repo. You can go to the `Program.cs` to see the changes. An example
    of the changes is shown in *Figure 14.12*:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在清理完成后，所有文件都将被保存。我们可以打开一个文件来查看更改，但使用 Visual Studio 中的 Git 集成，我们可以轻松地看到差异。这仅适用于您已经将项目连接到
    Git 仓库的情况。您可以去查看 `Program.cs` 文件中的更改。更改的示例显示在*图 14.12*中：
- en: '![Figure 14.12 – A clean up in process using CodeMaid'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.12 – 使用 CodeMaid 进行清理过程'
- en: '](img/Figure_14.12_B17873.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_14.12_B17873.jpg)'
- en: Figure 14.12 – A clean up in process using CodeMaid
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.12 – 使用 CodeMaid 进行清理过程
- en: In `Program.cs`, we can see two lines with some spaces in the `if` statement
    that CodeMaid removed.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `Program.cs` 中，我们可以看到 CodeMaid 移除的 `if` 语句中的一些带有空格的行。
- en: Important Note
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Reducing lines in code means reducing the size of a file. Blank lines and white
    spaces make code difficult to read and increase a project size when published.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 减少代码中的行数意味着减少文件的大小。空白行和空白空间会使代码难以阅读，并在发布时增加项目大小。
- en: 'CodeMaid has some options that we can turn on or turn off, depending on our
    needs. Navigate to **Extensions** | **CodeMaid** | **Options** and select the
    **Remove** section to choose scenarios where CodeMaid can remove code (see *Figure
    14.13*):'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: CodeMaid 有一些我们可以根据需要打开或关闭的选项。导航到**扩展** | **CodeMaid** | **选项**并选择**移除**部分，以选择
    CodeMaid 可以移除代码的场景（见*图 14.13*）：
- en: '![Figure 14.13 – User Settings for CodeMaid'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.13 – CodeMaid 的用户设置'
- en: '](img/Figure_14.13_B17873.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_14.13_B17873.jpg)'
- en: Figure 14.13 – User Settings for CodeMaid
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.13 – CodeMaid 的用户设置
- en: CodeMaid also has many options related to removing blank lines and blank spaces.
    By default, all the options are enabled, but you can click on the options that
    you want to disable to set up CodeMaid according to the guidelines in your project.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: CodeMaid 还有许多与删除空白行和空白空间相关的选项。默认情况下，所有选项都启用，但您可以选择禁用某些选项，以根据项目指南设置 CodeMaid。
- en: 'You can read more information about CodeMaid on the official website: [https://www.codemaid.net/](https://www.codemaid.net/).'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在官方网站上了解更多关于 CodeMaid 的信息：[https://www.codemaid.net/](https://www.codemaid.net/).
- en: Now that you know how CodeMaid works and can use it to clean up your projects,
    let's review the next extension to compile web files in Visual Studio.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经了解了 CodeMaid 的工作原理，并可以使用它来清理您的项目，让我们回顾下一个扩展，用于在 Visual Studio 中编译网络文件。
- en: Compiling web libraries with Web Compiler
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Web 编译器编译网络库
- en: If you are using TypeScript, LESS, or Sass in a project, you need to pre-compile
    the code to get the production version of your web project, so the browser can
    read every line of code. Note that the browser can only read CSS, HTML, and JavaScript.
    Using Web Compiler in Visual Studio, you can do this easily and see the precompiled
    code directly.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在一个项目中使用 TypeScript、LESS 或 Sass，你需要预编译代码以获取你 Web 项目的生产版本，这样浏览器就可以读取每一行代码。请注意，浏览器只能读取
    CSS、HTML 和 JavaScript。在 Visual Studio 中使用 Web 编译器，你可以轻松完成此操作并直接查看预编译的代码。
- en: Now that we know what Web Compiler is, let's install it and learn how to take
    advantage of this tool.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经知道了 Web 编译器是什么，那么让我们来安装它，并学习如何利用这个工具。
- en: Installing Web Compiler
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Web 编译器
- en: 'To install Web Compiler, go to `web compiler` in the search bar (see *Figure
    14.14*):'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Web 编译器，请在搜索栏中转到 `web compiler`（见 *图 14.14*）：
- en: '![Figure 14.14 – Searching for Web Compiler in Manage Extensions](img/Figure_14.14_B17873.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.14 – 在管理扩展中搜索 Web 编译器](img/Figure_14.14_B17873.jpg)'
- en: Figure 14.14 – Searching for Web Compiler in Manage Extensions
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.14 – 在管理扩展中搜索 Web 编译器
- en: We can now follow the same steps that we did in the *Adding HTML Snippet Pack*
    section to complete the installation. After closing and then opening Visual Studio,
    you will see that the installation of this new extension is completed. Now, we
    will be able to use it in our `SPAProject`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以遵循与 *添加 HTML 片段包* 部分中相同的步骤来完成安装。关闭并重新打开 Visual Studio 后，您将看到新扩展的安装已完成。现在，我们将在我们的
    `SPAProject` 中使用它。
- en: Using Web Compiler
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Web 编译器
- en: 'To use Web Compiler, we can navigate and select any JavaScript file in the
    project, and we will see a new option in the menu after right-clicking. For example,
    let''s select`aspnetcore-react.js` (see *Figure 14.15*):'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Web 编译器，我们可以导航并选择项目中的任何 JavaScript 文件，右键单击后将在菜单中看到一个新选项。例如，让我们选择 `aspnetcore-react.js`（见
    *图 14.15*）：
- en: '![Figure 14.15 – The Web Compiler option in the project to compile a file'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.15 – 在项目中编译文件的 Web 编译器选项](img/Figure_14.15_B17873.jpg)'
- en: '](img/Figure_14.15_B17873.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.15 – 在管理扩展中搜索 Web 编译器](img/Figure_14.15_B17873.jpg)'
- en: Figure 14.15 – The Web Compiler option in the project to compile a file
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.15 – 在项目中编译文件的 Web 编译器选项
- en: 'Using the **Web Compiler** | **Compile file** option, we can compile the file
    and generate a new version using **ECMAScript 2009** (**ES5**), which is a JavaScript
    specification that allows us to support old browser versions. See the file generated
    in *Figure 14.16*:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 **Web 编译器** | **编译文件** 选项，我们可以编译文件并使用 **ECMAScript 2009** (**ES5**) 生成一个新的版本，这是一个允许我们支持旧版浏览器的
    JavaScript 规范。请参见 *图 14.16* 中生成的文件：
- en: '![Figure 14.16 – aspnetcore-react.es5.js, generated by Web Compiler'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.16 – 由 Web 编译器生成的 aspnetcore-react.es5.js](img/Figure_14.16_B17873.jpg)'
- en: '](img/Figure_14.16_B17873.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.16 – 由 Web 编译器生成的 aspnetcore-react.es5.js](img/Figure_14.16_B17873.jpg)'
- en: Figure 14.16 – aspnetcore-react.es5.js, generated by Web Compiler
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.16 – 由 Web 编译器生成的 aspnetcore-react.es5.js
- en: The `aspnetcore-react.es5.js` file contains the same logic as `aspnetcore-react.js`,
    but it uses different syntaxes.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`aspnetcore-react.es5.js` 文件包含与 `aspnetcore-react.js` 相同的逻辑，但使用不同的语法。'
- en: 'The following code represents the first 20 lines of the `aspnetcore-react.js`
    file:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码表示 `aspnetcore-react.js` 文件的前 20 行：
- en: '[PRE0]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The `aspnetcore-react.js` file contains some logic related to the interaction
    between the `asp.net` application in the backend and the React application. This
    file uses the last features in JavaScript, so Web Compiler needs to compile the
    code to an old version to support the old browser and increase the compatibility
    with other libraries.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '`aspnetcore-react.js` 文件包含一些与后端 `asp.net` 应用程序和 React 应用程序之间交互相关的逻辑。此文件使用 JavaScript
    的最新功能，因此 Web 编译器需要将代码编译到旧版本以支持旧浏览器并提高与其他库的兼容性。'
- en: 'The following code represents the first 20 lines of the `aspnetcore-react.es5.js`
    file:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码表示 `aspnetcore-react.es5.js` 文件的前 20 行：
- en: '[PRE15]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Each file added to Web Compiler will be included in a file called `compilerconfig.json`.
    This file is associated with the compilation process with Visual Studio. This
    means that we can build and publish the project normally, and the files associated
    will be generated automatically.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 添加到 Web 编译器中的每个文件都将包含在一个名为 `compilerconfig.json` 的文件中。此文件与 Visual Studio 的编译过程相关联。这意味着我们可以正常构建和发布项目，相关文件将自动生成。
- en: 'This is an example of the `compilerconfig.json` file after using it in the
    `aspnetcore-react.js` file:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用 `aspnetcore-react.js` 文件后 `compilerconfig.json` 文件的示例：
- en: '[PRE29]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Each configuration is a JSON object that contains two properties – `inputFile`
    is the location of the source file to compile, and `outputFile` has the location
    of the file generated by Web Compiler.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 每个配置都是一个包含两个属性的 JSON 对象 – `inputFile` 是要编译的源文件的位置，而 `outputFile` 是 Web Compiler
    生成的文件的位置。
- en: Important Note
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: You can use *Shift* + *Alt* + *Y* to compile all the files included in `compilerconfig.json`.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 *Shift* + *Alt* + *Y* 编译 `compilerconfig.json` 中包含的所有文件。
- en: 'For more information, you can read the documentation on GitHub: [https://github.com/failwyn/WebCompiler](https://github.com/failwyn/WebCompiler).'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，您可以在 GitHub 上的文档中阅读：[https://github.com/failwyn/WebCompiler](https://github.com/failwyn/WebCompiler)。
- en: Now you know how to use Web Compiler and how to transform JavaScript files to
    use ES5\. Let's see another extension that extends the functionalities in our
    editor and allows us to see some guides and easily distinguish white and blank
    spaces.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经了解了如何使用 Web Compiler 以及如何将 JavaScript 文件转换为使用 ES5。让我们看看另一个扩展，它扩展了我们的编辑器的功能，并允许我们查看一些指南，轻松区分空白和空白空间。
- en: Identifying white spaces with Indent Guides
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用缩进指南识别空白
- en: In [*Chapter 13*](B17873_13_ePub.xhtml#_idTextAnchor149), *Extensions in Visual
    Studio*, we reviewed some extensions in Visual Studio, including Color Preview.
    With these extensions, we learned how the text editor in Visual Studio can be
    extended to improve our experience and provide more tools for some technologies
    and scenarios. Indent Guides is another example of this type of extension that
    extends the text editor in Visual Studio.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第 13 章*](B17873_13_ePub.xhtml#_idTextAnchor149)“Visual Studio 中的扩展”，我们回顾了一些
    Visual Studio 中的扩展，包括颜色预览。使用这些扩展，我们学习了如何扩展 Visual Studio 中的文本编辑器以提升我们的体验并提供更多针对某些技术和场景的工具。缩进指南就是这类扩展的另一个例子，它扩展了
    Visual Studio 中的文本编辑器。
- en: Indent Guides is a simple but useful extension that helps us identify extra
    white spaces and indentations in the structure of code.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 缩进指南是一个简单但实用的扩展，帮助我们识别代码结构中的额外空白和缩进。
- en: Installing Indent Guides
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装缩进指南
- en: 'To install Indent Guides, go to `Indent Guides` in the search bar (see *Figure
    14.17*):'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装缩进指南，请在搜索栏中的`缩进指南`处进行操作（见*图 14.17*）：
- en: '![Figure 14.17 – Indent Guides in Manage Extensions'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.17 – 管理扩展中的缩进指南'
- en: '](img/Figure_14.17_B17873.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_14.17_B17873.jpg]'
- en: Figure 14.17 – Indent Guides in Manage Extensions
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.17 – 管理扩展中的缩进指南
- en: 'Click on `index.html` file and see new guides that show us white spaces and
    tabs between text and the elements in the text editor (see *Figure 14.18*):'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 点击`index.html`文件，查看在文本编辑器中显示的新的指南，这些指南展示了文本和文本编辑器中的元素之间的空白和制表符（见*图 14.18*）：
- en: '![Figure 14.18 – Guides in the Visual Studio text editor'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.18 – Visual Studio 文本编辑器中的指南'
- en: '](img/Figure_14.18_B17873.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_14.18_B17873.jpg]'
- en: Figure 14.18 – Guides in the Visual Studio text editor
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.18 – Visual Studio 文本编辑器中的指南
- en: This tool is amazing for improving the formatting in our files and is compatible
    with all the programming languages supported by Visual Studio. There are some
    additional options that we can adjust to fit our preferences. Navigate to **Tools**
    | **Options** | **Indent Guides**. There, we will find many options to change
    the appearance, behavior, and highlights and set a quick start or default configuration.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 此工具对于改善我们文件的格式非常出色，并且与 Visual Studio 支持的所有编程语言兼容。还有一些额外的选项我们可以调整以适应我们的偏好。导航到**工具**
    | **选项** | **缩进指南**。在那里，我们将找到许多选项来更改外观、行为和突出显示，并设置快速启动或默认配置。
- en: Summary
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Visual Studio has a marketplace with many extensions that we can access using
    the Visual Studio **Manage Extensions** option. We can find many extensions related
    to code snippets in the Studio Marketplace and use HTML Snippet Pack to improve
    our productivity while coding in HTML files.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 有一个市场，其中包含许多我们可以通过使用 Visual Studio **管理扩展**选项访问的扩展。在 Studio 市场中，我们可以找到许多与代码片段相关的扩展，并使用
    HTML Snippet Pack 来提高我们在 HTML 文件中编码时的生产力。
- en: You now know how to use CodeMaid to clean up code and improve code quality in
    your projects. You can easily remove empty lines and white spaces and create a
    custom validation format for all the files in your project. You also learned how
    to install Web Compiler to compile and transform web files such as JavaScript
    files or libraries such as LESS and Sass into generic code that a browser can
    easily read. Finally, you explored the Indent Guides extension, which shows us
    white and blank spaces in code to identify how to improve the format and structure
    of files.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经知道了如何使用CodeMaid来清理代码并提高项目中的代码质量。你可以轻松地删除空行和空白，并为项目中的所有文件创建自定义验证格式。你还学习了如何安装Web
    Compiler来编译和转换网页文件，例如JavaScript文件或库，如LESS和Sass，将其转换为浏览器可以轻松读取的通用代码。最后，你探索了Indent
    Guides扩展，它显示了代码中的空白和空白字符，帮助我们识别如何改进文件的格式和结构。
- en: In [*Chapter 15*](B17873_15_ePub.xhtml#_idTextAnchor171), *Learning Keyboard
    Shortcuts*, you will review the most important shortcuts included in Visual Studio
    by default. With this knowledge, you will use a combination of some keyboard keys
    to perform common actions in Visual Studio.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第15章*](B17873_15_ePub.xhtml#_idTextAnchor171)“学习键盘快捷键”中，你将回顾Visual Studio默认包含的最重要快捷键。有了这些知识，你将使用一些键盘键的组合在Visual
    Studio中执行常见操作。
