["```cs\nusing var meterProvider = Sdk.CreateMeterProviderBuilder()\n  .AddMeter(\"queue.*\")\n  .AddOtlpExporter()\n  .Build()!;\n```", "```cs\nprivate static Meter Meter = new(\"queue.producer\");\nprivate static Counter<long> EnqueuedCounter =\n  Meter.CreateCounter<long>(\"queue.enqueued.count\",\n    \"{count}\",\n    \"Number of enqueued work items\");\n```", "```cs\nEnqueuedCounter.Add(1,\n  new KeyValuePair<string, object?>(\"queue\", _queueName))\n```", "```cs\n# HELP queue_enqueued_count_total Number of enqueued work items\n# TYPE queue_enqueued_count_total counter\nqueue_enqueued_count_total{job=\"metrics \",queue=\"add\"} 323\nqueue_enqueued_count_total{job=\"metrics \",queue=\"remove\"} 323\n```", "```cs\nAddOtlpExporter((exporterOptions, readerOptions) =>\n  readerOptions.PeriodicExportingMetricReaderOptions\n    .ExportIntervalMilliseconds = 5000)\n```", "```cs\n_queueNameTag = new KeyValuePair<string, object?>(\"queue\",\n   queueName);\n_meter = new Meter(\"queue.processor\");\n_queueLengthCounter = _meter\n  .CreateObservableUpDownCounter(\n    \"queue.length\",\n    () => new Measurement<int>(queue.Count, _queueNameTag),\n    \"{items}\",\n    \"Queue length\");\n```", "```cs\n# HELP queue_length Queue length\n# TYPE queue_length gauge\nqueue_length{job=\"metrics\",queue=\"add\"} 2\nqueue_length{job=\"metrics\",queue=\"remove\"} 0\nqueue_length{job=\"metrics\",queue=\"update\"} 157\n```", "```cs\n_sequenceNumberGauge = _meter\n  .CreateObservableGauge(\n    \"processor.last_sequence_number\",\n    () => new Measurement<long>(_seqNo, _queueNameTag),\n    null,\n    \"Sequence number of the last dequeued item\");\n```", "```cs\n_processingDurationHistogram = _meter\n  .CreateHistogram<double>(\n    \"processor.processing.duration\",\n    \"ms\",\n    \"Item processing duration\");\n```", "```cs\nStopwatch? duration = _processingDurationHistogram\n  .Enabled ? Stopwatch.StartNew() : null;\nvar status = await Process(item);\nif (duration != null)\n  _processingDurationHistogram.Record(\n    duration.Elapsed.TotalMilliseconds,\n    _queueNameTag,\n    new KeyValuePair<string, object?>(\"status\",\n      StatusToString(status)));\n```", "```cs\nprocessor_processing_duration_milliseconds_bucket{le=\"0\"} 0\n...\nprocessor_processing_duration_milliseconds_bucket{le=\"50\"} 27\nprocessor_processing_duration_milliseconds_bucket{le=\"75\"} 52\nprocessor_processing_duration_milliseconds_bucket{le=\"100\"} 67\nprocessor_processing_duration_milliseconds_bucket{le=\"250\"} 72\n...\nprocessor_processing_duration_milliseconds_bucket{le=\"+Inf\"} 72\nprocessor_processing_duration_milliseconds_sum\n  4145.833300000001\nprocessor_processing_duration_milliseconds_count 72\n```", "```cs\nhistogram_quantile(0.5, sum(rate(processor_processing_duration_milliseconds_bucket{status=\"Ok\"}[1m])) by (le, queue))\n```"]