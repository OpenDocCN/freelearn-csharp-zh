["```cs\ndotnet --version\n```", "```cs\ndotnet new\n```", "```cs\ndotnet new webapp –h\n```", "```cs\ndotnet new list\n```", "```cs\ndotnet new razor -n MySecondWebRazor\n```", "```cs\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddRazorPages();\nvar app = builder.Build();\nif (!app.Environment.IsDevelopment())\n{\n    app.UseExceptionHandler(\"/Error\");\n    app.UseHsts();\n}\napp.UseHttpsRedirection();\napp.UseStaticFiles();\napp.UseRouting();\napp.UseAuthorization();\napp.MapRazorPages();\napp.Run();\n```", "```cs\n@page\n@model IndexModel\n@{\n    ViewData[\"Title\"] = \"Home page\";\n}\n<div class=\"text-center\">\n    <h1 class=\"display-4\">Welcome</h1>\n    <p>Learn about <a\n      href=\"https://learn.microsoft.com/aspnet/core\">\n      building Web apps with ASP.NET Core</a>.</p>\n</div>\n```", "```cs\npublic class IndexModel : PageModel\n {\n     private readonly ILogger<IndexModel> _logger;\n     public IndexModel(ILogger<IndexModel> logger)\n     {\n         _logger = logger;\n     }\n     public void OnGet()\n     {\n     }\n }\n```", "```cs\n<html lang=\"en\">\n<head>\n    <!-- The rest of the code has been omitted for\n      readability. -->\n    <title>@ViewData[\"Title\"] - MyFirstRazorWebApp</title>\n    <!-- The rest of the code has been omitted for\n      readability. -->\n<div class=\"container\">\n    <main role=\"main\" class=\"pb-3\">\n        @RenderBody()\n    </main>\n</div>\n```", "```cs\n    string subtitle = \"It's funny\";\n    ```", "```cs\n    <h1 class=\"display-4\">Welcome</h1>\n      <p>Learn about <a\n        href=\"https://learn.microsoft.com/aspnet/core\">\n        building Web apps with ASP.NET Core</a>.</p>\n    <h2>@Model.Message</h2><br />\n    <h3>@subtitle</h3>\n      <a asp-page-handler=\"DefineColor\"\n        asp-route-id=\"1\">Red</a>\n      <a asp-page-handler=\"DefineColor\"\n        asp-route-id=\"2\">Green</a>\n      <div style=\"width: 200px;height:200px;\n        background-color:@Model.Color\"></div>\n      <form method=\"post\">\n        <label>Total:</label><input type=\"text\"\n          name=\"quantity\"/>\n        <input type=\"submit\" value=\"Load Products\"\n          name=\"btn\" />\n      </form>\n      <table class=\"table\">\n        <thead>\n            <tr>\n                <th>Id</th>\n                <th>Nome</th>\n                <th>Preço</th>\n            </tr>\n        </thead>\n        <tbody>\n            @foreach (var product in Model.Products)\n            {\n                <tr>\n                    <td>@product.Id</td>\n                    <td>@product.Name</td>\n                    <td>@product.Price.ToString(\"C\")</td>\n                </tr>\n            }\n        </tbody>\n      </table>\n    ```", "```cs\n    public string FormattedPrice\n        {\n            get { return price.ToString(\"C\",\n              CultureInfo.GetCultureInfo(\"en-US\")); }\n        }\n    ```", "```cs\n    <td>@product.FormattedPrice</td>\n    ```", "```cs\n    app.UseRequestLocalization(new\n      RequestLocalizationOptions\n    {\n      DefaultRequestCulture = new RequestCulture(\"en-US\"),\n      SupportedCultures = new List<CultureInfo>\n      {\n        new CultureInfo(\"en-US\")\n      }\n    });\n    ```", "```cs\n  <h2>@Model.Message</h2><br />\n  <h3>@subtitle</h3>\n```", "```cs\n<a asp-page-handler=\"DefineColor\" asp-route-id=\"1\">Red</a>\n<a asp-page-handler=\"DefineColor\"\n  asp-route-id=\"2\">Green</a>\n    <div style=\"width: 200px;height:200px;\n      background-color:@Model.Color\"></div>\n```", "```cs\n@foreach (var product in Model.Products)\n {\n     <tr>\n         <td>@product.Id</td>\n         <td>@product.Name</td>\n         <td>@product.Price.ToString(\"C\")</td>\n     </tr>\n }\n```", "```cs\n    public string Message { get; set; }\n    ```", "```cs\n    public class Product\n    {\n        public int Id { get; set; }\n        public string Name { get; set; }\n        public decimal Price { get; set; }\n    }\n    ```", "```cs\n    public List<Product> Products { get; set; }\n    ```", "```cs\n    public string Color { get; set; }\n    ```", "```cs\n    private List<Product> GenerateProduct(int quantity)\n    {\n        var random = new Random();\n        var products = Enumerable.Range(1,\n          quantity).Select(i => new Product\n        {\n            Id = i,\n            Name = $\"Product {i}\",\n            Price = (decimal)(random.NextDouble() * 100.0)\n        });\n        return products;\n    }\n    ```", "```cs\n    public IndexModel(ILogger<IndexModel> logger)\n    {\n        _logger = logger;\n        Products = GenerateProduct(10);\n        Message = \"I'm using the Razor Syntax.\";\n    }\n    ```", "```cs\n    public void OnPost(int quantity)\n    {\n        Products = GenerateProduct(quantity);\n    }\n    ```", "```cs\n    public void OnGetDefineColor(int id)\n    {\n        Color = id == 1 ? \"#FF0000\" : \"green\";\n    }\n    ```", "```cs\n<a asp-page-handler=\"DefineColor\" asp-route-id=\"1\">Red</a>\n```", "```cs\n    dotnet new mvc --name MyFirstMVCApp\n    ```", "```cs\n    cd MyFirstMVCApp\n    code.\n    ```", "```cs\napp.MapControllerRoute(\n    name: \"default\",\n    pattern: \"{controller=Home}/{action=Index}/{id?}\");\n```", "```cs\npublic class PersonController : Controller\n{\n    public IActionResult Index()\n    {\n        return View();\n    }\n    public JsonResult GetPeople()\n    {\n        var model = new List<PersonModel>() {\n            new PersonModel(\"Person 1\",\n              new DateTime(1980, 12, 11)),\n            new PersonModel(\"Person 2\",\n              new DateTime(1983, 12, 15))\n        };\n        return Json(model);\n    }\n    public IActionResult Register(PersonModel personModel)\n    {\n        return RedirectToAction(\"Result\",\n          new { message =  $\"The {personModel.Name}\n          was registered successfully.\" });\n    }\n    public IActionResult Result(string message)\n    {\n        ViewData[\"Message\"] = message;\n        return View();\n    }\n}\n```", "```cs\n@model MyFirstMVCApp.Models.PersonModel\n@{\n    ViewData[\"Title\"] = \"Home Page\";\n}\n<div class=\"text-center\">\n    <h1 class=\"display-4\">Person View</h1>\n</div>\n<div>\n    <form method=\"post\" asp-controller=\"Person\"\n      asp-action=\"Register\">\n        @Html.LabelFor(p => p.Name)\n        @Html.TextBoxFor(p => p.Name)\n        <br/>\n        @Html.LabelFor(p => p.DateOfBirth)\n        @Html.TextBoxFor(p => p.DateOfBirth)\n        <input type=\"submit\" value=\"Register\" />\n    </form>\n</div>\n```", "```cs\ndotnet new blazor --name MyFirstBlazorApp\n```", "```cs\n@page \"/counter\"\n@attribute [RenderModeServer]\n<PageTitle>Counter</PageTitle>\n<h1>Counter</h1>\n<p role=\"status\">Current count: @currentCount</p>\n<button class=\"btn btn-primary\"\n  @onclick=\"IncrementCount\">Click me</button>\n@code {\n    private int currentCount = 0;\n    private void IncrementCount()\n    {\n        currentCount++;\n    }\n}\n```", "```cs\nnamespace MyFirstBlazorApp.Pages;\npublic partial class CounterPartialClass\n{\n    private int currentCount = 0;\n    private void IncrementCount()\n    {\n        currentCount++;\n    }\n}\n```", "```cs\n    @using System.Net.Http\n    @using Microsoft.AspNetCore.Authorization\n    @using Microsoft.AspNetCore.Components.Authorization\n    @using Microsoft.AspNetCore.Components.Forms\n    @using Microsoft.AspNetCore.Components.Routing\n    @using Microsoft.AspNetCore.Components.Web\n    @using Microsoft.AspNetCore.Components.Web\n      .Virtualization\n    @using Microsoft.JSInterop\n    @using {CHANGE_FOR_THE_NAMESPACE_OF_YOUR_PROJECT}\n    ```", "```cs\n    <base href=\"~/\" />\n    <component type=\"typeof(Microsoft.AspNetCore\n      .Components.Web.HeadOutlet)\"\n        render-mode=\"ServerPrerendered\" />\n    ```", "```cs\n    <script src=\"img/blazor.server.js\"></script>\n    ```", "```cs\n    builder.Services.AddServerSideBlazor();\n    ```", "```cs\n    app.MapBlazorHub();\n    ```", "```cs\n    <h1>Load Technologies</h1>\n    <button class=\"btn btn-primary\"\n      @onclick=\"LoadTechnologies\">Load</button>\n    @if (technologies != null)\n    {\n        <ul>\n            @foreach(var tech in technologies)\n            {\n                <li>@tech</li>\n            }\n        </ul>\n    }\n    @code {\n        private int currentCount = 0;\n        private string[]? technologies;\n        private void LoadTechnologies()\n        {\n            technologies = new[] { \"Razor Pages\",\n              \"MVC\", \"Blazor\"};\n        }\n    }\n    ```", "```cs\n    <component type=\"typeof(Counter)\"\n      render-mode=\"ServerPrerendered\" />\n    ```"]