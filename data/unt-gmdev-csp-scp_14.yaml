- en: '14'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '14'
- en: Exploring XR in Unity – Developing Virtual and Augmented Reality Experiences
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索Unity中的XR – 开发虚拟和增强现实体验
- en: Embark on an exciting journey into the world of **Extended Reality** (**XR**)
    with Unity, where you’ll learn to create both VR and AR experiences. This chapter
    will ground you in the essential principles of VR, guiding you through the setup
    and configuration necessary to build immersive VR environments. You will then
    progress to implementing AR functionalities, understanding tracking mechanisms,
    and integrating digital enhancements into the physical world. Discover how to
    design interactive elements tailored specifically for VR/AR, enhancing user engagement
    and immersion. The chapter wraps up with strategies for optimizing VR/AR applications
    to ensure smooth performance across various devices. Examples in this chapter
    will include developing an interactive VR experience and creating an AR application
    with real-world object interaction. Best practices and use cases will highlight
    the importance of user comfort, accessibility, and performance optimization in
    immersive experiences.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 与Unity一起踏上激动人心的**扩展现实**（**XR**）之旅，您将学习如何创建VR和AR体验。本章将为您奠定VR的基本原则，指导您完成构建沉浸式VR环境所需的设置和配置。然后，您将进入实现AR功能、理解跟踪机制以及将数字增强集成到物理世界中的阶段。您将发现如何设计专为VR/AR量身定制的交互元素，增强用户参与度和沉浸感。本章以优化VR/AR应用程序的策略结束，以确保在各种设备上实现流畅的性能。本章中的示例将包括开发交互式VR体验和创建具有真实世界物体交互的AR应用程序。最佳实践和用例将强调用户舒适度、可访问性和沉浸式体验性能优化的重要性。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖以下主题：
- en: Understanding VR principles and setup in Unity
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解Unity中的VR原则和设置
- en: Implementing AR functionalities and tracking
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现AR功能和跟踪
- en: Designing interactive elements for VR/AR
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为VR/AR设计交互元素
- en: Optimizing VR/AR applications for different devices
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化VR/AR应用程序以适应不同设备
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Before you start, ensure your development environment is set up as described
    in [*Chapter 1*](B22128_01.xhtml#_idTextAnchor015). This includes having the latest
    recommended version of Unity and a suitable code editor installed on your system.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，请确保您的开发环境已按照[*第1章*](B22128_01.xhtml#_idTextAnchor015)中描述的设置完成。这包括在您的系统上安装最新推荐的Unity版本和合适的代码编辑器。
- en: 'Hardware requirements:'
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 硬件要求：
- en: 'Desktop computer:'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 台式计算机：
- en: Graphics card that supports at least DX10 (shader model 4.0)
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持至少DX10（着色器模型4.0）的显卡
- en: Minimum of 8 GB RAM for optimal performance
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少8 GB RAM以实现最佳性能
- en: 'AR devices:'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AR设备：
- en: iPhone (supports ARKit)
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: iPhone（支持ARKit）
- en: Other smartphones and tablets compatible with ARCore (e.g., select Android devices)
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与ARCore兼容的其他智能手机和平板电脑（例如，选择Android设备）
- en: 'VR devices:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VR设备：
- en: Oculus Quest 3 VR headset
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oculus Quest 3 VR头戴式设备
- en: HTC Vive VR headset
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTC Vive VR头戴式设备
- en: Microsoft HoloLens for mixed reality
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软HoloLens混合现实设备
- en: 'Software requirements:'
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件要求：
- en: '**Unity Editor**: Utilize the version of the Unity Editor installed from [*Chapter
    1*](B22128_01.xhtml#_idTextAnchor015), ideally the latest **Long-Term Support**
    (**LTS**) version'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Unity编辑器**：使用从[*第1章*](B22128_01.xhtml#_idTextAnchor015)安装的Unity编辑器版本，理想情况下是最新**长期支持**（**LTS**）版本'
- en: '**Code Editor**: Visual Studio or Visual Studio Code, with Unity development
    tools, should already be integrated as per the initial setup'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码编辑器**：Visual Studio或Visual Studio Code，应已根据初始设置集成Unity开发工具'
- en: 'You can find the examples/files related to this chapter here: [https://github.com/PacktPublishing/Unity-6-Game-Development-with-C-Scripting/tree/main/Chapter14](https://github.com/PacktPublishing/Unity-6-Game-Development-with-C-Scripting/tree/main/Chapter14)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此处找到与本章相关的示例/文件：[https://github.com/PacktPublishing/Unity-6-Game-Development-with-C-Scripting/tree/main/Chapter14](https://github.com/PacktPublishing/Unity-6-Game-Development-with-C-Scripting/tree/main/Chapter14)
- en: Fundamentals of VR in Unity
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Unity中VR的基础知识
- en: Begin your journey into virtual reality development with a comprehensive introduction
    to VR, covering the essential concepts, hardware requirements, and Unity environment
    setup. This section will guide you through configuring VR devices with Unity,
    exploring the available VR SDKs, and setting up a simple VR scene. Understanding
    the immersive nature of VR is crucial, so we’ll delve into spatial awareness,
    movement, and basic interaction principles. By the end of this section, you’ll
    have a solid foundation in the VR landscape within Unity, ready to create engaging
    and interactive VR experiences.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 开始你的虚拟现实开发之旅，通过全面介绍VR，涵盖基本概念、硬件要求和Unity环境设置。本节将指导你通过Unity配置VR设备，探索可用的VR SDKs，并设置一个简单的VR场景。理解VR的沉浸性至关重要，因此我们将深入探讨空间感知、移动和基本交互原则。到本节结束时，你将在Unity中的VR领域拥有坚实的基础，准备好创建引人入胜和交互式的VR体验。
- en: '**Virtual Reality** (**VR**) is a transformative technology that immerses users
    in a computer-generated environment, offering experiences that range from gaming
    to simulations and educational tools. This sub-section provides a foundational
    overview of VR, covering its history, key concepts, and primary components, setting
    the stage for more in-depth discussions on VR development in Unity.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**虚拟现实**（**VR**）是一种变革性技术，它将用户沉浸在计算机生成的环境中，提供从游戏到模拟和教育工具的各种体验。本小节提供了一个关于VR的基础概述，包括其历史、关键概念和主要组件，为在Unity中更深入地讨论VR开发奠定基础。'
- en: VR has a rich history, evolving from early experimental systems in the 1960s
    to the sophisticated headsets and applications we see today. At its core, VR aims
    to create an immersive experience that makes users feel as though they are physically
    present in a digital world, interacting with the environment and objects as they
    would in real life. Key components of a VR system include **head-mounted displays**
    (**HMDs**), controllers, and tracking systems. HMDs, such as the Oculus Rift and
    HTC Vive, provide stereoscopic displays and a wide field of view, essential for
    immersion. Controllers and tracking systems enable interaction with the virtual
    world, capturing hand movements and translating them into the VR environment.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: VR拥有丰富的历史，从20世纪60年代的早期实验系统发展到我们今天看到的复杂头戴设备和应用程序。其核心目标是创造一种沉浸式体验，使用户感觉仿佛他们真的身处一个数字世界中，以现实生活中的方式与环境及物体互动。VR系统的关键组件包括**头戴式显示器**（**HMDs**）、控制器和跟踪系统。HMDs，如Oculus
    Rift和HTC Vive，提供立体显示和宽阔的视野，这对于沉浸感至关重要。控制器和跟踪系统使虚拟世界的交互成为可能，捕捉手部动作并将它们转换为VR环境。
- en: The following is a screen capture of the **XR Origin** component, showcasing
    its settings for configuring camera and controller inputs in a VR environment.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了**XR Origin**组件，展示了其在VR环境中配置相机和控制器输入的设置。
- en: '![Figure 14.1 – The XR Origin component attached to a game object](img/B22128_14_1.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图14.1 – 附着于游戏对象的XR Origin组件](img/B22128_14_1.jpg)'
- en: Figure 14.1 – The XR Origin component attached to a game object
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.1 – 附着于游戏对象的XR Origin组件
- en: The **XR Origin** component is where you configure the Rig Base Game Object,
    which serves as the center of the VR environment. You also set up the floor offset
    and the camera. Typically, **Tracking Origin Mode** is set to **Device**. Finally,
    **Camera Y Offset** represents the average eye height from the floor, which is
    approximately **1.36144** meters.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**XR Origin**组件是配置Rig Base游戏对象的地方，该对象作为VR环境的中心。你还可以设置地板偏移和相机。通常，**跟踪原点模式**设置为**设备**。最后，**相机Y偏移**表示从地板到平均眼高的距离，大约为**1.36144**米。'
- en: The immersive nature of VR is what sets it apart from other technologies. By
    engaging multiple senses and providing interactive experiences, VR can transport
    users to entirely new worlds. This has profound applications not only in gaming
    but also in fields such as education, healthcare, and real estate. For instance,
    VR can be used to simulate surgical procedures for training doctors or to create
    virtual tours of properties for potential buyers. In downtown Tampa, Florida,
    a real estate developer has even generated a digital twin of the city ([https://www.unrealengine.com/en-US/spotlights/transforming-real-estate-visualization-with-an-xr-based-digital-twin-of-tampa](https://www.unrealengine.com/en-US/spotlights/transforming-real-estate-visualization-with-an-xr-based-digital-twin-of-tampa))
    that potential clients can explore. This project, detailed on Unreal Engine’s
    website, showcases how an XR-based digital twin can transform real estate visualization.
    Although this particular example uses Unreal Engine, similar projects can be built
    in Unity, often employing a hybrid approach that leverages the strengths of both
    engines.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: VR的沉浸式特性使其区别于其他技术。通过调动多个感官并提供交互式体验，VR可以将用户带入全新的世界。这不仅对游戏领域有深远的应用，还涉及教育、医疗和房地产等领域。例如，VR可以用于模拟手术过程以培训医生，或为潜在买家创建虚拟房产游览。在佛罗里达州坦帕市，一位房地产开发商甚至为潜在客户生成了一个城市的数字孪生（[https://www.unrealengine.com/en-US/spotlights/transforming-real-estate-visualization-with-an-xr-based-digital-twin-of-tampa](https://www.unrealengine.com/en-US/spotlights/transforming-real-estate-visualization-with-an-xr-based-digital-twin-of-tampa)）。该项目在Unreal
    Engine网站上详细介绍了基于XR的数字孪生如何改变房地产可视化。尽管这个特定的例子使用了Unreal Engine，但类似的项目也可以在Unity中构建，通常采用结合两种引擎优势的混合方法。
- en: Understanding the foundational concepts of VR, including its history, key components,
    and immersive nature, is essential for anyone venturing into VR development. This
    overview sets the stage for the practical steps of setting up a VR environment
    in Unity. Next, we will delve into setting up the VR environment in Unity, where
    we will configure the necessary tools and settings to begin building VR applications.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 理解VR的基础概念，包括其历史、关键组件和沉浸式特性，对于任何涉足VR开发的人来说都是至关重要的。本概述为在Unity中设置VR环境的实际步骤奠定了基础。接下来，我们将深入探讨在Unity中设置VR环境，我们将配置必要的工具和设置以开始构建VR应用程序。
- en: Setting up the VR environment in Unity
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Unity中设置VR环境
- en: Configuring a Unity project for VR development involves several technical steps
    to ensure a smooth and efficient workflow. This sub-section will guide you through
    the initial setup, including selecting appropriate build settings and platform-specific
    considerations. We will discuss integrating and configuring **Virtual Reality
    Software Development Kits** (**VR SDKs**) such as Oculus, SteamVR, and Unity’s
    XR Interaction Toolkit, and provide a walkthrough for setting up a basic VR scene.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 为VR开发配置Unity项目涉及几个技术步骤，以确保流畅和高效的工作流程。本节将指导您完成初始设置，包括选择适当的构建设置和平台特定考虑。我们将讨论集成和配置**虚拟现实软件开发工具包**（**VR
    SDKs**）如Oculus、SteamVR和Unity的XR交互工具包，并提供设置基本VR场景的教程。
- en: 'First, let’s take a look at the initial setup:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看初始设置：
- en: To begin setting up a VR environment in Unity, start by creating a new Unity
    project. Open Unity and select **New Project**, then choose a suitable template
    such as **3D template**.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始在Unity中设置VR环境，首先创建一个新的Unity项目。打开Unity并选择**新建项目**，然后选择一个合适的模板，例如**3D模板**。
- en: Once your project is created, go to **File** > **Build Settings** and select
    the target platform. For VR development, platforms such as PC, Android (for Oculus
    Quest), or others may be relevant. Ensure you have installed the required platform
    support via Unity Hub if needed.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建项目后，前往**文件** > **构建设置**并选择目标平台。对于VR开发，PC、Android（适用于Oculus Quest）或其他平台可能相关。如果需要，请通过Unity
    Hub安装所需的平台支持。
- en: 'Next, let’s integrate the necessary VR SDKs:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们集成必要的VR SDKs：
- en: Unity’s XR Plugin Management system simplifies this process. Go to **Edit**
    > **Project Settings** > **XR Plugin Management** and install the appropriate
    plugin for your VR device, such as Oculus or OpenVR.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Unity的XR插件管理系统简化了这一过程。前往**编辑** > **项目设置** > **XR插件管理**，为您的VR设备安装适当的插件，例如Oculus或OpenVR。
- en: After installation, enable the desired plugin, which will automatically configure
    your project for VR development.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装后，启用所需的插件，它将自动为VR开发配置您的项目。
- en: For this initial set-up, we will use Unity’s XR Interaction Toolkit, which provides
    a set of components to facilitate VR development. Begin by importing the XR Interaction
    Toolkit package. Go to **Window** > **Package Manager**, search for **XR Interaction
    Toolkit**, and click **Install**. Additionally, ensure you have the **XR Plugin
    Management** and **Input System** packages installed and enabled.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于这个初始设置，我们将使用Unity的XR交互工具包，它提供了一套组件以简化VR开发。首先，导入XR交互工具包包。转到**窗口** > **包管理器**，搜索**XR交互工具包**，然后点击**安装**。此外，请确保您已安装并启用了**XR插件管理**和**输入系统**包。
- en: 'Setting up a basic VR scene involves configuring the camera rig and importing
    necessary assets:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 设置基本VR场景涉及配置相机装置和导入必要的资源：
- en: Start by creating a new scene or opening an existing one.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先创建一个新的场景或打开现有的场景。
- en: Delete the default **Main Camera** and replace it with an **XR Origin** by going
    to **GameObject** > **XR** > **XR Origin**. This rig includes a camera setup optimized
    for VR. Adjust the rig’s position and settings as needed to fit your scene. It’s
    important to ensure that your VR world has a defined center or origin point, which
    serves as a reference for positioning objects and interactions within the scene.
    The XR Origin typically provides this functionality, alternatively use **GameObject**
    > **XR** > **XR Origin**.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除默认的**主相机**，通过转到**游戏对象** > **XR** > **XR起点**来替换为**XR起点**。这个装置包括一个针对VR优化的相机设置。根据需要调整装置的位置和设置以适应您的场景。确保您的VR世界有一个定义的中心或起点，它作为在场景中定位对象和交互的参考点。XR起点通常提供此功能，否则可以使用**游戏对象**
    > **XR** > **XR起点**。
- en: Import any necessary assets, such as 3D models, textures, and prefabs, to populate
    your VR environment. You can use assets from the Unity Asset Store or import custom
    models. Ensure these assets are appropriately scaled and positioned for VR.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入任何必要的资源，例如3D模型、纹理和预制体，以填充您的VR环境。您可以使用Unity资源商店中的资源或导入自定义模型。确保这些资源已适当地缩放和定位以适应VR。
- en: 'Configuring the VR environment in Unity requires a simple script to initialize
    and manage the XR settings. The following is an example script for this purpose:'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Unity中配置VR环境需要一段简单的脚本以初始化和管理XR设置。以下是为此目的的示例脚本：
- en: '[PRE0]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This script initializes the XR environment when the application starts and properly
    shuts it down when the application is disabled.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此脚本在应用程序启动时初始化XR环境，并在应用程序禁用时正确关闭。
- en: Setting up the VR environment in Unity involves selecting appropriate build
    settings, integrating VR SDKs, and configuring a basic VR scene.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity中设置VR环境涉及选择合适的构建设置、集成VR SDK和配置基本VR场景。
- en: By following these steps, you can prepare your Unity project for VR development
    efficiently. Next, we will explore basic VR interaction and movement principles,
    where we will delve into creating interactive and immersive VR experiences.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循这些步骤，您可以高效地为Unity项目准备VR开发。接下来，我们将探讨基本VR交互和运动原理，我们将深入探讨创建交互式和沉浸式VR体验。
- en: Basic VR interaction and movement principles
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本VR交互和运动原理
- en: Interaction and movement within VR environments are pivotal to creating immersive
    and engaging experiences. In this sub-section, we explore spatial awareness, user
    comfort, and various locomotion methods such as teleportation and smooth movement.
    These aspects significantly impact user experience and need careful consideration.
    Additionally, we’ll cover the basics of implementing VR controller inputs for
    interactions with objects in the scene, such as grabbing, throwing, or pushing,
    and offer best practices for designing intuitive and comfortable VR interactions
    to mitigate issues such as motion sickness.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: VR环境中的交互和运动对于创建沉浸式和吸引人的体验至关重要。在本节中，我们探讨空间感知、用户舒适度以及各种移动方法，如传送和平滑移动。这些方面对用户体验有重大影响，需要仔细考虑。此外，我们还将介绍实现VR控制器输入以与场景中的对象进行交互（如抓取、投掷或推动）的基本知识，并提供设计直观和舒适的VR交互的最佳实践，以减轻如晕动症等问题。
- en: 'First, let’s look at the core interaction principles:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看核心交互原则：
- en: '**Spatial awareness and** **user comfort**:'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**空间感知**和**用户舒适度**：'
- en: '**Spatial awareness**: Understanding and implementing spatial awareness in
    VR is essential. This involves designing environments that align with real-world
    physics and user expectations.'
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**空间感知**：在VR中理解和实现空间感知至关重要。这涉及到设计符合现实世界物理和用户期望的环境。'
- en: '**User comfort**: Ensuring user comfort is paramount because VR experiences
    can easily induce motion sickness. Design considerations include minimizing motion
    sickness by avoiding rapid or unnatural movements and providing options for users
    to adjust movement sensitivity.'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户舒适度**：确保用户舒适度至关重要，因为VR体验很容易引起运动病。设计考虑因素包括通过避免快速或不自然的运动来最小化运动病，并为用户提供调整运动敏感度的选项。'
- en: '**Locomotion methods**:'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运动方式**:'
- en: '**Teleportation**: A common method in VR to prevent motion sickness. It involves
    instantaneously moving the user from one location to another, reducing the discomfort
    associated with continuous movement.'
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传送**：在VR中防止运动病的一种常见方法。它涉及将用户瞬间从一处移动到另一处，减少与持续运动相关的不适。'
- en: '**Smooth movement**: While more immersive, smooth movement can cause motion
    sickness if not implemented carefully. Techniques such as *vignetting* (darkening
    the edges of the screen) can help mitigate this. Vignetting reduces peripheral
    visual stimuli, which can decrease the likelihood of motion sickness.'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平滑运动**：虽然更沉浸，但如果实现不当，平滑运动可能会引起运动病。例如，*暗角*（屏幕边缘变暗）等技术可以帮助减轻这种情况。暗角减少了外围视觉刺激，从而降低了运动病的发生概率。'
- en: With an understanding of the core principles of VR interaction and movement,
    we can now continue building on this foundation. The next section will delve deeper
    into practical implementations, focusing on additional techniques for VR interactions
    and controller inputs in Unity. This includes grabbing, throwing, and pushing
    objects, as well as best practices for designing intuitive and comfortable VR
    experiences,
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在理解了VR交互和运动的核心原则之后，我们现在可以在此基础上继续构建。下一节将深入探讨实际应用，重点关注Unity中VR交互和控制器输入的附加技术。这包括抓取、抛掷和推动对象，以及设计直观和舒适的VR体验的最佳实践，
- en: Controller inputs and interaction
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控制器输入和交互
- en: 'Let’s delve into the process of implementing intuitive interactions using VR
    controllers in Unity. This involves detecting controller inputs and creating responsive
    interactions, such as grabbing and manipulating objects within the virtual environment,
    to enhance the immersive experience for users:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解在Unity中使用VR控制器实现直观交互的过程。这包括检测控制器输入并创建响应式交互，例如在虚拟环境中抓取和操作对象，以增强用户的沉浸式体验：
- en: '**Grabbing objects**: Using VR controllers to grab objects is an intuitive
    interaction method. Implementing this involves detecting controller inputs and
    attaching objects to the controllers:'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**抓取对象**：使用VR控制器抓取对象是一种直观的交互方法。实现这一方法涉及检测控制器输入并将对象附加到控制器上：'
- en: '[PRE1]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This script demonstrates how to set up a basic interaction in Unity using the
    XR Interaction Toolkit. The `GrabObject` class allows an object to be grabbed
    with a VR controller. It uses an `XRBaseInteractable` component, which listens
    for the `onSelectEntered` event. When this event is triggered, the `OnGrab` method
    is called, and a message `"Object grabbed!"` is logged to the console.
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此脚本演示了如何在Unity中使用XR Interaction Toolkit设置基本交互。`GrabObject`类允许使用VR控制器抓取对象。它使用`XRBaseInteractable`组件，该组件监听`onSelectEntered`事件。当此事件被触发时，`OnGrab`方法被调用，并在控制台记录消息`"Object
    grabbed!"`。
- en: '**Throwing and pushing objects**: These interactions build on the grabbing
    mechanism, allowing for more dynamic interaction by applying forces to objects
    when released.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**抛掷和推动对象**：这些交互基于抓取机制，通过在释放对象时施加力，允许更动态的交互。'
- en: 'Here are the best practices for VR interaction design:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是VR交互设计的最佳实践：
- en: '**Intuitive controls**: Designing controls that feel natural to the user is
    essential. This includes considering the physical layout of VR controllers and
    the expected behavior of interactions.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**直观控制**：设计感觉自然的控制方式至关重要。这包括考虑VR控制器的物理布局和交互的预期行为。'
- en: '**Preventing motion sickness**: Techniques such as reducing acceleration, providing
    stationary reference points, and using teleportation can help in preventing motion
    sickness.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**防止运动病**：通过减少加速度、提供静止参考点和使用传送等方法可以帮助防止运动病。'
- en: By understanding and implementing these core principles, you can create engaging
    and comfortable VR experiences. These foundational concepts set the stage for
    more advanced VR development, such as setting up a robust VR environment in Unity.
    Next, we will delve into building AR experiences, where we’ll cover the technical
    steps for configuring a Unity project for AR development and integrating AR SDKs.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 通过理解和实施这些核心原则，您可以创建引人入胜且舒适的VR体验。这些基础概念为更高级的VR开发奠定了基础，例如在Unity中设置一个强大的VR环境。接下来，我们将深入探讨构建AR体验，其中我们将涵盖配置Unity项目以进行AR开发并集成AR
    SDKs的技术步骤。
- en: Building AR experiences
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建AR体验
- en: '**Augmented reality** (**AR**) offers a unique opportunity to overlay digital
    content onto the real world, requiring a distinct approach compared to virtual
    reality. In this section, we will introduce AR development in Unity, focusing
    on essential AR SDKs including AR Foundation, various tracking methods such as
    image, plane, and face tracking, and the creation of AR scenes. We will explore
    how to manage real-world interactions and augment digital objects within physical
    spaces. To illustrate these concepts, we will include an example project, guiding
    you through the creation of a simple AR app that interacts with real-world objects.
    By the end of this section, you will have the knowledge to start building engaging
    AR experiences.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**增强现实**（**AR**）提供了将数字内容叠加到现实世界中的独特机会，与虚拟现实相比，需要采取不同的方法。在本节中，我们将介绍在Unity中进行的AR开发，重点关注包括AR
    Foundation在内的基本AR SDKs，如图像、平面和面部跟踪等不同的跟踪方法，以及AR场景的创建。我们将探讨如何管理现实世界的交互并在物理空间内增强数字对象。为了说明这些概念，我们将包括一个示例项目，指导您创建一个简单的AR应用程序，该程序可以与现实世界中的对象进行交互。到本节结束时，您将具备开始构建引人入胜的AR体验的知识。'
- en: The following is a simulation of an augmented reality app on a tablet, showcasing
    a sectional sofa with a glowing green outline to illustrate how AR can enhance
    home decor visualization.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 下图是平板电脑上增强现实应用程序的模拟，展示了一个带有发光绿色轮廓的沙发部分，以说明AR如何增强家居装饰可视化。
- en: '![Figure 14.2 – Example of AR showing virtual furniture placement](img/B22128_14_2.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图14.2 – AR显示虚拟家具放置的示例](img/B22128_14_2.jpg)'
- en: Figure 14.2 – Example of AR showing virtual furniture placement
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.2 – AR显示虚拟家具放置的示例
- en: The image shows a simulation of placing furniture in a living room. The AR software
    uses visual clues from the floor, walls, and ceiling to accurately determine where
    to place the virtual sectional sofa. The three-dimensional rendering of the sofa
    appears realistic on the tablet screen, providing an immersive experience for
    the user.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图像显示了在客厅中放置家具的模拟。AR软件使用地板、墙壁和天花板的视觉线索来准确确定放置虚拟沙发部分的位置。沙发的三维渲染在平板电脑屏幕上看起来逼真，为用户提供沉浸式体验。
- en: Unity plays a key role in AR development by offering powerful tools and frameworks.
    The AR Foundation framework is a key component, providing a unified API for building
    AR applications that work seamlessly across different platforms, including iOS
    and Android. AR Foundation simplifies the development process by integrating multiple
    AR SDKs, such as ARKit (iOS) and ARCore (Android), allowing developers to write
    code once and deploy it across multiple devices.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Unity在AR开发中发挥着关键作用，通过提供强大的工具和框架。AR Foundation框架是一个关键组件，它提供了一个统一的API，用于构建在不同平台（包括iOS和Android）上无缝工作的AR应用程序。AR
    Foundation通过集成多个AR SDKs（如ARKit（iOS）和ARCore（Android））简化了开发过程，允许开发者编写一次代码并在多个设备上部署。
- en: The capabilities of AR SDKs supported by Unity are extensive. **ARKit** and
    **ARCore** provide advanced features such as plane detection, image tracking,
    face tracking, and environmental understanding. These features enable developers
    to create sophisticated AR experiences that can recognize and interact with the
    physical world. For instance, ARKit can detect flat surfaces to place virtual
    objects realistically, while ARCore can understand the environment to provide
    contextual interactions.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Unity支持的AR SDKs功能强大。**ARKit**和**ARCore**提供了诸如平面检测、图像跟踪、面部跟踪和环境理解等高级功能。这些功能使开发者能够创建复杂的AR体验，能够识别并与物理世界进行交互。例如，ARKit可以检测平面以将虚拟对象以逼真的方式放置，而ARCore可以理解环境以提供上下文交互。
- en: 'The following is a simple C# script demonstrating the initialization of AR
    Foundation:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的简单C#脚本演示了AR Foundation的初始化：
- en: '[PRE2]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This script initializes the AR session and AR session origin. In the **Start**
    method, the script retrieves the **ARSession** and **XR Origin** components attached
    to the same GameObject. The **ARSession** component manages the lifecycle of an
    AR session, while the **XR Origin** component controls the position, rotation,
    and scale of the AR content relative to the real world. The script then checks
    if the AR session state is **None**, indicating that no AR session is currently
    active. If this is the case, it enables the **ARSession** to start the AR experience.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本初始化增强现实会话和增强现实会话原点。在**Start**方法中，脚本检索同一GameObject上附加的**ARSession**和**XR Origin**组件。**ARSession**组件管理增强现实会话的生命周期，而**XR
    Origin**组件控制增强现实内容相对于真实世界的位置、旋转和缩放。脚本随后检查增强现实会话状态是否为**None**，表示当前没有活跃的增强现实会话。如果是这种情况，它将启用**ARSession**以启动增强现实体验。
- en: Understanding the basics of augmented reality and its applications, along with
    the role of Unity and AR Foundation, provides a solid foundation for AR development.
    By leveraging Unity’s tools and supported AR SDKs, developers can create versatile
    and interactive AR experiences. Next, we will explore tracking methods and AR
    scene creation, delving deeper into the techniques for developing effective AR
    applications.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 理解增强现实的基本原理及其应用，以及Unity和AR Foundation的作用，为增强现实开发提供了坚实的基础。通过利用Unity的工具和支持的AR
    SDK，开发者可以创建多功能的交互式增强现实体验。接下来，我们将探讨追踪方法和增强现实场景创建，深入探讨开发有效增强现实应用的技术。
- en: Tracking methods and AR scene creation
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 追踪方法和增强现实场景创建
- en: The core of AR development lies in effective tracking methods, which enable
    the seamless integration of digital content with the physical world. This sub-section
    explores various tracking methods such as image recognition, plane detection,
    and face tracking, which form the foundation for interactive AR experiences. Following
    this, we provide a step-by-step guide to setting up an AR scene in Unity, including
    configuring the AR session, adding the AR session origin, and utilizing AR-specific
    game objects. Practical tips for optimizing AR scene performance and ensuring
    stable and accurate tracking are also included.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 增强现实开发的核心在于有效的追踪方法，这些方法使得数字内容与物理世界能够无缝集成。本节探讨了各种追踪方法，如图像识别、平面检测和面部追踪，这些方法构成了交互式增强现实体验的基础。随后，我们提供了一步一步在Unity中设置增强现实场景的指南，包括配置增强现实会话、添加增强现实会话原点以及利用增强现实特定的游戏对象。还包括了优化增强现实场景性能和确保稳定准确追踪的实际技巧。
- en: Tracking methods
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 追踪方法
- en: 'Common AR tracking methods include the following:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 常见的增强现实追踪方法包括以下几种：
- en: '**Image recognition**: This method involves detecting and tracking 2D images
    in the physical world, allowing digital content to be anchored to these images.
    Image recognition is useful for applications such as AR-enhanced posters, books,
    and marketing materials. Unity’s AR Foundation supports image tracking through
    ARKit and ARCore.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图像识别**：这种方法涉及在物理世界中检测和追踪2D图像，使得数字内容能够锚定到这些图像上。图像识别对于增强现实增强的海报、书籍和营销材料等应用非常有用。Unity的AR
    Foundation通过ARKit和ARCore支持图像追踪。'
- en: '**Plane detection**: Plane detection identifies flat surfaces in the environment,
    such as floors and tables, enabling virtual objects to be placed realistically
    within the physical space. This method is essential for creating AR experiences
    where objects interact with the real world, such as furniture placement apps or
    interactive games.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平面检测**：平面检测识别环境中的平坦表面，如地板和桌子，使得虚拟对象能够真实地放置在物理空间中。这种方法对于创建与真实世界交互的增强现实体验至关重要，例如家具摆放应用或交互式游戏。'
- en: '**Face tracking**: Face tracking uses the device’s camera to detect and track
    human faces, allowing for applications such as virtual try-ons, facial animations,
    and interactive filters. This tracking method is supported by ARKit and ARCore,
    and it provides a highly engaging user experience.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**面部追踪**：面部追踪利用设备的摄像头来检测和追踪人类面部，允许应用如虚拟试穿、面部动画和交互式滤镜。这种追踪方法由ARKit和ARCore支持，并提供了高度吸引人的用户体验。'
- en: After understanding the common AR tracking methods, let’s delve into the practical
    steps for setting up an AR scene in Unity.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解常见的增强现实追踪方法之后，让我们深入探讨在Unity中设置增强现实场景的实际步骤。
- en: Setting up an AR scene in Unity
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Unity中设置增强现实场景
- en: 'Here is an outline of the steps involved in setting up an AR scene in Unity:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是在Unity中设置增强现实场景所涉及步骤的概述：
- en: '`AR Session` component to it. This component manages the lifecycle of an AR
    session.'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`AR Session`组件添加到其中。此组件管理增强现实会话的生命周期。
- en: '`AR Session Origin` component. This component is responsible for transforming
    trackable features, such as planes and images, into the session’s coordinate space.*   Attach
    an AR Camera to the `AR Session Origin` GameObject. This camera will act as the
    viewpoint for the AR experience.*   `AR Session Origin` GameObject. These managers
    handle plane detection and raycasting, enabling interaction with detected planes.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AR Session Origin`组件。此组件负责将可跟踪特征（如平面和图像）转换为会话的坐标空间。*   将AR Camera附加到`AR Session
    Origin`GameObject。这个相机将作为AR体验的视点。*   `AR Session Origin`GameObject。这些管理器处理平面检测和光线投射，使与检测到的平面进行交互成为可能。'
- en: 'Here is a basic C# script to configure the AR session and manage plane detection:'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里是一个基本的C#脚本，用于配置AR会话和管理平面检测：
- en: '[PRE3]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This script sets up the **ARSession** and **ARPlaneManager** in Unity to detect
    and log when flat surfaces are found in the scene.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本在Unity中设置**ARSession**和**ARPlaneManager**以检测和记录场景中找到的平面。
- en: With your AR scene set up, let’s move on to practical tips for optimizing its
    performance.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置好AR场景后，让我们继续探讨优化其性能的实用技巧。
- en: Practical tips for optimizing AR scene performance
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 优化AR场景性能的实用技巧
- en: 'The following are some practical tips for optimizing AR scene performance:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些优化AR场景性能的实用技巧：
- en: '**Efficient asset management**: Use optimized 3D models and textures to reduce
    the processing load. This ensures smoother performance on mobile devices.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高效资产管理**：使用优化的3D模型和纹理以减少处理负载。这确保了在移动设备上更流畅的性能。'
- en: '**Stable tracking**: Maintain stable tracking in the virtual environment by
    minimizing sudden movements and ensuring the physical environment is well lit
    and features distinct textures.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**稳定跟踪**：通过最小化突然移动并确保物理环境照明良好且具有明显纹理，在虚拟环境中保持稳定的跟踪。'
- en: '**User experience**: Design intuitive interactions that are easy to understand
    and use, enhancing the overall user experience.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户体验**：设计直观的交互，易于理解和使用，从而提升整体用户体验。'
- en: Effective tracking methods including image recognition, plane detection, and
    face tracking are vital for creating interactive AR experiences. Setting up an
    AR scene in Unity involves configuring the AR session, adding an AR session origin,
    and utilizing AR-specific game objects. By following these steps and optimizing
    performance, developers can create engaging and stable AR applications. Next,
    we will explore how digital content interacts with and augments the real world,
    delving deeper into creating seamless integration between virtual and physical
    elements.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 有效的跟踪方法包括图像识别、平面检测和面部跟踪，对于创建交互式AR体验至关重要。在Unity中设置AR场景涉及配置AR会话、添加AR会话原点和利用AR特定的游戏对象。通过遵循这些步骤并优化性能，开发者可以创建引人入胜且稳定的AR应用程序。接下来，我们将探讨数字内容如何与真实世界互动并增强它，深入探讨在虚拟和物理元素之间创建无缝集成。
- en: Real-world interaction and digital augmentation
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 现实世界交互和数字增强
- en: Implementing interactive elements in AR allows users to engage seamlessly with
    both digital and physical components of their experience. This sub-section discusses
    techniques for handling user input in AR, such as touch gestures and spatial interactions,
    to manipulate digital objects overlaid onto the real world. We will provide an
    example project to illustrate these concepts, demonstrating how to bring AR interactions
    to life in Unity.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在AR中实现交互元素允许用户无缝地与体验的数字和物理组件进行互动。本节讨论了处理AR中用户输入的技术，例如触摸手势和空间交互，以操纵叠加到现实世界中的数字对象。我们将提供一个示例项目来阐述这些概念，展示如何在Unity中实现AR交互。
- en: Handling user input in AR
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理AR中的用户输入
- en: User input in AR can be managed through various methods, such as touch gestures
    and spatial interactions. Touch gestures are common on mobile devices and include
    actions like tapping, swiping, and pinching. These gestures can be used to interact
    with and manipulate digital objects in the AR scene. For example, tapping an object
    could select it, swiping could move it, and pinching could scale it.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: AR中的用户输入可以通过多种方法进行管理，例如触摸手势和空间交互。触摸手势在移动设备上很常见，包括点击、滑动和捏合等动作。这些手势可以用来与AR场景中的数字对象进行交互和操作。例如，点击一个对象可以选中它，滑动可以移动它，捏合可以缩放它。
- en: Spatial interactions involve using the device’s sensors to recognize and respond
    to the user’s movements and position in the physical space. This can include recognizing
    the user’s hand gestures or head movements to interact with digital elements.
    Implementing these interactions requires understanding the device’s capabilities
    and effectively utilizing Unity’s AR Foundation to capture and interpret these
    inputs.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 空间交互涉及使用设备的传感器来识别和响应用户在物理空间中的移动和位置。这可能包括识别用户的手势或头部运动以与数字元素交互。实现这些交互需要了解设备的功能并有效地利用Unity的AR
    Foundation来捕获和解释这些输入。
- en: An example project
  id: totrans-112
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例项目
- en: 'Consider an AR app that allows users to place and interact with 3D models in
    a real environment. Here’s how you can set up a basic version of this project
    in Unity:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一个允许用户在真实环境中放置和与3D模型交互的AR应用程序。以下是如何在Unity中设置此项目的基版：
- en: Create a new Unity project and import the AR Foundation, ARCore XR Plugin, and
    ARKit XR Plugin packages.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的Unity项目，并导入AR Foundation、ARCore XR插件和ARKit XR插件包。
- en: Set up the AR session and AR session origin as described in the previous sections.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照前几节所述设置AR会话和AR会话原点。
- en: 'Here’s how you can add interaction components:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是添加交互组件的方法：
- en: Add an AR Raycast Manager to the AR session origin to handle touch input and
    raycasting.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将AR射线投射管理器添加到AR会话原点，以处理触摸输入和射线投射。
- en: 'Create a script to handle placing and interacting with 3D models:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个脚本以处理放置和与3D模型交互：
- en: '[PRE4]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This script handles user touch input to place 3D objects in the AR environment
    by raycasting to detect planes.
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此脚本通过射线投射来检测平面，处理用户触摸输入，将3D对象放置在AR环境中。
- en: 'With the AR interaction setup complete, it’s essential to ensure that your
    AR experience is both engaging and efficient. To achieve this, consider the following
    tips for optimizing user experience:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 完成AR交互设置后，确保您的AR体验既吸引人又高效至关重要。为了实现这一点，请考虑以下优化用户体验的技巧：
- en: '**Stability and accuracy**: Ensure stable tracking by testing in various environments
    and optimizing the AR scene to handle different lighting and surface conditions.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**稳定性和准确性**：通过在多种环境中测试并优化AR场景以处理不同的光照和表面条件，确保稳定的跟踪。'
- en: '**Intuitive interactions**: Design interactions that are natural and easy to
    understand. Use visual and audio feedback to confirm user actions.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**直观交互**：设计自然且易于理解的用户交互。使用视觉和音频反馈来确认用户操作。'
- en: '**Performance optimization**: Optimize 3D models and assets to ensure they
    render smoothly on mobile devices.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能优化**：优化3D模型和资源，确保它们在移动设备上流畅渲染。'
- en: Incorporating interactive elements in AR involves managing user input through
    touch gestures and spatial interactions. By following best practices and using
    Unity’s AR Foundation, developers can create engaging AR applications. Next, we
    will delve into user interaction in VR/AR, exploring more advanced techniques
    for creating immersive and interactive experiences.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在AR中引入交互元素涉及通过触摸手势和空间交互管理用户输入。遵循最佳实践并使用Unity的AR Foundation，开发者可以创建吸引人的AR应用程序。接下来，我们将深入探讨VR/AR中的用户交互，探索创建沉浸式和交互式体验的更高级技术。
- en: User interaction in VR/AR
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VR/AR中的用户交互
- en: Designing interactive elements for VR and AR is important as it helps in enhancing
    user engagement and creating immersive experiences. This section delves into the
    principles of user interaction within these environments, covering various input
    methods such as controllers, gestures, and voice commands. We will explore designing
    intuitive UI/UX specifically for XR, ensuring that interfaces are user-friendly
    and responsive. Additionally, we will discuss creating interactive and responsive
    game objects that react seamlessly to user input. The challenges of interaction
    design in XR will be addressed, along with the sharing of insights on overcoming
    them through case studies and example projects that showcase effective interaction
    models. By understanding these principles, you will be equipped to design engaging
    and intuitive user interactions in VR and AR applications.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 设计VR和AR的交互元素非常重要，因为它有助于增强用户参与度和创造沉浸式体验。本节深入探讨这些环境中用户交互的原则，涵盖各种输入方法，如控制器、手势和语音命令。我们将探讨为XR设计直观的UI/UX，确保界面用户友好且响应迅速。此外，我们将讨论创建交互式和响应式的游戏对象，这些对象能够无缝响应用户输入。本节还将解决XR交互设计中的挑战，并通过案例研究和展示有效交互模式的示例项目来分享克服这些挑战的见解。通过理解这些原则，您将能够设计出吸引人和直观的VR和AR应用程序用户交互。
- en: Input methods and interaction techniques
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 输入方法和交互技术
- en: Various input methods in VR and AR, such as hand controllers, gestures, voice
    commands, and eye tracking, enable users to interact naturally and intuitively
    within immersive environments. This sub-section provides an overview of these
    input methods, discussing their advantages and challenges. We will also explore
    common interaction techniques such as grabbing, throwing, and menu selection,
    and how these can be implemented in Unity.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: VR和AR中的各种输入方法，如手柄控制器、手势、语音命令和眼动追踪，使用户能够在沉浸式环境中自然直观地交互。本节概述了这些输入方法，讨论了它们的优缺点。我们还将探讨常见的交互技术，如抓取、投掷和菜单选择，以及如何在Unity中实现这些技术。
- en: Overview of input methods
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 输入方法概述
- en: '**Hand controllers** are the most common input devices in VR, providing precise
    control and feedback for actions such as grabbing and throwing objects, though
    they can be challenging for new users to master. **Gesture recognition** uses
    hand movements to interact with virtual objects, offering natural control but
    requiring robust tracking for accuracy. **Voice commands** enhance user interaction
    with hands-free control, which is useful for accessibility, but can struggle with
    environmental noise and varied accents. **Eye tracking** enables interactions
    based on where the user is looking, providing an intuitive, hands-free input method
    useful for menu navigation, though it requires careful implementation to ensure
    accuracy.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**手柄控制器**是VR中最常见的输入设备，为抓取和投掷等动作提供精确的控制和反馈，尽管对于新用户来说可能难以掌握。**手势识别**使用手部动作与虚拟对象进行交互，提供自然的控制，但需要强大的跟踪以确保精度。**语音命令**通过免手操作增强用户交互，对无障碍性很有用，但可能难以应对环境噪音和不同的口音。**眼动追踪**允许基于用户视线位置进行交互，提供直观的免手输入方法，适用于菜单导航，但需要仔细实现以确保准确性。'
- en: 'The advantages and challenges of these different input methods are as follows:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这些不同输入方法的优缺点如下：
- en: '**Hand controllers**: Offer precision and feedback but have a learning curve
    for new users.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**手柄控制器**：提供精确性和反馈，但新用户需要一定的学习曲线。'
- en: '**Gestures**: Provide natural interaction but face challenges with tracking
    accuracy and reliability.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**手势**：提供自然的交互方式，但面临跟踪精度和可靠性的挑战。'
- en: '**Voice commands**: Enable hands-free control but are affected by environmental
    noise and speech recognition accuracy.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语音命令**：实现免手操作，但受环境噪音和语音识别精度的影响。'
- en: '**Eye tracking**: Offers intuitive interaction but requires accurate implementation.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**眼动追踪**：提供直观的交互方式，但需要精确的实现。'
- en: Effective interaction techniques are essential for creating immersive VR and
    AR experiences. These techniques determine how users interact with the virtual
    environment and objects within it, significantly impacting usability and enjoyment.
    Understanding and selecting appropriate interaction techniques are crucial for
    enhancing the overall experience. Next, we will explore common interaction techniques
    used in VR and AR, discussing their applications and best practices to ensure
    intuitive and effective user interactions.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 有效的交互技术对于创建沉浸式VR和AR体验至关重要。这些技术决定了用户如何与虚拟环境及其中的对象进行交互，对可用性和娱乐性有重大影响。理解和选择合适的交互技术对于提升整体体验至关重要。接下来，我们将探讨VR和AR中常用的交互技术，讨论其应用和最佳实践，以确保直观和有效的用户交互。
- en: Common interaction techniques
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 常见的交互技术
- en: 'Let’s explore some fundamental VR and AR interactions, such as grabbing, throwing,
    and menu selection, to enhance user engagement in our immersive environments:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索一些基本的VR和AR交互，如抓取、投掷和菜单选择，以增强我们在沉浸式环境中的用户参与度：
- en: '**Grabbing and throwing**: These interactions are fundamental in VR and AR.
    To implement grabbing in Unity, developers typically use physics-based interactions
    where the user’s hand or controller collides with an object to pick it up. This
    can be achieved using Unity’s **Rigidbody** and **Collider** components. Throwing
    involves applying force to the object upon release, simulating realistic physics.
    Fine-tuning the throwing mechanics is crucial for making interactions feel natural
    and responsive. Additionally, haptic feedback can enhance the sense of immersion
    by providing tactile sensations when grabbing or throwing objects.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**抓取和投掷**：这些交互在VR和AR中是基本的。要在Unity中实现抓取，开发者通常使用基于物理的交互，其中用户的双手或控制器与对象碰撞以拾取它。这可以通过使用Unity的**Rigidbody**和**Collider**组件来实现。投掷涉及在释放时对对象施加力，模拟真实的物理。微调投掷机制对于使交互感觉自然和响应至关重要。此外，触觉反馈可以通过在抓取或投掷对象时提供触觉感觉来增强沉浸感。'
- en: '**Menu selection**: Implementing menu selection in VR can involve gaze-based
    or controller-based interactions. For instance, using eye tracking, you can highlight
    and select menu items by focusing on them. Alternatively, controller-based interactions
    allow users to point and click on menu items using their hand controllers. Ensuring
    that the menu items are easily readable and accessible within the user’s field
    of view is essential for a smooth experience.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**菜单选择**：在VR中实现菜单选择可能涉及基于注视或控制器交互。例如，使用眼动追踪，你可以通过聚焦在它们上来突出和选择菜单项。或者，基于控制器的交互允许用户使用他们的手控制器指向和点击菜单项。确保菜单项在用户的视野内易于阅读和访问对于流畅的体验至关重要。'
- en: Understanding the various input methods and interaction techniques in VR and
    AR is crucial for creating natural and intuitive user experiences. By leveraging
    hand controllers, gestures, voice commands, and eye tracking, developers can enhance
    user engagement in immersive environments. Next, we will discuss designing intuitive
    UI/UX for XR, focusing on creating user interfaces that are easy to navigate and
    interact with.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 理解VR和AR中的各种输入方法和交互技术对于创建自然直观的用户体验至关重要。通过利用手控制器、手势、语音命令和眼动追踪，开发者可以增强沉浸式环境中的用户参与度。接下来，我们将讨论设计直观的XR
    UI/UX，重点是创建易于导航和交互的用户界面。
- en: Designing intuitive UI/UX for XR
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计直观的XR UI/UX
- en: User interaction in VR/AR relies heavily on effective UI elements within the
    3D space. Creating engaging user interfaces requires careful consideration of
    size, placement, and legibility.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: VR/AR中的用户交互在很大程度上依赖于3D空间内的有效UI元素。创建引人入胜的用户界面需要仔细考虑大小、位置和可读性。
- en: 'Here are the best practices for designing intuitive UI/UX for XR:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是设计直观的XR UI/UX的最佳实践：
- en: '**Size** **and placement**:'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大小** **和位置**：'
- en: UI elements should be large enough for visibility and interaction without obstructing
    the player’s view.
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: UI元素应该足够大，以便在不遮挡玩家视野的情况下可见和交互。
- en: Place elements within the natural line of sight to minimize head and eye movement,
    reducing fatigue.
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将元素放置在自然视线范围内，以最大限度地减少头部和眼部的移动，减少疲劳。
- en: '**Legibility**:'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可读性**：'
- en: Use high-contrast colors and avoid overly complex fonts to ensure text readability
    from various distances.
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用高对比度颜色并避免过于复杂的字体，以确保从各种距离处都能阅读文本。
- en: '**User feedback**:'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户反馈**：'
- en: Incorporate haptic feedback and visual cues such as highlights, animations,
    and sound effects to confirm actions and guide users.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 结合触觉反馈和视觉提示，如高亮、动画和音效，以确认动作并引导用户。
- en: '**Accessibility** **and comfort**:'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可访问性和舒适性**：'
- en: Design interfaces that accommodate different user heights and reach capabilities.
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计能够适应不同用户身高和伸手能力的界面。
- en: Provide options to adjust the size and position of UI elements for individual
    preferences.
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供调整UI元素大小和位置以适应个人偏好的选项。
- en: Minimize required physical movements and offer rest periods to prevent discomfort
    and fatigue.
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小化所需的物理动作，并提供休息时间，以防止不适和疲劳。
- en: By focusing on these aspects, developers can enhance user interaction and ensure
    a seamless and comfortable user experience in VR and AR environments. Next, we
    will explore the challenges and solutions in XR interaction design, addressing
    common issues to further enhance the user experience.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 通过关注这些方面，开发者可以增强用户交互，并确保在VR和AR环境中提供无缝和舒适的用户体验。接下来，我们将探讨XR交互设计中的挑战和解决方案，解决常见问题以进一步改善用户体验。
- en: Challenges and solutions in XR interaction design
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: XR交互设计中的挑战和解决方案
- en: 'Designing interactions for VR and AR presents unique challenges, such as mitigating
    motion sickness, ensuring user safety, and handling occlusion in AR. This sub-section
    addresses these common challenges and discusses strategies for overcoming them.
    We will also highlight successful interaction models through case studies or example
    projects that demonstrate innovative solutions to XR interaction design challenges:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 设计VR和AR的交互方式面临独特的挑战，例如减轻运动病、确保用户安全以及处理AR中的遮挡。本节将解决这些常见挑战，并讨论克服它们的策略。我们还将通过案例研究或示例项目突出成功的交互模型，这些项目展示了创新解决方案，以应对XR交互设计挑战：
- en: '**Mitigating motion sickness**: Motion sickness is a significant challenge
    in VR, often caused by the disconnect between visual movement and the lack of
    corresponding physical motion. To mitigate this, developers can implement teleportation
    as a movement method. Teleportation allows users to point to a location and instantly
    move there, reducing the disorientation caused by continuous motion. Another strategy
    is to use smooth locomotion with techniques such as vignetting, where the edges
    of the screen darken during movement to reduce the sensation of motion.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**减轻运动病**：运动病是VR中的一个重大挑战，通常是由于视觉运动与缺乏相应物理运动之间的脱节造成的。为了减轻这种症状，开发者可以实施传送作为移动方法。传送允许用户指向一个位置并立即移动到那里，减少由连续运动引起的迷失方向感。另一种策略是使用平滑的移动，例如使用晕影技术，在移动时屏幕边缘变暗以减少运动感。'
- en: '**Ensuring user safety**: User safety is paramount in XR environments. In VR,
    users can become disoriented and unaware of their physical surroundings, leading
    to potential hazards. Implementing guardian systems or virtual boundaries can
    help ensure users stay within a safe area. These systems alert users when they
    approach the edges of the play space, preventing collisions with real-world objects.
    In AR, safety concerns include ensuring that virtual objects do not obscure important
    real-world information, such as traffic signals or other hazards.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**确保用户安全**：在XR环境中，用户安全至关重要。在VR中，用户可能会感到迷失方向，对周围物理环境失去意识，导致潜在危险。实施守护系统或虚拟边界可以帮助确保用户保持在安全区域内。这些系统会在用户接近游戏空间边缘时提醒用户，防止与真实世界物体的碰撞。在AR中，安全担忧包括确保虚拟物体不会遮挡重要的真实世界信息，例如交通信号或其他危险。'
- en: '**Handling occlusion in AR**: Occlusion in AR occurs when virtual objects incorrectly
    appear in front of real-world objects, breaking the sense of immersion. To handle
    occlusion, developers can use spatial anchors, which fix virtual objects in specific
    real-world locations. This helps maintain the correct positioning and layering
    of virtual objects relative to the physical environment. Advanced AR systems use
    depth sensors to detect and account for real-world objects, allowing for more
    accurate occlusion handling.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**处理AR中的遮挡**：AR中的遮挡发生在虚拟物体错误地出现在真实世界物体前面时，破坏了沉浸感。为了处理遮挡，开发者可以使用空间锚点，将虚拟物体固定在特定的真实世界位置。这有助于保持虚拟物体相对于物理环境的正确定位和分层。高级AR系统使用深度传感器来检测和考虑真实世界物体，从而实现更准确的遮挡处理。'
- en: 'Here are some case studies and example projects:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些案例研究和示例项目：
- en: '**Teleportation in VR**: A common solution to motion sickness, as seen in VR
    games such as *The Lab* by Valve, where teleportation is used to navigate the
    virtual environment without inducing discomfort.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VR中的传送**：传送是解决VR中运动病的一个常见方法，如Valve的VR游戏*The Lab*中所示，在那里传送被用来在虚拟环境中导航而不会引起不适。'
- en: '**Guardian systems**: Oculus’ *Guardian system* creates a virtual boundary
    that alerts users when they get too close to the edges of their play area, ensuring
    safety.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**守护系统**：Oculus的*守护系统*创建了一个虚拟边界，当用户接近游戏区域边缘时会提醒他们，确保安全。'
- en: '**Spatial anchors in AR**: Microsoft’s *HoloLens* uses spatial anchors to maintain
    the position of virtual objects in the real world, enhancing the stability and
    realism of AR experiences.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AR中的空间锚点**：Microsoft的*HoloLens*使用空间锚点来保持虚拟物体在真实世界中的位置，增强了AR体验的稳定性和真实性。'
- en: Addressing the challenges of XR interaction design requires thoughtful strategies
    and innovative solutions. By implementing methods including teleportation for
    VR movement, using guardian systems for safety, and handling occlusion with spatial
    anchors in AR, developers can create more immersive and comfortable experiences.
    Next, we will explore performance optimization for immersive technologies, focusing
    on techniques to ensure smooth and responsive XR applications.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 解决XR交互设计挑战需要深思熟虑的策略和创新解决方案。通过实施包括VR移动中的传送技术、使用守护系统确保安全以及在AR中使用空间锚点处理遮挡等方法，开发者可以创造更加沉浸和舒适的体验。接下来，我们将探讨沉浸技术的性能优化，重点关注确保XR应用流畅和响应的技术。
- en: Performance optimization for immersive technologies
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 沉浸技术的性能优化
- en: Given the intensive resource demands of VR and AR applications, optimizing performance
    is important for maintaining a smooth and immersive user experience. This section
    focuses on performance optimization techniques specific to XR, including rendering
    optimizations, efficient asset management, and strategies for minimizing latency.
    We will cover best practices to ensure that VR and AR applications run efficiently
    across a range of devices, from high-end VR headsets to mobile AR platforms. By
    mastering these optimization techniques, developers can deliver seamless and engaging
    XR experiences that cater to the diverse capabilities of various hardware.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 由于VR和AR应用对资源的高强度需求，优化性能对于保持流畅和沉浸式的用户体验至关重要。本节重点介绍XR特有的性能优化技术，包括渲染优化、高效的资产管理以及最小化延迟的策略。我们将介绍最佳实践，以确保VR和AR应用在各种设备上高效运行，从高端VR头戴式设备到移动AR平台。通过掌握这些优化技术，开发者可以提供无缝且引人入胜的XR体验，满足各种硬件的多样化能力。
- en: Rendering optimizations
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 渲染优化
- en: Optimizing rendering in VR and AR is critical due to the dual rendering required
    for stereoscopic vision in VR and the overlay of digital content onto the real
    world in AR. This section will discuss techniques such as occlusion culling, LOD
    systems, and the efficient use of shaders and materials. Maintaining a high and
    stable frame rate is essential for a comfortable and immersive experience, and
    we will offer specific tips for Unity’s rendering settings and tools to help achieve
    this.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在VR和AR中优化渲染至关重要，因为VR需要双渲染以实现立体视觉，而AR则需要将数字内容叠加到现实世界。本节将讨论遮挡剔除、LOD系统和高效使用着色器和材料等技术。保持高且稳定的帧率对于舒适和沉浸式的体验至关重要，我们将提供针对Unity渲染设置和工具的具体技巧，以帮助实现这一点。
- en: 'The following are some key optimization techniques to enhance the performance
    and visual quality of VR and AR applications:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些关键优化技术，用于提高VR和AR应用的性能和视觉质量：
- en: '**Occlusion culling**: Occlusion culling is a technique that prevents the rendering
    of objects not currently visible to the camera, thus saving valuable processing
    power. In Unity, this can be enabled through the **Occlusion Culling** settings
    in the **Lighting** window. By ensuring that only visible objects are rendered,
    developers can significantly reduce the rendering load, particularly in complex
    scenes with many objects.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**遮挡剔除**：遮挡剔除是一种技术，可以防止渲染摄像机当前不可见对象，从而节省宝贵的处理能力。在Unity中，这可以通过在**光照**窗口中的**遮挡剔除**设置中启用来实现。通过确保只渲染可见对象，开发者可以显著减少渲染负载，尤其是在包含许多对象的复杂场景中。'
- en: '**Level of Detail (LOD) systems**: LOD systems dynamically adjust the complexity
    of 3D models based on their distance from the camera. Closer objects are rendered
    in high detail, while distant objects are rendered with fewer polygons. This technique
    helps maintain performance without sacrificing visual quality. Unity’s **LOD Group**
    component allows developers to set up LOD levels for their models, ensuring optimal
    performance at all distances.'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**细节级别（LOD）系统**：LOD系统根据3D模型与摄像机的距离动态调整其复杂度。靠近摄像机的对象以高细节渲染，而远离摄像机的对象则以较少的多边形渲染。这种技术有助于在不牺牲视觉质量的情况下保持性能。Unity的**LOD组**组件允许开发者为其模型设置LOD级别，确保在不同距离下都能获得最佳性能。'
- en: '**Efficient use of shaders and materials**: Shaders and materials can heavily
    impact rendering performance. Using simpler shaders and fewer materials can help
    maintain a high frame rate. In Unity, developers can optimize shaders by using
    **Shader Graph** to create efficient, custom shaders tailored to their specific
    needs. Additionally, combining multiple textures into a single texture atlas can
    reduce the number of material switches and draw calls, further improving performance.'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高效使用着色器和材质**：着色器和材质对渲染性能有很大影响。使用更简单的着色器和更少的材质可以帮助保持高帧率。在Unity中，开发者可以通过使用**Shader
    Graph**创建高效、定制的着色器来优化着色器，以满足他们的特定需求。此外，将多个纹理合并到单个纹理图集中可以减少材质切换和绘制调用次数，从而进一步提高性能。'
- en: '**Maintaining high and stable frame rates**: A high and stable frame rate is
    indispensable for comfort in VR and AR experiences. Techniques such as reducing
    the polygon count of models, using baked lighting instead of real-time lighting,
    and optimizing physics calculations can all contribute to smoother performance.
    Unity’s Profiler and Frame Debugger tools are invaluable for identifying performance
    bottlenecks and optimizing rendering settings.'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保持高且稳定的帧率**：高且稳定的帧率对于VR和AR体验的舒适性至关重要。减少模型的多边形数量、使用烘焙光照而非实时光照以及优化物理计算等技术都可以有助于提高性能。Unity的Profiler和Frame
    Debugger工具对于识别性能瓶颈和优化渲染设置非常有价值。'
- en: 'Here are some of the ways to implement these techniques:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是实现这些技术的一些方法：
- en: Enable occlusion culling in the Lighting window.
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在光照窗口中启用遮挡剔除。
- en: Use baked lighting where possible to reduce real-time lighting calculations.
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽可能使用烘焙光照以减少实时光照计算。
- en: Use the **LOD Group** component to set up LOD levels for models.
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**LOD组**组件为模型设置LOD级别。
- en: Optimize shaders using Shader Graph and combine textures into texture atlases.
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Shader Graph优化着色器，并将纹理合并到纹理图集中。
- en: Utilize Unity’s Profiler and Frame Debugger to identify and address performance
    issues.
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用Unity的Profiler和Frame Debugger来识别和解决性能问题。
- en: Rendering optimization techniques such as occlusion culling, LOD systems, and
    efficient use of shaders and materials are essential for maintaining high and
    stable frame rates in VR and AR. These techniques ensure a comfortable and immersive
    experience for users. Next, we will explore asset management and optimization
    techniques to ensure efficient use of resources and maintain high performance
    in your VR and AR applications.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 遮挡剔除、LOD系统以及高效使用着色器和材质等渲染优化技术对于在VR和AR中保持高且稳定的帧率至关重要。这些技术确保用户获得舒适和沉浸式的体验。接下来，我们将探讨资产管理与优化技术，以确保在VR和AR应用中高效使用资源并保持高性能。
- en: Asset management and optimization
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资产管理和优化
- en: Effective asset management and optimization are key factors for reducing the
    load on the system, especially for mobile AR applications with limited hardware
    capabilities. This section covers strategies such as texture compression, mesh
    simplification, and the use of asset bundles to dynamically load and unload content
    as needed. We will discuss Unity’s support for these features and how to effectively
    implement them in an XR project.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 有效的资产管理与优化是减少系统负载的关键因素，尤其是在硬件能力有限的移动AR应用中。本节涵盖了如纹理压缩、网格简化以及使用资源包动态加载和卸载内容等策略。我们将讨论Unity对这些特性的支持以及如何在XR项目中有效实现它们。
- en: 'Here are some additional techniques to optimize your VR and AR applications:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些额外的优化VR和AR应用的技术：
- en: '**Texture compression**: Texture compression reduces the memory footprint and
    improves performance by decreasing the size of texture files without significantly
    sacrificing quality. Unity supports several texture compression formats, such
    as ASTC and ETC2, which are suitable for different platforms and use cases. To
    implement texture compression, select the appropriate format in the texture import
    settings in Unity.'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**纹理压缩**：纹理压缩通过减小纹理文件的大小来减少内存占用并提高性能，同时不会显著牺牲质量。Unity支持多种纹理压缩格式，如ASTC和ETC2，这些格式适用于不同的平台和用例。要在Unity中实现纹理压缩，请在纹理导入设置中选择合适的格式。'
- en: '**Mesh simplification**: Mesh simplification involves reducing the number of
    polygons in a 3D model while preserving its overall shape and appearance. This
    technique is essential for optimizing performance in mobile AR applications. Unity
    offers tools and third-party assets, such as Simplygon, to simplify meshes efficiently.
    Simplified meshes reduce the processing load, leading to better performance and
    lower power consumption.'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网格简化**：网格简化涉及在保留3D模型整体形状和外观的同时减少其多边形数量。这项技术在优化移动AR应用程序的性能中至关重要。Unity提供了工具和第三方资源，如Simplygon，以有效地简化网格。简化的网格减少了处理负载，从而提高了性能并降低了功耗。'
- en: '**Asset bundles**: Asset bundles allow developers to dynamically load and unload
    content at runtime, which helps manage memory usage and improve performance. By
    packaging assets into bundles, you can load only the necessary content when needed,
    reducing the initial load time and memory footprint. Unity’s AssetBundle system
    provides a robust way to implement this feature in XR projects.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源包**：资源包允许开发者动态地在运行时加载和卸载内容，这有助于管理内存使用并提高性能。通过将资源打包成包，您可以在需要时仅加载必要的内容，从而减少初始加载时间和内存占用。Unity的AssetBundle系统为在XR项目中实现此功能提供了一种强大的方法。'
- en: 'Here’s an example of loading an asset bundle in Unity:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个在Unity中加载资源包的示例：
- en: '[PRE5]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This script downloads an asset bundle from a specified URL at runtime and instantiates
    the specified asset from the bundle in the Unity scene.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本在运行时从指定的URL下载资源包，并在Unity场景中实例化包中的指定资源。
- en: Managing and optimizing assets through techniques including texture compression,
    mesh simplification, and asset bundles are essential for maintaining performance
    in XR projects, particularly on mobile devices. By implementing these strategies
    in Unity, developers can ensure a smooth and efficient user experience. Next,
    we will discuss minimizing latency and improving responsiveness to further enhance
    performance in immersive applications.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 通过包括纹理压缩、网格简化以及资源包等技术来管理和优化资产对于保持XR项目的性能至关重要，尤其是在移动设备上。通过在Unity中实施这些策略，开发者可以确保用户获得流畅且高效的使用体验。接下来，我们将讨论如何最小化延迟并提高响应性，以进一步增强沉浸式应用程序的性能。
- en: Minimizing latency and improving responsiveness
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最小化延迟和提高响应性
- en: Minimizing latency and improving responsiveness are critical for creating smooth
    and immersive XR applications. This section focuses on techniques to reduce latency
    and enhance responsiveness in both VR and AR, which is essential for preventing
    motion sickness in VR and ensuring instantaneous interactions in AR. We will discuss
    methods such as predictive tracking, **Asynchronous Time Warp** (**ATW**), and
    **Asynchronous Spacewarp** (**ASW**) for VR, and strategies to reduce input lag
    and improve tracking accuracy in AR. Additionally, we will provide guidance on
    profiling and testing XR applications in Unity to identify and address latency
    issues.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 最小化延迟和提高响应性对于创建平滑且沉浸式的XR应用程序至关重要。本节将重点介绍降低延迟和增强VR和AR的响应性的技术，这对于防止VR中的运动病和确保AR中的即时交互至关重要。我们将讨论VR中的预测跟踪、**异步时间扭曲**（**ATW**）和**异步空间扭曲**（**ASW**）等方法，以及减少输入延迟和提高AR跟踪精度的策略。此外，我们还将提供在Unity中分析测试XR应用程序的指导，以识别和解决延迟问题。
- en: First, let’s take a look at predictive tracking. **Predictive tracking** anticipates
    the user’s movements and adjusts the rendered scene accordingly to reduce latency.
    For example, by predicting where the user will look or move their virtual arm
    next, the system can pre-render frames, making interactions feel more immediate.
    This technique is vital for VR, where even slight delays can cause discomfort
    or motion sickness. By ensuring that virtual arm movements and other interactions
    happen without noticeable lag, predictive tracking enhances the overall user experience
    and immersion.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看预测跟踪。**预测跟踪**预测用户的移动并相应地调整渲染场景以减少延迟。例如，通过预测用户下一步将看向哪里或移动虚拟手臂，系统可以预先渲染帧，使交互感觉更加即时。这项技术在VR中至关重要，因为即使是轻微的延迟也可能导致不适或运动病。通过确保虚拟手臂运动和其他交互没有明显的延迟，预测跟踪增强了整体用户体验和沉浸感。
- en: 'Asynchronous Time Warp (ATW) and Asynchronous Spacewarp (ASW):'
  id: totrans-197
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 异步时间扭曲（ATW）和异步空间扭曲（ASW）：
- en: 'Consider the following advanced techniques to further enhance your VR and AR
    performance:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下高级技术以进一步增强您的VR和AR性能：
- en: '**ATW** reprojects the last rendered frame based on the user’s current head
    position. This technique helps maintain a smooth experience even if the frame
    rate drops, by adjusting the perspective to match the latest head tracking data.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ATW**根据用户的当前头部位置重新投影最后渲染的帧。这种技术有助于即使在帧率下降的情况下也能保持流畅的体验，通过调整视角以匹配最新的头部跟踪数据。'
- en: '**ASW** generates synthetic frames to maintain a consistent frame rate. If
    the application cannot render at the target frame rate, ASW interpolates new frames
    using motion vectors from previously rendered frames, reducing the perceived latency
    and improving responsiveness.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ASW**生成合成帧以保持一致的帧率。如果应用无法以目标帧率渲染，ASW将使用先前渲染帧的运动矢量插值新帧，减少感知延迟并提高响应性。'
- en: Let’s examine minimizing input lag to provide a seamless and responsive AR experience.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探讨如何最小化输入延迟，以提供无缝且响应灵敏的AR体验。
- en: Reducing input lag in AR
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在AR中减少输入延迟
- en: To ensure AR interactions feel instantaneous, it’s essential to minimize input
    lag. Techniques include optimizing the performance of image and object recognition
    algorithms, reducing the complexity of scene understanding tasks, and ensuring
    that the AR application runs at a high and consistent frame rate. Additionally,
    using hardware acceleration and efficient coding practices can further reduce
    input lag.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保AR交互感觉即时，最小化输入延迟至关重要。这些技术包括优化图像和对象识别算法的性能、减少场景理解任务的复杂性，并确保AR应用以高且一致的帧率运行。此外，使用硬件加速和高效的编码实践可以进一步减少输入延迟。
- en: 'To enhance tracking accuracy in AR applications, you can use the following
    techniques:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高AR应用中的跟踪精度，你可以使用以下技术：
- en: '**Calibrating sensors**: Regularly calibrate the device’s sensors to ensure
    accurate measurements.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**校准传感器**：定期校准设备的传感器以确保准确测量。'
- en: '**Using high-quality cameras and sensors**: Devices with advanced cameras and
    sensors can capture more detailed information, improving tracking precision.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用高质量的摄像头和传感器**：具有高级摄像头和传感器的设备可以捕获更详细的信息，提高跟踪精度。'
- en: '**Implementing sensor fusion**: Combine data from multiple sensors, such as
    cameras, gyroscopes, and accelerometers, to enhance overall tracking accuracy.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实现传感器融合**：结合来自多个传感器（如摄像头、陀螺仪和加速度计）的数据，以增强整体跟踪精度。'
- en: Reducing latency and improving responsiveness in XR applications are essential
    for providing a comfortable and immersive user experience. Techniques such as
    predictive tracking, ATW, and ASW in VR, and methods to reduce input lag and improve
    tracking accuracy in AR, are fundamental. Profiling and testing in Unity help
    developers identify and address latency issues, ensuring their XR applications
    perform optimally.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在XR应用中减少延迟并提高响应性对于提供舒适和沉浸式的用户体验至关重要。在VR中，预测跟踪、ATW和ASW等技术，以及减少输入延迟和提高AR跟踪精度的方法，都是基础。在Unity中进行配置文件和测试有助于开发者识别和解决延迟问题，确保他们的XR应用性能最优。
- en: Summary
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we explored the cutting-edge world of VR and AR using Unity,
    focusing on creating immersive and interactive experiences. We began by grounding
    ourselves in the principles of VR, including setup and configuration in Unity
    to develop engaging VR environments. The journey continued with implementing AR
    functionalities, covering tracking methods and how to integrate digital enhancements
    into the physical world. We delved into designing interactive elements specifically
    for VR/AR to enhance user engagement and immersion. Finally, we discussed vital
    strategies for optimizing VR/AR applications to ensure smooth performance across
    a range of devices. Through practical examples, best practices, and relevant use
    cases, this chapter equipped us with the skills to understand VR principles, implement
    AR functionalities, design interactive elements, and optimize XR applications
    for various devices. Next, we will transition to the exciting realm of cross-platform
    gaming, where we explore developing games that run seamlessly across multiple
    platforms.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们使用 Unity 探索了 VR 和 AR 的前沿世界，重点在于创建沉浸式和交互式体验。我们首先从 VR 的原则入手，包括在 Unity 中的设置和配置，以开发引人入胜的
    VR 环境。旅程继续，我们实现了 AR 功能，涵盖了跟踪方法和如何将数字增强集成到物理世界。我们深入研究了专门为 VR/AR 设计的交互元素，以增强用户参与度和沉浸感。最后，我们讨论了优化
    VR/AR 应用以确保跨多种设备流畅性能的重要策略。通过实际示例、最佳实践和相关用例，本章为我们提供了理解 VR 原则、实现 AR 功能、设计交互元素以及为各种设备优化
    XR 应用的技能。接下来，我们将过渡到令人兴奋的跨平台游戏领域，我们将探索开发无缝运行在多个平台上的游戏。
- en: Join our community on Discord
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的 Discord 社区
- en: 'Join our community’s Discord space for discussions with the authors and other
    readers: [https://packt.link/gamedevelopment](https://discord.com/invite/NnJesrUJbu?link_from_packtlink=yes)'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们社区的 Discord 空间，与作者和其他读者进行讨论：[https://packt.link/gamedevelopment](https://discord.com/invite/NnJesrUJbu?link_from_packtlink=yes)
- en: '![](img/Disclaimer_QR2.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Disclaimer_QR2.jpg)'
