- en: Fitness for Fun - Tourism and Random Walking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will utilize Mapbox to create an AR fitness application
    prototype. The reason for this is that the main focus will be utilizing GPS, geolocation,
    and the Android/Apple device hardware to communicate with satellites and receive
    that data. Mapbox is an SDK designed to utilize the geolocation features of both
    Android and Apple devices within Unity. The software we will use in conjunction
    with Unity to make this happen much more seamlessly is Mapbox. Mapbox takes care
    of a lot of the most difficult portions of the work, so we only have to focus
    on our games and applications that utilize the software. We will learn how to
    use Mapbox with Unity to create a fitness application that promotes walking around
    the area in which you live. Basically, the user will tap on a random location
    and it will set the destination as that location. The user will then have to walk
    to that location, which will trigger the destruction of that marker.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Learning about Mapbox
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrating Mapbox into Unity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing Mapbox data into an AR application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Background information on Mapbox
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mapbox allows you to create Location Based, City Simulators, TabletopAR and
    WorldScaleAR applications and games. For any project you have that might require
    geolocation, Mapbox is the software to utilize. Mapbox was built from the ground
    up to be compatible with Unity, Android, and iOS.
  prefs: []
  type: TYPE_NORMAL
- en: Mapbox is free for web and mobile SDKs for up to 50,000 map views, geocode requests,
    direction requests, and matrix elements per month. After reaching the 50,000 limit,
    there is a charge of 0.5 cents per 1,000 web map views, geocode requests, direction
    requests, and matrix elements per month for mobile SDKs and web apps. The free
    version also includes 5 GB of dataset storage for satellite and street maps, an
    unlimited amount of styles for Mapbox Studio, and access to create public and
    free web/mobile apps.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, it should be noted that there is a commercial option that is required
    when you have a paid web app or website that is free or subscription-based, a
    private web app or website with restricted access, or an app or website that tracks
    assets / monitors people or things. The commercial plan includes private or paid
    apps for up to 250 seats, asset tracking for up to 1,000 different assets, and
    turn-by-turn navigation apps for up to 50 seats. The cost is the same as the free
    plan in addition to $499 per month:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ae978e7e-032e-4d45-86dd-90c01f5c0d26.png)'
  prefs: []
  type: TYPE_IMG
- en: Project overview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will be creating a small application that allows the user to select the location
    they want to walk to and it will set the destination. The build time will be around
    20 minutes.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The technical requirements for this application are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Android device with kernel version 24 or above
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unity 2018
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mapbox ([https://www.mapbox.com/](https://www.mapbox.com/))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up Mapbox
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will now see how to set up Mapbox:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The very first thing we need to do is sign up for Mapbox. This requires a username,
    email address, and password:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1de449c8-443a-43c9-8808-8e7004645f9b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After you have signed up and verified your email address, it will take you
    to a page to find out which version of Mapbox you need. You have the option of
    iOS, Android, Web, and Unity:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1040a3f7-60c2-426e-b66f-1373c6f28cc9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The version we want will obviously be the Maps SDK for Unity, so be sure to
    download the Unity package before proceeding:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1d7e0521-7f35-417a-9327-8ff99346c73b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As per the following screenshot, you will be given an access token, which will
    be required to utilize the Mapbox software. Be sure to copy this key and paste
    it into Notepad for later use:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a46f4b65-ed4a-4178-a25c-91aef2add567.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Create a new Unity project and call it `Chapter6` or `Fitness for Fun`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/30b33675-cb4f-4d47-adcb-0f35fd8ec845.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Import the Mapbox Unity asset file into the project:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3a2d1ce6-27c2-4aaa-ab9f-aaeb59d44884.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This will probably take some time to install:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/91697958-a8d2-4ff3-b420-aa3fc985edb4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Right away, after the installation, you should notice a new menu item called
    Mapbox. This opens up quite a few new features that are exposed for us to play
    with:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/377b4cd9-f555-48e8-9815-f505d696ab9d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Mapbox gives us Atlas Template Generator, Clear File Cache, Setup, and Map
    Editor options:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/40520932-09c9-44a7-aee8-a4b6bd1c4f74.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The Mapbox Atlas Template Generator is a tool that allows you to create and
    test custom map atlases:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For every item we look at in this section, exit from it immediately after taking
    a look at it so we can continue. We will revisit the items we need when building
    the project.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9eaac0fd-849d-4380-8c2a-bbb8a70863d0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The Map Editor allows you to visualize the underlying data structure of the
    maps you create and use:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5b499793-deb1-45dd-9990-d8646c041136.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In addition to that, the Map Editor’s data is tied directly to the Map object’s
    Abstract Map Script. Any changes you make to the Abstract Map Script data is reflected
    in the Map Editor, and any changes you make in the Map Editor are reflected in
    the Abstract Map Script’s data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/154a95d1-d322-4050-9f33-e345352b3442.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The Mapbox Setup option allows you to select Example scenes or Map Prefabs,
    however, this can only be accessed after you copy and paste your Access Token
    and submit the information. This will require you to be connected to the internet
    for verification:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f96ff68e-b25a-4051-b84f-11573cf6cafd.png)'
  prefs: []
  type: TYPE_IMG
- en: Important items to note
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With different project types, you will have prefabs that will automatically
    be added to the active scene. In this section, we will go over the main object
    that is added to any template type, which is the Map object.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Map is the most important object that is added to with any of our templates
    and has many extremely important items within the script that we should go over:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/01a72ca4-244c-4c16-88bf-c2f574321688.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The first item within the `Map` object is the Abstract Map script. The most
    important items within are MAP LAYERS, GENERAL, Location, and Others:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d283cec5-1a75-4f0a-a039-833d3c6fc05b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Within the GENERAL tab, we have:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fb6dcafd-4f2f-4448-85d8-69ffdf453891.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Latitude Longitude: If you click on Search, you can set this by typing in an
    address, or country and city, or even city and state, depending on the location
    you want to utilize. It will automatically convert it to be latitude and longitude
    values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Zoom: This is specifically set for how close and far away the map can be drawn;
    be advised that the zoom function will only work appropriately if you have the
    proper tilesets generated for it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Extent Options: These are how far you want the map to be drawn. By default,
    it is set to the bounds of the camera.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Camera: This is the camera you want to use, whether it is an AR camera with
    Vuforia, ARCore, ARKit, or even the regular Unity camera.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Update Interval: This is how long the program should wait before updating positions
    and drawing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Initialize On Start: This is a Boolean value for whether or not you want the
    map to immediately be drawn upon the start of the scene:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In the Others tab, we have a few options as well:'
  prefs: []
  type: TYPE_NORMAL
- en: Placement Options allows you to choose between At Location Center and At Tile
    Center. This controls the center or root placement of the tiles. Location center
    is able to be defined by you, whereas the tile center is the center of the tile.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Snap Map To Zero is a Boolean value that specifies whether or not the map’s
    root should be snapped to 0,0,0.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scaling Options allows you to choose whether you want a custom or world scale.
    Custom is defined by Unity using a Mercator conversion factor. World scale means
    that the actual scale is rendered and the Mercator conversion is ignored.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unity Tile Size is the size of the tiles used in Unity units.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loading Texture is the texture used when the textures are loading.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The next tab is the IMAGE tab:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cff5aa02-3775-4d5e-99cc-80d005752f9e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Data Source: This is the source of our maps. We can use Mapbox Streets, Mapbox
    Outdoors, Mapbox Dark, Mapbox Light, Mapbox Satellite, Mapbox Satellite Street,
    Custom, or None. These are essentially theme options for the map you want to use.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Use Retina: This is a Boolean that allows you to choose whether you want to
    enable the usage of larger texture maps and better visual quality for retina displays.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Use Compression: This is a Boolean that allows you to choose to use Unity compression
    for the tile texture.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Use Mip Map: This is a Boolean that lets you choose whether to use Unity-generated
    mip mapping.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The next tab is TERRAIN, which gives us the ability to modify the terrain of
    our Mapbox maps:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/24b772e9-9ad1-4849-8894-a32865695507.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Data Source: This is the first option available, and it lets us choose between
    using Mapbox Terrain, Custom, or None. Mapbox Terrain provides us with digital
    elevation with worldwide coverage. Custom allows us to use a custom elevation
    model. None is a flat terrain.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Map Id: This is the Id of the corresponding tileset that we want to use.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Elevation Layer Type: This gives us the choice between Flat Terrain, Terrain
    with Elevation, Low Polygon Terrain, and Globe Terrain. This allows us to render
    our terrain with the specified elevation type. Flat Terrain renders a flat terrain
    with no elevation. Terrain with Elevation renders terrain with elevation from
    the source specified. Low Polygon Terrain renders a low polygon terrain with elevation
    from the source specified. Globe Terrain renders a terrain with no elevation for
    a globe.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Base Material: This is the material used to render the terrain tiles.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Exaggeration Factor: This multiplies the factor to vertically exaggerate elevation
    on the terrain, however, it does not work with the Flat Terrain Elevation Layer
    Type.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Add Collider: This is a Boolean that lets us add Unity physics colliders to
    terrain tiles for detecting collisions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Others tab within the TERRAIN tab has a few options available to us as
    well:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Sample Count: This gives us the resolution for our terrain, with the result
    being an *n* x *n* grid.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Use Relative Height: This is a Boolean that lets us use a world-relative scale
    for scaling the terrain height.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Earth Radius: This is the radius of the Earth we want to use in Unity units
    of measurements, which is meters.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Show Sidewalls: This is a Boolean that adds side walls to terrain meshes, which
    reduces visual artifacts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Add to Unity layer: This adds the terrain tiles to the Unity layer. Upon checking
    the checkbox, you will get the choice of which layer you want to add them to—Default,
    TransparentFX, Ignore Raycast, Water, UI, Postprocessing, and Add Layer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Next is the MAP LAYERS tab:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5cec6306-df35-4c1f-a8b5-7788d37d1560.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Data Source: This is the source dataset for the vector data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Map Id: This is the Id of the map we are using.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Use Optimized Style: This is a Boolean that allows us to use Mapbox-style-optimized
    tilesets that remove any layers or features in the tile that are not represented
    by a Mapbox style. Style-optimized vector tiles are smaller, serve over the wire,
    and are a great way to reduce the size of offline caches.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Enable Coroutines: This is a Boolean that allows us to use coroutines.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Entity Per Coroutine: This specifies how many entities can be grouped together
    in a single coroutine call.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'POINTS OF INTEREST is the next tab. Here you can create special markers for
    important locations in your application or game:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ec66880f-4fab-42d0-9bfa-8b5a3b7b6a98.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Required Map Id: This is the map Id of the tileset we are using and cannot
    be empty.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Add Layer: This allows us to add points of interest layers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Remove Selected: This allows us to delete a layer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The last tab is FEATURES, which gives us Vector Layer Visualizers with the
    options to add or remove visualizers. FEATURES allow us to modify how certain
    features look in relation to the point of interest we create:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3b0ef9ed-70ac-4eca-a27f-02c43090e1a8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Add Visualizer: This allows us to change how we visualize a points of interest
    layer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Remove Selected: This allows us to delete the selected visualizer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/f4ecf028-78e2-4d17-a90c-9e0bd575220d.png)'
  prefs: []
  type: TYPE_IMG
- en: Finally, we have another script, called Initialize Map With Location Provider,
    which only has the option to add an Abstract Map object to it. This script does
    what the name states—it registers if you are on an iOS, Windows, or Android device,
    and selects the Location Provider that is most relevant for it.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'It''s now time to set up our project:'
  prefs: []
  type: TYPE_NORMAL
- en: Let's create a new scene and call it `FitnessFun:`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/01d18df0-3ffe-462e-8bd7-5b9cbff40e2a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on Mapbox and then Setup. This will open a setup menu where you need
    to paste your Access Token in order to gain access to the Map Prefabs template:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2f1e9a49-25e2-40fd-b276-1c2b3984d4db.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The Map Prefabs template we want to use is Location Based Game:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4938c549-0f0f-457c-9f17-10e23128cae7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'It will add a prefab onto our scene, which will have what looks like a pawn
    in the scene edit tab:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/36e56f54-319a-46da-93f8-3f4d0387bc79.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If you look over in the Hierarchy pane, you will notice a `LocationBasedGame`
    prefab added there, and if you drill down to look at the objects inside, you will
    see a Map, Player, and LocationProvider inside. You will also notice a Canvas
    and EventSystem automatically added to the Hierarchy:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a4661a72-2aa9-4228-b6b7-c153a264be1a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Inside the `Scenes` folder, create a `Scripts` folder:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9c7b6d5d-5ef6-4871-9610-c5295f2aa17c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Inside that `Scripts` folder, create a C# script called `TargetLocationController`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6aa1141b-2d7d-4b84-8c94-6687957c73b9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Create another script called `DestroyTargetLocation`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4db563d3-60fc-4b76-9487-dbc45545d17f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Go back to the Hierarchy pane and make a copy of the Player component:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e70ad510-6a1c-4cdb-a10f-41eb1060641d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Remove the Immediate Position and Rotation with Location scripts along with
    renaming it to `targetLocation`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/93f3325e-f2bc-493c-9fa6-7f99f8a86744.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Inside the `Scenes` folder, create a folder called `Prefabs`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4da2928d-3172-4c2d-9522-c2b081ed021e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Drag and drop the `TargetLocation` object into the `Prefabs` folder:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b26bc7c7-d0a2-42f1-88d1-d073f40b082c.png)'
  prefs: []
  type: TYPE_IMG
- en: Navigate to our `Scripts` folder and open the TargetLocationController script.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We need to write our script to create a new instance of the `TargetLocation`
    object and to destroy the object when something happens.
  prefs: []
  type: TYPE_NORMAL
- en: Scripting the project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we''ll see how to script our project:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We will first make sure to utilize Unity Engine, as we need access to `MonoBehaviour`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Our public class will be called `TargetLocationController`, which is the same
    name as the script file we named in the Unity Editor. We will also inherit from
    `MonoBehaviour`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'We will create a public `GameObject` called `targetObject`; this is so that
    we can drag and drop our prefab onto this object to set a reference to it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'We will create a `Start()` method at this point. We want to find the object
    in the project with the tag of `targetLocation`, as we will be creating it upon
    a touch event instantiating it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'We will need to create a `SetLocation` method and instantiate a new raycast
    to utilize the touch event the way we want for reading finger presses on the screen:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'We need to loop through to check on our input via touch events:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'We check to see if the touch count is greater than `0`, and if our touch phase
    is moved:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we will construct a ray from the current touch coordinates on the screen:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'We need to do a check to see if the raycast hits anything:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'If the raycast hits anything, then we will create a new instance of our prefab
    with the position based on our touch event:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'In our `Update()` method, we call our `SetLocation` script:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Now, we just need a simple collision check script to check if the player object
    collides with the `targetlocation` object. We want to destroy our `targetLocation`
    object if the player object collides with it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the `Destroy Target Location` script.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We will need the `UnityEngine` namespace as usual, since we want to inherit
    from `MonoBehaviour`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'The name of the class is the same as the name we gave the C# script file and
    inherits from `MonoBehaviour`, so we can attach it to a game object in the Unity
    Editor:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'We create an `OnCollisionEnter` method with the parameters of `Collision col`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'We will do a simple `if` check to see if what we are colliding with is the
    `targetLocation` object via the object''s tag name:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'If the simple `if` check returns true, then we will destroy the `targetLocation`
    object:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: We have everything we need to finalize the project.
  prefs: []
  type: TYPE_NORMAL
- en: Finalizing the project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will now finalize our project:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate back to the Unity Editor, attach the `targetLocation` script to the
    player object, and set the object to be the `targetLocation` object:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/83c61190-4803-4ff2-ad8f-6d7e96dcc3c2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Attach the `DestroyTargetLocation` script to our object called `LocationBasedGame`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/684355ac-1534-493d-84d5-a0c7d86e6d2a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we can click on File | Build:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f2176dbc-da71-4fc9-8a25-95ff0a365693.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Set the project type for Android:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/58f8c7c7-7b18-47c0-87e9-babcfb7994bd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Make sure the only scene added for building is the `Chapter6` scene. If the
    scenes list is empty, click on Add Current Scene:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/942d3053-5546-4abb-a0fe-ea9a7f42d18d.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, build the project and install it on your Android device to run the program.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we conceptualized and created a fitness application prototype
    that encourages walking to different locations for the user's enjoyment. We learned
    about Mapbox and what it does, and we learned how to integrate it into Unity.
    We then leveraged Mapbox to create a viewable AR map that is able to use geolocation
    technology to track the user's position and destination.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will go over creating an application/game that facilitates
    learning for children by creating a picture puzzle.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Leverage Vuforia, ARCore, or ARKit to be able to read certain objects in the
    world to save where you have gone or to gameify this application. To do this,
    you will need to create AR markers, which are heavily documented with many examples
    online on how to leverage them for different project types.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use Mapbox with ARCore, ARKit, and Vuforia:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A.) True
  prefs: []
  type: TYPE_NORMAL
- en: B.) False
  prefs: []
  type: TYPE_NORMAL
- en: 'Mapbox is completely free:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A.) True
  prefs: []
  type: TYPE_NORMAL
- en: B.) False
  prefs: []
  type: TYPE_NORMAL
- en: 'Mapbox is fully integrated to work with Unity:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A.) True
  prefs: []
  type: TYPE_NORMAL
- en: B.) False
  prefs: []
  type: TYPE_NORMAL
- en: 'Mapbox has web-based software to create custom maps:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A.) True
  prefs: []
  type: TYPE_NORMAL
- en: B.) False
  prefs: []
  type: TYPE_NORMAL
- en: 'Mapbox has an example scene prebuilt that allows you to use UnityChan as your
    player model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A.) True
  prefs: []
  type: TYPE_NORMAL
- en: B.) False
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mapbox is heavily documented for Unity, iOS, Android, React Native, and QT.
    They have tutorials on how to work with Mapbox Studio, how to directly leverage
    their Maps, Directions, and Geocoding APIs. The quickest way to access their documentation
    is to go to [https://www.mapbox.com/developers/](https://www.mapbox.com/developers/).
  prefs: []
  type: TYPE_NORMAL
