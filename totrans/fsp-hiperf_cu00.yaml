- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'It’s well-known today that F# has been quite a first class citizen, a built-in
    part of programming language support in Visual Studio from Visual Studio 2010\.
    F# is a programming language that has its own unique trait: it is a functional
    programming language, and at the same time, it has OOP support. F# has run on
    .NET until now, although we can also run F# as a cross-platform language, such
    as on Android (using Mono).'
  prefs: []
  type: TYPE_NORMAL
- en: Although F# mostly runs faster than C# or VB when doing computations, F# has
    its own unique performance characteristics. Some of the performance characteristics
    might not be so obviously identified and code implementations might have implicit
    bad practices and subtleties that may lead to performance bottlenecks. The bottlenecks
    may or may not be faster than C#/VB counterparts, although some of the bottlenecks
    may share the same performance characteristics, such as the use of .NET APIs.
  prefs: []
  type: TYPE_NORMAL
- en: The main goal of this book is to identify the performance problems in F#, measuring
    and optimizing F# code to run more efficiently, while also maintaining the functional
    programming style as appropriately as possible.
  prefs: []
  type: TYPE_NORMAL
- en: This book focuses on optimizing F#. A basic skill of F# knowledge (including
    functional programming concept and basic OOP) is a prerequisite to start understanding
    its performance problems and optimizing F#.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](fsp-hiperf_cu01.html#aid-E9OE2 "Chapter 1. Performing Common Optimizations
    in F#"), *Performing Common Optimizations in F#*, introduces F# and gives an overview
    of the common problems in F# code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](fsp-hiperf_cu02.html#aid-K0RQ2 "Chapter 2. Performance Measurement"),
    *Performance Measurement*, helps you get to know what and how to measure and the
    tooling ecosystem to measure performance.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](fsp-hiperf_cu03.html#aid-NQU22 "Chapter 3. Optimizing Data Structures"),
    *Optimizing Data Structures*, helps you decide the best and the most optimal use
    of F#-specific data structures and optimize them.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](fsp-hiperf_cu04.html#aid-11C3M2 "Chapter 4. Introduction to Concurrency
    in F#"), *Introduction to Concurrency in F#*, provides a general introduction
    to the concept of concurrency and concurrency implementation support in F#.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](fsp-hiperf_cu05.html#aid-164MG2 "Chapter 5. Advanced Concurrency
    Support in F#"), *Advanced Concurrency Support in F#*, provides best practices
    in implementing advanced concurrency support in F#, including interop with .NET
    TPL and avoiding performance pitfalls.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](fsp-hiperf_cu06.html#aid-19UOO2 "Chapter 6. Optimizing Type Provider"),
    *Optimizing Type Provider*, gives a quick walk-through of type provider implementation,
    while at the same time providing optimization and avoiding performance pitfalls
    in implementing your own custom type providers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](fsp-hiperf_cu07.html#aid-1ENBI1 "Chapter 7. Language Features and
    Constructs Optimization"), *Language Features and Constructs Optimization*, explains
    best practices when implementing and using various F# language features and constructs
    without sacrificing the performance and correctness in functional programming.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](fsp-hiperf_cu08.html#aid-1JFUC2 "Chapter 8. Optimizing Computation
    Expressions"), *Optimizing Computation Expressions*, explains best practices in
    using F# computation workflows and optimizing your own implementation of a computation
    workflow.'
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for F# developers who want to build high-performance applications.
    Knowledge of functional programming would be helpful.
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We need to ensure that we have met all of the software and hardware requirements
    and that we have their correct versions as well.
  prefs: []
  type: TYPE_NORMAL
- en: Basic requirements and setup environments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are the requirement specifications for an F# environment:'
  prefs: []
  type: TYPE_NORMAL
- en: Visual Studio 2015 Update 3\. The minimum edition is Community Edition because
    it is the free minimum version of Visual Studio, which has extensibility support
    and Visual F# (also F# project templates) as part of the installation. Express
    Edition is not recommended because it has no F# project templates built in.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: .NET 4.6 as the minimum target runtime.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Windows 7 SP1 (Windows 8.1 Update 1 64-bit or Windows 10 64-bit is recommended)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following are the Visual Studio 2015 Update 3 hardware requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: 4 GB RAM on Windows 7 SP1 or 6 GB RAM on Windows 8.1 and Windows 10.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At least a Core 2 Duo or Athlon processor. It is recommended to have Core i5
    as it is also a recommendation for a Windows 8.1 or Windows 10 machine. Also,
    using Core i5 will provide easier illustrations to see multi core in action when
    we discuss concurrency in Chapter 4 and 5.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Approximately 12 GB to 15 GB of disk space with Windows 10 UWP installed (without
    Android development feature).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DirectX 9.0c capable display adapter.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For more information, please check the requirement specification on MSDN:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.visualstudio.com/en-us/downloads/visual-studio-2015-system-requirements-vs.aspx](https://www.visualstudio.com/en-us/downloads/visual-studio-2015-system-requirements-vs.aspx)'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We recommend having at least 8 GB of RAM. This minimal memory size is recommended
    in order to have an optimal experience for not just running F# code. For large
    F# projects, Visual Studio IDE will load type information, metadata and debug
    symbols in the background, and Visual Studio's memory consumption will quickly
    climb to more than 3 GB. This is why 64-bit Windows is recommended as it allows
    us to use RAM higher than 4 GB.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    can include other contexts through the use of the `include` directive."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'If there is a line (or lines) of code that needs to be highlighted, it is set
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Clicking the **Next** button moves you to the next screen."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail feedback@packtpub.com, and mention
    the book's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Downloads & Errata**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the **Search** box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Download**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/F-Sharp-High-Performance/](https://github.com/PacktPublishing/F-Sharp-High-Performance/) We
    also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form link**, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the Errata section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at copyright@packtpub.com with a link to the suspected pirated
    material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at questions@packtpub.com,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
