- en: Chapter 8. Moving to BizTalk Services
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第八章。迁移到 BizTalk Services
- en: In this final chapter, we will discuss how to move to BizTalk Services. All
    through this book, we've looked at the new features of BizTalk Services and what
    they enable, but the likelihood is that you'll be wanting to move existing solutions
    to BizTalk Services. As you're reading this book, we'll make a further assumption
    that you want to know more about moving BizTalk Server solutions on-premises to
    BizTalk Services.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的最后，我们将讨论如何迁移到 BizTalk Services。整本书中，我们探讨了 BizTalk Services 的新特性和它们能做什么，但很可能会想要将现有的解决方案迁移到
    BizTalk Services。当你阅读这本书时，我们还将进一步假设你想要了解更多关于将本地 BizTalk Server 解决方案迁移到 BizTalk
    Services 的信息。
- en: 'In this chapter, we''ll look at the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下主题：
- en: What's available to help move BizTalk Server solutions to BizTalk Services
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可用于帮助将 BizTalk Server 解决方案迁移到 BizTalk Services 的资源
- en: How to deal with differences between the products
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何处理产品之间的差异
- en: Future plans for BizTalk Services
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BizTalk Services 的未来计划
- en: By the end of this chapter, you should have a good understanding of how to tackle
    moving the existing BizTalk Server solutions to BizTalk Services and what is planned
    in the evolution of BizTalk Services to make this even easier.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你应该对如何处理将现有的 BizTalk Server 解决方案迁移到 BizTalk Services 以及 BizTalk Services
    发展中计划如何使这一过程更加容易有一个很好的理解。
- en: Moving from BizTalk Server
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 BizTalk Server 迁移
- en: 'BizTalk Server consists of a number of architectural components, only some
    of which have parity in BizTalk Services. These are listed in the following table,
    which shows the comparison of BizTalk Server and BizTalk Services:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk Server 由多个架构组件组成，其中只有一些在 BizTalk Services 中具有等效性。这些组件在以下表中列出，该表显示了 BizTalk
    Server 和 BizTalk Services 的比较：
- en: '| BizTalk Server | BizTalk Services |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| BizTalk Server | BizTalk Services |'
- en: '| --- | --- |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Map | Transform |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 映射 | 转换 |'
- en: '| Pipeline | Bridge |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| 管道 | 桥梁 |'
- en: '| Business Rules Engine | No equivalent / custom coding needed |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| 业务规则引擎 | 无等效/无需自定义编码 |'
- en: '| Business Activity Monitoring | No equivalent / custom coding needed |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 业务活动监控 | 无等效/无需自定义编码 |'
- en: '| Orchestration | Workflow outside of service |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 集成 | 集成 |'
- en: '| Adapters | Bridge sources and destinations |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 适配器 | 桥接源和目标 |'
- en: '| Schema | Schema |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 架构 | 架构 |'
- en: '| Tracking | Tracking |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 跟踪 | 跟踪 |'
- en: '| Trading Partner Management | Trading Partner Management |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 交易伙伴管理 | 交易伙伴管理 |'
- en: As you can see from the preceding table, there are a number of functional differences
    between BizTalk Services v1.0 and BizTalk Server. This is to be expected, as BizTalk
    Server is an established, mature product that was first shipped in 2000; it has
    received numerous updates over time. BizTalk Services, on the other hand, was
    GA'd (released for general availability) on November 21, 2013\. However, all is
    certainly not lost, as there are several ways to mitigate the effort of moving
    from one to the other. In the following sections, we'll look at the different
    types of artifacts in a BizTalk Server solution and how to migrate to BizTalk
    Services.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如前表所示，BizTalk Services v1.0 和 BizTalk Server 之间存在许多功能差异。这是可以预料的，因为 BizTalk Server
    是一个在 2000 年首次发布并经过多次更新的成熟产品；而 BizTalk Services 则是在 2013 年 11 月 21 日 GA（发布为通用可用）的。然而，并非所有努力都白费，因为有多种方法可以减轻从一种产品迁移到另一种产品的努力。在接下来的章节中，我们将探讨
    BizTalk Server 解决方案中的不同类型的工作件以及如何迁移到 BizTalk Services。
- en: Maps
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 映射
- en: '[Chapter 2](ch02.html "Chapter 2. Messages and Transforms"), *Messages and
    Transforms*, covered mapping in detail and mentioned a tool we''ll look at more
    closely here. First though, let''s answer the question of whether you even need
    a tool.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[第二章](ch02.html "第二章。消息和转换")，*消息和转换*，详细介绍了映射，并提到了我们将在此处更详细地查看的工具。首先，让我们回答一下你是否真的需要这样的工具。'
- en: BizTalk Server provides the ability to run custom **Extensible Stylesheet Language
    Transformations** (**XSLT**)—just provide the path to an XSLT template file and
    the map contents are ignored. Maps written in this way do not need the conversion
    tool as you can simply take the XSLT and configure it in the same way in a BizTalk
    Services transform.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk Server 提供了运行自定义 **可扩展样式表语言转换**（**XSLT**）的能力——只需提供 XSLT 模板文件的路径，就可以忽略映射内容。以这种方式编写的映射不需要转换工具，因为你可以直接将
    XSLT 配置在 BizTalk Services 转换中。
- en: The functional equivalent of maps in BizTalk are transforms in BizTalk Services,
    as you have already seen. The implementation of these technologies is, however,
    very different, and it is not possible to execute BizTalk Server maps in BizTalk
    Services.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk 中的映射在 BizTalk Services 中的功能等价物是转换，正如您已经看到的。然而，这些技术的实现却非常不同，无法在 BizTalk
    Services 中执行 BizTalk 服务器映射。
- en: Microsoft has released a conversion tool that takes a BizTalk map, a `.btm`
    file, as the input, and outputs a BizTalk Services transform file, `.trfm`. Let's
    see how this works.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 微软发布了一个转换工具，它以 BizTalk 映射（`.btm` 文件）作为输入，并输出 BizTalk Services 转换文件（`.trfm`）。让我们看看它是如何工作的。
- en: 'In [Chapter 2](ch02.html "Chapter 2. Messages and Transforms"), *Messages and
    Transforms*, we looked at a BizTalk Services transform and the source and target
    schemas for it. Here, we''ll revisit these schemas and look at the equivalent
    original BizTalk Server map. This is shown in the following screenshot:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第 2 章](ch02.html "第 2 章。消息和转换") 中，我们探讨了 BizTalk Services 转换及其源和目标架构。在这里，我们将重新审视这些架构，并查看等效的原始
    BizTalk 服务器映射。如下面的截图所示：
- en: '![Maps](img/7401EN_08_01.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![地图](img/7401EN_08_01.jpg)'
- en: A BizTalk Server map
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk 服务器映射
- en: 'The conversion tool is part of the BizTalk Services SDK available at [http://www.microsoft.com/en-us/download/details.aspx?id=39087](http://www.microsoft.com/en-us/download/details.aspx?id=39087).
    Select the `Tools.zip` download and unzip it on your local machine. This is a
    command-line-driven tool, so here, I''ll open a command window as shown in the
    following screenshot. The executable takes only two parameters: the path to the
    BizTalk `.btm` file and the output `.trfm` file (which is actually optional).'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 转换工具是 BizTalk Services SDK 的一部分，可在 [http://www.microsoft.com/en-us/download/details.aspx?id=39087](http://www.microsoft.com/en-us/download/details.aspx?id=39087)
    获取。选择 `Tools.zip` 下载并解压到您的本地计算机上。这是一个命令行驱动的工具，因此在这里，我将打开一个命令窗口，如下面的截图所示。可执行文件只接受两个参数：BizTalk
    `.btm` 文件的路径和输出 `.trfm` 文件（实际上这是可选的）。
- en: '![Maps](img/7401EN_08_02.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![地图](img/7401EN_08_02.jpg)'
- en: The BizTalk map conversion tool
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk 映射转换工具
- en: The resultant BizTalk Services transform is shown in the following screenshot.
    Running this yields exactly the same output as the transform we created in [Chapter
    2](ch02.html "Chapter 2. Messages and Transforms"), *Messages and Transforms*.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如下面的截图所示的结果 BizTalk Services 转换与我们在 [第 2 章](ch02.html "第 2 章。消息和转换") 中创建的转换产生完全相同的输出。
- en: '![Maps](img/7401EN_08_03.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![地图](img/7401EN_08_03.jpg)'
- en: A converted map
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 转换后的映射
- en: As you've just seen, the conversion tool is a useful way to reuse existing maps
    in BizTalk Services. It is often the case that a large investment has been made
    in BizTalk maps, and this tool allows them to be converted with minimal effort
    in many cases. However, the tool is not without a few limitations that will require
    some rework to the resultant transforms.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您刚才看到的，转换工具是重用 BizTalk Services 中现有映射的有用方式。通常情况下，已经在 BizTalk 映射上投入了大量资金，而这个工具允许它们在许多情况下以最小的努力进行转换。然而，这个工具并非没有一些限制，这需要对生成的转换进行一些修改。
- en: 'One fix that may be required to the generated transform if it won''t load correctly
    is to change the ID values in the file as it can sometimes emit duplicates. When
    you attempt to open the map in Visual Studio, you may see the error shown in the
    following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果生成的转换无法正确加载，可能需要进行的修复之一是更改文件中的 ID 值，因为它有时会发出重复项。当您尝试在 Visual Studio 中打开映射时，您可能会看到以下截图所示的错误：
- en: '![Maps](img/7401EN_08_04.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![地图](img/7401EN_08_04.jpg)'
- en: The mapping error message
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 映射错误消息
- en: This should be a simple case of finding the ID that is flagged as a duplicate
    when you try and open the transform and substituting its value with a new, unique
    one. If the ID refers to a script, there will be at least two places where the
    duplicate ID will need to be changed. An example is shown in the following code
    where the contents of the `Value` tag contain a duplicate ID. Changing this to
    a unique value, for example, `14`, will fix this in the sample accompanying this
    chapter.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该是一个简单的案例，当您尝试打开转换并标记为重复的 ID 时，找到该 ID 并用新的唯一值替换其值。如果 ID 指的是脚本，则至少需要更改重复 ID
    的两个地方。以下代码示例中，`Value` 标签的内容包含重复的 ID。将其更改为唯一值，例如 `14`，将修复本章附带的示例中的问题。
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Generally, if the tool cannot convert the map, it will convert as much as it
    can and substitute functoids that cannot be converted with an arithmetic expression
    functoid in the transform. This will be empty and therefore won't compile to indicate
    that you need to review it. If a functoid conversion is not possible, the equivalent
    functoid in the transform will have no inputs to it, again to indicate that something
    has not been converted. A full list of current limitations is provided in the
    `ReadMe.txt` file in the same location as the tool itself.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，如果工具无法转换映射，它将尽可能转换，并用算术表达式函数对象替换无法转换的函数对象。这将是一个空对象，因此不会编译，以指示你需要审查它。如果一个函数对象转换不可行，转换中的等效函数对象将没有输入，再次表示某些内容尚未转换。当前限制的完整列表在工具所在位置的`ReadMe.txt`文件中提供。
- en: The tool emits a logfile indicating the steps it took to convert the map. The
    `Log.txt` file will be written to the folder in which the tool was run in the
    command line.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 工具会生成一个日志文件，指示转换映射所采取的步骤。`Log.txt`文件将写入命令行中运行工具的文件夹。
- en: Pipelines
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管道
- en: 'Pipelines in BizTalk Server are used to process data between adapters and the
    MessageBox. This requirement is now provided by bridges in BizTalk Services. We''ve
    covered bridges in detail elsewhere in this book ([Chapter 3](ch03.html "Chapter 3. Bridges"),
    *Bridges* and [Chapter 4](ch04.html "Chapter 4. Enterprise Application Integration"),
    *Enterprise Application Integration*). You should find that usage of bridges and
    the ability to deploy custom code in them provides most of the functionality you
    would encounter with the pipelines and custom pipeline components. The BizTalk
    Services standard bridge stages match quite closely to those of BizTalk Server,
    as illustrated in the following table:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk服务器中的管道用于在适配器和MessageBox之间处理数据。现在，这一需求由BizTalk服务的桥梁提供。我们已在本书的其他部分详细介绍了桥梁（[第3章](ch03.html
    "第3章。桥梁")，*桥梁*和[第4章](ch04.html "第4章。企业应用集成")，*企业应用集成*）。你应该会发现桥梁的使用和在其中部署自定义代码的能力提供了与管道和自定义管道组件遇到的大多数功能。BizTalk服务标准的桥梁阶段与BizTalk服务器非常相似，如下表所示：
- en: '| BizTalk Server stage | BizTalk Services stage |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| BizTalk服务器阶段 | BizTalk服务阶段 |'
- en: '| --- | --- |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Receive: Decode | Enrich (1) |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| 接收：解码 | 丰富（1）|'
- en: '| Receive: Disassemble | Message Type / Enrich (2) |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| 接收：拆装 | 消息类型/丰富（2）|'
- en: '| Receive: Validate | Validate |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| 接收：验证 | 验证 |'
- en: '| Receive: ResolveParty | N/A |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 接收：解析方 | N/A |'
- en: '| Send: Pre-assemble | Enrich (1) |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| 发送：预组装 | 丰富（1）|'
- en: '| Send: Assemble | Enrich (2) |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 发送：组装 | 丰富（2）|'
- en: '| Send: Encode | Send Reply |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| 发送：编码 | 发送回复 |'
- en: '| Receive and Send: Port maps | Transform stage |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| 接收和发送：端口映射 | 转换阶段 |'
- en: If the stages in the preceding table seem a little arbitrary, it's because they
    are. Just as in BizTalk Server it was perfectly possible to do everything in a
    single stage (depending on which stage it is of course), so is the case with BizTalk
    Services. While BizTalk Services doesn't have the concept of pipeline components,
    it provides enough stage placeholders for your own code and, of course, provides
    many of the things out of the box for which you'd have traditionally written a
    custom pipeline component anyway, such as property promotion. Even though BizTalk
    Server provides four receive pipeline stages, and in fact, pipeline stages are
    actually configurable (you can define your own), no one really has ever bothered
    with that and nearly all solutions just use the decode and validate stages (if
    that). The send pipeline is even less important, but again, BizTalk Services provides
    a similar mirror image of stages in which you are able to perform work with the
    messages flowing through should you need to.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果前表中的阶段看起来有些随意，那是因为它们确实是。就像在BizTalk服务器中，完全有可能在单个阶段完成所有操作（当然，这取决于是哪个阶段），BizTalk服务也是如此。虽然BizTalk服务没有管道组件的概念，但它提供了足够的阶段占位符供你自己的代码使用，当然，它还提供了许多你传统上会为自定义管道组件编写的功能，例如属性提升。尽管BizTalk服务器提供了四个接收管道阶段，实际上，管道阶段是可以配置的（你可以定义自己的），但没有人真正关心这一点，几乎所有解决方案都只使用了解码和验证阶段（如果有的话）。发送管道甚至不那么重要，但同样，BizTalk服务提供了与阶段相似的镜像，如果你需要，你可以在这里对通过的消息执行操作。
- en: All this being said, it should be clear that if you encounter a solution that
    has custom pipeline components, you have some work to do, that is, to try and
    convert to BizTalk Services.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，应该清楚的是，如果您遇到一个包含自定义管道组件的解决方案，您有一些工作要做，即尝试将其转换为BizTalk Services。
- en: Schema
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 架构
- en: Schema support is largely the same in BizTalk Services, and generally, you should
    not encounter too many issues moving your schemas between the two. There are some
    notable exceptions such as the ability to pass multiple schemas into BizTalk Server
    maps, which is currently not possible with BizTalk Services, but generally, schemas
    can be reused in a straightforward manner.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk Services对架构的支持在很大程度上是相同的，并且通常，您在将架构在两者之间移动时不应遇到太多问题。有一些值得注意的例外，例如将多个架构传递到BizTalk
    Server映射中，这在BizTalk Services中目前是不可能的，但通常架构可以以直接的方式重用。
- en: Adapters
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 适配器
- en: 'BizTalk Services shares the same concept of adapters, albeit with a much smaller
    set. Additionally, BizTalk Services provides two approaches to integration: sources
    and destinations for a bridge as well as the BizTalk Adapter Service, which uses
    the Service Bus relay to pass messages to an Internet Information Services (IIS)-hosted
    Line of Business (LOB) adapter (actually, the same LOB adapters BizTalk ships
    with). Therefore, if the adapters your BizTalk Server solution needs are represented
    in the BizTalk Services set, the conversion is straightforward. However, there
    are hundreds of adapters available for BizTalk Server and a dozen or so for BizTalk
    Services, so clearly, there are some gaps. Some just won''t make sense for a cloud-hosted
    platform (for example, the much-loved File adapter), but for others, this could
    present a problem.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk Services与适配器的概念相同，尽管适配器的集合要小得多。此外，BizTalk Services提供了两种集成方法：桥接的源和目标以及BizTalk
    Adapter Service，它使用服务总线中继将消息传递到由Internet Information Services (IIS)托管的业务线（LOB）适配器（实际上，与BizTalk一起提供的相同的LOB适配器）。因此，如果您的BizTalk
    Server解决方案需要的适配器在BizTalk Services集合中表示，转换过程将非常直接。然而，对于BizTalk Server有数百个适配器可用，而对于BizTalk
    Services则有十几个左右，因此显然存在一些差距。其中一些对于云托管平台来说可能没有意义（例如，备受喜爱的文件适配器），但对于其他一些，这可能会带来问题。
- en: Microsoft recognizes this potential issue and will, of course, seek to introduce
    new sources and destinations over time based on customer feedback. Microsoft is
    also planning to open up the architecture to provide an adapter SDK to enable
    you (or third parties) to build your own, thus offering another solution. Therefore,
    over time, this problem is likely to diminish.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 微软认识到这个问题，当然会随着时间的推移根据客户反馈引入新的源和目标。微软还计划开放架构，提供适配器SDK，以便您（或第三方）构建自己的适配器，从而提供另一种解决方案。因此，随着时间的推移，这个问题可能会减少。
- en: Trading Partner Management (TPM)
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 交易伙伴管理（TPM）
- en: BizTalk Server uses TPM to define and manage EDI trading partners. Organizations
    that use BizTalk's EDI capabilities will likely have hundreds or even thousands
    of trading partners set up in BizTalk and will want a way to migrate these partners
    to BizTalk Services if they wish to adopt it.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk Server使用TPM来定义和管理EDI交易伙伴。使用BizTalk的EDI功能的组织可能会在BizTalk中设置数百甚至数千个交易伙伴，并且如果他们希望采用BizTalk
    Services，他们将希望有一种将这些合作伙伴迁移到BizTalk Services的方法。
- en: BizTalk Services takes the same approach to partner management as BizTalk, and
    changes made in BizTalk Server 2010 to the TPM model and schema were adopted in
    BizTalk Services. What this means is that the two are actually very similar and
    migration can be accomplished in a couple of ways.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk Services在合作伙伴管理方面采取了与BizTalk相同的方法，并且对BizTalk Server 2010中TPM模型和架构所做的更改也被BizTalk
    Services采用。这意味着这两个系统实际上非常相似，迁移可以通过几种方式完成。
- en: For existing BizTalk Server users, the TPM Data Migration Tool is provided by
    Microsoft. This is included in the same `Tools.zip` download as the map conversion
    tool discussed earlier, and it is capable of migrating the TPM data from either
    BizTalk Server 2010 or 2013.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对于现有的BizTalk Server用户，Microsoft提供了TPM数据迁移工具。这个工具包含在之前讨论的映射转换工具相同的`Tools.zip`下载中，并且能够将TPM数据从BizTalk
    Server 2010或2013迁移过来。
- en: The BizTalk Server management console is shown in the following screenshot.
    Here, you can see two parties and an agreement that we want to migrate to BizTalk
    Services.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的屏幕截图显示了BizTalk Server管理控制台。在这里，您可以看到两个参与方和一个我们希望迁移到BizTalk Services的协议。
- en: '![Trading Partner Management (TPM)](img/7401EN_08_05.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![交易伙伴管理（TPM）](img/7401EN_08_05.jpg)'
- en: The BizTalk Server management console
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk Server管理控制台
- en: 'To launch it, double-click on `TPMMigration.exe` and the application will appear
    as shown in the following screenshot:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动它，双击 `TPMMigration.exe`，应用程序将如以下截图所示出现：
- en: '![Trading Partner Management (TPM)](img/7401EN_08_06.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![交易伙伴管理 (TPM)](img/7401EN_08_06.jpg)'
- en: The TPM Data Migration Tool
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: TPM 数据迁移工具
- en: 'The tool takes the SQL Server machine name for where the BizTalk Server management
    database resides and the ACS connection details for BizTalk Services as the input.
    It then displays the available partners to migrate as shown in the following screenshot:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 工具以 SQL Server 的机器名作为 BizTalk Server 管理数据库的存放位置，以及 BizTalk 服务连接详情作为输入。然后，它将显示如下截图所示的可用合作伙伴以供迁移：
- en: '![Trading Partner Management (TPM)](img/7401EN_08_07.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![交易伙伴管理 (TPM)](img/7401EN_08_07.jpg)'
- en: Selecting partners to migrate
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 选择要迁移的合作伙伴
- en: 'Here, I''ve picked the two partners from the BizTalk Server management console.
    Clicking on **Next** then displays the agreements. I only have one, shown in the
    following screenshot, which is between the two parties, so selecting this and
    clicking on **Next** will start the process of moving the partners and agreements
    to BizTalk Services:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我从 BizTalk Server 管理控制台中选择了两个合作伙伴。点击 **下一步** 然后显示协议。我只有一个，如下截图所示，这是两个当事人之间的协议，因此选择此协议并点击
    **下一步** 将开始将合作伙伴和协议迁移到 BizTalk 服务的过程：
- en: '![Trading Partner Management (TPM)](img/7401EN_08_08.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![交易伙伴管理 (TPM)](img/7401EN_08_08.jpg)'
- en: Selecting agreements
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 选择协议
- en: 'Once the partners and agreements have been created in BizTalk Services, a **Summary**
    page details the work completed, as shown in the following screenshot:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦在 BizTalk 服务中创建了合作伙伴和协议，**摘要** 页面将详细说明已完成的工作，如下截图所示：
- en: '![Trading Partner Management (TPM)](img/7401EN_08_09.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![交易伙伴管理 (TPM)](img/7401EN_08_09.jpg)'
- en: The migration summary
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 迁移摘要
- en: 'Now, looking in the BizTalk Services portal, we can see that the partners and
    agreement have been created, as shown in the following screenshot:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在 BizTalk 服务门户中查看，我们可以看到已经创建了合作伙伴和协议，如下截图所示：
- en: '![Trading Partner Management (TPM)](img/7401EN_08_10.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![交易伙伴管理 (TPM)](img/7401EN_08_10.jpg)'
- en: The BizTalk Services portal
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk 服务门户
- en: The tool should be able to migrate all the parties and agreements you have set
    up in BizTalk Server. The one limitation the tool has is that it won't move the
    certificates that you use to secure the conversations between your organization
    and the trading partners. These need to be migrated manually.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 工具应该能够迁移您在 BizTalk Server 中设置的各方和协议。工具的一个限制是它不会迁移您用于保护您组织与交易伙伴之间对话的证书。这些需要手动迁移。
- en: The TPM Data Migration Tool is useful when moving from BizTalk Server 2010/2013
    to BizTalk Services. However, another option exists if you need to move from a
    different product or an earlier version of BizTalk Server. This option is also
    a useful approach if you want to programmatically create trading partners perhaps,
    from a custom application or via integration with another product. This approach
    uses the TPM API. In fact, the migration tool leverages this API as well to do
    its jobs.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 当从 BizTalk Server 2010/2013 迁移到 BizTalk 服务时，TPM 数据迁移工具非常有用。然而，如果您需要从不同的产品或 BizTalk
    Server 的早期版本迁移，也存在另一种选择。如果您想通过自定义应用程序或与其他产品集成来程序化创建交易伙伴，这种方法也是一个有用的方法。此方法使用 TPM
    API。实际上，迁移工具也利用此 API 来完成其工作。
- en: Previously, the API that TPM used was not documented, and as such, customers
    were not supported if they wished to create trading partners in BizTalk programmatically.
    This is no longer the case. Microsoft has now published the API on MSDN, thus
    allowing customers to leverage it in a supported way.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 此前，TPM 使用的 API 没有文档记录，因此如果客户希望在 BizTalk 中程序化创建交易伙伴，则不会得到支持。现在情况不再是这样。微软现在已在
    MSDN 上发布了该 API，从而允许客户以受支持的方式利用它。
- en: 'The BizTalk Services TPM API is documented at the following location:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk 服务 TPM API 的文档位于以下位置：
- en: '[http://msdn.microsoft.com/en-us/library/windowsazure/dn232369.aspx](http://msdn.microsoft.com/en-us/library/windowsazure/dn232369.aspx)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://msdn.microsoft.com/en-us/library/windowsazure/dn232369.aspx](http://msdn.microsoft.com/en-us/library/windowsazure/dn232369.aspx)'
- en: 'In order to call the TPM API, an OAuth WRAP token is necessary for authentication.
    This token is simply a string consisting of the following pieces of information:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 为了调用 TPM API，需要 OAuth WRAP 令牌进行身份验证。这个令牌只是一个包含以下信息的字符串：
- en: 'User name: `owner`'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户名：`owner`
- en: 'Password: Issuer Key from ACS'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码：来自 ACS 的发行者密钥
- en: 'BizTalk Services endpoint name: `https://<yourservice>.biztalk.windows.net/`'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BizTalk 服务端点名称：`https://<yourservice>.biztalk.windows.net/`
- en: The process of calling the API is made up of two steps. First, POST a WRAP request
    and receive a WRAP token, which is then passed in on subsequent requests. The
    API is REST-based just like the other APIs we looked at in [Chapter 6](ch06.html
    "Chapter 6. API"), *API*. It is harder (although not impossible) to invoke them
    in Fiddler (or the browser) because of the OAuth requirement (as opposed to mutual
    certificate authentication). Therefore, let's look at the code necessary to retrieve
    a list of partners as an example.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 API 的过程由两个步骤组成。首先，POST 一个 WRAP 请求并接收一个 WRAP 令牌，然后将其传递到后续请求中。API 与我们在第 6 章（[Chapter
    6](ch06.html "Chapter 6. API")）中查看的其他 API 一样是基于 REST 的。由于 OAuth 要求（与相互证书认证相对），在
    Fiddler（或浏览器）中调用它们更困难（尽管并非不可能）。因此，让我们以获取合作伙伴列表的代码为例来查看所需的代码。
- en: 'The following code will call Azure with the WRAP request and obtain a token:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将使用 WRAP 请求调用 Azure 并获取令牌：
- en: '[PRE1]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This is quite straightforward. There are four pieces of information required.
    To obtain the ACS details for your BizTalk Services instance, go to the Azure
    portal, click on **BizTalk Services** in the left margin, select your instance,
    and click on **Connection Information**. You will find the namespace, issuer,
    and key here to substitute in the preceding code. The service name is the name
    you gave the BizTalk Services instance when you created it and will be the title
    displayed on the Azure portal dashboard.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这相当简单。需要四条信息。要获取 BizTalk 服务实例的 ACS 详细信息，请转到 Azure 门户，在左侧边栏中单击 **BizTalk Services**，选择您的实例，然后单击
    **连接信息**。您将在这里找到用于替换前面代码的命名空间、发行者和密钥。服务名称是您在创建 BizTalk 服务实例时给出的名称，将在 Azure 门户仪表板上显示为标题。
- en: This information is concatenated and sent to ACS. It validates and returns an
    authentication token—a string that can be used on subsequent calls.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这些信息被连接并发送到 ACS。它验证并返回一个身份验证令牌——一个可以在后续调用中使用的字符串。
- en: 'The following piece of code (which should be placed just inside the preceding
    closing curly brace of the `using` statement) will pass in the token with the
    request and receive a list of partners in the specified BizTalk Services instance:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码（应放置在 `using` 语句前面的最后一个大括号内）将在请求中传递令牌并接收指定 BizTalk 服务实例中的合作伙伴列表：
- en: '[PRE2]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The preceding code performs an HTTP GET request on your BizTalk Services instance
    endpoint, appending the operation (`$PartnerManagement/Partners`) and passing
    the token. The response is an XML document containing all the partners set up
    in the BizTalk Services instance. To try this out, create a console application
    in Visual Studio and paste the code in the `Main` method, replacing the values
    marked in the code with your own service details. The resulting output from the
    partner import performed earlier is shown in the following screenshot:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码在您的 BizTalk 服务实例端点执行 HTTP GET 请求，附加操作（`$PartnerManagement/Partners`）并传递令牌。响应是一个包含
    BizTalk 服务实例中设置的所有合作伙伴的 XML 文档。要尝试此操作，请在 Visual Studio 中创建一个控制台应用程序，并将代码粘贴到 `Main`
    方法中，用您自己的服务详细信息替换代码中标记的值。以下截图显示了之前执行的合作伙伴导入的结果：
- en: '![Trading Partner Management (TPM)](img/7401EN_08_11.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![贸易伙伴管理 (TPM)](img/7401EN_08_11.jpg)'
- en: List of partners
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 合作伙伴列表
- en: There is much more that can be done with the API, such as creating partners
    and updating or deleting them. However, the approach is always the same, so feel
    free to explore on your own and see what you can do!
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 API 可以做很多事情，例如创建合作伙伴、更新或删除它们。然而，方法始终相同，所以请随意探索并看看您能做什么！
- en: EDIFACT support
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: EDIFACT 支持
- en: BizTalk Services first shipped with support for X12 and AS/2\. As of the February
    2014 service update, EDIFACT support is now also provided and will be particularly
    welcome for European customers.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk 服务最初支持 X12 和 AS/2。截至 2014 年 2 月的服务更新，现在也提供了 EDIFACT 支持，这对于欧洲客户来说将特别受欢迎。
- en: Business Rules Engine (BRE)
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 业务规则引擎 (BRE)
- en: Now we come to a few areas that are more problematic. BizTalk Server has provided
    a Business Rules Engine and editor since 2004, and as such, it is used in many
    BizTalk Server solutions. There is no equivalent in BizTalk Services currently.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来到一些更成问题的地方。自 2004 年以来，BizTalk 服务器已经提供了业务规则引擎和编辑器，因此它被用于许多 BizTalk 服务器解决方案中。目前
    BizTalk 服务中没有等效的组件。
- en: Microsoft is planning to provide a rules engine as part of BizTalk Services
    at some point, but there is no timeline for it yet. The intention is to provide
    parity with BizTalk Server and improved tooling, and both of these developments
    will make moving from Server to Services easier when introduced.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 微软计划在某个时候将规则引擎作为 BizTalk 服务的一部分提供，但目前还没有具体的时间表。目的是提供与 BizTalk Server 相同的功能和改进的工具，这两项发展将在推出时使从服务器迁移到服务变得更加容易。
- en: In the meantime, one option is to convert BizTalk BRE rules to code. There are
    a number of solutions available that are able to convert BizTalk rules to Windows
    Workflow rules, and Windows Workflow rules are defined in code. Windows Workflow
    is also a part of the .NET framework, so there is no license cost in using it.
    Therefore, it is possible to run the code somewhere in the BizTalk Services solution,
    for example, in a bridge or transform. Of course, this is trivializing the problem
    slightly as BRE rules can access databases and other resources, so it may involve
    significantly more work than simple conversion. However, it is an option depending
    on what the rules are doing.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，一个选择是将 BizTalk BRE 规则转换为代码。有一些解决方案可以将 BizTalk 规则转换为 Windows Workflow 规则，而
    Windows Workflow 规则是以代码定义的。Windows Workflow 也是 .NET 框架的一部分，因此使用它没有许可费用。因此，可以在
    BizTalk 服务解决方案中的某个地方运行代码，例如在网桥或转换中。当然，这有点简化了问题，因为 BRE 规则可以访问数据库和其他资源，所以可能需要做更多的工作。然而，这是一个根据规则所执行的操作的选择。
- en: Orchestration
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编排
- en: Probably the biggest challenge in moving BizTalk Server solutions to BizTalk
    Services is orchestration. Currently, there is no silver-bullet, automatic, or
    zero-effort way to convert or migrate orchestrations to BizTalk Services. There
    are some options though.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 将 BizTalk Server 解决方案迁移到 BizTalk 服务中最大的挑战可能是编排。目前，还没有银弹般的、自动的或零成本的方法来转换或迁移编排到
    BizTalk 服务。尽管如此，也有一些选择。
- en: Microsoft plans to introduce workflow to BizTalk Services, and this will certainly
    help fill the gap. It means that orchestrations can be recoded to workflows and
    keep a similar architecture.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 微软计划将工作流引入 BizTalk 服务，这无疑将有助于填补这一空白。这意味着编排可以被重新编码为工作流，并保持相似的架构。
- en: First, remember that a bridge is actually a workflow. This means that bridges
    already offer some capabilities that orchestrations may have been used for earlier,
    such as message enrichment and routing (which is a large percentage), and as such,
    it may already be possible to migrate orchestration-based solutions.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，记住网桥实际上是一个工作流。这意味着网桥已经提供了一些编排可能曾经用过的功能，例如消息丰富和路由（占很大比例），因此可能已经可以迁移基于编排的解决方案。
- en: In the intervening period though, an alternative solution may have to be found.
    One solution is to use a workflow hosted in Azure, for example, in a worker role
    cloud service. BizTalk Services could invoke the cloud service by passing a message
    or data, and the service would run the workflow and return the results. This does
    change the architecture somewhat though as typically, the orchestration is in
    control—it may wait for a set interval or for specific responses from other systems
    and typically, an orchestration is used as the driver for a business process.
    It is worth remembering that bridges can be chained, so this style of process
    definition can be mimicked with BizTalk Services, where messages are processed,
    decisions are taken on routing (to more bridges), and so on. However, such a solution
    is likely to become complex and is best avoided.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在过渡期间，可能需要找到另一种解决方案。一种解决方案是使用 Azure 中的工作角色云服务托管的工作流，例如。BizTalk 服务可以通过传递消息或数据来调用云服务，服务将运行工作流并返回结果。但这多少改变了架构，因为通常编排是控制者——它可能等待一个设定的时间间隔或来自其他系统的特定响应，并且通常编排用作业务流程的驱动程序。值得注意的是，网桥可以串联，因此这种流程定义风格可以用
    BizTalk 服务来模仿，其中消息被处理，根据路由（到更多网桥）做出决策，等等。然而，这样的解决方案可能会变得复杂，最好避免。
- en: It is perhaps unfortunate then that an overuse of orchestration in BizTalk Server
    has always been prevalent. Orchestration was seen as the "aha" moment in early
    BizTalk when acronyms such as Business Process Management (BPM) were in vogue.
    It's unfortunate because orchestration has often been used when it is not necessary,
    and a simpler solution could have been created without it. While education over
    time has helped somewhat, there is still a large body of complex orchestration-centric
    BizTalk Server applications. If we face this scenario, migration to BizTalk Services
    today will be challenging.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 也许遗憾的是，在 BizTalk Server 中过度使用编排一直很普遍。编排被视为早期 BizTalk 中的“啊哈”时刻，当时像业务流程管理（BPM）这样的缩写词很流行。这是不幸的，因为编排经常在不必要的时候被使用，而一个没有它的简单解决方案本可以创建。虽然随着时间的推移教育有所帮助，但仍然存在大量以复杂编排为中心的
    BizTalk Server 应用程序。如果我们面临这种场景，今天迁移到 BizTalk 服务将具有挑战性。
- en: When not to move
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 何时不迁移
- en: 'Before closing, its worth pointing out that BizTalk Services is not meant to
    replace BizTalk Server. While there are certainly many similarities in the capabilities
    offered (and more on the way), there are different reasons for using each. Here
    are some of the reasons you should continue using BizTalk Server on-premises:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在关闭之前，值得指出的是，BizTalk 服务并不是用来取代 BizTalk Server 的。虽然这两个产品在提供的功能上确实有许多相似之处（并且还有更多即将到来），但使用每个产品的理由是不同的。以下是一些你应该继续在本地使用
    BizTalk Server 的原因：
- en: All of your connectivity points (applications, services, and so on) are on-premises
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有的连接点（应用程序、服务等）都在本地
- en: A large investment in BizTalk Server-specific solutions—as this would be likely
    to require a complete rewrite, therefore, outweighing some of the benefits
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 BizTalk Server 专用解决方案上的大量投资——因为这可能需要完全重写，因此，超过了某些好处
- en: Usage of capabilities that are not in BizTalk Services or will not fit the cloud
    model, for example, File and MQ Series adapters
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用不在 BizTalk 服务中或不适合云模型的功能，例如，文件和 MQ 系列适配器
- en: Cloud is not the right solution because for example, security and/or regulatory
    restrictions, data classifications, or local laws may preclude sending such data
    over the public Internet or prevent storage of data off-premises
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云不是正确的解决方案，因为例如，安全性和/或监管限制、数据分类或当地法律可能阻止通过公共互联网发送此类数据或阻止在本地以外存储数据
- en: The future
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 未来
- en: 'Microsoft has committed to continuing investments in BizTalk Server and a strong
    roadmap for BizTalk Services. The following are the key announced developments
    coming for both products:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 微软承诺将继续投资 BizTalk Server 并为 BizTalk 服务制定一个强大的路线图。以下是对两个产品即将到来的关键宣布发展：
- en: BizTalk Server will ship a major release every alternate year
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BizTalk Server 将每隔一年发布一个主要版本
- en: A platform update release of BizTalk Server will ship every other year starting
    with BizTalk Server 2013 R2 this year
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从今年的 BizTalk Server 2013 R2 开始，每两年将发布一次 BizTalk Server 的平台更新版本
- en: 'The following additions are planned for BizTalk Services with a target of a
    quarterly release cadence:'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计划为 BizTalk 服务添加以下功能，目标是每季度发布一次：
- en: Workflow integration
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作流集成
- en: Rules engine integration
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 规则引擎集成
- en: Business Activity Monitoring
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 业务活动监控
- en: Adapter extensibility/SDK
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适配器可扩展性/SDK
- en: Custom code improvements in bridges
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 桥接中的自定义代码改进
- en: Integration with Windows Azure Active Directory (WAAD)
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 Windows Azure Active Directory (WAAD) 集成
- en: Business Process Modelling Notation (BPMN) support
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持业务流程建模符号（BPMN）
- en: Windows Azure store for third-party components
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Azure 存储第三方组件
- en: Scheduled backups
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定期备份
- en: Summary
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we've looked at strategies and approaches for moving from BizTalk
    Server to BizTalk Services and some of the features that will be added to BizTalk
    Services that will make this easier. We tried to cover all the main building blocks
    of the BizTalk Server architecture and their equivalents (or alternatives) in
    BizTalk Services. As you've seen, while there is a significant overlap of functionality,
    it will take time for the BizTalk Services feature set to mature to the same level.
    The future for BizTalk Services is bright, and a fundamental tenet of Microsoft's
    cloud-first vision is to deliver frequent updates and enhancements in a way that
    simply isn't possible with shrink-wrapped on-premises products. Therefore, one
    can expect Microsoft to become even more customer focused and be able to action
    feedback and feature requests quicker than previously possible, all of which will
    enable Microsoft to help you move your existing solutions to the cloud.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了从 BizTalk Server 迁移到 BizTalk Services 的策略和方法，以及 BizTalk Services 将添加的一些功能，这些功能将使迁移过程更加容易。我们试图涵盖
    BizTalk Server 架构的所有主要构建块及其在 BizTalk Services 中的等效项（或替代方案）。正如你所看到的，尽管功能上有显著的重叠，但
    BizTalk Services 的功能集要达到相同水平还需要时间。BizTalk Services 的未来光明，微软“云优先”愿景的基本原则是以一种在本地产品中不可能实现的方式提供频繁的更新和增强。因此，可以预期微软将更加关注客户，能够比以前更快地采取反馈和功能请求，所有这些都将使微软能够帮助你将现有解决方案迁移到云端。
