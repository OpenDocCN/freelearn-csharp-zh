["```cs\ncode --install-extension ms-dotnettools.csdevkit \n```", "```cs\ndotnet --list-sdks\ndotnet --list-runtimes\ndotnet --info \n```", "```cs\n    // See https://aka.ms/new-console-template for more information\n    Console.WriteLine(\"Hello, World!\"); \n    ```", "```cs\nusing System;\nnamespace HelloCS\n{\n  class Program\n  {\n    static void Main(string[] args)\n    {\n      Console.WriteLine(\"Hello, World!\");\n    }\n  }\n} \n```", "```cs\n    dotnet new console --use-program-main \n    ```", "```cs\n    // <autogenerated />\n    global using global::System;\n    global using global::System.Collections.Generic;\n    global using global::System.IO;\n    global using global::System.Linq;\n    global using global::System.Net.Http;\n    global using global::System.Threading;\n    global using global::System.Threading.Tasks; \n    ```", "```cs\n    throw new Exception(); \n    ```", "```cs\n    Hello, C#!\n    Unhandled exception. System.Exception: Exception of type 'System.Exception' was thrown.\n       at Program.<Main>$(String[] args) in C:\\cs13net9\\Chapter01\\HelloCS\\Program.cs:line 3 \n    ```", "```cs\n    string name = typeof(Program).Namespace ?? \"<null>\";\n    Console.WriteLine($\"Namespace: {name}\"); \n    ```", "```cs\n    Namespace: <null> \n    ```", "```cs\n    namespace AboutMyEnvironment\n    {\n      internal class Program\n      {\n        static void Main(string[] args)\n        {\n          Console.WriteLine(\"Hello, World!\");\n        }\n      }\n    } \n    ```", "```cs\n    Console.WriteLine(Environment.CurrentDirectory);\n    Console.WriteLine(Environment.OSVersion.VersionString);\n    Console.WriteLine(\"Namespace: {0}\",\n      typeof(Program).Namespace ?? \"<null>\"); \n    ```", "```cs\n    C:\\cs13net9\\Chapter01\\AboutMyEnvironment\\bin\\Debug\\net9.0\n    Microsoft Windows NT 10.0.26100.0\n    Namespace: AboutMyEnvironment \n    ```", "```cs\n    dotnet new sln --name Chapter01 \n    ```", "```cs\n    The template \"Solution File\" was created successfully. \n    ```", "```cs\n    dotnet new console --output HelloCS \n    ```", "```cs\n    dotnet sln add HelloCS \n    ```", "```cs\n    Project `HelloCS\\HelloCS.csproj` added to the solution. \n    ```", "```cs\n    code . \n    ```", "```cs\n\"csharp.experimental.dotnetNewIntegration\": true \n```", "```cs\n    string name = typeof(Program).Namespace ?? \"<null>\";\n    Console.WriteLine($\"Namespace: {name}\");\n    throw new Exception(); \n    ```", "```cs\n    Hello, C#!\n    Namespace: <null>\n    Unhandled exception. System.Exception: Exception of type 'System.Exception' was thrown.\n       at Program.<Main>$(String[] args) in C:\\cs13net9\\Chapter01-vscode\\HelloCS\\Program.cs:line 7 \n    ```", "```cs\n    cd .. \n    ```", "```cs\n    dotnet new console -o AboutMyEnvironment --use-program-main \n    ```", "```cs\n    dotnet sln add AboutMyEnvironment \n    ```", "```cs\n    Project `AboutMyEnvironment\\AboutMyEnvironment.csproj` added to the solution. \n    ```", "```cs\n    Console.WriteLine(Environment.CurrentDirectory);\n    Console.WriteLine(Environment.OSVersion.VersionString);\n    Console.WriteLine(\"Namespace: {0}\",\n      typeof(Program).Namespace ?? \"<null>\"); \n    ```", "```cs\n    C:\\cs13net9\\Chapter01-vscode\\AboutMyEnvironment\n    Microsoft Windows NT 10.0.26100.0\n    Namespace: AboutMyEnvironment \n    ```", "```cs\nUnix 13.5.2 \n```", "```cs\n    git clone https://github.com/markjprice/cs13net9.git \n    ```", "```cs\ndotnet help <command> \n```", "```cs\ndotnet <command> -?|-h|--help \n```", "```cs\n    dotnet help build \n    ```", "```cs\n    dotnet build -? \n    ```", "```cs\n    Description:\n      .NET Builder\n    Usage:\n      dotnet build [<PROJECT | SOLUTION>...] [options]\n    Arguments:\n      <PROJECT | SOLUTION>  The project or solution file to operate on. If a file is not specified, the command will search the current directory for one.\n    Options:\n      --ucr, --use-current-runtime         Use current runtime as the target runtime.\n      -f, --framework <FRAMEWORK>          The target framework to build for. The target framework must also be specified in the project file.\n    ...\n      -?, -h, --help                       Show command line help. \n    ```", "```cs\n    int z; \n    ```", "```cs\n    #region Assembly System.Runtime, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\n    // C:\\Program Files\\dotnet\\packs\\Microsoft.NETCore.App.Ref\\9.0.0\\ref\\net9.0\\System.Runtime.dll\n    #endregion\n    #nullable enable\n    using System.Diagnostics.CodeAnalysis;\n    using System.Globalization;\n    using System.Numerics;\n    using System.Runtime.CompilerServices;\n    namespace System\n    {\n      public readonly struct Int32 : IComparable,\n        IComparable<Int32>, IConvertible, ...\n      {\n        public const Int32 MaxValue = 2147483647;\n        public const Int32 MinValue = -2147483648;\n        ...\n      }\n    } \n    ```", "```cs\n    public static Int32 Parse(string s) \n    ```", "```cs\nConsole.WriteLine(format: \"Value is {0}.\", arg0: 19.8); \n```", "```cs\n    garbage collection site:stackoverflow.com +C# -Java \n    ```", "```cs\n    ```", "```cs \n    ```", "```cs\n    // only return true if there is only 1 '@' character\n    // and it is neither the first nor the last character\n    int index = valueAsString.IndexOf('@');\n    return\n        index > 0 &&\n        index != valueAsString.Length - 1 &&\n        index == valueAsString.LastIndexOf('@'); \n    ```", "```cs\nhttps://devblogs.microsoft.com/dotnet/dotnet-docs-link-to-source-code/.\n```", "```cs\nwrite a c# function to validate an email address \n```", "```cs\nbool isValid = EmailValidator.IsValidEmail(\"test@example.com\");\nConsole.WriteLine(isValid ? \"Valid\" : \"Invalid\"); \n```"]