- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As a consultant, I worked with many teams in multiple organizations. I’ve seen
    teams doing TDD and I’ve seen teams doing unit testing without TDD. I’ve also
    seen teams that thought they were doing unit testing but were doing integration
    testing and I’ve seen teams that are doing none! As an ordinary human being, I
    started forming a belief based on empirical evidence that TDD teams are the most
    successful, but this is not because they are using TDD! TDD results from having
    passion.
  prefs: []
  type: TYPE_NORMAL
- en: '*TDD is unit testing plus passion*. Unit testing in some teams is imposed,
    therefore, the developers have to do it, but TDD is rarely imposed and it is up
    to the developers to enforce it on themselves. Needless to say, passionate developers
    produce quality projects and quality projects have more potential to succeed.'
  prefs: []
  type: TYPE_NORMAL
- en: TDD is usually combined with some or all aspects of **domain-driven design**
    (**DDD**) architecture. So, I made sure I covered both TDD and DDD combined to
    be able to give realistic examples. I also wanted to reflect today’s market that
    is divided between two database categories, relational and document DBs, so I
    took the liberty to include an example chapter for each and show the differences
    in unit-testing implementations with the objective of keeping the book pragmatic.
  prefs: []
  type: TYPE_NORMAL
- en: Don’t be tricked by the book size, as the diagrams and the code snippets do
    inflate the book. I strived to stay away from old and impractical theories to
    shorten the book and stick to the point.
  prefs: []
  type: TYPE_NORMAL
- en: TDD and unit testing are in most modern job specifications, a requirement for
    interview test projects, and the subject of hot interview questions. If you wanted
    to know more about these topics and become a TDD developer, then you came to the
    right place.
  prefs: []
  type: TYPE_NORMAL
- en: There are many other good books on TDD and they are aimed at .NET developers
    as well, so *why this book?* In this book, I show real practical implementations
    by going to the DDD world, relational DBs, and document DBs. I demonstrate the
    decision tree of the mindset that practitioners use when doing TDD. I show the
    relationship between SOLID and TDD and I introduce a set of memorable best practices
    known as the FIRSTHAND guidelines of TDD.
  prefs: []
  type: TYPE_NORMAL
- en: My intention for writing this book is to have you as a confident TDD practitioner,
    or at least a unit-testing practitioner, and I hope I was able to deliver my intention.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Test-driven development is the mainstream way of designing, documenting, and
    testing your application from day one. As a developer looking to climb the technical
    ladder to a more senior position, TDD and its related topics of unit testing,
    test doubles, and dependency injection are a must-learn.
  prefs: []
  type: TYPE_NORMAL
- en: This book is for mid- to senior-level .NET developers who are looking to utilize
    the potential of TDD to develop high-quality software. Basic knowledge of OOP
    and C# programming concepts is assumed, but no knowledge of TDD or unit testing
    is expected. As the book provides in-depth coverage of all the concepts of TDD
    and unit testing, and acts as an excellent guide for developers who want to build
    a TDD-based application from scratch or developers planning to introduce unit
    testing into their organization.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The book covers TDD and its .NET ecosystem of IDEs and libraries and goes through
    setting up the environment. The book starts by covering the topics that form the
    prerequisites for TDD, which are dependency injection, unit testing, and test
    doubles. Then, after covering TDD and its best practices, the book dives into
    building an application from scratch using domain-driven design as an architecture.
  prefs: []
  type: TYPE_NORMAL
- en: The book also covers the basics of building a continuous integration pipeline,
    dealing with legacy code that wasn’t written with testability in mind, and finishing
    with ideas for rolling out TDD into your organization.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B18370_01.xhtml#_idTextAnchor014), *Writing Your First TDD Implementation*,
    doesn’t have a long introduction or theory but rather dives directly into IDE
    selection and writing your first TDD implementation to get a taste of flavor of
    the content of the book.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B18370_02.xhtml#_idTextAnchor037), *Understanding Dependency
    Injection by Example*, revises advanced OOP principles needed to understand the
    concept of dependency injection and provides multiple examples.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B18370_03.xhtml#_idTextAnchor066), *Getting Started with Unit
    Testing*, offers a simple introduction to xUnit and unit-testing basics.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B18370_04.xhtml#_idTextAnchor097), *Real Unit Testing with Test
    Doubles*, goes through stubbing, mocking, and NSubstitute, and then discusses
    more testing categories.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B18370_05.xhtml#_idTextAnchor114), *Test-Driven Development Explained*,
    demonstrates how to write unit testing but in TDD style, and discusses the pros
    and cons.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B18370_06.xhtml#_idTextAnchor140), *The FIRSTHAND Guidelines
    of TDD*, details the best practices of unit testing and TDD.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B18370_07.xhtml#_idTextAnchor183), *A Pragmatic View of Domain-Driven
    Design*, introduces DDD, services, and repositories.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B18370_08_RN.xhtml#_idTextAnchor209), *Designing an Appointment
    Booking App*, outlines the specification for a real-life app to be implemented
    later with a DDD architecture and the TDD style.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B18370_09.xhtml#_idTextAnchor226), *Building an Appointment Booking
    App with Entity Framework and Relational DB*, demonstrates an example of a TDD
    application using a relational DB backend.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B18370_10.xhtml#_idTextAnchor245), *Building an App with Repositories
    and Document DB*, demonstrates an example of a TDD application using a document
    DB and the repository pattern.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B18370_11.xhtml#_idTextAnchor265), *Implementing Continuous
    Integration with GitHub Actions*, shows how to use GitHub Actions to build a CI
    pipeline for the application in [*Chapter 10*](B18370_10.xhtml#_idTextAnchor245).'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B18370_12.xhtml#_idTextAnchor279), *Dealing with Brownfield
    Projects*, outlines the thinking process when considering TDD and unit testing
    for legacy projects.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B18370_13_RN.xhtml#_idTextAnchor297), *The Intricacies of Rolling
    Out TDD*, explains the train of thought when getting your organization to adopt
    TDD.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Appendix 1*](B18370_14.xhtml#_idTextAnchor315), *Commonly Used Libraries
    with Unit Tests*, shows some quick examples of MSTest, NUnit, Moq, Fluent Assertions,
    and Auto Fixture.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Appendix 2*](B18370_15.xhtml#_idTextAnchor326), *Advanced Mocking Scenarios*,
    demonstrates a more complex mocking scenario with NSubstitute.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book assumes you are familiar with C# syntax with at least one year’s experience
    working with Visual Studio or a similar IDE environment. While the advanced concepts
    of OOP principles will be revised in this book, the book assumes you are familiar
    with the basics.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Software covered in the book** | **Operating system requirements** |'
  prefs: []
  type: TYPE_TB
- en: '| Visual Studio 2022 | Windows or macOS |'
  prefs: []
  type: TYPE_TB
- en: '| Fine Code Coverage | Windows |'
  prefs: []
  type: TYPE_TB
- en: '| SQL Server | Windows, macOS (Docker), or Linux |'
  prefs: []
  type: TYPE_TB
- en: '| Cosmos DB | Windows, macOS (Docker), or Linux (Docker) |'
  prefs: []
  type: TYPE_TB
- en: '| **Libraries and frameworks** | **Operating system requirements** |'
  prefs: []
  type: TYPE_TB
- en: '| .NET Core 6, C# 10 | Windows, macOS, or Linux |'
  prefs: []
  type: TYPE_TB
- en: '| xUnit | Windows, macOS, or Linux |'
  prefs: []
  type: TYPE_TB
- en: '| NSubstitute | Windows, macOS, or Linux |'
  prefs: []
  type: TYPE_TB
- en: '| Entity Framework | Windows, macOS, or Linux |'
  prefs: []
  type: TYPE_TB
- en: To get the most out of the book, you need to have a C# IDE. This book uses Visual
    Studio 2022 Community Edition and presents alternatives at the beginning of [*Chapter
    1*](B18370_01.xhtml#_idTextAnchor014).
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Pragmatic-Test-Driven-Development-in-C-Sharp-and-.NET](https://github.com/PacktPublishing/Pragmatic-Test-Driven-Development-in-C-Sharp-and-.NET).
    If there’s an update to the code, it will be updated in the GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots and diagrams
    used in this book. You can download it here: [https://packt.link/OzRlM](https://packt.link/OzRlM).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “The previous code fails this rule, as running `UnitTest2`
    before `UnitTest1` will fail the test.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For instance, words in menus or dialog boxes appear in **bold**. Here is an example:
    “After installing the local emulator, you need to grab the connection string,
    which you can do by browsing to [https://localhost:8081/_explorer/index.xhtml](https://localhost:8081/_explorer/index.xhtml)
    and copying the connection string from the **Primary Connection String** field.”'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](https://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Share Your Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve read *Pragmatic Test-Driven Development in C# and .NET*, we’d love
    to hear your thoughts! Please [click here to go straight to the Amazon review
    page](https://packt.link/r/1803230193) for this book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
- en: 'Part 1: Getting Started and the Basics of TDD'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this part, we will gradually introduce all the concepts that make up test-driven
    development – starting with dependency injection, going through test doubles,
    and ending with the TDD guidelines and best practices.
  prefs: []
  type: TYPE_NORMAL
- en: 'By the end of this part, you will have the necessary knowledge to contribute
    to an application using TDD. The following chapters are included in this part:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B18370_01.xhtml#_idTextAnchor014), *Writing Your First TDD Implementation*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B18370_02.xhtml#_idTextAnchor037), *Understanding Dependency
    Injection by Example*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B18370_03.xhtml#_idTextAnchor066), *Getting Started with Unit
    Testing*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B18370_04.xhtml#_idTextAnchor097), *Real Unit Testing with Test
    Doubles*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B18370_05.xhtml#_idTextAnchor114), *Test-Driven Development Explained*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B18370_06.xhtml#_idTextAnchor140), *The FIRSTHAND Guidelines
    of TDD*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
