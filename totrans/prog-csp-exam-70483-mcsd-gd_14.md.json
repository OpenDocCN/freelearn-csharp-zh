["```cs\nDriveInfo[] allDrives = DriveInfo.GetDrives();\nforeach (DriveInfo d in allDrives)\n{\n     Console.WriteLine(\"Drive Name\" + d.Name);\n     Console.WriteLine(\" Drive type \" + d.DriveType);\n     if (d.IsReady == true)\n     {\n         Console.WriteLine(\"Available space \", d.AvailableFreeSpace);\n         Console.WriteLine(\"Total size in bytes \", d.TotalSize);\n     }\n}\nConsole.ReadLine();\n```", "```cs\nDirectoryInfo directoryInfo = new DirectoryInfo(\"C:\\\\UCN Code Base\\\\Programming-in-C-Exam-70-483-MCSD-Guide\\\\Book70483Samples\");\nforeach (DirectoryInfo f in directoryInfo.GetDirectories())\n{\n     Console.WriteLine(\"Directory Name is\" + f.Name);\n     Console.WriteLine(\"Directory created time is \" + f.CreationTime);\n     Console.WriteLine(\"Directory last modified time is \" + f.LastAccessTime);\n}\n```", "```cs\nDirectoryInfo directoryInfoExists = new DirectoryInfo(\"C:\\\\UCN Code Base\\\\Programming-in-C-Exam-70-483-MCSD-Guide\\\\Book70483Samples\\\\Chapter 20\");\nif (directoryInfoExists.Exists)\n{\n     Console.WriteLine(\"It exists\");\n}\nelse\n{\n     Directory.CreateDirectory(\"Does not exist\");\n}\n```", "```cs\nDirectory.CreateDirectory(\"C:\\\\UCN Code Base\\\\Programming-in-C-Exam-70-483-MCSD-Guide\\\\Book70483Samples\\\\Chapter 20\"); \n\n```", "```cs\nDirectoryInfo subDirectory = parentDirectory.CreateSubdirectory(\"NameChildDirectory\");\n```", "```cs\nDirectoryInfo chapter20 = new DirectoryInfo(\"C:\\\\UCN Code Base\\\\Programming-in-C-Exam-70-483-MCSD-Guide\\\\Book70483Samples\\\\Chapter 20\");\nforeach (FileInfo f in chapter20.GetFiles())\n{\n     Console.WriteLine(\"File Name is \" + f.FullName);\n     Console.WriteLine(\"Directory created time is \" + f.CreationTime);\n     Console.WriteLine(\"Directory last modified time is \" + f.LastAccessTime);\n}\n```", "```cs\nstring file = \"C:\\\\UCN Code Base\\\\Programming-in-C-Exam-70-483-MCSD-Guide\\\\Book70483Samples\\\\Chapter 20\\\\IO Operations.txt\";\nif(File.Exists(file))\n{\n     Console.WriteLine(\"File Exists in the mentioned path\");\n}\nelse\n{\n     Console.WriteLine(\"File does not exists in the mentioned path\");\n}\n```", "```cs\nstring sourceFileLocation = \"C:\\\\UCN Code Base\\\\Programming-in-C-Exam-70-483-MCSD-Guide\\\\Book70483Samples\\\\Chapter 20\\\\IO Operations.txt\";\n string targetFileLocation = \"C:\\\\UCN Code Base\\\\Programming-in-C-Exam-70-483-MCSD-Guide\\\\Book70483Samples\\\\Chapter 21\\\\New File.txt\";\nif (File.Exists(sourceFileLocation))\n{\n     File.Move(sourceFileLocation, targetFileLocation); \n}\nelse\n{\n     Console.WriteLine(\"File does not exists in the mentioned path\");\n}\n```", "```cs\nif (File.Exists(targetFileLocation))\n{\n     File.Copy(targetFileLocation, sourceFileLocation);\n}\nelse\n{\n     Console.WriteLine(\"File does not exists in the mentioned path\");\n}\n```", "```cs\nFile.Delete(sourceFileLocation);\n```", "```cs\nstring sourceFileLocation = @\"C:\\UCN Code Base\\Programming-in-C-Exam-70-483-MCSD-Guide\\Book70483Samples\\Chapter 20\";\nstring fileName = @\"IO Operations.txt\";\nstring properFilePath = Path.Combine(sourceFileLocation, fileName);\nConsole.WriteLine(Path.GetDirectoryName(properFilePath));\nConsole.WriteLine(Path.GetExtension(properFilePath));\nConsole.WriteLine(Path.GetFileName(properFilePath));\nConsole.WriteLine(Path.GetPathRoot(properFilePath));\n```", "```cs\nstring sourceFileLocation = @\"C:\\UCN Code Base\\Programming-in-C-Exam-70-483-MCSD-Guide\\Book70483Samples\\Chapter 20\\Sample.txt\";\nusing (FileStream fileStream = File.Create(sourceFileLocation))\n{\n    string myValue = \"MyValue\";\n    byte[] data = Encoding.UTF8.GetBytes(myValue);\n    fileStream.Write(data, 0, data.Length);\n}\n```", "```cs\nstring sourceFileLocation = @\"C:\\UCN Code Base\\Programming-in-C-Exam-70-483-MCSD-Guide\\Book70483Samples\\Chapter 20\\Sample.txt\";\nusing (StreamWriter streamWriter = File.CreateText(sourceFileLocation))\n{\n    string myValue = \"MyValue\";\n    streamWriter.Write(myValue);\n} \n```", "```cs\nprivate static string ReadFileText()\n{\n    string path =@\"C:\\UCN Code Base\\Programming-in-C-Exam-70-483-MCSD-          Guide\\Book70483Samples\\Chapter 20\\Sample.txt\";\n     if (File.Exists(path))\n     {\n         try\n         {\n             return File.ReadAllText(path);\n         }\n         catch (DirectoryNotFoundException) \n         {\n             return string.Empty; \n         }\n         catch (FileNotFoundException) \n         {\n             return string.Empty; \n         }\n     }\n     return string.Empty;\n}\n\n```", "```cs\nWebRequest request = null;\nHttpWebResponse response = null;\nStream dataStream = null;\nStreamReader reader = null;\ntry\n{\n    request = WebRequest.Create(\"http://www.google.com/search?q=c#\");\n    request.Method = \"GET\";\n    response = (HttpWebResponse)request.GetResponse();\n    dataStream = response.GetResponseStream();\n    reader = new StreamReader(dataStream);\n    Console.WriteLine(reader.ReadToEnd());\n}\ncatch(Exception ex)\n{\n    Console.WriteLine(ex.ToString());\n}\nfinally\n{\n    reader.Close();\n    dataStream.Close();\n    response.Close();\n}\n```", "```cs\nasync Task<int> ExecuteOperationAsync()\n{\n    using (HttpClient client = new HttpClient())\n    {\n           Task<string> getStringTask = client.GetStringAsync(\"http://google.com\");\n           ExecuteParallelWork();\n           string urlContents = await getStringTask;\n           return urlContents.Length;\n    } \n}\n```", "```cs\npublic async Task CreateFile()\n{\n   string path =@\"C:\\UCN Code Base\\Programming-in-C-Exam-70-483-MCSD-              Guide\\Book70483Samples\\Chapter 20\\New.txt\";\n   using (FileStream stream = new FileStream(path,FileMode.Create,\n   FileAccess.Write, FileShare.None, 4096, true))\n   {\n       byte[] data = new byte[100000];\n       new Random().NextBytes(data);\n       await stream.WriteAsync(data, 0, data.Length);\n   }\n}\n```", "```cs\npublic async Task ExecuteMultipleRequestsInParallel()\n{\n    HttpClient client = new HttpClient();\n    Task google = client.GetStringAsync(\"http://www.google.com\");\n    Task bing = client.GetStringAsync(\"http://www.bing.com\");\n    Task yahoo = client.GetStringAsync(\"http://yahoo.com/\");\n    await Task.WhenAll(google, bing, yahoo);\n}\n```"]