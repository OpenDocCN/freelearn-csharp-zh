["```cs\nusing UnityEngine;\nusing System.Collections.Generic;\n\nnamespace Chapter.Adapter\n{\n    public class InventorySystem\n    {\n        public void AddItem(InventoryItem item)\n        {\n            Debug.Log(\n                \"Adding item to the cloud\");\n        }\n\n        public void RemoveItem(InventoryItem item)\n        {\n            Debug.Log(\n                \"Removing item from the cloud\");\n        }\n\n        public List<InventoryItem> GetInventory()\n        {\n            Debug.Log(\n                \"Returning an inventory list stored in the cloud\");\n\n            return new List<InventoryItem>();\n        }\n    }\n}\n```", "```cs\nusing UnityEngine;\nusing System.Collections.Generic;\n\nnamespace Chapter.Adapter {\n    public class InventorySystemAdapter:\n        InventorySystem, IInventorySystem {\n\n        private List<InventoryItem> _cloudInventory;\n\n        public void SyncInventories() {\n            var _cloudInventory = GetInventory();\n\n            Debug.Log(\n                \"Synchronizing local drive and cloud inventories\");\n        }\n\n        public void AddItem(\n            InventoryItem item, SaveLocation location) {\n\n            if (location == SaveLocation.Cloud)\n                AddItem(item);\n\n            if (location == SaveLocation.Local)\n                Debug.Log(\"Adding item to local drive\");\n\n            if (location == SaveLocation.Both)\n                Debug.Log(\n                    \"Adding item to local drive and on the cloud\");\n        }\n\n        public void RemoveItem(\n            InventoryItem item, SaveLocation location) {\n\n            Debug.Log(\n                \"Remove item from local/cloud/both\");\n        }\n\n        public List<InventoryItem> \n            GetInventory(SaveLocation location) {\n\n            Debug.Log(\n                \"Get inventory from local/cloud/both\");\n\n            return new List<InventoryItem>();\n        }\n    }\n}\n```", "```cs\nusing System.Collections.Generic;\n\nnamespace Chapter.Adapter\n{\n    public interface IInventorySystem\n    {\n        void SyncInventories();\n\n        void AddItem(\n            InventoryItem item, SaveLocation location);\n\n        void RemoveItem(\n            InventoryItem item, SaveLocation location);\n\n        List<InventoryItem> GetInventory(SaveLocation location);\n    }\n}\n```", "```cs\nnamespace Chapter.Adapter\n{\n    public enum SaveLocation\n    {\n        Disk,\n        Cloud,\n        Both\n    }\n}\n```", "```cs\nusing UnityEngine;\n\nnamespace Chapter.Adapter\n{\n    [CreateAssetMenu(\n        fileName = \"New Item\", menuName = \"Inventory\")]\n    public class InventoryItem : ScriptableObject\n    {\n        // Placeholder class\n    }\n}\n```", "```cs\nusing UnityEngine;\n\nnamespace Chapter.Adapter\n{\n    public class ClientAdapter : MonoBehaviour\n    {\n        public InventoryItem item;\n\n        private InventorySystem _inventorySystem;\n        private IInventorySystem _inventorySystemAdapter;\n\n        void Start()\n        {\n            _inventorySystem = new InventorySystem();\n            _inventorySystemAdapter = new InventorySystemAdapter();\n        }\n\n        void OnGUI()\n        {\n            if (GUILayout.Button(\"Add item (no adapter)\"))\n                _inventorySystem.AddItem(item);\n\n            if (GUILayout.Button(\"Add item (with adapter)\"))\n                _inventorySystemAdapter.\n                    AddItem(item, SaveLocation.Both);\n\n        }\n    }\n}\n```"]