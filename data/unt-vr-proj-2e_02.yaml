- en: Content, Objects, and Scale
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内容、对象和比例
- en: 'You may remember building a diorama project for school from a shoebox as a
    child. We''re going to make one today, using Unity. Let''s assemble our first
    scene, which is composed of simple geometric objects. Along the way, we''ll talk
    a lot about **world scale**. Then we''ll explore various 3D content creation tools
    that developers and artists use for assets imported into Unity. In this chapter,
    we will discuss the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还记得小时候用鞋盒制作学校项目模型。今天，我们将使用Unity来完成这个项目。让我们组装我们的第一个场景，它由简单的几何物体组成。在这个过程中，我们会大量讨论**世界尺度**。然后我们将探索开发者和艺术家用于将资产导入Unity的各种3D内容创建工具。在本章中，我们将讨论以下主题：
- en: A short introduction to the Unity 3D game engine
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity 3D游戏引擎的简要介绍
- en: Creating a simple diorama in Unity
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Unity中创建一个简单的模型
- en: Making some measuring tools, including a unit cube and a grid projector
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制作一些测量工具，包括单位立方体和网格投影仪
- en: Using **Blender** to create a cube with texture maps and importing it into Unity
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**Blender**创建一个带有纹理贴图的立方体并将其导入Unity
- en: Using Google Tilt Brush to create a 3D sketch and importing it into Unity via
    Google Poly
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Google Tilt Brush创建3D草图并通过Google Poly将其导入Unity
- en: Using the experimental Unity EditorXR tools for editing scenes directly in VR
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用实验性的Unity EditorXR工具直接在VR中编辑场景
- en: Getting started with Unity
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用Unity
- en: If you don't have the Unity 3D game engine application installed on your PC
    yet, do that now! The full-featured **Personal Edition** is free and runs on both
    Windows and Mac. To get Unity, go to [https://store.unity.com/](https://store.unity.com/),
    select the version that you want, click on Download Installer, and continue following
    the instructions. This book assumes you have version 2017.2 or later of Unity.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有在PC上安装Unity 3D游戏引擎应用程序，现在就安装它！功能齐全的**个人版**是免费的，并且可以在Windows和Mac上运行。要获取Unity，请访问[https://store.unity.com/](https://store.unity.com/)，选择你想要的版本，点击“下载安装程序”，然后继续按照说明操作。本书假设你拥有Unity
    2017.2或更高版本。
- en: For you beginners out there, we're going to take this first section nice and
    slow, with more hand-holding than what you'll get later on in the book. Furthermore,
    even if you already know Unity and have developed your own games, it may be worthwhile
    to revisit the fundamental concepts, since the rules are sometimes different when
    designing for virtual reality.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些初学者，我们将以缓慢而细致的方式处理这个第一部分，比书中后面的部分提供更多的指导。此外，即使你已经熟悉Unity并开发了你的游戏，回顾基本概念也可能是有价值的，因为在为虚拟现实设计时，规则有时是不同的。
- en: Creating a new Unity project
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个新的Unity项目
- en: Let's create a new Unity project named `VR_is_Awesome`, or whatever you'd like.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个名为`VR_is_Awesome`的新Unity项目，或者你可以取你喜欢的任何名字。
- en: 'To create a new Unity project, launch Unity from your operating system and
    the Open dialog box will appear. From this dialog box, select New, which opens
    a New Project dialog box, as shown in the following screenshot:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个新的Unity项目，从你的操作系统启动Unity，将出现打开对话框。从这个对话框中，选择“新建”，这将打开一个“新建项目”对话框，如下面的截图所示：
- en: '![](img/6b51fb65-2ad0-48c2-bf9a-a8557570f44c.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6b51fb65-2ad0-48c2-bf9a-a8557570f44c.png)'
- en: Fill in the name of your project and verify that the folder location is what
    you want. Ensure that 3D is selected (on the right). There is no need to add any
    extra asset packages at this time, as we'll bring them in later if we need them.
    Click on Create project.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 填写你的项目名称，并确认文件夹位置是你想要的。确保3D被选中（在右侧）。目前不需要添加任何额外的资产包，因为我们稍后如果需要会引入它们。点击“创建项目”。
- en: Unity 2018 introduced the Unity Hub tool for managing multiple Unity versions
    and projects. If you are using Unity Hub, you can choose the "3D" template, or
    one of the newer VR render pipeline templates for your project.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 2018引入了Unity Hub工具，用于管理多个Unity版本和项目。如果你使用Unity Hub，你可以为你的项目选择“3D”模板，或者选择较新的VR渲染管道模板。
- en: The Unity editor
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Unity编辑器
- en: 'Your new project opens in the Unity editor, as shown in the following screenshot
    (where I arranged the window panels in a custom layout to facilitate this discussion
    and labeled the visible panels):'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你的新项目将在Unity编辑器中打开，如下面的截图所示（我在这里自定义了窗口面板布局以方便讨论，并标记了可见的面板）：
- en: '![](img/7704e575-441b-4497-905f-b8a7677fa918.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7704e575-441b-4497-905f-b8a7677fa918.png)'
- en: 'The Unity editor consists of a number of non-overlapping windows, or *panels*,
    which may be subdivided into *panes*. Here''s a brief explanation of each panel
    that is shown in the preceding layout image (your layout may be different):'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Unity编辑器由多个非重叠窗口或*面板*组成，这些面板可以进一步细分为*窗格*。以下是前面布局图像中显示的每个面板的简要说明（您的布局可能不同）：
- en: The Scene panel on the upper left-hand side (highlighted) is where you can visually
    compose the 3D space of the current scene, including the placement of objects.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在左上角（已突出显示）的场景面板是您可以直观地组合当前场景的3D空间的地方，包括对象的放置。
- en: Below the Scene panel is the Game view (lower left-hand side), which shows the
    actual game camera view (presently, it is empty with an ambient sky). When in
    **Play Mode**, your game runs in this panel.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在场景面板下方是游戏视图（左下角），它显示实际的摄像机视图（目前，它是空的，有一个环境天空）。在**播放模式**下，您的游戏将在该面板中运行。
- en: In the center, we have arranged the Hierarchy, Project, and Console panels (from
    the top to the bottom, respectively).
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在中间，我们安排了层次结构、项目和控制台面板（从上到下依次排列）。
- en: The Hierarchy panel provides a tree view of all the *objects* in the current
    scene.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 层次结构面板提供当前场景中所有*对象*的树形视图。
- en: The Project panel contains all the *reusable assets* for the project, including
    the ones imported as well as those that you'll create along the way.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目面板包含项目中所有可重用的资源，包括导入的以及您在过程中创建的。
- en: The Console panel shows messages from Unity, including *warnings and errors*
    from code scripts.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制台面板显示Unity的消息，包括代码脚本中的*警告和错误*。
- en: On the right-hand side is the Inspector panel (highlighted), which contains
    the properties of the currently selected object. (Objects are selected by clicking
    on them in the Scene, Hierarchy, or the Project panel). The Inspector panel has
    separate panes for each component of the object.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在右侧是检查器面板（已突出显示），其中包含当前选中对象的属性。（通过在场景、层次结构或项目面板中单击对象来选择对象）。检查器面板为对象的每个组件提供单独的窗格。
- en: At the top is the main menu bar (on a Mac, this will be at the top of your screen,
    not at the top of the Unity window). There's a toolbar area with various controls
    that we'll use later on, including the **Play** (triangle icon) button that starts
    Play mode.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在顶部是主菜单栏（在Mac上，这将在屏幕顶部，而不是Unity窗口的顶部）。有一个工具栏区域，其中包含我们稍后将要使用的各种控件，包括**播放**（三角形图标）按钮，该按钮启动播放模式。
- en: From the main menu bar's Window menu, you can open additional panels as needed.
    The editor's user interface is configurable. Each panel can be rearranged, resized,
    and tabbed by grabbing one of the panel tabs and dragging it. Go ahead, try it!
    On the upper right-hand side is a Layout selector that lets you either choose
    between various default layouts or save your own preferences.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 从主菜单栏的“窗口”菜单中，您可以根据需要打开额外的面板。编辑器的用户界面是可配置的。每个面板都可以通过抓住其中一个面板标签并拖动它来重新排列、调整大小和分页。试试看！在上右角有一个布局选择器，让您可以选择各种默认布局或保存自己的首选项。
- en: The default world space
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 默认世界空间
- en: A default empty Unity scene consists of a Main Camera object and a single Directional
    Light object, as listed in the Hierarchy panel and depicted in the Scene panel.
    The Scene panel also shows a perspective of an infinite reference ground plane
    grid, like a piece of graph paper with nothing on it yet. The grid spans across
    the *x* (red) and *z* (blue) axes. The *y *axis (green) is up.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的空Unity场景包含一个主摄像机对象和一个单独的方向光对象，如层次结构面板中列出并在场景面板中所示。场景面板还显示一个无限参考地面平面网格的透视，就像一张没有任何东西的图表纸。网格跨越*x*（红色）和*z*（蓝色）轴。*y*轴（绿色）向上。
- en: An easy way to remember the Gizmo axes colors is by keeping in mind that R-G-B
    corresponds to *X-Y-Z*.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 记住Gizmo轴颜色的简单方法是记住R-G-B对应于*X-Y-Z*。
- en: The Inspector panel shows the details of the currently selected item. Select
    the Directional Light with your mouse, either from the Hierarchy list or within
    the scene itself, and look at the Inspector panel for each of the properties and
    components associated with the object, including its transform. An object's transform
    specifies its position, rotation, and scale in the 3D world space. For example,
    position (0, 3, 0) is 3 units above (in the *Y* direction) the center of the ground
    plane (*X* = `0`, *Z* = `0`). A rotation of (`50`, `330`, `0`) means that it's
    rotated 50 degrees around the *x *axis and 330 degrees around the *y *axis. As
    you'll see, you can change an object's transforms numerically here or directly
    with the mouse in the Scene panel.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 检查器面板显示了当前选中项的详细信息。使用鼠标选择方向光，无论是从层次列表中还是场景本身，然后查看检查器面板中与对象关联的每个属性和组件，包括其变换。对象的变换指定了其在3D世界空间中的位置、旋转和缩放。例如，位置
    (0, 3, 0) 是在地面平面中心（*X* = `0`, *Z* = `0`）上方3个单位（在 *Y* 方向上）。旋转 (`50`, `330`, `0`)
    意味着它在 *x* 轴上旋转了50度，在 *y* 轴上旋转了330度。正如你将看到的，你可以在这里以数值方式更改对象的变换，或者直接在场景面板中使用鼠标。
- en: Similarly, if you click on the Main Camera, it may be located at the (`0`, `1`,
    `-10`) position with no rotation. That is, it's pointed straight ahead, towards
    the positive *Z* direction.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，如果你点击主相机，它可能位于 (`0`, `1`, `-10`) 位置，并且没有旋转。也就是说，它正对着前方，指向正 *Z* 方向。
- en: When you select the Main Camera, as shown in the preceding editor screenshot,
    a Camera Preview inset is added to the Scene panel, which shows the view that
    the camera presently sees. (If the Game tab is open, you'll see the same view
    there too). Presently, the view is empty and the reference grid does not get rendered,
    but a foggy horizon is discernible, with the grey ground plane below and the blue
    default ambient Skybox above.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当你选择主相机，如前一个编辑器截图所示，在场景面板中添加了一个相机预览嵌入，显示了相机当前看到的视图。（如果游戏标签页是打开的，你也会在那里看到相同的视图）。目前，视图是空的，参考网格没有渲染，但可以辨认出模糊的地平线，下面是灰色地面平面，上面是蓝色的默认环境Skybox。
- en: Creating a simple diorama
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个简单的微缩景观
- en: 'Now, we will add a few objects to the scene to set up the environment, including
    a unit cube, a flat plane, a red ball, and a photographic backdrop. Here is a
    photograph of a physical mock-up of the diorama we will build in VR:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将向场景中添加一些对象来设置环境，包括一个单位立方体、一个平面、一个红色球体和一个摄影背景。以下是我们在VR中将要构建的微缩景观的实物模型照片：
- en: '![](img/c5e7b978-8989-4cd8-b79f-4f0ab499e920.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c5e7b978-8989-4cd8-b79f-4f0ab499e920.png)'
- en: Adding a cube
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加立方体
- en: 'Let''s add the first object to the scene: a unit-sized cube.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们向场景中添加第一个对象：一个单位大小的立方体。
- en: Within the Hierarchy panel, use the Create menu and choose 3D Object | Cube.
    The same selection can also be found in the main menu bar's GameObject drop-down
    menu.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在层次面板中，使用创建菜单并选择3D Object | Cube。同样的选择也可以在主菜单栏的GameObject下拉菜单中找到。
- en: A default white cube is added to the scene, centered on the ground plane at
    the (0, 0, 0) position, with no rotation, and a scale of one, as you can see in
    the Inspector panel. This is the Reset setting, which can be found in the object's
    Transform component of the Inspector panel.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 场景中添加了一个默认的白色立方体，位于地面平面上（0, 0, 0）的位置，没有旋转，缩放为1，正如你在检查器面板中所见。这是重置设置，可以在检查器面板的对象变换组件中找到。
- en: The Reset values of the Transform component are Position (`0`, `0`, `0`), Rotation
    (`0`, `0`, `0`), and Scale (`1`, `1`, `1`).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 变换组件的重置值是位置 (`0`, `0`, `0`), 旋转 (`0`, `0`, `0`), 和缩放 (`1`, `1`, `1`)。
- en: If for some reason your cube has other Transform values, set these in the Inspector
    panel or locate the small *gear* icon in the upper right-hand side of the Inspector
    panel's Transform component, click on it, and select Reset.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于某种原因你的立方体有其他的变换值，请在检查器面板中设置这些值，或者定位检查器面板右上角的的小 *齿轮* 图标，点击它，并选择重置。
- en: This cube has the dimensions of one unit on each side. As we'll see later, one
    unit in Unity corresponds to one meter in world coordinates. Its local center
    is the center of the cube.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这个立方体的每一边都是一单位。正如我们稍后将会看到的，Unity中的一个单位对应于世界坐标中的一米。它的局部中心是立方体的中心。
- en: Adding a plane
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加平面
- en: Now, let's add a ground plane object into the scene.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们向场景中添加一个地面平面对象。
- en: In the Hierarchy panel, click on the Create menu (or main GameObject menu) and
    choose 3D Object | Plane.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在层次面板中，点击创建菜单（或主GameObject菜单）并选择3D Object | Plane。
- en: A default white plane is added to the scene, centered on the ground plane at
    Position (`0`, `0`, `0`). (If necessary, select Reset from the Inspector panel's
    Transform component's *gear* icon). Rename it to `GroundPlane`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 场景中添加了一个默认的白色平面，位于地面平面上，位置为(`0`, `0`, `0`)。如果需要，可以从检查器面板的变换组件的*齿轮*图标中选择重置。将其重命名为`GroundPlane`。
- en: Note that at a scale of (`1`, `1`, `1`), Unity's plane object actually measures
    10 by 10 units in X and Z. In other words, the size of `GroundPlane` is 10 by
    10 units and its transform's Scale is 1.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在`1`, `1`, `1`的比例下，Unity的平面对象实际上在X和Z方向上测量10x10个单位。换句话说，`GroundPlane`的大小是10x10个单位，其变换的缩放比例是1。
- en: 'The cube is centered at Position (`0`, `0`, `0`), just like the ground plane.
    However, maybe it doesn''t look like it to you. The Scene panel may show a Perspective
    projection that renders 3D scenes onto a 2D image. The Perspective distortion
    makes the cube not seem centered on the ground plane, but it is. Count the grid
    lines on either side of the cube. As you''ll see, when it is viewed in VR and
    you''re actually standing in the scene, it won''t look distorted at all. This
    is shown in the following screenshot:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 立方体位于位置(`0`, `0`, `0`)的中心，就像地面平面一样。然而，可能在你看来并不如此。场景面板可能显示透视投影，将3D场景渲染到2D图像上。透视畸变使得立方体看起来没有在地面平面上居中，但实际上它是。数一数立方体两侧的网格线。正如你所看到的，当你在VR中查看时，你实际上站在场景中，它看起来根本不会扭曲。以下是一个截图：
- en: '![](img/0622dbe6-78d4-466a-9e60-984e09066a94.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0622dbe6-78d4-466a-9e60-984e09066a94.png)'
- en: 'The cube is submerged in the ground plane because its local origin is at its
    geometric center—it measures 1 by 1 by 1 and its middle point is (0.5, 0.5, 0.5).
    This might sound obvious, but it is possible for the origin of a model to not
    be its geometric center (such as one of its corners). The Transform component''s
    position is the world space location of the object''s local origin. Let''s move
    the cube as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 立方体被埋在地面平面上，因为它的局部原点位于其几何中心——它的大小为1x1x1，其中心点为(0.5, 0.5, 0.5)。这听起来可能很显然，但模型的原点可能不是其几何中心（例如其一个角）。变换组件的位置是物体的局部原点在世界空间中的位置。让我们按照以下方式移动立方体：
- en: 'Move the cube onto the surface of the ground plane—in the Inspector panel,
    set its Y position to 0.5: Position (`0`, `0.5`, `0`).'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将立方体移动到地面平面的表面上——在检查器面板中，将其Y位置设置为0.5：位置(`0`, `0.5`, `0`)。
- en: 'Let''s rotate the cube a bit around the *y* axis. Enter 20 into its Y rotation:
    Rotation (`0`, `0.5`, `0`).'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在*y*轴周围稍微旋转一下立方体。将其Y旋转输入为20：旋转(`0`, `0.5`, `0`)。
- en: Note the direction in which it rotates. That's 20 degrees clockwise. Using your
    left hand, give a thumbs-up gesture. See the direction your fingers are pointing?
    Unity uses a left-handed coordinate system. (There is no standard for the coordinate
    system *handedness*. Some software uses left-handedness, others use right-handedness).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 注意它旋转的方向。那是顺时针20度。用你的左手做一个点赞的手势。看看你的手指指向的方向？Unity使用的是左手坐标系。（坐标系的手性没有标准。一些软件使用左手性，而另一些则使用右手性）。
- en: Unity uses a left-handed coordinate system. And the *y* axis is up.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Unity使用的是左手坐标系。而且*y*轴是向上的。
- en: Adding a sphere and some material
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加球体和一些材质
- en: Next, let's add a sphere. Select GameObject | 3D Object | Sphere from the menu.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们添加一个球体。从菜单中选择GameObject | 3D Object | Sphere。
- en: Like the cube, the sphere has a radius of 1.0, with its origin at the center.
    (If necessary, select Reset from the Inspector panel Transform component's *gear*
    icon). It's hard to see the sphere as it is embedded in the cube. We need to move
    the sphere's position.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 与立方体一样，球体的半径为1.0，其原点位于中心。（如果需要，可以从检查器面板变换组件的*齿轮*图标中选择重置）。由于它被嵌入在立方体中，很难看到球体。我们需要移动球体的位置。
- en: 'This time, let''s use the Scene panel''s **Gizmos** component to move the object.
    In the Scene view, you can select graphical controls, or Gizmos, to manipulate
    the objects transforms, as illustrated in the following screenshot from the Unity
    documentation ([http://docs.unity3d.com/Manual/PositioningGameObjects.html](http://docs.unity3d.com/Manual/PositioningGameObjects.html)):'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，让我们使用场景面板的**Gizmos**组件来移动对象。在场景视图中，你可以选择图形控件，或Gizmos，来操纵对象的变换，如以下Unity文档截图所示([http://docs.unity3d.com/Manual/PositioningGameObjects.html](http://docs.unity3d.com/Manual/PositioningGameObjects.html))：
- en: '![](img/8ce24601-1cae-427f-a346-ef4f58a7b910.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8ce24601-1cae-427f-a346-ef4f58a7b910.png)'
- en: In the Scene panel, with the sphere selected, make sure that the Translate tool
    is active (second icon on the top-left icon toolbar) and use the arrows of the
    *x*, *y*, and *z *axes to position it. I left mine at Position (`1.6`, `0.75`,
    `-1.75`).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在场景面板中，选择球体后，确保翻译工具处于激活状态（位于左上角图标工具栏的第二个图标）并使用*x*、*y*和*z*轴的箭头来定位它。我将其留在了位置（`1.6`，`0.75`，`-1.75`）。
- en: A **Gizmo** is a graphical control that lets you manipulate the parameters of
    an object or a view. Gizmos have grab points or handles that you can click and
    drag with the mouse.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gizmo**是一种图形控件，允许你操纵对象或视图的参数。Gizmos有可以点击并拖动的抓点或把手。'
- en: 'Before we go much further, let''s save our work as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们进一步操作之前，让我们按照以下方式保存我们的工作：
- en: From the main menu bar, select File | Save Scene As... and name it `Diorama`.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主菜单栏选择文件 | 保存场景为...并将其命名为`Diorama`。
- en: Also, navigate to File | Save Project for good measure. Note that in the Project
    panel, the new scene object was saved in the top-level Assets folder.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，导航到文件 | 保存项目以备不时之需。注意，在项目面板中，新的场景对象被保存在顶级Assets文件夹中。
- en: 'Let''s add some color to the scene by making a couple of colored materials
    and applying them to our objects. Follow these steps:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过制作一些彩色材质并将它们应用到我们的对象上来给场景添加一些颜色。按照以下步骤操作：
- en: In the Project panel, select the top-level Assets folder and select Create |
    Folder. Rename the folder to `Materials`.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目面板中，选择顶级Assets文件夹，然后选择创建 | 文件夹。将文件夹重命名为`Materials`。
- en: With the `Materials` folder selected, select Create | Material and rename it
    to `Red Material`.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在选择`Materials`文件夹后，选择创建 | 材质，并将其重命名为`Red Material`。
- en: In the Inspector panel, click the white rectangle to the right of Albedo, which
    opens the Color panel. Choose a nice juicy red.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在检查器面板中，点击Albedo右侧的白色矩形，这将打开颜色面板。选择一个鲜艳的红色。
- en: Repeat the preceding steps to make a `Blue Material` too.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复前面的步骤以创建一个`Blue Material`。
- en: Select Sphere from the Hierarchy (or Scene) panel.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从层次结构（或场景）面板中选择球体。
- en: Drag the `Red Material` from the Project panel into the Inspector panel for
    the sphere. The sphere should now look red.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Red Material`从项目面板拖动到球体的检查器面板中。球体现在应该看起来是红色的。
- en: Select Cube from the Scene (or Hierarchy) panel.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从场景（或层次结构）面板中选择立方体。
- en: This time, drag the `Blue Material` from the `Project` panel into the scene
    and drop it onto the cube. It should now look blue.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这次，将`Blue Material`从项目面板拖动到场景中，并将其放在立方体上。现在它应该看起来是蓝色的。
- en: 'Save your scene and save the project. Here''s what my scene looks like now
    (yours might be a little different, but that''s OK):'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 保存你的场景和项目。这是我现在的场景样子（你的可能略有不同，但没关系）：
- en: '![](img/50f9ebde-13f6-4557-91a3-27db3d77eaf7.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/50f9ebde-13f6-4557-91a3-27db3d77eaf7.png)'
- en: Note that we're using the folders in the Project panel `/Assets/` directory
    to organize our stuff.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们正在使用项目面板中`/Assets/`目录下的文件夹来组织我们的内容。
- en: Changing the scene view
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 改变场景视图
- en: You can change the scene view any time in a number of ways, and this varies
    depending on whether you have a mouse with three-buttons, or two-buttons, or Mac
    with only one button. Read up on it in the Unity manual, which can be found at
    [http://docs.unity3d.com/Manual/SceneViewNavigation.html](http://docs.unity3d.com/Manual/PositioningGameObjects.html),
    to find out what works for you.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过多种方式随时更改场景视图，这取决于你是否有三按钮鼠标、双按钮鼠标，或者只有一个按钮的Mac。在Unity手册中查找相关信息，手册可以在[http://docs.unity3d.com/Manual/SceneViewNavigation.html](http://docs.unity3d.com/Manual/PositioningGameObjects.html)找到，以了解哪些操作适合你。
- en: 'In general, combinations of left/right mouse clicks with the *Shift* + *Ctrl*
    + *Alt* keys will let you perform the following actions:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，左/右鼠标点击与*Shift* + *Ctrl* + *Alt*键的组合可以执行以下操作：
- en: Drag the camera around.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在场景中拖动相机。
- en: Orbit the camera around the current pivot point.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 围绕当前旋转点旋转相机。
- en: Zoom in and out.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缩放。
- en: Press *Alt* and right-click to swing the current eye orbit up, down, left, and
    right.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按下*Alt*并右击，可以向上、向下、向左和向右摆动当前眼球的旋转。
- en: When the **Hand** tool is selected (in the upper-left icon bar), the right mouse
    button moves the eye. The middle-click of the mouse does a similar thing.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当**手**工具被选中（在上左图标栏中）时，右鼠标按钮移动眼球。鼠标的中击也做类似的事情。
- en: 'In the upper right-hand side of the Scene panel, you have the **Scene View** Gizmo,
    which depicts the current scene view orientation as shown in the following screenshot.
    It may indicate, for example, a Perspective view, with x extending back to the
    left and z extending back to the right:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在场景面板右上角，你有 **场景视图** Gizmo，它如以下屏幕截图所示描绘了当前场景视图方向。例如，它可能指示透视视图，其中 x 向左延伸，z 向右延伸：
- en: '![](img/8a3b97e1-8edc-4a55-82ae-624392098b46.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8a3b97e1-8edc-4a55-82ae-624392098b46.png)'
- en: 'You can change the view to look directly along any of the three axes by clicking
    on the corresponding colored cone as shown in the following screenshot. Clicking
    on the small cube in the center changes the Perspective view to the Orthographic
    (non-distorted) view:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过点击以下屏幕截图所示的相应彩色锥体来将视图直接沿任意三个轴之一查看。点击中心的小立方体将透视视图更改为正交（非扭曲）视图：
- en: '![](img/91ecc775-19c9-45b7-a83f-94437f379199.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/91ecc775-19c9-45b7-a83f-94437f379199.png)'
- en: 'Before moving on, let''s first align the scene view with the Main Camera direction.
    You may recall me saying that the default camera orientation, (`0`, `0`, `0`),
    is looking down the positive z direction (back to front). Follow the following
    steps:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，让我们首先将场景视图与主相机方向对齐。你可能记得我提到默认相机方向（`0`，`0`，`0`）是朝向正 z 方向（从后向前）。按照以下步骤操作：
- en: Click on the white z cone on the Scene View Gizmo to adjust the view from the
    Back (back direction), looking forward.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击场景视图 Gizmo 上的白色 z 锥体，从背面（背面方向）调整视图，向前看。
- en: Also, use the Hand tool (or the middle mouse button) to slide the view up a
    tad.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，使用手柄工具（或中间鼠标按钮）稍微向上滑动视图。
- en: Now, when you select the Main Camera component (from the Hierarchy panel), you
    will see that the Scene view is roughly similar to the Camera Preview, looking
    in the same direction. (See the screen capture image shown in the following section
    for what the scene and preview looks like with this view direction after we add
    the photo.)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你选择主相机组件（从层次面板中），你会看到场景视图大致与相机预览相似，朝向相同方向。（参见下一节中显示的屏幕截图，了解添加照片后此视图方向下的场景和预览看起来如何。）
- en: For a full list of Unity shortcut hotkeys, see [https://docs.unity3d.com/Manual/UnityHotkeys.html](https://docs.unity3d.com/Manual/UnityHotkeys.html).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看 Unity 快捷键的完整列表，请参阅 [https://docs.unity3d.com/Manual/UnityHotkeys.html](https://docs.unity3d.com/Manual/UnityHotkeys.html)。
- en: Adding a photo
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加照片
- en: Now, let's add a photo for the big-screen backdrop of our diorama.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们为我们的展品大屏幕背景添加一张照片。
- en: 'In computer graphics, an image that is mapped onto an object is called a **texture**.
    While objects are represented in the x, y, and z world coordinates, textures are
    said to be in the U, V coordinates (such as pixels). We''ll see that textures
    and UV maps can have their own scaling issues. Follow the following steps:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机图形学中，映射到对象上的图像称为 **纹理**。虽然对象以 x、y 和 z 世界坐标表示，但纹理被认为是在 U、V 坐标（如像素）中。我们将看到纹理和
    UV 映射可能有自己的缩放问题。按照以下步骤操作：
- en: Create a plane by navigating to GameObject | 3D Object | Plane and rename it
    `PhotoPlane`.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到 GameObject | 3D Object | Plane 创建一个平面，并将其重命名为 `PhotoPlane`。
- en: Reset the plane's transform. In the Inspector panel, find the *gear* icon on
    the upper right-hand side of the Transform panel. Click on this icon and select
    Reset.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重置平面的变换。在检查器面板中，找到变换面板右上角的 *齿轮* 图标。点击此图标并选择重置。
- en: Next, rotate it by 90 degrees around the *z *axis (set its Transform component's
    Rotation value of z to -90). That's *minus 90*. So, it's standing up, perpendicular
    to the ground.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，围绕 *z* 轴旋转 90 度（将其变换组件的旋转值 z 设置为 -90）。那就是 *负 90 度*。所以，它现在是垂直于地面的站立状态。
- en: Rotate it by 90 degrees around the *y *axis so that its front is facing us.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 围绕 *y* 轴旋转 90 度，使其正面朝向我们。
- en: Move it to the end of the ground plane at Position value of *z* = `5` and above,
    at Position value of y = `5` (you may recall that the ground plane is 10 x 10
    units).
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其移动到地面平面的末端，位置值为 *z* = `5` 以上，位置值为 y = `5`（你可能记得地面平面是 10 x 10 单位）。
- en: Choose any photo from your computer to paste on this photo plane using Windows
    Explorer or Mac Finder. (Alternatively, you can use the `GrandCanyon.jpg` image
    that comes with this book).
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从你的电脑中选择任何照片，使用 Windows 资源管理器或 Mac Finder 粘贴到这张照片平面上。（或者，你可以使用本书附带的自带的 `GrandCanyon.jpg`
    图像）。
- en: In the Project panel, select the top-level Assets folder and navigate to Create
    | Folder. Rename the folder to `Textures`.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目面板中，选择顶级资产文件夹，导航到创建 | 文件夹。将文件夹重命名为 `Textures`。
- en: Drag the photo file into the `Assets/Textures` folder. It should automatically
    import as a texture object. Alternatively, you can right-click on the Assets folder,
    select Import New Asset..., and import the picture.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将照片文件拖入`Assets/Textures`文件夹。它应该会自动导入为纹理对象。或者，你可以在资产文件夹上右键单击，选择“导入新资产...”，然后导入图片。
- en: 'Select the new image Texture in the Project panel and review its settings in
    the Inspector panel. For Unity''s rendering purposes, even if the original photo
    was rectangular, the texture is square now (for example, 2048 x 2048) and looks
    squished. When you map it onto a square-shaped face, it will be squished there
    too. Let''s perform the following steps:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目面板中选择新的图像纹理，并在检查器面板中查看其设置。对于Unity的渲染目的，即使原始照片是矩形的，纹理现在是正方形（例如，2048 x 2048）并且看起来有点挤压。当你将其映射到正方形面上时，它也会在那里挤压。让我们执行以下步骤：
- en: Drag the photo texture from the Project panel onto the photo plane (in the Scene
    panel).
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将照片纹理从项目面板拖动到照片平面（在场景面板中）。
- en: Oops! In my case, the picture is rotated sideways—yours, too?
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀！在我的情况下，图片是侧着旋转的——你的也是吗？
- en: Select `PhotoPlane` (the photo plane) and set the Transform component's Rotation
    value of X to `90` degrees.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`PhotoPlane`（照片平面）并设置变换组件的X旋转值为`90`度。
- en: OK, it's upright, but still squished. Let's fix this. Check the original resolution
    of your photo and determine its aspect ratio. My `Grand Canyon` image was 2576
    x 1932\. When you divide its width by its height, you get the 0.75 ratio.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，它现在是垂直的，但仍然有点挤压。让我们来修复这个问题。检查你照片的原始分辨率并确定其纵横比。我的`Grand Canyon`图像是2576 x 1932。当你将其宽度除以高度时，你会得到0.75的比率。
- en: In Unity, set the `PhotoPlane` plane Transform component's Scale value of Z
    to `0.75`.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Unity中，将`PhotoPlane`平面的变换组件的Z缩放值设置为`0.75`。
- en: Because its scale origin is the center, we also have to move it back down a
    bit.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 因为它的缩放原点是中心，我们还得把它向下移动一点。
- en: Set the Position value of y to `3.75`.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将y的位置值设置为`3.75`。
- en: Why 3.75? The height started at 10\. So, we scaled it to 7.5\. The scaling of
    objects is relative to their origin. So now, the half of the height is 3.75\.
    We want to position the center of the backdrop 3.5 unit above the ground plane.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么是3.75？高度从10开始。所以，我们将其缩放到7.5。对象的缩放是相对于它们的原点。所以现在，高度的一半是3.75。我们想要将背景的中心定位在地面平面上方3.5个单位处。
- en: We have the size and position set up, but the photo looks washed out. That's
    because the ambient lighting in the scene is affecting it. You might want to keep
    it that way, especially as you build more sophisticated lighting models and materials
    in your scenes. But for now, we'll un-light it.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经设置了大小和位置，但照片看起来有点褪色。这是因为场景中的环境光照影响了它。你可能想保持这种状态，尤其是在你构建更复杂的照明模型和材质时。但现在，我们将取消照明。
- en: With `PhotoPlane` selected, note that the photo's Texture component in the Inspector
    panel has its default Shader component set as Standard. Change it to Unlit | Texture.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择`PhotoPlane`后，注意在检查器面板中，照片的纹理组件的默认着色器组件设置为标准。将其更改为Unlit | Texture。
- en: 'Here''s what mine looks like; yours should be similar:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我看起来像的；你的应该类似：
- en: '![](img/038b07a3-eb34-4efe-9e42-4838d16a5e4a.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/038b07a3-eb34-4efe-9e42-4838d16a5e4a.png)'
- en: There! That looks pretty good. Save your scene and project.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 好了！看起来相当不错。保存你的场景和项目。
- en: You may notice that Planes are only visible from their front. All surfaces in
    computer graphics have a front-facing direction (normal vector). The view camera
    must be towards the front face or else the object will not be rendered. This is
    a performance optimization. If you require a *plane* with faces on both sides,
    use a Cube scaled thinly, or two separate Planes facing away from each other.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到，飞机只能从前方看到。计算机图形中的所有表面都有一个面向前方的方向（法向量）。视图相机必须朝向前方，否则对象将不会被渲染。这是一个性能优化。如果你需要一个**平面**两面都有面，可以使用一个薄薄的立方体，或者两个相互远离的单独平面。
- en: Notice that if you check your Materials folder now, you'll find that Unity has
    automatically created a `GrandCanyon.mat` material for you that uses the `GrandCanyon.jpg`
    texture.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果你现在检查你的材质文件夹，你会发现在Unity已经为你自动创建了一个名为`GrandCanyon.mat`的材质，它使用了`GrandCanyon.jpg`纹理。
- en: Coloring the ground plane
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 着色地面平面
- en: If you want to change the ground plane color, create a new material (in the
    Project panel), name it `Ground`, and drag it onto the ground plane. Then, change
    its Albedo color. I suggest using the dropper (icon) to pick an earth tone from
    the image in your photo plane.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要更改地面平面的颜色，创建一个新的材质（在项目面板中），命名为`Ground`，并将其拖动到地面平面上。然后，更改其Albedo颜色。我建议使用滴管（图标）从你的照片平面的图像中选择一种土色调。
- en: Measurement tools
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测量工具
- en: We've created a Unity scene, added a few primitive 3D objects, and created a
    couple of basic textures, including a photograph. Along the way, we learned about
    positioning and transforming objects in Unity's 3D world space. The problem is
    that the actual size of stuff in your scene is not always obvious. You could be
    zoomed up or you may be using either a Perspective or Orthographic view, or other
    features that affect the apparent size. Let's look at ways to deal with the scale.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经创建了一个Unity场景，添加了一些原始的3D对象，并创建了一些基本的纹理，包括一张照片。在这个过程中，我们学习了如何在Unity的3D世界空间中定位和变换对象。问题是场景中实际物体的尺寸并不总是显而易见。你可能已经放大了视图，或者你可能正在使用透视或正交视图，或者其他影响可见尺寸的功能。让我们看看如何处理比例问题。
- en: Keeping a unit cube handy
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保持单位立方体在手边
- en: I suggest keeping a unit cube handy in your Hierarchy panel. When it's not needed,
    just disable it (uncheck the checkbox in the top left-hand side of the Inspector
    panel). It can be used like a measuring stick, or rather, a measuring block, when
    needed. I use one to estimate actual world sizes of objects, distances between
    objects, heights, and elevations, and so forth. Let's do it now.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议在层次面板中保持一个单位立方体在手边。当它不再需要时，只需禁用它（在检查器面板的左上角取消勾选复选框）。当需要时，它可以像尺子一样使用，或者更确切地说，像测量块一样使用。我使用它来估计物体的实际世界尺寸、物体之间的距离、高度和海拔等等。现在让我们来做这件事。
- en: Create a unit cube, name it `Unit Cube`, and place it somewhere out of the way
    for now, such as Position (`-2`, `0.5`, `-2`).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个单位立方体，命名为`Unit Cube`，并将其放置在某个不易见到的位置，例如位置(`-2`, `0.5`, `-2`)。
- en: Leave it enabled for the time being.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 目前先保持启用状态。
- en: Using a Grid Projector
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用网格投影仪
- en: 'I want to tell you about the **Grid Projector**, a handy tool that is used
    to visualize a scale in any Unity scene. It''s one of the Standard Assets in the
    Effects package. So, you may need to import it into your project. To import, perform
    the following steps:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我想向大家介绍**网格投影仪**，这是一个方便的工具，用于在任意Unity场景中可视化比例。它是效果包中的标准资源之一。因此，你可能需要将其导入到你的项目中。导入时，请执行以下步骤：
- en: Select Assets in the main menu bar and then navigate to Import Package | Effects.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主菜单栏中选择“资产”，然后导航到“导入包”|“效果”。
- en: The Import dialog box pops up, containing a list of all the things that can
    get imported. Then select Import.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入对话框弹出，包含可以导入的所有内容的列表。然后选择“导入”。
- en: If you cannot find the `Effects` package to import, you may not have installed
    `Standard Assets` when you installed Unity. To get them now, you will need to
    run the `UnityDownloadAssistant` again as described at the beginning of this chapter
    (and it may already be in your `Downloads` folder).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你找不到导入的`Effects`包，那么在你安装Unity时可能没有安装`Standard Assets`。要获取它们，你需要再次运行`UnityDownloadAssistant`，如本章开头所述（它可能已经在你`下载`文件夹中）。
- en: 'Now, we''ll add a projector to the scene, as follows:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将按照以下步骤将投影仪添加到场景中：
- en: Find the Grid Projector prefab located in the Project panel by navigating to
    the `Assets/Standard Assets/Effects/Projectors/Prefabs` folder.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到`Assets/Standard Assets/Effects/Projectors/Prefabs`文件夹，在项目面板中找到网格投影仪预制体。
- en: Drag a copy of the Grid Projector into your scene. Set the y value of the Position
    to `5` so that it's above the ground plane.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将网格投影仪的一个副本拖动到你的场景中。将位置`y`值设置为`5`，使其位于地面平面之上。
- en: 'The default Grid Projector is facing downward (Rotation value of x = 90), which
    is usually what we want. In the Scene view, you can see the Orthographic projection
    rays. A Unity doc ([http://docs.unity3d.com/Manual/class-Projector.html](http://docs.unity3d.com/Manual/class-Projector.html))
    explains a Projector as follows:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的网格投影仪朝下（x旋转值为90），这通常是我们的需求。在场景视图中，你可以看到正交投影的射线。Unity文档([http://docs.unity3d.com/Manual/class-Projector.html](http://docs.unity3d.com/Manual/class-Projector.html))对投影仪的描述如下：
- en: A Projector allows you to project a Material onto all objects that intersect
    its frustum.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 投影仪允许你将材质投影到与其视锥体相交的所有对象上。
- en: This means that the objects intersected by the projection rays will receive
    the projected material.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着被投影射线相交的物体将接收到投影的材质。
- en: In this case, as you'd expect, the projector material (also named `GridProjector`)
    has a *grid* texture, which simply looks like a crosshair. (See for yourself,
    in the `Assets/.../Projectors/Textures/Grid` object).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，正如你所期望的，投影器材质（也称为 `GridProjector`）有一个 *网格* 纹理，看起来就像一个十字准星。（你自己看看，在 `Assets/.../Projectors/Textures/Grid`
    对象中）。
- en: 'By default, the projector shines the grid pattern as a light on the surface
    that it illuminates. In our scene, the `GroundPlane` plane is a light color. So,
    the grid may not show up. Now, follow the following steps:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，投影器将网格图案作为光投射到它照亮的表面上。在我们的场景中，`GroundPlane` 平面是浅色。因此，网格可能不会显示出来。现在，按照以下步骤操作：
- en: With Grid Projector selected in the Hierarchy panel, locate the `GridProjector` material
    component in the Inspector panel and change its Shader from Projector/Light to
    Projector/Multiply.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在层次结构面板中选择 Grid Projector，在检查器面板中找到 `GridProjector` 材质组件，并将其着色器从投影器/光更改为投影器/乘法。
- en: 'It now paints the white gridlines black. To get a better feel of what''s going
    on, change the scene view to a Top view orientation, as follows:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 现在它将白色网格线画成黑色。为了更好地了解正在发生的事情，将场景视图更改为俯视图方向，如下所示：
- en: Click the green y cone on the Scene View Gizmo in the upper right-hand side
    of the View panel.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击视图面板右上角的场景视图 Gizmo 上的绿色 y 球锥。
- en: Also, click the little cube at the center of the Gizmo to change from the Perspective
    to the Orthographic (flattened) view.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，点击 Gizmo 中心的立方体，从透视视图更改为正交（平坦）视图。
- en: You should now be looking straight down onto the ground plane. With the Grid
    Projector selected (make sure that the Translate tool is active, which is the
    second icon in the top-left icon toolbar), you can grab the Translate Gizmo attached
    to the Projector and move it from side to side. The grid line will move accordingly.
    You might leave it at Position (`-2.5`, `5`, `-0.5`) and avoid the projector Gizmo
    blocking the directional light.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该正对着地面平面直视。选择 Grid Projector（确保翻译工具是激活的，这是左上角图标工具栏中的第二个图标），你可以抓住附加到投影器的平移
    Gizmo 并将其从一侧移动到另一侧。网格线会相应地移动。你可能将其留在位置（`-2.5`，`5`，`-0.5`）并避免投影器 Gizmo 阻挡方向光。
- en: 'At this point, the built-in view reference grid might be confusing. So, turn
    it off in the following way:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，内置视图参考网格可能有些令人困惑。因此，按照以下方式将其关闭：
- en: In the Scene view panel, click on Gizmos (the menu with this name, which has
    options to control your Gizmos) and uncheck Show Grid.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在场景视图面板中，点击 Gizmos（这个名称的菜单，其中包含控制你的 Gizmos 的选项）并取消勾选显示网格。
- en: OK, so what does this get us? We can see that the default grid size measures
    half the edge of the unit cube. In Inspector, the Projector component's Orthographic
    size value is `0.25`.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这能给我们带来什么？我们可以看到默认的网格大小是单位立方体边长的一半。在检查器中，投影器组件的正交大小值是 `0.25`。
- en: Change the Projector's Orthographic size value from `0.25` to `0.5`.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将投影器的正交大小值从 `0.25` 更改为 `0.5`。
- en: Save the scene and the project.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存场景和项目。
- en: Now we have a one-unit grid that can be turned on and projected onto the scene
    any time it is needed.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个单位网格，可以在需要时随时打开并投射到场景中。
- en: 'Let''s leave it on for now because it looks kind of cool, as you can see in
    the following screenshot:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在先让它保持，因为它看起来有点酷，如下面的截图所示：
- en: '![](img/b3e1e5aa-1b61-4d2d-9e35-5607318eec64.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b3e1e5aa-1b61-4d2d-9e35-5607318eec64.png)'
- en: Measuring the Ethan character
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测量 Ethan 角色尺寸
- en: How big is an avatar? Unity comes with a third-person character named `Ethan`.
    Let's add him to our scene. He's one of the `Standard Assets` in the `Characters`
    package. So, you may need to import that into your project.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 一个化身有多大？Unity 随附一个名为 `Ethan` 的第三人称角色。让我们将其添加到我们的场景中。他是 `Characters` 包中的 `Standard
    Assets` 之一。因此，你可能需要将其导入到你的项目中。
- en: 'To import, perform the following steps:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 要导入，请执行以下步骤：
- en: Select Assets in the main menu bar and then navigate to Import Package | Characters.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主菜单栏中选择 Assets，然后导航到导入包 | 角色。
- en: The Import dialog box pops up, containing a list of all the things that can
    get imported. Click All and then Import. The `ThirdPersonController` is a prefab
    (pre-built asset) located in the Project panel. This can be found by navigating
    to the `Assets/Standard Assets/Characters/ThirdPersonCharacter/Prefabs` folder.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入对话框弹出，包含可以导入的所有内容的列表。点击全部，然后导入。`ThirdPersonController` 是位于项目面板中的预制件（预构建资产）。可以通过导航到
    `Assets/Standard Assets/Characters/ThirdPersonCharacter/Prefabs` 文件夹找到它。
- en: Drag a copy of `ThirdPersonController` into your scene. The exact x and z positions
    don't matter, but set y to `0` so that the character named `Ethan` is standing
    on `GroundPlane`. I left mine at (`2.2`, `0`, `0.75`).
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`ThirdPersonController`的副本拖入你的场景中。确切的x和z位置不重要，但将y设置为`0`，以便名为`Ethan`的角色站在`GroundPlane`上。我的是在(`2.2`,
    `0`, `0.75`)。
- en: 'Let''s try it out:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们试试看：
- en: Click on the *Play* icon at the top of the Unity window in the center, to start
    your game. Use the *W*, *A*, *S*, and *D* keys to move him around. *Run, Ethan!
    Run!*
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击Unity窗口中央顶部的*播放*图标，开始你的游戏。使用*W*, *A*, *S*, 和 *D* 键移动他。*跑，Ethan！跑！*
- en: Click on the *Play* icon again to stop the game and return to edit mode.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次点击*播放*图标停止游戏并返回编辑模式。
- en: 'So, how big is Ethan? According to Google search, the average height of a human
    male is 5 foot 6 inches, or 1.68 meters (in the USA, the average adult male is
    more like 5'' 10" or 1.77 meters tall). Let''s see how tall Ethan is when compared
    to these:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，Ethan有多高呢？根据谷歌搜索，人类男性的平均身高是5英尺6英寸，或1.68米（在美国，成年男性的平均身高更像是5英尺10英寸或1.77米）。让我们看看Ethan与这些数值相比有多高：
- en: Slide the unit cube next to Ethan using the Translate Gizmo
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用平移工具将单位立方体移至Ethan旁边
- en: Alright, he's about 1.6 times its height
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，他大约是立方体高度的1.6倍
- en: Scale the unit cube's height (y) to 1.6 and center its y position to 0.8
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将单位立方体的高度（y）缩放至1.6，并将y位置居中至0.8
- en: 'Look again. As illustrated in the following screenshot, he''s not quite 1.6\.
    So, Ethan is a little shorter than the average male (unless you include his pointy
    hairdo). Swinging my view around, I''m looking Ethan right in the face, and by
    further adjusting the cube, the eye level is about 1.4 meters. Make a note of
    this:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 再看一眼。如图所示，他并不完全是1.6倍。所以，Ethan比平均男性略矮（除非你包括他的尖头发型）。我调整视角，正对着Ethan的脸，通过进一步调整立方体，眼睛水平大约是1.4米。记下这个：
- en: Restore the unit cube's Scale (`1`,`1`,`1`) and Position (`-2`, `0.5`, `-2`)
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 恢复单位立方体的缩放（`1`,`1`,`1`）和位置（`-2`, `0.5`, `-2`）
- en: Save the scene and the project
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存场景和项目
- en: 'The following screenshot shows the comparison of the unit cube and Ethan:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了单位立方体和Ethan的比较：
- en: '![](img/ba258a68-f33b-4b53-a167-9672cb9e22f9.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ba258a68-f33b-4b53-a167-9672cb9e22f9.png)'
- en: Using third-party content
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用第三方内容
- en: So far we have shown you how to use Unity and be productive creating a scene,
    but with pretty simple content. Inherently, Unity is not a 3D modeling or asset
    creation tool. Rather (as the name *Unity* suggests), it's a unified platform
    for pulling together content from a variety of sources to assemble and program
    a game or experience involving animation, physics, rendering effects, and so on.
    If you are a 3D artist you may know how to create content in other programs like
    Blender, 3D Studio Max, or Maya. If not, you can find a plethora of models on
    the web.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经向你展示了如何使用Unity创建场景并提高效率，但内容相当简单。本质上，Unity不是一个3D建模或资产创建工具。相反（正如名称*Unity*所暗示的），它是一个统一平台，用于从各种来源收集内容，以组装和编程涉及动画、物理、渲染效果等的游戏或体验。如果你是3D艺术家，你可能知道如何在Blender、3D
    Studio Max或Maya等程序中创建内容。如果不是，你可以在网上找到大量的模型。
- en: 'One terrific source is the **Unity Asset Store** ([https://www.assetstore.unity3d.com/en/](https://www.assetstore.unity3d.com/en/)).
    Many asset packs are free, especially starter ones, with possible paid upgrades
    if you want more. If you are looking for a few things to get your learning and
    experimental projects going, here are some of my free favorites:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 一个极好的来源是**Unity Asset Store**([https://www.assetstore.unity3d.com/en/](https://www.assetstore.unity3d.com/en/))。许多资产包是免费的，特别是入门级套件，如果你想要更多，可能需要付费升级。如果你正在寻找一些东西来启动你的学习和实验项目，以下是我的一些免费精选：
- en: Nature Starter Kit 1 and 2 ([https://assetstore.unity.com/packages/3d/environments/nature-starter-kit-1-49962](https://assetstore.unity.com/packages/3d/environments/nature-starter-kit-1-49962))
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自然入门套件1和2([https://assetstore.unity.com/packages/3d/environments/nature-starter-kit-1-49962](https://assetstore.unity.com/packages/3d/environments/nature-starter-kit-1-49962))
- en: Wispy Skybox ([https://assetstore.unity.com/packages/2d/textures-materials/sky/wispy-skybox-21737](https://assetstore.unity.com/packages/2d/textures-materials/sky/wispy-skybox-21737))
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 薄雾天空盒([https://assetstore.unity.com/packages/2d/textures-materials/sky/wispy-skybox-21737](https://assetstore.unity.com/packages/2d/textures-materials/sky/wispy-skybox-21737))
- en: Planet Earth Free ([https://assetstore.unity.com/packages/3d/environments/sci-fi/planet-earth-free-23399](https://assetstore.unity.com/packages/3d/environments/sci-fi/planet-earth-free-23399))
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地球行星免费版([https://assetstore.unity.com/packages/3d/environments/sci-fi/planet-earth-free-23399](https://assetstore.unity.com/packages/3d/environments/sci-fi/planet-earth-free-23399))
- en: Seamless Texture Pack ([https://assetstore.unity.com/packages/2d/textures-materials/seamless-texture-pack-21934](https://assetstore.unity.com/packages/2d/textures-materials/seamless-texture-pack-21934))
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无缝纹理包 ([https://assetstore.unity.com/packages/2d/textures-materials/seamless-texture-pack-21934](https://assetstore.unity.com/packages/2d/textures-materials/seamless-texture-pack-21934))
- en: And of course, Cute Snowman ([https://assetstore.unity.com/packages/3d/props/cute-snowman-12477](https://assetstore.unity.com/packages/3d/props/cute-snowman-12477))
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当然，还有可爱的雪人 ([https://assetstore.unity.com/packages/3d/props/cute-snowman-12477](https://assetstore.unity.com/packages/3d/props/cute-snowman-12477))
- en: In addition to 3D models, the Asset Store contains an amazing amalgamation of
    development tools, add-ons, audio, and more. The Asset Store, its active community
    of developers, and its huge amount of content is one of the things that has made
    Unity so successful.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 除了3D模型之外，资产商店还包含了一个令人惊叹的开发工具、插件、音频等的混合体。资产商店、其活跃的开发者社区以及其庞大的内容量是Unity成功的原因之一。
- en: The Asset Store is available directly within the Unity Editor. To access it,
    choose **Window** | **Asset Store** and begin exploring.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 资产商店可以直接在Unity编辑器中访问。要访问它，选择**窗口** | **资产商店**并开始探索。
- en: 'To add assets to your project using the Asset Store for example, simply find
    one and select Download, then choose Import to add it to your `Project Assets`
    folder. Asset packs often come with example scenes you can open to explore how
    it looks and works. After that, locate its `Prefab` folder and simply drag any
    prefabs into your own scene. An example is shown here:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用资产商店将资产添加到你的项目中，例如，只需找到它并选择下载，然后选择导入以将其添加到你的`项目资产`文件夹。资产包通常包含你可以打开以探索其外观和功能的示例场景。之后，找到其`预制体`文件夹，只需将任何预制体拖入你自己的场景即可。这里有一个示例：
- en: '![](img/c4613402-acc5-4528-8f63-e62840c74b08.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c4613402-acc5-4528-8f63-e62840c74b08.png)'
- en: 'Furthermore, there are many sites for sharing 3D models, both free and for
    a fee. Some are oriented towards higher-end 3D CAD for engineers. Others cater
    to 3D printing enthusiasts. No matter. Just be sure to look for FBX or OBJ file
    formats of the model so they can be imported into Unity. Some of the more popular
    resource sites include:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有许多用于分享3D模型的网站，既有免费的也有付费的。有些针对工程师的高端3D CAD。其他则迎合3D打印爱好者。无论哪种情况，请确保寻找模型的FBX或OBJ文件格式，以便它们可以被导入到Unity中。一些更受欢迎的资源网站包括：
- en: 3D CAD Browser: [https://www.3dcadbrowser.com/](https://www.3dcadbrowser.com/)
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3D CAD浏览器: [https://www.3dcadbrowser.com/](https://www.3dcadbrowser.com/)
- en: BlenderSwap: [http://www.blendswap.com/](http://www.blendswap.com/)
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BlenderSwap: [http://www.blendswap.com/](http://www.blendswap.com/)
- en: CG Trader: [https://www.cgtrader.com/](https://www.cgtrader.com/)
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CG Trader: [https://www.cgtrader.com/](https://www.cgtrader.com/)
- en: Free3D: [https://free3d.com/](https://free3d.com/)
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Free3D: [https://free3d.com/](https://free3d.com/)
- en: Google Poly: [https://poly.google.com/](https://poly.google.com/)
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Poly: [https://poly.google.com/](https://poly.google.com/)
- en: Microsoft Remix 3D: [https://www.remix3d.com](https://www.remix3d.com)
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft Remix 3D: [https://www.remix3d.com](https://www.remix3d.com)
- en: Sketchfab: [https://sketchfab.com](https://sketchfab.com/)
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sketchfab: [https://sketchfab.com](https://sketchfab.com/)
- en: TurboSquid: [http://www.turbosquid.com/](http://www.turbosquid.com/)
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TurboSquid: [http://www.turbosquid.com/](http://www.turbosquid.com/)
- en: We will use *Google Poly* later in this chapter.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章后面使用 *Google Poly*。
- en: Creating 3D content with Blender
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Blender创建3D内容
- en: Unity offers some basic geometric shapes, but when it comes to more complex
    models, you'll need to go beyond Unity. As we discussed, the Unity Asset Store and
    many sites have tons of amazing models. Where do they come from? Will you run
    into problems while importing them into Unity?
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: Unity提供了一些基本的几何形状，但当我们谈到更复杂的模型时，你需要超越Unity。正如我们讨论的那样，Unity资产商店和许多网站上有大量的惊人模型。它们从哪里来？你在导入到Unity时会遇到问题吗？
- en: I know that this book is about Unity, but we're going on a short side adventure
    right now. We're going to use Blender (version 2.7x), a free and open source 3D
    animation suite ([http://www.blender.org/](http://www.blender.org/)), to make
    a model and then import it into Unity. Grab a coffee and strap yourself in!
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道这本书是关于Unity的，但现在我们将进行一次短暂的侧翼冒险。我们将使用Blender（版本2.7x），这是一个免费的开源3D动画套件([http://www.blender.org/](http://www.blender.org/))，来制作一个模型，然后将其导入到Unity中。来杯咖啡，系好安全带吧！
- en: The plan is not to build anything very fancy right now. We'll just make a cube
    and a simple texture map. The purpose of this exercise is to find out how well
    a one-unit cube in Blender imports with the same scale and orientation into Unity.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 目前计划不是构建任何非常复杂的东西。我们只是制作一个立方体和一个简单的纹理贴图。这个练习的目的是了解在Blender中，一个单位立方体以相同的比例和方向导入Unity的效果如何。
- en: Feel free to skip this section or try a similar experiment using your favorite
    modeling software ([https://en.wikipedia.org/wiki/List_of_3D_modeling_software](https://en.wikipedia.org/wiki/List_of_3D_modeling_software)).
    If you prefer not to follow along or run into problems, a copy of the completed
    files created in this topic is available in the download package for this book.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 随意跳过这一节，或者尝试使用你喜欢的建模软件进行类似的实验（[https://en.wikipedia.org/wiki/List_of_3D_modeling_software](https://en.wikipedia.org/wiki/List_of_3D_modeling_software)）。如果你不想跟随或遇到问题，本主题中创建的完成文件的副本可在本书的下载包中找到。
- en: An introduction to Blender
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Blender简介
- en: 'Open the Blender application. Dismiss the opening splash screen. You will be
    in the Blender editor, which is similar to what''s shown in the following screenshot:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Blender应用程序。关闭启动屏幕。你将进入Blender编辑器，它类似于以下截图所示：
- en: '![](img/91d6b51c-7696-401a-9237-2bc33588fe3d.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/91d6b51c-7696-401a-9237-2bc33588fe3d.png)'
- en: Like Unity, Blender consists of a number of non-overlapping windows, and their
    layout can be customized to suit your needs. However, the Blender interface can
    be more daunting, in part because it integrates a number of different editors
    that can be opened at the same time, in their own panels.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 与Unity类似，Blender由多个非重叠窗口组成，它们的布局可以根据你的需求进行自定义。然而，Blender界面可能更令人畏惧，部分原因是因为它集成了多个可以同时打开的不同编辑器，它们各自有自己的面板。
- en: It's helpful to realize that the default view, as shown in the preceding screenshot,
    contains five different editors!
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 有助于意识到，默认视图，如前述截图所示，包含五个不同的编辑器！
- en: The most obvious editor is the large **3D View**, which I highlighted with a
    (red) rectangle. This is where you can view, move, and organize the objects in
    your Blender scene.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 最明显的编辑器是大的**3D视图**，我用一个（红色）矩形标出了它。这里你可以查看、移动和组织Blender场景中的对象。
- en: 'The following are the other editors that are opened:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是要打开的其他编辑器：
- en: The Info editor, which can be seen along the top edge of the app, has global
    menus and information about the application
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信息编辑器，位于应用程序顶部边缘，包含全局菜单和应用程序信息。
- en: The Timeline editor, which is present along the bottom edge of the app, is for
    animations
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间轴编辑器，位于应用程序底部边缘，用于动画。
- en: The Outliner editor, on the upper right-hand side, has a hierarchical view of
    the objects in your scene
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在右上角的场景大纲编辑器，有一个对象的分层视图。
- en: The Properties editor, which can be seen to the right below the Outliner, is
    a powerful panel that lets you see and modify many properties of the objects in
    the scene
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 属性编辑器，位于大纲视图右侧下方，是一个强大的面板，让你可以看到并修改场景中对象的许多属性。
- en: 'Each editor can have multiple panes. Let''s consider the 3D View editor:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 每个编辑器可以有多个面板。让我们考虑3D视图编辑器：
- en: The large area in the middle is the **3D Viewport**, where you can view, move,
    and organize the objects in your Blender scene.
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中间的大区域是**3D视图窗口**，在这里你可以查看、移动和组织Blender场景中的对象。
- en: Just below the 3D Viewport is the editor **Header**, which is called so although
    it's at the bottom in this case. The Header is a row of menus and tools that provide
    great control over the editor, including view selectors, edit modes, transform
    manipulators, and layer management.
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在3D视图窗口下方是编辑器**标题栏**，尽管它在这个情况下位于底部，但被称为标题栏。标题栏是一行菜单和工具，提供了对编辑器的强大控制，包括视图选择器、编辑模式、变换操纵器和图层管理。
- en: On the left-hand side is the Tool Shelf containing various editing tools that
    can be applied to the currently selected object, which can be organized into tabbed
    groups. The Tool Shelf can be toggled open or closed by grabbing and sliding its
    edge or by pressing the key *T*.
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在左侧是工具架，包含可以应用于当前选中对象的多种编辑工具，这些工具可以组织成标签组。可以通过抓住并滑动其边缘或按*T*键来切换工具架的开启或关闭。
- en: The 3D Viewport also has a **Properties** pane, which may be hidden by default
    and can be toggled open or closed by pressing the key *N*. It provides the property
    settings for the currently selected object.
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3D视图窗口还有一个**属性**面板，默认可能隐藏，可以通过按*N*键切换开启或关闭。它提供了当前选中对象的属性设置。
- en: 'In the upcoming instructions, we will ask you to change the **Interaction Mode**
    of the 3D View editor, say between the Edit Mode and Texture Paint mode. This
    is selected in the Header, as shown in the following screenshot:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的说明中，我们将要求你更改3D视图编辑器的**交互模式**，例如在编辑模式和纹理绘制模式之间切换。这可以在标题栏中找到，如下面的截图所示：
- en: '![](img/e87815ce-185b-45ba-bf48-9811bfd97e25.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e87815ce-185b-45ba-bf48-9811bfd97e25.png)'
- en: The other editors also have the Header panes. The Info editor (at the top of
    the app) is only a Header! The outliner and Properties editors (on the right)
    have their Headers at the top of their panel rather than at the bottom.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 其他编辑器也有标题栏。信息编辑器（在应用顶部）只是一个标题栏！大纲和属性编辑器（在右侧）的标题栏位于面板顶部而不是底部。
- en: Once you recognize this layout, it doesn't look so crowded and confusing.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您熟悉了这个布局，它看起来就不会那么拥挤和混乱。
- en: The Properties editor Header has a wide set of icons, which act like tabs, to
    select the group of properties presented in the rest of the panel. Hovering your
    mouse over the icon (like any of the UI widgets here) will show a tooltip with
    a better hint in regards to what it's for. It's pictured in the following images
    (in a couple of pages) when we get to using it.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 属性编辑器标题栏有一系列图标，它们的作用类似于标签，用于选择面板中显示的属性组。将鼠标悬停在图标上（就像这里的任何UI小部件一样）将显示一个工具提示，提供有关其用途的更好提示。以下图像（在几页中）展示了我们使用它时的样子。
- en: The Blender layout is very flexible. You can even change a panel from one editor
    to another. At the far left of each Header is the Editor Type selector. When you
    click on it, you can see all the options.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: Blender布局非常灵活。您甚至可以更改一个面板从一个编辑器到另一个编辑器。每个标题栏的最左侧是编辑器类型选择器。当您点击它时，您可以看到所有选项。
- en: In addition to the plethora of things that you can click on in the Blender interface,
    you can use just about any command using a keyboard shortcut. If you forget where
    to find a selection, press the space bar and type in your best guess of the command
    name that you're looking for. It just might pop up!
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在Blender界面中可以点击的众多事物外，您还可以使用几乎任何命令的快捷键。如果您忘记了查找选择的位置，请按空格键并输入您对要查找的命令名称的最佳猜测。它可能会突然出现！
- en: 'The following is a screenshot showing the Editor Type selector available in
    Blender:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了Blender中可用的编辑器类型选择器：
- en: '![](img/354e9cb3-bf93-47c2-ba5a-de5a4653806f.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](img/354e9cb3-bf93-47c2-ba5a-de5a4653806f.png)'
- en: A unit cube
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个单位立方体
- en: Now, let's build a unit cube in Blender.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在Blender中构建一个单位立方体。
- en: The default scene may already have objects, including a cube, camera, and a
    light source, as shown earlier in the default Blender window. (Your startup settings
    may be different since that can be configured.)
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 默认场景可能已经包含对象，包括一个立方体、相机和光源，如前面在默认Blender窗口中所示。（由于可以配置，您的启动设置可能不同。）
- en: 'If your startup scene does *not* contain a unit cube, create one, as follows:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的启动场景不包含单位立方体，请按照以下步骤创建一个：
- en: Make sure that the scene is empty by deleting whatever is in it (right-click
    to select, *X* on the keyboard to delete).
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保场景为空，通过删除其中的所有内容（右键选择，按键盘上的*X*键删除）。
- en: Set the 3D cursor to the origin (`0`,`0`,`0`) using *Shift* + *S* (opens the
    Snap options list) | Cursor To Center.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用*Shift* + *S*（打开捕捉选项列表）| 光标到中心将3D光标设置到原点（`0`，`0`，`0`）。
- en: In the left Tool Shelf panel, choose the Create tab and under Mesh select Cube
    to add a cube.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧工具栏面板中，选择创建选项卡，在网格下选择立方体以添加一个立方体。
- en: OK, now we're all on the same page.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在我们都在同一页面上。
- en: Note that in Blender, the reference grid extends in the *x* and *y *axes, and
    *z* is up (unlike Unity, where the *y *axis is up).
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在Blender中，参考网格沿*x*和*y*轴延伸，而*z*轴向上（与Unity不同，在Unity中*y*轴向上）。
- en: 'Furthermore, note that the default cube in Blender has a size of (`2`, `2`,
    `2`). We want a unit cube sitting on the ground plane at the origin. For this,
    follow the following steps:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，请注意，Blender中的默认立方体大小为（`2`，`2`，`2`）。我们想要一个单位立方体位于原点处的地面平面上。为此，请按照以下步骤操作：
- en: Open the Properties pane with the keyboard *N* key
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用键盘*N*键打开属性面板
- en: Navigate to Transform | Scale and set X, Y, Z to (`0.5`, `0.5`, `0.5`)
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到变换 | 缩放并将X、Y、Z设置为（`0.5`，`0.5`，`0.5`）
- en: Navigate to Transform | Location and set Z to `0.5`
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到变换 | 位置并将Z设置为`0.5`
- en: Press the *N* key again to hide the pane
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次按*N*键隐藏面板
- en: You can zoom in using the scroll wheel of the mouse
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用鼠标滚轮进行缩放
- en: For our purposes, also ensure that the current renderer is Blender Render (in
    the drop-down selector on the Info editor—at the top of the app window in the
    center).
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的目的，还要确保当前渲染器是Blender渲染（在信息编辑器的下拉选择器中——在应用窗口顶部的中央）。
- en: UV Texture image
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: UV纹理图像
- en: Let's paint the faces of our cube. 3D computer models in Unity are defined by *meshes*—a
    set of Vector3 points connected with edges, forming triangular-shaped facets.
    When building a model in Blender, you can unwrap a mesh into a flattened 2D configuration
    to define the mapping of texture pixels to the corresponding areas on the mesh
    surface (UV coordinates). The result is called a UV Texture image.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为我们的立方体上色。在Unity中的3D计算机模型由**网格**定义——一组通过边连接的Vector3点，形成三角形面的集合。当在Blender中构建模型时，你可以将网格展开成平面的2D配置，以定义纹理像素到网格表面的相应区域的映射（UV坐标）。结果是称为UV纹理图像。
- en: 'We will create a **UV Texture image** for our cube, as follows:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为我们的立方体创建一个**UV纹理图像**，如下所示：
- en: Go into Edit Mode using the Interaction Mode selector in the bottom Header bar.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用底部标题栏中的交互模式选择器进入编辑模式。
- en: Select *all* (press the *A* key on the keyboard twice) to make sure that all
    the faces are selected.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**所有**（在键盘上按两次*A*键）以确保所有面都被选中。
- en: In the left Tool Shelf panel, select the Shading/UVs tab.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧工具架面板中，选择着色/UV选项卡。
- en: Under UV Mapping click on Unwrap, select Smart UV Project from the drop-down
    list, accept the default values, and click on OK (the result, shown in the following
    screenshot, also shows what the unwrapped cube looks like).
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在UV映射下，点击展开，从下拉列表中选择智能UV投影，接受默认值，然后点击确定（以下截图所示的结果也显示了展开的立方体外观）。
- en: Now, go into the Texture Paint mode using the Interaction Mode selector in the
    bottom Header bar again.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，再次使用底部标题栏中的交互模式选择器进入纹理绘制模式。
- en: We need to define a *paint slot* for our material. Click on Add Paint Slot,
    select Diffuse Color, name it `CubeFaces`, and press OK.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要为我们的材质定义一个**绘制槽**。点击添加绘制槽，选择漫反射颜色，命名为`CubeFaces`，然后按确定。
- en: 'We can now start painting directly on the cube. Paint the front face first,
    as follows:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以直接在立方体上绘制。首先绘制前面，如下所示：
- en: Make a smaller brush. In the left Tool Shelf panel, in the Tools tab, navigate
    to Brush | Radius and enter `8 px`.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用更小的画笔。在左侧工具架面板中，在工具选项卡下，导航到画笔 | 半径并输入`8 px`。
- en: It may be easier to work in an orthographic view. From the menu bar at the bottom,
    navigate to View | View Persp/Ortho.
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在正交视图中工作可能更容易。从底部菜单栏中，导航到视图 | 视图透视/正交。
- en: Then, navigate to View | Front.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，导航到视图 | 前视图。
- en: You can zoom in or out using the mouse scroll wheel if needed.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要，可以使用鼠标滚轮进行缩放或缩小。
- en: With your best handwriting, write the word `Front` using the left-click of the
    mouse and draw.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用你最好的书法，用鼠标左键点击并写下单词`Front`。
- en: Now, the back face.
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，背面。
- en: From the menu bar at the bottom, navigate to View | Back and select this face
    with a right-click.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从底部菜单栏中，导航到视图 | 后视图，并右键单击选择此面。
- en: With your best handwriting, write `Back`.
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用你最好的书法，用鼠标左键点击并写下`Back`。
- en: 'Repeat the above process for the left, right, top, and bottom faces. If at
    some point it''s not painting, make sure that there''s a current face selected.
    Try right-clicking on the face to reselect it. The result should look something
    like this (shown side by side both in the 3D View editor with an orthographic
    perspective and in the UV/Image Editor):'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 对左、右、上、下面重复上述过程。如果在某个时刻无法绘制，请确保已选择当前面。尝试右键单击面以重新选择它。结果应该看起来像这样（在正交视角的3D视图编辑器和UV/图像编辑器中并排显示）：
- en: '![](img/7afaad07-0763-4da3-a0b9-42759928f22c.png)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7afaad07-0763-4da3-a0b9-42759928f22c.png)'
- en: 'Now, we need to save the texture image and set up its properties, as follows:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要保存纹理图像并设置其属性，如下所示：
- en: Change the current Editor Type to UV/Image Editor using the selector on the
    far left of the Header at the bottom of the 3D View editor.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用3D视图编辑器底部标题栏最左侧的选择器将当前编辑类型更改为UV/图像编辑器。
- en: Click on the Browse Image to be linked selector icon (just towards the left
    of the + icon) and choose `CubeFaces` from the list.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击浏览要链接的图像选择器图标（位于+图标左侧），从列表中选择`CubeFaces`。
- en: The Image menu item on the menu bar at the bottom now has an asterisk (Image*)
    indicating that there's an unsaved image. Click on it, select Save As Image, and
    save it as `CubeFaces.png`. Use a folder outside the Unity project.
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 底部菜单栏上的图像菜单项现在有一个带星号的（图像*），表示有一个未保存的图像。点击它，选择另存为图像，并将其保存为`CubeFaces.png`。使用Unity项目外的文件夹。
- en: On the right-hand side, in the Properties editor panel, find the long row of
    icons in its Header and select the Texture one (third from the last.) It may be
    hidden if the panel isn't wide enough; you can scroll down with your mouse to
    show it, as shown in the following screenshot:![](img/a99a7f66-7b06-42ec-942a-7d15f83ba191.png)
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧的属性编辑器面板中，在其标题中找到长排图标并选择纹理图标（倒数第三个）。如果面板不够宽，它可能被隐藏；您可以用鼠标向下滚动以显示它，如下面的截图所示：![](img/a99a7f66-7b06-42ec-942a-7d15f83ba191.png)
- en: Within the Texture properties, change Type to Image or Movie.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在纹理属性中，将类型更改为图像或电影。
- en: Then, in the Image group of properties, click on the Browse Image to be Linked
    selector icon (as shown in the following screenshot) and choose `CubeFaces`:![](img/5c22d5b4-bd3a-469c-a66b-5edd9e424720.png)
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在属性中的图像组中，点击浏览要链接的图像选择器图标（如下面的截图所示）并选择`CubeFaces`：![](img/5c22d5b4-bd3a-469c-a66b-5edd9e424720.png)
- en: You should see the labeled faces texture image in the Preview window.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该在预览窗口中看到标记的面纹理图像。
- en: 'Good! Let''s save the Blender model, as follows:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 好的！让我们按照以下方式保存Blender模型：
- en: Select File from the top main menu bar in the Info editor and click on Save
    (or press *Ctrl* + *S*).
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在信息编辑器顶部主菜单栏中选择文件，然后点击保存（或按*Ctrl* + *S*）。
- en: Use the same folder as the one where you saved the texture image.
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用与保存纹理图像相同的文件夹。
- en: Name it `UprightCube.blend` and click on Save Blender File.
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其命名为`UprightCube.blend`并点击保存Blender文件。
- en: We should now have two files in a folder, `UprightCube.blend` and `CubeFaces.png`.
    I use a folder named `Models/` in the root of my Unity project.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们应该有一个文件夹中的两个文件，`UprightCube.blend`和`CubeFaces.png`。我在Unity项目的根目录下使用名为`Models/`的文件夹。
- en: We recommend you then export the model as FBX format. This is a standard format
    for Unity. (Unity can import Blend files but may require you always have Blender
    installed on the same system). Use **File** | **Export** | **FBX** to save the
    `.fbx` version.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议您然后以FBX格式导出模型。这是Unity的标准格式。（Unity可以导入Blend文件，但可能需要在同一系统上安装Blender）。使用**文件**
    | **导出** | **FBX**来保存`.fbx`版本。
- en: Wow, that was a lot. Don't worry if you didn't get it all. Blender can be daunting.
    However, Unity needs models. You can always download someone else's models from
    the Unity Asset Store and other 3D model sharing sites, or you can learn to make
    your own. Haha! Seriously, it's a good thing to start to learn. Actually, with
    VR, it's gotten a lot easier as we'll show you later in this chapter.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 哇，这太多了。如果您没有全部理解，不要担心。Blender可能有点令人畏惧。然而，Unity需要模型。您可以从Unity资产商店和其他3D模型共享网站下载他人的模型，或者您可以学习制作自己的模型。哈哈！说真的，开始学习是个好主意。实际上，随着VR的发展，它已经变得容易多了，我们将在本章后面向您展示。
- en: Importing into Unity
  id: totrans-279
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入到Unity中
- en: 'Back in Unity, we now want to import both the files, `UprightCube.fbx` and
    `CubeFaces.png`, one at a time, as follows:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity中，我们现在想逐个导入两个文件，`UprightCube.fbx`和`CubeFaces.png`，如下所示：
- en: In the Project panel, select the top-level Assets folder, navigate to Create
    | Folder, and rename the folder to `Models`.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目面板中，选择顶级Assets文件夹，导航到创建 | 文件夹，并将文件夹重命名为`Models`。
- en: An easy way to import files into Unity is to just drag and drop the `.fbx` (or `.blend`)
    file from the Windows Explorer (or Mac Finder) window into the Project panel Assets/Models
    folder and drag and drop the `.png` file into the Assets/Textures folder (or you
    can use Assets | Import New Asset... from the main menu bar).
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件导入Unity的一个简单方法是将`.fbx`（或`.blend`）文件从Windows资源管理器（或Mac Finder）窗口拖放到项目面板Assets/Models文件夹中，并将`.png`文件拖放到Assets/Textures文件夹中（或者您也可以从主菜单栏选择Assets
    | Import New Asset...）。
- en: Add `UprightCube` to the scene by dragging it from the Assets/Models folder
    where it was just imported into the Scene view.
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`UprightCube`从刚刚导入到Assets/Models文件夹中拖动到场景视图中。
- en: Set its position so that it's away from the other objects. I left mine at Position
    (`2.6`, `2.2`, `-3`).
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置其位置，使其远离其他对象。我将其设置为位置（`2.6`，`2.2`，`-3`）。
- en: Drag the `CubeFaces` texture from the Assets/Textures folder into the Scene
    view, hovering over the just added `UprightCube` so that it receives the texture,
    and drop the texture onto the cube.
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`CubeFaces`纹理从Assets/Textures文件夹拖动到场景视图中，悬停在刚刚添加的`UprightCube`上，使其接收纹理，并将纹理拖放到立方体上。
- en: 'The scene should now look something like this:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 场景现在应该看起来像这样：
- en: '![](img/d903d01a-6f7e-45ea-a4a9-403a8b9a3dac.png)'
  id: totrans-287
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d903d01a-6f7e-45ea-a4a9-403a8b9a3dac.png)'
- en: A few observations
  id: totrans-288
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一些观察结果
- en: The back of the cube is facing us. Is that a mistake? Actually, it makes sense
    since the current viewpoint is looking forward. So, we should see the back of
    the cube. If you didn't notice already, the same goes for Ethan. It also seems
    like the cube has a one-unit dimension.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 立方体的背面朝向我们。这是错误吗？实际上，由于当前视角是向前看的，所以这是有道理的。因此，我们应该看到立方体的背面。如果你还没有注意到，对Ethan来说也是同样的情况。立方体似乎也有一个单位的维度。
- en: However, on closer examination, in the cube's Inspector panel, you'll see it
    imported with the scale that we gave it in Blender (`0.5`, `0.5`, `0.5`). Also,
    it has an X rotation of -90 (minus 90). Thus, if we reset the transform, that
    is, the scale to (`1`,`1`,`1`), it'll be 2 units in our world space and tipped
    over (so, don't reset it).
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在仔细检查后，在立方体的检查器面板中，你会看到它以我们在Blender中给出的比例导入（`0.5`，`0.5`，`0.5`）。它还有一个-90度的X旋转（负90度）。因此，如果我们重置变换，即比例到（`1`，`1`，`1`），它将在我们的世界空间中是2个单位，并且倾斜（所以不要重置它）。
- en: There's not much that we can do to compensate for the rotational adjustment
    without going back to Blender. But the scale can be adjusted in the model's Import
    Settings (in Inspector).
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在不回到Blender的情况下，我们无法做太多来补偿旋转调整。但在模型的导入设置（在检查器中）中可以调整比例。
- en: Blender's default up direction is Z, while Unity's is Y. Importing with a -90
    X rotation adjusts for that. An imported scale can be adjusted in the object's
    Inspector panel's Import Settings.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: Blender的默认向上方向是Z，而Unity的是Y。导入时使用-90度的X旋转来调整这一点。导入的比例可以在对象的检查器面板的导入设置中调整。
- en: 'We have more control when it comes to exporting FBX from Blender. As shown
    in the screenshot, during Export you can customize the settings, for example,
    making Y the up axis and Z the forward one and setting the scale factor for import:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 在从Blender导出FBX时，我们有更多的控制权。如图所示，在导出过程中，你可以自定义设置，例如，将Y设置为向上轴，Z设置为向前轴，并设置导入的比例因子：
- en: '![](img/0548128a-d68d-431e-914d-63a9ce46fff3.png)'
  id: totrans-294
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0548128a-d68d-431e-914d-63a9ce46fff3.png)'
- en: Before ending the preceding process, select `UprightCube` from the Hierarchy
    panel and drag it into the Project panel's Assets folder. (You may consider making
    an Assets/Prefabs subfolder and placing it into that.) This makes it a reusable
    prefab, texture image and all.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 在结束前面的过程之前，从层次结构面板中选择`UprightCube`并将其拖入项目面板的资产文件夹中。（你可能考虑创建一个Assets/Prefabs子文件夹并将其放入其中。）这使得它成为一个可重用的预制件，包括纹理图像。
- en: There are some important lessons in this exercise (other than having learned
    a little bit about Blender) that apply to any 3D Unity project, including the
    VR ones. Normally, you will be importing models that are much more complex than
    a cube. You will likely run into issues related to data conversion, scale, orientation,
    and UV texture images that might be confusing at best. If this happens, try to
    break the problem into smaller, more isolated scenarios. Do little tests to gain
    insight into how applications exchange data and to help you understand which parameter
    tweaks might be necessary.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中（除了学习了一点关于Blender的知识之外）还有一些重要的经验教训，这些经验教训适用于任何3D Unity项目，包括VR项目。通常，你将导入比立方体复杂得多的模型。你可能会遇到与数据转换、比例、方向和可能令人困惑的UV纹理图像相关的问题。如果发生这种情况，尝试将问题分解成更小、更独立的场景。进行一些小测试，以了解应用程序如何交换数据，并帮助你理解哪些参数调整可能是必要的。
- en: Creating 3D content in VR
  id: totrans-297
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在VR中创建3D内容
- en: In addition to traditional 3D modeling software like Blender (and ZBrush, 3D
    Studio Max, Maya, and so on) there is a new generation of 3D design apps that
    let you to directly create inside VR. After all, it's pretty awkward trying to
    use an inherently 2D desktop screen with a 2D mouse to form, sculpt, assemble,
    and manipulate 3D models. If only it could be more like real-life sculpture and
    construction. So, why not just do it directly in 3D? In VR!
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 除了像Blender（以及ZBrush、3D Studio Max、Maya等等）这样的传统3D建模软件之外，还有新一代的3D设计应用程序，允许你直接在VR中创建内容。毕竟，用本质上2D的桌面屏幕和2D鼠标来形成、雕刻、组装和操作3D模型是很尴尬的。如果它能够更像现实生活中的雕塑和建筑会怎样？所以，为什么不直接在3D中做呢？在VR中！
- en: Like other digital platforms, we can categorize VR apps into ones that present
    an experience, ones where you interact to engage with the environment, and ones
    where you actually create content, for yourself or for sharing. An example of
    the latter and one of the first to be widely successful is Google Tilt Brush ([https://www.tiltbrush.com/](https://www.tiltbrush.com/))
    where you paint in 3D. This is one my favorite go-to apps when introducing VR
    to family and friends. Tilt Brush lets you paint in 3D in virtual reality.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 就像其他数字平台一样，我们可以将VR应用分为三类：一类是提供体验的应用，一类是让你与环境互动以参与其中的应用，还有一类是实际创建内容的应用，无论是为自己还是为了分享。后者是一个成功的例子，也是最早广泛成功的一个，那就是谷歌倾斜画笔（[https://www.tiltbrush.com/](https://www.tiltbrush.com/)），在那里你可以进行3D绘画。这是我在向家人和朋友介绍VR时最喜欢使用的应用之一。倾斜画笔让你能够在虚拟现实中进行3D绘画。
- en: 'Other VR 3D with sculpting and painting tools, to name just a few, include:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 其他具有雕塑和绘画工具的VR 3D应用，仅举几个例子，包括：
- en: '**Google Blocks**: Low poly modeling ([https://vr.google.com/blocks/](https://vr.google.com/blocks/))'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Blocks**：低多边形建模（[https://vr.google.com/blocks/](https://vr.google.com/blocks/)）'
- en: '**Oculus Medium**: Sculpt, model, paint in VR ([https://www.oculus.com/medium/](https://www.oculus.com/medium/))'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Oculus Medium**：在VR中进行雕塑、建模和绘画（[https://www.oculus.com/medium/](https://www.oculus.com/medium/)）'
- en: '**Oculus Quill**: A VR illustration tool ([https://www.facebook.com/QuillApp/](https://www.facebook.com/QuillApp/))'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Oculus Quill**：VR插画工具（[https://www.facebook.com/QuillApp/](https://www.facebook.com/QuillApp/)）'
- en: '**Kudon**: Surface and volume sculpting ([http://store.steampowered.com/app/479010/Kodon/)](http://store.steampowered.com/app/479010/Kodon/))'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kudon**：表面和体积雕塑（[http://store.steampowered.com/app/479010/Kodon/](http://store.steampowered.com/app/479010/Kodon/)）'
- en: '**MasterpieceVR**: VR sculpting and painting ([https://www.masterpiecevr.com/](https://www.masterpiecevr.com/))'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MasterpieceVR**：VR雕塑和绘画（[https://www.masterpiecevr.com/](https://www.masterpiecevr.com/)）'
- en: '**Microsoft Paint 3D**: Easy 3D sculpting and painting bundled free with Windows
    ([https://www.microsoft.com/en-us/store/p/paint-3d/9nblggh5fv99](https://www.microsoft.com/en-us/store/p/paint-3d/9nblggh5fv99))'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Microsoft Paint 3D**：与Windows捆绑的简单3D雕塑和绘画（[https://www.microsoft.com/en-us/store/p/paint-3d/9nblggh5fv99](https://www.microsoft.com/en-us/store/p/paint-3d/9nblggh5fv99)）'
- en: 'Making stuff and playing with it in VR is creative and fun, but to be useful
    and productive, you need to be able to share your creations outside of the app.
    Most VR sculpting tools let you export the models to share on the Internet, export
    in FBX file format, for example, and import them into Unity. There are two different
    workflows to do this:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 在VR中制作和玩耍是创造性和有趣的，但要变得有用和高效，你需要能够将你的作品分享到应用程序之外。大多数VR雕塑工具允许你将模型导出以在互联网上分享，例如导出为FBX文件格式，并将它们导入到Unity中。有两种不同的工作流程来完成这项任务：
- en: '**Export/Import**: In the first workflow you make a model and export it to
    a compatible format, like FBX. This is akin to traditional 3D software like we
    did with Blender.'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导出/导入**：在第一个工作流程中，你创建一个模型并将其导出为兼容格式，如FBX。这类似于我们用Blender使用的传统3D软件。'
- en: '**Publish/Import**: The second workflow is to upload it to a sharing service
    and subsequently download and install it into your Unity project.'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布/导入**：第二种工作流程是将它上传到共享服务，然后下载并安装到你的Unity项目中。'
- en: In this section, we will use Tilt Brush as an example. Suppose you have Google
    Tilt Brush and a compatible VR rig. Further, suppose you have a creation you'd
    like to integrate with your VR app with Unity. Let's walk through each workflow
    process.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将以倾斜画笔为例。假设你拥有谷歌倾斜画笔和兼容的VR设备。进一步假设你有一个想要与Unity VR应用集成的作品。让我们逐一了解每个工作流程过程。
- en: I opened Tilt Brush in VR and created a masterpiece using the Paper ribbon brush.
    I call it *TiltBox*, consistent with the cube theme we're using in this chapter.
    I know, it's beautiful.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 我在VR中打开了倾斜画笔，并使用纸带笔刷创作了一幅杰作。我称之为*TiltBox*，与本章中使用的立方体主题一致。我知道，它很美。
- en: The Tilt Brush features and user interface presented here (at the time of writing)
    are considered by Google to be in beta or experimental and are subject to change
    by the time you read this.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 这里（在撰写本文时）展示的倾斜画笔功能和用户界面，谷歌认为它们处于测试或实验阶段，并在你阅读本文时可能发生变化。
- en: '![](img/6d4e7291-7f8d-46cf-97da-f6830331240f.png)'
  id: totrans-313
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6d4e7291-7f8d-46cf-97da-f6830331240f.png)'
- en: Exporting and importing Tilt Brush models
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导出和导入倾斜画笔模型
- en: We are going to export our model as FBX and then import it into Unity. This
    is an advanced topic so if you're new to Unity you may want to skip this topic
    for now and look at the *Publishing and importing with Google Poly* section instead.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将导出我们的模型为 FBX，然后将其导入到 Unity 中。这是一个高级主题，如果您是 Unity 新手，您可能现在想跳过这个主题，转而查看 *使用
    Google Poly 发布和导入* 部分。
- en: In Tilt Brush, to export, go to the Save panel and choose the More Options… | Labs
    | Export menu. (Note the location of the Export option may change in a future
    release.)
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Tilt Brush 中，要导出，请转到“保存”面板并选择“更多选项… | 实验室 | 导出”菜单。（注意，导出选项的位置可能在未来的版本中发生变化。）
- en: 'The default folder where your files are saved in Windows is `Documents/Tilt
    Brush/Exports/[DrawingName]/`. If you turn your right-hand controller around you''ll
    discover an Info panel on the back, which is a message console that reports the
    actual pathname of the drawing on your system, as shown here:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 中，您的文件默认保存在 `Documents/Tilt Brush/Exports/[DrawingName]/` 文件夹中。如果您将右手控制器旋转一下，您会发现后面有一个信息面板，这是一个消息控制台，它会报告您系统上绘图的实际路径名，如图所示：
- en: '![](img/8833c058-06c5-4fe3-853f-aefbe507d7cf.png)'
  id: totrans-318
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8833c058-06c5-4fe3-853f-aefbe507d7cf.png)'
- en: The folder will contain several files, including the `.fbx` of the model and
    the `.png`'s of the brush textures (not used, as the Tilt Brush Toolkit also provides
    them).
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件夹将包含多个文件，包括模型的 `.fbx` 文件和笔刷纹理的 `.png` 文件（未使用，因为 Tilt Brush Toolkit 也提供了它们）。
- en: 'To import into Unity you need the Tilt Brush Toolkit Unity package. The Google
    Poly package includes the toolkit (install from the Asset Store as described in
    the next topic). Or install it directly from GitHub, as follows:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 要导入到 Unity，您需要 Tilt Brush Toolkit Unity 包。Google Poly 包包含工具包（如下一主题所述，从资产商店安装）。或者您可以直接从
    GitHub 安装，如下所示：
- en: Go to [https://github.com/googlevr/tilt-brush-toolkit](https://github.com/googlevr/tilt-brush-toolkit) and
    use the download link for `tiltbrush-UnitySDK-vNN.N.N.unitypackage` (via [https://github.com/googlevr/tilt-brush-toolkit/releases](https://github.com/googlevr/tilt-brush-toolkit/releases))
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 [https://github.com/googlevr/tilt-brush-toolkit](https://github.com/googlevr/tilt-brush-toolkit)
    并使用 `tiltbrush-UnitySDK-vNN.N.N.unitypackage` 的下载链接（通过 [https://github.com/googlevr/tilt-brush-toolkit/releases](https://github.com/googlevr/tilt-brush-toolkit/releases)）
- en: Import the toolkit in Unity using Assets | Import Package | Custom Package…,
    then press Import
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用“资产 | 导入包 | 自定义包…”在 Unity 中导入工具包，然后按导入。
- en: You'll find that the toolkit includes assets for rendering brushes.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 您会发现工具包包括用于渲染笔刷的资产。
- en: There is also a `README` file in the `Exports` folder with details about your
    Tilt Brush version and export capabilities, including how to use the `CFG` file
    for tweaking various options for advanced users.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 在“导出”文件夹中还有一个 `README` 文件，其中包含有关您的 Tilt Brush 版本和导出功能的信息，包括如何使用 `CFG` 文件为高级用户调整各种选项。
- en: 'Now we can import the drawing''s FBX:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以导入绘制的 FBX：
- en: Drag the FBX file into your Project Assets (or use Assets | Import New Asset…).
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 FBX 文件拖放到您的项目资产中（或使用“资产 | 导入新资产…”）。
- en: Ignore any materials created by the import; we will use those provided in the
    toolkit. You can disable this in the model’s Import settings Materials **|** Import
    **Materials** uncheck, and then click Apply.
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 忽略由导入创建的任何材质；我们将使用工具包中提供的材质。您可以在模型的导入设置中禁用此功能，在“材质 **|** 导入 **材质**”处取消选中，然后点击应用。
- en: You can now drag the model to your scene.
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在可以将模型拖放到场景中。
- en: Locate the brush material for your sketch in `Assets/TiltBrush/Assets/Brushes/`.
    In our case, the sketch uses Paper brush strokes, located in the `Basic/Paper/`
    subfolder.
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Assets/TiltBrush/Assets/Brushes/` 中找到您草图使用的笔刷材质。在我们的例子中，草图使用的是纸笔刷笔触，位于 `Basic/Paper/`
    子文件夹中。
- en: Drag the material onto your sketch strokes as needed.
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据需要将材质拖放到您的草图笔触上。
- en: Your scene now contains your Tilt Brush sketch. For more advanced features including
    audio reactive features, animations, and VR teleportation, please refer to the
    Tilt Brush documentation and example scenes.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 您的场景现在包含您的 Tilt Brush 草图。有关更多高级功能，包括音频响应功能、动画和 VR 传送，请参阅 Tilt Brush 文档和示例场景。
- en: That was not too difficult although a bit tedious. Other 3D modeling apps require
    a similar process to export models and import into Unity.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有点繁琐，但这并不太难。其他 3D 建模应用程序也需要类似的过程来导出模型并将其导入到 Unity 中。
- en: Publishing and importing using Google Poly
  id: totrans-333
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Google Poly 发布和导入
- en: Fortunately, Google has made things a whole lot easier with the introduction
    of Google Poly ([https://poly.google.com/](https://poly.google.com/)) as a place
    to publish, browse, and download free 3D objects created with Google Tilt Brush
    and Google Blocks (and other apps that create OBJ files with materials).
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，Google通过引入Google Poly ([https://poly.google.com/](https://poly.google.com/))作为一个发布、浏览和下载使用Google
    Tilt Brush和Google Blocks（以及其他创建带有材质的OBJ文件的APP）创建的免费3D对象的地方，使事情变得容易得多。
- en: 'I don''t mean to sound like a Google fanboy, but let''s stick to the Tilt Brush
    theme. Within Tilt Brush, it is very easy to publish your sketches to Google Poly
    with the click of a button. And importing Poly models into Unity is equally easy
    with the Poly Toolkit Unity package available on the Asset Store. Let''s go through
    it:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 我并不是要听起来像是一个Google粉丝，但让我们继续Tilt Brush的主题。在Tilt Brush中，通过点击按钮很容易将您的草图发布到Google
    Poly。并且使用资产商店中可用的Poly Toolkit Unity包，将Poly模型导入Unity同样简单。让我们来了解一下：
- en: Poly is not just for Unity developers. Google provides SDK for access from many
    platforms. See [https://developers.google.com/poly/](https://developers.google.com/poly/).
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: Poly不仅仅是为Unity开发者准备的。Google为多个平台提供了SDK以进行访问。请参阅[https://developers.google.com/poly/](https://developers.google.com/poly/)。
- en: Within Tilt Brush, first, ensure that you are logged into your Google account
    (My Profile).
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Tilt Brush中，首先，确保您已登录到您的Google账户（我的资料）。
- en: On the Save menu panel, choose the cloud upload option, as shown. This will
    upload your sketch to Poly.
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“保存”菜单面板上，选择如图所示的云上传选项。这将把您的草图上传到Poly。
- en: Then complete the publishing step in your browser (out of VR), and press Publish.
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后在浏览器（非VR）中完成发布步骤，并按“发布”。
- en: Note that Poly Toolkit includes the Tilt Brush Toolkit. If you already imported
    the Tilt Brush toolkit into your project from the previous section, we suggest
    you delete it (and the third-party folders) first before importing Poly to avoid
    conflict.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，Poly Toolkit包括Tilt Brush Toolkit。如果您已经在上一节将Tilt Brush toolkit导入到您的项目中，我们建议您在导入Poly之前先删除它（以及第三方文件夹），以避免冲突。
- en: 'In Unity:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity中：
- en: Open the Asset Store panel (Window | Asset Store)
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开资产商店面板（窗口 | 资产商店）。
- en: Search for `Poly Toolkit`, then Download and Import the Poly Toolkit asset package
    into your project ([https://assetstore.unity.com/packages/templates/systems/poly-toolkit-104464](https://assetstore.unity.com/packages/templates/systems/poly-toolkit-104464))
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索“Poly Toolkit”，然后下载并将Poly Toolkit资产包导入到您的项目中（[https://assetstore.unity.com/packages/templates/systems/poly-toolkit-104464](https://assetstore.unity.com/packages/templates/systems/poly-toolkit-104464)）。
- en: 'Note that the toolkit installs a new Poly menu in the Unity menu bar. Choose
    Poly | Browse Assets… to open the Poly browser panel, as shown:'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意，工具包在Unity菜单栏中安装了一个新的Poly菜单。选择Poly | 浏览资产…以打开Poly浏览器面板，如图所示：
- en: '![](img/6b82dfb7-bf8a-4bd4-9b22-82288df138bf.png)'
  id: totrans-345
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6b82dfb7-bf8a-4bd4-9b22-82288df138bf.png)'
- en: This panel can be docked in the Unity editor by dragging its tab
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过拖动其标签将其面板停靠在Unity编辑器中。
- en: Before you can browse your own uploads, you must sign in using the Sign In button
    in the upper right
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您浏览自己的上传内容之前，您必须使用右上角的“登录”按钮进行登录。
- en: Then, in the Poly Toolkit panel's Show selection, choose Your Uploads
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在Poly Toolkit面板的“显示选择”中，选择“您的上传”。
- en: Locate the model you wish to import. Its page includes a number of import options,
    including scaling and recentering the model transform
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位您希望导入的模型。其页面包括多个导入选项，包括缩放和重新定位模型变换。
- en: Choose Import Into Project
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“导入到项目”。
- en: By default, it will import the model into the `Project Assets/Poly/Assets/`
    folder as a prefab
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，它将模型导入到`Project Assets/Poly/Assets/`文件夹中作为一个预制件。
- en: Drag the model's prefab from the folder into your scene
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模型的预制件从文件夹拖到您的场景中。
- en: 'That''s it. You now have a world of 3D models at your fingertips: ones you
    created and published on Poly and others you''ve discovered on Poly, the Unity
    Asset store, or the plethora of other 3D model sites you can explore.'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样。现在您手边就有了一个3D模型的世界：您在Poly上创建并发布的模型，以及您在Poly、Unity资产商店或您能探索的众多其他3D模型网站上发现的模型。
- en: Editing Unity in VR with EditorXR
  id: totrans-354
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用EditorXR在VR中编辑Unity
- en: In this chapter, we have learned about the Unity Editor—a tool for creating
    3D scenes and projects on a 2D computer screen. We also learned a bit about Blender—a
    tool for creating 3D assets on at 2D computer screen. Then we progressed to the
    new generation of 3D asset creation tools in virtual reality including Tilt Brush
    and Poly. Now we'll explore creating VR scenes directly in virtual reality too!
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了 Unity 编辑器——一个在 2D 计算机屏幕上创建 3D 场景和项目的工具。我们还了解了一些关于 Blender 的知识——一个在
    2D 计算机屏幕上创建 3D 资源的工具。然后我们进入了虚拟现实中的新一代 3D 资源创建工具，包括 Tilt Brush 和 Poly。现在我们还将探索如何在虚拟现实中直接创建
    VR 场景！
- en: '**Unity EditorXR** (**EXR**) is a new experimental feature of Unity (at time
    of writing) where you can edit your 3D scenes directly in VR rather than on your
    2D monitor. In this section, we may be getting ahead of ourselves in more ways
    than one. This is both an advanced topic and an experimental one. If you are just
    getting started with VR, or if you are just getting started with Unity, you may
    want to skip this topic for now and come back at a later time.'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '**Unity 编辑器XR**（**EXR**）是 Unity（截至撰写时）的一个新实验性功能，您可以在 VR 中直接编辑您的 3D 场景，而不是在您的
    2D 监视器上。在本节中，我们可能在多个方面都走在了前面。这是一个高级话题，也是一个实验性话题。如果您刚开始接触 VR，或者刚开始使用 Unity，您可能现在想跳过这个话题，稍后再回来。'
- en: EXR is an advanced topic because it assumes you are comfortable with using the
    Unity Editor windows, are used to thinking in 3D, and are somewhat experienced
    in working with 3D assets. It also assumes you have a VR rig with tracking hand
    controllers, like Oculus Rift and HTC Vive. You will need a powerful PC with a
    high-end graphics card if you hope to have any chance of a smooth, comfortable
    experience. And last but not least, some of EXR's user interaction conventions
    take some learning and getting used to.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: EXR 是一个高级话题，因为它假设您熟悉使用 Unity 编辑器窗口，习惯于 3D 思维，并且在处理 3D 资源方面有一些经验。它还假设您有一个配备跟踪手控器的
    VR 设备，如 Oculus Rift 和 HTC Vive。如果您希望获得流畅、舒适的体验，您需要一个配备高端显卡的强大 PC。最后但同样重要的是，EXR
    的一些用户交互约定需要学习和适应。
- en: 'Despite that, EXR is a pretty sweet project that you could start using today
    to be productive. Especially if you''re not afraid of software that is experimental.
    This also means that the UI we describe in this book is certainly subject to change.
    (For example, at this moment in time the package is being rebranded from EditorVR
    to EditorXR and EXR). Current links to information include:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，EXR 是一个相当不错的项目，您可以从今天开始使用以提高生产力。特别是如果您不害怕使用实验性软件。这也意味着我们在这本书中描述的 UI 一定会发生变化。（例如，在这个时候，该包正在从
    EditorVR 重命名为 EditorXR 和 EXR）。当前的信息链接包括：
- en: Getting started presentation: [https://docs.google.com/presentation/d/1THBAjLV267NVvZop9VLuUSNx1R2hyp8USgOc8110Nv8/edit#slide=id.g1e97811ad3_2_17](https://docs.google.com/presentation/d/1THBAjLV267NVvZop9VLuUSNx1R2hyp8USgOc8110Nv8/edit#slide=id.g1e97811ad3_2_17)
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 入门演示文稿：[https://docs.google.com/presentation/d/1THBAjLV267NVvZop9VLuUSNx1R2hyp8USgOc8110Nv8/edit#slide=id.g1e97811ad3_2_17](https://docs.google.com/presentation/d/1THBAjLV267NVvZop9VLuUSNx1R2hyp8USgOc8110Nv8/edit#slide=id.g1e97811ad3_2_17)
- en: Getting started documentation: [https://docs.google.com/document/d/1xWunGC3NJoDRBBz44gxpMUAh3SmedtNK12LqACyy2L0/edit#heading=h.9hlhay6ebu98](https://docs.google.com/document/d/1xWunGC3NJoDRBBz44gxpMUAh3SmedtNK12LqACyy2L0/edit#heading=h.9hlhay6ebu98)
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 入门文档：[https://docs.google.com/document/d/1xWunGC3NJoDRBBz44gxpMUAh3SmedtNK12LqACyy2L0/edit#heading=h.9hlhay6ebu98](https://docs.google.com/document/d/1xWunGC3NJoDRBBz44gxpMUAh3SmedtNK12LqACyy2L0/edit#heading=h.9hlhay6ebu98)
- en: EditorXR community forum: [https://forum.unity3d.com/forums/editorvr.126/](https://forum.unity3d.com/forums/editorvr.126/)
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EditorXR 社区论坛：[https://forum.unity3d.com/forums/editorvr.126/](https://forum.unity3d.com/forums/editorvr.126/)
- en: GitHub repository: [https://github.com/Unity-Technologies/EditorVR](https://github.com/Unity-Technologies/EditorVR)
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub 仓库：[https://github.com/Unity-Technologies/EditorVR](https://github.com/Unity-Technologies/EditorVR)
- en: Another reason EXR is an advanced topic this early in this book is that we need
    to enable VR in our project, a topic we do not get to until the next chapter.
    But we'll walk you through it now quickly without a lot of explanation.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个原因是在本书的早期就讨论 EXR 是一个高级话题，是因为我们需要在我们的项目中启用 VR，这是一个我们直到下一章才涉及的话题。但我们会快速带您了解，而不进行过多解释。
- en: Setting up EditorXR
  id: totrans-364
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 EditorXR
- en: 'To get started using EXR in your projects, download and install the Unity package.
    By the time you read this, it may already be bundled with the Unity Download Assistant
    or available in the Asset Store:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始在项目中使用 EXR，请下载并安装 Unity 包。到您阅读此内容时，它可能已经包含在 Unity 下载助手或资产商店中：
- en: Download the EditorXR Unity package ([https://github.com/Unity-Technologies/EditorXR/releases](https://github.com/Unity-Technologies/EditorXR/releases)).
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载EditorXR Unity包（[https://github.com/Unity-Technologies/EditorXR/releases](https://github.com/Unity-Technologies/EditorXR/releases)）。
- en: Import it into your project (Assets | Import Package | Custom Package…).
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其导入到你的项目中（资源 | 导入包 | 自定义包…）。
- en: If you are using a version earlier than Unity 2018, download and import Text
    Mesh Pro from the Asset Store ([https://assetstore.unity.com/packages/essentials/beta-projects/textmesh-pro-84126](https://assetstore.unity.com/packages/essentials/beta-projects/textmesh-pro-84126)),
    a free asset from Unity Technologies.
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你使用的是Unity 2018之前的版本，请从资源商店下载并导入Text Mesh Pro（[https://assetstore.unity.com/packages/essentials/beta-projects/textmesh-pro-84126](https://assetstore.unity3d.com/packages/essentials/beta-projects/textmesh-pro-84126)），这是Unity
    Technologies提供的一个免费资源。
- en: If you are using VIVE, download and import the SteamVR Plugin from the Asset
    Store ([https://www.assetstore.unity3d.com/en/#!/content/32647](https://www.assetstore.unity3d.com/en/#!/content/32647)).
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你使用的是VIVE，请从资源商店下载并导入SteamVR插件（[https://www.assetstore.unity3d.com/en/#!/content/32647](https://www.assetstore.unity3d.com/en/#!/content/32647)）。
- en: If you are using Oculus Rift with Touch controllers, download and import the
    Oculus Utilities for Unity ([https://developer3.oculus.com/downloads/](https://developer3.oculus.com/downloads/)).
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你使用的是带有触摸控制器的Oculus Rift，请下载并导入Oculus Utilities for Unity（[https://developer3.oculus.com/downloads/](https://developer3.oculus.com/downloads/)）。
- en: Set up your default VR platform in Player Settings (Edit | Project Settings
    | Player). Find the XR Settings section (at bottom of the Inspector panel) and
    check the Virtual Reality Supported checkbox.
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在玩家设置中设置你的默认VR平台（编辑 | 项目设置 | 玩家）。找到XR设置部分（检查器面板底部），并勾选虚拟现实支持复选框。
- en: Add the Virtual Reality SDKs for Oculus and/or OpenVR.
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加Oculus和/或OpenVR的虚拟现实SDK。
- en: 'If you are using Oculus Rift with touch controllers, make sure the Oculus one
    comes first, as shown:'
  id: totrans-373
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你使用带有触摸控制器的Oculus Rift，请确保Oculus的版本排在第一位，如图所示：
- en: '![](img/abccaebe-eb93-4531-9507-1401327bc54b.png)'
  id: totrans-374
  prefs: []
  type: TYPE_IMG
  zh: '![](img/abccaebe-eb93-4531-9507-1401327bc54b.png)'
- en: 'When you’re ready to launch into EXR:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 当你准备好进入EXR时：
- en: Select Windows | EditorXR
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“Windows”|“EditorXR”
- en: If necessary, press Toggle Device View to make the VR view active
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如有必要，按“切换设备视图”以使VR视图生效
- en: Then put on your headset
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后戴上你的头戴式设备
- en: Now you can access much of the same editing features found in Unity Editor but
    within VR.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以在VR中访问在Unity编辑器中找到的许多相同的编辑功能。
- en: Using EditorXR
  id: totrans-380
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用EditorXR
- en: The user interaction in EXR is similar to Google Tilt Brush. One hand holds
    your menu palette and the other picks functions from it. Like a boxy glove, you
    can change menus with the flick of your thumb to rotate menu box faces. That’s
    the starting point but EXR is ever more complex, as it needs to provide the rich
    set of Unity Editor features in your virtual workspace, compounded with the need
    to navigate the scene, organize your editor panels, and of course edit your scene
    game objects. We encourage you to watch a few demo videos before jumping in.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: EXR中的用户交互类似于Google Tilt Brush。一只手握住你的菜单调色板，另一只手从中选择功能。就像一只方形的手套，你可以通过拇指的轻扫来切换菜单，旋转菜单框面。这是起点，但EXR更加复杂，因为它需要在你的虚拟工作空间中提供丰富的Unity编辑器功能，同时还需要导航场景、组织编辑器面板，当然还有编辑场景游戏对象。我们鼓励你在深入之前先观看一些演示视频。
- en: 'The hand controller selectors implement an innovative, simultaneous combination
    of laser pointers for picking distant objects and grabbing (via a *selection cone*)
    for objects within reach, as illustrated here:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 手控制器选择器实现了激光指针选择远程对象和抓取（通过*选择锥体*）的创新、同时组合，如图所示：
- en: '![](img/97ec85dc-2360-4c47-a634-6cdf95b785f9.png)'
  id: totrans-383
  prefs: []
  type: TYPE_IMG
  zh: '![](img/97ec85dc-2360-4c47-a634-6cdf95b785f9.png)'
- en: To manipulate objects, EXR has implemented robust 3D versions of the familiar
    scene editor widgets in the 2D Editor. They’re really quite powerful and easy
    to use.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 要操纵对象，EXR在2D编辑器中实现了熟悉的场景编辑器小部件的强大3D版本。它们真的非常强大且易于使用。
- en: 'Without going into much further detail, here are the key features in EXR editor:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 不深入细节，以下是EXR编辑器中的关键功能：
- en: '**Selection**: Robust use of the hand controller thumbpad/stick, buttons, trigger,
    and grib'
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择**：手控制器拇指垫/杆、按钮、扳机和抓取的稳健使用'
- en: '**Menus**: Boxed glove menu panels, radial menu, shortcuts, and tools to organize
    panels in 3D'
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**菜单**：方形容器菜单面板、径向菜单、快捷键以及用于在3D中组织面板的工具'
- en: '**Navigation**: Move throughout your scene as you work, fly and blink modes,
    rotate in place, scale the world, use a mini-world view'
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导航**：在工作过程中在场景中移动，飞行和眨眼模式，原地旋转，缩放世界，使用迷你世界视图'
- en: '**Workspaces**: Correspond to windows in the 2D editor, for Project, Hierarchy,
    Inspector, Console, Profile, and more, can be opened and placed in the VR work
    area'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作空间**：对应于 2D 编辑器中的窗口，如项目、层次结构、检查器、控制台、配置文件等，可以在 VR 工作区中打开和放置。'
- en: Other features include locked objects, snapping,
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他功能包括锁定对象、吸附等。
- en: 'The following diagram shows how the manipulator Gizmo can be used for direct
    manipulation of the current selected object, in conjunction with the radial menu
    on your controller, to switch tools:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了如何使用操纵器 Gizmo 与控制器上的径向菜单一起直接操作当前选定的对象，以切换工具：
- en: '![](img/dd383c2b-c065-4644-b073-fee429d72e99.png)'
  id: totrans-392
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dd383c2b-c065-4644-b073-fee429d72e99.png)'
- en: 'Perhaps one of the more challenging things to learn in EXR is what each of
    the hand controls do as they switch meaning depending on the current context.
    The following diagram shows the controller guides for the VIVE:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 在 EXR 中学习更具挑战性的事情之一可能是了解每个手控在切换意义时在当前上下文中的具体作用。以下图显示了 VIVE 的控制器指南：
- en: '![](img/8170f9c3-268a-41bd-aa48-b25e8c8c9bd5.png)'
  id: totrans-394
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8170f9c3-268a-41bd-aa48-b25e8c8c9bd5.png)'
- en: 'Controller guides for the Oculus touch are shown here:'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 下面展示了 Oculus Touch 控制器的操作指南：
- en: '![](img/ace8c8d0-51c3-4355-abac-83804e173f5f.png)'
  id: totrans-396
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ace8c8d0-51c3-4355-abac-83804e173f5f.png)'
- en: 'To wrap up this topic, you can even use Google Poly to find objects and insert
    them into your scene in VR. An example of the third-party extensions of the EditorXR
    interface and API, the Poly workspace is available in VR. If you have the Poly
    Toolkit installed (as discussed) and you are using EditorXR, then Poly is one
    of the available workspaces. Open it to browse and add 3D models from the cloud
    into your scene, as shown:'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 为了总结这个话题，你甚至可以使用 Google Poly 查找对象并将它们插入到你的 VR 场景中。这是 EditorXR 接口和 API 的第三方扩展
    Poly 工作空间的示例，它可在 VR 中使用。如果你已经安装了 Poly Toolkit（如前所述）并且正在使用 EditorXR，那么 Poly 就是可用的工作空间之一。打开它来浏览并将云中的
    3D 模型添加到你的场景中，如图所示：
- en: '![](img/d3168898-b375-49fb-9b4d-8f1da2846318.png)'
  id: totrans-398
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d3168898-b375-49fb-9b4d-8f1da2846318.png)'
- en: To learn more about EditorXR and Google Poly see this debut blog post by Matt
    Schoen of Unity Labs: [https://blogs.unity3d.com/2017/11/30/learn-how-googles-poly-works-with-unity-editorxr/](https://blogs.unity3d.com/2017/11/30/learn-how-googles-poly-works-with-unity-editorxr/).
    As a side note, Schoen is a friend and the co-author of another book from Packt,
    *Cardboard VR Projects for Android* (2016): [https://www.packtpub.com/application-development/cardboard-vr-projects-android](https://www.packtpub.com/application-development/cardboard-vr-projects-android).
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 EditorXR 和 Google Poly 的信息，请参阅 Unity Labs 的 Matt Schoen 的这篇首篇博客文章：[https://blogs.unity3d.com/2017/11/30/learn-how-googles-poly-works-with-unity-editorxr/](https://blogs.unity3d.com/2017/11/30/learn-how-googles-poly-works-with-unity-editorxr/)。作为旁注，Schoen
    是我的朋友，也是 Packt 另一本书的合著者，《Cardboard VR Projects for Android》（2016）：[https://www.packtpub.com/application-development/cardboard-vr-projects-android](https://www.packtpub.com/application-development/cardboard-vr-projects-android)。
- en: Summary
  id: totrans-400
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we built a simple diorama, became more acquainted with the
    Unity editor, and learned about the importance of world scale in designing your
    scenes, including several in-game tools to help us work with scaling and positioning.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们构建了一个简单的场景模型，更熟悉了 Unity 编辑器，并了解了在设计场景时世界尺度的重要性，包括一些游戏内工具帮助我们处理缩放和定位。
- en: We then emphasized that Unity is not so much an asset creation tool. Developers
    typically use tools outside of Unity and then import their models. We introduced
    you to the free and open source Blender modeling app as well as Google Tilt Brush
    and showed you how to export assets and then import them into Unity, including
    cloud services like Google Poly.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 我们随后强调，Unity 并不仅仅是一个资产创建工具。开发者通常使用 Unity 以外的工具创建模型，然后将它们导入。我们向您介绍了免费的开源建模应用
    Blender 以及 Google Tilt Brush，并展示了如何导出资产并将其导入 Unity，包括像 Google Poly 这样的云服务。
- en: One of the really cool things about developing for VR is how quickly things
    are changing. It's the burgeoning of a new industry, a new media, and new paradigms
    evolve year to year as VR comes into its own. New devices are being introduced
    every quarter. Unity is updated every month. New software tools are released every
    week. There are new things to do and learn every day. Of course, this can also
    be very frustrating. My advice is to not let this get to you, and rather embrace
    it.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 在为 VR 开发时，真正酷的一件事是事物变化之快。这是一个新兴的行业、一种新的媒体，以及随着 VR 的成熟，每年都会有新的范式演变。每个季度都会推出新的设备。Unity
    每月都会更新。每周都会发布新的软件工具。每天都有新事物要做和学习。当然，这也可能非常令人沮丧。我的建议是不要让它影响到你，而是要接受它。
- en: One key to this is to continuously try new things. That’s what we tried to usher
    you through in this chapter. Come up with an idea, then see if you can get it
    to work. Try out new software. Learn a new Unity feature. Do things one at a time
    so you don't become overwhelmed. Of course, that's what this book is about. The
    journey is a continuous and adventurous one.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题的关键在于不断尝试新事物。这正是我们在本章中试图引导你的内容。想出一个点子，然后看看你能否让它运作起来。尝试新的软件。学习新的Unity功能。一次只做一件事，这样你就不会感到不知所措。当然，这正是本书的主题。这是一段持续且充满冒险的旅程。
- en: In the next chapter, we'll set up your development system and Unity settings
    to build and run the project to play in your VR headset.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将设置你的开发系统和Unity设置，以便构建和运行项目，在你的VR头盔中玩游戏。
