["```cs\nabp new ApiDemo -u none\n```", "```cs\n{\n  \"totalCount\": 1,\n  \"items\": [\n    {\n      \"name\": \"admin\",\n      \"isDefault\": false,\n      \"isStatic\": true,\n      \"isPublic\": true,\n      \"concurrencyStamp\": \n          \"1f23ae3a-85d8-4656-b094-00e605e28e4e\",\n      \"id\": \"92692d73-4acb-ca9f-4838-39ff4cdf25e4\",\n      \"extraProperties\": {}\n    }\n  ]\n}\n```", "```cs\n[ApiController]\n[Route(\"products\")]\npublic class ProductController : ControllerBase\n{\n    [HttpGet]\n    public async Task<ProductDto> GetListAsync()\n    {\n        // TODO: implement\n    }\n    [HttpPut]\n    [Route(\"{id}\")]\n    public async Task UpdateAsync(Guid id, ProductUpdateDto\n                                  input)\n    {\n        // TODO: implement\n    }\n}\n```", "```cs\n[ApiController]\n[Route(\"products\")]\npublic class ProductController : ControllerBase\n{\n    private readonly IProductAppService _productAppService;\n    public ProductController(\n        IProductAppService productAppService)\n    {\n        _productAppService = productAppService;\n    }\n    [HttpGet]\n    public async Task<ProductDto> GetListAsync()\n    {\n        return await _productAppService.GetListAsync();\n    }\n    [HttpPut]\n    [Route(\"{id}\")]\n    public async Task UpdateAsync(Guid id, \n                                  ProductUpdateDto input)\n    {\n        await _productAppService.UpdateAsync(id, input);\n    }\n}\n```", "```cs\nConfigure<AbpAspNetCoreMvcOptions>(options =>\n{\n    options.ConventionalControllers.Create(\n        typeof(ApiDemoApplicationModule).Assembly);\n});\n```", "```cs\npublic class ProductAppService\n    : ApiDemoAppService, IProductAppService\n{\n    public Task<ProductDto> GetListAsync()\n    {\n        // TODO: implement\n    }\n    public Task UpdateAsync(Guid id, \n                            ProductUpdateDto input)\n    {\n        // TODO: implement\n    }\n}\n```", "```cs\n[RemoteService(false)]\npublic class ProductAppService\n     : ApiDemoAppService, IProductAppService\n{ /* ... */ }\n```", "```cs\npublic override void ConfigureServices(\n    ServiceConfigurationContext context)\n{\n    context.Services.AddHttpClientProxies(\n        typeof(ApiDemoApplicationContractsModule).Assembly\n    );\n}\n```", "```cs\n{\n  \"RemoteServices\": {\n    \"Default\": {\n      \"BaseUrl\": \"http://localhost:53929/\"\n    } \n  } \n}\n```", "```cs\n{\n  \"RemoteServices\": {\n    \"Default\": {\n      \"BaseUrl\": \"http://localhost:53929/\"\n    },\n    \"BookStore\": {\n      \"BaseUrl\": \"http://localhost:48392/\"\n    } \n  } \n}\n```", "```cs\ncontext.Services.AddHttpClientProxies(\n    typeof(BookStoreApplicationContractsModule).Assembly,\n    remoteServiceConfigurationName: \"BookStore\"\n);\n```", "```cs\napiDemo.products.product.getList = function(ajaxParams) {\n  return abp.ajax($.extend(true, {\n    url: abp.appPath + 'api/app/product',\n    type: 'GET'\n  }, ajaxParams));\n};\napiDemo.products.product.update = \n    function(id, input, ajaxParams) {\n  return abp.ajax($.extend(true, {\n    url: abp.appPath + 'api/app/product/' + id + '',\n    type: 'PUT',\n    dataType: null,\n    data: JSON.stringify(input)\n  }, ajaxParams));\n};\n```", "```cs\napiDemo.products.product.getList()\n  .then(function(result){\n    // TODO: Process the result...\n  });\n```", "```cs\nabp generate-proxy -t csharp -u https://localhost:44367\n```", "```cs\nabp generate-proxy -t js -u https://localhost:44367\n```", "```cs\nabp generate-proxy -t ng -u https://localhost:44367\n```", "```cs\nabp add-package Volo.Abp.AspNetCore.SignalR\n```", "```cs\npublic class MessagingHub : Hub\n{\n}\n```", "```cs\n[HubRoute(\"/the-messaging-hub\")]\npublic class MessagingHub : Hub\n{\n    //...\n}\n```", "```cs\nConfigure<AbpSignalROptions>(options =>\n{\n    options.Hubs.AddOrUpdate(\n        typeof(MessagingHub),\n        config => //Additional configuration\n        {\n            config.RoutePattern = \"/the-messaging-hub\";\n            config.ConfigureActions.Add(hubOptions =>\n            {\n                hubOptions.LongPolling.PollTimeout =\n                    TimeSpan.FromSeconds(30);\n            });\n        }\n    );\n});\n```", "```cs\nnpm install @abp/signalr\n```", "```cs\n@using Volo.Abp.AspNetCore.Mvc.UI.Packages.SignalR\n@section scripts {\n    <abp-script type=\n        \"typeof(SignalRBrowserScriptContributor)\" />\n}\n```"]