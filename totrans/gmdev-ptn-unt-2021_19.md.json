["```cs\nusing System;\nusing System.Collections.Generic;\n\nnamespace Chapter.ServiceLocator\n{\n    public static class ServiceLocator\n    {\n        private static readonly \n            IDictionary<Type, object> Services = \n                new Dictionary<Type, Object>();\n\n        public static void RegisterService<T>(T service)\n        {\n            if (!Services.ContainsKey(typeof(T)))\n            {\n                Services[typeof(T)] = service;\n            }\n            else\n            {\n                throw new \n                    ApplicationException\n                    (\"Service already registered\");\n            }\n        }\n\n        public static T GetService<T>()\n        {\n            try\n            {\n                return (T) Services[typeof(T)];\n            }\n            catch\n            {\n                throw new \n                    ApplicationException\n                    (\"Requested service not found.\");\n            }\n        }\n    }\n}\n```", "```cs\nnamespace Chapter.ServiceLocator\n{\n    public interface ILoggerService\n    {\n        void Log(string message);\n    }\n}\n```", "```cs\nnamespace Chapter.ServiceLocator\n{\n    public interface IAnalyticsService\n    {\n        void SendEvent(string eventName);\n    }\n}\n```", "```cs\nnamespace Chapter.ServiceLocator\n{\n    public interface IAdvertisement\n    {\n        void DisplayAd();\n    }\n}\n```", "```cs\nusing UnityEngine;\n\nnamespace Chapter.ServiceLocator\n{\n    public class Logger: ILoggerService\n    {\n        public void Log(string message)\n        {\n            Debug.Log(\"Logged: \" + message);\n        }\n    }\n}\n```", "```cs\nusing UnityEngine;\n\nnamespace Chapter.ServiceLocator\n{\n    public class Analytics : IAnalyticsService\n    {\n        public void SendEvent(string eventName)\n        {\n            Debug.Log(\"Sent: \" + eventName);\n        }\n    }\n}\n```", "```cs\nusing UnityEngine;\n\nnamespace Chapter.ServiceLocator\n{\n    public class Advertisement : IAdvertisement\n    {\n        public void DisplayAd()\n        {\n            Debug.Log(\"Displaying video advertisement\");\n        }\n    }\n}\n```", "```cs\nusing UnityEngine;\n\nnamespace Chapter.ServiceLocator\n{\n    public class ClientServiceLocator : MonoBehaviour\n    {\n        void Start() {\n            RegisterServices();\n        }\n\n        private void RegisterServices() {\n            ILoggerService logger = new Logger();\n            ServiceLocator.RegisterService(logger);\n\n            IAnalyticsService analytics = new Analytics();\n            ServiceLocator.RegisterService(analytics);\n\n            IAdvertisement advertisement = new Advertisement();\n            ServiceLocator.RegisterService(advertisement);\n        }\n\n        void OnGUI()\n        {\n            GUILayout.Label(\"Review output in the console:\");\n\n            if (GUILayout.Button(\"Log Event\")) {\n                ILoggerService logger = \n                    ServiceLocator.GetService<ILoggerService>();\n\n                logger.Log(\"Hello World!\");\n            }\n\n            if (GUILayout.Button(\"Send Analytics\")) {\n                IAnalyticsService analytics = \n                    ServiceLocator.GetService<IAnalyticsService>();\n\n                analytics.SendEvent(\"Hello World!\");\n            }\n\n            if (GUILayout.Button(\"Display Advertisement\")) {\n                IAdvertisement advertisement = \n                    ServiceLocator.GetService<IAdvertisement>();\n\n                advertisement.DisplayAd();\n            }\n        }\n    }\n}\n```"]