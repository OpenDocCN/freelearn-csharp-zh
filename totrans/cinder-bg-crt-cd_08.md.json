["```cs\ngl::drawCube( Vec3f(0,0,0), Vec3f(100,100,100) );\n```", "```cs\ngl::drawCube(\n        Vec3f(getWindowWidth()/2,getWindowHeight()/2,0),\n        Vec3f(100,100,100) );\n```", "```cs\ngl::rotate( Vec3f(0,1,0) );\n```", "```cs\ngl::translate( Vec3f(getWindowWidth()/2,getWindowHeight()/2,0) );\ngl::rotate( Vec3f::yAxis()*1 );\ngl::drawCube( Vec3f::zero(), Vec3f(100,100,100) );\ngl::translate( Vec3f(-getWindowWidth()/2,-getWindowHeight()/2,0) );\n```", "```cs\ngl::pushModelView();\ngl::translate( Vec3f(getWindowWidth()/2,getWindowHeight()/2,0) );\ngl::rotate( Vec3f(35,20,0) );\ngl::drawCube( Vec3f::zero(), Vec3f(100,100,100) );\ngl::popModelView();\n```", "```cs\nvoid Basic3DApp::draw() {\n   gl::clear( Color( 0, 0, 0 ) );\n\n   // make a copy of the current modelview matrix\n   gl::pushModelView();\n\n   // translate the origin of the world to the center of the screen\n   gl::translate( Vec3f(getWindowWidth()/2,getWindowHeight()/2,0) );\n\n   // draw a ring of cubes\n   int i; // iterator\n   int numCubes = 10; // number of cubes in the ring\n   for ( i=0; i < numCubes; i++ )\n   {\n           // make another copy of the current modelview matrix\n           gl::pushModelView();\n\n          // rotate the world around z axis\n          gl::rotate( Vec3f::zAxis() * (360.f / numCubes * i) );\n\n          // draw a relatively small cube\n          // 200 pixels to the right from the center of the world\n          gl::drawCube( Vec3f(200,0,0), Vec3f(25,25,25) );\n\n          // return to the previous state\n gl::popModelView();\n   }\n\n   // rotate the world around the origin\n   gl::rotate( Vec3f(35,20,0) );\n   \t// draw a bigger cube in the center of the world\n   gl::drawCube( Vec3f::zero(), Vec3f(100,100,100) );\n   \t// return to the initial state\n   gl::popModelView();\n}\n```", "```cs\ngl::drawColorCube( Vec3f::zero(), Vec3f(100,100,100) );\n```", "```cs\ngl::enableDepthRead();\n```", "```cs\nVec3f currentRotation;\nVec3f rotationIncrement;\n```", "```cs\ncurrentRotation = Vec3f( 0, 0, 0 );\nrotationIncrement = Vec3f( 1.1f, 1.2f, 1.3f );\n```", "```cs\ncurrentRotation += rotationIncrement;\n```", "```cs\nâ€¦\n// rotate the world around the origin\ngl::rotate( currentRotation );\n\n// draw a bigger cube in the center\ngl::drawColorCube( Vec3f::zero(), Vec3f(100,100,100) );\n```", "```cs\ngl::drawSphere( Vec3f::zero(), 100 );\n```", "```cs\nglEnable( GL_LIGHTING );\nglEnable( GL_LIGHT0 );\n```", "```cs\ngl::drawCylinder(50, 50, 100);\n```", "```cs\ngl::drawCylinder(50, 50, 50);\ngl::drawCylinder(50, 50, -50);\n```", "```cs\ngl::rotate( Vec3f(-90,0,0) );\ngl::translate( Vec3f(0,0,50) );\ngl::drawSolidCircle(Vec2f(0,0), 50, 12);\ngl::translate( Vec3f(0,0,-50) );\ngl::rotate( Vec3f(180,0,0) );\ngl::translate( Vec3f(0,0,50) );\n```", "```cs\ngl::drawCylinder(50, 0, 50, 4);\ngl::drawCylinder(50, 0, -50, 4);\n```", "```cs\ngl::drawTorus(100, 20);\n```", "```cs\ngl::drawTorus(100, 20, 8, 8);\n```"]