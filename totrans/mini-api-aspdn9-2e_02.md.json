["```cs\napp.MapGet(\"/employees/{id}\", (int id) =>\n{\n    var employee = EmployeeManager.Get(id);\n    return Results.Ok(employee);\n});\n```", "```cs\napp.MapPost(\"/employees\", (Employee employee) =>\n{\n    EmployeeManager.Create(employee);\n    return Results.Created();\n});\n```", "```cs\napp.MapPut(\"/employees\", (Employee employee) =>\n{\n    EmployeeManager.Update(employee);\n    return Results.Ok();\n});\n```", "```cs\napp.MapPatch(\"/updateEmployeeName\", (Employee employee) =>\n{\n    EmployeeManager.ChangeName(employee.Id, employee.Name);\n    return Results.Ok();\n});\n```", "```cs\napp.MapDelete(\"/deleteEmployee/{id}\", (int id) =>\n{\n    EmployeeManager.Delete(id);\n    return Results.Ok();\n});\n```", "```cs\n    var builder = WebApplication.CreateBuilder(args);\n    var app = builder.Build();\n    ```", "```cs\n    app.Run();\n    ```", "```cs\n        public class Employee\n        {\n            public int Id { get; set; }\n            public string Name { get; set; }\n            public decimal Salary { get; set; }\n            public string Address { get; set; }\n            public string City { get; set; }\n            public string Region { get; set; }\n            public string PostalCode { get; set; }\n            public string Country { get; set; }\n            public string Phone { get; set; }\n        }\n    ```", "```cs\n    public static class EmployeeManager\n    {\n        private static List<Employee> _employees =\n            new List<Employee>();\n    }\n    ```", "```cs\npublic static class EmployeeManager\n{\n    private static List<Employee> _employees =\n        new List<Employee>();\n    private static int getEmployeeIndex(int id)\n    {\n        var employeeIndex =\n            _employees.FindIndex(x => x.Id == id);\n        if (employeeIndex == -1)\n        {\n            throw new ArgumentException(\n                $\"Employee with Id {id} does not exist\");\n        }\n        return employeeIndex;\n    }\n}\n```", "```cs\npublic static void Create(Employee employee)\n{\n    _employees.Add(employee);\n}\npublic static void Update(Employee employee)\n{\n    _employees[_getEmployeeIndex(employee.Id)] =\n        employee;\n}\npublic static void ChangeName(int id, string name)\n{\n    _employees[_getEmployeeIndex(id)].Name = name;\n}\npublic static void Delete(int id)\n{\n    _employees.RemoveAt(_getEmployeeIndex(id));\n}\npublic static Employee Get(int id)\n{\n    var employee =\n        _employees.FirstOrDefault(x => x.Id == id);\n    if (employee == null)\n    {\n        throw new ArgumentException(\"Employee Id invalid\");\n    }\n    return employee;\n}\n```", "```cs\napp.MapGet(\"/employees/{id}\", (int id) =>\n{\n    var employee = EmployeeManager.Get(id);\n    return Results.Ok(employee);\n});\n```", "```cs\nusing System.Text.Json;\nusing WebApplication2;\nvar builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\napp.MapGet(\"/employees/{id}\", (int id) =>\n{\n    var employee = EmployeeManager.Get(id);\n    return Results.Ok(employee);\n});\napp.MapPost(\"/employees\", (Employee employee) =>\n{\n    EmployeeManager.Create(employee);\n    return Results.Created();\n});\napp.MapPut(\"/employees\", (Employee employee) =>\n{\n    EmployeeManager.Update(employee);\n    return Results.Ok();\n});\napp.MapPatch(\"/updateEmployeeName\", (Employee employee) =>\n{\n    EmployeeManager.ChangeName(employee.Id, employee.Name);\n    return Results.Ok();\n});\napp.MapDelete(\"/employees/{id}\", (int id) =>\n{\n    EmployeeManager.Delete(id);\n    return Results.Ok();\n});\napp.Run();\n```", "```cs\n{\n  \"Id\": 3,\n  \"Name\": \"Happy McHappyson\",\n  \"Salary\": 100000.00,\n  \"Address\": \"1 Sunny Lane\",\n  \"City\": \"Happyville\",\n  \"Region\": \"The Joyful Mountains\",\n  \"PostalCode\": \"1234565\",\n  \"Country\": \"Laughland\",\n  \"Phone\": \"876542-2345-3242-234\"\n}\n```", "```cs\n    builder.Services.AddOpenApi();\n    var app = builder.Build();\n    app.MapOpenApi();\n    ```", "```cs\napp.MapGet(\"/employees/{id}\", (int id) =>\n{\n    var employee = EmployeeManager.Get(id);\n    //RETURN 200 OK RESULT WITH THE EMPLOYEE OBJECT\n    return Results.Ok(employee);\n});\n```", "```cs\n    //200 OK\n    return Results.Ok();\n    //201 CREATED\n    return Results.Created();\n    //202 ACCEPTED\n    return Results.Accepted();\n    //204 NO CONTENT\n    return Results.NoContent();\n    //400 BAD REQUEST\n    return Results.BadRequest();\n    //401 UNAUTHORIZED\n    return Results.Unauthorized();\n    //403 FORBIDDEN\n    return Results.Forbid();\n    //404 NOT FOUND\n    return Results.NotFound();\n    //409 CONFLICT\n    return Results.Conflict();\n```", "```cs\n    //200 OK\n    return TypedResults.Ok();\n    //201 CREATED\n    return TypedResults.Created();\n    //202 ACCEPTED\n    return TypedResults.Accepted();\n    //204 NO CONTENT\n    return TypedResults.NoContent();\n```", "```cs\n    //204 NO CONTENT\n    return TypedResults.InternalServerError();\n```"]