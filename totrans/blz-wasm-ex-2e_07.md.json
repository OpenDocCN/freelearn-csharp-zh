["```cs\nbuilder.Services.AddSingleton<ICartService, CartService>(); \n```", "```cs\n@inject ICartService cartService \n```", "```cs\nbuilder.Services.AddSingleton<ICartService, CartService>(); \n```", "```cs\nbuilder.Services.AddScoped<ICartService, CartService>(); \n```", "```cs\nbuilder.Services.AddTransient<IOneUseService, OneUseService>(); \n```", "```cs\n    <link href=\"css/bootstrap/css/bootstrap.min.css\" \n            rel=\"stylesheet\" /> \n    ```", "```cs\n    <main class=\"px-4\">\n        @Body\n    </main> \n    ```", "```cs\n    <PageTitle>Home</PageTitle>\n    <div class=\"bg-light\">\n        <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item active\">Home</li>\n        </ol>\n    </div>\n    <h1 class=\"display-3\">Welcome to Blazing Tasks!</h1>\n    <h2>\n        The store is open for business.\n    </h2>\n    <button type=\"button\" class=\"btn btn-danger mt-2\">\n        Start Shopping\n    </button> \n    ```", "```cs\n    @page \"/store\"\n    <PageTitle>Store</PageTitle>\n    <ol class=\"breadcrumb bg-light\">\n        <li class=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\n        <li class=\"breadcrumb-item active\">Store</li>\n    </ol> \n    ```", "```cs\n    @inject NavigationManager navigation \n    ```", "```cs\n    @code{\n        protected void OpenStore()\n        {\n            navigation.NavigateTo(\"store\");\n        }  \n    } \n    ```", "```cs\n    @onclick=\"OpenStore\" \n    ```", "```cs\n    public int ProductId { get; set; }\n    public string? ProductName { get; set; }\n    public int Price { get; set; }\n    public string? Image { get; set; } \n    ```", "```cs\n    [\n      {\n        \"productId\": 1,\n        \"productName\": \"Charger\",\n        \"price\": 15,\n        \"image\": \"charger.jpg\"\n      },\n      {\n        \"productId\": 2,\n        \"productName\": \"Ear Buds\",\n        \"price\": 22,\n        \"image\": \"earbuds.jpg\"\n      },\n      {\n        \"productId\": 3,\n        \"productName\": \"Key Chain\",\n        \"price\": 1,\n        \"image\": \"keychain.jpg\"\n      },\n      {\n        \"productId\": 4,\n        \"productName\": \"Travel Mug\",\n        \"price\": 8,\n        \"image\": \"travelmug.jpg\"\n      },\n      {\n        \"productId\": 5,\n        \"productName\": \"T-Shirt\",\n        \"price\": 20,\n        \"image\": \"tshirt.jpg\"\n      }\n    ] \n    ```", "```cs\n    @using ShoppingCart.Models\n    @inject HttpClient Http \n    ```", "```cs\n    public IList<Product>? products;\n    public IList<Product> cart = new List<Product>();\n    private int total;\n    protected override async Task OnInitializedAsync()\n    {\n        products = await Http.GetFromJsonAsync<Product[]>\n                (\"sample-data/products.json\");\n    } \n    ```", "```cs\n    @if (products == null)\n    {\n        <p><em>Loading...</em></p>\n    }\n    else\n    {\n        <h1 class=\"display-3\">Products</h1>\n        <div class=\"row\">\n            <div id=\"products\" class=\"col-xl-4 col-lg-6\">\n            </div>\n            <div id=\"cart\" class=\"col-xl-3 col-lg-4\">\n            </div>\n        </div>\n    } \n    ```", "```cs\n    <table width=\"100%\">\n        @foreach (Product item in products)\n        {\n            <tr>\n                <td>\n                    <img src=\"img/@item.Image\" />\n                </td>\n                <td class=\"align-middle\">\n                    @item.ProductName\n                </td>\n                <td class=\"align-middle\">\n                    $@item.Price\n                </td>\n                <td class=\"align-middle\">\n                    <button type=\"button\" \n                            class=\"btn btn-danger\">\n                        Add to Cart\n                    </button>\n                </td>\n            </tr>\n        }\n    </table> \n    ```", "```cs\n    @if (cart.Any())\n    {\n        <h2>Your Cart</h2>\n        <ul class=\"list-group\">\n            @foreach (Product item in cart)\n            {\n                <li class=\"list-group-item p-2\">\n                    <button type=\"button\" \n                            class=\"btn btn-sm btn-danger me-2\">\n                        Delete\n                    </button>\n                    @item.ProductName - $@item.Price\n                </li>\n            }\n        </ul>\n        <div class=\"p-2\">\n            <h3>Total: $@total</h3>\n        </div>\n    } \n    ```", "```cs\n    private void AddProduct(Product product)\n    {\n        cart.Add(product);\n        total += product.Price;\n    } \n    ```", "```cs\n    private void DeleteProduct(Product product)\n    {\n        cart.Remove(product);\n        total -= product.Price;\n    } \n    ```", "```cs\n    @onclick=\"@(() => AddProduct(item))\" \n    ```", "```cs\n    @onclick=\"@(()=>DeleteProduct(item))\" \n    ```", "```cs\n     IList<Product> Cart { get; }\n            int Total { get; }\n            event Action OnChange;\n            void AddProduct(Product product);\n            void DeleteProduct(Product product); \n    ```", "```cs\n    public class CartService : ICartService\n    {\n       private List<Product> cart = new();\n        private int total;\n        public IList<Product> Cart\n        {\n            get => cart;\n        }\n        public int Total\n        {\n            get => total;\n        }\n        public event Action? OnChange;\n    } \n    ```", "```cs\n    private void NotifyStateChanged() => OnChange?.Invoke(); \n    ```", "```cs\n    public void AddProduct(Product product)\n    {\n        cart.Add(product);\n        total += product.Price;\n        NotifyStateChanged();\n    } \n    ```", "```cs\n    public void DeleteProduct(Product product)\n    {\n        cart.Remove(product);\n        total -= product.Price;\n        NotifyStateChanged();\n    } \n    ```", "```cs\n    builder.Services.AddScoped<ICartService, CartService>(); \n    ```", "```cs\n    @using ShoppingCart.Services\n    @inject ICartService cartService \n    ```", "```cs\n    @onclick=\"@(() => cartService.AddProduct(item))\" \n    ```", "```cs\n    @if (cartService.Cart.Any())\n    {\n        <h2>Your Cart</h2>\n        <ul class=\"list-group\">\n            @foreach (Product item in cartService.Cart)\n            {\n                    <li class=\"list-group-item p-2\">\n                    <button class=\"btn btn-sm btn-danger me-2\">\n                        Delete\n                    </button>\n                    @item.ProductName - $@item.Price\n                </li>\n            }\n        </ul>\n        <div class=\"p-2\">\n            <h3>Total: $@cartService.Total</h3>\n        </div>\n    } \n    ```", "```cs\n    @onclick=\"@(() =>cartService.DeleteProduct(item))\" \n    ```", "```cs\n    @using ShoppingCart.Services \n    ```", "```cs\n    @inject ICartService cartService \n    ```", "```cs\n    <div class=\"alert alert-primary\">\n        <h2>Cart Total: $@cartService.Total</h2>\n    </div> \n    ```", "```cs\n    @implements IDisposable \n    ```", "```cs\n    @code{\n        protected override void OnInitialized()\n        {\n            cartService.OnChange += StateHasChanged;\n        }\n        public void Dispose()\n        {\n            cartService.OnChange -= StateHasChanged;\n        }\n    } \n    ```"]