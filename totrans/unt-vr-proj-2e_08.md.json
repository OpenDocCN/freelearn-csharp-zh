["```cs\nusing UnityEngine; \n\npublic class BallsFromHeaven : MonoBehaviour \n{ \n  public GameObject ballPrefab; \n  public float startHeight = 10f; \n  public float interval = 0.5f; \n\n  private float nextBallTime = 0f; \n\n  void Update () \n  { \n    if (Time.time > nextBallTime) \n    { \n      nextBallTime = Time.time + interval; \n      Vector3 position = new Vector3( Random.Range (-4f, 4f), \n         startHeight, Random.Range (-4f, 4f) ); \n      Instantiate( ballPrefab, position, Quaternion.identity ); \n    } \n  } \n} \n```", "```cs\nusing UnityEngine; \nusing System.Collections; \n\npublic class DestroyBall : MonoBehaviour \n{ \n  void Update () \n  { \n    if (transform.position.y < -5f) \n    {\n      Destroy (gameObject);  \n    }  \n  } \n} \n```", "```cs\n  public float timer = 15f; \n\n  void Start () \n  { \n    Destroy (gameObject, timer); \n  } \n```", "```cs\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ObjectPooler : MonoBehaviour \n{\n    public GameObject prefab;\n    public int pooledAmount = 20;\n\n    private List<GameObject> pooledObjects;\n\n}\n```", "```cs\n    void Start () {\n        pooledObjects = new List<GameObject>();\n        for (int i = 0; i < pooledAmount; i++)\n        {\n            GameObject obj = (GameObject)Instantiate(prefab);\n            obj.SetActive(false);\n            pooledObjects.Add(obj);\n        }\n  }\n```", "```cs\n    public GameObject GetPooledObject()\n    {\n        for (int i = 0; i < pooledObjects.Count; i++)\n        {\n            if (!pooledObjects[i].activeInHierarchy)\n            {\n                return pooledObjects[i];\n            }\n        }\n\n        return null;\n    }\n```", "```cs\n    public bool willGrow = true;\n```", "```cs\n        ...\n        if (willGrow)\n        {\n            GameObject obj = (GameObject)Instantiate(prefab);\n            pooledObjects.Add(obj);\n            return obj;\n        }\n\n        return null;\n    }\n```", "```cs\nusing UnityEngine;\n\n[RequireComponent(typeof(ObjectPooler))]\npublic class BallsFromHeaven : MonoBehaviour\n{\n    public float startHeight = 10f;\n    public float interval = 0.5f;\n\n    private float nextBallTime = 0f;\n    private ObjectPooler pool;\n\n    void Start()\n    {\n        pool = GetComponent<ObjectPooler>();\n        if (pool == null) \n        {\n            Debug.LogError(\"BallsFromHeaven requires ObjectPooler component\");\n        }\n    }\n\n    void Update()\n    {\n        if (Time.time > nextBallTime)\n        {\n            nextBallTime = Time.time + interval;\n            Vector3 position = new Vector3(Random.Range(-4f, 4f), startHeight, Random.Range(-4f, 4f));\n            GameObject ball = pool.GetPooledObject();\n            ball.transform.position = position;\n            ball.transform.rotation = Quaternion.identity;\n            ball.GetComponent<RigidBody>().velocity = Vector3.zero;\n            ball.SetActive(true);\n        }\n    }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class DestroyBall : MonoBehaviour {\n\n    void Update () {\n        if (transform.position.y < -5f)\n        {\n            DisableMe();\n        }\n    }\n\n    private void DisableMe()\n    {\n        gameObject.SetActive(false);\n    }\n}\n\n```", "```cs\n    void OnEnable()\n    {\n        Invoke(\"DisableMe\", timer);\n    }\n\n    void OnDisable()\n    {\n        CancelInvoke();\n    }\n```", "```cs\nusing UnityEngine;\n\npublic class BallGame : MonoBehaviour \n{\n    public Transform dropPoint;\n    public float startHeight = 10f;\n    public float interval = 3f;\n\n    private float nextBallTime = 0f;\n    private ObjectPooler pool;\n    private GameObject activeBall;\n    private AudioSource soundEffect;\n\n    void Start()\n    {\n        if (dropPoint == null)\n        {\n            dropPoint = Camera.main.transform;\n        }\n        soundEffect = GetComponent<AudioSource>();\n        pool = GetComponent<ObjectPooler>();\n    }\n\n    void Update()\n    {\n        if (Time.time > nextBallTime)\n        {\n            nextBallTime = Time.time + interval;\n            soundEffect.Play();\n            Vector3 position = new Vector3(\n                dropPoint.position.x, \n                startHeight, \n                dropPoint.position.z);\n\n            activeBall = pool.GetPooledObject();\n            activeBall.transform.position = position;\n            activeBall.transform.rotation = Quaternion.identity;\n            activeBall.GetComponent<RigidBody>().velocity = Vector3.zero;\n            activeBall.SetActive(true);\n        }\n    }\n} \n```", "```cs\nusing UnityEngine; \nusing System.Collections; \n\npublic class TriggerSound : MonoBehaviour { \n  public AudioSource hitSound; \n\n  void Start() { \n    hitSound = GetComponent<AudioSource> (); \n  } \n\n  void OnTriggerEnter(Collider other) { \n    hitSound.Play (); \n  } \n} \n```", "```cs\nusing UnityEngine;\n\n[RequireComponent(typeof(ObjectPooler))]\npublic class ShooterBallGame : MonoBehaviour\n{\n    public Transform shootAt;\n    public Transform shooter0;\n    public Transform shooter1;\n    public float speed = 5.0f;\n    public float interval = 3f;\n\n    private float nextBallTime = 0f;\n    private ObjectPooler pool;\n    private GameObject activeBall;\n    private int shooterId = 0;\n    private Transform shooter;\n\n    private AudioSource soundEffect;\n}\n```", "```cs\n   void Start()\n    {\n        if (shootAt == null)\n        {\n            shootAt = Camera.main.transform;\n        }\n        soundEffect = GetComponent<AudioSource>();\n        pool = GetComponent<ObjectPooler>();\n        if (pool == null)\n        {\n            Debug.LogError(\"BallGame requires ObjectPooler component\");\n        }\n    }\n```", "```cs\n    void Update()\n    {\n        if (Time.time > nextBallTime)\n        {\n            if (shooterId == 0)\n            {\n                shooterId = 1;\n                shooter = shooter1;\n            }\n            else\n            {\n                shooterId = 0;\n                shooter = shooter0;\n            }\n\n            nextBallTime = Time.time + interval;\n            ShootBall();\n        } \n    }\n```", "```cs\n    private void ShootBall()\n    {\n        soundEffect.Play();\n        activeBall = pool.GetPooledObject();\n        activeBall.transform.position = shooter.position;\n        activeBall.transform.rotation = Quaternion.identity;\n        shooter.transform.LookAt(shootAt);\n        activeBall.GetComponent<Rigidbody>().velocity = shooter.forward * speed;\n        activeBall.GetComponent<Rigidbody>().angularVelocity = Vector3.zero;\n        activeBall.SetActive(true);\n    }\n```", "```cs\n    void Start()\n    {\n        if (shootAt == null)\n            shootAt = Camera.main.transform;\n        pool = GetComponent<ObjectPooler>();\n\n        AudioProcessor processor = FindObjectOfType<AudioProcessor>();\n        processor.onBeat.AddListener(onBeatDetected);\n    }\n\n    void onBeatDetected()\n    {\n        if (Random.value > 0.5f)\n        {\n            shooterId = 1;\n            shooter = shooter1;\n        } else\n        {\n            shooterId = 0;\n            shooter = shooter0;\n        }\n        ShootBall();\n    }\n```"]