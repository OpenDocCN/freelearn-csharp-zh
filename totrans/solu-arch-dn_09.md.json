["```cs\n[Authorize(Users = \"john,tim\")]\npublic IActionResult EditContent() \n{ \n return View(); \n}\n```", "```cs\nThis is a nice post<script>window.alert('This is an unsecure website')</script>\n```", "```cs\nThis is a nice post<script src=\"img/badscript.js\"></script>\n```", "```cs\njohnsmith\\x3cscript\\x3e%20alert(\\x27XSS attack! weak security\\x27)%20\\x3c/script\\x3e\n```", "```cs\n    @using (Html.BeginForm(\"Create\", \"Product\"))\n    {\n    @Html.AntiForgeryToken() \n      //Here we put our form fields along with the submit     button\n    }\n    ```", "```cs\n    \"__RequestVerificationToken\" hidden field is holding the CSRF token. Here is an example, showing us how to force the post action in the controller to validate the token before executing the core functionality of the action:\n\n    ```", "```cs\n\n    Notice the attribute on top of the action to validate the anti-forgery token. If the token is not valid, the request will be rejected/canceled.\n    ```", "```cs\npublic class User\n{\n    public int ID { get; set; }\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n    public string Email { get; set; }\n    public string Password { get; set; }\n    public bool IsAdmin { get; set; }\n}\n```", "```cs\nRequest URL:http://TheWebsiteUrl/register\nRequest Method:POST\nStatus Code:200 OK\nfirstname:John\nlastname:miller\nemail:john@xxx.com\npassword:encryptedPassword\n. . .\n```", "```cs\nhttp://www.yourtrustedwebsite.com?ReturnUrl=www.fakedomain.com/login\n```"]