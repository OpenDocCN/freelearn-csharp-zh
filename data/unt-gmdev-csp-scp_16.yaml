- en: '16'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '16'
- en: Publishing, Monetizing, and Marketing Your Game in Unity – Strategies for Advertising
    and Community Building
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Unity中发布、盈利和营销你的游戏 - 广告和社区建设策略
- en: Let’s embark on the crucial final stages of your game development journey with
    Unity as we delve into publishing, monetizing, and marketing your game. This chapter
    provides a comprehensive guide to navigating various game publishing platforms,
    offering insights into selecting the right channels for your game. You will also
    discover effective marketing techniques to promote your game and capture your
    target audience’s attention, as well as learn to implement various monetization
    models, aligning them with your game’s design for sustainable revenue streams.
    Additionally, you will learn about strategies to build and maintain a vibrant
    player community, which is essential for long-term engagement and success. By
    the end of this chapter, you will be equipped with the skills to publish your
    game on platforms such as Steam or the App Store, integrate in-game purchases,
    and balance monetization with player experience. Let’s explore these strategies
    and best practices to ensure your game’s successful launch and sustained growth.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一起踏上游戏开发旅程的关键最后阶段，使用Unity深入探讨发布、盈利和营销你的游戏。本章提供了一本全面的指南，用于导航各种游戏发布平台，并为你提供选择适合你游戏渠道的见解。你还将发现有效的营销技巧来推广你的游戏并吸引目标受众的注意，同时学习实施各种盈利模式，使它们与你的游戏设计相匹配，以实现可持续的收入流。此外，你还将了解建立和维护一个充满活力的玩家社区的战略，这对于长期参与和成功至关重要。到本章结束时，你将具备在Steam或App
    Store等平台上发布你的游戏、集成游戏内购买以及平衡盈利与玩家体验的技能。让我们探索这些策略和最佳实践，以确保你的游戏成功发布并持续增长。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Navigating various game publishing platforms
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操纵各种游戏发布平台
- en: Employing marketing techniques for game promotion
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 采用营销技巧推广游戏
- en: Implementing effective monetization models
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施有效的盈利模式
- en: Building and maintaining a player community
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建立和维护玩家社区
- en: Game publishing platforms
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 游戏发布平台
- en: Navigating the diverse landscape of game publishing platforms is a crucial step
    in bringing your game to market. This section explores the major platforms, including
    Steam, the App Store, Google Play, and console-specific marketplaces. We will
    discuss the unique requirements, submission processes, and best practices for
    each platform, providing you with the knowledge needed to make informed decisions.
    By understanding the strengths and challenges of each platform, you can choose
    the best fit for your game’s genre, its target audience, and your development
    goals, ensuring a smooth and successful release.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在将你的游戏推向市场的过程中，导航多样化的游戏发布平台是一个关键步骤。本节探讨了主要平台，包括Steam、App Store、Google Play以及特定于控制台的市场，如PlayStation
    Network、Nintendo的eShop和Xbox Live。了解每个平台的独特要求、提交流程和最佳实践，将为你提供所需的知识，以便做出明智的决定。通过了解每个平台的优势和挑战，你可以为你的游戏类型、目标受众和开发目标选择最佳匹配的平台，确保顺利且成功发布。
- en: An overview of major publishing platforms
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主要发布平台的概述
- en: Understanding and choosing the right game publishing platforms is crucial for
    ensuring a successful game release. This section provides a broad overview of
    the most prominent game publishing platforms, including Steam for PC, itch.io
    for independent games, the App Store for iOS devices, Google Play for Android,
    and console-specific marketplaces such as PlayStation Network, Nintendo’s eShop,
    and Xbox Live. Understanding the general characteristics, audience, and types
    of games that perform well on each platform will help developers make informed
    decisions about where to publish their games.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 理解和选择正确的游戏发布平台对于确保游戏成功发布至关重要。本节提供了对最突出的游戏发布平台的广泛概述，包括PC的Steam、独立游戏的itch.io、iOS设备的App
    Store、Android的Google Play以及特定于控制台的市场，如PlayStation Network、Nintendo的eShop和Xbox
    Live。了解每个平台的一般特征、受众和表现良好的游戏类型将帮助开发者做出关于在哪里发布他们的游戏的明智决定。
- en: 'Here is an overview of some, but not all, of the popular publishing platforms:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这里概述了一些（但不是全部）流行的发布平台：
- en: '**Steam (PC)**: Steam is one of the largest digital distribution platforms
    for PC games. It caters to a broad audience and supports a wide variety of game
    genres, from independent to AAA titles. Steam is known for its community features,
    including user reviews, forums, and achievements, which help engage players and
    promote games.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Steam (PC)**：Steam 是最大的 PC 游戏数字分发平台之一。它服务于广泛的受众，支持从独立游戏到 AAA 游戏的各种游戏类型。Steam
    以其社区功能而闻名，包括用户评论、论坛和成就，这些功能有助于吸引玩家并推广游戏。'
- en: '**The App Store (iOS)**: The App Store is the primary marketplace for iOS devices,
    offering a vast array of games to a diverse audience that includes casual gamers,
    children, and dedicated mobile gamers. It is highly curated, with strict quality
    and content guidelines. Games that perform well on the App Store often leverage
    mobile-friendly controls, quick gameplay sessions, and high-quality graphics.
    The audience on the App Store appreciates polished, user-friendly experiences
    that can be enjoyed in short bursts or longer sessions, appealing to both casual
    and serious gamers.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**App Store (iOS)**：App Store 是 iOS 设备的主要市场，为包括休闲玩家、儿童和专业的移动游戏玩家在内的多元化受众提供大量游戏。它具有高度精选的特点，有严格的质量和内容指南。在
    App Store 上表现良好的游戏通常利用了适合移动设备的控制、快速的游戏会话和高品质的图形。App Store 上的受众欣赏精致、用户友好的体验，可以在短时间内或长时间内享受，吸引休闲和严肃的玩家。'
- en: '**Google Play (Android)**: Google Play is the main distribution platform for
    Android devices. It supports a wide range of games, similar to the App Store,
    but with a slightly more open submission process. Games that excel on Google Play
    often focus on accessibility, freemium models, and a broad international audience.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Play (Android)**: Google Play 是 Android 设备的主要分发平台。它支持广泛的各类游戏，类似于 App
    Store，但提交过程相对更为开放。在 Google Play 上表现优异的游戏通常注重可访问性、免费增值模式和广泛的国际受众。'
- en: '**PlayStation Network (PSN) and Xbox Live**: These console-specific marketplaces
    cater to dedicated gamers on the PlayStation and Xbox platforms, respectively.
    They are ideal for delivering high-quality, immersive gaming experiences, encompassing
    both independent and blockbuster titles. Success on these platforms often requires
    a polished presentation, robust gameplay features, and sometimes, exclusive content
    or timed releases to attract and retain players. The audiences on these platforms
    tend to seek deep, engaging, and often multiplayer experiences.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PlayStation Network (PSN) 和 Xbox Live**：这些针对特定游戏机的市场为 PlayStation 和 Xbox
    平台上的专业玩家提供服务。它们非常适合提供高质量、沉浸式的游戏体验，包括独立和大型游戏。在这些平台上取得成功通常需要精美的展示、稳健的游戏功能，有时还需要独家内容或限时发布来吸引和留住玩家。这些平台上的受众倾向于寻求深入、吸引人的，通常是多人游戏体验。'
- en: The following table provides an overview of the key characteristics, audience
    demographics, and top-performing game types for major game publishing platforms,
    helping you choose the right platform for your game’s release.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 下表概述了主要游戏发布平台的关键特性、受众人口统计和表现最好的游戏类型，有助于您选择适合您游戏发布的正确平台。
- en: '![Figure 16.1 – A table of game publishing platforms](img/B22128_16_01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图 16.1 – 游戏发布平台表](img/B22128_16_01.jpg)'
- en: Figure 16.1 – A table of game publishing platforms
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.1 – 游戏发布平台表
- en: Understanding the characteristics and audience of each major publishing platform
    is crucial for making informed decisions about where to release your game. This
    foundational knowledge sets the stage for the next section, where we will delve
    into the specific requirements and submission processes for each platform.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 理解每个主要发布平台的特点和受众对于做出关于游戏发布地点的明智决策至关重要。这种基础知识为下一节奠定了基础，我们将深入探讨每个平台的具体要求和提交流程。
- en: Next, we will explore the specific requirements and submission processes necessary
    for a successful game launch on various platforms.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨在各个平台上成功发布游戏所需的具体要求和提交流程。
- en: Platform-specific requirements and submission processes
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 平台特定要求和提交流程
- en: 'Understanding and navigating the specific requirements and submission processes
    for each major platform is critical for a successful game launch. This section
    delves into the compliance guidelines, technical requirements, and quality standards
    necessary for platforms such as Steam, the App Store, Google Play, and console
    marketplaces. We will also cover the submission processes, including the fees,
    review periods, and required materials. Let’s begin:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 理解和掌握每个主要平台的具体要求和提交流程对于成功发布游戏至关重要。本节将深入探讨适用于Steam、App Store、Google Play和游戏机市场的合规指南、技术要求和质量标准。我们还将涵盖提交流程，包括费用、审查周期和所需材料。让我们开始吧：
- en: '**Steam (PC)**: Steam requires compliance with content guidelines, including
    restrictions on mature content and technical requirements for compatibility. Specific
    technical requirements include supporting Windows, macOS, and Linux, ensuring
    proper controller support, and integrating with the Steamworks API for achievements
    and cloud saves. The submission process involves paying a submission fee, preparing
    promotional materials such as images and descriptions, and submitting the game
    for review. The review period can vary, but ensuring your game meets all technical
    and content standards can expedite approval.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Steam (PC)**：Steam要求遵守内容指南，包括对成人内容的限制和技术兼容性要求。具体的技术要求包括支持Windows、macOS和Linux，确保适当的控制器支持，以及集成Steamworks
    API以实现成就和云存档。提交流程包括支付提交费、准备促销材料（如图片和描述），并将游戏提交进行审查。审查周期可能有所不同，但确保您的游戏符合所有技术和内容标准可以加快审批流程。'
- en: '**The App Store (iOS)**: The App Store has stringent quality and content guidelines.
    Developers must adhere to technical requirements, including app performance, security
    standards, and compatibility with the latest iOS versions. Specific requirements
    include supporting various screen sizes and resolutions, ensuring app responsiveness,
    and adhering to Apple’s Human Interface Guidelines. The submission process includes
    a developer program fee, creating a detailed app description, providing promotional
    images and videos, and submitting a privacy policy. The review period can be strict,
    so thorough testing and compliance are essential.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**The App Store (iOS)**：App Store对质量和内容指南要求严格。开发者必须遵守技术要求，包括应用性能、安全标准和与最新iOS版本的兼容性。具体要求包括支持各种屏幕尺寸和分辨率、确保应用响应性，并遵守苹果的人机界面指南。提交流程包括开发者计划费用、创建详细的应用描述、提供促销图片和视频，以及提交隐私政策。审查周期可能非常严格，因此彻底测试和合规性至关重要。'
- en: '**Google Play (Android)**: Google Play also requires compliance with content
    and technical guidelines, but it has a slightly more flexible submission process.
    Developers need to pay a one-time registration fee, prepare promotional materials,
    and submit the app for review. Specific technical requirements include compatibility
    with multiple Android versions, adherence to Google’s Material Design guidelines,
    and ensuring app performance and security. Ensuring your app meets Google Play’s
    guidelines on performance, security, and content will help ease the review process.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Play (Android)**：Google Play同样要求遵守内容和技术指南，但其提交流程相对灵活。开发者需要支付一次性注册费，准备促销材料，并将应用提交进行审查。具体的技术要求包括与多个Android版本的兼容性、遵守谷歌的Material
    Design指南，并确保应用性能和安全性。确保您的应用符合Google Play在性能、安全和内容方面的指南将有助于简化审查过程。'
- en: '**PlayStation Network (PSN) and Xbox Live**: Both PlayStation Network and Xbox
    Live require compliance with strict content and technical guidelines. Developers
    must adhere to platform-specific certification requirements, pay associated fees,
    prepare detailed promotional materials, and submit their games for rigorous review.
    Key technical requirements include compatibility with respective console hardware,
    adherence to user interface guidelines, and ensuring robust game performance and
    security. Meeting these guidelines ensures a smoother review process and successful
    game release on PlayStation Network and Xbox Live.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PlayStation Network (PSN) 和 Xbox Live**：PlayStation Network和Xbox Live都要求遵守严格的内容和技术指南。开发者必须遵守平台特定的认证要求，支付相关费用，准备详细的促销材料，并将游戏提交进行严格审查。关键的技术要求包括与相应游戏机硬件的兼容性、遵守用户界面指南，并确保游戏性能和安全性。遵守这些指南可以确保审查过程更加顺畅，并在PlayStation
    Network和Xbox Live上成功发布游戏。'
- en: Navigating the submission processes and requirements of various platforms is
    essential for a successful game release. By understanding and complying with the
    guidelines of each platform, you can ensure a smoother submission experience.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 了解并遵守各个平台的提交流程和要求对于成功发布游戏至关重要。通过理解和遵守每个平台的指南，您可以确保提交体验更加顺畅。
- en: 'The following screenshot is a sample of what you encounter on each hosting
    platform. This is specifically for Google Play:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图是您在每个托管平台上遇到的一些示例。这是专门针对Google Play的：
- en: '![Figure 16.2 – The Google Play console submission screen](img/B22128_16_02.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图16.2 – Google Play控制台提交屏幕](img/B22128_16_02.jpg)'
- en: Figure 16.2 – The Google Play console submission screen
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.2 – Google Play控制台提交屏幕
- en: Next, we will discuss how to choose the right platform for your game and the
    best practices to maximize your chances of success.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论如何选择适合您游戏的最佳平台，以及最佳实践以最大化您成功的机会。
- en: Choosing the right platform and the best practices
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择正确的平台和最佳实践
- en: Selecting the most suitable platform(s) for your game is an important decision
    that can significantly impact your game’s success. This section guides developers
    on how to choose the right platform, based on factors such as game genre, target
    audience, and available resources. We will also discuss strategic considerations
    for exclusive versus multi-platform releases and highlight the best practices
    for publishing on each platform, ensuring that your game reaches its intended
    audience and maximizes its potential for success.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 选择最适合您游戏的最合适的平台是一个重要的决定，它可以显著影响您游戏的成功。本节指导开发者如何根据游戏类型、目标受众和可用资源等因素选择正确的平台。我们还将讨论独家与多平台发布的战略考虑，并强调每个平台发布的最佳实践，确保您的游戏达到目标受众，并最大限度地发挥其成功潜力。
- en: 'The following list provides some key considerations to ensure your success:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表提供了一些关键考虑因素，以确保您的成功：
- en: 'Selecting the most appropriate platform for your game can greatly influence
    its success and depends heavily on the genre and target audience. For example,
    casual and mobile games often perform exceptionally well on the App Store and
    Google Play. These platforms cater to a broad range of users who prefer quick,
    accessible gaming experiences. Games such as *Candy Crush Saga* and *Clash of
    Clans* have found immense success on mobile platforms due to their engaging, bite-sized
    gameplay. Conversely, more immersive and complex games might find greater success
    on Steam or console platforms. For instance, *The Witcher 3: Wild Hunt* and *Dark
    Souls* thrive on these platforms because they offer deep, intricate gameplay that
    appeals to core gamers.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择最适合您游戏的平台可以极大地影响其成功，并且很大程度上取决于游戏类型和目标受众。例如，休闲和移动游戏通常在App Store和Google Play上表现非常出色。这些平台迎合了广泛用户群体，他们更喜欢快速、易于访问的游戏体验。像*Candy
    Crush Saga*和*Clash of Clans*这样的游戏由于它们引人入胜、小巧的游戏玩法，在移动平台上取得了巨大成功。相反，更沉浸式和复杂的游戏可能在Steam或游戏机平台上取得更大的成功。例如，*巫师3：狂猎*和*黑暗之魂*在这些平台上蓬勃发展，因为它们提供了深入、复杂的游戏玩法，吸引了核心玩家。
- en: When choosing a platform, it’s essential to evaluate your resources, including
    budget and development time. Developing your game for multiple platforms can be
    resource-intensive, so determining whether you can support a multi-platform release
    or whether focusing on one platform is more feasible is critical. For example,
    an independent developer with limited resources might prioritize releasing their
    game on a single platform, such as Steam, to ensure a polished experience before
    considering a multi-platform launch.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在选择平台时，评估您的资源，包括预算和开发时间至关重要。为多个平台开发您的游戏可能需要大量资源，因此确定您是否能够支持多平台发布，或者专注于一个平台是否更可行是至关重要的。例如，资源有限的独立开发者可能会优先考虑在Steam等单一平台上发布他们的游戏，以确保在考虑多平台发布之前提供完善的游戏体验。
- en: The decision between an exclusive release and a multi-platform release also
    requires careful consideration. An exclusive release can create a sense of scarcity
    and attract platform-specific incentives, such as promotional support. For example,
    games such as *Bloodborne* and *Uncharted 4* benefitted significantly from being
    PlayStation exclusives, receiving extensive marketing and support from Sony. However,
    multi-platform releases can reach a broader audience and maximize revenue potential.
    Games such as *Fortnite* and *Minecraft* have successfully leveraged multi-platform
    releases to build vast player bases and generate substantial revenue across different
    platforms. Weighing the benefits and drawbacks of each approach, based on your
    game’s goals and target market, will help you make an informed decision that aligns
    with your development strategy.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在独家发布和多平台发布之间做出决定也需要仔细考虑。独家发布可以创造稀缺感并吸引平台特定的激励措施，例如促销支持。例如，*Bloodborne* 和 *Uncharted
    4* 作为PlayStation独家游戏，从索尼那里获得了大量的营销和支持，受益匪浅。然而，多平台发布可以触及更广泛的受众并最大化收入潜力。根据你的游戏目标和目标市场权衡每种方法的利弊，将帮助你做出符合你开发策略的明智决定。
- en: 'To maximize your game’s success on various platforms, consider these best practices:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在各个平台上最大化你游戏的成功，请考虑以下最佳实践：
- en: '**Optimizing store listings**: Ensure your game’s store listing is compelling
    and informative. Use high-quality images, engaging descriptions, and relevant
    keywords to attract potential players.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优化商店列表**：确保你的游戏商店列表引人入胜且信息丰富。使用高质量图片、引人入胜的描述和相关的关键词来吸引潜在的玩家。'
- en: '**Engaging with user reviews**: Actively monitor and respond to user reviews.
    Positive engagement can build a loyal community, while addressing negative feedback
    can improve your game’s reputation.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与用户评论互动**：积极监控并回应用户评论。积极的互动可以建立忠诚的社区，而解决负面反馈可以提高你游戏的声誉。'
- en: '**Leveraging platform-specific features**: Take advantage of platform-specific
    features to boost visibility and engagement. For example, use achievements and
    leaderboards on Steam, or integrate ARKit on the App Store for AR games.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**利用平台特定功能**：利用平台特定功能来提高可见性和互动性。例如，在Steam上使用成就和排行榜，或在App Store上集成ARKit用于AR游戏。'
- en: Choosing the right platform and following the best practices for publishing
    are vital steps in ensuring your game’s success. By strategically selecting platforms
    and optimizing your game’s presence, you can maximize visibility and player engagement.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 选择正确的平台并遵循发布最佳实践是确保你游戏成功的关键步骤。通过战略性地选择平台并优化你游戏的曝光度，你可以最大化可见性和玩家互动。
- en: Next, we will delve into marketing and promoting your game to capture your target
    audience’s attention and drive interest in your release.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将深入探讨如何营销和推广你的游戏以吸引目标受众的注意并推动对发布内容的兴趣。
- en: Marketing and promoting your game
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 营销和推广你的游戏
- en: Marketing is essential for ensuring that your game reaches its potential audience.
    In this section, we will cover fundamental marketing strategies, including creating
    a compelling game trailer, leveraging social media, engaging with gaming communities,
    and utilizing press releases and game review sites. We will also discuss the importance
    of building a strong online presence and brand for your game, such as developing
    a game website and using platforms such as YouTube and Twitch for promotion. Start
    marketing your game while it’s still in development by sharing updates and teaser
    content. Releasing a short, polished demo can attract early interest and provide
    valuable feedback, helping you refine your game before the official launch. By
    implementing these strategies, you can effectively capture your target audience’s
    attention and drive interest in your game.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 营销对于确保你的游戏达到潜在受众至关重要。在本节中，我们将介绍基本的营销策略，包括创建引人入胜的游戏预告片、利用社交媒体、与游戏社区互动以及利用新闻稿和游戏评论网站。我们还将讨论为你的游戏建立强大的在线存在感和品牌的重要性，例如开发游戏网站和使用YouTube和Twitch等平台进行推广。在游戏开发过程中就开始营销你的游戏，通过分享更新和预告内容。发布一个简短、精良的演示可以吸引早期兴趣并提供宝贵的反馈，帮助你在大规模发布前完善你的游戏。通过实施这些策略，你可以有效地吸引目标受众的注意并推动对游戏的兴趣。
- en: Creating compelling marketing materials
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建引人入胜的营销材料
- en: Creating high-quality marketing materials is essential for capturing the essence
    of your game and appealing to your target audience. This section focuses on the
    key elements of compelling game trailers, promotional images, and press kits that
    can effectively generate interest and excitement for your game.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 创建高质量的营销材料对于捕捉游戏精髓和吸引目标受众至关重要。本节重点介绍引人入胜的游戏预告片、促销图像和新闻资料包的关键要素，这些要素可以有效地激发对您游戏的兴趣和兴奋感。
- en: 'To effectively promote your game and capture the interest of your target audience,
    consider creating the following compelling marketing materials:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为了有效地推广您的游戏并吸引目标受众的兴趣，考虑创建以下引人入胜的营销材料：
- en: '**Game trailers**: To create a compelling game trailer, focus on engaging gameplay
    footage, captivating music, and a clear call to action. Highlight the most exciting
    and unique aspects of your game to captivate viewers. Ensure that the trailer
    is well-edited, provides a concise overview of what players can expect, and ends
    with a strong, memorable impression.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**游戏预告片**：为了制作引人入胜的游戏预告片，关注引人入胜的游戏画面、吸引人的音乐和明确的行动号召。突出您游戏中最激动人心和独特的方面以吸引观众。确保预告片编辑得很好，提供了玩家可以期待的内容的简洁概述，并以一个强烈、难忘的印象结束。'
- en: '**Promotional images and animated GIFs**: Craft eye-catching promotional images
    and animated GIFs that effectively showcase your game’s graphics and key features.
    Use high-quality visuals that can attract attention and generate interest. These
    assets should be designed to be versatile and suitable for use on social media,
    store listings, and promotional websites.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**促销图像和动画GIF**：制作引人注目的促销图像和动画GIF，有效地展示您游戏的图形和关键特性。使用高质量的视觉元素以吸引注意力并激发兴趣。这些资产应设计得灵活多样，适用于社交媒体、商店列表和促销网站。'
- en: '**Press kits**: Assemble a well-prepared press kit that is essential for media
    outreach. Include a detailed game description, key features, developer information,
    and contact details. Provide high-resolution images, logos, and videos to make
    it easier for journalists and influencers to cover your game. Ensure that all
    materials are professionally presented and easily accessible.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**新闻资料包**：准备一个完善的新闻资料包，这对于媒体接触至关重要。包括详细的游戏描述、关键特性、开发者信息和联系详情。提供高分辨率的图像、标志和视频，以便记者和影响者更容易报道您的游戏。确保所有材料都专业呈现且易于访问。'
- en: '**Making social media content**: Create engaging social media content tailored
    to different platforms to maximize your reach. Design posts that feature your
    game trailers, promotional images, and animated GIFs. Write compelling captions
    and use relevant hashtags to increase visibility. Regularly post updates about
    your game’s development, share behind-the-scenes content, and engage with your
    audience by responding to comments and messages. Use analytics tools to track
    the performance of your posts, and adjust your strategy accordingly.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**制作社交媒体内容**：创建针对不同平台的吸引人的社交媒体内容以最大化您的覆盖范围。设计包含您的游戏预告片、促销图像和动画GIF的帖子。撰写引人入胜的标题并使用相关标签以增加可见度。定期发布关于您游戏开发的更新，分享幕后内容，并通过回复评论和消息与您的受众互动。使用分析工具跟踪帖子的表现，并相应地调整您的策略。'
- en: Creating high-quality marketing materials not only showcases your game but also
    builds anticipation and engagement among potential players. By investing time
    and effort into producing compelling trailers, eye-catching images, and well-prepared
    press kits, you can ensure that your game stands out in a crowded market. These
    materials serve as the first impression of your game, making it essential to craft
    them thoughtfully and strategically to maximize their impact.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 创建高质量的营销材料不仅展示了您的游戏，还能够在潜在玩家中建立期待和参与度。通过投入时间和精力制作引人入胜的预告片、引人注目的图像和精心准备的新闻资料包，您可以确保您的游戏在竞争激烈的市场中脱颖而出。这些材料是您游戏的第一印象，因此精心策划和战略性地制作它们对于最大化其影响至关重要。
- en: Next, we will explore how to leverage social media and content platforms to
    further promote your game and build a strong online presence.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨如何利用社交媒体和内容平台进一步推广您的游戏并建立强大的在线影响力。
- en: Leveraging social media and content platforms
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用社交媒体和内容平台
- en: Effectively using social media and content platforms is crucial for marketing
    your game and building a strong online presence. This section delves into strategies
    to utilize platforms such as X (formerly Twitter), Facebook, Instagram, YouTube,
    and Twitch to engage with potential players and create a vibrant community around
    your game.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 有效使用社交媒体和内容平台对于推广你的游戏和建立强大的在线存在至关重要。本节深入探讨了如何利用X（前身为Twitter）、Facebook、Instagram、YouTube和Twitch等平台与潜在玩家互动并围绕你的游戏建立一个充满活力的社区。
- en: 'To effectively build and engage a community around your game, consider the
    following strategies:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了有效地构建和吸引围绕你的游戏的社区，请考虑以下策略：
- en: '**Building a community**: Social media platforms are powerful tools to build
    a community around your game. Use X, Facebook, and Instagram to share updates
    and behind-the-scenes content, and interact with your audience. Regularly post
    engaging content to keep your community active and interested.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建社区**：社交媒体平台是围绕你的游戏构建社区的有力工具。使用X、Facebook和Instagram分享更新和幕后内容，并与你的观众互动。定期发布吸引人的内容以保持社区活跃和兴趣。'
- en: '**Sharing updates and content**: Consistent branding and regular updates are
    key to maintaining visibility. Share gameplay videos, development progress, and
    announcements on YouTube and Instagram. Utilize interactive content such as polls,
    quizzes, and contests to encourage community participation.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分享更新和内容**：一致的品牌和定期的更新是保持可见性的关键。在YouTube和Instagram上分享游戏视频、开发进度和公告。利用互动内容，如投票、测验和竞赛来鼓励社区参与。'
- en: '**Engaging with players**: Encourage engagement by hosting live streams, Q&A
    sessions, and developer chats on platforms such as Twitch and YouTube. Use these
    opportunities to showcase your game, answer questions, and gather feedback. Collaborating
    with influencers and content creators can also help expand your reach and attract
    new players.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与玩家互动**：通过在Twitch和YouTube等平台上举办直播、问答会和开发者聊天来鼓励互动。利用这些机会展示你的游戏、回答问题并收集反馈。与影响者和内容创作者合作也可以帮助你扩大影响力并吸引新玩家。'
- en: '**Utilizing hashtags and collaborations**: Leverage hashtags to increase the
    visibility of your posts on social media. Collaborate with influencers and content
    creators to reach a broader audience. Their endorsement can lend credibility to
    your game and attract their followers’ interest.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**利用标签和合作**：利用标签来增加你在社交媒体上帖子的可见性。与影响者和内容创作者合作，以触及更广泛的受众。他们的推荐可以为你的游戏增添可信度，并吸引他们的粉丝的兴趣。'
- en: Effectively utilizing social media and content platforms can greatly enhance
    your game’s visibility and player engagement. By fostering a community, providing
    consistent updates, and actively engaging with your audience, you can establish
    a robust online presence.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 有效利用社交媒体和内容平台可以极大地提高你游戏的可见性和玩家参与度。通过培养社区、提供一致的更新和积极与观众互动，你可以建立一个强大的在线存在感。
- en: 'The following screenshot is an example of the effective use of a game trailer:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图是有效使用游戏预告片的例子：
- en: '![Figure 16.3 – A screenshot of the trailer for the PlayStation game State
    of Play on YouTube](img/B22128_16_03.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图16.3 – YouTube上PlayStation游戏《State of Play》预告片的截图](img/B22128_16_03.jpg)'
- en: Figure 16.3 – A screenshot of the trailer for the PlayStation game State of
    Play on YouTube
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.3 – YouTube上PlayStation游戏《State of Play》预告片的截图
- en: The *State of Play* trailer is effective because it combines high-quality visuals
    with dynamic storytelling, capturing the viewer’s attention immediately. It showcases
    key gameplay mechanics and highlights the unique aspects of the game, creating
    excitement and anticipation. The trailer also features a well-chosen soundtrack
    that complements the visuals and enhances the overall impact. By strategically
    revealing glimpses of the game’s world, characters, and plot, it successfully
    builds intrigue and encourages viewers to learn more about the game.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 《State of Play》预告片之所以有效，是因为它将高质量的视觉效果与动态叙事相结合，立即吸引观众的注意力。它展示了关键的游戏机制，并突出了游戏的独特之处，创造了兴奋和期待。预告片还配有一首精心挑选的配乐，与视觉效果相得益彰，增强了整体影响。通过战略性地揭示游戏世界的片段、角色和情节，它成功地建立了神秘感，并鼓励观众了解更多关于游戏的信息。
- en: Next, we will explore how to engage with gaming communities and media to further
    promote your game and enhance its reach.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨如何与游戏社区和媒体互动，以进一步推广你的游戏并扩大其影响力。
- en: Engaging with gaming communities and media
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与游戏社区和媒体互动
- en: Engaging directly with gaming communities and the media is a vital strategy
    for promoting your game and building a supportive player base. This section highlights
    the benefits of participating in online forums, gaming communities, and industry
    events, as well as strategies to secure media coverage.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 直接与游戏社区和媒体互动是推广您的游戏和建立支持性玩家群的关键策略。本节强调了参与在线论坛、游戏社区和行业活动的好处，以及确保媒体覆盖的策略。
- en: 'To further enhance your game’s visibility and build a strong presence, consider
    these additional strategies:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步提高您游戏的可见度并建立强大的存在感，请考虑以下附加策略：
- en: '**Participating in online forums and communities**: Engaging with platforms
    such as Reddit, Discord, and specialized gaming forums allows you to connect with
    passionate gamers who can provide valuable feedback and generate word-of-mouth
    promotion. Actively participate in discussions, share updates, and respond to
    player inquiries to build a loyal community.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**参与在线论坛和社区**：与Reddit、Discord和专门的游戏论坛等平台互动，您可以与充满热情的游戏玩家建立联系，他们可以提供宝贵的反馈并产生口碑推广。积极参与讨论、分享更新并回应玩家询问，以建立一个忠实的社区。'
- en: '**Attending industry events**: Showcasing your game at industry events, both
    virtual and in-person, can significantly enhance its visibility. Events such as
    game conventions, developer conferences, and trade shows offer opportunities to
    demo your game, network with industry professionals, and gather direct feedback
    from potential players.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**参加行业活动**：在虚拟和现场的行业活动中展示您的游戏可以显著提高其可见度。游戏展销会、开发者会议和贸易展等活动为您提供了展示游戏、与行业专业人士建立联系以及从潜在玩家那里获取直接反馈的机会。'
- en: '**Reaching out to game journalists and review sites**: Securing coverage from
    game journalists, bloggers, and review sites can greatly boost your game’s profile.
    Develop a list of relevant media contacts and reach out with personalized pitches.
    Highlight what makes your game unique and why it will interest their audience.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**联系游戏记者和评论网站**：从游戏记者、博客作者和评论网站获得报道可以极大地提升您游戏的名气。制定一份相关媒体联系人名单，并针对个性化提案进行联系。突出您游戏独特之处以及它为何会吸引他们的受众。'
- en: '**Crafting press releases and pitching stories**: Effective press releases
    are crucial for attracting media attention. Craft clear and compelling press releases
    that outline the key features of your game, its release date, and any notable
    achievements or endorsements. Keep media outlets informed about the game’s development
    and ensure that your game stays on their radar.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**撰写新闻稿和提出故事**：有效的新闻稿对于吸引媒体关注至关重要。撰写清晰而有吸引力的新闻稿，概述您游戏的关键功能、发布日期以及任何显著的成就或认可。保持媒体机构对游戏开发的了解，并确保您的游戏始终出现在他们的雷达上。'
- en: Engaging with gaming communities and securing media coverage are essential strategies
    to promote your game and build a dedicated player base. By actively participating
    in forums, attending industry events, and reaching out to the media, you can generate
    buzz and attract attention from a broader gaming audience.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 与游戏社区互动和确保媒体覆盖是推广您的游戏和建立忠实玩家群的基本策略。通过积极参与论坛、参加行业活动以及联系媒体，您可以制造轰动效应并吸引更广泛的游戏受众的关注。
- en: Next, we will explore various monetization strategies to ensure your game’s
    financial sustainability and success.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨各种货币化策略，以确保您的游戏在财务上可持续并取得成功。
- en: Effective game monetization strategies
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 有效的游戏货币化策略
- en: Monetizing a game effectively is crucial for financial sustainability. This
    section explores various monetization models suitable for Unity games, including
    in-app purchases, ads, premium pricing, and subscription models. We will discuss
    the integration of Unity Ads and Unity **IAP**, providing practical insights into
    how to implement these features. Emphasis will be placed on balancing monetization
    with a positive player experience to ensure that players remain engaged without
    feeling alienated. By understanding and applying these strategies, you can create
    sustainable revenue streams while maintaining a loyal player base.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 有效地货币化游戏对于财务可持续性至关重要。本节探讨了适用于Unity游戏的多种货币化模式，包括应用内购买、广告、高级定价和订阅模式。我们将讨论Unity
    Ads和Unity **IAP**的集成，提供如何实现这些功能的实用见解。重点将放在平衡货币化与积极的玩家体验上，以确保玩家保持参与感，而不会感到被排斥。通过理解和应用这些策略，您可以在保持忠实玩家群的同时创造可持续的收入流。
- en: An overview of monetization models
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 货币化模式的概述
- en: Understanding the various monetization models available for games is crucial
    for financial sustainability. This section provides a comprehensive overview of
    different monetization options, including IAPs, advertising, premium (pay-to-download)
    pricing, and subscription services. By examining the advantages and disadvantages
    of each model, developers can determine which approaches best fit their game types.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 了解游戏可用的各种货币化模型对于财务可持续性至关重要。本节提供了不同货币化选项的全面概述，包括内购、广告、高级（付费下载）定价和订阅服务。通过分析每种模式的优缺点，开发者可以确定哪些方法最适合他们的游戏类型。
- en: 'Here are some popular monetization strategies to consider for your game:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些值得考虑的流行货币化策略：
- en: '**IAPs**: IAPs allow players to buy virtual goods or premium content within
    a game. This model is popular in free-to-play games and offers the advantage of
    continuous revenue generation. However, it requires careful balancing to avoid
    alienating players with aggressive monetization tactics. *Candy Crush Saga* is
    an example of a game that uses IAPs to sell extra lives and boosters.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内购**：内购允许玩家在游戏中购买虚拟商品或高级内容。这种模式在免费游玩的游戏中很受欢迎，并且提供了持续收入生成的优势。然而，它需要仔细平衡，以避免通过激进的货币化策略使玩家感到疏远。“糖果传奇”是一款使用内购来销售额外生命和助推器的游戏的例子。'
- en: '**Advertising**: Integrating ads into your game can generate revenue from free-to-play
    titles. Banner ads, interstitial ads, and rewarded videos are common formats.
    While ads can provide steady income, they need to be implemented thoughtfully
    to avoid disrupting the player experience. *Angry Birds* is an example of a game
    that features interstitial ads and rewarded video ads.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**广告**：将广告整合到游戏中可以从免费游玩的游戏中产生收入。横幅广告、插屏广告和奖励视频是常见的格式。虽然广告可以提供稳定的收入，但它们需要谨慎实施，以避免干扰玩家体验。“愤怒的小鸟”是一款包含插屏广告和奖励视频广告的游戏的例子。'
- en: '**Premium pricing**: This model involves charging players a one-time fee to
    download a game. It can be suitable for high-quality, content-rich games. The
    primary advantage is upfront revenue, but it limits the potential for continuous
    income compared to free-to-play models with IAPs or ads. *Minecraft* is an example
    of a game that charges a one-time fee for access to its game.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高级定价**：这种模式涉及向玩家收取一次性费用以下载游戏。它可能适合高质量、内容丰富的游戏。主要优势是前期收入，但与内购或广告的免费游玩模式相比，它限制了持续收入的可能性。“我的世界”是一款收取一次性费用以访问其游戏的游戏的例子。'
- en: '**Subscription services**: Subscriptions offer players access to exclusive
    content or benefits for a recurring fee. This model can create a stable revenue
    stream and increase player retention. However, it requires ongoing content updates
    and enhancements to justify the recurring cost. *Apple Arcade* is an example of
    a game that offers a subscription service with access to a library of exclusive
    games.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**订阅服务**：订阅为玩家提供以定期费用获取独家内容或福利的途径。这种模式可以创造稳定的收入流并提高玩家留存率。然而，它需要持续的内容更新和改进，以证明定期费用的合理性。“苹果
    Arcade”是一款提供订阅服务，可访问独家游戏库的游戏的例子。'
- en: 'Here are the advantages and disadvantages of each model:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是每个模型的优缺点：
- en: '**IAPs**: Continuous revenue but a risk of over-monetization'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内购**：持续收入但存在过度货币化的风险'
- en: '**Advertising**: Steady income but the potential to disrupt gameplay'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**广告**：稳定的收入但有可能干扰游戏体验'
- en: '**Premium pricing**: Upfront revenue but no ongoing income'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高级定价**：前期收入但没有持续收入'
- en: '**Subscription services**: Stable revenue but requires continuous content updates'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**订阅服务**：稳定的收入但需要持续的内容更新'
- en: Understanding the pros and cons of various monetization models helps developers
    choose the best fit for their games. This basic knowledge sets the stage to implement
    these models effectively.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 了解各种货币化模型的优缺点有助于开发者选择最适合他们游戏的方案。这种基本知识为有效实施这些模型奠定了基础。
- en: Next, we will delve into the specifics of implementing in-app purchases and
    ads to maximize revenue while maintaining a positive player experience.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将深入了解实施内购和广告的具体细节，以在保持积极玩家体验的同时最大化收入。
- en: Implementing IAPs and ads
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实施内购和广告
- en: Integrating IAPs and advertisements into your Unity game can create significant
    revenue streams. This section delves into the specifics of using Unity IAP and
    Unity Ads, providing the best practices to incorporate these monetization strategies
    in a way that maintains a positive player experience.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 将IAPs和广告整合到您的Unity游戏中可以创造显著的收入来源。本节深入探讨使用Unity IAP和Unity Ads的细节，提供将这些货币化策略融入游戏的最佳实践，以确保玩家体验保持积极。
- en: First, let’s delve into **Unity IAP**. This is a powerful tool to manage in-game
    storefronts and microtransactions. It supports both consumable items, which can
    be purchased repeatedly (e.g., in-game currency), and non-consumable items, which
    are purchased once and provide permanent benefits (e.g., unlocking a level). Setting
    up Unity IAP involves configuring your game to connect with the appropriate app
    store, creating in-game products, and handling purchase events to deliver items
    to players. Ensure that your in-game economy is well-balanced to encourage purchases
    without overwhelming players.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们深入了解**Unity IAP**。这是一个强大的工具，用于管理游戏内的商店和微交易。它支持可消耗物品，这些物品可以重复购买（例如，游戏货币），以及一次性购买并提供永久性利益的非消耗性物品（例如，解锁关卡）。设置Unity
    IAP涉及将您的游戏配置为连接到适当的商店，创建游戏内产品，并处理购买事件以向玩家交付物品。确保您的游戏内经济平衡，以鼓励购买而不让玩家感到压力。
- en: Next, let’s talk about **Unity Ads**. This allows developers to integrate advertisements
    into their games. One effective method is using rewarded video ads, where players
    choose to watch an ad in exchange for in-game rewards. This approach minimizes
    disruption to gameplay while providing an incentive for players. Implementing
    Unity Ads involves integrating the **Software Development Kit** (**SDK**), setting
    up ad placements, and configuring rewards. The SDK is a collection of software
    tools and libraries that developers use to create applications for specific platforms.
    It’s important to strategically place ads so that they enhance rather than detract
    from the player experience.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们谈谈**Unity Ads**。这允许开发者将广告集成到他们的游戏中。一种有效的方法是使用奖励视频广告，玩家可以选择观看广告以换取游戏内奖励。这种方法最小化了游戏中断，同时为玩家提供了激励。实施Unity
    Ads涉及集成**软件开发工具包**（**SDK**），设置广告位置，并配置奖励。SDK是一组软件工具和库的集合，开发者使用它们为特定平台创建应用程序。战略性地放置广告很重要，以确保它们增强而不是削弱玩家体验。
- en: 'Here are the best practices for Unity IAPs and Ads:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是Unity IAPs和Ads的最佳实践：
- en: '**For IAPs**: Offer a mix of consumable and non-consumable items. Ensure pricing
    is reasonable and aligns with the perceived value. Regularly update the store
    with new items to maintain interest.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对于IAPs**：提供可消耗和非消耗性物品的混合。确保定价合理且与感知价值相符。定期更新商店以保持兴趣。'
- en: '**For Ads**: Use rewarded video ads sparingly and at appropriate moments, such
    as after a level completion or when offering extra lives. Avoid interrupting gameplay
    with intrusive ads.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对于Ads**：谨慎使用奖励视频广告，并在适当的时候使用，例如在完成关卡或提供额外生命时。避免使用侵入性广告打断游戏。'
- en: Effectively implementing IAPs and ads can significantly boost your game’s revenue
    while maintaining a positive player experience. By using Unity IAP for microtransactions
    and Unity Ads for non-intrusive advertising, you can create a balanced monetization
    strategy. Next, we will discuss how to balance these monetization efforts with
    player experience to ensure long-term engagement and satisfaction.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 有效地实施IAPs和广告可以显著提高您游戏的收入，同时保持积极的玩家体验。通过使用Unity IAP进行微交易和Unity Ads进行非侵入性广告，您可以创建一个平衡的货币化策略。接下来，我们将讨论如何平衡这些货币化努力与玩家体验，以确保长期参与和满意度。
- en: Balancing monetization with player experience
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 平衡货币化与玩家体验
- en: Balancing monetization efforts with maintaining a positive and engaging player
    experience is crucial for the long-term success of your game. This section focuses
    on strategies to integrate monetization elements seamlessly into a game, ensuring
    that they enhance rather than detract from the core gameplay experience.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在保持积极和吸引人的玩家体验的同时平衡货币化努力对于您游戏的长远成功至关重要。本节重点介绍将货币化元素无缝集成到游戏中的策略，确保它们增强而不是削弱核心游戏体验。
- en: 'Here are some best practices to seamlessly integrate monetization elements
    into your game:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些将货币化元素无缝集成到您的游戏中的最佳实践：
- en: '**The natural integration of monetization elements**: Design monetization features
    to feel like an organic part of a game rather than intrusive or disruptive additions.
    For instance, offer in-game purchases that align with the game’s theme and enhance
    the player experience, such as cosmetic items or additional levels.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自然整合货币化元素**：设计货币化功能，使其感觉像是游戏的一个有机部分，而不是侵入性或破坏性的补充。例如，提供与游戏主题相符的、可以增强玩家体验的游戏内购买，如外观物品或额外关卡。'
- en: '**Pacing the introduction of monetizable elements**: Introduce monetizable
    elements gradually to avoid overwhelming players. Start with basic gameplay and
    progressively introduce opportunities for IAPs or ads. This pacing helps players
    become invested in the game before encountering monetization.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**逐步引入可货币化元素**：逐步引入可货币化元素，以避免让玩家感到不知所措。从基本游戏玩法开始，逐步引入内购或广告的机会。这种节奏有助于在玩家遇到货币化之前让他们对游戏产生兴趣。'
- en: '**Fair value for in-game purchases**: Ensure that in-game purchases offer fair
    value to players. Prices should reflect the perceived benefit and rarity of items.
    Avoid pay-to-win mechanics that could alienate players by making purchases optional
    and non-essential for game progress.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**游戏内购买的公平价值**：确保游戏内购买为玩家提供公平的价值。价格应反映物品的感知效益和稀有度。避免通过使购买可选和非必需来损害玩家利益的“付费获胜”机制。'
- en: '**Non-intrusive ads**: Integrate advertisements in a way that minimizes disruption.
    Use rewarded video ads that players can choose to watch for in-game rewards, and
    place ads at natural breaks in gameplay, such as between levels or after completing
    a challenge.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**非侵入性广告**：以最小化干扰的方式整合广告。使用玩家可以选择观看以获得游戏奖励的奖励视频广告，并在游戏玩法中的自然休息点放置广告，例如关卡之间或完成挑战后。'
- en: '**Player feedback**: Actively seek and incorporate player feedback to refine
    monetization strategies. Regularly monitor player responses to IAPs and ads, and
    adjust your approach based on their preferences and expectations to maintain a
    positive experience.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**玩家反馈**：积极寻求并整合玩家反馈，以完善货币化策略。定期监控玩家对内购和广告的反应，并根据他们的偏好和期望调整方法，以保持良好的体验。'
- en: Balancing monetization with player experience is essential for keeping players
    engaged and satisfied. By integrating monetization elements naturally, pacing
    their introduction, offering fair value, and ensuring ads are non-intrusive, you
    can create a harmonious and enjoyable gaming experience.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 平衡货币化与玩家体验对于保持玩家参与度和满意度至关重要。通过自然地整合货币化元素，合理安排引入节奏，提供公平的价值，并确保广告不具侵入性，你可以创造一个和谐且愉快的游戏体验。
- en: Next, we will explore strategies for community engagement and support to further
    enhance player satisfaction and build a loyal player base.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨社区参与和支持策略，以进一步提升玩家满意度并建立一个忠诚的玩家基础。
- en: Community engagement and support
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 社区参与和支持
- en: A vibrant player community can significantly contribute to a game’s long-term
    success. This section focuses on strategies to build and maintain an engaged community,
    such as creating and moderating online forums, utilizing social media channels,
    implementing in-game community features, and providing consistent game updates
    and support. We will highlight the importance of community feedback in shaping
    game updates and fostering player loyalty. By actively engaging with your players
    and creating a supportive environment, you can enhance the overall player experience
    and ensure the longevity of your game.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 一个充满活力的玩家社区可以显著促进游戏的长远成功。本节重点介绍构建和维护一个积极参与的社区的策略，例如创建和监管在线论坛，利用社交媒体渠道，实施游戏内社区功能，以及提供一致的游戏更新和支持。我们将强调社区反馈在塑造游戏更新和培养玩家忠诚度方面的重要性。通过积极与玩家互动并创造一个支持性的环境，你可以提升整体玩家体验并确保游戏的持久性。
- en: Building and nurturing a game community
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建和培养游戏社区
- en: Establishing a strong community around your game is crucial for its long-term
    success. This section discusses the importance of fostering a dedicated player
    community and explores various platforms and tools to facilitate this engagement.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的游戏中建立一个强大的社区对于其长期成功至关重要。本节讨论了培养一个忠诚玩家社区的重要性，并探讨了各种平台和工具以促进这种参与。
- en: 'To foster a strong and engaged community, consider these strategies:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 要培养一个强大且积极参与的社区，请考虑以下策略：
- en: '**Creating dedicated spaces for interaction**: Set up official game forums,
    Discord servers, and social media groups where players can interact, share experiences,
    and provide feedback. These dedicated spaces allow for direct communication between
    the development team and the player base, fostering a sense of belonging and loyalty.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建专门的互动空间**：设立官方游戏论坛、Discord服务器和社交媒体群组，让玩家可以互动、分享体验并提供反馈。这些专门的空间允许开发团队和玩家基础之间进行直接沟通，培养归属感和忠诚度。'
- en: '**Encouraging positive engagement**: Host community events, contests, and Q&A
    sessions with the development team to keep players engaged and excited about a
    game. These activities not only generate interest but also encourage players to
    participate actively and positively within the community.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**鼓励积极互动**：举办社区活动、竞赛和与开发团队的问答会，以保持玩家对游戏的兴趣和热情。这些活动不仅能够激发兴趣，还能鼓励玩家在社区中积极参与和正面互动。'
- en: '**Maintaining a welcoming atmosphere**: Effective moderation is key to ensuring
    a positive and inclusive environment. Establish clear community guidelines and
    enforce them consistently to prevent toxic behavior. Promote a welcoming atmosphere
    where all players feel valued and respected.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保持欢迎的氛围**：有效的管理是确保积极和包容环境的关键。建立明确的社区指南并始终如一地执行，以防止有毒行为。营造一个让所有玩家都感到受重视和尊重的欢迎氛围。'
- en: '**Tools and platforms**: Utilize tools such as Discord for real-time interaction,
    Reddit for broader discussions, and social media platforms such as X and Facebook
    for updates and announcements. Each platform offers unique advantages to build
    and nurture your community.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工具和平台**：利用Discord进行实时互动、Reddit进行更广泛的讨论，以及X和Facebook等社交媒体平台进行更新和公告。每个平台都提供了独特的优势，以构建和培养社区。'
- en: Building and nurturing a game community involves creating dedicated spaces for
    interaction, encouraging positive engagement, and maintaining a welcoming atmosphere.
    By actively fostering a supportive and inclusive community, you can enhance player
    satisfaction and loyalty.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 构建和培养游戏社区涉及创建专门的互动空间、鼓励积极互动，并保持欢迎的氛围。通过积极培养一个支持和包容的社区，您可以提高玩家的满意度和忠诚度。
- en: Next, we will explore how to leverage community feedback for game improvement,
    ensuring that your game evolves based on player input and experiences.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨如何利用社区反馈来改进游戏，确保游戏根据玩家的输入和体验不断进化。
- en: Leveraging community feedback for game improvement
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用社区反馈改进游戏
- en: Community feedback plays a critical role in the ongoing development and improvement
    of your game. This section delves into effective methods to collect and analyze
    player feedback, and it also emphasizes the importance of transparency and engagement
    in using this feedback to inform game updates and new content.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 社区反馈在游戏的持续开发和改进中起着关键作用。本节深入探讨了有效收集和分析玩家反馈的方法，并强调了在利用这些反馈来指导游戏更新和新内容时透明度和参与度的重要性。
- en: 'Here’s how you can leverage community feedback for game improvement:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是您如何利用社区反馈来改进游戏的方法：
- en: '**Collect player feedback**: Utilize various methods to gather feedback from
    your community, including surveys, forum discussions, and direct support channels.
    Encourage players to share their experiences, suggestions, and concerns to gain
    valuable insights into their perspectives.'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**收集玩家反馈**：利用各种方法收集社区反馈，包括调查、论坛讨论和直接支持渠道。鼓励玩家分享他们的体验、建议和担忧，以获得他们对游戏看法的宝贵见解。'
- en: '**Analyze feedback**: Carefully analyze the collected feedback to identify
    common themes and areas for improvement. Prioritize actionable items based on
    their impact on the player experience and how feasible it is to implement them.
    Use data-driven approaches to understand player preferences and pain points.'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**分析反馈**：仔细分析收集到的反馈，以识别共同的主题和改进领域。根据对玩家体验的影响以及实施的可行性，优先处理可操作的项目。使用数据驱动的方法来了解玩家的偏好和痛点。'
- en: Then, be transparent with your community about how their feedback is used. Regularly
    communicate updates and changes inspired by player suggestions, and explain the
    reasoning behind decisions. This openness fosters trust and shows players that
    their input is valued.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，向您的社区透明地说明如何使用他们的反馈。定期沟通基于玩家建议的更新和变化，并解释决策背后的原因。这种开放性培养了信任，并表明玩家的意见受到重视。
- en: '**Make actionable decisions**: Assess the feasibility and impact of player
    suggestions. Evaluate which feedback can realistically be implemented within a
    game’s development constraints and which changes will most significantly enhance
    the player experience. This assessment ensures that resources are allocated effectively
    to enact meaningful improvements.'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**做出可执行的决策**：评估玩家建议的可行性和影响。评估哪些反馈可以在游戏开发限制内实际实施，以及哪些变化将最显著地增强玩家体验。这种评估确保资源得到有效分配，以实施有意义的改进。'
- en: Actively engaging with the community and incorporating their suggestions can
    lead to meaningful improvements in a game. For example, addressing a frequently
    mentioned bug, adding a highly requested feature, or adjusting game balance based
    on player feedback can enhance the overall experience. These actions demonstrate
    a commitment to the community and can increase player loyalty and satisfaction.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 积极参与社区并采纳他们的建议可以导致游戏在有意义方面的改进。例如，解决经常提到的错误、添加高度请求的功能或根据玩家反馈调整游戏平衡可以增强整体体验。这些行动表明了对社区的承诺，并可以增加玩家的忠诚度和满意度。
- en: Leveraging community feedback is essential for continuous game improvement and
    fostering a strong player base. By effectively collecting, analyzing, and acting
    on player feedback and maintaining transparency with your community, you can create
    a more engaging and responsive gaming experience.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 利用社区反馈对于持续改进游戏和培养强大的玩家基础至关重要。通过有效地收集、分析和采取玩家反馈，并与社区保持透明度，您可以创造一个更具吸引力和响应性的游戏体验。
- en: This concludes our exploration of publishing, monetizing, and marketing your
    game in Unity. With these strategies, you’re well-equipped to launch, promote,
    and sustain a successful game.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这标志着我们对在Unity中发布、货币化和营销游戏的探索结束。有了这些策略，您已经准备好推出、推广和维持一个成功的游戏。
- en: Summary
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we explored the crucial final stages of your game development
    journey, focusing on publishing, monetizing, and marketing your Unity games. By
    navigating various game publishing platforms, you can select the best channels
    to release your game. Effective marketing techniques help capture your target
    audience’s attention and generate interest. Implementing various monetization
    models ensures sustainable revenue streams while maintaining a positive player
    experience. Additionally, building and nurturing a vibrant player community fosters
    long-term engagement and success. Equipped with these strategies, you’re now ready
    to launch, promote, and sustain your game in a competitive market. With the wealth
    of information provided in this book, you are well-prepared to take on the challenges
    of game development and achieve success.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了游戏开发旅程的关键最后阶段，重点关注发布、货币化和营销您的Unity游戏。通过导航各种游戏发布平台，您可以选择最佳渠道发布您的游戏。有效的营销技巧有助于吸引目标受众的注意并激发兴趣。实施各种货币化模式确保可持续的收入流，同时保持积极的玩家体验。此外，建立和培养一个充满活力的玩家社区可以促进长期参与和成功。装备了这些策略，您现在已准备好在竞争激烈的市场中推出、推广和维持您的游戏。本书提供的大量信息使您为应对游戏开发的挑战和取得成功做好了充分准备。
- en: Join our community on Discord
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的Discord社区
- en: 'Join our community’s Discord space for discussions with the authors and other
    readers: [https://packt.link/gamedevelopment](https://discord.com/invite/NnJesrUJbu?link_from_packtlink=yes)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们社区的Discord空间，与作者和其他读者进行讨论：[https://packt.link/gamedevelopment](https://discord.com/invite/NnJesrUJbu?link_from_packtlink=yes)
- en: '![](img/Disclaimer_QR1.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![免责声明二维码](img/Disclaimer_QR1.jpg)'
- en: Addendum Unlocking Unity 6 – Advanced Features and Performance Boosts
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 补充说明：解锁Unity 6 - 高级功能和性能提升
- en: As game development continues to evolve, Unity remains at the forefront, empowering
    developers with cutting-edge tools and enhancements. Unity 6 introduces a suite
    of new features designed to boost performance, streamline workﬂows, and open new
    creative possibilities. This chapter focuses on these advancements, oﬀering a
    detailed exploration of how Unity 6’s innovations can elevate your projects to
    the next level.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 随着游戏开发的不断发展，Unity始终处于前沿，为开发者提供尖端工具和增强功能。Unity 6引入了一系列新功能，旨在提升性能、简化工作流程并开辟新的创意可能性。本章重点介绍这些进步，详细探讨了Unity
    6的创新如何将您的项目提升到下一个水平。
- en: From the latest **Input System** to the powerful **UI Toolkit**, Unity 6 simplifies
    complex tasks while enhancing ﬂexibility. Developers can now handle input from
    multiple devices with greater ease and efficiency, making cross-platform development
    more streamlined than ever before. Additionally, the enhanced profiling tools
    in Unity 6 provide deeper insights into performance bottlenecks, enabling fine-tuning
    of game performance for smoother gameplay experiences.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 从最新的**输入系统**到强大的**UI工具包**，Unity 6简化了复杂任务同时增强了灵活性。开发者现在可以更轻松、更高效地处理来自多个设备的输入，使跨平台开发比以往任何时候都更加流畅。此外，Unity
    6中增强的配置文件工具提供了对性能瓶颈的更深入洞察，使得对游戏性能进行微调以实现更平滑的游戏体验成为可能。
- en: Beyond input and profiling, Unity 6 brings significant performance boosts, including
    improved memory management and optimized script execution, which help developers
    achieve better runtime performance. The addition of **Burst compiler** enhancements
    ensures that even the most CPU-intensive tasks are handled with efficiency, reducing
    overhead and increasing overall game responsiveness. Meanwhile, graphics enhancements
    in Unity 6 push the boundaries of what is possible in real-time rendering, making
    it easier to create visually stunning games without sacrificing performance.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 除了输入和配置文件之外，Unity 6带来了显著的性能提升，包括改进的内存管理和优化的脚本执行，这有助于开发者实现更好的运行时性能。**Burst编译器**增强功能的加入确保了即使是CPU密集型任务也能以高效的方式处理，减少开销并提高整体游戏响应速度。同时，Unity
    6中的图形增强推动了实时渲染的边界，使得在不牺牲性能的情况下创建视觉上令人惊叹的游戏变得更加容易。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Harnessing the power of UI Toolkit – streamlined UI development in Unity 6
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用UI工具包的力量——在Unity 6中实现流畅的UI开发
- en: Mastering the new Input System – efficient multi-device input handling
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 掌握新的输入系统——高效的多设备输入处理
- en: Profiling like a pro – enhanced performance monitoring with Unity 6
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 专业级性能监控——Unity 6增强的性能监控
- en: Performance boosts and optimizations – elevating your game’s efficiency
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能提升和优化——提升游戏效率
- en: Graphics and beyond
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形及其他
- en: Technical requirements
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'Here are the technical requirements for Unity 6 across various platforms:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是Unity 6在各个平台上的技术要求：
- en: 'Unity Editor:'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity编辑器：
- en: 'Windows:'
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows：
- en: '**OS**: Windows 10 (version 21H1) or newer'
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作系统**: Windows 10（版本21H1）或更高版本'
- en: '**CPU**: x86, x64 architecture with SSE2 support, ARM64'
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CPU**: 支持SSE2指令集的x86、x64架构，ARM64'
- en: '**Graphics API**: DX10, DX11, DX12, or Vulkan-capable GPUs'
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图形API**: 支持DX10、DX11、DX12或Vulkan的GPU'
- en: '**Additional**: Visual Studio 2019 or newer with C++ tools for IL2CPP scripting
    backend'
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**附加**: Visual Studio 2019或更高版本，带有C++工具的IL2CPP脚本后端'
- en: 'macOS:'
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS：
- en: '**OS**: macOS Big Sur (11.0+) or newer'
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作系统**: macOS Big Sur（11.0）或更高版本'
- en: '**CPU**: Apple Silicon or x64 architecture with SSE2'
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CPU**: 苹果硅或x64架构支持SSE2'
- en: '**Graphics API**: Metal-capable Intel and AMD GPUs'
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图形API**: 支持Metal的Intel和AMD GPU'
- en: '**Additional**: IL2CPP scripting backend requires Xcode'
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**附加**: IL2CPP脚本后端需要Xcode'
- en: 'Linux:'
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux：
- en: '**OS**: Ubuntu 22.04 or Ubuntu 24.04'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作系统**: Ubuntu 22.04或Ubuntu 24.04'
- en: '**CPU**: x64 architecture with SSE2 instruction set support'
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CPU**: 支持SSE2指令集的x64架构'
- en: '**Graphics API**: OpenGL 3.2+ or Vulkan-capable GPUs'
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图形API**: OpenGL 3.2+或支持Vulkan的GPU'
- en: '**Additional**: GNOME desktop environment with X11 windowing system, Nvidia,
    or AMD proprietary drivers'
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**附加**: GNOME桌面环境与X11窗口系统、Nvidia或AMD专有驱动程序'
- en: 'Unity Player:'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity播放器：
- en: 'Mobile:'
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动设备：
- en: '**Android**: Version 6.0 (API 23) or newer, ARMv7 or ARM64, OpenGL ES 3.0+
    or Vulkan'
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Android**: 版本6.0（API 23）或更高版本，ARMv7或ARM64，OpenGL ES 3.0+或Vulkan'
- en: '**iOS/iPadOS**: Version 13+, A8 SoC or newer, Metal API'
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**iOS/iPadOS**: 版本13+，A8 SoC或更高版本，Metal API'
- en: 'Desktop:'
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 桌面：
- en: Windows, macOS, and Linux (matching Unity Editor requirements).
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows、macOS和Linux（符合Unity编辑器要求）。
- en: For consoles, XR, and web platforms, the requirements vary based on the specific
    platform and development tools. For the full list and details, you can visit Unity’s
    official documentation at https://docs.unity3d.com/6000.0/Documentation/Manual/WhatsNewUnity6.html.
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于游戏机、XR和Web平台，要求根据具体平台和开发工具而有所不同。有关完整列表和详细信息，您可以访问Unity的官方文档：https://docs.unity3d.com/6000.0/Documentation/Manual/WhatsNewUnity6.html。
- en: 'You can find the examples/files related to the Addendum here: [https://github.com/PacktPublishing/Unity-6-Game-Development-with-C-Scripting/tree/main/Addendum](https://github.com/PacktPublishing/Unity-6-Game-Development-with-C-Scripting/tree/main/Addendum)'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此处找到与附录相关的示例/文件：[https://github.com/PacktPublishing/Unity-6-Game-Development-with-C-Scripting/tree/main/Addendum](https://github.com/PacktPublishing/Unity-6-Game-Development-with-C-Scripting/tree/main/Addendum)
- en: UI Toolkit – streamlined development in Unity 6
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: UI Toolkit – 在Unity 6中简化开发
- en: 'We begin with one of the most impactful additions to the Unity workﬂow: **UI
    Toolkit**. This powerful toolset enables developers to create dynamic, responsive
    UIs with minimal eﬀort, integrating seamlessly with existing Unity workﬂows.'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从Unity工作流程中最具影响力的新增功能之一开始：**UI Toolkit**。这个强大的工具集使开发者能够以最小的努力创建动态、响应式的UI，并与现有的Unity工作流程无缝集成。
- en: As game interfaces grew increasingly complex, Unity’s UI systems adapted to
    support the needs of modern game development, evolving from basic components to
    robust toolkits. Unity 6 now promotes UI Toolkit—a culmination of this evolution—streamlining
    UI design with new, flexible tools that make building and customizing user interfaces
    more efficient than ever.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 随着游戏界面变得越来越复杂，Unity的UI系统适应了现代游戏开发的需求，从基本组件发展到强大的工具集。Unity 6现在推广UI Toolkit——这是这一发展的顶峰——通过引入新的、灵活的工具，使构建和定制用户界面比以往任何时候都更高效。
- en: A brief history of UI development in Unity
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Unity UI开发简史
- en: Unity’s **UI** systems have evolved significantly over the years to meet the
    growing needs of game developers. Each iteration has introduced new capabilities,
    addressing both developer feedback and the technical demands of modern games.
    Understanding this evolution provides valuable context for appreciating the UI
    Toolkit feature introduced in **Unity 6**.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: Unity的**UI**系统在多年中经历了显著的发展，以满足游戏开发者日益增长的需求。每一次迭代都引入了新的功能，既解决了开发者的反馈，也满足了现代游戏的技术需求。理解这一发展过程为欣赏在**Unity
    6**中引入的UI Toolkit功能提供了宝贵的背景知识。
- en: OnGUI – the beginning
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: OnGUI – 开端
- en: Unity’s original OnGUI system was one of the earliest methods for creating UIs
    in Unity. This immediate-mode GUI system was functional but had several significant
    drawbacks. OnGUI was essentially a system where UI was redrawn every frame, regardless
    of whether the interface changed. While this approach worked for small, simple
    projects, it wasn’t scalable for more complex games.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: Unity最初的OnGUI系统是Unity中创建UI的最早方法之一。这个即时模式的GUI系统虽然功能齐全，但有几个显著的缺点。OnGUI基本上是一个每次重绘UI的系统，无论界面是否改变。虽然这种方法适用于小型、简单的项目，但对于更复杂的游戏来说，它并不具有可扩展性。
- en: 'The key pain points with OnGUI included the following:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: OnGUI的关键痛点包括以下方面：
- en: '**Performance overhead**: Redrawing the entire UI for each frame was resource-intensive,
    making it inefficient for games with large and dynamic UIs.'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能开销**：为每一帧重绘整个UI是资源密集型的，对于具有大型和动态UI的游戏来说，效率低下。'
- en: '**Code complexity**: Since UI code was embedded directly in the game’s logic,
    maintaining and updating the UI became cumbersome.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码复杂性**：由于UI代码直接嵌入到游戏逻辑中，维护和更新UI变得繁琐。'
- en: '**Lack of flexibility**: OnGUI’s limited design capabilities meant that creating
    visually appealing custom interfaces required significant eﬀort and custom scripting.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺乏灵活性**：OnGUI有限的设计能力意味着创建视觉上吸引人的自定义界面需要大量的努力和自定义脚本。'
- en: uGUI – the game changer
  id: totrans-185
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: uGUI – 改变游戏规则的工具
- en: To address these issues, Unity introduced **Unity GUI** (**uGUI**) in **Unity
    4.6**. This event-driven, retained-mode UI system revolutionized how developers
    created UIs in Unity. Instead of redrawing the entire UI at every frame, uGUI
    only updated when there were changes, vastly improving performance.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这些问题，Unity在**Unity 4.6**中引入了**Unity GUI**（**uGUI**）。这个事件驱动的保留模式UI系统彻底改变了开发者如何在Unity中创建UI。uGUI不再在每一帧重绘整个UI，只有在有变化时才会更新，大大提高了性能。
- en: 'The advantages of uGUI were clear:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: uGUI的优势是显而易见的：
- en: '**Drag-and-drop interface**: Unity’s Editor allowed developers to visually
    design interfaces using the Canvas system, which provided more ﬂexibility and
    simplicity'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拖放界面**：Unity的编辑器允许开发者使用Canvas系统直观地设计界面，这提供了更多的灵活性和简单性'
- en: '**Modular components**: UI elements such as buttons, sliders, and text fields
    were now managed as GameObjects, making it easier to customize and extend the
    UI'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模块化组件**：按钮、滑块和文本字段等UI元素现在被管理为GameObject，这使得自定义和扩展UI变得更加容易'
- en: '**Scalability**: uGUI supported complex UIs, including nested layouts and animations,
    making it more suitable for large-scale projects'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性**：uGUI支持复杂的UI，包括嵌套布局和动画，使其更适合大型项目'
- en: However, uGUI wasn’t without its limitations. While it worked well for many
    developers, some struggled with performance issues in projects with extensive
    UIs or highly dynamic content. Additionally, creating complex custom controls
    required significant coding eﬀort, and there were challenges in bridging the gap
    between the runtime UI and Editor UI design.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，uGUI并非没有局限性。虽然它对许多开发者来说效果良好，但一些开发者发现，在具有广泛UI或高度动态内容的项目中，性能问题令人头疼。此外，创建复杂的自定义控件需要大量的编码工作，并且在运行时UI和编辑器UI设计之间架起桥梁也存在挑战。
- en: UI Toolkit – modernizing Unity’s UI
  id: totrans-192
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: UI Toolkit – 现代化Unity的UI
- en: With Unity 6, UI Toolkit was introduced as a modern solution for both runtime
    and Editor UI needs. UI Toolkit builds upon the lessons learned from OnGUI and
    uGUI, incorporating best practices from web development (such as HTML and CSS)
    and providing developers with more efficient, ﬂexible, and scalable tools for
    creating UIs.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity 6中，UI Toolkit作为运行时和编辑器UI的现代解决方案被引入。UI Toolkit基于从OnGUI和uGUI中学到的经验，结合了网络开发中的最佳实践（如HTML和CSS），为开发者提供了更高效、灵活和可扩展的工具来创建UI。
- en: '![](img/B22128_Addendum_01.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22128_Addendum_01.jpg)'
- en: Figure Addendum.1 – Access UI Builder through the Window menu | UI Toolkit |
    UI Builder
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图表补充.1 – 通过窗口菜单访问UI Builder | UI Toolkit | UI Builder
- en: 'Key pain points addressed by UI Toolkit include the following:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: UI Toolkit解决的关键痛点包括以下内容：
- en: '**Performance**: UI Toolkit reduces the performance overhead by leveraging
    a retained-mode system, updating only the elements that change, similar to uGUI,
    but with further optimizations.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能**：UI Toolkit通过利用保留模式系统，仅更新更改的元素，类似于uGUI，但进行了进一步的优化，从而降低了性能开销。'
- en: '**Separation of concerns**: The use of **UXML** (similar to HTML) for layout
    and **USS** (which stands for **Unity Style Sheets**, similar to CSS) for styling
    allows developers to separate UI logic from presentation, making it easier to
    manage and maintain.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**关注点分离**：使用**UXML**（类似于HTML）进行布局和**USS**（代表**Unity Style Sheets**，类似于CSS）进行样式化，允许开发者将UI逻辑与展示分离，使其更容易管理和维护。'
- en: '**Customization**: With UI Toolkit, creating custom UI elements and controls
    is more streamlined, and the system is highly extensible, making it suitable for
    complex applications and editor extensions.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定制化**：使用UI Toolkit，创建自定义UI元素和控制件更加流畅，系统高度可扩展，适合复杂的应用程序和编辑器扩展。'
- en: '**Cross-platform compatibility**: Designed with future needs in mind, UI Toolkit
    provides more consistent behavior across diﬀerent platforms and can handle both
    runtime and Editor UI creation.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**跨平台兼容性**：考虑到未来的需求，UI Toolkit在不同平台间提供了更一致的行为，并能处理运行时和编辑器UI的创建。'
- en: As Unity continues to grow and adapt to the demands of modern game development,
    UI Toolkit represents a significant leap forward in how developers design and
    implement UIs. It provides the tools needed to create visually rich, dynamic UIs
    while addressing the scalability and performance concerns that have historically
    challenged Unity’s earlier UI systems.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 随着Unity持续成长并适应现代游戏开发的需求，UI Toolkit代表了开发者设计和实现UI方式的一次重大飞跃。它提供了创建视觉丰富、动态UI所需的所有工具，同时解决了历史上一直困扰Unity早期UI系统的可扩展性和性能问题。
- en: '![](img/B22128_Addendum_02.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22128_Addendum_02.jpg)'
- en: 'Figure Addendum.2 – UI Toolkit’s UI Builder showing its five components: StyleSheets,
    Hierarchy, Library, Viewport, and Inspector'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图表补充.2 – UI Toolkit的UI Builder展示其五个组件：样式表（StyleSheets）、层次结构（Hierarchy）、库（Library）、视口（Viewport）和检查器（Inspector）
- en: Unity’s UI system has evolved through multiple stages, starting with the OnGUI
    system, which was limited by performance issues and complexity due to its immediate-mode
    approach. The introduction of uGUI in Unity 4.6 revolutionized UI design with
    its event-driven, retained-mode system, providing developers with a ﬂexible and
    more efficient way to create scalable UIs. However, uGUI still faced some challenges,
    particularly when managing large, complex interfaces.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: Unity的UI系统经历了多个阶段的发展，始于受性能问题和即时模式方法复杂性限制的OnGUI系统。Unity 4.6中引入的uGUI通过其事件驱动、保留模式系统彻底改变了UI设计，为开发者提供了创建可扩展UI的灵活和高效方式。然而，uGUI仍面临一些挑战，尤其是在管理大型、复杂界面时。
- en: To address these issues, Unity 6 introduced UI Toolkit, which combines the best
    aspects of both previous systems while offering modern tools inspired by web development.
    This makes UI Toolkit a powerful and flexible solution for creating both runtime
    and Editor UIs with improved performance and customization capabilities.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这些问题，Unity 6引入了UI工具包，它结合了先前系统的最佳特性，同时提供了受网页开发启发的现代工具。这使得UI工具包成为创建运行时和编辑器UI的强大且灵活的解决方案，提供了改进的性能和定制能力。
- en: Building on the foundation set by Unity’s evolving UI systems, UI Toolkit brings
    substantial advantages to modern game development. In the next section, we will
    explore the key benefits of using UI Toolkit in Unity 6, including its impact
    on performance, flexibility, and workflow efficiency and how it enhances the overall
    development process.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 建立在Unity不断发展的UI系统基础之上，UI工具包为现代游戏开发带来了实质性的优势。在下一节中，我们将探讨在Unity 6中使用UI工具包的关键好处，包括其对性能、灵活性和工作流程效率的影响，以及它是如何增强整体开发过程的。
- en: Advantages of UI Toolkit in Unity 6
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Unity 6中UI工具包的优势
- en: In this subsection, we will explore the core advantages of using UI Toolkit
    in Unity 6, highlighting the significant improvements it brings over previous
    systems. One of the key benefits of UI Toolkit is its ability to reduce performance
    overhead, making it more efficient than uGUI when handling complex and dynamic
    UI elements. This optimization translates into smoother gameplay and faster rendering
    times, especially in projects with large-scale interfaces.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在本小节中，我们将探讨在Unity 6中使用UI工具包的核心优势，突出它相对于先前系统的显著改进。UI工具包的一个关键好处是它能够降低性能开销，在处理复杂和动态UI元素时比uGUI更高效。这种优化转化为更流畅的游戏体验和更快的渲染时间，尤其是在具有大规模界面的项目中。
- en: Additionally, UI Toolkit oﬀers greater ﬂexibility and scalability, allowing
    developers to easily customize and extend UI elements to suit the specific needs
    of their projects. The integration of UXML for structure and USS for styling simplifies
    the process of creating responsive, visually appealing interfaces. Moreover, its
    seamless integration into both runtime and Editor workﬂows enhances the overall
    development experience, positioning UI Toolkit as a powerful tool for future-proofing
    UI design in Unity projects.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，UI工具包提供了更大的灵活性和可扩展性，允许开发者轻松定制和扩展UI元素以满足他们项目的特定需求。UXML用于结构，USS用于样式的集成简化了创建响应式、视觉上吸引人的界面的过程。此外，它无缝集成到运行时和编辑器工作流程中，增强了整体开发体验，使UI工具包成为Unity项目中未来UI设计的强大工具。
- en: 'UI Toolkit in Unity 6 brings a host of advantages, addressing the performance
    and ﬂexibility limitations seen in earlier systems such as OnGUI and uGUI. These
    advantages make it a compelling tool for modern game and application development,
    providing significant improvements across key areas such as performance, ﬂexibility,
    scalability, and seamless integration into both runtime and Editor workﬂows:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6中的UI工具包带来了众多优势，解决了早期系统如OnGUI和uGUI中存在的性能和灵活性限制。这些优势使其成为现代游戏和应用开发的强大工具，在性能、灵活性、可扩展性和无缝集成到运行时和编辑器工作流程等关键领域提供了显著改进：
- en: '**Performance:** **Reduced overhead**'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能：** **降低开销**'
- en: One of the standout features of UI Toolkit is its ability to significantly reduce
    performance overhead. Unlike uGUI, which can suﬀer from performance bottlenecks
    in complex UIs due to the frequent updates and redraws of UI elements, UI Toolkit
    employs a more optimized retained-mode system. It only updates UI elements when
    necessary, reducing unnecessary rendering calculations and improving frame rates,
    particularly in large projects with dynamic UI components.
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: UI工具包的一个突出特点是它能够显著降低性能开销。与uGUI不同，uGUI在复杂UI中可能会因为UI元素的频繁更新和重绘而出现性能瓶颈，UI工具包采用了一种更优化的保留模式系统。它仅在必要时更新UI元素，减少了不必要的渲染计算，提高了帧率，尤其是在具有动态UI组件的大型项目中。
- en: For example, UI Toolkit efficiently handles updates for specific UI components,
    reducing the strain on the CPU and GPU. This leads to smoother gameplay and quicker
    load times, especially for games with resource-intensive UIs.
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，UI工具包高效地处理特定UI组件的更新，减轻了CPU和GPU的负担。这导致游戏体验更流畅，加载时间更快，尤其是在资源密集型UI的游戏中。
- en: '**Flexibility:** **Easier customization**'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活性：** **更易定制**'
- en: UI Toolkit allows developers to define and customize UI elements using UXML
    for structure and USS for styling. This separation of content from design makes
    it easier to maintain and update UI layouts and styles independently, allowing
    for faster iteration and ﬂexibility during development.
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: UI Toolkit 允许开发者使用 UXML 定义和自定义 UI 元素的结构，使用 USS 进行样式设计。这种将内容与设计分离的做法使得独立维护和更新
    UI 布局和样式变得更加容易，从而在开发过程中实现更快的迭代和灵活性。
- en: The ability to create custom UI elements is also enhanced in UI Toolkit, enabling
    developers to craft reusable, highly ﬂexible components with minimal eﬀort. For
    instance, creating a custom button that changes appearance based on user interaction
    can be done with a combination of UXML and USS, making the design process faster
    and more intuitive.
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: UI Toolkit 还增强了创建自定义 UI 元素的能力，使开发者能够以最小的努力制作可重用、高度灵活的组件。例如，创建一个根据用户交互改变外观的自定义按钮可以通过
    UXML 和 USS 的组合来实现，这使得设计过程更快、更直观。
- en: '**Scalability: Better suited for** **complex UIs**'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性：更适合** **复杂 UI**'
- en: UI Toolkit is designed to handle both simple and complex UI systems, making
    it highly scalable. Whether you’re building a minimalist UI for a mobile game
    or a sophisticated, multi-layered interface for a PC or console game, UI Toolkit
    can manage the increasing complexity with ease. The retained-mode rendering system
    ensures that even as the UI grows, the performance remains stable, allowing developers
    to build large-scale interfaces without worrying about performance degradation.
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: UI Toolkit 被设计用来处理简单和复杂的 UI 系统，使其具有高度的可扩展性。无论是为移动游戏构建简约的 UI，还是为 PC 或控制台游戏构建复杂的多层界面，UI
    Toolkit 都能轻松管理不断增长的复杂性。保留模式渲染系统确保即使在 UI 增长时，性能也保持稳定，允许开发者构建大规模界面而无需担心性能下降。
- en: Additionally, UI Toolkit’s support for data binding and dynamic content further
    enhances scalability, as developers can easily link UI elements to game data,
    ensuring that changes in the game world are reﬂected in the UI without manual
    updates.
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，UI Toolkit 对数据绑定和动态内容的支持进一步增强了可扩展性，因为开发者可以轻松地将 UI 元素链接到游戏数据，确保游戏世界中的变化在 UI
    中得到反映，无需手动更新。
- en: '**Integration: Seamless workﬂow in runtime** **and Editor**'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集成：运行时** **和编辑器** **的无缝工作流程**'
- en: Another major advantage of UI Toolkit is its seamless integration into both
    runtime and Editor workﬂows. Unlike uGUI, which was more focused on the runtime
    UI, UI Toolkit can be used for creating complex Editor interfaces as well. This
    allows developers to use a single UI framework for both in-game interfaces and
    custom Editor tools, simplifying the development process and reducing the learning
    curve.
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: UI Toolkit 的另一个主要优势是其与运行时和编辑器工作流的无缝集成。与更专注于运行时 UI 的 uGUI 不同，UI Toolkit 还可以用于创建复杂的编辑器界面。这使得开发者可以使用单个
    UI 框架来创建游戏内界面和自定义编辑器工具，简化了开发过程并降低了学习曲线。
- en: For example, developers can use UI Builder, a visual authoring tool, to design
    UI layouts directly in the Unity Editor, previewing changes in real time without
    writing code. This integration streamlines the workﬂow, reducing the time spent
    switching between design and code.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，开发者可以使用 UI Builder，一个可视化创作工具，在 Unity 编辑器中直接设计 UI 布局，实时预览更改，而无需编写代码。这种集成简化了工作流程，减少了在设计与代码之间切换的时间。
- en: Here’s a sample C# code snippet that demonstrates how to effectively use Unity’s
    UI Toolkit to create and customize UI elements in a flexible way.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个示例 C# 代码片段，展示了如何有效地使用 Unity 的 UI Toolkit 以灵活的方式创建和自定义 UI 元素。
- en: '[PRE0]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In this example, the following occurs:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，以下情况发生：
- en: A `Button` element is created and added to the root visual element
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建并添加到根视觉元素的`Button`元素
- en: The `clicked` event is used to handle interactions, such as logging a message
    to the console when the button is pressed.
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clicked`事件用于处理交互，例如当按钮被按下时，将消息记录到控制台。'
- en: During Play Mode, when the button is clicked. It will generate a log message,
    `"``Button Clicked!"`
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在播放模式期间，当按钮被点击时，它将生成一条日志消息，`"Button Clicked!"`
- en: UI Toolkit, introduced in Unity 6, brings significant improvements over previous
    UI systems, oﬀering developers better performance, ﬂexibility, and scalability.
    By reducing performance overhead, separating structure from styling, and supporting
    more complex UI systems, UI Toolkit streamlines the development of interactive
    and visually rich interfaces. It seamlessly integrates with both runtime and Editor
    workﬂows, allowing developers to create consistent UIs for games and tools alike.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6中引入的UI Toolkit，相较于之前的UI系统带来了显著的改进，为开发者提供了更好的性能、灵活性和可扩展性。通过减少性能开销，将结构从样式分离，并支持更复杂的UI系统，UI
    Toolkit简化了交互式和视觉丰富的界面的开发。它无缝集成到运行时和编辑器工作流中，允许开发者为游戏和工具创建一致的UI。
- en: Now that we’ve explored the benefits of using UI Toolkit, let’s move on to how
    you can set it up in Unity 6\. The following section will guide you through the
    steps to start building your UI, from installing the necessary packages to working
    with UI Builder for an efficient workﬂow.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经探讨了使用UI Toolkit的好处，让我们继续了解如何在Unity 6中设置它。以下部分将指导你完成开始构建UI的步骤，从安装必要的包到使用UI
    Builder进行高效的工作流。
- en: Setting up UI Toolkit in Unity 6
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Unity 6中设置UI Toolkit
- en: Getting started with UI Toolkit in Unity 6 is a straightforward process that
    allows developers to quickly dive into creating dynamic UIs. In this section,
    we will walk through the essential steps to set up UI Toolkit and begin building
    UIs efficiently. We’ll cover how to install the necessary packages, enable UI
    Builder, and create a simple UI structure to get you up and running.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity 6中开始使用UI Toolkit是一个简单直接的过程，它允许开发者快速开始创建动态UI。在本节中，我们将逐步介绍设置UI Toolkit和开始高效构建UI的基本步骤。我们将涵盖如何安装必要的包、启用UI
    Builder以及创建一个简单的UI结构以帮助你快速上手。
- en: With Unity 6’s intuitive tools and streamlined setup, you can quickly begin
    harnessing the power of UI Toolkit for your game or application. Whether you’re
    new to UI development or transitioning from uGUI, this guide will make it easy
    to start building interfaces that are both ﬂexible and performant.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 利用Unity 6直观的工具和简化的设置，你可以快速开始利用UI Toolkit的力量为你的游戏或应用程序开发。无论你是UI开发的新手还是从uGUI过渡过来，本指南将帮助你轻松开始构建既灵活又高效的界面。
- en: 'Starting with UI Toolkit in Unity 6 is a simple and streamlined process. It
    is accessible to both newcomers and experienced developers. This section will
    guide you through the fundamental steps to install and configure the necessary
    tools, allowing you to begin crafting interactive and efficient UIs in no time:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity 6中开始使用UI Toolkit是一个简单且流程化的过程，它既适合新手也适合经验丰富的开发者。本节将指导你完成安装和配置必要工具的基本步骤，让你能够迅速开始制作交互式和高效的UI。
- en: '**Installing the UI** **Toolkit package**'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**安装UI** **Toolkit包**'
- en: 'In most cases, UI Toolkit is pre-installed with Unity 6 as part of the default
    packages. However, if you find it’s missing from your project or want to ensure
    you have the latest version, you can add the package through Unity’s Package Manager.
    To do this, take these steps:'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在大多数情况下，UI Toolkit作为默认包的一部分预安装在Unity 6中。然而，如果你发现它未包含在你的项目中或想要确保你有最新版本，你可以通过Unity的包管理器添加该包。为此，请执行以下步骤：
- en: Navigate to **Window** | **Package Manager**.
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**窗口** | **包管理器**。
- en: In Package Manager, search for **UI Toolkit**.
  id: totrans-238
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在包管理器中搜索**UI Toolkit**。
- en: If it’s not listed, select **Add package from the registry** and choose **UI
    Toolkit** from the list.
  id: totrans-239
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果它未列出，请选择**从注册表中添加包**，然后从列表中选择**UI Toolkit**。
- en: Once installed, UI Builder and other UI Toolkit features will be ready to use.
  id: totrans-240
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，UI Builder和其他UI Toolkit功能将准备好使用。
- en: '**Enabling** **UI Builder**'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**启用** **UI Builder**'
- en: 'UI Builder is a key part of the UI Toolkit ecosystem, providing a visual interface
    for designing and constructing UI layouts. To enable UI Builder, take the following
    steps:'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: UI Builder是UI Toolkit生态系统的重要组成部分，提供了一个用于设计和构建UI布局的视觉界面。要启用UI Builder，请执行以下步骤：
- en: Go to **Window** | **UI Toolkit** | **UI Builder**.
  id: totrans-243
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**窗口** | **UI Toolkit** | **UI Builder**。
- en: This opens the **UI Builder** panel, where you can design UI layouts visually
    without having to manually code every element. UI Builder lets you drag and drop
    components such as buttons, sliders, and text fields directly into the layout.
  id: totrans-244
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开**UI Builder**面板，在这里你可以直观地设计UI布局，无需手动编码每个元素。UI Builder允许你直接将按钮、滑块和文本字段等组件拖放到布局中。
- en: Using **UI Builder** streamlines the UI creation process by oﬀering a live preview
    of how the interface will look and behave within your project.
  id: totrans-245
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**UI Builder**通过提供界面在项目中的实时预览，简化了UI创建过程。
- en: '`VisualElement`, which is the base container for all UI elements in UI Toolkit.
    To do this, do the following:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`VisualElement`，它是UI Toolkit中所有UI元素的基本容器。为此，请执行以下操作：'
- en: In the **UI Builder** panel, click on the **Hierarchy** tab and choose **Create**
    | **VisualElement**. This element acts as a container for other UI elements, allowing
    you to group and organize them eﬀectively.
  id: totrans-247
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**UI Builder**面板中，点击**层次结构**选项卡，然后选择**创建** | **可视元素**。此元素充当其他UI元素的容器，允许您有效地对它们进行分组和组织。
- en: Add child elements such as buttons, labels, or sliders by selecting the **+
    Add Element** button in the **UI Builder** panel and choosing the desired element
    type.
  id: totrans-248
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在**UI Builder**面板中选择**+ 添加元素**按钮并选择所需的元素类型，可以添加子元素，如按钮、标签或滑块。
- en: Use the **Inspector** panel to adjust properties such as size, position, and
    style. UI Toolkit uses **USS** to control the appearance of elements, similar
    to how CSS works in web development. Here, you can apply predefined styles or
    create custom styles for your UI elements.
  id: totrans-249
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**检查器**面板调整大小、位置和样式等属性。UI Toolkit使用**USS**来控制元素的外观，类似于Web开发中CSS的工作方式。在这里，您可以应用预定义的样式或为您的UI元素创建自定义样式。
- en: By using UI Builder, you can focus on the visual aspects of UI design, while
    UI Toolkit handles the underlying structure. This separation of design and functionality
    makes it easier to iterate quickly and create responsive, dynamic UIs.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用UI Builder，您可以专注于UI设计的视觉方面，而UI Toolkit则处理底层结构。这种设计和功能的分离使得快速迭代和创建响应式、动态UI变得更容易。
- en: Once your basic UI structure is set up, you can continue to refine it by adding
    more complex elements and functionality. With UI Builder, you can experiment with
    layouts, styles, and interactions without manually writing code for every detail.
    UI Toolkit makes it easy to develop powerful and scalable UIs in Unity 6, saving
    time and enhancing your workﬂow.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置了基本的UI结构，您可以通过添加更多复杂元素和功能来进一步细化它。使用UI Builder，您可以在不手动编写每个细节的代码的情况下，尝试布局、样式和交互。UI
    Toolkit使您能够在Unity 6中轻松开发强大且可扩展的UI，节省时间并提高您的工作流程。
- en: In the next section, we’ll explore the features of UI Toolkit in more detail,
    highlighting the tools and techniques that make it such a valuable part of the
    Unity ecosystem.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将更详细地探讨UI Toolkit的特性，突出使其成为Unity生态系统如此宝贵一部分的工具和技术。
- en: Features of UI Toolkit
  id: totrans-253
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: UI Toolkit特性
- en: UI Toolkit in Unity 6 oﬀers several key features that greatly enhance the UI
    development process. These include UI Builder, a visual tool for constructing
    UIs without extensive coding, **UXML**, a markup language for defining layouts,
    and USS, which manages styling similarly to CSS in web development. Additionally,
    **data binding** allows developers to easily link UI components to game data,
    streamlining the creation of dynamic, responsive interfaces. Together, these features
    make UI development more efficient and scalable, allowing for greater ﬂexibility
    in both runtime and editor workﬂows.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6中的UI Toolkit提供了几个关键特性，这些特性极大地增强了UI开发过程。这些包括UI Builder，一个无需大量编码即可构建UI的视觉工具，**UXML**，一个用于定义布局的标记语言，以及USS，它在Web开发中类似于CSS来管理样式。此外，**数据绑定**允许开发者轻松地将UI组件链接到游戏数据，简化了动态、响应式界面的创建。这些特性共同使UI开发更加高效和可扩展，允许在运行时和编辑器工作流程中具有更大的灵活性。
- en: 'UI Toolkit in Unity 6 comes equipped with several core features that significantly
    streamline and improve the UI development process. Each feature oﬀers modern solutions
    inspired by web development practices, allowing developers to create dynamic,
    ﬂexible, and scalable UIs with minimal eﬀort:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6中的UI Toolkit配备了几个核心特性，这些特性显著简化并改善了UI开发过程。每个特性都提供了受Web开发实践启发的现代解决方案，使开发者能够以最小的努力创建动态、灵活和可扩展的UI：
- en: '**UI Builder: Visual interface for** **constructing UI**'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UI Builder：构建UI的视觉界面**'
- en: UI Builder is the cornerstone of UI Toolkit’s visual design capabilities. It
    provides a drag-and-drop interface within the Unity Editor that allows developers
    to construct UI elements interactively without writing extensive code. With UI
    Builder, users can easily create layouts, modify properties, and preview changes
    in real time, which speeds up the development process. The tool supports the addition
    of various UI elements, such as buttons, sliders, and labels, while enabling developers
    to see their changes instantly within the editor. This visual approach makes it
    easier to iterate on designs and refine UIs quickly.
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: UI Builder是UI工具包视觉设计能力的基石。它提供了Unity编辑器内的拖放界面，允许开发者无需编写大量代码即可交互式地构建UI元素。使用UI
    Builder，用户可以轻松创建布局、修改属性，并在实时预览更改，这加快了开发过程。该工具支持添加各种UI元素，如按钮、滑块和标签，同时允许开发者立即在编辑器中看到他们的更改。这种视觉方法使得在设计上进行迭代和快速优化UI变得更加容易。
- en: '**UXML: XML-like format for deﬁning** **UI layouts**'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UXML：用于定义** **UI布局** **的类似XML的格式**'
- en: At the core of UI Toolkit’s layout structure is UXML. UXML allows developers
    to define the hierarchy and structure of UI components declaratively. Each element
    in the UI is represented by tags within the UXML file, which can be easily read,
    modified, and reused across diﬀerent UI screens or projects. This structured approach
    separates the layout logic from the game code, making it easier to maintain and
    update the interface without disrupting the underlying functionality.
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: UI工具包布局结构的核心是UXML。UXML允许开发者声明式地定义UI组件的层次结构和结构。UI中的每个元素都由UXML文件中的标签表示，这使得在不同UI屏幕或项目中轻松阅读、修改和重用。这种结构化方法将布局逻辑与游戏代码分离，使得在不影响底层功能的情况下更容易维护和更新界面。
- en: '**USS: Unity Style Sheets for styling** **UI elements**'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**USS：用于样式化** **UI元素** **的Unity样式表**'
- en: USS is used to define the look and feel of UI elements, similar to how CSS works
    in web development. With USS, developers can apply styles such as colors, fonts,
    borders, and sizes to UI components, ensuring consistency across the interface.
    It allows for the creation of custom styles that can be reused throughout the
    project, making UI design more efficient and modular. By keeping the styling separate
    from the UXML structure, developers can easily tweak visual elements without aﬀecting
    the UI layout or functionality.
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: USS用于定义UI元素的外观，类似于Web开发中CSS的工作方式。使用USS，开发者可以将颜色、字体、边框和大小等样式应用于UI组件，确保界面的一致性。它允许创建可在整个项目中重用的自定义样式，使UI设计更高效和模块化。通过将样式与UXML结构分离，开发者可以轻松调整视觉元素，而不会影响UI布局或功能。
- en: '**Data binding: Linking data with** **UI elements**'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据绑定：将数据与** **UI元素** **链接**'
- en: Data binding is one of the most powerful features of UI Toolkit, allowing developers
    to link game data directly to UI components. With data binding, dynamic changes
    in game data are automatically reﬂected in the UI without the need for manual
    updates. This feature is particularly useful for creating dynamic interfaces such
    as player stats, inventory systems, or in-game notifications that update in real
    time. By reducing the amount of code required to sync data and the UI, data binding
    simplifies development and reduces potential errors in handling dynamic content.
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据绑定是UI工具包最强大的功能之一，允许开发者直接将游戏数据链接到UI组件。使用数据绑定，游戏数据的动态变化会自动反映在UI中，无需手动更新。此功能特别适用于创建动态界面，如玩家统计数据、库存系统或实时更新的游戏内通知。通过减少同步数据和UI所需的代码量，数据绑定简化了开发并减少了处理动态内容时的潜在错误。
- en: Example of UXML and USS integration
  id: totrans-264
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: UXML和USS集成的示例
- en: 'Here’s a simple example of using UXML to define a button and USS to style it:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个使用UXML定义按钮和USS为其添加样式的简单示例：
- en: Below is a very basic UXML file showing a single item, a button. This button
    used the CSS styling that follows.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个非常基本的UXML文件，显示单个项目，一个按钮。此按钮使用了以下CSS样式。
- en: '[PRE1]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Below is a very basic CSS file for styling items. This specifically is named
    `myButton`, but it can applied to any graphical item.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个用于样式化项目的非常基本的CSS文件。这个特别命名为`myButton`，但它可以应用于任何图形项目。
- en: '[PRE2]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This approach separates the button’s structure (defined in UXML) from its appearance
    (defined in USS), providing ﬂexibility and making the UI easier to manage and
    update.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法将按钮的结构（在UXML中定义）与其外观（在USS中定义）分离，提供了灵活性，并使UI更容易管理和更新。
- en: The combination of UI Builder, UXML, USS, and data binding creates a powerful
    and ﬂexible system for building UIs in Unity 6\. These features simplify the design
    process, improve workﬂow efficiency, and make it easier to manage dynamic content
    in real-time applications. With UI Toolkit, developers can quickly build and maintain
    complex UIs that are both performant and visually appealing, making it a key asset
    for modern game and application development in Unity.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: UI Builder、UXML、USS 和数据绑定的组合在 Unity 6 中创建了一个强大且灵活的系统，用于构建 UI。这些功能简化了设计过程，提高了工作流程效率，并使实时应用程序中的动态内容管理变得更加容易。使用
    UI Toolkit，开发者可以快速构建和维护既高效又美观的复杂 UI，使其成为现代游戏和应用开发在 Unity 中的关键资产。
- en: C# coding examples with UI Toolkit
  id: totrans-272
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 带有 UI Toolkit 的 C# 编码示例
- en: UI Toolkit in Unity 6 makes it easy to create and manage UI elements programmatically
    with C#. In this section, we’ll go over a few simple examples to illustrate how
    to create a basic UI, handle input events, and style elements using USS.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6 中的 UI Toolkit 使得使用 C# 编程方式创建和管理 UI 元素变得简单。在本节中，我们将通过几个简单的示例来展示如何创建基本的
    UI、处理输入事件以及使用 USS 样式元素。
- en: Example 1 – creating a button and adding it to the UI
  id: totrans-274
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例 1 – 创建按钮并将其添加到 UI 中
- en: 'In this example, we will create a button programmatically and add it to the
    `VisualElement` root. This demonstrates the basic structure of working with UI
    Toolkit in C#:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将通过编程方式创建一个按钮并将其添加到 `VisualElement` 根元素中。这展示了在 C# 中使用 UI Toolkit 的基本结构：
- en: '[PRE3]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In this example, note the following:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，请注意以下内容：
- en: We obtain `rootVisualElement` from the UI document, which acts as the container
    for all UI elements
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们从 UI 文档中获取 `rootVisualElement`，它作为所有 UI 元素的容器。
- en: A new button is created and its text property is set
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建了一个新的按钮，并设置了其文本属性。
- en: The button is then added to the UI by attaching it to the root element, making
    it visible in the scene
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后将按钮添加到 UI 中，通过将其附加到根元素，使其在场景中可见。
- en: This code generates a button on the screen with the text, `"Click Me!"` On top.
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此代码在屏幕上生成一个按钮，按钮上方显示文本 `"Click Me!"`。
- en: Example 2 – handling input and button clicks
  id: totrans-282
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例 2 – 处理输入和按钮点击
- en: 'In this example, we extend the previous code to handle input events by adding
    a click event listener to the button:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们扩展了之前的代码，通过向按钮添加点击事件监听器来处理输入事件：
- en: '[PRE4]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In this example, note the following:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，请注意以下内容：
- en: The `clicked` event is attached to the button, which triggers a `Debug.Log`
    message whenever the button is clicked
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clicked` 事件被附加到按钮上，每当按钮被点击时，都会触发一个 `Debug.Log` 消息。'
- en: This demonstrates how to handle user interaction with UI elements, making the
    interface dynamic and responsive to input
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这演示了如何处理用户与 UI 元素的交互，使界面动态且对输入做出响应。
- en: This script places a `"Click Me!"` Button on the screen. When clicked during
    Play Mode, it generates `"Button Clicked!"` Log message.
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此脚本在屏幕上放置了一个 `"Click Me!"` 按钮。在播放模式下点击时，会生成 `"Button Clicked!"` 日志消息。
- en: Example 3 – styling UI elements using USS
  id: totrans-289
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例 3 – 使用 USS 样式 UI 元素
- en: Now, let’s add a style to the button using USS to change its appearance. In
    UI Toolkit, styles are defined separately from logic, similar to CSS in web development.
    Here’s how to style the button using USS.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用 USS 为按钮添加样式以改变其外观。在 UI Toolkit 中，样式与逻辑是分开定义的，类似于网页开发中的 CSS。以下是使用 USS
    为按钮添加样式的步骤。
- en: 'First, create a USS file (for example, `buttonStyle.uss`):'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建一个 USS 文件（例如，`buttonStyle.uss`）：
- en: '[PRE5]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Above is USS file for the `myButton` style. This styling can be applied to any
    graphical element. It changes the styling to be 150x40 size, Bright Blue color,
    with 16 px white text. The shape will have 5px rounded corners.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的 USS 文件是 `myButton` 样式的文件。这种样式可以应用于任何图形元素。它将样式更改为 150x40 大小，亮蓝色，带有 16 像素白色文本。形状将具有
    5 像素圆角。
- en: 'Next, link the USS file to the button in the C# script:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在 C# 脚本中将 USS 文件链接到按钮：
- en: '[PRE6]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'In this example, the following occurs:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，以下情况发生：
- en: The button is assigned a class (`myButton`) that corresponds to a class selector
    in the USS file
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按钮被分配了一个类（`myButton`），这与 USS 文件中的类选择器相对应。
- en: The USS file is loaded as a resource and applied to the UI element, modifying
    the button’s appearance according to the defined styles
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USS 文件被加载为资源并应用于 UI 元素，根据定义的样式修改按钮的外观。
- en: This script captures the base UI Toolkit document for the scene, also known
    as root. It creates a button and adds the button to the root document.
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此脚本捕获场景的基本 UI Toolkit 文档，也称为根。它创建一个按钮并将其添加到根文档中。
- en: These examples demonstrate how UI Toolkit simplifies UI creation, event handling,
    and styling in Unity 6\. By combining C# logic with UXML and USS, developers can
    build dynamic, interactive, and visually appealing interfaces with minimal eﬀort.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 这些示例展示了 UI 工具包如何简化 Unity 6 中的 UI 创建、事件处理和样式。通过将 C# 逻辑与 UXML 和 USS 结合，开发者可以以最小的努力构建动态的、交互式的和视觉上吸引人的界面。
- en: In this section, we explored the key elements of UI Toolkit introduced in Unity
    6 and its transformative impact on UI development. Starting with a brief history
    of UI systems in Unity, we discussed how UI Toolkit improves upon previous approaches
    by oﬀering significant advantages in performance, ﬂexibility, scalability, and
    seamless integration into both runtime and Editor workﬂows.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们探讨了 Unity 6 中引入的 UI 工具包的关键元素及其对 UI 开发的变革性影响。从 Unity 中 UI 系统的简要历史开始，我们讨论了
    UI 工具包如何通过提供性能、灵活性、可扩展性和无缝集成到运行时和编辑器工作流程等方面的显著优势来改进先前的方法。
- en: We then walked through setting up UI Toolkit in Unity 6, highlighting how easy
    it is to get started with features such as UI Builder. Additionally, we examined
    core features such as UXML for defining UI structure, USS for styling, and data
    binding for linking UI elements to game data, providing examples of how they enhance
    UI development.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接着讲解了如何在 Unity 6 中设置 UI 工具包，并强调了使用如 UI Builder 等功能是多么容易上手。此外，我们还探讨了核心功能，如用于定义
    UI 结构的 UXML、用于样式的 USS 以及用于将 UI 元素链接到游戏数据的数据绑定，提供了如何增强 UI 开发的示例。
- en: Finally, we demonstrated how C# integrates with UI Toolkit to create, interact
    with, and style UI elements dynamically, showcasing its ease of use for building
    responsive and visually appealing UIs. By harnessing these powerful tools, developers
    can create more efficient and scalable UI systems, positioning UI Toolkit as a
    key asset in modern game and application development.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们展示了 C# 如何与 UI 工具包集成，以动态地创建、交互和样式化 UI 元素，展示了其构建响应式和视觉上吸引人的 UI 的易用性。通过利用这些强大的工具，开发者可以创建更高效和可扩展的
    UI 系统，将 UI 工具包定位为现代游戏和应用开发的关键资产。
- en: With a strong foundation in UI design established, we now turn to Unity’s Input
    System to explore advanced techniques for handling player interactions across
    diverse devices.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 在 UI 设计的坚实基础之上，我们现在转向 Unity 的输入系统，以探索处理玩家在不同设备上交互的高级技术。
- en: Mastering the new input system
  id: totrans-305
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 掌握新的输入系统
- en: The Unity Input System in Unity 6 marks a significant upgrade in how developers
    handle input across various devices. Whether it’s managing inputs from keyboards,
    gamepads, or touchscreens, this system streamlines the configuration of complex
    input actions, providing ﬂexibility and efficiency. In this section, we will explore
    how the Input System simplifies the process of setting up actions, handling multiple
    devices simultaneously, and responding dynamically to player inputs. By covering
    key aspects such as input mapping and event handling, we will demonstrate how
    this modern system enhances gameplay interaction across platforms.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6 中的 Unity 输入系统在开发者处理各种设备输入的方式上实现了重大升级。无论是管理来自键盘、游戏手柄还是触摸屏的输入，该系统简化了复杂输入动作的配置，提供了灵活性和效率。在本节中，我们将探讨输入系统如何简化设置动作、同时处理多个设备以及动态响应玩家输入的过程。通过涵盖输入映射和事件处理等关键方面，我们将展示该现代系统如何增强跨平台的游戏交互。
- en: Introduction to the Unity Input System in Unity 6
  id: totrans-307
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Unity 6 中 Unity 输入系统的介绍
- en: The Unity Input System in Unity 6 oﬀers a modernized approach to managing input
    from various devices, replacing the limitations of the legacy input system. Unlike
    the older system, which relied heavily on hardcoded inputs tied to specific devices
    such as keyboards or gamepads, the new Input System allows developers to handle
    input in a much more ﬂexible and scalable way. This system separates the concept
    of “input actions” from the physical devices, enabling developers to map actions
    such as “jump” or “move” to any control method, including gamepads, touchscreens,
    or custom controllers.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6 中的 Unity 输入系统提供了一种现代化的方法来管理来自各种设备的输入，取代了旧输入系统的限制。与依赖于与特定设备（如键盘或游戏手柄）相关联的硬编码输入的旧系统不同，新的输入系统允许开发者以更加灵活和可扩展的方式处理输入。该系统将“输入操作”的概念与物理设备分离，使开发者能够将“跳跃”或“移动”等操作映射到任何控制方法，包括游戏手柄、触摸屏或自定义控制器。
- en: One of the most significant improvements is the ability to handle multiple devices
    simultaneously without additional complexity. This makes it easier for developers
    to build cross-platform games that seamlessly support a wide range of input devices.
    Additionally, the system supports complex interactions, such as multi-touch gestures
    or gamepad input, with minimal setup.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 最显著的改进之一是能够同时处理多个设备而无需额外的复杂性。这使得开发者更容易构建跨平台游戏，无缝支持广泛的输入设备。此外，该系统支持复杂的交互，如多点触控手势或游戏手柄输入，而无需进行大量设置。
- en: The Unity Input System is crucial for modern games due to its ability to efficiently
    manage complex input scenarios, making it ideal for games that require robust
    control schemes across various platforms. By improving ﬂexibility and efficiency,
    this new system positions itself as an essential tool for developers seeking to
    enhance the responsiveness and interactivity of their games.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 输入系统对于现代游戏至关重要，因为它能够高效地管理复杂的输入场景，这使得它非常适合需要跨平台强大控制方案的游戏。通过提高灵活性和效率，这个新系统将自己定位为开发者寻求增强游戏响应性和交互性的必备工具。
- en: '![](img/B22128_Addendum_03.jpg)'
  id: totrans-311
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22128_Addendum_03.jpg)'
- en: Figure Addendum.3 – UI Input System showing action maps, actions, and bindings
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 图表补充.3 – 显示动作映射、动作和绑定的 UI 输入系统
- en: In Unity 6, the new input action asset system provides developers with a powerful
    and ﬂexible way to configure input actions and map them to diﬀerent devices. This
    system separates input into distinct actions, making it easier to manage and customize
    the control schemes for various platforms, whether it’s a keyboard, gamepad, or
    touchscreen.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Unity 6 中，新的输入动作资产系统为开发者提供了一种强大且灵活的方式来配置输入动作并将它们映射到不同的设备。该系统将输入分为不同的动作，这使得管理并自定义各种平台（无论是键盘、游戏手柄还是触摸屏）的控制方案变得更加容易。
- en: Setting up input actions
  id: totrans-314
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置输入动作
- en: The process begins with creating an input action asset. This asset serves as
    a container for all your game’s input actions. To create one, go to the **Assets**
    folder in your Unity project, right-click, and select **Create** | **Input Actions**.
    This will generate a new asset that can be used to define various input actions.
    Within the input action asset, you can define individual actions such as *Move*,
    *Jump*, or *Attack*. Each action represents a specific input that will trigger
    a response in the game. For example, *Jump* might correspond to pressing the spacebar
    on a keyboard or a button on a gamepad or tapping the screen on a mobile device.
    Each action can have multiple bindings, allowing it to respond to diﬀerent input
    devices without requiring separate scripts for each control scheme.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 该过程从创建一个输入动作资产开始。这个资产用作存放你游戏中所有输入动作的容器。要创建一个，请转到你的 Unity 项目中的 **Assets** 文件夹，右键单击，然后选择
    **Create** | **Input Actions**。这将生成一个新资产，可以用来定义各种输入动作。在输入动作资产中，你可以定义单个动作，如 *移动*、*跳跃*
    或 *攻击*。每个动作代表一个特定的输入，它将在游戏中触发响应。例如，*跳跃* 可能对应于按下键盘上的空格键或游戏手柄上的按钮，或在移动设备上轻触屏幕。每个动作可以有多个绑定，允许它对不同输入设备做出响应，而无需为每个控制方案编写单独的脚本。
- en: Binding actions to devices
  id: totrans-316
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将动作绑定到设备
- en: Once you’ve created your actions, the next step is to bind them to devices.
    Unity 6’s Input System automatically recognizes the connected input devices (e.g.,
    keyboard, gamepad, mouse, or touchscreen). In the input action asset, you can
    assign bindings to specific actions by selecting the action and choosing which
    device it should respond to.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你创建了你的动作，下一步就是将它们绑定到设备上。Unity 6 的输入系统自动识别连接的输入设备（例如，键盘、游戏手柄、鼠标或触摸屏）。在输入动作资产中，你可以通过选择动作并选择它应该响应的设备来为特定动作分配绑定。
- en: For instance, you might bind the *Move* action to the WASD keys on a keyboard,
    the left joystick on a gamepad, and swipe gestures on a touchscreen. Unity allows
    for both device-specific bindings (e.g., assigning specific keys to actions) and
    abstract bindings (e.g., assigning the same action to multiple devices with diﬀerent
    inputs). This ﬂexibility ensures your game remains responsive across all platforms.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可能将 *移动* 动作绑定到键盘上的 WASD 键、游戏手柄的左侧摇杆，以及触摸屏上的滑动手势。Unity 允许进行设备特定的绑定（例如，将特定键分配给动作）和抽象绑定（例如，将相同动作分配给具有不同输入的多个设备）。这种灵活性确保你的游戏在所有平台上都能保持响应。
- en: Conﬁguring input maps
  id: totrans-319
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置输入映射
- en: The input action asset system allows for the creation of input maps, which group
    related actions together. For example, a game might have separate input maps for
    player movement, combat, and menu navigation. By organizing actions into maps,
    developers can easily enable or disable specific groups of inputs depending on
    the game’s state. For example, you might disable the movement input map when a
    menu is open, ensuring that player movement doesn’t interfere with menu navigation.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 输入动作资产系统允许创建输入映射，这些映射将相关的动作组合在一起。例如，一个游戏可能为玩家移动、战斗和菜单导航分别有单独的输入映射。通过将动作组织到映射中，开发者可以轻松地根据游戏状态启用或禁用特定的输入组。例如，当菜单打开时，你可能禁用移动输入映射，以确保玩家移动不会干扰菜单导航。
- en: 'To conﬁgure an input map, do the following:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置输入映射，请执行以下操作：
- en: Open the i**nput** a**ction** a**sset** in the **Inspector**.
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**检查器**中打开**输入动作资产**。
- en: Create a new action map, and within that map, add the input actions that will
    be active under that map.
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的动作映射，并在该映射中添加将在该映射下激活的输入动作。
- en: Bind the relevant actions to devices as needed.
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据需要将相关动作绑定到设备上。
- en: Example – configuring movement with a gamepad and keyboard
  id: totrans-325
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例 - 使用游戏手柄和键盘配置移动
- en: 'Here’s a basic example of how you might configure a movement action for both
    keyboard and gamepad inputs:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个基本示例，说明如何为键盘和游戏手柄输入配置移动动作：
- en: Open your i`Move`.
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的`移动`。
- en: 'Under the **Bindings** section, add a new binding for the **Move** action:'
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**绑定**部分，为**移动**动作添加一个新的绑定：
- en: Bind it to WASD keys for keyboard input
  id: totrans-329
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将它绑定到键盘的WASD键
- en: Add another binding for the left joystick on a gamepad
  id: totrans-330
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为游戏手柄上的左侧摇杆添加另一个绑定
- en: Save the action, and now your game can handle player movement input from both
    a keyboard and a gamepad seamlessly.
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存动作，现在你的游戏可以无缝地处理来自键盘和游戏手柄的玩家移动输入。
- en: Handling multiple devices simultaneously
  id: totrans-332
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 同时处理多个设备
- en: The new Input System in Unity 6 is designed to handle input from multiple devices
    simultaneously, providing a ﬂexible and unified approach for managing inputs from
    various sources, such as keyboards, gamepads, and mobile controls. This feature
    is particularly useful for cross-platform games, where players may switch between
    diﬀerent input devices during gameplay.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6中的新输入系统旨在同时处理来自多个设备的输入，提供了一种灵活且统一的处理来自各种来源（如键盘、游戏手柄和移动控制）输入的方法。这个特性对于跨平台游戏特别有用，因为在游戏过程中，玩家可能会在不同输入设备之间切换。
- en: The system allows for device-agnostic input handling, meaning developers can
    define input actions such as *Move* or *Jump* and bind them to various devices
    without needing separate code for each one. Unity automatically detects the connected
    devices and routes the input accordingly. For example, if a player uses a keyboard
    and gamepad at the same time, both input sources can be active simultaneously,
    with the system managing conﬂicts and prioritizing input based on predefined settings.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 该系统允许设备无关的输入处理，这意味着开发者可以定义如*移动*或*跳跃*等输入动作，并将它们绑定到各种设备上，无需为每个设备编写单独的代码。Unity会自动检测连接的设备，并根据需要路由输入。例如，如果玩家同时使用键盘和游戏手柄，两个输入源可以同时激活，系统会根据预定义的设置管理冲突并优先处理输入。
- en: Unity’s input action asset system also supports device-specific bindings, allowing
    developers to define diﬀerent control schemes for each device. For instance, a
    mobile control layout might use touch gestures, while a console version of the
    game can handle gamepad inputs, all within the same project. This system ensures
    seamless transitions between devices, oﬀering ﬂexibility to players and reducing
    the burden on developers when expanding the game to new platforms.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: Unity的输入动作资产系统还支持设备特定的绑定，允许开发者为每个设备定义不同的控制方案。例如，移动控制布局可能使用触摸手势，而游戏机的游戏版本可以处理游戏手柄输入，所有这些都在同一个项目中完成。该系统确保了设备之间的无缝过渡，为玩家提供灵活性，并在将游戏扩展到新平台时减轻开发者的负担。
- en: This unified input system is essential for modern gaming environments, where
    players may switch between devices ﬂuidly. By handling input from multiple devices
    simultaneously, Unity 6 ensures a consistent and responsive player experience,
    regardless of the control scheme being used.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 这个统一的输入系统对于现代游戏环境至关重要，因为在现代游戏中，玩家可能会流畅地在设备之间切换。通过同时处理来自多个设备的输入，Unity 6确保了无论使用何种控制方案，玩家都能获得一致且响应灵敏的体验。
- en: Event handling with the Input System
  id: totrans-337
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用输入系统进行事件处理
- en: The new Input System in Unity 6 allows for powerful and ﬂexible event handling,
    making it easy to detect and respond to player inputs across multiple devices.
    In this section, we’ll walk through a simple example of input mapping and event
    handling, demonstrating how Unity 6’s input action asset system can be used to
    detect input events—such as a button press or joystick movement—and trigger a
    corresponding action, such as moving a character or firing a weapon.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6 中的新输入系统允许强大的灵活事件处理，使得跨多个设备检测和响应用户输入变得容易。在本节中，我们将通过一个简单的输入映射和事件处理示例，展示如何使用
    Unity 6 的输入动作资产系统来检测输入事件——例如按钮按下或摇杆移动——并触发相应的动作，如移动角色或发射武器。
- en: Detecting input and responding with an action
  id: totrans-339
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检测输入并采取行动响应
- en: 'Once the input mappings are configured, you can write a script to detect these
    inputs and respond accordingly. Here’s a C# example that shows how to listen for
    the `Move` action and move a character in response to player input:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦配置了输入映射，您可以编写一个脚本来检测这些输入并相应地做出反应。以下是一个 C# 示例，展示了如何监听 `Move` 动作并根据玩家输入移动角色：
- en: '[PRE7]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In this example, note the following:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，请注意以下事项：
- en: The `OnMove` method handles input from both the keyboard and gamepad by reading
    the **Move** action’s value (a two-dimensional vector representing horizontal
    and vertical input)
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OnMove` 方法通过读取 **Move** 动作的价值（表示水平和垂直输入的两个维度的向量）来处理来自键盘和游戏手柄的输入。'
- en: '`moveInput` is used to calculate the player’s movement vector, which is then
    passed to `CharacterController` for smooth movement in the game world'
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`moveInput` 用于计算玩家的移动向量，然后将其传递给 `CharacterController` 以在游戏世界中实现平滑移动'
- en: This setup allows for seamless input from multiple devices, meaning players
    can move the character using either a gamepad’s joystick or keyboard inputs
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此配置允许无缝地从多个设备接收输入，这意味着玩家可以使用游戏手柄的摇杆或键盘输入来移动角色
- en: When the joystick or keyboard is hit, the script moves the character in a small
    amount in the intended direction. Since this action can be repeated some sixty
    times in a second, that small movement can end up being very fast.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 当摇杆或键盘被按下时，脚本会在目标方向上对角色进行小幅度移动。由于此动作每秒可以重复约六十次，因此这种小幅度移动可能会变得非常快。
- en: Handling input events for other actions
  id: totrans-347
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理其他动作的输入事件
- en: 'To handle other input events, such as jumping or firing a weapon, you can define
    additional actions in your input action asset and bind them to specific devices.
    For example, you might create a *Jump* action mapped to the spacebar (keyboard)
    and *A* button (gamepad). Here’s how you could add event handling for jumping:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 要处理其他输入事件，例如跳跃或发射武器，您可以在输入动作资产中定义额外的动作并将它们绑定到特定设备。例如，您可能创建一个映射到空格键（键盘）和 *A*
    按钮（游戏手柄）的 *Jump* 动作。以下是添加跳跃事件处理的示例：
- en: '[PRE8]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This method checks whether the `Jump` action was performed and responds by writing
    `"Player jumped!"` to the log file.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法检查是否执行了 `Jump` 动作，并通过将 `"Player jumped!"` 写入日志文件来响应。
- en: Using Unity 6’s Input System, event handling becomes straightforward and ﬂexible.
    By defining input actions within the input action asset and binding them to various
    devices, you can easily detect player input and trigger actions in response. Whether
    it’s moving a character, jumping, or firing a weapon, Unity’s event-based system
    streamlines the process of responding to user input across multiple control schemes,
    ensuring that your game remains responsive and dynamic for players on any platform.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Unity 6 的输入系统，事件处理变得简单和灵活。通过在输入动作资产中定义输入动作并将它们绑定到各种设备，您可以轻松检测玩家输入并触发相应的动作。无论是移动角色、跳跃还是发射武器，Unity
    的基于事件的系统简化了跨多种控制方案响应用户输入的过程，确保您的游戏在任何平台上都能保持响应和动态。
- en: The Unity Input System in Unity 6 oﬀers a streamlined and ﬂexible approach to
    managing input from multiple devices, allowing developers to configure complex
    input actions efficiently across keyboards, gamepads, and touchscreens. This section
    explored how to set up input mappings, handle multiple devices simultaneously,
    and respond to player input using event-driven actions, enhancing the overall
    gameplay experience. Now, let’s shift focus to performance monitoring in Unity
    6, where enhanced profiling tools provide deeper insights into optimizing game
    performance.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6 中的 Unity 输入系统提供了一种简化和灵活的方法来管理来自多个设备的输入，允许开发者高效地配置键盘、游戏手柄和触摸屏上的复杂输入操作。本节探讨了如何设置输入映射、同时处理多个设备以及使用事件驱动操作响应用户输入，从而增强整体游戏体验。现在，让我们将重点转向
    Unity 6 中的性能监控，其中增强的剖析工具提供了更深入的游戏性能优化见解。
- en: Enhanced performance monitoring with Unity 6
  id: totrans-353
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Unity 6 的增强性能监控
- en: Unity 6 introduces a suite of powerful enhancements to its profiling tools,
    oﬀering developers deeper insights into game performance. By leveraging these
    tools, developers can eﬀectively monitor key performance metrics, identify bottlenecks,
    and optimize resource usage to ensure smooth and responsive gameplay. Whether
    you’re troubleshooting frame rate drops or addressing memory leaks, the enhanced
    profiling capabilities in Unity 6 provide the advanced monitoring needed to fine-tune
    every aspect of your game.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6 对其剖析工具引入了一套强大的增强功能，为开发者提供了更深入的游戏性能见解。通过利用这些工具，开发者可以有效地监控关键性能指标，识别瓶颈，并优化资源使用，以确保流畅和响应灵敏的游戏体验。无论是解决帧率下降问题还是处理内存泄漏，Unity
    6 中增强的剖析能力提供了对游戏每个方面进行微调所需的先进监控功能。
- en: Enhanced features of the Unity 6 Proﬁler
  id: totrans-355
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Unity 6 Profiler 的增强功能
- en: Unity 6 introduces several powerful enhancements to its Profiler, giving developers
    the tools they need to monitor and optimize game performance with greater precision
    and control.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6 对其 Profiler 引入了几项强大的增强功能，为开发者提供了他们所需的工具，以更精确和控制的方式监控和优化游戏性能。
- en: '**Advanced metrics and detailed** **performance tracking**'
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高级指标和详细** **性能跟踪**'
- en: Unity 6’s Profiler provides comprehensive, real-time metrics that cover a wide
    range of performance aspects. These metrics help developers track CPU, GPU, memory,
    rendering, and physics performance in real time, allowing them to pinpoint exactly
    where bottlenecks occur. With the new, deeper metrics introduced in Unity 6, developers
    can not only analyze the overall system load but also drill down into finer details,
    such as individual frames and specific processes. This level of detail makes it
    easier to track how each element of the game is impacting performance.
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Unity 6 的 Profiler 提供了全面、实时的指标，涵盖了广泛的性能方面。这些指标帮助开发者实时跟踪 CPU、GPU、内存、渲染和物理性能，使他们能够精确地定位瓶颈所在。通过
    Unity 6 中引入的新、更深入的指标，开发者不仅可以分析整体系统负载，还可以深入到更细致的细节，例如单个帧和特定进程。这种详细程度使得跟踪游戏中的每个元素如何影响性能变得更加容易。
- en: '**Real-time** **performance monitoring**'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实时** **性能监控**'
- en: One of the standout features of Unity 6’s enhanced Profiler is its real-time
    tracking capabilities. Developers can now observe performance metrics as they
    occur during gameplay or within the Unity Editor. This allows for the quick identification
    of performance spikes or dips, making it possible to diagnose issues on the spot.
    By using real-time monitoring, developers can actively troubleshoot problems such
    as frame rate drops, slow physics calculations, or inefficient rendering in real-world
    scenarios.
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Unity 6 增强型 Profiler 的一个突出特点是其实时跟踪能力。开发者现在可以观察在游戏过程中或 Unity 编辑器内发生的性能指标。这允许快速识别性能的峰值或低谷，使得现场诊断问题成为可能。通过使用实时监控，开发者可以积极解决帧率下降、缓慢的物理计算或现实场景中的低效渲染等问题。
- en: '**Optimized** **garbage collection**'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优化** **垃圾回收**'
- en: Another area where Unity 6 has made significant improvements is garbage collection
    monitoring. In earlier versions, excessive or poorly timed garbage collection
    could lead to stuttering and performance issues. Unity 6 addresses this with optimized
    garbage collection tracking within the Profiler, allowing developers to monitor
    memory allocation and collection cycles more eﬀectively. This enhanced visibility
    helps prevent memory leaks and ensure that garbage collection is occurring efficiently,
    reducing the impact on gameplay performance.
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Unity 6在垃圾回收监控方面也取得了显著的改进。在早期版本中，过多的或不及时进行的垃圾回收可能导致卡顿和性能问题。Unity 6通过Profiler中的优化垃圾回收跟踪来解决这一问题，使开发者能够更有效地监控内存分配和回收周期。这种增强的可见性有助于防止内存泄漏并确保垃圾回收高效进行，从而减少对游戏性能的影响。
- en: Example – troubleshooting frame rate drops
  id: totrans-363
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例 - 故障排除帧率下降
- en: 'Here’s a quick example of how you might use Unity’s enhanced Profiler to troubleshoot
    a common issue such as frame rate drops:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个快速示例，说明你如何使用Unity增强的Profiler来故障排除一个常见问题，例如帧率下降：
- en: '**Start the Proﬁler**: Open the Profiler window from **Window** | **Analysis**
    | **Proﬁler**.'
  id: totrans-365
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**启动Profiler**：从**窗口** | **分析** | **Profiler**打开Profiler窗口。'
- en: '**Play the game**: Run your game in the editor or on a connected device while
    the Profiler is recording. Watch the CPU and rendering metrics, as these are common
    areas where frame rate issues arise.'
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**玩游戏**：在Profiler记录的同时，在编辑器或连接的设备上运行你的游戏。观察CPU和渲染指标，因为这些是帧率问题常见的区域。'
- en: '**Analyze spikes**: If there’s a drop in frame rate, you’ll likely see a spike
    in one of these metrics. Click on the spike to drill down into specific functions
    or processes causing the issue (e.g., an inefficient script, heavy draw calls,
    or long physics calculations).'
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**分析峰值**：如果帧率下降，你可能会看到这些指标中的一个出现峰值。点击峰值以深入了解导致问题的特定函数或进程（例如，效率低下的脚本、重量级的绘制调用或长时间的物理计算）。'
- en: '**Adjust and optimize**: Once the problem area is identified, you can make
    adjustments to your code, optimize rendering paths, or reduce the computational
    load on the CPU. Rerun the Profiler to confirm that the changes have improved
    performance.'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**调整和优化**：一旦确定了问题区域，你可以调整你的代码，优化渲染路径，或减少CPU的计算负载。重新运行Profiler以确认更改是否提高了性能。'
- en: The enhanced profiling tools in Unity 6 oﬀer developers the advanced insights
    they need to optimize their games for maximum performance. With real-time tracking,
    detailed metrics, and better garbage collection monitoring, Unity 6 helps developers
    identify and resolve performance bottlenecks more eﬀectively than ever before.
    These tools are essential for maintaining smooth gameplay and ensuring that your
    game runs efficiently across all platforms.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6增强的Profiler工具为开发者提供了优化游戏以实现最大性能所需的先进洞察力。通过实时跟踪、详细指标和更好的垃圾回收监控，Unity 6帮助开发者比以往任何时候都更有效地识别和解决性能瓶颈。这些工具对于保持流畅的游戏体验和确保游戏在所有平台上高效运行至关重要。
- en: Alongside these advanced profiling tools, Unity 6 introduces significant performance
    enhancements across the development environment.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些高级的Profiler工具之外，Unity 6还在开发环境中引入了重大的性能提升。
- en: Performance boosts and optimizations
  id: totrans-371
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 性能提升和优化
- en: Unity 6 brings several performance improvements that help optimize both runtime
    and editor performance, allowing developers to create more efficient and responsive
    games. These enhancements aﬀect various aspects of game development, such as garbage
    collection, script execution, scene management, and memory management, making
    the development process smoother and reducing overhead during gameplay. Whether
    you’re working on a small indie project or a resource-heavy AAA game, Unity 6’s
    optimizations ensure better performance across the board.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6带来了多项性能提升，有助于优化运行时和编辑器性能，使开发者能够创建更高效、响应更快的游戏。这些增强影响了游戏开发的各个方面，如垃圾回收、脚本执行、场景管理和内存管理，使开发过程更加顺畅，并在游戏过程中减少开销。无论你是在制作一个小型独立项目还是资源密集型的AAA游戏，Unity
    6的优化确保了全面更好的性能。
- en: A key component of these performance upgrades is Unity 6’s improved garbage
    collection and memory management.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 这些性能升级的关键组成部分是Unity 6改进的垃圾回收和内存管理。
- en: Optimized garbage collection and memory management
  id: totrans-374
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优化的垃圾回收和内存管理
- en: One of the significant improvements in Unity 6 is its optimized garbage collection.
    In previous versions, inefficient garbage collection often led to performance
    hitches, particularly in larger games where memory was allocated and deallocated
    frequently. Unity 6 introduces an enhanced garbage collector that reduces memory
    fragmentation and ensures that garbage collection cycles happen more predictably,
    minimizing stutters during gameplay.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6的一个重要改进是其优化的垃圾回收。在之前的版本中，低效的垃圾回收经常导致性能瓶颈，尤其是在内存频繁分配和释放的大游戏中。Unity 6引入了一个增强的垃圾回收器，减少了内存碎片化，并确保垃圾回收周期更加可预测，从而最小化游戏过程中的卡顿。
- en: Moreover, memory management has been further optimized to avoid memory leaks
    and ensure efficient use of resources, which is particularly beneficial in large-scale
    projects. The garbage collector’s ability to track memory allocation more eﬀectively
    allows developers to build games that maintain high performance even in resource-intensive
    environments.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，内存管理已被进一步优化，以避免内存泄漏并确保资源的高效使用，这在大型项目中尤其有益。垃圾回收器跟踪内存分配的能力更有效，使得开发者能够构建即使在资源密集型环境中也能保持高性能的游戏。
- en: Faster scene loading and scene management
  id: totrans-377
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更快的场景加载和管理
- en: Scene loading times have also seen significant improvements in Unity 6, particularly
    for games with complex environments. Unity 6’s optimized scene management system
    reduces load times by implementing better asynchronous loading techniques. This
    allows for the background loading of scenes, enabling smoother transitions between
    scenes without causing long delays or visible performance drops during runtime.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity 6中，场景加载时间也得到了显著改善，尤其是在具有复杂环境的游戏中。Unity 6优化的场景管理系统通过实施更好的异步加载技术来减少加载时间。这允许在后台加载场景，使得场景之间的过渡更加平滑，不会在运行时造成长时间的延迟或明显的性能下降。
- en: 'For example, developers can use Addressables and `SceneManager.LoadSceneAsync`
    to load new environments in the background while keeping gameplay smooth. Here’s
    a simple example:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，开发者可以使用Addressables和`SceneManager.LoadSceneAsync`在后台加载新环境，同时保持游戏流畅。以下是一个简单的示例：
- en: '[PRE9]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Using `SceneManager.LoadSceneAsync` loads a new scene in the background, allowing
    the current gameplay to continue uninterrupted. Once fully loaded, the new scene
    seamlessly transitions in, creating a smoother experience for players in large
    environments.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`SceneManager.LoadSceneAsync`在后台加载新场景，允许当前游戏继续不间断。一旦完全加载，新场景将无缝过渡，为大型环境中的玩家提供更平滑的体验。
- en: Improved script execution
  id: totrans-382
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 改进的脚本执行
- en: Another area where Unity 6 shines is script execution optimization. Unity 6
    features more efficient runtime execution of scripts, reducing the overhead of
    complex calculations and logic loops. These improvements help streamline CPU-bound
    tasks, which is especially important for games with numerous dynamic elements
    that require frequent updates (e.g., AI, physics, and particle systems).
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6在脚本执行优化方面也有显著优势。Unity 6具有更高效的脚本运行时执行，减少了复杂计算和逻辑循环的开销。这些改进有助于简化CPU密集型任务，这对于需要频繁更新的游戏（例如AI、物理和粒子系统）尤其重要。
- en: Unity 6’s enhanced Burst compiler and C#’s job system contribute to better multi-threaded
    processing, allowing scripts to be executed concurrently across multiple threads.
    This results in more efficient CPU utilization, which can dramatically boost performance
    in systems-heavy games.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6的增强型Burst编译器和C#的作业系统有助于更好的多线程处理，允许脚本在多个线程上并发执行。这导致CPU利用率更高，可以显著提升在系统密集型游戏中的性能。
- en: 'Here’s an example of using the C# job system to optimize a simple task in Unity:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个使用C#作业系统在Unity中优化简单任务的示例：
- en: '[PRE10]'
  id: totrans-386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: In this example, the C# job system allows heavy computations to be run in parallel,
    for example moving thousands on NPCs. That significant computational process is
    offloaded to execute on multiple threads. The large task is broken down and distributed
    across available reasons to speed up completion.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，C#作业系统允许重计算并行运行，例如移动数千个NPC。这个重要的计算过程被卸载到多个线程上执行。大任务被分解并分配到可用的资源中，以加快完成速度。
- en: Impact on small and large projects
  id: totrans-388
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对小型和大型项目的影响
- en: The performance enhancements in Unity 6 have a positive impact on both small
    and large projects. For smaller games, the improved garbage collection and script
    execution lead to smoother gameplay and better resource management, while for
    larger, resource-heavy games, the optimized scene loading and memory management
    systems ensure faster load times and reduce memory-related performance issues.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6 中的性能增强对小型和大型项目都有积极影响。对于小型游戏，改进的垃圾回收和脚本执行带来了更流畅的游戏体验和更好的资源管理，而对于大型、资源密集型游戏，优化的场景加载和内存管理系统确保了更快的加载时间并减少了与内存相关的性能问题。
- en: Developers can now fine-tune both the runtime and editor environments more efficiently,
    ensuring that their games are optimized for a wide range of devices and platforms.
    Unity 6’s performance boosts allow for scalable game development that caters to
    both indie developers and larger studios, giving them the tools needed to deliver
    seamless gameplay experiences.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者现在可以更高效地微调运行时和编辑器环境，确保他们的游戏针对广泛的设备和平台进行了优化。Unity 6 的性能提升允许进行可扩展的游戏开发，既满足独立开发者，也满足大型工作室的需求，为他们提供交付无缝游戏体验所需的工具。
- en: In summary, Unity 6 brings a range of performance boosts and optimizations that
    elevate the efficiency of game development. From optimized garbage collection
    and improved memory management to faster scene loading and script execution, these
    changes make it easier for developers to build high-performance games. Whether
    you’re managing complex scenes or optimizing code execution, Unity 6’s enhancements
    ensure that your game performs smoothly, regardless of its scale or complexity.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，Unity 6 带来了一系列的性能提升和优化，这些优化提升了游戏开发的效率。从优化的垃圾回收和改进的内存管理，到更快的场景加载和脚本执行，这些变化使得开发者更容易构建高性能的游戏。无论你是管理复杂的场景还是优化代码执行，Unity
    6 的增强功能确保了你的游戏无论规模或复杂度如何都能流畅运行。
- en: Beyond adding improved computational powers, Unity 6 has made numerous updates
    to the way it processes graphics.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 除了增加改进的计算能力之外，Unity 6 还对其处理图形的方式进行了多次更新。
- en: Graphics and beyond
  id: totrans-393
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图形及其他
- en: Unity 6 introduces significant upgrades to both graphics rendering pipelines
    and the Burst compiler, providing developers with powerful tools to enhance game
    performance, especially for CPU-intensive tasks. These improvements are designed
    to maximize resource efficiency while improving visual quality, making Unity 6
    a standout platform for developers aiming to push the limits of their game’s performance.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6 对图形渲染管线和Burst编译器都进行了重大升级，为开发者提供了强大的工具来提升游戏性能，尤其是在CPU密集型任务方面。这些改进旨在最大化资源效率的同时提高视觉质量，使Unity
    6 成为开发者追求游戏性能极限的突出平台。
- en: One the speed enhancement is how Unity takes the scripts and provides more efficient
    execution. The transition process from a text file to an executable now has numerous
    changes to make the final product faster.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 在速度提升方面，Unity 通过提供更高效的执行来处理脚本。从文本文件到可执行文件的过程现在有众多变化，以使最终产品更快。
- en: Burst compiler enhancements for CPU-intensive tasks
  id: totrans-396
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 针对CPU密集型任务的Burst编译器增强
- en: The Burst compiler in Unity 6 is a highly optimized compiler that transforms
    C# code into highly efficient native code. It is especially beneficial for CPU-bound
    tasks that require heavy computation, such as physics calculations, AI processing,
    and large-scale simulations. By using the Burst compiler, developers can achieve
    significant performance boosts, particularly when combined with Unity’s C# job
    system, which helps oﬄoad work to multiple cores.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6 中的Burst编译器是一个高度优化的编译器，它将C#代码转换为高效的本地代码。它特别有利于需要大量计算的CPU密集型任务，如物理计算、AI处理和大规模模拟。通过使用Burst编译器，开发者可以实现显著的性能提升，尤其是在与Unity的C#作业系统结合使用时，这有助于将工作卸载到多个核心。
- en: 'Here’s a simple example of using the Burst compiler in conjunction with jobs:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个使用Burst编译器结合作业的简单示例：
- en: '[PRE11]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In this example, the `BurstCompile` attribute is used to ensure that `ComplexCalculationJob`
    is compiled using the Burst compiler. Code that is flagged with `Burst` are processed
    with the new technology to product faster executable code.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，`BurstCompile` 属性被用来确保 `ComplexCalculationJob` 使用Burst编译器进行编译。标记为 `Burst`
    的代码将使用新技术进行处理，以生成更快的可执行代码。
- en: Improvements to the SRP, URP, and HDRP
  id: totrans-401
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对SRP、URP和HDRP的改进
- en: Unity 6 continues to enhance its **Scriptable Render Pipeline** (**SRP**), allowing
    developers to have greater control over rendering processes. This framework enables
    developers to customize rendering pipelines, such as the **Universal Render Pipeline**
    (**URP**) for cross-platform optimization and the **High-Definition Render Pipeline**
    (**HDRP**) for delivering high-fidelity graphics.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6 继续增强其 **可脚本渲染管道**（**SRP**），允许开发者对渲染过程有更大的控制权。这个框架使开发者能够自定义渲染管道，例如用于跨平台优化的
    **通用渲染管道**（**URP**）和用于提供高保真图形的 **高清渲染管道**（**HDRP**）。
- en: '**URP**: Optimized for performance across a wide range of devices, the URP
    enhances rendering efficiency on mobile, console, and desktop platforms. With
    improved rendering techniques in Unity 6, developers can achieve better performance
    without sacrificing visual quality, making the URP ideal for projects that need
    to run on multiple platforms.'
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**URP**：针对广泛设备性能优化，URP 提高了移动、控制台和桌面平台上的渲染效率。在 Unity 6 中改进的渲染技术使得开发者能够在不牺牲视觉质量的情况下实现更好的性能，这使得
    URP 成为需要在多个平台上运行的项目理想选择。'
- en: '**HDRP**: The HDRP, on the other hand, is designed for high-end hardware and
    focuses on achieving the highest level of visual fidelity. Unity 6 brings further
    enhancements to the HDRP, including improved lighting systems, real-time ray tracing
    support, and more realistic post-processing eﬀects, enabling developers to create
    immersive environments.'
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HDRP**：另一方面，HDRP 是为高端硬件设计的，专注于实现最高级别的视觉保真度。Unity 6 对 HDRP 进行了进一步的增强，包括改进的光照系统、实时光线追踪支持和更逼真的后期处理效果，使开发者能够创建沉浸式环境。'
- en: Example – optimizing rendering with the URP
  id: totrans-405
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例 - 使用 URP 优化渲染
- en: 'Using the URP in Unity 6 allows you to reduce the rendering overhead while
    maintaining graphical quality. Here’s an example of how to switch your project
    to the URP:'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Unity 6 中使用 URP 可以在保持图形质量的同时减少渲染开销。以下是如何将您的项目切换到 URP 的示例：
- en: Install the URP from Package Manager.
  id: totrans-407
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从包管理器中安装 URP。
- en: Go to **Project Settings** | **Graphics** and assign the URP asset to the SRP
    settings.
  id: totrans-408
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 **项目设置** | **图形** 并将 URP 资产分配给 SRP 设置。
- en: URP will now handle rendering across all scenes, optimizing performance for
    each platform.
  id: totrans-409
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: URP 现在将处理所有场景的渲染，为每个平台优化性能。
- en: Unity 6’s improvements to the Burst compiler and rendering pipelines provide
    developers with the tools to maximize performance and rendering quality. The Burst
    compiler oﬀers an efficient way to handle CPU-intensive tasks, while the updates
    to the URP and HDRP enhance rendering performance across diﬀerent platforms. By
    leveraging these tools, developers can create visually stunning, high-performance
    games.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 6 对 Burst 编译器和渲染管道的改进为开发者提供了最大化性能和渲染质量的工具。Burst 编译器提供了一种高效处理 CPU 密集型任务的方法，而
    URP 和 HDRP 的更新则增强了不同平台上的渲染性能。通过利用这些工具，开发者可以创建视觉震撼、性能卓越的游戏。
- en: Summary
  id: totrans-411
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter explored the major advancements in Unity 6, highlighting the powerful
    tools and features that enhance game development. We began by discussing UI Toolkit,
    which streamlines UI development by oﬀering a ﬂexible and scalable solution for
    building UIs.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 本章探讨了 Unity 6 的重要进展，突出了增强游戏开发的强大工具和功能。我们首先讨论了 UI Toolkit，它通过提供灵活且可扩展的解决方案来构建
    UI，从而简化了 UI 开发。
- en: After that, we delved into the new Input System, which simplifies input handling
    across multiple devices, making it more efficient for developers to configure
    complex actions. We then covered profiling tools, which provide detailed insights
    into performance monitoring, enabling developers to identify and address bottlenecks
    eﬀectively. This was followed by an exploration of performance boosts and optimizations,
    including improvements to garbage collection, script execution, and memory management,
    ensuring both small and large projects run efficiently.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们深入探讨了新的输入系统，它简化了跨多个设备的输入处理，使开发者能够更高效地配置复杂动作。然后我们介绍了性能分析工具，它们提供了详细的性能监控洞察，使开发者能够有效地识别和解决瓶颈。这之后是对性能提升和优化的探索，包括垃圾收集、脚本执行和内存管理的改进，确保小型和大型项目都能高效运行。
- en: Finally, we looked at graphics and rendering enhancements, focusing on the Burst
    compiler and rendering pipelines such as the URP and HDRP, which elevate both
    performance and visual fidelity in Unity 6\. Together, these features make Unity
    6 a robust platform for building high-performance, visually rich games.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们探讨了图形和渲染增强功能，重点关注Burst编译器和如URP和HDRP等渲染管线，这些功能在Unity 6中提升了性能和视觉保真度。这些特性共同使得Unity
    6成为一个构建高性能、视觉丰富的游戏平台的强大平台。
