["```cs\npublic static Object Instantiate(Object original, Vector3\n  position, Quaternion rotation);\npublic static Object Instantiate(Object original, Vector3\n  position, Quaternion rotation, Transform parent);\n```", "```cs\n    using UnityEngine;\n    public class TestInstantiatePrefab : MonoBehaviour\n    {\n        [SerializeField]\n        private GameObject _prefab;\n        [SerializeField]\n        private Transform _parent;\n        private GameObject _instance;\n        private void Start()\n        {\n            var position = new Vector3(0f, 0f, 0f);\n            var rotation = Quaternion.identity;\n            _instance = Instantiate(_prefab, position,\n              rotation, _parent);\n        }\n    }\n    ```", "```cs\npublic class AwakeAndStartA : MonoBehaviour\n{\n    private List<int> _listRef;\n    public List<int> ListRef => _listRef;\n    private void Awake()\n    {\n        _listRef = new List<int>();\n    }\n}\n```", "```cs\npublic class AwakeAndStartB : MonoBehaviour\n{\n    private void Awake()\n    {\n      var comp =\n       GameObject.Find(\"A\").GetComponent<AwakeAndStartA>();\n      Debug.Log($\"comp is null > {comp is null}\");\n      Debug.Log(comp.ListRef.Count);\n    }\n}\n```", "```cs\npublic class AwakeAndStartB : MonoBehaviour\n{\n    private void Start()\n    {\n      var comp =\n       GameObject.Find(\"A\").GetComponent<AwakeAndStartA>();\n      Debug.Log($\"comp is null > {comp is null}\");\n      Debug.Log(comp.ListRef.Count);\n    }\n}\n```", "```cs\npublic class PostProcessing : MonoBehaviour\n{\n[SerializeField] \nprivate Material _mat;\n    private void OnRenderImage(RenderTexture src,\n      RenderTexture dest)\n    {\n        Graphics.Blit(src, dest, _mat);\n    }\n}\n```", "```cs\npublic class OnGUITest : MonoBehaviour\n{\n    private void OnGUI()\n    {\n        if (GUI.Button(new Rect(10, 10, 200, 100),\n          \"Button\"))\n        {\n            Debug.Log(\"Hello World!\");\n        }\n    }\n}\n```", "```cs\n[SerializeField] \nprivate HelloWorld _helloWorld;\n```", "```cs\n    void Start()\n    {\n        _helloWorld =\n          gameObject.AddComponent<HelloWorld>();\n    }\n```", "```cs\n    public void SayHi()\n    {\n        Debug.Log(\"Hello World!\");\n    }\n```", "```cs\npublic class TestGetComponent : MonoBehaviour\n{\n    void Update()\n    {\n        var helloWorld =\n          gameObject.GetComponent<HelloWorld>();\n        if (helloWorld == null)\n        {\n            return;\n        }\n        helloWorld.SayHi();\n    }\n}\n```", "```cs\nprivate GameObject _targetGameObject;\n    private void Start()\n    {\n        // Using Find method to find game objects is not\n           recommended,\n        // this is just to demonstrate how to call this\n           method to find\n        // the target object at runtime.\n        _targetGameObject =\n          GameObject.Find(\"GameObjectTest\");\n    }\n```", "```cs\n    void Update()\n{\n\n        var helloWorld =\n          _targetGameObject.GetComponent<HelloWorld>();\n        if (helloWorld == null)\n        {\n            return;\n        }\n        helloWorld.SayHi();\n    }\n```"]