["```cs\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')) \n```", "```cs\nchoco install kubernetes-cli \n```", "```cs\n@\"Server=<your machine name>\\<your instance name>;Database=grpcmicroservice;Trusted_Connection=True;Trust Server Certificate=True;MultipleActiveResultSets=true\" \n```", "```cs\nServer=host. Docker.internal;Database=grpcmicroservice;User Id=<your user name>;Password=<your user password>;Trust Server Certificate=True;MultipleActiveResultSets=true\" \n```", "```cs\ndocker network create test-net, \n```", "```cs\ndocker run --rm --net test-net --name grpcmicroservice <microservice image name>, \n```", "```cs\n<PropertyGroup>\n<TargetFramework>net8.0</TargetFramework>\n<Nullable>enable</Nullable>\n<UserSecretsId>b4f03ff2-033c-4d5e-a33b-65f26786b052</UserSecretsId>\n<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>\n**<****DockerfileRunArguments****>**\n**--rm --net test-net --name grpcmicroservice**\n**</****DockerfileRunArguments****>**\n</PropertyGroup> \n```", "```cs\n…\nusing var channel = GrpcChannel.ForAddress(\"http://grpcmicroservice:8080\");\nvar client = new Counter.CounterClient(channel);\n… \n```", "```cs\nbuilder.WebHost.ConfigureKestrel(options =>\n{\n    options.ListenLocalhost(5000, o =>\n        o.Protocols = Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols.Http2);\n}); \n```", "```cs\nif (toProcess.Count > 0)\n{\n\t…\n} \n```", "```cs\nminikube start \n```", "```cs\nminikube image load fakesource:latest\nminikube image load grpcmicroservice:latest \n```", "```cs\nminikube image ls \n```", "```cs\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: grpcmicroservice\n  labels:\n    app: statistics\nspec:\n  selector:\n    matchLabels:\n      app: statistics\n      role: worker\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: statistics\n        role: worker\n    spec:\n      containers:\n      - name: grpcmicroservice\n        image: grpcmicroservice:latest\n        imagePullPolicy: Never\n        resources:\n          requests:\n            cpu: 10m\n            memory: 10Mi\n        env:\n        - name: ASPNETCORE_HTTP_PORTS\n          value: \"8080\"\n        ports:\n        - containerPort: 8080\n          name: http \n```", "```cs\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: fakesource\n  labels:\n    app: sale\nspec:\n  selector:\n    matchLabels:\n      app: sales\n      role: source\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: sales\n        role: source\n    spec:\n      containers:\n      - name: fakesource\n        image: fakesource:latest\n        imagePullPolicy: Never\n        resources:\n          requests:\n            cpu: 10m\n            memory: 10Mi \n```", "```cs\napiVersion: v1\nkind: Service\nmetadata:\n  name: grpcmicroservice\n  labels:\n    app: contract\n    role: worker\nspec:\n  ports:\n  - port: 8080\n    name: http\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app: statistics\n    role: worker \n```", "```cs\nkubectl create -f minkubedeploy.yaml \n```", "```cs\nif (toProcess.Count > 0)\n{\n\t…\n} \n```", "```cs\nkubectl delete -f minkubedeploy.yaml \n```", "```cs\nminikube image rm fakesource:latest\nminikube image rm grpcmicroservice:latest \n```", "```cs\nminikube stop \n```"]