- en: '2'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Setting Up the Development Environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Throughout this book, we‚Äôll build (and incrementally improve) a CLI application
    using .NET. We are going to start by setting up our development environment, which
    means installing the necessary tools to get started building CLI applications.
  prefs: []
  type: TYPE_NORMAL
- en: To reinforce and consolidate your learning, thereby getting the most out of
    this book, I strongly recommend that you practice the demos I‚Äôll be showing you
    and complete the suggested exercises in the *Your turn!* sections at the end of
    each chapter. To do that, you‚Äôll need to have your development environment set
    up and properly configured.
  prefs: []
  type: TYPE_NORMAL
- en: 'More specifically, in this chapter, we‚Äôre going to do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Install Visual Studio Code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Install the required extensions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Install the .NET SDK
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Install and configure Git
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The code for this book can be found at [https://github.com/PacktPublishing/Building-CLI-Applications-with-C-Sharp-and-.NET](https://github.com/PacktPublishing/Building-CLI-Applications-with-C-Sharp-and-.NET).
    The code for each chapter will be available in chapter-wise folders and will be
    mentioned in the *Technical requirements* section at the beginning of each chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: There will be no code samples for this chapter, as we‚Äôll be focusing on installing
    the necessary tools and getting your development environment ready. Please also
    note that all the required tools are available to you free of charge.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout this book, I‚Äôll be using a Windows 11 development machine. If you‚Äôre
    running on Linux or macOS, there should not be any major differences, apart from
    the installation of the tools, which I‚Äôll highlight when needed throughout this
    chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Visual Studio Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Even though .NET applications can be developed using various code editors and
    Integrated Development Environments (IDEs), we‚Äôll be relying on Visual Studio
    Code.
  prefs: []
  type: TYPE_NORMAL
- en: Visual Studio Code is an open source, free-of-charge, cross-platform, powerful
    code editor from Microsoft that can be used to develop applications in numerous
    technologies (including .NET). Its true power comes from the wide variety of extensions,
    from Microsoft, third-party editors, and the community, that can be added to it
    to extend its capabilities and make it a code editor like no other. In my humble
    opinion, with all the possibilities that the extensions marketplace provides,
    Visual Studio Code is blurring the line that separates a ‚Äúsimple‚Äù code editor
    from a complete and powerful IDE.
  prefs: []
  type: TYPE_NORMAL
- en: My number one reason for choosing Visual Studio Code is that, by being cross-platform,
    its usage is the same whether you‚Äôre running on Windows, Linux, or macOS. Hence,
    even though I‚Äôll be running on Windows, you‚Äôll have no problem following along
    with me if you‚Äôre running on a different platform, and this is a huge advantage!
  prefs: []
  type: TYPE_NORMAL
- en: To download and install Visual Studio Code, the easiest method is to visit the
    [https://code.visualstudio.com/](https://code.visualstudio.com/) website and download
    it from there.
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 2.1 ‚Äì Downloading Visual Studio Code for Windows\uFEFF](img/B22400_02_01.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 2.1 ‚Äì Downloading Visual Studio Code for Windows
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: The **Download for‚Ä¶** link on the website should adapt to the platform you‚Äôre
    visiting the website from. In other words, if your computer is running Linux,
    the link should state **Download for Linux**. If not, click the drop-down symbol
    to the right of the download link to reveal other options.
  prefs: []
  type: TYPE_NORMAL
- en: Once the download is complete, head over to your downloads folder and double-click
    on the installer file. This will start the installation process. After you select
    **Next** and **Finish**, accepting the default values, you‚Äôll have Visual Studio
    Code installed on your development workstation!
  prefs: []
  type: TYPE_NORMAL
- en: On the **Select Additional Tasks** screen of the installation wizard, I recommend
    that you check the two highlighted checkboxes in the following figure. These checkboxes
    will help you to open Visual Studio Code from the context of the current file/folder.
    I find this to be extremely useful.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.2 ‚Äì ‚ÄúOpen with Code‚Äù checkboxes](img/B22400_02_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.2 ‚Äì ‚ÄúOpen with Code‚Äù checkboxes
  prefs: []
  type: TYPE_NORMAL
- en: Our code editor is now installed and ready to be used. However, the true power
    of Visual Studio Code lies in its extensions. They make the development process
    smooth and easy, while also improving the developer‚Äôs productivity.
  prefs: []
  type: TYPE_NORMAL
- en: At its essence, an extension is a software package that adds new features, functionality,
    or customizations to the Visual Studio Code editor.
  prefs: []
  type: TYPE_NORMAL
- en: Let‚Äôs install some extensions!
  prefs: []
  type: TYPE_NORMAL
- en: Installing the required extensions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we‚Äôll install some extensions that I highly recommend.
  prefs: []
  type: TYPE_NORMAL
- en: Feel free to install additional extensions as well. (Drop me a line on social
    media to let me know which other extensions you installed and why you like them.
    I‚Äôm always keen to learn new things üòä.)
  prefs: []
  type: TYPE_NORMAL
- en: 'The extensions I would recommend for this book are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**C#**: This extension from Microsoft is a no-brainer if you want to enable
    C# support in Visual Studio Code. It provides language support (including syntax
    highlighting and IntelliSense), debugging capabilities, and code completion.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**C# Dev Kit**: This extension from Microsoft provides the Solution Explorer
    and Test Explorer experiences of the full-fledged Visual Studio in Visual Studio
    Code. If you‚Äôre migrating from Visual Studio to Visual Studio Code, or if you
    are still using both, this extension will provide you with a similar experience
    in both environments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**IntelliCode for C# Dev Kit**: This AI-powered extension provides whole-line
    completion, ranked IntelliSense suggestions, and personalized insights based on
    your code base.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GitLens**: This extension by GitKraken supercharges your Git experience within
    Visual Studio Code by providing features such as Git blame annotations, code navigation,
    and commit graph navigation. It greatly improves your Git productivity.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: If you‚Äôre using extensions for AI assistants, such as GitHub Copilot, in Visual
    Studio Code, you may be presented with a warning message stating that IntelliSense
    will not work if the AI assistant is enabled.
  prefs: []
  type: TYPE_NORMAL
- en: 'To add extensions to your Visual Studio Code environment, use the **EXTENSIONS**
    window by clicking the corresponding icon on the left-hand side of the Visual
    Studio Code interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.3 ‚Äì The EXTENSIONS window in Visual Studio Code](img/B22400_02_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.3 ‚Äì The EXTENSIONS window in Visual Studio Code
  prefs: []
  type: TYPE_NORMAL
- en: From there, you can search (and install) various extensions. You may also notice
    that Visual Studio Code will suggest extensions based on the type of application
    you‚Äôre developing. It‚Äôs up to you whether to install them. Just keep in mind that
    the more extensions you install, the more computer resources Visual Studio Code
    will consume. So, you may want to find a balance between the extensions you install
    and the performance hit you‚Äôre willing to accept.
  prefs: []
  type: TYPE_NORMAL
- en: Let‚Äôs install the C# Dev Kit extension next.
  prefs: []
  type: TYPE_NORMAL
- en: First, open the `C# Dev Kit`. Multiple results might be returned, but the one
    we‚Äôre looking for should be at the very top. Make sure it is the right one (C#
    Dev Kit, developed by Microsoft) before clicking on it to select it and reveal
    its product page. Finally, click on the **Install** button below the name of the
    extension. The installation process should only take a few seconds.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.4 ‚Äì Installing the C# Dev Kit extension](img/B22400_02_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.4 ‚Äì Installing the C# Dev Kit extension
  prefs: []
  type: TYPE_NORMAL
- en: Once installation is complete, and a project has been opened, the C# Dev Kit
    extension will add the **SOLUTION EXPLORER** capability, which is similar to our
    experience with Visual Studio for Windows.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.5 ‚Äì The C# Dev Kit extension in action](img/B22400_02_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.5 ‚Äì The C# Dev Kit extension in action
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Note that when you install the C# Dev Kit extension, the C# extension is automatically
    installed as well.
  prefs: []
  type: TYPE_NORMAL
- en: Other extensions can be installed by following the exact same process.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the .NET SDK
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you may have guessed, the .NET SDK is required because we‚Äôll be developing
    CLI applications using .NET.
  prefs: []
  type: TYPE_NORMAL
- en: 'Although any version of .NET would do, we‚Äôll use .NET 8 for the following reasons:'
  prefs: []
  type: TYPE_NORMAL
- en: It is the latest **Long Term Support** (**LTS**) version of .NET and will be
    supported until November 10, 2026 ([https://dotnet.microsoft.com/en-us/platform/support/policy/dotnet-core](https://dotnet.microsoft.com/en-us/platform/support/policy/dotnet-core))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is cross-platform, so the CLI applications we‚Äôll be building with .NET 8
    can be executed on Windows, Linux, or macOS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Before you install the .NET 8 SDK, you can verify whether it‚Äôs already installed
    by using this command (works on Windows, Linux, and macOS):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This will return the list of installed .NET SDKs on your machine.
  prefs: []
  type: TYPE_NORMAL
- en: 'The list should look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'If the .NET 8 SDK is not installed on your machine (as you can see from the
    preceding listing, it is not installed on mine), you can download it by visiting
    this website: [https://dotnet.microsoft.com/en-us/download](https://dotnet.microsoft.com/en-us/download)'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.6 ‚Äì Downloading the .NET 8 SDK for Windows](img/B22400_02_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.6 ‚Äì Downloading the .NET 8 SDK for Windows
  prefs: []
  type: TYPE_NORMAL
- en: Once the installer is downloaded, locate it in your downloads folder and double-click
    on it to start the installation process. This will require a couple of clicks,
    on **Next** and then on **Finish**.
  prefs: []
  type: TYPE_NORMAL
- en: After the installation is complete, you will notice that not only the .NET 8
    SDK has been installed but also the .NET runtime.
  prefs: []
  type: TYPE_NORMAL
- en: The .NET runtime is the core component that executes compiled .NET code and
    provides runtime services such as memory management and exception handling. The
    .NET SDK, on the other hand, contains tools and libraries for developing, building,
    testing, and debugging .NET applications.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.7 ‚Äì The .NET 8 SDK is installed](img/B22400_02_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.7 ‚Äì The .NET 8 SDK is installed
  prefs: []
  type: TYPE_NORMAL
- en: 'We can then run the previous command to list the installed .NET SDKs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'This time, you‚Äôll notice that the .NET 8 SDK is present:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'If you‚Äôre running on a macOS computer, visiting the .NET SDK installation website
    will look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.8 ‚Äì Downloading the .NET 8 SDK for macOS](img/B22400_02_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.8 ‚Äì Downloading the .NET 8 SDK for macOS
  prefs: []
  type: TYPE_NORMAL
- en: We now have everything we need to develop our applications. However, if you
    are serious about development, you need a code management and versioning tool.
    This is where Git comes into play.
  prefs: []
  type: TYPE_NORMAL
- en: Installing and configuring Git
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Git is a powerful and widely used distributed version control system that allows
    developers to track changes, collaborate on code, manage project history, and
    maintain different versions of their code base efficiently. It provides many benefits,
    including version tracking, branching, and collaboration, making it an essential
    tool for software development teams.
  prefs: []
  type: TYPE_NORMAL
- en: In other words, if you‚Äôre serious about development, you need to use Git.
  prefs: []
  type: TYPE_NORMAL
- en: From our perspective, since we‚Äôll be dealing with a code repository that is
    hosted on GitHub, we‚Äôll need to use Git (hence, having it installed on our development
    workstation).
  prefs: []
  type: TYPE_NORMAL
- en: Git can be installed on Windows, Linux, and macOS.
  prefs: []
  type: TYPE_NORMAL
- en: 'Depending on what operating system you are using, Git might already be installed.
    You can check that by running this command in a terminal window:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'If it‚Äôs already installed, you can update it by running this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Once this is done, you can skip the rest of this section.
  prefs: []
  type: TYPE_NORMAL
- en: The easiest way to install Git is to visit the [https://git-scm.com/downloads](https://git-scm.com/downloads)
    website, where you‚Äôll get the link to download Git for your platform of choice.
  prefs: []
  type: TYPE_NORMAL
- en: 'Since I‚Äôm running on a Windows machine, I‚Äôll download Git for Windows by clicking
    on the **Download for** **Windows** link:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.9 ‚Äì Downloading Git for Windows](img/B22400_02_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.9 ‚Äì Downloading Git for Windows
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, I‚Äôll click on **64-bit Git for Windows Setup** under **Standalone Installer**
    because I‚Äôm running on an x64 machine:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.10 ‚Äì Selecting the 64-bit version of Git for Windows](img/B22400_02_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.10 ‚Äì Selecting the 64-bit version of Git for Windows
  prefs: []
  type: TYPE_NORMAL
- en: Once the download is complete, double-click on the executable file in your downloads
    folder to start the installation process. Once again, the installation process
    consists of clicking on the **Next** and **Finish** buttons. You should accept
    mostly default values apart from two exceptions.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first exception is that I choose to select **Use Visual Studio Code as
    Git‚Äôs default editor** on the **Choosing the default editor used by Git** screen
    of the installation wizard:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.11 ‚Äì Use Visual Studio Code as Git‚Äôs default editor](img/B22400_02_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.11 ‚Äì Use Visual Studio Code as Git‚Äôs default editor
  prefs: []
  type: TYPE_NORMAL
- en: The second exception is that I ask Git to override the default branch name,
    using `main` rather than **master** to use a more inclusive name.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.12 ‚Äì Override the default branch name in Git](img/B22400_02_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.12 ‚Äì Override the default branch name in Git
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the installation is complete, I can validate that Git is indeed installed
    by opening a terminal window and typing the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'When the installation process is completed successfully, you should see this
    output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.13 ‚Äì Git is installed!](img/B22400_02_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.13 ‚Äì Git is installed!
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: If you‚Äôre running on a Linux workstation, the chances are that Git is already
    installed. So, before you try to install it, I recommend that you validate that
    it isn‚Äôt already installed by opening a terminal and simply typing `git`. If it
    is already installed, the output will show the help of the command.
  prefs: []
  type: TYPE_NORMAL
- en: Once Git is installed, we‚Äôll perform some basic configurations, particularly
    setting a Git user identity so other developers can identify our contributions.
  prefs: []
  type: TYPE_NORMAL
- en: 'For this, we‚Äôll use these two commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Perfect! We are now able to not only write our code but to version it and track
    its changes.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Congratulations! You now have a development environment that is properly configured
    and ready to be used.
  prefs: []
  type: TYPE_NORMAL
- en: 'As a reminder, we‚Äôve installed the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Visual Studio Code, which will serve as our code editor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The C#, C# Dev Kit, IntelliCode for C# Dev Kit, and GitLens extensions for Visual
    Studio Code, which will make the development, debugging, and testing process smoother
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The .NET SDK, which is obviously required since we‚Äôll be developing a .NET CLI
    application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Git, which is required since we‚Äôll be dealing with a GitHub repository
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now that we‚Äôre fully set up and ready, we can begin our journey to the wonderful
    land of CLI applications. Our first stopover will lead us to explore the concepts
    and anatomy of CLI applications.
  prefs: []
  type: TYPE_NORMAL
- en: Your turn!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Almost every chapter of this book closes with a *Your turn!* section in which
    you‚Äôre challenged to complete one or more tasks by applying the knowledge you
    gained from the chapter you just completed.
  prefs: []
  type: TYPE_NORMAL
- en: Since this chapter was all about configuring your development environment, your
    challenge is to configure yours so you‚Äôll be able to practice what you learn in
    upcoming chapters. If you have already completed this task, well done! You have
    no more tasks to complete here, and I will see you in the next chapter.
  prefs: []
  type: TYPE_NORMAL
