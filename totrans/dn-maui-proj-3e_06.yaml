- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Building a Photo Gallery App Using CollectionView and CarouselView
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 CollectionView 和 CarouselView 构建 Photo Gallery 应用程序
- en: In this chapter, we will build an app that shows photos from the camera roll
    (photo gallery) of a user’s device. The user will also be able to select photos
    as favorites. We will then look at the different ways to display photos—in carousels
    and in multi-column grid control. By using the .NET MAUI `CarouselView` control
    to display a group of images, the user can swipe through them to view each image.
    To display a large group of images, we will use the .NET MAUI `CollectionView`
    control and vertical scrolling to allow the user to view all the images. By learning
    how to use these controls, we will be able to use them in a lot of other cases
    when we build real-world apps.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将构建一个应用程序，展示用户设备相册（照片库）中的照片。用户还可以选择照片作为收藏夹。然后我们将探讨不同的照片显示方式——在轮播图中和在多列网格控件中。通过使用
    .NET MAUI `CarouselView` 控件显示一组图像，用户可以滑动查看每张图像。为了显示大量图像，我们将使用 .NET MAUI `CollectionView`
    控件和垂直滚动，以便用户查看所有图像。通过学习如何使用这些控件，我们将在构建实际应用程序时能够将它们用于许多其他情况。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Requesting permissions from the user to access data
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从用户请求访问数据的权限
- en: How to import photos from the iOS and Mac Catalyst photo gallery
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何从 iOS 和 Mac Catalyst 照片库导入照片
- en: How to import photos from the Android photo gallery
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何从 Android 照片库导入照片
- en: How to import photos from the Windows photo gallery
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何从 Windows 照片库导入照片
- en: How to use `CarouselView` in .NET MAUI
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在 .NET MAUI 中使用 `CarouselView`
- en: How to use `CollectionView` in .NET MAUI
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在 .NET MAUI 中使用 `CollectionView`
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To be able to complete this project, you will need to have Visual Studio for
    Mac or Windows installed, as well as the necessary .NET MAUI workloads. See *Chapter
    1*, *Introduction to .NET MAUI*, for more details on how to set up your environment.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成此项目，您需要安装 Visual Studio for Mac 或 Windows，以及必要的 .NET MAUI 工作负载。有关如何设置环境的更多详细信息，请参阅
    *第 1 章*，*.NET MAUI 简介*。
- en: To build an iOS app using Visual Studio for your PC, you have to have a **Macintosh**
    (**Mac**) device connected. If you don’t have access to a Mac at all, you can
    just follow the Android and Windows part of this project.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Visual Studio for PC 构建 iOS 应用程序，您必须连接一个 **Macintosh**（**Mac**）设备。如果您根本无法访问
    Mac，您可以只遵循此项目的 Android 和 Windows 部分。
- en: You can find the full source for the code in this chapter at [https://github.com/PacktPublishing/MAUI-Projects-3rd-Edition/](https://github.com/PacktPublishing/MAUI-Projects-3rd-Edition/).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在本章中找到代码的完整源代码，请访问 [https://github.com/PacktPublishing/MAUI-Projects-3rd-Edition/](https://github.com/PacktPublishing/MAUI-Projects-3rd-Edition/)。
- en: Project overview
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目概述
- en: Almost all apps visualize collections of data, and in this chapter, we will
    focus on two of the .NET MAUI controls that can be used to display data collections—`CollectionView`and
    `CarouselView`. Our app will show the photos that users have on their devices;
    to do that, we need to create a photo importer for each platform—one for iOS and
    Mac Catalyst, one for Windows, and one for Android.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有应用程序都会可视化数据集合，在本章中，我们将重点关注两个可以用于显示数据集合的 .NET MAUI 控件——`CollectionView` 和
    `CarouselView`。我们的应用程序将展示用户设备上的照片；为此，我们需要为每个平台创建一个照片导入器——一个用于 iOS 和 Mac Catalyst，一个用于
    Windows，一个用于 Android。
- en: The build time for this project is about 60 minutes.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 此项目的构建时间约为 60 分钟。
- en: Building the photo gallery app
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建 Photo Gallery 应用程序
- en: This project, like all the rest, is a **File** | **New** | **Project...**-style
    project, which means that we will not be importing any code at all. So, this first
    section is all about creating the project and setting up the basic project structure.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 此项目，就像所有其他项目一样，是一个 **文件** | **新建** | **项目...** 风格的项目，这意味着我们根本不会导入任何代码。因此，本节全部关于创建项目和设置基本项目结构。
- en: It’s time to start building the app using the following steps. Let’s begin!
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候开始使用以下步骤构建应用程序了。让我们开始吧！
- en: Creating the new project
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建新项目
- en: 'The first step is to create a new .NET MAUI project:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是创建一个新的 .NET MAUI 项目：
- en: 'Open Visual Studio 2022 and select **Create a** **new project**:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Visual Studio 2022 并选择 **创建新项目**：
- en: "![Figure 6.1 – Visual Studio 2\uFEFF022](img/Figure_6.1_B19214.jpg)"
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.1 – Visual Studio 2022](img/Figure_6.1_B19214.jpg)'
- en: Figure 6.1 – Visual Studio 2022
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.1 – Visual Studio 2022
- en: This will open the **Create a new** **project** wizard.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开 **创建新项目** 向导。
- en: 'In the search field, type in `maui` and select the **.NET MAUI App** item from
    the list:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入 `maui` 并从列表中选择 **.NET MAUI 应用** 项：
- en: "![Figure 6.2 – Create a new proje\uFEFFct](img/Figure_6.2_B19214.jpg)"
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.2 – 创建新项目](img/Figure_6.2_B19214.jpg)'
- en: Figure 6.2 – Create a new project
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.2 – 创建新项目
- en: Click **Next**.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **下一步**。
- en: 'Complete the next step of the wizard by naming your project. We will be calling
    our application `GalleryApp` in this case. Move on to the next dialog box by clicking
    **Next**, as shown in the following screenshot:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过命名您的项目来完成向导的下一步。在本例中，我们将我们的应用程序命名为 `GalleryApp`。通过点击 **下一步**，继续到下一个对话框，如图所示：
- en: "![Figure 6.3 – Configure your new proje\uFEFFct](img/Figure_6.3_B19214.jpg)"
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.3 – 配置您的项目](img/Figure_6.3_B19214.jpg)'
- en: Figure 6.3 – Configure your new project
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3 – 配置您的项目
- en: Click **Next**.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **下一步**。
- en: The last step will prompt you for the version of .NET Core to support. At the
    time of writing, .NET 6 is available as **Long-Term Support** (**LTS**), and .NET
    7 is available as **Standard-Term Support**. For the purposes of this book, we
    will assume that you will be using .NET 7.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步将提示您选择要支持的 .NET Core 版本。在撰写本文时，.NET 6 可用为 **长期支持**（**LTS**），而 .NET 7 可用为
    **标准期限支持**。在本书中，我们假设您将使用 .NET 7。
- en: '![Figure 6.4 – Additional information](img/Figure_6.4_B19214.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.4 – 补充信息](img/Figure_6.4_B19214.jpg)'
- en: Figure 6.4 – Additional information
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.4 – 补充信息
- en: Finalize the setup by clicking **Create** and wait for Visual Studio to create
    the project.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击 **创建** 并等待 Visual Studio 创建项目来最终完成设置。
- en: Just like that, the app is created. Let’s start by getting some photos to display.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样，应用程序就创建完成了。让我们先获取一些照片来显示。
- en: Importing photos
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入照片
- en: 'The importing of photos is something that is carried out for all the platforms,
    so we will create a photo importer interface. The interface will have two `Get`
    methods—one that supports paging and one that gets photos with specified filenames.
    Both methods will also take a quality argument, but we will only use that argument
    in the iOS photo importer. The quality argument will be an `enum` type with two
    options—`High` and `Low`. However, before we create the interface, we will create
    a model class that will represent an imported photo using the following steps:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 照片的导入是在所有平台上执行的操作，因此我们将创建一个照片导入接口。该接口将有两个 `Get` 方法—一个支持分页，另一个获取指定文件名的照片。这两种方法也将接受一个质量参数，但我们只会在
    iOS 照片导入器中使用该参数。质量参数将是一个具有两个选项的 `enum` 类型—`High` 和 `Low`。然而，在我们创建接口之前，我们将创建一个模型类，该类将使用以下步骤表示导入的照片：
- en: Create a new folder named `Models` in the `GalleryApp` project.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `GalleryApp` 项目中创建一个名为 `Models` 的新文件夹。
- en: 'Create a new class named `Photo` in the recently created folder:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在最近创建的文件夹中创建一个名为 `Photo` 的新类：
- en: '[PRE0]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now that we have created the model class, we can continue to create the interface:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了模型类，我们可以继续创建接口：
- en: Create a new folder named `Services` in the project.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目中创建一个名为 `Services` 的新文件夹。
- en: 'Create a new interface named `IPhotoImporter` in the `Services` folder:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Services` 文件夹中创建一个名为 `IPhotoImporter` 的新接口：
- en: '[PRE1]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the `Services` folder, add a new file and create an `enum` type named `Quality`
    with two members—`Low` and `High`:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Services` 文件夹中，添加一个新文件并创建一个名为 `Quality` 的 `enum` 类型，包含两个成员—`Low` 和 `High`：
- en: '[PRE2]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In the `Services` folder, create a new class named `PhotoImporter`:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Services` 文件夹中创建一个名为 `PhotoImporter` 的新类：
- en: '[PRE3]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This class provides us with the base for the platform-specific implementations.
    By marking it `partial`, we are telling the compiler that there is more to this
    class in other files. We will be putting the implementation in the platform-specific
    folders later.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此类为我们提供了特定平台实现的基础。通过将其标记为 `partial`，我们告诉编译器该类在其他文件中还有更多内容。我们将在稍后把实现放在特定平台的文件夹中。
- en: Now that we have the interface, we can add app permissions.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了接口，我们可以添加应用程序权限。
- en: Requesting app permissions
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 请求应用程序权限
- en: If your app doesn’t require any of the device’s extra features, such as location,
    camera, or internet, then you will need to use permissions to request access to
    those resources. While each platform implements permissions slightly differently,
    .NET MAUI maps the platform-specific permissions into a common set of permissions
    to make things simpler. The permission system in .NET MAUI is also extensible
    so that you can create your own permissions to best suit your app.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的应用程序不需要设备任何额外的功能，如位置、相机或互联网，那么您将需要使用权限来请求访问这些资源。虽然每个平台对权限的实现略有不同，但 .NET
    MAUI 将特定平台的权限映射到一组通用的权限，以简化操作。.NET MAUI 的权限系统也是可扩展的，这样您就可以创建最适合您应用程序的自定义权限。
- en: Let’s look at a specific example to see how requesting permissions works. `GalleryApp`
    displays images from a device’s photo library. In the case of iOS and Android,
    the app must declare and request access to the photo library before it can use
    it. While these permissions are configured and named differently, .NET MAUI defines
    a `Photo` permission that hides those implementation details.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个具体的例子来看看请求权限是如何工作的。`GalleryApp` 显示来自设备照片库的图片。在 iOS 和 Android 的案例中，应用必须在能够使用照片库之前声明并请求访问权限。虽然这些权限的配置和命名方式不同，但
    .NET MAUI 定义了一个 `Photo` 权限，隐藏了这些实现细节。
- en: 'Follow these steps to add a permission check to `GalleryApp`:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤向 `GalleryApp` 添加权限检查：
- en: Create a new class named `AppPermissions` in the `GalleryApp` project.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `GalleryApp` 项目中创建一个名为 `AppPermissions` 的新类。
- en: 'Modify the class definition to add a `partial` modifier, and remove the default
    constructor:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改类定义以添加 `partial` 修饰符，并移除默认构造函数：
- en: '[PRE4]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Add the following class definition to the `AppPermissions` class:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下类定义添加到 `AppPermissions` 类中：
- en: '[PRE5]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This creates a type named `AppPermission` that derives from the default .NET
    MAUI `Photos` permission class. It is also marked `partial` to allow for platform-specific
    implementation details to be added. Spoiler alert: we will need to have some platform-specific
    permissions.'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这创建了一个名为 `AppPermission` 的类型，它从默认的 .NET MAUI `Photos` 权限类继承。它也被标记为 `partial`，以便添加特定于平台的实现细节。剧透一下：我们将需要一些特定于平台的权限。
- en: 'Add the following method to the `AppPermissions` class:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下方法添加到 `AppPermissions` 类中：
- en: '[PRE6]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `CheckRequiredPermission` method is used to ensure our app has the right
    permissions before we attempt any operations that might fail if we don’t. Its
    implementation is to call the .NET MAUI `CheckSyncStatus` with our `AppPermission`
    type. It returns a `PermissionStatus`, which is an `enum` type. We are mostly
    interested in the `Denied` and `Granted` values.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`CheckRequiredPermission` 方法用于确保在我们尝试任何可能会因为权限不足而失败的操作之前，我们的应用拥有正确的权限。其实现是调用
    .NET MAUI 的 `CheckSyncStatus` 方法，并使用我们的 `AppPermission` 类型。它返回一个 `PermissionStatus`，这是一个枚举类型。我们主要对
    `Denied` 和 `Granted` 值感兴趣。'
- en: 'Add the `CheckAndRequestRequiredPermission` method to the `AppPermissions`
    class:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `CheckAndRequestRequiredPermission` 方法添加到 `AppPermissions` 类中：
- en: '[PRE7]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The `CheckAndRequestRequiredPermission` method handles the intricacies of requesting
    access from the user. The first step is to simply check whether the permission
    has already been granted, and if it has, return the status. Next, if you are on
    iOS and the permission has been denied, it cannot be requested again, so you must
    instruct the user on how to grant permission to the app by using the settings
    panel. In the request behavior, Android includes the ability to nag the user if
    they have denied access. This behavior is exposed through .NET MAUI with the `ShouldShowRationale`
    method. It will return `false` for any platform that does not support this behavior;
    on Android, it will return `true` the first time the user denies access and `false`
    if the user denies it a second time. Finally, we request access for `AppPermission`
    from the user. Again, .NET MAUI is hiding all the platform implementation details
    from us, making checking and requesting access to certain resources very straightforward.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`CheckAndRequestRequiredPermission` 方法处理从用户请求访问权限的复杂性。第一步是简单地检查权限是否已经被授予，如果是，则返回状态。接下来，如果您在
    iOS 上且权限已被拒绝，则无法再次请求，因此您必须指导用户如何通过设置面板授予应用权限。在请求行为中，Android 包括如果用户拒绝访问时骚扰用户的能力。这种行为通过
    .NET MAUI 的 `ShouldShowRationale` 方法公开。对于不支持此行为的任何平台，它将返回 `false`；在 Android 上，第一次用户拒绝访问时将返回
    `true`，如果用户第二次拒绝，则返回 `false`。最后，我们请求用户对 `AppPermission` 进行访问。同样，.NET MAUI 正在隐藏所有平台实现细节，使得检查和请求访问某些资源变得非常直接。'
- en: Look familiar?
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来熟悉吗？
- en: If the preceding code looks familiar, it might be. This is the same implementation
    that is described in the .NET MAUI documentation. You can find it at [https://learn.microsoft.com/en-us/dotnet/maui/platform-integration/appmodel/permissions](https://learn.microsoft.com/en-us/dotnet/maui/platform-integration/appmodel/permissions).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果前面的代码看起来很熟悉，那可能是因为它。这正是 .NET MAUI 文档中描述的实现。您可以在 [https://learn.microsoft.com/en-us/dotnet/maui/platform-integration/appmodel/permissions](https://learn.microsoft.com/en-us/dotnet/maui/platform-integration/appmodel/permissions)
    找到它。
- en: Now that we have the shared `AppPermissions` in place, we can start with the
    platform implementations.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置了共享的 `AppPermissions`，我们可以开始平台实现。
- en: Importing photos from the iOS photo gallery
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从 iOS 照片库导入照片
- en: 'First, we will write the iOS code. To access photos, we need permission from
    the user, and we need to explain why we are asking for permission. To do that,
    we add text that explains why we need permission to the `info.plist` file. This
    text will be displayed when we ask the users for permission. To open the `info.plist`
    file, right-click on the file in the `Platforms/iOS` folder and click `Info.plist`
    editor. Add the following text to the end of the `<``dict>` element:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将编写 iOS 代码。为了访问照片，我们需要用户的权限，并且我们需要解释为什么我们需要请求权限。为此，我们将解释为什么需要权限的文本添加到 `info.plist`
    文件中。当请求用户权限时，将显示此文本。要打开 `info.plist` 文件，在 `Platforms/iOS` 文件夹中的文件上右键单击并点击 `Info.plist`
    编辑器。将以下文本添加到 `<``dict>` 元素的末尾：
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The first thing we will do is implement the `Import` method that reads what
    photos can be loaded:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要做的第一件事是实现 `Import` 方法，该方法读取可以加载哪些照片：
- en: In the `GalleryApp` project in the `Platforms/iOS` folder, create a new class
    called `PhotoImporter`.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Platforms/iOS` 文件夹中的 `GalleryApp` 项目中，创建一个名为 `PhotoImporter` 的新类。
- en: Change the namespace declaration from `GalleryApp.Platforms.iOS` to `GalleryApp.Services`.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将命名空间声明从 `GalleryApp.Platforms.iOS` 更改为 `GalleryApp.Services`。
- en: The partial class definitions must be in the same namespace, even though they
    are in different folders.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 即使部分类定义在不同的文件夹中，它们也必须在同一个命名空间中。
- en: Add the `partial` modifier.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加 `partial` 修饰符。
- en: Resolve all the references.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解析所有引用。
- en: 'Create a `private` field with a `PHAsset` dictionary named `assets`. This will
    be used to store photo information:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `assets` 的 `PHAsset` 字典的 `private` 字段。这将用于存储照片信息：
- en: '[PRE9]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Create a new `private partial` method named `Import`:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `Import` 的新 `private partial` 方法：
- en: '[PRE10]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In the `Import` method, request authorization using the `AppPermissions.Check``AndRequestRequiredPermission`
    method:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Import` 方法中，使用 `AppPermissions.Check``AndRequestRequiredPermission` 方法请求授权：
- en: '[PRE11]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'If the user has granted access, fetch all the image assets by using `PHAsset.FetchAssets`:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果用户已经授予访问权限，则使用 `PHAsset.FetchAssets` 通过 `PHAsset` 获取所有图像资产：
- en: '[PRE12]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now, we have fetched `PHAssets`for all the photos, but to show the photo, we
    need to get the actual photo. On iOS, to do that, we need to request the image
    for the asset. This is something that is carried out asynchronously, so we will
    use `ObservableCollection`:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经获取了所有照片的 `PHAssets`，但要显示照片，我们需要获取实际的照片。在 iOS 上，为了做到这一点，我们需要请求资产的图像。这是一项异步执行的操作，因此我们将使用
    `ObservableCollection`：
- en: '[PRE13]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now, we have what we need to start implementing the two `Get` methods from
    the interface. We will start with the partial `Task<ObservableCollection<Photo>>
    Get(int start, int count, Quality quality = Quality.Low)`method, which will be
    used to get photos from the `CollectionView`view that loads photos incrementally:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经拥有了开始实现接口中的两个 `Get` 方法所需的一切。我们将从部分 `Task<ObservableCollection<Photo>>
    Get(int start, int count, Quality quality = Quality.Low)` 方法开始，该方法将用于从加载照片的 `CollectionView`
    视图中获取照片：
- en: '[PRE14]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The other method from the `IPhotoImporter` interface, `Task<ObservableCollection<Photo>>
    Get(List<string> filenames, Quality quality = Quality.Low)`, is very similar to
    the `Task<ObservableCollection<Photo>> Get(int start, int count, Quality quality
    = Quality.Low)` method. The only difference is that there is no code to handle
    indexes, and the `foreach` loop that loops through the result’s array contains
    an `if` statement that checks whether the filename is the same as the current
    `PHAsset` object, and if it is, it calls the `AddImage` method:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 `IPhotoImporter` 接口的另一个方法 `Task<ObservableCollection<Photo>> Get(List<string>
    filenames, Quality quality = Quality.Low)` 与 `Task<ObservableCollection<Photo>>
    Get(int start, int count, Quality quality = Quality.Low)` 方法非常相似。唯一的区别是没有处理索引的代码，并且遍历结果数组的
    `foreach` 循环包含一个 `if` 语句，检查文件名是否与当前的 `PHAsset` 对象相同，如果是，则调用 `AddImage` 方法：
- en: '[PRE15]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: In the preceding code, we set `NetworkAccessAllowed = true`. We do this to make
    it possible to download photos from **iCloud**.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，我们设置了 `NetworkAccessAllowed = true`。我们这样做是为了使下载来自 **iCloud** 的照片成为可能。
- en: Now, one of the four photo importers of our project is complete. The Mac Catalyst
    importer will be the next one we implement.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们项目中的四个照片导入器之一已经完成。下一个我们将实现的是 Mac Catalyst 导入器。
- en: Importing photos from the Mac Catalyst photo gallery
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从 Mac Catalyst 照片库导入照片
- en: 'The Mac Catalyst importer is exactly the same as what we just did for iOS.
    However, there isn’t a convenient way to say, “*I need this class for just iOS
    and Mac Catalyst, and nothing else.*” So we will take the path of least resistance
    and just copy the class into the Mac Catalyst platform folder:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: Mac Catalyst导入器与我们刚刚为iOS所做的是完全相同的。然而，并没有一种方便的方式来表达，“*我只需要这个类用于iOS和Mac Catalyst，而不需要其他任何东西。*”因此，我们将走最简单的路径，直接将类复制到Mac
    Catalyst平台文件夹中：
- en: Right-click the `PhotoImporter.cs` file in the `Platforms/iOS` folder in the
    project and select **Copy**.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击项目中的`Platforms/iOS`文件夹中的`PhotoImporter.cs`文件并选择**复制**。
- en: Right-click the `Platforms/MacCatalyst` folder and select **Paste**.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击`Platforms/MacCatalyst`文件夹并选择**粘贴**。
- en: 'Right-click on the `Info.plist` file in the `Platforms/MacCatalyst` folder
    and click `<``dict>` element:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击`Platforms/MacCatalyst`文件夹中的`Info.plist`文件并点击`<dict>`元素：
- en: '[PRE16]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: That concludes the Mac Catalyst implementation of the `PhotoImporter` class.
    Next, we will work on the Android platform.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这就完成了`PhotoImporter`类的Mac Catalyst实现。接下来，我们将着手处理Android平台。
- en: Importing photos from the Android photo gallery
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从Android照片库导入图片
- en: Now that we have created an implementation for iOS, we will do the same for
    Android. Before we jump right into the importer, we need to address the permissions
    on Android.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经为iOS创建了一个实现，我们将为Android做同样的处理。在我们直接进入导入器之前，我们需要解决Android上的权限问题。
- en: 'In Android API version 33, three new permissions were added to enable read
    access to media files: `ReadMediaImages`, `ReadMediaVideos`, and `ReadMediaAudio`.
    Prior to API version 33, all that was required was the `ReadExternalStorage` permission.
    To properly request the correct permission for the API version of the device,
    create a new file named `AppPermissions` in the `Platform/Android` folder and
    modify it to look like the following:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android API版本33中，添加了三个新权限以启用对媒体文件的读取访问：`ReadMediaImages`、`ReadMediaVideos`和`ReadMediaAudio`。在API版本33之前，所需的只是`ReadExternalStorage`权限。为了正确请求设备的API版本的正确权限，在`Platform/Android`文件夹中创建一个名为`AppPermissions`的新文件，并将其修改如下：
- en: '[PRE17]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The first two lines add the required permissions to the `AndroidManifet.xml`
    file, similar to what we did manually with the iOS `info.plist` file. However,
    we only need `ReadMediaImages` for API 33+ and `ReadExternalStorage` for API versions
    below 33, so we set `MaxSdkVersion` for the `ReadExternalStorage` property. Then,
    we extend the `AppPermission` class with an implementation of the `RequirePermissions`
    property. In `RequirePermissions`, we return an array containing the `ReadMediaImages`
    permissions if the API version is 33 or higher, or the `ReadExternalStorage` permission
    if the API version is lower than 33\. The Boolean value that is part of the `perms`
    array indicates whether the permission requires requesting access at runtime from
    the user. Now, when the app launches, it will request access for the correct permission
    based on the API level of the device.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 前两行将所需的权限添加到`AndroidManifet.xml`文件中，这与我们手动对iOS的`info.plist`文件所做的是类似的。然而，我们只需要`ReadMediaImages`权限用于API
    33及以上版本，以及`ReadExternalStorage`权限用于低于33版本的API版本，因此我们为`ReadExternalStorage`属性设置了`MaxSdkVersion`。然后，我们通过实现`RequirePermissions`属性来扩展`AppPermission`类。在`RequirePermissions`中，如果API版本为33或更高，我们返回包含`ReadMediaImages`权限的数组；如果API版本低于33，则返回`ReadExternalStorage`权限。`perms`数组中的布尔值表示权限是否需要在运行时请求用户的访问权限。现在，当应用启动时，它将根据设备的API级别请求正确的权限。
- en: 'Now that we have the Android-specific permissions sorted, we can import images
    using the following steps:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经整理好了Android特定的权限，我们可以按照以下步骤导入图片：
- en: Create a new class named `PhotoImporter` in the project in the `Platforms/Android`
    folder.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Platforms/Android`文件夹中的项目中创建一个名为`PhotoImporter`的新类。
- en: Change the namespace declaration from `GalleryApp.Platforms.Android` to `GalleryApp.Services`.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将命名空间声明从`GalleryApp.Platforms.Android`更改为`GalleryApp.Services`。
- en: The partial class definitions must be in the same namespace, even though they
    are in different folders.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 即使部分类定义在不同的文件夹中，它们也必须在同一个命名空间中。
- en: Add the `partial` modifier.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加`partial`修饰符。
- en: Add a `using` statement for `GalleryApp.Models` to use the `Photo` class later.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个`using`语句以使用`GalleryApp.Models`中的`Photo`类。
- en: 'Like the iOS implementation, we will start by implementing the `Import` method.
    Add a new method named `Import` as follows:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与iOS实现类似，我们将首先实现`Import`方法。添加一个名为`Import`的新方法，如下所示：
- en: '[PRE18]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Request permissions from the user to get the photos (highlighted in the following
    code block):'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从用户那里请求权限以获取照片（以下代码块中突出显示）：
- en: '[PRE19]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now, use `ContentResolver` to query for the files and add them to the result:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用 `ContentResolver` 查询文件并将它们添加到结果中：
- en: '[PRE20]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'We will then start editing the `Task<ObservableCollection<Photo>> Get(int start,
    int count, Quality quality = Quality.Low)` method. If the import succeeds, we
    will continue to write the code that handles which photos should be imported in
    this loading of images. Conditions are specified with the `start` and `count`
    parameters. Use the following code listing to implement the first `Get` method:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将开始编辑 `Task<ObservableCollection<Photo>> Get(int start, int count, Quality
    quality = Quality.Low)` 方法。如果导入成功，我们将继续编写处理在此图像加载中应导入哪些照片的代码。条件由 `start` 和 `count`
    参数指定。使用以下代码列表来实现第一个 `Get` 方法：
- en: '[PRE21]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Let’s review the preceding code. The first step is to call the `Import` method
    and verify that there are photos to import. If there are none, we simply return
    an empty list. If there are photos to import, then we need to know `startIndex`
    and `endIndex` in the `photos` array to import. The code defaults to `endIndex`
    being `startIndex` plus the count of photos to import. If the count of photos
    to import is greater than the number of photos returned from the `Import` method,
    then `endindex` is adjusted to the length of the photos returned from the `Import`
    method. If `startIndex` is greater than `endIndex`, then we return the list of
    photos. Finally, we can read the images from `startIndex` to `endIndex` from the
    array of photos and return the bytes from the file and just the name of the file
    for each entry.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下前面的代码。第一步是调用 `Import` 方法并验证是否有照片要导入。如果没有，我们简单地返回一个空列表。如果有照片要导入，那么我们需要知道
    `photos` 数组中的 `startIndex` 和 `endIndex` 以导入。代码默认 `endIndex` 为 `startIndex` 加上要导入的照片数量。如果要导入的照片数量大于
    `Import` 方法返回的照片数量，则将 `endindex` 调整为 `Import` 方法返回的照片长度。如果 `startIndex` 大于 `endIndex`，则返回照片列表。最后，我们可以从照片数组中读取
    `startIndex` 到 `endIndex` 的图像，并返回每个条目的文件字节和文件名。
- en: Now, we will continue with the other `Task<ObservableCollection<Photo>> Get`
    **(List<string> filenames, Quality quality =** `Quality.Low)` method.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将继续处理其他 `Task<ObservableCollection<Photo>> Get` **(List<string> filenames,
    Quality quality =** `Quality.Low)` 方法。
- en: 'Create a `foreach` loop to loop through all the photos and to check whether
    each photo is specified in the `filenames`parameter. If a photo is specified in
    the `filenames` parameter, read the photo from the path, as in the first `Get`method:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个 `foreach` 循环来遍历所有照片并检查每个照片是否在 `filenames` 参数中指定。如果照片在 `filenames` 参数中指定，则从路径读取照片，就像第一个
    `Get` 方法一样：
- en: '[PRE22]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: With the Android importer finished, we can move to the final importer for Windows.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 随着 Android 导入器的完成，我们可以转向 Windows 的最终导入器。
- en: Importing photos from the Windows photo gallery
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从 Windows 照片库导入照片
- en: 'The final importer that we need is for the Windows platform. The code will
    follow the same pattern as for the other platforms; however, for Windows, we will
    use the **Windows Search** service to get the list of photos. Let’s see how this
    platform is implemented by following these steps:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要的最终导入器是为 Windows 平台。代码将遵循与其他平台相同的模式；然而，对于 Windows，我们将使用 **Windows 搜索** 服务来获取照片列表。让我们通过以下步骤查看此平台是如何实现的：
- en: Import the `tlbimp-Windows.Search.Interop` and `System.Data.OleDB` NuGet packages.
    These are needed to search the filesystem for images.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `tlbimp-Windows.Search.Interop` 和 `System.Data.OleDB` NuGet 包。这些包用于在文件系统中搜索图像。
- en: 'Open the `GalleryApp` project by double-clicking it in **Solution Explorer**;
    edit the new imports to add a condition:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在 **解决方案资源管理器** 中双击它来打开 `GalleryApp` 项目；编辑新的导入以添加一个条件：
- en: '[PRE23]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Create a new class called `PhotoImporter` in the `Windows` platform folder,
    and mark it as `partial`.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Windows` 平台文件夹中创建一个名为 `PhotoImporter` 的新类，并将其标记为 `partial`。
- en: Change the namespace declaration from `GalleryApp.Platforms.Windows` to `GalleryApp.Services`.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将命名空间声明从 `GalleryApp.Platforms.Windows` 更改为 `GalleryApp.Services`。
- en: The `partial` class definitions must be in the same namespace, even though they
    are in different folders.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`partial` 类定义必须在同一个命名空间中，即使它们在不同的文件夹中。'
- en: 'Add `using` directives, so that we can use the classes in those namespaces:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加 `using` 指令，以便我们可以使用那些命名空间中的类：
- en: '[PRE24]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Add a `private` field to hold the `QueryHelper` reference:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向 `QueryHelper` 引用添加一个 `private` 字段：
- en: '[PRE25]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Like the previous implementations, we will start by implementing the `Import`
    method, so add a new method named `Import` as follows:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与之前的实现类似，我们将首先实现 `Import` 方法，因此添加一个名为 `Import` 的新方法，如下所示：
- en: '[PRE26]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Request permissions from the user to get the photos (highlighted in the following
    code block):'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从用户那里请求权限以获取照片（以下代码块中突出显示）：
- en: '[PRE27]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Now, using `QueryHelper`, get all the image paths:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用`QueryHelper`获取所有图像路径：
- en: '[PRE28]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Here, `QueryHelper` is used to create a SQL query, and we use `OleDbConnection`
    to query the search index for all the matching files.
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，使用`QueryHelper`创建一个SQL查询，并使用`OleDbConnection`查询搜索索引以获取所有匹配的文件。
- en: 'We can now start editing the `Task<ObservableCollection<Photo>> Get(int start,
    int count, Quality quality = Quality.Low)` method. Add the following declaration
    to the `PhotoImporter` class:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以开始编辑`Task<ObservableCollection<Photo>> Get(int start, int count, Quality
    quality = Quality.Low)`方法。将以下声明添加到`PhotoImporter`类中：
- en: '[PRE29]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Now, we will start the implementation of the method by setting up file patterns
    and the locations we will search:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将开始实现方法，设置文件模式和我们将要搜索的位置：
- en: '[PRE30]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'These arrays define the file extensions and folders that we will search for
    photos. We will then create `QueryHelper` from the `tlbimp-Windows.Search.Interop`
    NuGet package and, using the arrays, configure the query parameters:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数组定义了我们将会搜索的文件扩展名和文件夹，我们将从`tlbimp-Windows.Search.Interop` NuGet 包中创建`QueryHelper`，并使用这些数组来配置查询参数：
- en: '[PRE31]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '`QueryMaxResults` is set so that we only retrieve the results we are looking
    for. Then, we specify that the only data column to return is `"System.ItemPathDisplay"`.
    Next, we set `QueryWhereRestictions` from our list of extensions. Note the use
    of the `range` operator to remove the trailing `"OR"` in the query string. We
    use the same technique to add the locations to `QueryWhereRestrictions`. Finally,
    we set the sort order.'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 将`QueryMaxResults`设置为只检索我们正在寻找的结果。然后，我们指定只返回数据列`"System.ItemPathDisplay"`。接下来，我们从我们的扩展名列表中设置`QueryWhereRestrictions`。注意在查询字符串中移除尾随的`"OR"`时使用了`range`运算符。我们使用相同的技巧将位置添加到`QueryWhereRestrictions`中。最后，我们设置排序顺序。
- en: 'The remainder of the method is going to be very similar to those of the previous
    platforms. If the import succeeds, we will continue to handle what photos should
    be imported in this loading of images. Conditions are specified with the `start`
    and `count` parameters. Use the following code listing to complete the implementation
    of the first `Get` method:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 方法的其余部分将与之前平台的类似。如果导入成功，我们将继续处理这次加载图像中应该导入的照片。条件由`start`和`count`参数指定。使用以下代码列表来完成第一个`Get`方法的实现：
- en: '[PRE32]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Let’s quickly review the preceding code. The first step is to call the `Import`
    method and verify that there are photos to import. If there are none, we simply
    return an empty list. If there are photos to import, then we need to know `startIndex`
    and `endIndex` in the `photos` array to import. `startIndex` and `endIndex` are
    adjusted to make sure they are valid for the photos to import. Then, we can read
    the images from `startIndex` to `endIndex` from the array of photos and return
    the bytes from the file and just the name of the file for each entry.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速回顾一下前面的代码。第一步是调用`Import`方法并验证是否有照片要导入。如果没有，我们简单地返回一个空列表。如果有照片要导入，那么我们需要知道`photos`数组中的`startIndex`和`endIndex`以导入。`startIndex`和`endIndex`被调整以确保它们对于要导入的照片是有效的。然后，我们可以从照片数组中读取从`startIndex`到`endIndex`的图像，并返回每个条目的文件字节和文件名。
- en: 'Now, we will continue with the other `Task<ObservableCollection<Photo>> Get(List<string>
    filenames, Quality quality = Quality.Low)` method. Add the following declaration
    to the `PhotoImporter` class:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将继续其他`Task<ObservableCollection<Photo>> Get(List<string> filenames, Quality
    quality = Quality.Low)`方法。将以下声明添加到`PhotoImporter`类中：
- en: '[PRE33]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Now, we will start the implementation of the method by setting the search parameters:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将开始实现方法，设置搜索参数：
- en: '[PRE34]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'For this method, we only need to add all the filenames to `QueryWhereRestrictions`.
    Following that, call the `Import` method, and if it returns results, then use
    a `foreach` loop to loop through all the photos and to check whether each photo
    is specified in the `filenames`parameter. If a photo is specified in the `filenames`
    parameter, read the photo from the path, as in the first `Get`method:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个方法，我们只需要将所有文件名添加到`QueryWhereRestrictions`中。随后，调用`Import`方法，如果它返回结果，则使用`foreach`循环遍历所有照片，并检查每张照片是否在`filenames`参数中指定。如果照片在`filenames`参数中指定，则从路径读取照片，就像第一个`Get`方法中那样：
- en: '[PRE35]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The photo importers are now finished, and we are ready to write the rest of
    the app, which will mostly involve adding code that is shared between the platforms.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 照片导入器现在已经完成，我们准备编写应用程序的其余部分，这主要涉及添加在各个平台之间共享的代码。
- en: Writing the app-initializing code
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编写应用初始化代码
- en: We have now written the code that we will use to get data to the app. Let’s
    continue to build the app, starting with initializing the core parts of the app.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经编写了将用于获取数据的代码。让我们继续构建应用，从初始化应用的核心部分开始。
- en: Wiring up dependency injection
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置依赖注入
- en: By using dependency injection as a pattern, we can keep our code cleaner and
    more testable. This app will use constructor injection, which means that all the
    dependencies that a class has must be passed through its constructor. The container
    then constructs objects for you, so you don’t have to care too much about the
    dependency chain. Since .NET MAUI already includes a dependency injection framework,
    **Microsoft.Extensions.DependencyInjection**, there is nothing extra to install.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用依赖注入作为模式，我们可以使我们的代码更干净、更易于测试。此应用将使用构造函数注入，这意味着一个类所拥有的所有依赖项都必须通过其构造函数传递。然后容器为您构建对象，因此您不必太关心依赖链。由于.NET
    MAUI已经包含了依赖注入框架**Microsoft.Extensions.DependencyInjection**，因此无需安装任何额外的内容。
- en: Confused about dependency injection?
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 对依赖注入感到困惑？
- en: Check out the *Wiring up a dependency injection* section in *Chapter 2*, *Building
    Our First .NET MAUI App*, for more details on dependency injection.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第2章*，*构建我们的第一个.NET MAUI应用*中查看*配置依赖注入*部分，以获取有关依赖注入的更多详细信息。
- en: While it is recommended to use extension methods to group the types together,
    we have very few types in this app to register so we will use a different method
    in the next section.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然建议使用扩展方法来分组类型，但在此应用中要注册的类型很少，所以我们将在下一节中使用不同的方法。
- en: Registering PhotoImporter with dependency injection
  id: totrans-172
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用依赖注入注册PhotoImporter
- en: 'Let’s add the required code to register the types we have created so far, as
    shown in the following steps:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们添加必要的代码来注册我们迄今为止创建的类型，如下所示：
- en: In the `GalleryApp` project, open `MauiProgram.cs`.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`GalleryApp`项目中，打开`MauiProgram.cs`。
- en: 'Make the following changes to the `MauiProgram` class (the changes are highlighted):'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对`MauiProgram`类进行以下更改（更改已突出显示）：
- en: '[PRE36]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The .NET MAUI `MauiAppBuilder` class exposes the `Services` property, which
    is the dependency injection container. We simply need to add the types we want
    dependency injection to know about and the container will do the rest for us.
    Think of a builder as something that collects a lot of information on what needs
    to be done, and then builds the object we need. It’s a very useful pattern on
    its own, by the way.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: .NET MAUI的`MauiAppBuilder`类公开了`Services`属性，它是依赖注入容器。我们只需添加我们想要依赖注入了解的类型，容器就会为我们完成剩余的工作。顺便说一句，将构建器视为收集大量需要完成的信息的东西，然后构建我们需要的对象。它是一个非常有用的模式。
- en: We only use the builder for one thing at the moment. Later on, we will use it
    to register any class in the assembly that inherits from our abstract `ViewModel`class
    and our views. The container is now prepared for us to ask for these types.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 目前我们只使用构建器做一件事。稍后，我们将使用它来注册程序集中从我们的抽象`ViewModel`类和视图继承的任何类。容器现在已为我们准备好，以便我们可以请求这些类型。
- en: Creating a shell
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建外壳
- en: 'The main navigation for this app will be tabs at the bottom of the screen.
    The app will have a fly-out menu with two options—**Home** and **Gallery**:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 此应用的主要导航将在屏幕底部显示标签。应用将有一个飞出菜单，包含两个选项——**主页**和**画廊**：
- en: Create a new folder named `Views` in the project.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目中创建一个名为`Views`的新文件夹。
- en: In the `Views` folder, create two new files using the `MainView` and one named
    `GalleryView`.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Views`文件夹中，使用`MainView`创建两个新文件，并命名为`GalleryView`。
- en: Delete the `MainPage.Xaml` and `MainPage.Xaml.cs` files from the root of the
    project since we won’t be needing those.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从项目的根目录中删除`MainPage.Xaml`和`MainPage.Xaml.cs`文件，因为我们不再需要那些文件。
- en: Open the `AppShell.xaml` file in the root of the project.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开项目根目录中的`AppShell.xaml`文件。
- en: 'Add both views to the `Shell` object using the `ContentTemplate` property of
    `ShellContent`. Use the `DataTemplate` markup extension to load the view from
    the dependency injection container:'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`ShellContent`的`ContentTemplate`属性将两个视图添加到`Shell`对象中。使用`DataTemplate`标记扩展从依赖注入容器中加载视图：
- en: '[PRE37]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Since the views are loaded via `DataTemplates`, they must be registered with
    dependency injection. Add the highlighted code to `MauiProgram.cs`, after the
    `IPhotoInmporter` line:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于视图是通过`DataTemplates`加载的，它们必须与依赖注入进行注册。在`MauiProgram.cs`文件中，在`IPhotoInmporter`行之后添加突出显示的代码：
- en: '[PRE38]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Now that we have created a shell, let’s continue with some other base code before
    we start to create the views.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了一个外壳，在开始创建视图之前，让我们继续编写一些其他的基础代码。
- en: Creating a base view model
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建基视图模型
- en: 'Before we create an actual view model, we will create an abstract base view
    model that all view models can inherit from. The idea behind this base view model
    is that we can write common code in it. In this case, we will implement the `INotifyPropertyChanged`
    interface by going through the following steps:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建实际视图模型之前，我们将创建一个所有视图模型都可以继承的抽象基视图模型。这个基视图模型背后的想法是我们可以在其中编写通用代码。在这种情况下，我们将通过以下步骤实现
    `INotifyPropertyChanged` 接口：
- en: In the `GalleryApp` project, create a folder named `ViewModels`.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `GalleryApp` 项目中，创建一个名为 `ViewModels` 的文件夹。
- en: Add a NuGet reference to `CommunityToolkit.Mvvm`; we use `CommunityToolkit.Mvvm`
    for implementing the `INotifyPropertyChanged` interface, as we have in other chapters.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `CommunityToolkit.Mvvm` 添加为 NuGet 引用；我们使用 `CommunityToolkit.Mvvm` 来实现 `INotifyPropertyChanged`
    接口，就像在其他章节中做的那样。
- en: 'Create a new abstract class named `ViewModel`:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的抽象类名为 `ViewModel`：
- en: '[PRE39]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: In this app’s `ViewModel` class, we have added an abstract method for `Initialize`.
    Each `ViewModel` implementation will override this method and load the images
    asynchronously for display. The `IsBusy` and `NotIsBusy` properties are used as
    flags to indicate when the data has completed loading.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在此应用的 `ViewModel` 类中，我们为 `Initialize` 添加了一个抽象方法。每个 `ViewModel` 实现都将覆盖此方法并异步加载图像以供显示。`IsBusy`
    和 `NotIsBusy` 属性用作标志，指示数据何时完成加载。
- en: Now, we have a `ViewModel` base that we can use for all `ViewModel` instances
    that we will create later in this project.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们有一个 `ViewModel` 基类，我们可以用于在此项目中稍后创建的所有 `ViewModel` 实例。
- en: Creating the gallery view
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建画廊视图
- en: Now, we will start to build the views. We will start with the gallery view,
    which will show the photos as a grid. We will start with `GalleryViewModel`, and
    then create `GalleryView`. Creating the view model first allows Visual Studio
    to use the `GalleryViewModel` definition to check the syntax of the data bindings
    in the XAML file.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将开始构建视图。我们将从画廊视图开始，该视图将作为网格显示照片。我们将从 `GalleryViewModel` 开始，然后创建 `GalleryView`。首先创建视图模型允许
    Visual Studio 使用 `GalleryViewModel` 定义来检查 XAML 文件中的数据绑定语法。
- en: Creating GalleryViewModel
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建 GalleryViewModel
- en: '`GalleryViewModel`is the class that will be responsible for fetching the data
    and handling the view logic. Because photos will be added asynchronously to the
    photo collection, we don’t want to set `IsBusy`to `false`immediately after we
    call the `Get`method of `PhotoImporter`. We will instead wait 3 seconds first.
    However, we will also add an event listener to the collection so that we can listen
    for changes. If the collection changes and there are items in it, we will set
    `IsBusy`to `false`. Create a class named `GalleryViewModel` in the `ViewModels`
    folder and add the following code to implement this:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '`GalleryViewModel` 是负责获取数据和处理视图逻辑的类。由于照片将被异步添加到照片集合中，我们不想在调用 `PhotoImporter`
    的 `Get` 方法后立即将 `IsBusy` 设置为 `false`。相反，我们首先等待3秒钟。然而，我们也会向集合添加一个事件监听器，以便我们可以监听变化。如果集合发生变化并且其中包含项目，我们将
    `IsBusy` 设置为 `false`。在 `ViewModels` 文件夹中创建一个名为 `GalleryViewModel` 的类，并添加以下代码以实现此功能：'
- en: '[PRE40]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Finally, register `GalleryViewModel` with dependency injection in `MauiProgram`:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在 `MauiProgram` 中使用依赖注入注册 `GalleryViewModel`：
- en: '[PRE41]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Now, `GalleryViewModel` is ready, so we can start to create `GalleryView`.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，`GalleryViewModel` 已经准备好了，所以我们可以开始创建 `GalleryView`。
- en: Creating GalleryView
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建画廊视图
- en: 'First, we will create a converter that will convert `byte[]` to `Microsft.Maui.Controls.ImageSource`.
    In the `GalleryApp` project, create a new folder named `Converters`, and inside
    the folder, create a new class named `BytesToImageConverter`:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将创建一个将 `byte[]` 转换为 `Microsft.Maui.Controls.ImageSource` 的转换器。在 `GalleryApp`
    项目中，创建一个新的文件夹名为 `Converters`，并在文件夹内创建一个新的类名为 `BytesToImageConverter`：
- en: '[PRE42]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: To use the converter, we need to add it as a resource. We will do this by adding
    it to a `Resource` **Dictionary** object in the `Resources` property of `GalleryView`.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用转换器，我们需要将其添加为资源。我们将通过将其添加到 `GalleryView` 的 `Resources` 属性中的 `Resource` **字典**
    对象来完成此操作。
- en: 'Open `GalleryView.xaml`, and add the following highlighted code to the view:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 `GalleryView.xaml`，并将以下突出显示的代码添加到视图中：
- en: '[PRE43]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: To be able to bind to `ViewModel`, we will set `BindingContext`to `GalleryViewModel`.
    Use the constructor dependency injection in `GalleryView.xaml.cs` to create an
    instance of `GalleryViewModel`.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够绑定到 `ViewModel`，我们将 `BindingContext` 设置为 `GalleryViewModel`。在 `GalleryView.xaml.cs`
    中使用构造函数依赖注入创建 `GalleryViewModel` 的实例。
- en: 'Open `GalleryView.xaml.cs`, and add the following highlighted code to the class:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 `GalleryView.xaml.cs`，并将以下突出显示的代码添加到类中：
- en: '[PRE44]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: x:Class=" GalleryApp.Views.GalleryView"
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`x:Class=" GalleryApp.Views.GalleryView"`'
- en: '[PRE45]'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: <CollectionView x:Name="Photos" ItemsSource="{Binding Photos}">
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<CollectionView x:Name="Photos" ItemsSource="{Binding Photos}">'
- en: <CollectionView.ItemsLayout>
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<CollectionView.ItemsLayout>`'
- en: <GridItemsLayout Orientation="Vertical" Span="3"
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<GridItemsLayout Orientation="Vertical" Span="3"'
- en: HorizontalItemSpacing="0" />
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`HorizontalItemSpacing="0" />`'
- en: </CollectionView.ItemsLayout>
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<CollectionView.ItemsLayout>`'
- en: <CollectionView.ItemTemplate>
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<CollectionView.ItemTemplate>`'
- en: <DataTemplate x:DataType="models:Photo">
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<DataTemplate x:DataType="models:Photo">'
- en: <Grid>
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<Grid>`'
- en: <Image Aspect="AspectFill" Source="{Binding Bytes,
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<Image Aspect="AspectFill" Source="{Binding Bytes,'
- en: Converter={StaticResource ToImage}}" HeightRequest="120" />
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Converter={StaticResource ToImage}}" HeightRequest="120" />`'
- en: </Grid>
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </Grid>
- en: </DataTemplate>
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </DataTemplate>
- en: </CollectionView.ItemTemplate>
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<CollectionView.ItemTemplate>`'
- en: </CollectionView>
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<CollectionView>`'
- en: '[PRE46]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: <CollectionView :Name="Photos" ItemsSource="{Binding Photos}"
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '`<CollectionView :Name="Photos" ItemsSource="{Binding Photos}"'
- en: EmptyView="{Binding}">
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '`EmptyView="{Binding}">'
- en: …
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: <CollectionView.EmptyViewTemplate>
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '`<CollectionView.EmptyViewTemplate>`'
- en: <DataTemplate x:DataType="viewModels:GalleryViewModel">
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '`<DataTemplate x:DataType="viewModels:GalleryViewModel">'
- en: <Grid>
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '`<Grid>`'
- en: <ActivityIndicator IsVisible="{Binding IsBusy}" />
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '`<ActivityIndicator IsVisible="{Binding IsBusy}" />`'
- en: <Label Text="No photos to import could be found"
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`<Label Text="No photos to import could be found"'
- en: IsVisible="{Binding IsNotBusy}" HorizontalOptions="Center"
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '`IsVisible="{Binding IsNotBusy}" HorizontalOptions="Center"`'
- en: VerticalOptions="Center" HorizontalTextAlignment="Center" />
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '`VerticalOptions="Center" HorizontalTextAlignment="Center" />`'
- en: </Grid>
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: </Grid>
- en: </DataTemplate>
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: </DataTemplate>
- en: </CollectionView.EmptyViewTemplate>
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '`<CollectionView.EmptyViewTemplate>`'
- en: </CollectionView>
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '`<CollectionView>`'
- en: '[PRE47]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: private int itemsAdded;
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '`private int itemsAdded;`'
- en: private void Collection_CollectionChanged(object sender, System.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '`private void Collection_CollectionChanged(object sender, System.'
- en: Collections.Specialized.NotifyCollectionChangedEventArgs args)
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '`Collections.Specialized.NotifyCollectionChangedEventArgs args)`'
- en: '{'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: foreach (Photo photo in args.NewItems)
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '`foreach (Photo photo in args.NewItems)`'
- en: '{'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: itemsAdded++;
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '`itemsAdded++;`'
- en: Photos.Add(photo);
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '`Photos.Add(photo);`'
- en: '}'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: if (itemsAdded == 20)
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '`if (itemsAdded == 20)`'
- en: '{'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: var collection = (ObservableCollection<Photo>)sender;
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '`var collection = (ObservableCollection<Photo>)sender;`'
- en: collection.CollectionChanged -= Collection_CollectionChanged;
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '`collection.CollectionChanged -= Collection_CollectionChanged;`'
- en: '}'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: private int currentStartIndex = 0;
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '`private int currentStartIndex = 0;`'
- en: '[RelayCommand]'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '`[RelayCommand]`'
- en: public async Task LoadMore()
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`public async Task LoadMore()`'
- en: '{'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: currentStartIndex += 20;
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '`currentStartIndex += 20;`'
- en: itemsAdded = 0;
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '`itemsAdded = 0;`'
- en: var collection = await photoImporter.Get(currentStartIndex, 20);
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '`var collection = await photoImporter.Get(currentStartIndex, 20);`'
- en: collection.CollectionChanged += Collection_CollectionChanged;
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '`collection.CollectionChanged += Collection_CollectionChanged;`'
- en: '}'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE48]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: <CollectionView x:Name="Photos" EmptyView="{Binding}"
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`<CollectionView x:Name="Photos" EmptyView="{Binding}"'
- en: ItemsSource="{Binding Photos}" RemainingItemsThreshold="5"
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '`ItemsSource="{Binding Photos}" RemainingItemsThreshold="5"`'
- en: RemainingItemsThresholdReachedCommand="{Binding LoadMoreCommand}">
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '`RemainingItemsThresholdReachedCommand="{Binding LoadMoreCommand}">`'
- en: '[PRE49]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: public interface ILocalStorage
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '`public interface ILocalStorage'
- en: '{'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: void  Store(string filename);
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '`void  Store(string filename);`'
- en: List<string> Get();
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '`List<string> Get();`'
- en: '}'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE50]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: namespace GalleryApp.Services;
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`namespace GalleryApp.Services;`'
- en: using System.Text.Json;
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`using System.Text.Json;`'
- en: 'public class MauiLocalStorage : ILocalStorage'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`public class MauiLocalStorage : ILocalStorage`'
- en: '{'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '{'
- en: public const string FavoritePhotosKey = "FavoritePhotos";
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`public const string FavoritePhotosKey = "FavoritePhotos";`'
- en: public List<string> Get()
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`public List<string> Get()`'
- en: '{'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '{'
- en: if (Preferences.ContainsKey(FavoritePhotosKey))
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`if (Preferences.ContainsKey(FavoritePhotosKey))`'
- en: '{'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '{'
- en: var filenames = Preferences.Get(FavoritePhotosKey,string.Empty);
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`var filenames = Preferences.Get(FavoritePhotosKey,string.Empty);`'
- en: return JsonSerializer.Deserialize<List<string>>(filenames);
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`return JsonSerializer.Deserialize<List<string>>(filenames);`'
- en: '}'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: return new List<string>();
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`return new List<string>();`'
- en: '}'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: public void Store(string filename)
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`public void Store(string filename)`'
- en: '{'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '{'
- en: var filenames = Get();
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`var filenames = Get();`'
- en: filenames.Add(filename);
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`filenames.Add(filename);`'
- en: var json = JsonSerializer.Serialize(filenames);
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`var json = JsonSerializer.Serialize(filenames);`'
- en: Preferences.Set(FavoritePhotosKey, json);
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Preferences.Set(FavoritePhotosKey, json);`'
- en: '}'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE51]'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: builder.Services.AddSingleton<IPhotoImporter>(serviceProvider => new
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '`builder.Services.AddSingleton<IPhotoImporter>(serviceProvider => new'
- en: PhotoImporter());
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '`PhotoImporter());`'
- en: builder.Services.AddTransient<ILocalStorage>(ServiceProvider => new
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '`builder.Services.AddTransient<ILocalStorage>(ServiceProvider => new'
- en: MauiLocalStorage());
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '`MauiLocalStorage());`'
- en: builder.Services.AddTransient<ViewModels.MainViewModel>();
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '`builder.Services.AddTransient<ViewModels.MainViewModel>();`'
- en: '[PRE52]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: private readonly IPhotoImporter photoImporter;
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '`private readonly IPhotoImporter photoImporter;`'
- en: private readonly ILocalStorage localStorage;
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '`private readonly ILocalStorage localStorage;`'
- en: public GalleryViewModel(IPhotoImporter photoImporter, ILocalStorage
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '`public GalleryViewModel(IPhotoImporter photoImporter, ILocalStorage`'
- en: localStorage)
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '`localStorage)'
- en: '{'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: this.photoImporter = photoImporter;
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '`this.photoImporter = photoImporter;`'
- en: this.localStorage = localStorage;
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '`this.localStorage = localStorage;`'
- en: '}'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE53]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: namespace GalleryApp.Services;
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`namespace GalleryApp.Services;`'
- en: internal static class Messages
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`internal static class Messages`'
- en: '{'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '{'
- en: public const string FavoritesAddedMessage =
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: nameof(FavoritesAddedMessage);
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE54]'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[RelayCommand]'
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public void AddFavorites(List<Photo> photos)
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: foreach (var photo in photos)
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: localStorage.Store(photo.Filename);
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: WeakReferenceMessenger.Default.Send<string>(Messages.
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: FavoritesAddedMessage);
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE55]'
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: <CollectionView x:Name="Photos"
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
- en: EmptyView="{Binding}" ItemsSource="{Binding Photos}"
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
- en: SelectionMode="Multiple" RemainingItemsThreshold="5"
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
- en: RemainingItemsThresholdReachedCommand="{Binding LoadMore}">
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: <ContentPage.Resources>
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
- en: <ResourceDictionary>
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
- en: <converters:BytesToImageConverter x:Key="ToImage" />
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
- en: <Style TargetType="Grid">
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
- en: <Setter Property="VisualStateManager.VisualStateGroups">
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
- en: <VisualStateGroupList>
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
- en: <VisualStateGroup x:Name="CommonStates">
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
- en: <VisualState x:Name="Normal" />
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
- en: <VisualState x:Name="Selected">
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
- en: <VisualState.Setters>
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
- en: <Setter Property="Opacity" Value="0.5" />
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
- en: </VisualState.Setters>
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
- en: </VisualState>
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
- en: </VisualStateGroup>
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
- en: </VisualStateGroupList>
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
- en: </Setter>
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
- en: </Style>
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
- en: </ResourceDictionary>
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
- en: </ContentPage.Resources>
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: <ContentPage.ToolbarItems>
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <ToolbarItem Text="Select" Clicked="SelectToolBarItem_
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Clicked" />
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </ContentPage.ToolbarItems>
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE58]'
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: using GalleryApp.Models;
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: using GalleryApp.ViewModels;
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE59]'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: private void SelectToolBarItem_Clicked(object sender, EventArgs e)
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (!Photos.SelectedItems.Any())
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: DisplayAlert("No photos", "No photos selected", "OK");
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: return;
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: var viewModel = (GalleryViewModel)BindingContext;
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: viewModel.AddFavoritesCommand.Execute(Photos.
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: SelectedItems.Select(x =>(Photo)x).ToList());
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: DisplayAlert("Added", "Selected photos have been added to
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: favorites", "OK");
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE60]'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: namespace GalleryApp.ViewModels;
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
- en: using CommunityToolkit.Mvvm.ComponentModel;
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
- en: using CommunityToolkit.Mvvm.Messaging;
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
- en: using GalleryApp.Models;
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
- en: using GalleryApp.Services;
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
- en: using System.Collections.ObjectModel;
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
- en: 'public partial class MainViewModel : ViewModel'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
- en: private readonly IPhotoImporter photoImporter;
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
- en: private readonly ILocalStorage localStorage;
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
- en: '[ObservableProperty]'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
- en: private ObservableCollection<Photo> recent;
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
- en: '[ObservableProperty]'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
- en: private ObservableCollection<Photo> favorites;
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
- en: public MainViewModel(IPhotoImporter photoImporter, ILocalStorage
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
- en: localStorage)
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
- en: this.photoImporter = photoImporter;
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
- en: this.localStorage = localStorage;
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
- en: override protected internal async Task Initialize()
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
- en: var photos = await photoImporter.Get(0, 20, Quality.Low);
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
- en: Recent = photos;
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
- en: await LoadFavorites();
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
- en: WeakReferenceMessenger.Default.Register<string>(this, async
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
- en: (sender, message) => {
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
- en: if( message == Messages.FavoritesAddedMessage )
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
- en: await MainThread.InvokeOnMainThreadAsync(LoadFavorites);
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
- en: '});'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
- en: private async Task LoadFavorites()
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
- en: var filenames = localStorage.Get();
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
- en: var favorites = await photoImporter.Get(filenames, Quality.Low);
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
- en: Favorites = favorites;
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  id: totrans-425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: builder.Services.AddTransient<ILocalStorage>(ServiceProvider
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
- en: => new MauiLocalStorage());
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
- en: builder.Services.AddTransient<ViewModels.MainViewModel>();
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
- en: builder.Services.AddTransient<ViewModels.GalleryViewModel>();
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  id: totrans-430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: public MainView(MainViewModel viewModel)
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: InitializeComponent();
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: BindingContext = viewModel;
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: BindingContext = viewModel;
- en: MainThread.InvokeOnMainThreadAsync(viewModel.Initialize);
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MainThread.InvokeOnMainThreadAsync(viewModel.Initialize);
- en: '}'
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE63]'
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: <ContentPage
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <ContentPage
- en: x:Class="GalleryApp.Views.MainView"
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: x:Class="GalleryApp.Views.MainView"
- en: x:DataType="viewModels:MainViewModel"
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: x:DataType="viewModels:MainViewModel"
- en: Title="My Photos">
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Title="My Photos">
- en: <ContentPage.Resources>
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <ContentPage.Resources>
- en: <ResourceDictionary>
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <ResourceDictionary>
- en: <converters:BytesToImageConverter x:Key="ToImage" />
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <converters:BytesToImageConverter x:Key="ToImage" />
- en: </ResourceDictionary>
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </ResourceDictionary>
- en: </ContentPage.Resources>
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </ContentPage.Resources>
- en: <Grid>
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <Grid>
- en: <Grid.RowDefinitions>
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <Grid.RowDefinitions>
- en: <RowDefinition Height="*" />
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <RowDefinition Height="*" />
- en: <RowDefinition Height="50" />
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <RowDefinition Height="50" />
- en: <RowDefinition Height="*" />
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <RowDefinition Height="*" />
- en: <RowDefinition Height="20" />
  id: totrans-452
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <RowDefinition Height="20" />
- en: </Grid.RowDefinitions>
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </Grid.RowDefinitions>
- en: <CarouselView ItemsSource="{Binding Recent}"
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <CarouselView ItemsSource="{Binding Recent}"
- en: PeekAreaInsets="40,0,40,0" >
  id: totrans-455
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: PeekAreaInsets="40,0,40,0" >
- en: <CarouselView.ItemsLayout>
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <CarouselView.ItemsLayout>
- en: <LinearItemsLayout Orientation="Horizontal"  SnapPointsAlignment="Start"
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <LinearItemsLayout Orientation="Horizontal"  SnapPointsAlignment="Start"
- en: SnapPointsType="Mandatory" />
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SnapPointsType="Mandatory" />
- en: </CarouselView.ItemsLayout>
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </CarouselView.ItemsLayout>
- en: <CarouselView.ItemTemplate>
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <CarouselView.ItemTemplate>
- en: <DataTemplate x:DataType="models:Photo">
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <DataTemplate x:DataType="models:Photo">
- en: <Image Source="{Binding Bytes,
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <Image Source="{Binding Bytes,
- en: Converter={StaticResource ToImage}}" Aspect="AspectFill" />
  id: totrans-463
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Converter={StaticResource ToImage}}" Aspect="AspectFill" />
- en: </DataTemplate>
  id: totrans-464
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </DataTemplate>
- en: </CarouselView.ItemTemplate>
  id: totrans-465
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </CarouselView.ItemTemplate>
- en: </CarouselView>
  id: totrans-466
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </CarouselView>
- en: </Grid>
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </Grid>
- en: </ContentPage>
  id: totrans-468
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </ContentPage>
- en: '[PRE64]'
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: <Grid>
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: <Grid>
- en: <!—Code omitted for brevity -->
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: <!—Code omitted for brevity -->
- en: <CarouselView>
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: <CarouselView>
- en: <!—Code omitted for brevity -->
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: <!—Code omitted for brevity -->
- en: </CarouselView>
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: </CarouselView>
- en: <Label Grid.Row="1" Margin="10" Text="Favorites" FontSize="Subtitle"
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: <Label Grid.Row="1" Margin="10" Text="Favorites" FontSize="Subtitle"
- en: FontAttributes="Bold" />
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: FontAttributes="Bold" />
- en: <CarouselView Grid.Row="2" ItemsSource="{Binding Favorites}"
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: <CarouselView Grid.Row="2" ItemsSource="{Binding Favorites}"
- en: PeekAreaInsets="0,0,40,0" IndicatorView="Indicator">
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: PeekAreaInsets="0,0,40,0" IndicatorView="Indicator">
- en: <CarouselView.ItemsLayout>
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: <CarouselView.ItemsLayout>
- en: <LinearItemsLayout Orientation="Horizontal"
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: <LinearItemsLayout Orientation="Horizontal"
- en: SnapPointsAlignment="Start" SnapPointsType="MandatorySingle" />
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: SnapPointsAlignment="Start" SnapPointsType="MandatorySingle" />
- en: </CarouselView.ItemsLayout>
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: </CarouselView.ItemsLayout>
- en: <CarouselView.EmptyViewTemplate>
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: <CarouselView.EmptyViewTemplate>
- en: <DataTemplate>
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: <DataTemplate>
- en: <Label Text="No favorites selected" />
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: <Label Text="No favorites selected" />
- en: </DataTemplate>
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: </DataTemplate>
- en: </CarouselView.EmptyViewTemplate>
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: </CarouselView.EmptyViewTemplate>
- en: <CarouselView.ItemTemplate>
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: <CarouselView.ItemTemplate>
- en: <DataTemplate x:DataType="models:Photo">
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: <DataTemplate x:DataType="models:Photo">
- en: <Border Grid.RowSpan="2" StrokeShape="RoundRectangle
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: <Border Grid.RowSpan="2" StrokeShape="RoundRectangle
- en: 15,15,15,15" Padding="0" Margin="0,0,0,0" BackgroundColor="#667788" >
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 15,15,15,15" Padding="0" Margin="0,0,0,0" BackgroundColor="#667788" >
- en: <Image Source="{Binding Bytes, Converter={StaticResource
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: <Image Source="{Binding Bytes, Converter={StaticResource
- en: ToImage}}" Aspect="AspectFill" />
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: ToImage}}" Aspect="AspectFill" />
- en: </Border>
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: </Border>
- en: </DataTemplate>
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: </DataTemplate>
- en: </CarouselView.ItemTemplate>
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: </CarouselView.ItemTemplate>
- en: </CarouselView>
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: </CarouselView>
- en: <IndicatorView Grid.Row="3" x:Name="Indicator" HorizontalOptions="Center" SelectedIndicatorColor="Red"
    IndicatorColor="LightGray" />
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: <IndicatorView Grid.Row="3" x:Name="Indicator" HorizontalOptions="Center" SelectedIndicatorColor="Red"
    IndicatorColor="LightGray" />
- en: </Grid>
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: </Grid>
- en: '[PRE65]'
  id: totrans-500
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
