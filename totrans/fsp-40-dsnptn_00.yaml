- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Following design patterns is a well-known approach to writing better programs
    that captures and reuses the high-level abstractions that are common in many applications.
    This book will encourage you to develop an idiomatic F# coding skillset by fully
    embracing the functional-first F# paradigm. It will also help you harness this
    powerful instrument to write succinct, bug-free, and cross-platform code.
  prefs: []
  type: TYPE_NORMAL
- en: '*F# 4.0 Design Patterns* will start off by helping you develop a functional
    way of thinking. We will show you how beneficial the functional-first paradigm
    is and how to use it to get the optimum results. The book will help you acquire
    the practical knowledge of the main functional design patterns, relationship of
    which with the traditional “Gang of Four” set is not straightforward.'
  prefs: []
  type: TYPE_NORMAL
- en: We will take you through pattern matching, immutable data types, and sequences
    in F#. We will also uncover advanced functional patterns, look at polymorphic
    functions, see typical data crunching techniques, and learn adjusting code through
    augmentation and generalization. Lastly, we take a look at the advanced techniques
    to equip you with everything you may need to write flawless code. In addition,
    we will explore how the paradigm shift to functional-first affects the design
    principles and patterns of the object-oriented universe and wrap up the book with
    specifics of functional code troubleshooting.
  prefs: []
  type: TYPE_NORMAL
- en: 'By reading this book you will achieve the following goals:'
  prefs: []
  type: TYPE_NORMAL
- en: Acquire the practical knowledge to use the main functional design patterns
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Realign some imperative and object-oriented principles under the functional
    approach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Develop your confidence in building and combining first-order and higher-order
    functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn how to use core language pattern matching effectively
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn how to use embedded algebraic data types in place of custom types for
    added effectiveness and code succinctness
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Navigate and use F# core libraries with ease by seeing patterns behind specific
    library functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recognize and measure the difference in resource consumption between sequences
    and materialized data structures
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Master writing generic polymorphic code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](text00015.html#page "Chapter 1. Begin Thinking Functionally") ,
    *Begin Thinking Functionally* , should help you in developing a manner of coding
    usually associated with the functional paradigm. It will equip you with the knowledge,
    the key concepts, and the target list of skills pertinent to the functional-first
    nature of F# programming language.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](text00025.html#ch02 "Chapter 2. Dissecting F# Origins and Design")
    , *Dissecting F# Origins and Design* , will help you to find out the origins of
    F# contemporary design, how F# evolved, and what place it occupies in the .NET
    ecosystem.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](text00030.html#ch03 "Chapter 3.  Basic Functions") , *Basic Functions*
    , helps you to acquire a firm foundation for idiomatic F# use. It gives you 360-degree
    review of the functional paradigm cornerstone, the notion of the function. You
    will be taught how to represent any solution as a assortment of functions plugged
    together with a handful of combinators. This chapter prepares you to absorb the
    main subject-the patterns of F# idiomatic use.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](text00039.html#page "Chapter 4.  Basic Pattern Matching") , *Basic
    Pattern Matching* , gives you a good grasp of the language mechanism that is put
    into at the core of the language to address any data transformations-F# pattern
    matching. The chapter covers basic pattern matching features leaving data decomposition
    and active patterns for the following chapters.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](text00049.html#page "Chapter 5.  Algebraic Data Types") , *Algebraic
    Data Types* , shows you the patterns of using the F# standard algebraic data types
    (tuples, discriminated unions, and records) as a better alternative to developing
    custom types. It covers these types composition, equality, comparison, decomposition,
    and augmentation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](text00053.html#ch06 "Chapter 6.  Sequences - The Core of Data Processing
    Patterns") , *Sequences - The Core of Data Processing Patterns* , acquaints you
    with one of the most essential arrangements of functional programming, the sequences.
    Sequences lay in the foundation of few fundamental functional patterns, such as
    lazy evaluation, sequence generators, and sequences of indefinite lengths. This
    chapter also puts down a blueprint of data transformation patterns taxonomy.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](text00058.html#ch07 "Chapter 7.  Advanced Techniques: Functions
    Revisited") , *Advanced Techniques: Functions Revisited* , builds upon already
    covered patterns of language use in functions, pattern matching, and sequences.
    It introduces readers to such F# patterns as recursion, folding, memoization,
    and continuation passing.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](text00065.html#page "Chapter 8. Data Crunching – Data Transformation
    Patterns") , *Data Crunching - Data Transformation Patterns* , continues to dig
    deeper into the data transformation patterns we began uncovering in relation to
    sequences. You are given a full taxonomy of polymorphic data transformation patterns
    captured by the F# 4.0 core library. Now you are fully prepared to blueprinting
    your designs with the help of highly optimized high quality library function compositions,
    mostly avoiding custom implementations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](text00068.html#ch09 "Chapter 9. More Data Crunching") , *More Data
    Crunching* , adds to the data transformation patterns defined by F# core library
    arrangement data queries with F# query expressions and data parsing with the help
    of type providers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](text00071.html#ch10 "Chapter 10. Type Augmentation and Generic
    Computations") , *Type Augmentation and Generic Computations* , covers two F#
    usage patterns based on opposite type transformations-code generalization and
    code specialization. You will get a demonstration of the benefits that may be
    achieved through the application of these patterns.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](text00074.html#page "Chapter 11. F# Expert Techniques") , *F#
    Expert Techniques* , scratches the surface of really advanced F# patterns. We
    walk through the use of F# type providers, concurrent and reactive programming,
    and wrap up with metaprogramming.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](text00080.html#ch12 "Chapter 12. F# and OOP Principles/Design
    Patterns") , *F# and OOP Principles/Design Patterns* , correlates the book''s
    vision of design patterns with those of the OOP paradigm. We will see that well-known
    OOP design principles and specific patterns may morph, diminish, or literally
    seize to be in the context of functional-first paradigm.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](text00083.html#page "Chapter 13. Troubleshooting Functional Code")
    , *Troubleshooting Functional Code* , represents an important addendum to the
    main subject, showing how to develop following the explorative style, how the
    nature of problems with F# code development significantly shifts into compile-time
    from run-time, and how to address some typical issues.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The most friendly development platform for the readers of this book is Visual
    Studio 2015 because some material, as the book's title indicate, is specific to
    F# v4.0 or above  versions. If you already have Visual Studio 2015 Professional
    or above editions you are ready to go without any extra effort.
  prefs: []
  type: TYPE_NORMAL
- en: Otherwise you may install  free Visual Studio 2015 Community edition from [https://www.visualstudio.com/vs/community/](https://www.visualstudio.com/vs/community/)
    .
  prefs: []
  type: TYPE_NORMAL
- en: 'For other options available for Windows platform please visit fsharp.org at:
    [http://fsharp.org/use/windows/](http://fsharp.org/use/windows/) .'
  prefs: []
  type: TYPE_NORMAL
- en: Somewhat limited set of book's code samples will also work under Linux and Mac.
    For correspondent installations instructions please visit [http://fsharp.org/use/linux/](http://fsharp.org/use/linux/)
    and [http://fsharp.org/use/mac/](http://fsharp.org/use/mac/) .
  prefs: []
  type: TYPE_NORMAL
- en: Requirements to the hardware are dictated by listed above versions of development
    environments.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for web programmers and .NET developers (C# developers and F# developers).
    So, if you have basic experience in F# programming and developing performance-critical
    applications, then this book is for you. For F# absolute beginners the comprehension
    curve would be rather steep, but preceding the book with one or more beginner
    courses from Learning F# ([http://fsharp.org/learn.html](http://fsharp.org/learn.html)
    ) may make it more palatable.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Elements of code such as language keywords, operators, expressions and value
    names are shown as follows: "In order to define recursive function `let` binding
    can be extended with modifier `rec` ", "Literal `"$42"` is bound to value `total`
    "'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: URLs are shown as [https://jet.com](https://jet.com) .
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Clicking the **Next** button moves you to the next screen."'
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book-what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of. To send us general
    feedback, simply e-mail feedback@packtpub.com, and mention the book's title in
    the subject of your message. If there is a topic that you have expertise in and
    you are interested in either writing or contributing to a book, see our author
    guide at [www.packtpub.com/authors](http://www.packtpub.com/authors) .
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com)
    . If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Downloads & Errata** .
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the **Search** box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Download** .
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Fsharp-4.0-Design-Patterns](https://github.com/PacktPublishing/Fsharp-4.0-Design-Patterns)
    . We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)
    . Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books-maybe a mistake in the text
    or the code-we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)
    , selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the **Errata** section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at copyright@packtpub.com with a link to the suspected pirated
    material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at questions@packtpub.com,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
