- en: '*Chapter 6*: Adding and Working with the ink-Unity Integration Plugin'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 6 章*：添加和使用 ink-Unity Integration 插件'
- en: This chapter begins with discussing how to add the `.ink`, and their compiled
    forms, `.json`, within a Unity project and its Project window. Then, we will review
    how to associate Inky with ink source files and use it to edit files directly
    from Unity. Finally, we will conclude by examining how to adjust the plugin's
    settings for a project.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章首先讨论如何在 Unity 项目及其项目窗口中添加 `.ink` 文件及其编译形式 `.json`。然后，我们将回顾如何将 Inky 与 ink 源文件关联，并使用它直接从
    Unity 编辑文件。最后，我们将通过检查如何调整项目的插件设置来结束本章。
- en: 'In this chapter, we are going to cover the following main topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Adding the ink-Unity Integration plugin
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加 ink-Unity Integration 插件
- en: Working with ink files
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理 ink 文件
- en: Adjusting plugin settings
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整插件设置
- en: In this chapter, we will find, import, and work with the ink-Unity Integration
    plugin. This will allow us to work with ink files and adjust the plugin settings.
    We cannot work with ink files without the plugin, and the steps outlined in this
    chapter will help developers set up the package for later chapters focused on
    working with ink files and the Story API available after installing the plugin.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将查找、导入和使用 ink-Unity Integration 插件。这将使我们能够处理 ink 文件并调整插件设置。没有插件，我们无法处理
    ink 文件，本章中概述的步骤将帮助开发者为后续章节设置包，这些章节将专注于处理 ink 文件和安装插件后可用的 Story API。
- en: Note on Unity versions
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Unity 版本的说明
- en: This chapter has been tested with **Unity 2020.3 (LTS)** and **Unity 2021.1
    (current)**. This chapter also covers *version 1.0.2* of the **ink-Unity Integration**
    plugin. Inkle reports that *version 1.0.2* of the ink-Unity Integration plugin
    is compatible with *2018.4* and later versions of Unity, but only *2020.3 (LTS)*
    and *2021.1 (current)* are recommended.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章已在 **Unity 2020.3 (LTS)** 和 **Unity 2021.1 (当前版本)** 上进行测试。本章还涵盖了 **ink-Unity
    Integration** 插件的 *1.0.2* 版本。Inkle 报告称，ink-Unity Integration 插件的 *1.0.2* 版本与 Unity
    的 *2018.4* 及更高版本兼容，但推荐使用的是 *2020.3 (LTS)* 和 *2021.1 (当前版本)*。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The examples used in this chapter, in `*.ink` files, can be found online on
    GitHub: [https://github.com/PacktPublishing/Dynamic-Story-Scripting-with-the-ink-Scripting-Language/tree/main/Chapter6](https://github.com/PacktPublishing/Dynamic-Story-Scripting-with-the-ink-Scripting-Language/tree/main/Chapter6).'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中使用的示例，在 `*.ink` 文件中，可以在 GitHub 上找到：[https://github.com/PacktPublishing/Dynamic-Story-Scripting-with-the-ink-Scripting-Language/tree/main/Chapter6](https://github.com/PacktPublishing/Dynamic-Story-Scripting-with-the-ink-Scripting-Language/tree/main/Chapter6).
- en: Adding the ink-Unity Integration plugin
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加 ink-Unity Integration 插件
- en: We cannot work with Ink files in Unity without a special package called the
    **ink-Unity Integration** plugin. Like other packages for Unity, it can only be
    added to an existing project and must be re-imported for any new project wanting
    to use its code and available API. In this topic, we will work through the steps
    required to find, import, and verify the plugin is ready for use in a project.
    Each section in this topic should be used with the same project as the first section,
    *Finding and importing the plugin*, beginning with instructions to create a new
    Unity project based on the 2D template.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 没有特殊的包，即 ink-Unity Integration 插件，我们无法在 Unity 中处理 Ink 文件。像其他 Unity 包一样，它只能添加到现有项目中，并且必须重新导入以供任何想要使用其代码和可用
    API 的新项目使用。在本主题中，我们将介绍查找、导入和验证插件是否已准备好在项目中使用的步骤。本主题中的每个部分都应与第一个部分，即 *查找和导入插件*，使用相同的项目，从基于
    2D 模板创建新 Unity 项目的说明开始。
- en: Note
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The official name of the package is ink-Unity Integration. However, Inkle, the
    creators of ink, call this package a *plugin* in its own documentation. This book
    follows the same naming convention to avoid confusion.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 该包的官方名称是 ink-Unity Integration。然而，ink 的创造者 Inkle 在其自己的文档中称这个包为 *插件*。本书遵循相同的命名约定以避免混淆。
- en: Finding and importing the plugin
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查找和导入插件
- en: 'The process for finding and importing the ink-Unity Integration plugin requires
    the following steps:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 查找和导入 ink-Unity Integration 插件的过程需要以下步骤：
- en: Create a new Unity project using the built-in 2D template.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用内置的 2D 模板创建一个新的 Unity 项目。
- en: Warning
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告
- en: '**Inkle** does not recommend using the Unity Asset Store version of the ink-Unity
    Integration plugin because of the delays between updates. This book will use the
    installation method recommended by the developers of the plugin to get the most
    up-to-date version.'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**Inkle** 不建议使用 Unity Asset Store 版本的 ink-Unity Integration 插件，因为更新之间存在延迟。本书将使用插件开发者推荐的安装方法来获取最新版本。'
- en: 'Navigate to the **OpenUPM** page for the ink-Unity Integration plugin: [https://openupm.com/packages/com.inklestudios.ink-unity-integration/](https://openupm.com/packages/com.inklestudios.ink-unity-integration/).'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 ink-Unity 集成插件的**OpenUPM**页面：[https://openupm.com/packages/com.inklestudios.ink-unity-integration/](https://openupm.com/packages/com.inklestudios.ink-unity-integration/)。
- en: Click on the **Get installer.unitypackage** link on the right-hand side:![Figure
    6.1 – OpenUPM page for the ink-Unity Integration plugin
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击右侧的**获取安装器.unitypackage**链接：![图 6.1 – ink-Unity 集成插件的 OpenUPM 页面
- en: '](img/Figure_6.1_B17597.jpg)'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_6.1_B17597.jpg)'
- en: Figure 6.1 – OpenUPM page for the ink-Unity Integration plugin
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.1 – ink-Unity 集成插件的 OpenUPM 页面
- en: Clicking on the **Get installer.unitypackage** link will prompt a file download.
    Once the download finishes, find the local file and run the installer.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**获取安装器.unitypackage**链接将提示文件下载。下载完成后，找到本地文件并运行安装程序。
- en: Open the downloaded installer file while Unity is open. This will open the **Import
    Unity Package** window in Unity and load the contents of the installer file.![Figure
    6.2 – Import Unity Package window showing ink-Unity Integration
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Unity 打开时打开下载的安装文件。这将打开 Unity 中的**导入 Unity 包**窗口并加载安装文件的 内容。![图 6.2 – 显示 ink-Unity
    集成的导入 Unity 包窗口
- en: '](img/Figure_6.2_B17597.jpg)'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_6.2_B17597.jpg)'
- en: Figure 6.2 – Import Unity Package window showing ink-Unity Integration
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.2 – 显示 ink-Unity 集成的导入 Unity 包窗口
- en: In the **Import Unity Package** window, click on **All** and then **Import**.
    This will guarantee all files are selected and imported. Once the importing is
    done, Unity will give a message that a new scoped registry has been added to the
    project.![Figure 6.3 – Importing a scoped registry window in Unity](img/Figure_6.3_B17597.jpg)
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**导入 Unity 包**窗口中，点击**全部**然后**导入**。这将确保所有文件都被选中并导入。一旦导入完成，Unity 将显示一条消息，说明已向项目中添加了一个新的作用域注册表。![图
    6.3 – Unity 中导入作用域注册表的窗口](img/Figure_6.3_B17597.jpg)
- en: Figure 6.3 – Importing a scoped registry window in Unity
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.3 – Unity 中导入作用域注册表的窗口
- en: Click the **Close** button to close the **Importing a scoped registry** window.
    Unity also opened the **Project Settings** window. This can be closed as well.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**关闭**按钮关闭**导入作用域注册表**窗口。Unity 还打开了**项目设置**窗口。这也可以关闭。
- en: As one final step, we will test that the package is installed and ready for
    use. In the next section, we will work with the **Package Manager** window.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最后一步，我们将测试包是否已安装并准备好使用。在下一节中，我们将与**包管理器**窗口一起工作。
- en: Verifying the package is installed
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 验证包是否已安装
- en: Depending on the version of Unity, other packages in use, or developer settings,
    it can sometimes be unclear whether the ink-Unity Integration package has been
    installed and is ready for use.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 根据Unity的版本、使用的其他包或开发者设置，有时可能不清楚 ink-Unity Integration 包是否已安装并准备好使用。
- en: 'To verify the plugin is enabled and ready, follow these steps:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证插件已启用并准备好使用，请按照以下步骤操作：
- en: Open the **Package Manager** window by clicking on **Window** from the **File**
    menu and then click on **Package Manager**:![Figure 6.4 – Window menu with Package
    Manager selected in Unity
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击**文件**菜单中的**窗口**然后点击**包管理器**来打开**包管理器**窗口：![图 6.4 – Unity 中已选中包管理器的窗口菜单
- en: '](img/Figure_6.4_B17597.jpg)'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_6.4_B17597.jpg)'
- en: Figure 6.4 – Window menu with Package Manager selected in Unity
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.4 – Unity 中已选中包管理器的窗口菜单
- en: In the **Package Manager** window, click on the **Packages** drop-down menu
    and make sure **In Project** is selected:![Figure 6.5 – Package Manager with the
    In Project option selected
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**包管理器**窗口中，点击**包**下拉菜单，并确保**在项目中**被选中：![图 6.5 – 包管理器，已选中“在项目中”选项
- en: '](img/Figure_6.5_B17597.jpg)'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_6.5_B17597.jpg)'
- en: Figure 6.5 – Package Manager with the In Project option selected
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.5 – 包管理器，已选中“在项目中”选项
- en: The ink-Unity Integration plugin is ready for usage if it is included in a listing
    of packages currently in use with the project and has a green checkmark next to
    its name indicating it is installed in the current project.![Figure 6.6 – Package
    manager showing the ink Unity Integration package installed
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果ink-Unity集成插件包含在当前项目中正在使用的包列表中，并且其名称旁边有一个绿色的勾选标记表示已安装到当前项目中，则该插件已准备好使用。![img/Figure_6.6_B17597.jpg](img/Figure_6.6_B17597.jpg)
- en: '](img/Figure_6.6_B17597.jpg)'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_6.6_B17597.jpg](img/Figure_6.6_B17597.jpg)'
- en: Figure 6.6 – Package manager showing the ink Unity Integration package installed
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图6.6 – 包管理器显示已安装的ink Unity集成包
- en: After verifying that the ink Unity Integration package is installed, the **Package
    Manager** window can be closed.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在验证ink Unity集成包已安装后，可以关闭**包管理器**窗口。
- en: In the next section, we will move on to working with ink files. After installing
    the ink-Unity Integration Plugin, we will learn how to create ink files, edit
    them, and use the auto-compilation process built into the plugin.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将继续介绍如何处理ink文件。安装ink-Unity集成插件后，我们将学习如何创建ink文件、编辑它们以及使用插件内置的自动编译过程。
- en: Working with ink files
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理ink文件
- en: Unity is only aware of files inside of the folders it watches. To work with
    other files, they must be added as new assets to an existing project. With the
    ink-Unity Integration plugin installed, Unity will watch all new files with the
    `.ink` file type and will automatically compile them for usage in Unity projects
    based on its **Project Settings**. However, the first step is to add these Ink
    source files to an existing Unity project using the plugin.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Unity只了解它所监视的文件夹内的文件。要处理其他文件，必须将它们作为新资产添加到现有项目中。安装ink-Unity集成插件后，Unity将监视所有新的`.ink`文件类型文件，并将自动根据其**项目设置**编译它们以供Unity项目使用。然而，第一步是使用插件将这些Ink源文件添加到现有Unity项目中。
- en: Adding ink source files
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加ink源文件
- en: Files created with Inky are saved with the `.ink` file type. These are *source*
    files for projects. They are the code form of Ink stories. To work with ink in
    Unity, the first step is to create a new `.ink` file.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Inky创建的文件以`.ink`文件类型保存。这些是项目的**源**文件。它们是Ink故事的代码形式。要在Unity中使用ink，第一步是创建一个新的`.ink`文件。
- en: To create a new ink source file in Unity, open an existing project and make
    sure the **Project** window is open. (If not open, it can be re-opened using the
    **Window** menu by clicking on **General** and then **Project**.)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity中创建新的ink源文件，请打开一个现有项目并确保**项目**窗口已打开。（如果未打开，可以通过点击**窗口**菜单中的**通用**然后**项目**来重新打开。）
- en: 'There are often multiple ways of doing the same thing in Unity. This applies
    to creating new files in the **Project** window as well. One way to create new
    ink files is use the **Project** window''s toolbar and the **Create** menu and
    then the **Ink** option. They can also be created by right-clicking in the **Project**
    window and going to the **Create** menu and then down to **Ink**:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity中做同样的事情通常有多种方式。这同样适用于在**项目**窗口中创建新文件。创建新ink文件的一种方法是使用**项目**窗口的工具栏和**创建**菜单，然后选择**Ink**选项。也可以通过在**项目**窗口中右键单击并进入**创建**菜单然后选择**Ink**来创建：
- en: '![Figure 6.7 – Create menu in the Project window](img/Figure_6.7_B17597.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![img/Figure_6.7_B17597.jpg](img/Figure_6.7_B17597.jpg)'
- en: Figure 6.7 – Create menu in the Project window
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.7 – 项目窗口中的创建菜单
- en: The created Ink source file can either be renamed or the default name of `New`
    `Ink` can be accepted by clicking outside of its filename area. Moments after
    being created, the ink-Unity Integration plugin will generate a new file matching
    the name of the created one.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的Ink源文件可以重命名，或者可以通过单击其文件名区域外接受默认名称“新”Ink。在创建后不久，ink-Unity集成插件将生成一个与创建的文件同名的新文件。
- en: '![Figure 6.8 – ink-Unity Integration plugin generated file in Unity Project
    view'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_6.8_B17597.jpg](img/Figure_6.8_B17597.jpg)'
- en: '](img/Figure_6.8_B17597.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_6.8_B17597.jpg](img/Figure_6.8_B17597.jpg)'
- en: Figure 6.8 – ink-Unity Integration plugin generated file in Unity Project view
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.8 – ink-Unity集成插件在Unity项目视图生成的文件
- en: Auto-compilation setting
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 自动编译设置
- en: If Unity does not automatically generate a `.json` file based on the ink source
    file, the auto-compilation setting may be turned off. Consult the *Updating automatic
    re-compilation* section of the *Adjusting plugin settings* topic later in this
    chapter for how to change this setting.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Unity没有根据墨迹源文件自动生成`.json`文件，则可能是自动编译设置被关闭了。请参考本章后面关于“调整插件设置”主题中的“更新自动重新编译”部分，了解如何更改此设置。
- en: Clicking on the generated file will reveal it is a `.json` file. When ink runs
    a story, it runs what it calls a `.ink` file into a compiled `.json` file.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 点击生成的文件将显示它是一个 `.json` 文件。当 ink 运行故事时，它会将其称为 `.ink` 文件的内容编译成 `.json` 文件。
- en: With the ink-Unity Integration plugin installed, a new `.json` file will automatically
    be created for every existing `.ink` file. The plugin will also track changes
    and re-compile the project every time it detects new changes.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 ink-Unity 集成插件后，将为每个现有的 `.ink` 文件自动创建一个新的 `.json` 文件。插件还将跟踪更改，并在检测到新更改时重新编译项目。
- en: Editing source files with Inky
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Inky 编辑源文件
- en: ink source files are best edited using Inky. However, new ink source files are
    often added to a Unity project using its `.ink` files can be associated with Inky
    for editing when open within Unity.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: ink 源文件最好使用 Inky 编辑。然而，新的 ink 源文件通常通过 Unity 项目的 `.ink` 文件添加，这些文件可以在 Unity 内打开时与
    Inky 关联以进行编辑。
- en: Depending on the operating system, the instructions are different. The next
    two sections contain the steps for *Windows (10 and later)* and *macOS (11.1 and
    later)*.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 根据操作系统，说明不同。接下来的两个部分包含 *Windows (10 及以后)* 和 *macOS (11.1 及以后)* 的步骤。
- en: 'Windows: Associating Inky with ink source files'
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows：将 Inky 与 ink 源文件关联
- en: 'To start to associate Inky with all `.ink` files in Windows 10 and later, follow
    these steps:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Windows 10 及以后开始将 Inky 与所有 `.ink` 文件关联，请按照以下步骤操作：
- en: Click on a created file in the **Project** window of Unity. This will open it
    in the **Inspector** view:![Figure 6.9 – Inspector view of an ink source file](img/Figure_6.9_B17597.jpg)
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Unity 的 **项目** 窗口中点击创建的文件。这将将其在 **检查器** 视图中打开：![图 6.9 – ink 源文件的检查器视图](img/Figure_6.9_B17597.jpg)
- en: Figure 6.9 – Inspector view of an ink source file
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.9 – ink 源文件的检查器视图
- en: Click on `.ink` files.![Figure 6.10 – File association prompt in Windows 10](img/Figure_6.10_B17597.jpg)
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `.ink` 文件。![图 6.10 – Windows 10 中的文件关联提示](img/Figure_6.10_B17597.jpg)
- en: Figure 6.10 – File association prompt in Windows 10
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.10 – Windows 10 中的文件关联提示
- en: Click on **More apps** and scroll to the bottom of the listing:![Figure 6.11
    – Program listings in Windows 10
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **更多应用** 并滚动到列表底部：![图 6.11 – Windows 10 中的程序列表
- en: '](img/Figure_6.11_B17597.jpg)'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 6.11 – Windows 10 中的程序列表](img/Figure_6.11_B17597.jpg)'
- en: Figure 6.11 – Program listings in Windows 10
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.11 – Windows 10 中的程序列表
- en: Click on `Inky.exe` file is found and select it:![Figure 6.12 – Application
    chooser in Windows 10](img/Figure_6.12_B17597.jpg)
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击找到的 `Inky.exe` 文件并选择它：![图 6.12 – Windows 10 中的应用程序选择器](img/Figure_6.12_B17597.jpg)
- en: Figure 6.12 – Application chooser in Windows 10
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.12 – Windows 10 中的应用程序选择器
- en: Click `.ink` files. After a few moments, Windows will then open the `.ink` file
    found in the **Project** window of Unity in Inky.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `.ink` 文件。几秒钟后，Windows 将在 Inky 中打开 Unity 的 **项目** 窗口中找到的 `.ink` 文件。
- en: Moving forward, assuming the `Inky.exe` file is not deleted, Unity will redirect
    all file opening actions for `.ink` files to Inky.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 今后，假设 `Inky.exe` 文件未被删除，Unity 将将所有 `.ink` 文件的打开操作重定向到 Inky。
- en: 'macOS: Associating Inky with ink source files'
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: macOS：将 Inky 与 ink 源文件关联
- en: 'To start to associate Inky with all `.ink` files in macOS (11.1 and later),
    follow these steps:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 macOS (11.1 及以后) 中开始将 Inky 与所有 `.ink` 文件关联，请按照以下步骤操作：
- en: Right-click on a created file in the **Project** window of Unity. Click on **Reveal
    in Finder**:![Figure 6.13 – File context menu for Unity in macOS](img/Figure_6.13_B17597.jpg)
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Unity 的 **项目** 窗口中右键单击创建的文件。点击 **在 Finder 中显示**：![图 6.13 – macOS 中 Unity 的文件上下文菜单](img/Figure_6.13_B17597.jpg)
- en: Figure 6.13 – File context menu for Unity in macOS
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.13 – macOS 中 Unity 的文件上下文菜单
- en: After Finder opens, right-click on the file and navigate to **Open With**:![Figure
    6.14 – Open With file context menu in macOS
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Finder 打开后，右键单击文件并导航到 **打开方式**：![图 6.14 – macOS 中的打开方式文件上下文菜单](img/Figure_6.14_B17597.jpg)
- en: '](img/Figure_6.14_B17597.jpg)'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 6.14 – macOS 中的打开方式文件上下文菜单](img/Figure_6.14_B17597.jpg)'
- en: Figure 6.14 – Open With file context menu in macOS
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.14 – macOS 中的打开方式文件上下文菜单
- en: If `Inky.app` does not appear, click on **Other…**:![Figure 6.15 – Application
    chooser in macOS
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 `Inky.app` 未出现，点击 **其他…**：![图 6.15 – macOS 中的应用程序选择器](img/Figure_6.15_B17597.jpg)
- en: '](img/Figure_6.15_B17597.jpg)'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 6.15 – Windows 10 中的程序选择器](img/Figure_6.15_B17597.jpg)'
- en: Figure 6.15 – Application chooser in macOS
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 6.15 – macOS 中的应用程序选择器
- en: Search for `Inky` in the `Inky.app` from the listing. Click on **Open**.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在列表中搜索 `Inky` 在 `Inky.app` 中。点击 **打开**。
- en: Moving forward, assuming the `Inky.app` file is not deleted, Unity will redirect
    all file opening actions for `.ink` files to Inky.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 今后，假设 `Inky.app` 文件未被删除，Unity 将将所有 `.ink` 文件的打开操作重定向到 Inky。
- en: Updating ink source files
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新 ink 源文件
- en: Once Inky has been associated with ink source files, editing the files becomes
    much easier. Double-clicking on the files in the `.json` files, this means both
    the source and compiled files will always be up to date.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Inky与墨迹源文件关联，编辑文件就会变得容易得多。双击`.json`文件中的文件，这意味着源文件和编译文件将始终是最新的。
- en: To see this process in action, double-click on the created ink file from the
    `Adding Ink source files` section to open it in Inky.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看此过程实际操作，请双击“添加墨迹源文件”部分中创建的墨迹文件，以在Inky中打开它。
- en: 'Change its contents to the following `Example 1`:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其内容更改为以下`示例1`：
- en: '[PRE0]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Save the file in Inky by clicking on `.json` file. The **Console** window will
    also show when this process started and was completed.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击`.json`文件保存文件在Inky中。**控制台**窗口也会显示此过程何时开始和完成。
- en: '![Figure 6.16 – Console window showing ink compilation messages'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.16 – 显示墨迹编译信息的控制台窗口'
- en: '](img/Figure_6.16_B17597.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_6.16_B17597.jpg)'
- en: Figure 6.16 – Console window showing ink compilation messages
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.16 – 显示墨迹编译信息的控制台窗口
- en: With Inky associated with `.ink` files and the ink-Unity Integration plugin
    installed in a Unity project, new Ink source files can be added to a Unity project
    and then edited with Inky. Every time they are saved, the ink-Unity Integration
    plugin will re-compile them based on its **Project Settings**. Updating ink source
    files becomes as easy as adding them to a Unity project and then editing them
    in Inky.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity项目中安装了ink-Unity集成插件并与.ink文件关联的Inky，可以将新的墨迹源文件添加到Unity项目中，然后使用Inky进行编辑。每次保存时，ink-Unity集成插件将根据其**项目设置**重新编译它们。更新墨迹源文件变得像将它们添加到Unity项目并在Inky中编辑它们一样简单。
- en: With the ink-Unity Integration plugin ready, we move ahead in the next section
    to examining its settings and how to update the auto-compilation functionality.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在ink-Unity集成插件准备就绪后，我们将在下一节中检查其设置以及如何更新自动编译功能。
- en: Adjusting plugin settings
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整插件设置
- en: The ink-Unity Integration plugin comes with multiple settings that can be changed
    depending on the needs of the Unity project. This topic will review how to find
    the **Project Settings** window and update a common option – automatic re-compilation.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: ink-Unity集成插件包含多个可以根据Unity项目的需求进行更改的设置。本主题将回顾如何找到**项目设置**窗口并更新一个常见选项 – 自动重新编译。
- en: Finding ink-Unity Integration settings
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查找ink-Unity集成设置
- en: 'The Ink-Unity Integration plugin comes with default settings. These can be
    changed by editing them as part of **Project Settings**:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Ink-Unity集成插件包含默认设置。这些可以通过作为**项目设置**的一部分进行编辑来更改：
- en: Click on Edit and then **Project Settings**:![Figure 6.17 – Edit menu with Project
    Settings… selected](img/Figure_6.17_B17597.jpg)
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“编辑”然后**项目设置**：![图6.17 – 已选择项目设置的编辑菜单](img/Figure_6.17_B17597.jpg)
- en: Figure 6.17 – Edit menu with Project Settings… selected
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图6.17 – 已选择项目设置的编辑菜单
- en: Click on **Ink** from the sidebar options to see the related settings for the
    project.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从侧边栏选项中点击**墨迹**以查看项目的相关设置。
- en: '![Figure 6.18 – Ink Project Settings in Unity'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.18 – Unity中的墨迹项目设置'
- en: '](img/Figure_6.18_B17597.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_6.18_B17597.jpg)'
- en: Figure 6.18 – Ink Project Settings in Unity
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.18 – Unity中的墨迹项目设置
- en: In the next section, we will use the **Project Settings** window to update a
    common setting, the automatic re-compilation of ink source files.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将使用**项目设置**窗口来更新一个常见设置，即墨迹源文件的自动重新编译。
- en: Updating automatic re-compilation
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新自动重新编译
- en: If a project has a large ink source file or many different smaller files each
    using the `INCLUDE` keyword in ink, the compilation process might take more than
    a few seconds each time files are changed. In these contexts, turning off the
    re-compilation of ink source files might prevent the ink-Unity Integration plugin
    from wasting time re-compiling the ink source files.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果项目有一个大的墨迹源文件或者许多不同的较小文件，每个文件都使用ink中的`INCLUDE`关键字，那么每次文件更改时编译过程可能需要超过几秒钟。在这些情况下，关闭墨迹源文件的重新编译可能防止ink-Unity集成插件浪费时间重新编译墨迹源文件。
- en: In the **Project Settings** window, click on **Ink**:![Figure 6.19 – Ink Project
    Settings in Unity
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**项目设置**窗口中，点击**墨迹**：![图6.19 – Unity中的墨迹项目设置
- en: '](img/Figure_6.19_B17597.jpg)'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_6.19_B17597.jpg)'
- en: Figure 6.19 – Ink Project Settings in Unity
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图6.19 – Unity中的墨迹项目设置
- en: Click on the checkbox next to **Compile All Ink Automatically** to disable the
    automatic compilation process. (This can be re-enabled by clicking on the checkbox
    again later.)
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**自动编译所有墨迹**旁边的复选框以禁用自动编译过程。（稍后可以通过再次点击复选框来重新启用。）
- en: In this topic, we examined the Ink **Project Settings** window and updated the
    auto-compilation option. Depending on the size of the ink source and other factors,
    the compilation process can sometimes take too long between changes. Updating
    the automatic compilation of ink sources files can often be a very useful setting
    to be aware of and update, depending on the project.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个主题中，我们检查了Ink **项目设置**窗口并更新了自动编译选项。根据ink源文件的大小和其他因素，编译过程有时在更改之间可能需要太长时间。更新ink源文件的自动编译通常是一个非常有用的设置，需要了解并更新，具体取决于项目。
- en: Summary
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to find the ink-Unity Integration plugin online
    as part of the first topic. We reviewed how to import the package and then verify
    it was installed. This is an important step for all projects using the plugin,
    as it must be re-imported for any new project.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们作为第一个主题的一部分学习了如何在网络上找到ink-Unity集成插件。我们回顾了如何导入包以及验证它已被安装。这对于所有使用该插件的项目来说是一个重要步骤，因为对于任何新项目都必须重新导入。
- en: In the second topic, *Working with ink files*, we looked at how to create new
    ink files in Unity. We examined how to associate Inky with ink source files in
    both Windows 10 and macOS. We then learned how to edit ink files and how the ink-Unity
    Integration plugin will detect any changes and recreate the compiled JSON file
    if the option is enabled in the **Project Settings**.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个主题“与ink文件一起工作”中，我们探讨了如何在Unity中创建新的ink文件。我们检查了如何在Windows 10和macOS中将Inky与ink源文件关联起来。然后我们学习了如何编辑ink文件以及ink-Unity集成插件将如何检测任何更改，如果启用了**项目设置**中的选项，它将重新创建编译后的JSON文件。
- en: Finally, in the *Adjusting plugin settings* topic, we looked at the settings
    when using the ink-Unity Integration plugin. We first reviewed how to find the
    **Project Settings** for the plugin by selecting **Ink** from the available options.
    Next, we examined how to adjust the automatic re-compilation of ink files.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在*调整插件设置*主题中，我们检查了使用ink-Unity集成插件时的设置。我们首先回顾了如何通过从可用选项中选择**Ink**来找到插件的**项目设置**。接下来，我们检查了如何调整ink文件的自动重新编译。
- en: In the next chapter, we'll move ahead to use the Ink API to work with a running
    story. The ink-Unity Integration plugin helps to generate the JSON files based
    on the ink source files. We will use the JSON files in the next chapter, and we
    will learn how to load parts of a story as part of a larger Unity project.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将继续使用Ink API来处理运行中的故事。ink-Unity集成插件帮助根据ink源文件生成JSON文件。我们将在下一章中使用这些JSON文件，并学习如何将故事的部分作为更大Unity项目的一部分来加载。
- en: Questions
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Does Inkle recommend using the Unity Asset Store?
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Inkle是否推荐使用Unity Asset Store？
- en: What is at least one way to create an ink file using the ink-Unity Integration
    plugin in Unity?
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用ink-Unity集成插件在Unity中创建ink文件至少有一种方法吗？
- en: What program is a good choice for editing ink files?
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个程序是编辑ink文件的不错选择？
- en: Can the auto-compilation process of the ink-Unity Integration plugin be changed?
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ink-Unity集成插件的自动编译过程可以更改吗？
