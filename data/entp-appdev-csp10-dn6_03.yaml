- en: '*Chapter 2*: Introducing .NET 6 Core and Standard'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第二章*: 介绍 .NET 6 核心和标准'
- en: .NET is a developer platform that offers libraries and tools for building many
    different types of applications, such as web, desktop, mobile, games, **Internet
    of Things** (**IoT**), and cloud applications. Using .NET, we can develop applications
    targeting many operating systems, including Windows, macOS, Linux, Android, iOS,
    and so on, and it supports processor architectures such as x86, x64, ARM32, and
    ARM64.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: .NET 是一个开发者平台，它提供了用于构建多种不同类型应用程序的库和工具，例如 Web、桌面、移动、游戏、**物联网**（**IoT**）和云应用程序。使用
    .NET，我们可以开发针对许多操作系统的应用程序，包括 Windows、macOS、Linux、Android、iOS 等，并且它支持 x86、x64、ARM32
    和 ARM64 等处理器架构。
- en: .NET also supports application development using multiple programming languages,
    such as C#, Visual Basic, and F#, using popular **integrated development environments**
    (**IDEs**) such as Visual Studio, Visual Studio Code, and Visual Studio for Mac.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: .NET 还支持使用多种编程语言进行应用程序开发，例如 C#、Visual Basic 和 F#，使用流行的 **集成开发环境**（**IDE**）如
    Visual Studio、Visual Studio Code 和 Visual Studio for Mac。
- en: After .NET 5, .NET 6 is now a major release that includes C# 10 and F# 6, adds
    many language features, and includes many performance improvements.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在 .NET 5 之后，.NET 6 现在是一个主要版本，包括 C# 10 和 F# 6，添加了许多语言特性，并包含了许多性能改进。
- en: 'The following topics are covered in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了以下主题：
- en: Introducing .NET 6
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 .NET 6
- en: Understanding the core components of .NET 6
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 .NET 6 的核心组件
- en: Setting up the development environment
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置开发环境
- en: Understanding the CLI
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 CLI
- en: What is .NET Standard?
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 .NET 标准？
- en: Understanding .NET 6 cross-platform and cloud application support
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 .NET 6 的跨平台和云应用程序支持
- en: This chapter will help us understand a few core components, libraries, and tools
    that are included in .NET for developing the applications.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将帮助我们了解包含在 .NET 中用于开发应用程序的一些核心组件、库和工具。
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: A Windows, Linux, or Mac machine is required and install the respective SDK
    from [https://dotnet.microsoft.com/download/dotnet/6.0](https://dotnet.microsoft.com/download/dotnet/6.0).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 需要一台 Windows、Linux 或 Mac 机器，并从 [https://dotnet.microsoft.com/download/dotnet/6.0](https://dotnet.microsoft.com/download/dotnet/6.0)
    安装相应的 SDK。
- en: Introducing .NET 6
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 .NET 6
- en: In 2002, Microsoft released the first version of .NET Framework, a development
    platform to develop web and desktop applications. .NET Framework offers many services,
    including managed code execution, a vast set of APIs via a base class library,
    memory management, a common type system, language interoperability, and development
    frameworks such as ADO.NET, ASP.NET, WCF, WinForms, and **Windows Presentation
    Framework** (**WPF**). Initially, it was released as a separate installer, but
    it was later integrated and shipped with the Windows operating system. .NET Framework
    4.8 is the latest version of .NET Framework.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 2002 年，Microsoft 发布了第一个版本的 .NET Framework，这是一个用于开发 Web 和桌面应用程序的开发平台。.NET Framework
    提供了许多服务，包括托管代码执行、通过基类库提供的大量 API、内存管理、公共类型系统、语言互操作性以及 ADO.NET、ASP.NET、WCF、WinForms
    和 **Windows 表现框架**（**WPF**）等开发框架。最初，它作为一个单独的安装程序发布，但后来被集成并随 Windows 操作系统一起发货。.NET
    Framework 4.8 是 .NET Framework 的最新版本。
- en: In 2014, Microsoft announced an open source, cross-platform implementation of
    .NET called **.NET Core**. .NET Core was built from scratch to make it cross-platform
    and it is currently available on Linux, macOS, and Windows. .NET Core is fast
    and modular and offers support side by side so that we can run different versions
    of .NET Core on the same machine without affecting other applications.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 2014 年，Microsoft 宣布了一个名为 **.NET Core** 的开源、跨平台的 .NET 实现。.NET Core 是从头开始构建的，使其成为跨平台，目前可在
    Linux、macOS 和 Windows 上使用。.NET Core 快速且模块化，提供侧边支持，这样我们就可以在同一台机器上运行不同版本的 .NET Core，而不会影响其他应用程序。
- en: .NET 6 is an open source, cross-platform implementation of .NET with which you
    can build applications that can run on Windows, macOS, and Linux operating systems.
    With .NET 6, Microsoft's unified platform to develop browser, cloud, desktop,
    IoT, and mobile applications in order to use the same .NET libraries and share
    code easily.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: .NET 6 是一个开源、跨平台的 .NET 实现，您可以使用它构建可在 Windows、macOS 和 Linux 操作系统上运行的应用程序。使用 .NET
    6，您可以构建 Microsoft 统一的平台，用于开发浏览器、云、桌面、物联网和移动应用程序，以便使用相同的 .NET 库并轻松共享代码。
- en: To learn more about new features in .NET 6, you can visit [https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-6](https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-6).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解 .NET 6 中的新功能，请访问 [https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-6](https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-6)。
- en: Note
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: .NET 6 is a **long-term support** (**LTS**) release; it is supported for 3 years
    from the generally available date. It is recommended to migrate, particularly
    .NET 5 apps to .NET 6\. For more details, you can visit [https://dotnet.microsoft.com/en-us/platform/support/policy/dotnet-core](https://dotnet.microsoft.com/en-us/platform/support/policy/dotnet-core).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: .NET 6 是一个 **长期支持** (**LTS**) 版本；从一般可用日期起支持 3 年。建议迁移，尤其是将 .NET 5 应用迁移到 .NET
    6。更多详情，请访问 [https://dotnet.microsoft.com/en-us/platform/support/policy/dotnet-core](https://dotnet.microsoft.com/en-us/platform/support/policy/dotnet-core)。
- en: Next, let's understand the core features of .NET.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们了解 .NET 的核心特性。
- en: Understanding the core features
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解核心特性
- en: 'The following are a couple of the core features of .NET that we will understand
    more in depth:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些 .NET 的核心特性，我们将更深入地了解：
- en: '**Open source**: .NET is a free (with no licensing costs, including for commercial
    use) and open source developer platform that offers many development tools for
    Linux, macOS, and Windows. Its source code is maintained by Microsoft and the
    .NET community on GitHub. You can access the .NET repositories at [https://github.com/dotnet/core/blob/master/Documentation/core-repos.md](https://github.com/dotnet/core/blob/master/Documentation/core-repos.md).'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开源**：.NET 是一个免费（包括商业用途在内无许可费用）且开源的开发者平台，为 Linux、macOS 和 Windows 提供了许多开发工具。其源代码由微软和
    .NET 社区在 GitHub 上维护。您可以在 [https://github.com/dotnet/core/blob/master/Documentation/core-repos.md](https://github.com/dotnet/core/blob/master/Documentation/core-repos.md)
    访问 .NET 仓库。'
- en: '**Cross-platform**: .NET applications run on many operating systems, including
    Linux, macOS, Android, iOS, tvOS, watchOS, and Windows. They also run consistently
    across processor architectures, such as x86, x64, ARM32, and ARM64.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**跨平台**：.NET 应用程序可以在许多操作系统上运行，包括 Linux、macOS、Android、iOS、tvOS、watchOS 和 Windows。它们也可以在多种处理器架构上保持一致运行，例如
    x86、x64、ARM32 和 ARM64。'
- en: 'With .NET, we can build the following types of applications:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 .NET，我们可以构建以下类型的应用程序：
- en: '![Table 2.1 – Application types'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![Table 2.1 – Application types]'
- en: '](img/Table_2.1.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '![Table_2.1.jpg]'
- en: Table 2.1 – Application types
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 表 2.1 – 应用程序类型
- en: '**Programming languages**: .NET supports multiple programming languages. Code
    written in one language is accessible in other languages. The following table
    shows the supported languages:'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编程语言**：.NET 支持多种编程语言。用一种语言编写的代码在其他语言中也是可访问的。以下表格显示了支持的语言：'
- en: '![Table 2.2 – Supported Languages'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![Table 2.2 – Supported Languages]'
- en: '](img/Table_2.2.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![Table_2.2.jpg]'
- en: Table 2.2 – Supported Languages
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 表 2.2 – 支持的语言
- en: '**IDEs**: .NET supports multiple IDEs. Let''s understand each one:'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IDE**：.NET 支持多个 IDE。让我们了解每一个：'
- en: 'a. **Visual Studio** is a feature-rich IDE available on the Windows platform
    to build, debug, and publish .NET applications. It is available in three editions:
    Community, Professional, and Enterprise. Visual Studio 2022 Community Edition
    is free for students, individual developers, and organizations contributing to
    open source projects.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: a. **Visual Studio** 是一个功能丰富的 IDE，可在 Windows 平台上用于构建、调试和发布 .NET 应用程序。它有三个版本：社区版、专业版和企业版。Visual
    Studio 2022 社区版对学生、个人开发者和为开源项目做出贡献的组织是免费的。
- en: b. **Visual Studio for Mac** is free and available for macOS. It can be used
    to develop cross-platform applications and games for iOS, Android, and the web
    using .NET.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: b. **Visual Studio for Mac** 是免费的，并且适用于 macOS。它可以用来使用 .NET 开发跨平台的应用程序和游戏，适用于
    iOS、Android 和网页。
- en: c. **Visual Studio Code** is a free, open source, lightweight yet powerful code
    editor available on Windows, macOS, and Linux. It has built-in support for JavaScript,
    TypeScript, and Node.js and, with extensions, you can add support for many popular
    programming languages.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: c. **Visual Studio Code** 是一个免费、开源、轻量级但功能强大的代码编辑器，可在 Windows、macOS 和 Linux 上使用。它内置了对
    JavaScript、TypeScript 和 Node.js 的支持，并且通过扩展，您可以添加对许多流行编程语言的支持。
- en: d. **Codespaces** is a cloud development environment powered by Visual Studio
    Code and hosted by GitHub to develop .NET applications.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: d. **Codespaces** 是一个由 Visual Studio Code 驱动并由 GitHub 托管的云开发环境，用于开发 .NET 应用程序。
- en: '**Deployment models**: .NET supports two modes of deployment:'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署模型**：.NET 支持两种部署模式：'
- en: 'a. **Self-contained**: When a .NET application is published in self-contained
    mode, the published artifact contains the .NET runtime, libraries, and the application
    and its dependencies. Self-contained applications are platform-specific, and the
    target machine need not have the .NET runtime installed. The machine uses the
    .NET runtime shipped along with the application to run the application.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: a. **自包含**：当.NET应用程序以自包含模式发布时，发布的工件包含.NET运行时、库以及应用程序及其依赖项。自包含应用程序是特定平台的，目标机器不需要安装.NET运行时。机器使用与应用程序一起提供的.NET运行时来运行应用程序。
- en: 'b. **Framework-dependent**: When a .NET application is published in framework-dependent
    mode, the published artifact contains only the application and its dependencies.
    The .NET runtime must be installed on the target machine to run the application.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: b. **框架依赖**：当.NET应用程序以框架依赖模式发布时，发布的工件仅包含应用程序及其依赖项。必须在目标机器上安装.NET运行时才能运行应用程序。
- en: Next, let's understand the application frameworks offered by .NET.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们了解.NET提供的应用程序框架。
- en: Understanding application frameworks
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解应用程序框架
- en: '.NET simplifies application development by offering many application frameworks.
    Each application framework contains a set of libraries to develop targeted applications.
    Let''s understand each in detail:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: .NET通过提供许多应用程序框架简化了应用程序开发。每个应用程序框架都包含一组用于开发特定应用程序的库。让我们详细了解每个框架：
- en: '**ASP.NET Core**: This is an open source and cross-platform application development
    framework that lets you build modern, cloud-based, internet-connected applications,
    such as web, IoT, and API applications. ASP.NET Core is built on top of .NET Core,
    hence you can build and run across platforms, such as Linux, macOS, and Windows.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ASP.NET Core**：这是一个开源且跨平台的应用程序开发框架，允许您构建现代、基于云、互联网连接的应用程序，例如Web、IoT和API应用程序。ASP.NET
    Core建立在.NET Core之上，因此您可以在Linux、macOS和Windows等平台上构建和运行。'
- en: '**Blazor**: This is an application framework to build interactive client-side
    web UI using C# instead of JavaScript. Blazor applications can re-use code and
    libraries from the server side and run in the browser using WebAssembly or handle
    Client UI events on the server using SignalR.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Blazor**：这是一个应用程序框架，使用C#而不是JavaScript构建交互式客户端Web UI。Blazor应用程序可以重用服务器端的代码和库，并在浏览器中使用WebAssembly运行，或者使用SignalR在服务器上处理客户端UI事件。'
- en: '**WPF**: This is a UI framework that lets you create desktop applications for
    Windows. WPF uses **Extensible Application Markup Language** (**XAML**), a declarative
    model for application development.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WPF**：这是一个UI框架，允许您为Windows创建桌面应用程序。WPF使用**可扩展应用程序标记语言**（**XAML**），这是一种用于应用程序开发的声明性模型。'
- en: '**Entity Framework** (**EF**) Core: This is an open source, cross-platform,
    lightweight, **object-relational mapping** (**ORM**) framework to work with databases
    using .NET objects. It supports LINQ queries, changes tracking, and schema migrations.
    It works with popular databases, such as SQL Server, SQL Azure, SQLite, Azure
    Cosmos DB, MySQL, and many more.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Entity Framework**（**EF**）Core：这是一个开源、跨平台、轻量级的**对象关系映射**（**ORM**）框架，用于使用.NET对象与数据库交互。它支持LINQ查询、更改跟踪和模式迁移。它支持SQL
    Server、SQL Azure、SQLite、Azure Cosmos DB、MySQL等流行数据库。'
- en: '**Language-Integrated Query** (**LINQ**): This adds query capabilities to .NET
    programming languages. LINQ allows you to query data from a database, XML, in-memory
    arrays, and collections with the same API.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语言集成查询**（**LINQ**）：这为.NET编程语言添加了查询功能。LINQ允许您使用相同的API从数据库、XML、内存中的数组以及集合中查询数据。'
- en: '**.NET MAUI**: The .NET Multi-platform App UI is a cross-platform framework
    to create native mobile and desktop applications using C# and XAML. Using .NET
    MAUI, you can develop applications targeting Android, iOS, macOS, and Windows
    using the same code base.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**.NET MAUI**：.NET多平台应用程序UI是一个跨平台框架，使用C#和XAML创建原生移动和桌面应用程序。使用.NET MAUI，您可以使用相同的代码库开发针对Android、iOS、macOS和Windows的应用程序。'
- en: Note
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: .NET MAUI is currently in preview, and is not recommended for production use.
    For more information, you can refer to [https://docs.microsoft.com/en-us/dotnet/maui/what-is-maui](https://docs.microsoft.com/en-us/dotnet/maui/what-is-maui).
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .NET MAUI目前处于预览阶段，不建议用于生产环境。有关更多信息，您可以参考[https://docs.microsoft.com/en-us/dotnet/maui/what-is-maui](https://docs.microsoft.com/en-us/dotnet/maui/what-is-maui)。
- en: In the next section, let's understand the core components of .NET.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，让我们了解.NET的核心组件。
- en: Understanding the core components of .NET
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解.NET的核心组件
- en: '.NET has two major components: a runtime and base class libraries. The runtime
    includes a **garbage collector** (**GC**) and the **just-in-time** (**JIT**) compiler,
    which manages the execution of .NET applications and **base class libraries**
    (**BCLs**), also known as **runtime libraries** or **framework libraries**, which
    contain the fundamental building blocks for .NET applications.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: .NET 有两个主要组件：运行时和基础类库。运行时包括垃圾回收器（**GC**）和即时编译器（**JIT**），它管理 .NET 应用程序的执行以及基础类库（**BCLs**），也称为运行时库或框架库，它们包含
    .NET 应用程序的基本构建块。
- en: The .NET SDK is available for download at [https://dotnet.microsoft.com/download/dotnet/6.0](https://dotnet.microsoft.com/download/dotnet/6.0).
    It contains a set of libraries and tools to develop and run .NET applications.
    You can choose to install either the SDK or the .NET runtime. To develop .NET
    applications, you should install the SDK on the development machine and the .NET
    runtime to run .NET applications. The .NET runtime is included in the .NET SDK,
    hence you don't have to install the .NET runtime separately if you have already
    installed the .NET SDK.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: .NET SDK 可在 [https://dotnet.microsoft.com/download/dotnet/6.0](https://dotnet.microsoft.com/download/dotnet/6.0)
    下载。它包含一组用于开发和运行 .NET 应用程序的库和工具。您可以选择安装 SDK 或 .NET 运行时。要开发 .NET 应用程序，您应该在开发机上安装
    SDK，并安装 .NET 运行时来运行 .NET 应用程序。.NET 运行时包含在 .NET SDK 中，因此如果您已经安装了 .NET SDK，则无需单独安装
    .NET 运行时。
- en: '![Figure 2.1 – Visualization of the .NET SDK'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.1 – .NET SDK 的可视化'
- en: '](img/Figure_2.1_B18507.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 2.1](img/Figure_2.1_B18507.jpg)'
- en: Figure 2.1 – Visualization of the .NET SDK
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – .NET SDK 的可视化
- en: 'The .NET SDK contains the following components:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: .NET SDK 包含以下组件：
- en: '**Common Language Runtime** (**CLR**): CLR executes the code and manages memory
    allocation. .NET applications, when compiled, produce an **intermediate language**
    (**IL**). CLR uses a JIT compiler to convert compiled code to machine code. It
    is a cross-platform runtime that is available for Windows, Linux, and macOS.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公共语言运行时（CLR**）：CLR 执行代码并管理内存分配。当 .NET 应用程序编译时，它产生一个中间语言（**IL**）。CLR 使用 JIT
    编译器将编译后的代码转换为处理器能理解的机器代码。它是一个跨平台的运行时，可在 Windows、Linux 和 macOS 上使用。'
- en: '**Memory management**: The GC manages the allocation and release of memory
    for .NET applications. For every new object created, memory is allocated in the
    managed heap and when there is not enough free space available, GC checks for
    objects in the managed heap and removes them if they are no longer used in the
    application. For more information, you can refer to [https://docs.microsoft.com/en-us/dotnet/standard/garbage-collection](https://docs.microsoft.com/en-us/dotnet/standard/garbage-collection).'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内存管理**：GC 管理 .NET 应用程序的内存分配和释放。对于每个新创建的对象，内存都在托管堆中分配，当没有足够的可用空间时，GC 会检查托管堆中的对象，并在它们不再在应用程序中使用时移除它们。有关更多信息，您可以参考
    [https://docs.microsoft.com/en-us/dotnet/standard/garbage-collection](https://docs.microsoft.com/en-us/dotnet/standard/garbage-collection)。 '
- en: '**JIT**: When .NET code is compiled, it is converted to IL. IL is platform-
    and language-independent, so when the runtime runs the application, JIT converts
    IL into machine code that the processor understands.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**JIT**：当 .NET 代码编译时，它被转换为 IL。IL 是平台和语言无关的，因此当运行时运行应用程序时，JIT 将 IL 转换为处理器能理解的机器代码。'
- en: '**Common type system**: This defines how types are defined, used, and managed
    in CLR. It enables cross-language integrations and ensures type safety.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公共类型系统**：它定义了在 CLR 中如何定义、使用和管理类型。它使跨语言集成成为可能，并确保类型安全。'
- en: '`System.String` and `System.Boolean`, collections such as `List<T>` and `Dictionary<Tkey,
    Tvalue>`, and utility functions to perform I/O operations, HTTP, serialization,
    and many more. It simplifies .NET application development.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`System.String` 和 `System.Boolean`，如 `List<T>` 和 `Dictionary<Tkey, Tvalue>`
    这样的集合，以及执行 I/O 操作、HTTP、序列化等实用函数。它简化了 .NET 应用程序的开发。'
- en: '**Roslyn compilers**: Roslyn is an open source C# and Visual Basic compiler
    with rich code analysis APIs. It enables building code analysis tools with the
    same API used by Visual Studio.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Roslyn 编译器**：Roslyn 是一个开源的 C# 和 Visual Basic 编译器，具有丰富的代码分析 API。它允许使用与 Visual
    Studio 相同的 API 构建代码分析工具。'
- en: '**MSBuild**: This is a tool to build .NET applications. Visual Studio uses
    MSBuild to build .NET applications.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MSBuild**：这是一个用于构建 .NET 应用程序的工具。Visual Studio 使用 MSBuild 构建 .NET 应用程序。'
- en: '**NuGet**: This is an open source package manager tool with which you can create,
    publish, and reuse code. A NuGet package contains compiled code, its dependent
    files, and a manifest that includes package version number information.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NuGet**：这是一个开源的包管理工具，您可以使用它创建、发布和重用代码。NuGet 包包含编译后的代码、其依赖文件以及包含包版本号信息的清单。'
- en: In the next section, let's understand how to set up the development environment
    to create and run .NET applications.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，让我们了解如何设置开发环境以创建和运行 .NET 应用程序。
- en: Setting up the development environment
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置开发环境
- en: 'Setting up a development environment is very easy. You will need the .NET SDK
    to build and run .NET applications. Optionally, you can choose to install IDEs
    that support .NET application development. You need to perform the following steps
    to set up the .NET SDK on your machine:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 设置开发环境非常简单。您需要 .NET SDK 来构建和运行 .NET 应用程序。可选地，您可以选择安装支持 .NET 应用程序开发的 IDE。您需要执行以下步骤来在您的机器上设置
    .NET SDK：
- en: Note
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: .NET 6 is supported by Visual Studio 2022 and Visual Studio 2022 for Mac. It
    is not supported on earlier versions of Visual Studio. Visual Studio Community
    Edition is free for individual developers, classroom learning, and for unlimited
    users in organizations contributing to research or open source projects. It offers
    the same features as Professional Edition, but for advanced features such as advanced
    debugging and diagnostics tools, testing tools, and more, you need to have Enterprise
    Edition. To compare features, you can visit [https://visualstudio.microsoft.com/vs/compare](https://visualstudio.microsoft.com/vs/compare).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: .NET 6 由 Visual Studio 2022 和 Visual Studio 2022 for Mac 支持。它不支持在更早版本的 Visual
    Studio 上运行。Visual Studio Community Edition 对个人开发者、课堂学习和在组织内部署研究或开源项目的不限用户是免费的。它提供了与专业版相同的功能，但为了获得高级功能，如高级调试和诊断工具、测试工具等，您需要拥有企业版。要比较功能，您可以访问
    [https://visualstudio.microsoft.com/vs/compare](https://visualstudio.microsoft.com/vs/compare)。
- en: On a Windows machine, download and install Visual Studio 17.0 or later from
    [https://visualstudio.microsoft.com](https://visualstudio.microsoft.com).
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Windows 机器上，从 [https://visualstudio.microsoft.com](https://visualstudio.microsoft.com)
    下载并安装 Visual Studio 17.0 或更高版本。
- en: 'In the installation options, from **Workloads**, you can select ASP.NET and
    web for web/API applications, Azure development, Mobile development with .NET
    for iOS, Android, windows, and .NET desktop development for windows applications,
    as shown in the following screenshot:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装选项中，从 **工作负载**，您可以选择 ASP.NET 和 Web 用于 Web/API 应用程序、Azure 开发、使用 .NET 进行 iOS、Android、Windows
    的移动开发以及用于 Windows 应用程序的 .NET 桌面开发，如下面的截图所示：
- en: '![Figure 2.2 – Visual Studio installation, workload selection'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.2 – Visual Studio 安装，工作负载选择'
- en: '](img/Figure_2.2_B18507.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_2.2_B18507.jpg)'
- en: Figure 2.2 – Visual Studio installation, workload selection
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2 – Visual Studio 安装，工作负载选择
- en: Confirm the selection and proceed to complete the installation. This will install
    Visual Studio and the .NET 6 SDK on your machine.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认选择并继续完成安装。这将安装 Visual Studio 和 .NET 6 SDK 到您的机器上。
- en: Note
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Azure development workload includes SDKs and tools to develop and support applications
    targeting Azure Services. It includes tools for Container development, Azure resource
    manager, Azure Cloud Services, Service Fabric, Azure Data Lake and Stream Analytics,
    Snapshot Debugger, and many more.
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Azure 开发工作负载包括用于开发和支持针对 Azure 服务的应用程序的 SDK 和工具。它包括容器开发、Azure 资源管理器、Azure 云服务、Service
    Fabric、Azure 数据湖和流分析、快照调试器等工具。
- en: 'Alternatively, you can also perform the following steps to set it up:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您也可以执行以下步骤来设置它：
- en: Download and install the .NET 6 SDK for Windows, macOS, and Linux from [https://dotnet.microsoft.com/download/dotnet/6.0](https://dotnet.microsoft.com/download/dotnet/6.0).
    .NET Core supports side-by-side execution, and hence we can install multiple versions
    of .NET Core SDKs on a development machine.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://dotnet.microsoft.com/download/dotnet/6.0](https://dotnet.microsoft.com/download/dotnet/6.0)
    下载并安装 .NET 6 SDK for Windows、macOS 和 Linux。.NET Core 支持并行执行，因此我们可以在开发机上安装多个版本的
    .NET Core SDK。
- en: 'From Command Prompt, run the `dotnet --version` command to verify the installed
    version, as shown in the following screenshot:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令提示符运行 `dotnet --version` 命令以验证安装的版本，如下面的截图所示：
- en: '![Figure 2.3 – Command-line output of the dotnet command'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.3 – dotnet 命令的命令行输出'
- en: '](img/Figure_2.3_B18507.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_2.3_B18507.jpg)'
- en: Figure 2.3 – Command-line output of the dotnet command
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – dotnet 命令的命令行输出
- en: Optionally, you can download and install Visual Studio Code from [https://code.visualstudio.com](https://code.visualstudio.com)
    to use it to develop the .NET application.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可选地，您可以从[https://code.visualstudio.com](https://code.visualstudio.com)下载并安装Visual
    Studio Code，以使用它来开发.NET应用程序。
- en: Now that we understand how to set up a development environment for .NET, in
    the next section, let's understand what the .NET CLI is and how it helps to create,
    build, and run .NET applications from the command line.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了如何设置.NET的开发环境，在下一节中，让我们了解.NET CLI是什么以及它是如何帮助从命令行创建、构建和运行.NET应用程序的。
- en: To set up an e-commerce application, you can refer to [https://github.com/PacktPublishing/Enterprise-Application-Development-with-C-10-and-.NET-6-Second-Edition/blob/main/README.md](https://github.com/PacktPublishing/Enterprise-Application-Development-with-C-10-and-.NET-6-Second-Edition/blob/main/README.md).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置一个电子商务应用程序，您可以参考[https://github.com/PacktPublishing/Enterprise-Application-Development-with-C-10-and-.NET-6-Second-Edition/blob/main/README.md](https://github.com/PacktPublishing/Enterprise-Application-Development-with-C-10-and-.NET-6-Second-Edition/blob/main/README.md)。
- en: Understanding the CLI
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解CLI
- en: The .NET CLI is a cross-platform, command-line interface tool available to develop,
    build, run, and publish .NET applications. It is included in the .NET SDK.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: .NET CLI是一个跨平台的命令行界面工具，可用于开发、构建、运行和发布.NET应用程序。它包含在.NET SDK中。
- en: 'The CLI command structure contains `command driver` (`dotnet`), `command`,
    `command-arguments`, and `options`, and this is a common pattern for most CLI
    operations. Refer to the following command pattern:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: CLI命令结构包含`命令驱动程序`（`dotnet`），`命令`，`命令-参数`和`选项`，这是大多数CLI操作的一个常见模式。请参考以下命令模式：
- en: '[PRE0]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For instance, the following command creates a new console application. `dotnet`
    is the driver, `new` is the command, and `console` is a template name as an argument:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下命令创建一个新的控制台应用程序。`dotnet`是驱动程序，`new`是命令，`console`是一个作为参数的模板名称：
- en: '[PRE1]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following table illustrates a few commands and a short description of the
    commands that are supported by the CLI:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格说明了几个命令以及CLI支持的命令的简要描述：
- en: '![Table 2.3 – CLI commands'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '![表 2.3 – CLI命令'
- en: '](img/Table_2.3.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Table_2.3.jpg)'
- en: Table 2.3 – CLI commands
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 表 2.3 – CLI命令
- en: 'Let''s create a simple console application and run it using the .NET CLI:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个简单的控制台应用程序，并使用.NET CLI运行它：
- en: Note
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To perform the following steps, as a prerequisite, you should have the .NET
    SDK installed on your machine. You can download and install it from https://dotnet.microsoft.com/download/dotnet/6.0.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行以下步骤，作为先决条件，您应该在您的机器上安装.NET SDK。您可以从https://dotnet.microsoft.com/download/dotnet/6.0下载并安装它。
- en: 'In Command Prompt, run the following command to create a console application
    with a project named `HelloWorld`:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令提示符中，运行以下命令以创建一个名为`HelloWorld`的项目控制台应用程序：
- en: '[PRE2]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This command will create a new project called `HelloWorld` based on the `console`
    application template. Refer to the following screenshot:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此命令将基于`console`应用程序模板创建一个名为`HelloWorld`的新项目。请参考以下屏幕截图：
- en: '![Figure 2.4 – Command-line output of the new console application'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.4 – 新控制台应用程序的命令行输出'
- en: '](img/Figure_2.4_B18507.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.4_B18507.jpg)'
- en: Figure 2.4 – Command-line output of the new console application
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – 新控制台应用程序的命令行输出
- en: 'Run the following command to build and run the application:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令来构建和运行应用程序：
- en: '[PRE3]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The preceding command will build and run the application and print the output
    onto the command window, as follows:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之前的命令将构建并运行应用程序，并将输出打印到命令窗口，如下所示：
- en: '![Figure 2.5 – Command-line output of the console application when run'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.5 – 控制台应用程序运行时的命令行输出'
- en: '](img/Figure_2.5_B18507.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.5_B18507.jpg)'
- en: Figure 2.5 – Command-line output of the console application when run
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5 – 控制台应用程序运行时的命令行输出
- en: In the preceding steps, we created a new console application and ran it using
    the .NET CLI.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的步骤中，我们创建了一个新的控制台应用程序，并使用.NET CLI运行了它。
- en: Overview of global.json
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: global.json概述
- en: On the developer machine, if multiple .NET SDKs are installed in the `global.json`
    file, you can define the .NET SDK version to be used to run the .NET CLI commands.
    In general, the latest version of the SDK is used when no `global.json` file is
    defined, but you can override this behavior by defining `global.json`.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发机器上，如果`global.json`文件中安装了多个.NET SDK，您可以定义用于运行.NET CLI命令的.NET SDK版本。通常，如果没有定义`global.json`文件，则使用SDK的最新版本，但您可以通过定义`global.json`来覆盖此行为。
- en: 'Running the following command will create a `global.json` file in the current
    directory. Depending on your requirements, you can choose a version for which
    you want to configure:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令将在当前目录中创建一个 `global.json` 文件。根据您的需求，您可以选择要配置的版本：
- en: '[PRE4]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The following is an example `global.json` file that is created by running the
    preceding command:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个通过运行前面的命令创建的示例 `global.json` 文件：
- en: '[PRE5]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Here, `global.json` is configured to use the .NET SDK version 2.1.8.11\. The
    .NET CLI uses this SDK version to build and run applications.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`global.json` 已配置为使用 .NET SDK 版本 2.1.8.11。.NET CLI 使用此 SDK 版本来构建和运行应用程序。
- en: For more information on the .NET CLI, you can refer to [https://docs.microsoft.com/en-us/dotnet/core/tools](https://docs.microsoft.com/en-us/dotnet/core/tools).
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于 .NET CLI 的信息，您可以参考 [https://docs.microsoft.com/en-us/dotnet/core/tools](https://docs.microsoft.com/en-us/dotnet/core/tools)。
- en: In the next section, let's understand what .NET Standard is.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，让我们了解什么是 .NET Standard。
- en: What is .NET Standard?
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 .NET Standard？
- en: .NET Standard is a set of API specifications that are available for multiple
    .NET implementations. New APIs are added with each new version of .NET Standard.
    Each .NET implementation targets a specific version of .NET Standard and has access
    to all the APIs supported by that .NET Standard version.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: .NET Standard 是一组适用于多个 .NET 实现的 API 规范。每个新的 .NET Standard 版本都会添加新的 API。每个 .NET
    实现都针对特定的 .NET Standard 版本，并可以访问该 .NET Standard 版本支持的所有 API。
- en: Libraries that are built targeting .NET Standard can be used in applications
    that are built using .NET implementations, which support those versions of .NET
    Standard. So, when building libraries, targeting higher versions of .NET Standard
    allows more APIs to be used, but can be used only in applications built using
    the versions of .NET implementations that support it.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 针对 .NET Standard 构建的库可以在使用支持这些 .NET Standard 版本的 .NET 实现构建的应用程序中使用。因此，在构建库时，针对更高版本的
    .NET Standard 允许使用更多的 API，但只能用于使用支持它的 .NET 实现版本构建的应用程序。
- en: 'The following screenshot lists the various versions of .NET implementations
    that support .NET Standard 2.0:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图列出了支持 .NET Standard 2.0 的各种 .NET 实现版本：
- en: '![Figure 2.6 – .NET Standard 2.0-supported .NET implementations'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.6 – 支持 .NET Standard 2.0 的 .NET 实现'
- en: '](img/Figure_2.6_B18507.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.6_B18507.jpg)'
- en: Figure 2.6 – .NET Standard 2.0-supported .NET implementations
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.6 – 支持 .NET Standard 2.0 的 .NET 实现
- en: For example, if you develop a library targeting .NET Standard 2.0, it has access
    to over 32,000 APIs, but it is supported by fewer versions of .NET implementations.
    If you want your library to be accessible by the maximum number of .NET implementations,
    then choose the lowest possible .NET Standard version, but then you'd need to
    compromise on the APIs available.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你开发一个针对 .NET Standard 2.0 的库，它可以访问超过 32,000 个 API，但它支持的 .NET 实现版本较少。如果你想让你的库能够被最多的
    .NET 实现访问，那么请选择最低可能的 .NET Standard 版本，但这样你可能需要在可用的 API 上做出妥协。
- en: Let's understand when to use .NET 6 and .NET Standard.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们了解何时使用 .NET 6 和 .NET Standard。
- en: Understanding the use of .NET 6 and .NET Standard
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 .NET 6 和 .NET Standard 的使用
- en: .NET Standard makes it easy to share code between different .NET implementations,
    but .NET 6 offers a better way to share code and run on multiple platforms. .NET
    6 unifies the API to support desktop, web, cloud, mobile, and cross-platform console
    applications.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: .NET Standard 使得在不同 .NET 实现之间共享代码变得容易，但 .NET 6 提供了一种更好的共享代码和运行在多个平台上的方法。.NET
    6 统一了 API 以支持桌面、Web、云、移动和跨平台控制台应用程序。
- en: .NET 6 implements .NET Standard 2.1, so your existing code that targets .NET
    Standard works with .NET 6; you need not change the **target framework moniker**
    (**TFM**) unless you want to access new runtime features, language features, or
    APIs. You can multitarget to .NET Standard and .NET 6 so that you can access new
    features and make your code available to other .NET implementations.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: .NET 6 实现了 .NET Standard 2.1，因此你的现有代码，如果针对 .NET Standard，可以在 .NET 6 上运行；除非你想访问新的运行时功能、语言功能或
    API，否则你不需要更改**目标框架标记符**（**TFM**）。你可以多目标到 .NET Standard 和 .NET 6，这样你就可以访问新功能并让你的代码可供其他
    .NET 实现使用。
- en: If you are building new reusable libraries that need to work with .NET Framework
    as well, then target them to .NET Standard 2.0\. If you don't need to support
    .NET Framework, then you can target either .NET Standard 2.1 or .NET 6\. It is
    recommended to target .NET 6 to gain access to new APIs, runtime, and language
    features.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在构建需要与 .NET Framework 一起工作的可重用库，那么请将它们针对 .NET Standard 2.0。如果你不需要支持 .NET
    Framework，那么你可以针对 .NET Standard 2.1 或 .NET 6。建议针对 .NET 6 以获取对新的 API、运行时和语言特性的访问。
- en: 'Using the .NET CLI, running the following command creates a new class library:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 .NET CLI，运行以下命令创建一个新的类库：
- en: '[PRE10]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: It creates a class library project with the target framework as `.net6.0` or
    the latest available SDK on the developer machine.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 它创建了一个以 `.net6.0` 或开发机上可用的最新 SDK 为目标框架的类库项目。
- en: 'If you examine the `MyLibrary\MyLibrary.csproj` file, it should look as in
    the following snippet. You will notice the target framework is set to `net6.0`:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你检查 `MyLibrary\MyLibrary.csproj` 文件，它应该看起来如下面的片段所示。你会注意到目标框架被设置为 `net6.0`：
- en: '[PRE11]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'You can force it to use a specific version of the target framework while creating
    a class library using the .NET CLI. The following command creates a class library
    targeting .NET Standard 2.0:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在使用 .NET CLI 创建类库时强制使用特定的目标框架版本。以下命令创建了一个针对 .NET Standard 2.0 的类库：
- en: '[PRE18]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'If you examine the `MyLibrary\MyLibrary.csproj` file, it looks as in the following
    snippet, where the target framework is `netstandard2.0`:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你检查 `MyLibrary\MyLibrary.csproj` 文件，它看起来如下面的片段所示，其中目标框架是 `netstandard2.0`：
- en: '[PRE19]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: If you create a library targeting .NET Standard 2.0, it can be accessed in an
    application built targeting .NET Core as well as .NET Framework.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你创建了一个针对 .NET Standard 2.0 的库，它也可以在针对 .NET Core 以及 .NET Framework 构建的应用程序中访问。
- en: 'Optionally, you can target multiple frameworks; for example, in the following
    code snippet, the library project is configured to target .NET 6.0 and .NET Standard
    2.0:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，你可以针对多个框架；例如，在以下代码片段中，库项目被配置为针对 .NET 6.0 和 .NET Standard 2.0：
- en: '[PRE24]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'When you configure your application to support multiple frameworks and build
    the project, you will notice it creates artifacts for each targeted framework
    version. Refer to the following screenshot:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 当你配置你的应用程序以支持多个框架并构建项目时，你会注意到它为每个目标框架版本创建了工件。请参考以下截图：
- en: '![Figure 2.7 – Build artifacts targeting multiple frameworks'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.7 – 针对多个框架的构建工件'
- en: '](img/Figure_2.7_B18507.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_2.7_B18507.jpg]'
- en: Figure 2.7 – Build artifacts targeting multiple frameworks
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.7 – 针对多个框架的构建工件
- en: 'Let''s summarize the information here:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在这里总结一下信息：
- en: Use .NET Standard 2.0 to share code between .NET Framework and all other platforms.
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 .NET Standard 2.0 在 .NET Framework 和所有其他平台之间共享代码。
- en: Use .NET Standard 2.1 to share code between Mono, Xamarin, and .NET Core 3.x.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 .NET Standard 2.1 在 Mono、Xamarin 和 .NET Core 3.x 之间共享代码。
- en: Use .NET 6 for code sharing moving forward.
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从现在开始使用 .NET 6 进行代码共享。
- en: In the next section, let's understand .NET 6's cross-platform capabilities and
    cloud application support.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，让我们了解 .NET 6 的跨平台能力和云应用程序支持。
- en: Understanding .NET 6 cross-platform and cloud application support
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 .NET 6 的跨平台和云应用程序支持
- en: '.NET has many implementations. Each implementation contains runtimes, libraries,
    application frameworks (optional), and development tools. There are four .NET
    implementations:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: .NET 有许多实现。每个实现包含运行时、库、应用程序框架（可选）和开发工具。有四个 .NET 实现：
- en: .NET Framework
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: .NET Framework
- en: .NET 6
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: .NET 6
- en: '**Universal Windows Platform** (**UWP**)'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通用 Windows 平台** (**UWP**)'
- en: Mono
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mono
- en: And the set of API specifications common to all these implementations is .NET
    Standard.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 而所有这些实现共有的 API 规范集合是 .NET Standard。
- en: 'Multiple .NET implementations enable you to create .NET applications targeting
    many operating systems. You can build .NET applications for the following:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 多个 .NET 实现使你能够创建针对许多操作系统的 .NET 应用程序。你可以为以下操作系统构建 .NET 应用程序：
- en: '![Table 2.4 – .NET implementations'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '![表 2.4 – .NET 实现'
- en: '](img/Table_2.4.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Table_2.4.jpg]'
- en: Table 2.4 – .NET implementations
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 表 2.4 – .NET 实现
- en: 'Let''s understand more about .NET implementations:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更深入地了解 .NET 实现：
- en: '**.NET Framework** is the initial implementation of .NET. Using .NET Framework,
    you can develop Windows, WPF, web applications, and web and WCF services, targeting
    the Windows operating system. .NET Framework 4.5 and above implement .NET Standard,
    so libraries that are built targeting .NET Standard can be used in .NET Framework
    applications.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**.NET Framework** 是 .NET 的初始实现。使用 .NET Framework，您可以开发针对 Windows、WPF、Web 应用程序以及
    Web 和 WCF 服务，目标操作系统为 Windows。.NET Framework 4.5 及以上版本实现了 .NET Standard，因此针对 .NET
    Standard 构建的库可以在 .NET Framework 应用程序中使用。'
- en: Note
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意事项
- en: .NET Framework 4.8 is the last version of .NET Framework and no new versions
    will be released in the future. Microsoft will continue to include it with Windows
    and support it with security and bug fixes. For new development, it is recommended
    to use .NET 6 or later.
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .NET Framework 4.8 是 .NET Framework 的最后一个版本，未来将不再发布新版本。Microsoft 将继续将其包含在 Windows
    中，并提供安全性和错误修复支持。对于新开发，建议使用 .NET 6 或更高版本。
- en: '**UWP** is an implementation of .NET with which you can build touch-enabled
    Windows applications that can run on PCs, tablets, Xbox, and so on.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UWP** 是 .NET 的一个实现，您可以使用它来构建支持触控的 Windows 应用程序，这些应用程序可以在 PC、平板电脑、Xbox 等设备上运行。'
- en: '**Mono** is an implementation of .NET. It is a small runtime that powers Xamarin
    to develop native Android, macOS, iOS, tvOS, and watchOS applications. It implements
    .NET Standard and libraries targeting .NET Standard can be used in applications
    built using Mono.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Mono** 是 .NET 的一个实现。它是一个小型运行时，为 Xamarin 提供动力，用于开发原生 Android、macOS、iOS、tvOS
    和 watchOS 应用程序。它实现了 .NET Standard，因此针对 .NET Standard 构建的库可以在使用 Mono 构建的应用程序中使用。'
- en: '**.NET 6** is an open source, cross-platform implementation of .NET with which
    you can build console, web, desktop, and cloud applications that can run on Windows,
    macOS, and Linux operating systems. .NET 6 is now the primary implementation of
    .NET, which is built on a single code base with a uniform set of capabilities
    and APIs that can be used by .NET applications.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**.NET 6** 是 .NET 的开源、跨平台实现，您可以使用它来构建控制台、Web、桌面和云应用程序，这些应用程序可以在 Windows、macOS
    和 Linux 操作系统上运行。.NET 6 现在是 .NET 的主要实现，它基于单个代码库，具有统一的功能和 API 集合，这些可以由 .NET 应用程序使用。'
- en: 'The .NET 6 SDK, along with libraries and tools, also contains multiple runtimes,
    including the .NET runtime, the ASP.NET Core runtime, and .NET Desktop Runtime.
    To run .NET 6 applications, you can choose to install either the .NET 6 SDK or
    a respective platform and workload-specific runtime:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: .NET 6 SDK，包括库和工具，还包含多个运行时，包括 .NET 运行时、ASP.NET Core 运行时和 .NET 桌面运行时。要运行 .NET
    6 应用程序，您可以选择安装 .NET 6 SDK 或相应的平台和特定工作负载的运行时：
- en: '**The .NET runtime** only contains components required to run console applications.
    To run web or desktop applications, you need to install the ASP.NET Core runtime
    and .NET Desktop Runtime separately. The .NET runtime is available on Linux, macOS,
    and Windows and supports the x86, x64, ARM32, and ARM64 processor architectures.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**.NET 运行时** 仅包含运行控制台应用程序所需的组件。要运行 Web 或桌面应用程序，您需要单独安装 ASP.NET Core 运行时和 .NET
    桌面运行时。.NET 运行时可在 Linux、macOS 和 Windows 上使用，并支持 x86、x64、ARM32 和 ARM64 处理器架构。'
- en: '**The ASP.NET Core runtime** enables you to run web/server applications and
    is available on Linux, macOS, and Windows for the x86, x64, ARM32, and ARM64 processor
    architectures.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ASP.NET Core 运行时** 允许您运行 Web/服务器应用程序，并且可在 Linux、macOS 和 Windows 上为 x86、x64、ARM32
    和 ARM64 处理器架构提供支持。'
- en: '**.NET Desktop Runtime** enables you to run Windows-/WPF-based desktop applications
    on Windows. It is available for the x86 and x64 processor architectures.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**.NET 桌面运行时** 允许您在 Windows 上运行基于 Windows/WPF 的桌面应用程序。它适用于 x86 和 x64 处理器架构。'
- en: The availability of .NET runtimes for multiple platforms makes .NET 6 cross-platform.
    On the target machine, you just need to install the runtime that is needed for
    your workload and run the application.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: .NET 运行时在多个平台上的可用性使得 .NET 6 具有跨平台性。在目标机器上，您只需安装所需的工作负载的运行时，然后运行应用程序即可。
- en: Now, let's explore the services offered by Azure that run .NET 6.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们探索 Azure 提供的运行 .NET 6 的服务。
- en: Cloud support
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 云支持
- en: '.NET 6 is supported by popular cloud service providers, including Azure, Google
    Cloud, and AWS. Let''s understand a few services that can run .NET 6 applications
    in Azure:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: .NET 6 获得了包括 Azure、Google Cloud 和 AWS 在内的主流云服务提供商的支持。让我们了解一些可以在 Azure 中运行 .NET
    6 应用程序的服务：
- en: '**Azure App Service** supports easily deploying and running ASP.NET Core 6
    applications. Azure App Service offers you the chance to host .NET 6 applications
    on Linux or Windows platforms using the x86 or x64 processor architectures. For
    more information, you can refer to [https://docs.microsoft.com/en-in/azure/app-service/overview](https://docs.microsoft.com/en-in/azure/app-service/overview).'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure App Service** 支持轻松部署和运行 ASP.NET Core 6 应用程序。Azure App Service 提供了在
    Linux 或 Windows 平台上使用 x86 或 x64 处理器架构托管 .NET 6 应用程序的机会。更多信息，请参阅 [https://docs.microsoft.com/en-in/azure/app-service/overview](https://docs.microsoft.com/en-in/azure/app-service/overview)。'
- en: '**Azure Functions** supports deploying and running serverless functions built
    on .NET 6\. You can host Functions apps on Linux or Windows. For more information,
    you can refer to [https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview](https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview).'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Functions** 支持部署和运行基于 .NET 6 的无服务器函数。您可以在 Linux 或 Windows 上托管 Functions
    应用程序。更多信息，请参阅 [https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview](https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview)。'
- en: '**Docker** .NET 6 applications run on Docker containers. You can build independently
    deployable, highly scalable microservices that run on Docker containers. Official
    .NET Core Docker images are available at [https://hub.docker.com/_/microsoft-dotnet](https://hub.docker.com/_/microsoft-dotnet
    ) for different combinations of .NET (SDK or runtime) and operating systems. Many
    Azure services support Docker containers, including Azure App Service, Azure Service
    Fabric, Azure Batch, Azure Container Instances, and **Azure Kubernetes Service**
    (**AKS**). For more information, you can refer to https://docs.microsoft.com/en-us/dotnet/core/docker/introduction.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Docker** .NET 6 应用程序在 Docker 容器上运行。您可以在 Docker 容器上构建独立部署、高度可扩展的微服务。官方 .NET
    Core Docker 镜像可在 [https://hub.docker.com/_/microsoft-dotnet](https://hub.docker.com/_/microsoft-dotnet)
    获取，支持不同组合的 .NET（SDK 或运行时）和操作系统。许多 Azure 服务支持 Docker 容器，包括 Azure App Service、Azure
    Service Fabric、Azure Batch、Azure Container Instances 和 **Azure Kubernetes Service**（**AKS**）。更多信息，请参阅
    https://docs.microsoft.com/en-us/dotnet/core/docker/introduction。'
- en: With .NET 6, we can develop enterprise server applications or highly scalable
    microservices that can run in the cloud. We can develop mobile applications for
    iOS, Android, and Windows operating systems. .NET code and project files look
    similar and developers can reuse skills or code to develop different types of
    applications targeting different platforms.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 .NET 6，我们可以开发企业级服务器应用程序或高度可扩展的微服务，这些服务可以在云中运行。我们可以为 iOS、Android 和 Windows
    操作系统开发移动应用程序。.NET 代码和项目文件看起来很相似，开发者可以重用技能或代码来开发针对不同平台的不同类型的应用程序。
- en: Summary
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned what .NET is and its core features. We learned about
    the application frameworks offered by .NET and the different deployment models
    it supports. Next, we learned about the core components, tools, and libraries
    offered by .NET and learned how to set up a development environment on a machine.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了 .NET 是什么以及其核心功能。我们了解了 .NET 提供的应用程序框架及其支持的不同的部署模型。接下来，我们学习了 .NET 提供的核心组件、工具和库，并学习了如何在机器上设置开发环境。
- en: We also looked at the .NET CLI and created a sample application using the .NET
    CLI. Next, we learned what .NET Standard is and when to use .NET 6 and .NET Standard,
    and then concluded the chapter by discussing various .NET implementations, .NET
    6 cross-platform support, and cloud support.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还研究了 .NET CLI，并使用 .NET CLI 创建了一个示例应用程序。接下来，我们学习了 .NET Standard 是什么以及何时使用 .NET
    6 和 .NET Standard，然后通过讨论各种 .NET 实现、.NET 6 跨平台支持和云支持来结束本章。
- en: In the next chapter, we will learn what is new in C# 10.0.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习 C# 10.0 的新特性。
- en: Questions
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: .NET Core is which of the following?
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: .NET Core 是以下哪个？
- en: a. Open source
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: a. 开源
- en: b. Cross-platform
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: b. 跨平台
- en: c. Free
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: c. 免费
- en: d. All of the above
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: d. 所有以上选项
- en: '**Answer: d**'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案：d**'
- en: The .NET Standard 2.0 library is supported by which of the following?
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: .NET Standard 2.0 库由以下哪个支持？
- en: a. .NET Framework 4.6.1 or later
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: a. .NET Framework 4.6.1 或更高版本
- en: b. .NET Core 2.0 or later
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: b. .NET Core 2.0 或更高版本
- en: c. .NET 6
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: c. .NET 6
- en: d. Mono 5.4+ or later
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: d. Mono 5.4+ 或更高版本
- en: e. All of the above
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: e. 所有以上选项
- en: '**Answer: e**'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案：e**'
- en: The .NET CLI driver that is mandatory to run CLI commands is which of the following?
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 CLI 命令所必需的 .NET CLI 驱动程序是以下哪个？
- en: a. `net`
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: a. `net`
- en: b. `core`
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: b. `core`
- en: c. `dotnet`
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: c. `dotnet`
- en: d. `none`
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: d. `none`
- en: '**Answer: c**'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案：c**'
- en: The .NET SDK contains which of the following?
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: .NET SDK 包含以下哪些内容？
- en: a. The .NET CLI
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: a. The .NET CLI
- en: b. BCL
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: b. BCL
- en: c. The runtime
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: c. 运行时
- en: d. All of the above
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: d. 所有以上选项
- en: '**Answer: d**'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案：d**'
- en: Further reading
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: To learn more about .NET 6, you can refer to https://docs.microsoft.com/en-us/dotnet/core/introduction.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 .NET 6 的信息，您可以参考 https://docs.microsoft.com/en-us/dotnet/core/introduction。
