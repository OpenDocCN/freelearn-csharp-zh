["```cs\n#include \"cinder/app/AppBasic.h\"\n#include \"cinder/gl/gl.h\"\n\nusing namespace ci;\nusing namespace ci::app;\nusing namespace std;\n\nclass BaseApp : public AppBasic {\npublic:\n  void setup();\n  void update();\n  void draw();\n};\n\nvoid BaseApp::setup(){}\nvoid BaseApp::update(){}\n\nvoid BaseApp::draw()\n{\n  // clear out the window with black\n  gl::clear( Color( 0, 0, 0 ) );\n}\n\nCINDER_APP_BASIC( BaseApp, RendererGl )\n```", "```cs\n#include \"cinder/app/AppBasic.h\"\n#include \"cinder/gl/gl.h\"\n\nusing namespace ci;\nusing namespace ci::app;\nusing namespace std;\n\nclass BaseApp : public AppBasic {\npublic:\n  void setup();\n  void update();\n  void draw();\n};\n\nvoid BaseApp::setup(){}\nvoid BaseApp::update(){}\n\nvoid BaseApp::draw()\n{\n  // clear out the window with black\n gl::clear( Color( 0, 0, 0 ) );\n}\n\nCINDER_APP_BASIC( BaseApp, RendererGl )\n```", "```cs\n#include \"cinder/app/AppBasic.h\"\n#include \"cinder/gl/gl.h\"\n```", "```cs\nusing namespace ci;\nusing namespace ci::app;\nusing namespace std;\n```", "```cs\nclass BaseApp : public AppBasic {\n```", "```cs\n  void setup();\n  void update();\n  void draw();\n```", "```cs\nCINDER_APP_BASIC( BaseApp, RendererGl )\n```", "```cs\nvoid BaseApp::draw()\n{\n  // clear out the window with black\n  gl::clear( Color( 0.0f, 0.0f, 0.0f ) );\n```", "```cs\n  // draw a x over the whole window area\n  gl::drawLine( Vec2f(0.0f, 0.0f),\n    Vec2f(getWindowWidth(), getWindowHeight()) );\n  gl::drawLine( Vec2f(0.0f, getWindowHeight()),\n    Vec2f(getWindowWidth(), 0.0f) );\n}\n```"]