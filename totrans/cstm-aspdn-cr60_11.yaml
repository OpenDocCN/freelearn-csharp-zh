- en: '*Chapter 11*: Configuring Identity Management'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 11 章*：配置身份管理'
- en: In the last chapter, we learned about how to add and customize the ASP.NET Core
    Identity UI to enable users to register, log in, and manage their profiles. Unfortunately,
    ASP.NET Core Identity doesn't provide identity management by default.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何添加和自定义 ASP.NET Core Identity UI，以便用户可以注册、登录和管理他们的个人资料。不幸的是，ASP.NET
    Core Identity 默认不提供身份管理。
- en: In this chapter, we are going to learn about how to manage ASP.NET Core Identity
    by using IdentityManager2 to create users and roles for your application.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何通过使用 IdentityManager2 创建用户和角色来管理 ASP.NET Core Identity。
- en: 'We''ll cover the following sections:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖以下部分：
- en: Introducing IdentityManager2
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 IdentityManager2
- en: Setting up IdentityManager2
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 IdentityManager2
- en: 'The topics of this chapter relate to the MVC layer of the ASP.NET Core architecture:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的主题与 ASP.NET Core 架构的 MVC 层相关：
- en: '![Figure 11.1 – ASP.NET Core architecture](img/Figure_11.1_B17996.jpg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.1 – ASP.NET Core 架构](img/Figure_11.1_B17996.jpg)'
- en: Figure 11.1 – ASP.NET Core architecture
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.1 – ASP.NET Core 架构
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To follow the examples in this chapter, you will need to create an ASP.NET
    Core MVC application. Open your console, shell, or Bash terminal, and change to
    your working directory. Use the following command to create a new MVC application:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本章的示例，你需要创建一个 ASP.NET Core MVC 应用程序。打开你的控制台、shell 或 Bash 终端，切换到你的工作目录。使用以下命令创建一个新的
    MVC 应用程序：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, open the project in Visual Studio by double-clicking the project file,
    or in VS Code by typing the following command in the already open console:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过双击项目文件在 Visual Studio 中打开项目，或者在 VS Code 中通过在已打开的控制台中输入以下命令来打开项目：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'All of the code samples of this chapter can be found in the GitHub repo for
    this book: [https://github.com/PacktPublishing/Customizing-ASP.NET-Core-6.0-Second-Edition/tree/main/Chapter11](https://github.com/PacktPublishing/Customizing-ASP.NET-Core-6.0-Second-Edition/tree/main/Chapter11).'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的所有代码示例都可以在本书的 GitHub 仓库中找到：[https://github.com/PacktPublishing/Customizing-ASP.NET-Core-6.0-Second-Edition/tree/main/Chapter11](https://github.com/PacktPublishing/Customizing-ASP.NET-Core-6.0-Second-Edition/tree/main/Chapter11)。
- en: Important Note
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: This chapter expects you to have completed the steps in the last chapter. As
    an alternative, you can reuse the project from the last chapter and might just
    need to adjust the project names.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章假设你已经完成了上一章中的步骤。作为替代方案，你可以重用上一章的项目，可能只需要调整项目名称。
- en: Introducing IdentityManager2
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 IdentityManager2
- en: IdentityManager is a project that was initially created and owned by Brock Allen
    who also created IdentityServer together with Dominick Baier. Scott Brady ([https://www.scottbrady91.com/aspnet-identity](https://www.scottbrady91.com/aspnet-identity))
    and his employer took over the project, ported it to ASP.NET Core, and released
    it as IdentityManager2 ([https://brockallen.com/2018/07/09/identitymanager2/](https://brockallen.com/2018/07/09/identitymanager2/)).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: IdentityManager 是一个最初由 Brock Allen 创建并拥有的项目，他同时也与 Dominick Baier 一起创建了 IdentityServer。Scott
    Brady ([https://www.scottbrady91.com/aspnet-identity](https://www.scottbrady91.com/aspnet-identity))
    及其雇主接管了该项目，将其移植到 ASP.NET Core，并作为 IdentityManager2 ([https://brockallen.com/2018/07/09/identitymanager2/](https://brockallen.com/2018/07/09/identitymanager2/))
    发布。
- en: It is provided via NuGet ([https://www.nuget.org/packages/identitymanager2](https://www.nuget.org/packages/identitymanager2)).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 它通过 NuGet 提供 ([https://www.nuget.org/packages/identitymanager2](https://www.nuget.org/packages/identitymanager2))。
- en: Setting up IdentityManager2
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 IdentityManager2
- en: 'The first step is to load the package. Use the already open command line or
    the terminals in VS Code or Visual Studio:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是加载包。使用已经打开的命令行或 VS Code 或 Visual Studio 中的终端：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If the package is loaded, open `Program.cs` and add IdentityManager2 to the
    service collection:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果包已加载，打开 `Program.cs` 并将 IdentityManager2 添加到服务集合中：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Change the service registration of ASP.NET Identity from the following:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 将 ASP.NET Identity 的服务注册从以下内容更改：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To this:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 更改为以下内容：
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This adds some more relevant services to the service collection.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这向服务集合中添加了一些相关的服务。
- en: 'Also, `DefaultTokenProvider` needs to be added:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还需要添加 `DefaultTokenProvider`：
- en: '[PRE6]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: That's it with the services for now.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 至此，服务配置就完成了。
- en: 'Then `IdentityServer` needs to be added to the pipeline. Add it after the authentications
    and authorization middleware:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，需要将 `IdentityServer` 添加到管道中。在身份验证和授权中间件之后添加它：
- en: '[PRE7]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now we need to connect IdentityManager2 with the database connection that is
    already configured with ASP.NET Identity.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要将 IdentityManager2 与已经配置好的 ASP.NET Identity 数据库连接连接起来。
- en: 'This needs the following package to be installed:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要安装以下包：
- en: '[PRE8]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now you can connect IdentityManager2 with the already existing `ApplicationDbContext`
    that is `IdentityDbContext`, which handles `IdentityUsers` and `IdentityRoles`.
    Don''t forget to add a `using` to `IdentityManager2.AspNetIdentity`. In the code,
    the already existing `ApplicationUser` needs to be used:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以将IdentityManager2连接到已经存在的`ApplicationDbContext`，它是`IdentityDbContext`，处理`IdentityUsers`和`IdentityRoles`。别忘了添加`using`到`IdentityManager2.AspNetIdentity`。在代码中，需要使用已经存在的`ApplicationUser`：
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'That''s it to run `IdentityManager`. Type `dotnet watch` in Command Prompt
    to start the application or press *F5* in VS Code or VS. If you now call the application
    in the browser, you will see the UI to manage the data:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`IdentityManager`就到这里。在命令提示符中输入`dotnet watch`以启动应用程序，或在VS Code或VS中按*F5*。如果你现在在浏览器中调用应用程序，你将看到管理数据的UI：
- en: '![Figure 11.2 ‒ IdentityManager2](img/Figure_11.2_B17996.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图11.2 - IdentityManager2](img/Figure_11.2_B17996.jpg)'
- en: Figure 11.2 ‒ IdentityManager2
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.2 - IdentityManager2
- en: 'Now you can create roles and users:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以创建角色和用户：
- en: Create an **Admin** role and a **User** role. After that, create a User role
    for yourself.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个**管理员**角色和一个**用户**角色。之后，为自己创建一个用户角色。
- en: 'After the User role is created, go to **All Users** and edit the newly created
    user. Here, you can change the user properties and assign both roles to them:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户角色创建后，转到**所有用户**并编辑新创建的用户。在这里，你可以更改用户属性并为他们分配两个角色：
- en: '![Figure 11.3 ‒ Editing the roles](img/Figure_11.3_B17996.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图11.3 - 编辑角色](img/Figure_11.3_B17996.jpg)'
- en: Figure 11.3 ‒ Editing the roles
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.3 - 编辑角色
- en: By using IdentityManager, you get a complete tool to manage your users and roles.
    It also works with custom users and custom user properties.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用IdentityManager，你获得了一个管理用户和角色的完整工具。它还可以与自定义用户和自定义用户属性一起工作。
- en: Securing IdentityManager2
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护IdentityManager2
- en: I'm sure you recognized that IdentityManager2 was accessible without a login.
    This is by design. You need to restrict access to it.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信你已经注意到IdentityManager2可以在不登录的情况下访问。这是设计的一部分。你需要限制对其的访问。
- en: Scott Brady described a way to use IdentityServer to do that ([https://www.scottbrady91.com/aspnet-identity/getting-started-with-identitymanager2](https://www.scottbrady91.com/aspnet-identity/getting-started-with-identitymanager2)).
    We would also propose doing it that way. Setting up IdentityServer isn't that
    straightforward and isn't covered in this book. Unfortunately, it is not possible
    to use the default ASP.NET Core individual authentication to protect IdentityManager2\.
    It seems the middleware that creates the IdentityManager2 UI doesn't support individual
    authentication and redirects to the ASP.NET Core Identity UI.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Scott Brady描述了一种使用IdentityServer来实现这一功能的方法（[https://www.scottbrady91.com/aspnet-identity/getting-started-with-identitymanager2](https://www.scottbrady91.com/aspnet-identity/getting-started-with-identitymanager2)）。我们也会建议这样做。设置IdentityServer并不直接，且本书没有涵盖。不幸的是，无法使用默认的ASP.NET
    Core个人认证来保护IdentityManager2。看起来创建IdentityManager2 UI的中间件不支持个人认证，并重定向到ASP.NET Core
    Identity UI。
- en: It would make sense to create a separate ASP.NET Core application that hosts
    IdentityManager2\. This way, this kind of administrative UI would be completely
    separated from the publicly available application, and you would be able to use
    either OAuth or Azure Active Directory authentication to protect the application.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个单独的ASP.NET Core应用程序来托管IdentityManager2是有意义的。这样，这种类型的行政UI将完全与公开可用的应用程序分离，你将能够使用OAuth或Azure
    Active Directory认证来保护应用程序。
- en: Summary
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned how to add a user interface to manage the users
    and roles of your application. IdentityManager2 is the best and most complete
    solution to manage your identities.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何为你的应用程序添加用户界面来管理用户和角色。IdentityManager2是管理你的身份的最佳和最完整的解决方案。
- en: In the next chapter, you will learn how to use content negotiation to create
    different kinds of outputs with only a single HTTP endpoint.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习如何使用内容协商，仅通过单个HTTP端点创建不同类型的输出。
