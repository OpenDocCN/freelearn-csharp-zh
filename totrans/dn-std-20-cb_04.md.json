["```cs\nFunc<int, int> addNumbers = n => n + 1;\nvar answer = addNumbers(1);\n\nanswer // 2\n\nvar range = Enumerable.Range(1, 5);\nvar answers = range.Select(addNumbers);\nanswers // 2, 3, 4, 5, 6\n```", "```cs\n      public Func<int, int> AddOne = n => n + 1;\n\n      public Func<int, bool> IsZero = n => n == 0;\n```", "```cs\nFunc<string, string, int>\n```", "```cs\n      using System.Linq;\n      using Chapter4.Functions.FuncLib;\n```", "```cs\n      var helper = new Helper();\n\n      Console.WriteLine(helper.AddOne(5));\n\n      int[] numbers = new int[] { 1, 0, 10, 0, 5, 0 };\n      Console.WriteLine($\"We have found {numbers.Count(helper.IsZero)} \n          zeros.\");\n\n      Console.ReadLine();\n```", "```cs\n(string firstName, string lastName, int yearsOfExperience) = (\"Fiqri\", \"Ismail\", 15);\n```", "```cs\n      public (string, string, int) GetBasicDetails()\n      {\n\n          string firstName = \"Fiqri\";\n          string lastName = \"Ismail\";\n          int experience = 15;\n\n          return (firstName, lastName, experience);\n      }\n```", "```cs\n      using Chapter4.Tuples.TupleLib;\n```", "```cs\n      var employee = new Employee();\n\n      (string FirstName, string LastName, int YearsOfExperience) \n          newEmployee = employee.GetBasicDetails();\n\n      ViewData[\"FirstName\"] = newEmployee.FirstName;\n      ViewData[\"LastName\"] = newEmployee.LastName;\n      ViewData[\"YearsOfExperience \"] = newEmployee.YearsOfExperience;\n```", "```cs\n      <p>\n          <h2>@ViewData[\"FirstName\"] @ViewData[\"LastName\"]</h2> \n          <h3>(@ViewData[\"YearsOfExperience \"] years of experience)\n          </h3>\n      </p>\n```", "```cs\n      using System.Linq;\n```", "```cs\n      public delegate string Message(string msg);\n      public string AddTwoNumbers(int n1, int n2, Message msg)\n      {\n          return msg($\"The answer is : {n1 + n2}\");\n      }\n```", "```cs\n      public string CountScoresMoreThan80(int[] scores)\n      {\n          var count = scores.Where(s => s > 80).Count();\n\n          return $\"There are {count} scores more than 80\";\n      }\n```", "```cs\n      using Chapter4.Delegates.DelegateLib;\n```", "```cs\n      static string DelegateMessage(string msg)\n      {\n          return msg;\n      }\n```", "```cs\n      var calculator = new Calculator();\n\n      Calculator.Message message = DelegateMessage;\n      Console.WriteLine(calculator.AddTwoNumbers(10, 20, message));\n\n      int[] scores = new int[] { 10, 90, 50, 85, 30, 100, 45, 60 };\n      Console.WriteLine(calculator.CountScoresMoreThan80(scores));\n\n      Console.ReadLine();\n```"]