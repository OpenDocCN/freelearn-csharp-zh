["```cs\ndotnet new webapi -minimal -au IndividualB2C -o Codebreaker.ApiGateway\n```", "```cs\n{\n  \"ReverseProxy\": {\n    \"Clusters\": {\n      \"gamesapicluster\": {\n        \"Destinations\": {\n          \"gamescluster/destination1\": {\n            \"Address\": \"http://gameapis\"\n          }\n        }\n      }\n      \"botcluster\": {\n        \"Destinations\": {\n          \"botcluster/destination1\": {\n            \"Address\": \"http://bot\"\n          }\n        }\n      },\n    },\n    // configuration removed for brevity\n  }\n}\n```", "```cs\n{\n  \"ReverseProxy\": {\n    // configuration removed for brevity\n    \"Routes\": {\n      \"gamesRoute\": {\n        \"ClusterId\": \"gamesapicluster\",\n        \"Match\": {\n          \"Path\": \"/games/{*any}\"\n        }\n      },\n      \"botRoute\": {\n        \"ClusterId\": \"botcluster\",\n        \"Match\": {\n          \"Path\": \"/bot/{*any}\"\n        }\n      }\n    }\n  }\n}\n```", "```cs\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddReverseProxy()\n  .LoadFromConfig(\n    builder.Configuration.GetSection(\"ReverseProxy\"));\nvar app = builder.Build();\napp.MapReverseProxy();\napp.Run();\n```", "```cs\nvar gameAPIs = builder.AddProject<Projects.Codebreaker_GameAPIs>(\"gameapis\")\n  .WithReference(cosmos)\n  .WithEnvironment(\"DataStore\", dataStore);\nvar bot = builder.AddProject<Projects.CodeBreaker_Bot>(\"bot\")\n  .WithReference(gameAPIs);\nbuilder.AddProject<Projects.Codebreaker_ApiGateway>(\"gateway\")\n  .WithReference(gameAPIs)\n.WithReference(bot)\n  .WithExternalHttpEndpoints();\n// code removed for brevity\n```", "```cs\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\n  .AddMicrosoftIdentityWebApi(\n    builder.Configuration.GetSection(\"AzureAdB2C\"));\n// code removed for brevity\n```", "```cs\n{\n  // configuration removed for brevity\n  «AzureAdB2C»: {\n    «Instance»: «https://<domain>.b2clogin.com»,\n    «Domain»: «<domain>.onmicrosoft.com»,\n    \"ClientId\": \"<app-id>\",\n    \"SignedOutCallbackPath\": \"/signout/B2C_1_SUSI\",\n    \"SignUpSignInPolicyId\": \"B2C_1_SUSI\"\n  }\n}\n```", "```cs\nvar builder = WebApplication.CreateBuilder(args);\n// code removed for brevity\nbuilder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\n  .AddMicrosoftIdentityWebApi(\n    builder.Configuration.GetSection(\"AzureAdB2C\"));\nbuilder.Services.AddAuthorization(options =>\n{\n  options.AddPolicy(\"playPolicy\", config =>\n{\n    config.RequireScope(\"Games.Play\");\n  });\n  options.AddPolicy(\"queryPolicy\", config =>\n  {\n    config.RequireScope(\"Games.Query\");\n    config.RequireAuthentication();\n  }\n});\n```", "```cs\n// configuration removed for brevity\n  \"ReverseProxy\": {\n    \"Routes\": {\n      \"botRoute\": {\n        \"ClusterId\": \"botcluster\",\n        \"AuthorizationPolicy\": \"botPolicy\",\n        \"Match\": {\n          \"Path\": \"/bot/{*any}\"\n        }\n      },\n```", "```cs\nvar app = builder.Build();\napp.UseAuthentication();\napp.UseAuthorization();\n// code removed for brevity\n```", "```cs\ndotnet new webapp -au IndividualB2C -o WebAppAuth\n```", "```cs\nIConfigurationSection scopeSections = builder.Configuration\n  .GetSection(\"AzureAdB2C\").GetSection(\"Scopes\");\nString[] scopes = scopeSection.Get<string[]>() == [];\nbuilder.Services.AddAuthentication(OpenIdConnectDefaults.AuthenticationScheme)\n  .AddMicrosoftIdentityWebApp(\n    builder.Configuration.GetSection(\"AzureAdB2C\"))\n  .EnableTokenAcquisitionToCallDownstreamApi(scopes)\n  .AddInMemoryTokenCaches();\n```", "```cs\nbuilder.Services.AddRazorPages()\n  .AddMicrosoftIdentityUI();\n```", "```cs\ndotnet new blazor -au Individual -int Auto -o Codebreaker.ApiGateway.Identities\n```", "```cs\npublic class ApplicationDbContext(DbContextOptions<ApplicationDbContext> options) :\n  IdentityDbContext<ApplicationUser>(options)\n{\n}\n```", "```cs\npublic class ApplicationUser : IdentityUser\n{\n}\n```", "```cs\n// code removed for brevity\nbuilder.AddMySqlDbContext<ApplicationDbContext>(\"usersdb\");\n```", "```cs\n// code removed for brevity\nbuilder.Services.AddIdentityCore<ApplicationUser>(options =>\n  options.SignIn.RequireConfirmedAccount = true)\n  .AddEntityFrameworkStores<ApplicationDbContext>()\n  .AddSignInManager()\n  .AddDefaultTokenProviders();\n```", "```cs\nbuilder.Services.AddSingleton<IEmailSender<ApplicationUser>, IdentityNoOpEmailSender>();\n```", "```cs\nstring startupMode = Environment.GetEnvironmentVariable(\"STARTUP_MODE\") ?? \"Azure\";\nbool useAzureADB2C = startupMode == \"Azure\";\n// code removed for brevity\nif (startupMode == \"OnPremises\")\n{\n  var usersDbName = \"usersdb\";\n  var mySqlPassword = builder.AddParameter(\"mysql-password\", secret: true);\n  var usersDb = builder.AddMySql(\"mysql\", password: mySqlPassword)\n    .WithEnvironment(\"MYSQL_DATABASE\", usersDbName)\n    .WithDataVolume()\n    .WithPhpMyAdmin()\n    .AddDatabase(usersDbName);\n  var gateway = builder.AddProject<Projects.Codebreaker_ApiGateway_\n    Identities>(\"gateway-identities\")\n    .WithReference(gameAPIs)\n    .WithReference(bot)\n    .WithReference(usersDb)\n    .WithExternalHttpEndpoints();\n```", "```cs\n// code removed for brevity\nbuilder.Services\n  .AddIdentityApiEndpoints<ApplicationUser>()\n  .AddEntityFrameworkStores<ApplicationDbContext>();\n```", "```cs\n// code removed for brevity\napp.MapGroup(\"/identity\")\n  .MapIdentityApi<ApplicationUser>();\n```"]