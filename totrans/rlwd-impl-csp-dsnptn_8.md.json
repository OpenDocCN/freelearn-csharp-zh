["```cs\nvar myStrings = new List<string>();\nmyStrings.add(\"foo\");\nmyStrings.add(\"bar\");\n```", "```cs\nusing System.Collections.Generic;\n```", "```cs\nusing System;\nnamespace MyProject;\nclass Person\n{\n  public string Name { get; set; }\n  public byte Age { get; set; }\n  public Person()\n  {\n    Name = string.Empty;\n    Age = 0;\n  }\n  public Person(string name){\n  {\n    Name = name;\n    Age = 0;\n  }\n  public Person(string name, int age)\n  {\n    Name = name;\n    Age = age;\n  }\n  public override string ToString()\n  {\n    return \"Person: \" + Name + \" \" + Age;\n  }\n}\n```", "```cs\nusing System;\n```", "```cs\nclass Person\n```", "```cs\npublic Person()\n  {\n    Name = string.Empty;\n    Age = 0;\n  }\n  public Person(string name){\n  {\n    Name = name;\n    Age = 0;\n  }\n  public Person(string name, int age)\n  {\n    Name = name;\n    Age = age;\n  }\n```", "```cs\npublic string Name { get; set; }\n```", "```cs\nvar somebody = new Person();\nsomebody.Name = \"Bruce\";\n```", "```cs\npublic override string ToString()\n{\n  return \"Person: \" + Name + \" \" + Age;\n}\n```", "```cs\npublic class Circle\n{\n  ushort centerX;\n  ushort centerY;\n  ushort radius;\n  byte lineWidth;\n  string lineColor;\n  string fillColor;\n}\n```", "```cs\npublic class Circle\n{\n  private ushort radius;\n  ushort centerX;\n  ushort centerY;\n  byte lineWidth;\n  string lineColor;\n  string fillColor;\n}\n```", "```cs\npublic class Circle\n{\n  private ushort radius;\n  ushort centerX;\n  ushort centerY;\n  byte lineWidth;\n  string lineColor;\n  string fillColor;\n}\n```", "```cs\n private ushort _radius;\n```", "```cs\n public ushort getRadius()\n {\n  return _radius;\n }\n```", "```cs\n public void setRadius(int newRadius)\n {\n  if(newRadius >= 0 && newRadius <= 1000)\n  {\n    _radius = newRadius;\n  }\n  else\n  {\n    throw new Exception(\"The radius must be between 0 \n    and 1000.\");\n  }\n }\n}\n```", "```cs\npublic class Student {\n  private string _firstName;\n  private string _lastName;\n  private int _age;\n  public string getFirstName(){\n    return _firstName;\n  }\n  public void setFirstName(string firstName){\n    _firstName = firstName;\n  }\n  public string getlastName(){\n    return _lastName;\n  }\n  public void setLastName(string lastName){\n    _lastName = lastName;\n  }\n  public int getAge(){\n    return _age;\n  }\n  public void setAge(int age){\n    if(age > -1 && age < 970){\n      _age = age;\n    } else {\n      throw new Exception(\"Age must be between 0 and \n      970 years\");\n    }\n  }\n}\n```", "```cs\npublic class Student {\n  public string FirstName {get; set;}\n  public string LastName {get; set;}\n```", "```cs\n  private int _age;\n```", "```cs\n  public int Age {\n    get => _age;\n```", "```cs\n    set {\n      if(value > -1 && value < 970){\n        _age = value;\n      } else {\n        throw new Exception(\"Age must be between 0 and \n        970 years\");\n      }\n    }\n  }\n}\n```", "```cs\npublic class Student\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n    public string EmailAddress { get; set; }\n    public float GradePointAverage { get; set; }\n    public List<Course> Courses { get; set; }\n    public void Study()\n    {\n        Console.WriteLine(\"I am studying\");\n    }\n    public void TakeTest()\n    {\n        Console.WriteLine(\"I am taking a test!\");\n    }\n\n    public void DoHomework()\n    {\n        Console.WriteLine(\"I am doing homework.\");\n    }\n\n    public void AskParentsForMoney()\n    {\n        Console.WriteLine(\"Hey Dad, do you have a \n        minute?\");\n    }\n}\n```", "```cs\npublic class Professor\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n    public string EmailAddress { get; set; }\n    public bool HasTenure {get; set;\n    public List<Course> Courses { get; set; }\n\n    public void GradeTest()\n    {\n        Console.WriteLine(\"I am grading a test.\");\n    }\n\n    public void TeachClass()\n    {\n        Console.WriteLine(\"I am teaching a class.\");\n    }\n    public void BegForResearchFunding()\n    {\n        Console.WriteLine(\"Hey National Science Foundation, \n        do you have a minute?\");\n    }\n}\n```", "```cs\npublic abstract class Person\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n    public string EmailAddress { get; set; }\n    public List<Course> Courses { get; set; }\n    public void BegForMoney(string who)\n    {\n        Console.WriteLine(\"Hey \" + who + \", do you have a \n        minute?\");\n    }\n}\n```", "```cs\npublic class Student : Person\n{\n```", "```cs\n    public float GradePointAverage { get; set; }\n```", "```cs\n    public void Study()\n    {\n        Console.WriteLine(\"I am studying\");\n    }\n    public void TakeTest()\n    {\n        Console.WriteLine(\"I am taking a test!\");\n    }\n\n    public void DoHomework()\n    {\n        Console.WriteLine(\"I am doing homework.\");\n    }\n\n}\n```", "```cs\npublic class Professor : Person\n{\n    public bool HasTenure { get; set; }\n\n    public void GradeTest()\n    {\n        Console.WriteLine(\"I am grading a test.\");\n    }\n\n    public void TeachClass()\n    {\n        Console.WriteLine(\"I am teaching a class.\");\n    }\n}\n```", "```cs\npublic abstract class Person\n```", "```cs\npublic interface IRun\n{\n    void Jog();\n    void Sprint();\n}\n```", "```cs\npublic interface IFight\n{\n    void Attack();\n}\n```", "```cs\npublic interface IEatHumans\n{\n    void Chomp();\n}\n```", "```cs\npublic class HelplessVictim : IRun\n{\n    public void Jog()\n    {\n        throw new NotImplementedException();\n    }\n    public void Sprint()\n    {\n        throw new NotImplementedException();\n    }\n}\n```", "```cs\npublic class AncientTerror : IRun, IFight, IEatHumans\n{\n    public void Chomp()\n    {\n        throw new NotImplementedException();\n    }\n    public void Attack()\n    {\n        throw new NotImplementedException();\n    }\n    public void Jog()\n    {\n        throw new NotImplementedException();\n    }\n    public void Sprint()\n    {\n        throw new NotImplementedException();\n    }\n}\n```", "```cs\nnamespace BicycleLib;\npublic class Class1\n{\n  public string SayHello()\n    {\n        return \"Hello from the Bicycle Library!\";\n    }\n}\n```", "```cs\nusing System;\nusing BicycleLibrary;\nvar test = new Class1();\nConsole.WriteLine(test.SayHello());\n```", "```cs\ndotnet new sln -o BicycleSolution\n```", "```cs\ncd BicyleSolution\n```", "```cs\ndir\n```", "```cs\ndotnet new console -o BicycleConsoleApp\n```", "```cs\ndotnet sln add BicycleConsoleApp/BicycleConsoleApp.csproj\n```", "```cs\ndotnet new classlib -o BicycleLibrary\n```", "```cs\ndotnet sln add BicycleLibrary/BicycleLibrary.csproj\n```", "```cs\ndotnet add BicycleConsoleApp/BicycleConsoleApp.csproj reference BicycleLibrary/BicycleLibrary.csproj\n```", "```cs\ncode .\n```", "```cs\n@id:ms-dotnettools.csharp\n```", "```cs\nnamespace BicycleLibrary;\npublic class Class1\n{\n  public string SayHello()\n    {\n        return \"Hello from the Bicycle Library!\";\n    }\n}\n```", "```cs\nusing System;\nusing BicycleLibrary;\nvar test = new Class1();\nConsole.WriteLine(test.SayHello());\n```", "```cs\ndotnet run –-project .\\BicycleConsoleApp\\BicycleConsoleApp.csproj\n```", "```cs\nnamespace BicycleLibrary;\npublic class Class1\n{\n  public string SayHello()\n    {\n        return \"Hello from the Bicycle Library!\";\n    }\n}\n```", "```cs\nusing System;\nusing BicycleLibrary;\nvar test = new Class1();\nConsole.WriteLine(test.SayHello());\n```", "```cs\npublic enum DaysOfWeek { Mon, Tue, Wed, Thur, Fri, Sat, Sun };\n```", "```cs\nvar dayOff = DaysOfWeek.Wednesday;\n```", "```cs\nvar dayOff = \"Wednesday\";\n```"]