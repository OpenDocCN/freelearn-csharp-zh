- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: Converting a Xamarin.Forms App into .NET MAUI
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将Xamarin.Forms应用转换为.NET MAUI
- en: Before we dive too far into .NET MAUI, we will look back at an existing Xamarin.Forms
    app and convert it into .NET MAUI. This chapter will guide you through the steps
    to convert an existing Xamarin.Forms app running on Mono into a .NET MAUI app
    running on .NET 7\. We will discuss two different methods for converting your
    Xamarin.Forms application into .NET MAUI. The first method will use a new .NET
    MAUI project and move our old Xamarin.Forms code into the new project. The second
    method will use the **.NET Upgrade Assistant** tool to do some of the upgrades
    for us.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入.NET MAUI之前，我们将回顾一个现有的Xamarin.Forms应用，并将其转换为.NET MAUI。本章将指导您通过将运行在Mono上的现有Xamarin.Forms应用转换为运行在.NET
    7上的.NET MAUI应用的步骤。我们将讨论两种将您的Xamarin.Forms应用程序转换为.NET MAUI的不同方法。第一种方法将使用新的.NET
    MAUI项目，并将我们旧的Xamarin.Forms代码移动到新项目中。第二种方法将使用**.NET升级助手**工具为我们完成一些升级工作。
- en: If you are new to .NET MAUI and are not coming from Xamarin.Forms app development,
    feel free to skip this chapter and go straight to the next project.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是.NET MAUI的新手，并且不是从Xamarin.Forms应用开发过来的，您可以自由地跳过这一章，直接进入下一个项目。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Moving code to a new .NET MAUI project
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将代码迁移到新的.NET MAUI项目
- en: An overview of upgrading a Xamarin.Forms app
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级Xamarin.Forms应用的概述
- en: Installing and running .NET Upgrade Assistant
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和运行.NET升级助手
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To complete this project, you need to have Visual Studio installed on your **Macintosh**
    (**Mac**) or PC, as well as the .NET Mobile components. Refer to *Chapter 1*,
    *Introduction to .NET MAUI*, for more details on how to set up your environment.
    There are additional components that will be installed in this chapter, so you
    will need an internet connection to download and install .NET Upgrade Assistant.
    This chapter provides screenshots and instructions for Visual Studio on Windows.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成此项目，您需要在您的**Macintosh**（**Mac**）或PC上安装Visual Studio，以及.NET移动组件。有关如何设置环境的更多详细信息，请参阅*第1章*，*.NET
    MAUI简介*。本章还将安装额外的组件，因此您需要互联网连接来下载和安装.NET升级助手。本章提供了Windows上Visual Studio的截图和说明。
- en: This chapter will both be a classic **File** | **New** | **Project** chapter
    and use an existing app, guiding you step by step through the process of migrating
    an app from Xamarin.Forms to .NET MAUI. For the second app, you will need to download
    the source from this book’s GitHub repository.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将既是经典的**文件** | **新建** | **项目**章节，同时也会使用一个现有的应用，引导您一步步完成将应用从Xamarin.Forms迁移到.NET
    MAUI的过程。对于第二个应用，您需要从本书的GitHub仓库下载源代码。
- en: You can find the full source for the code in this chapter at [https://github.com/PacktPublishing/MAUI-Projects-3rd-Edition](https://github.com/PacktPublishing/MAUI-Projects-3rd-Edition)
    under the `Chapter03` folder.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://github.com/PacktPublishing/MAUI-Projects-3rd-Edition](https://github.com/PacktPublishing/MAUI-Projects-3rd-Edition)的`Chapter03`文件夹下找到本章代码的完整源代码。
- en: Project overview
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目概述
- en: This chapter is not meant to be an exhaustive tome of all the things you need
    to be aware of when converting your Xamarin.Forms app into .NET MAUI. Rather,
    it is an overview of what you need to consider when migrating your app, along
    with two walk-throughs of methods to accomplish that task. There are too many
    variations in application styles, versions, frameworks, custom controls, and so
    on for this one chapter to cover every scenario. That could take an entire book
    and would most likely be outdated by the time it was published. So, in this chapter,
    we are going to focus on a simple migration method that has the benefit of using
    the .NET MAUI Single Project feature and .NET Migration Assistant, which will
    automate much of the manual stuff and is constantly being updated.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目的不是详尽无遗地介绍在将您的Xamarin.Forms应用转换为.NET MAUI时需要了解的所有事项。相反，它概述了在迁移应用时需要考虑的因素，以及两个实现该任务的示例。由于应用样式、版本、框架、自定义控件等存在太多变体，本章无法涵盖所有场景。这可能需要一整本书，而且很可能在出版时就已经过时了。因此，在本章中，我们将专注于一个简单的迁移方法，该方法利用.NET
    MAUI的单项目特性和.NET迁移助手，这将自动化许多手动操作，并且会不断更新。
- en: The first part of this chapter will use a new Xamarin.Forms app created from
    the Shell template. The second part of this chapter will use .NET Upgrade Assistant
    to upgrade the open source app, BuildChat, which is available on GitHub at [https://github.com/mindofai/Build2019Chat](https://github.com/mindofai/Build2019Chat).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的第一部分将使用从Shell模板创建的新Xamarin.Forms应用。本章的第二部分将使用.NET升级助手升级GitHub上可用的开源应用BuildChat，网址为[https://github.com/mindofai/Build2019Chat](https://github.com/mindofai/Build2019Chat)。
- en: Every development book needs to have a chat app; this book is no different.
    For .NET Migration Assistant, we will use an existing chat app that was built
    using Xamarin.Forms. The app can be debugged and tested locally, so there is no
    need to set up and configure any cloud services.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 每本开发书籍都需要有一个聊天应用；这本书也不例外。对于.NET迁移助手，我们将使用一个使用Xamarin.Forms构建的现有聊天应用。该应用可以在本地进行调试和测试，因此无需设置和配置任何云服务。
- en: The build time for this project is about one hour.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 此项目的构建时间大约为一小时。
- en: Migrating into a blank .NET MAUI template
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将应用迁移到空白.NET MAUI模板
- en: This method of moving your existing app code into a new .NET MAUI app is used
    mainly for smaller, simpler apps that do not have a lot of external dependencies,
    such as NuGet, or native libraries. The largest benefit of this method is that
    your migrated app will be in a single project, targeting all the .NET MAUI-supported
    platforms. If your original app only targeted Android and iOS, using this method
    could get you Mac Catalyst and Windows targets for free. Using .NET Upgrade Assistant
    will not add any platforms that you didn’t already target.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这种将现有应用代码移动到新.NET MAUI应用的方法主要用于较小、较简单的应用，这些应用没有很多外部依赖，例如NuGet或本地库。这种方法的最大好处是迁移后的应用将是一个单一的项目，针对所有.NET
    MAUI支持的平台。如果你的原始应用只针对Android和iOS，使用这种方法可以免费获得Mac Catalyst和Windows目标。使用.NET升级助手不会添加你尚未针对的平台。
- en: To illustrate these steps, we will create a new project, just like we did in
    *Chapter 2*. This time, however, we will have to create a Xamarin.Forms project
    first.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明这些步骤，我们将创建一个新的项目，就像我们在**第2章**中所做的那样。然而，这一次，我们首先需要创建一个Xamarin.Forms项目。
- en: Creating a new Xamarin.Forms app
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个新的Xamarin.Forms应用
- en: 'The following steps will guide you through creating a new Xamarin.Forms project:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将指导你创建一个新的Xamarin.Forms项目：
- en: 'Open Visual Studio 2022 and select **Create a** **new project**:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Visual Studio 2022并选择**创建新项目**：
- en: '![Figure 3.1 – Visual Studio 2022](img/B19214_03_1.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图3.1 – Visual Studio 2022](img/B19214_03_1.jpg)'
- en: Figure 3.1 – Visual Studio 2022
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1 – Visual Studio 2022
- en: This will open the **Create a new** **project** wizard.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开**创建新项目**向导。
- en: 'In the search field, type `Xamarin.Forms` and select the **Mobile App (Xamarin.Forms)**
    item from the list:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入`Xamarin.Forms`，并从列表中选择**移动应用（Xamarin.Forms）**项：
- en: '![Figure 3.2 – New Xamarin.Forms project](img/B19214_03_2.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图3.2 – 新的Xamarin.Forms项目](img/B19214_03_2.jpg)'
- en: Figure 3.2 – New Xamarin.Forms project
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2 – 新的Xamarin.Forms项目
- en: 'Complete the next page of the wizard by naming your project `MauiMigration`,
    and then click **Next**:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将你的项目命名为`MauiMigration`来完成向导的下一页，然后点击**下一步**：
- en: '![Figure 3.3 – Configuring the Xamarin.Forms project](img/B19214_03_3.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图3.3 – 配置Xamarin.Forms项目](img/B19214_03_3.jpg)'
- en: Figure 3.3 – Configuring the Xamarin.Forms project
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.3 – 配置Xamarin.Forms项目
- en: 'Select the **Flyout** template and ensure that all three Xamarin.Forms platforms
    are checked:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**飞出**模板，并确保所有三个Xamarin.Forms平台都被勾选：
- en: '![Figure 3.4 – Selecting the Xamarin.Forms template and platforms](img/B19214_03_4.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图3.4 – 选择Xamarin.Forms模板和平台](img/B19214_03_4.jpg)'
- en: Figure 3.4 – Selecting the Xamarin.Forms template and platforms
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.4 – 选择Xamarin.Forms模板和平台
- en: You may receive a few messages about out-of-support components. These are expected
    if this is the first time you are creating a Xamarin.Forms app and can be safely
    ignored.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会收到一些关于过时组件的消息。如果你是第一次创建Xamarin.Forms应用，这是预期的，可以安全忽略。
- en: Finalize the setup by clicking **Create** and wait for Visual Studio to create
    the project.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击**创建**并等待Visual Studio创建项目来完成设置。
- en: Before we begin to migrate this app, it’s a good idea to make sure it works
    properly.
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在我们开始迁移此应用之前，确保它能够正常工作是个好主意。
- en: Run the app and test out all the buttons, flyout options, and menus.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行应用并测试所有按钮、弹出选项和菜单。
- en: 'On the **About** page, there is a **Learn more** button that will open a browser
    and navigate you to the Xamarin.Forms quickstart web page:'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在**关于**页面中，有一个**了解更多**按钮，它将打开浏览器并导航你到Xamarin.Forms快速入门网页：
- en: "![Figure 3.5 – The Learn \uFEFFmore button](img/B19214_03_5.jpg)"
  id: totrans-40
  prefs: []
  type: TYPE_IMG
- en: Figure 3.5 – The Learn more button
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 'The flyout menu has three options: **About**, **Browse**, and **Logout**. Ensure
    you click on each one and explore all their functionality:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.6 – Flyout menu options](img/B19214_03_6.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
- en: Figure 3.6 – Flyout menu options
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have explored this Xamarin.Forms app, let’s move on to creating
    the new .NET MAUI project, which will act as our new app.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Creating a new .NET MAUI app
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We will add a new project to the current solution to make things easier. To
    create a new .NET MAUI project, follow these steps:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: 'In Visual Studio, right-click the `MauiMigration` solution item in **Solution
    Explorer** and select **File** | **Add** | **New Project**:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.7 – Adding a new project to solution](img/B19214_03_7.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
- en: Figure 3.7 – Adding a new project to solution
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **Add a new project** dialog, select **.NET MAUI App** and click **Next**:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.8 – Adding a new .NET MAUI project](img/B19214_03_8.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
- en: Figure 3.8 – Adding a new .NET MAUI project
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: 'In the `MyMauiApp` and click **Next**:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.9 – Configuring the .NET MAUI project](img/B19214_03_9.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
- en: Figure 3.9 – Configuring the .NET MAUI project
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: In the **Additional Information** dialog, ensure that the selected framework
    is **.NET 7.0 (Standard Term Support)** and click **Create**.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that we have the shell of the .NET MAUI app, we can start moving the important
    parts of the Xamarin.Forms app over to the .NET MAUI project.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Migrating the MauiMigration app to MyMauiApp
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Migrating a Xamarin.Forms app into a blank new .NET MAUI template will involve
    the following high-level steps:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: Copy your app files into the new template.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the Xamarin.Forms namespace to its .NET MAUI equivalent.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Update the app startup so that it uses your views.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The next few sections will explain how to accomplish these steps.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: Copying files to a new project
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To begin, let’s copy the XAML and C# files and folders from the Xamarin.Forms
    project to the .NET MAUI project. In the `MauiMigration` project, select the `Models`,
    `Services`, `ViewModels`, and `Views` folders. We will copy these files instead
    of moving them so that we don’t destroy the original project. Right-click any
    of the selected folders and select `MauiApp` project and click **Paste**.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: A few images are also needed; we will copy them from the `MauiMigration.UWP`
    project. Under the `MauiMigration.UWP` project, you will find three image files
    called `icon_about.png`, `icon_feed.png`, and `xamarin_logo.png`. Select all three
    files and copy them just like you did for the previous files. Paste the files
    into the `MyMauiApp/Resources/Images` folder.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: Visual Studio may make some changes to your project file when you copy/paste
    files, such as adding new item groups that remove and add the same file to the
    project. You can safely remove these changes as the single project system knows
    how to handle `XAML` and `.png` files. If you get compilation errors related to
    missing images or errors in the `XAML` files, check `MyMAuiApp.csproj` for any
    additional `ItemGroups` that reference either the `.png` files or `XAML` files
    and remove them.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows an example of the `MyMauiApp.csproj` file after
    copying the images from `MauiMigration.UWP`. *Figure 3**.10* shows the changes
    that Visual Studio added; these can be removed:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.10 – Visual Studio added unnecessary items](img/B19214_03_10.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
- en: Figure 3.10 – Visual Studio added unnecessary items
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will need to update the `XAML` files so that they reference .NET MAUI
    controls.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: Updating namespaces
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Currently, the `XAML` files are still using the Xamarin.Forms namespace. To
    update these files, we need to change the following:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: 'We must amend this like so:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use the **Find and Replace** feature in Visual Studio to make these
    changes or manually edit each file. To use the **Find and Replace** dialog, follow
    these steps:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: In `MyMauiApp` project.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'From the Visual Studio menu select **Edit** | **Find and Replace** | **Replace
    in Files** (or *Ctrl* + *Shift* + *H*) to open the **Find and** **Replace** dialog:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![Figure 3.11 – The Find and Replace dialog\uFEFF](img/B19214_03_11.jpg)"
  id: totrans-79
  prefs: []
  type: TYPE_IMG
- en: Figure 3.11 – The Find and Replace dialog
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: In the **Look in** field, select **Current project**.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the **Replace All** button; there should only be five places to make that
    change.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once completed, there are a few other changes that need to be made.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: 'In the `NewItemPage.xaml` file, in the `Views` folder of the `MyMauiApp` project,
    remove the following highlighted text:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: ^using Xamarin\.[Forms,Essentials].*;
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: <!--
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: When the Flyout is visible this defines the content to display in the flyout.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for
    each child element           https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: <FlyoutItem Title="About" Icon="icon_about.png">
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:AboutPage}"
    />
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: </FlyoutItem>
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: <FlyoutItem Title="Browse" Icon="icon_feed.png">
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: <ShellContent Route="ItemsPage" ContentTemplate="{DataTemplate local:ItemsPage}"
    />
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: </FlyoutItem>
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: <!-- When the Flyout is visible this will be a menu item you can tie a click
    behavior to  -->
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: <MenuItem Text="Logout" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: </MenuItem>
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: <!--
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: TabBar lets you define content that won't show up in a flyout menu. When this
    content is active
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: the flyout menu won't be available. This is useful for creating areas of the
    application where
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: you don't want users to be able to navigate away from. If you would like to
    navigate to this
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: content you can do so by calling
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: await Shell.Current.GoToAsync("//LoginPage");
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: <TabBar>
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}"
    />
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: </TabBar>
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: <ShellContent
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: Title="Home"
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: ContentTemplate="{DataTemplate local:MainPage}"
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: Route="MainPage" />
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'MauiProgram.cs file and make the changes highlighted in the following code
    block:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: At this point, you should be able to compile and run the converted project.
    Make sure you set `MyMauiApp` as the startup project before running. Play around
    with the app and make sure it is all working before moving on to the next section
    on manually migrating your apps to .NET MAUI.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: Manual migration overview
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: In the previous section, we converted a simple Xamarin.Forms app into .NET MAUI
    using the Single Project system. This project did not use any advanced features
    of Xamarin.Forms, such as external NuGets, custom controls, or any commercial
    controls. These are additional items that you will have to consider when migrating
    your apps from Xamarin.Forms to .NET MAUI.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we are going to discuss the basic flow that you should go through
    to migrate your Xamarin.Forms app to .NET MAUI. This is by no means an all-inclusive
    list; the .NET MAUI team is updating a wiki page that details all their knowledge
    in one location.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: Official migration guide
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: 'The guidelines for migrating your Xamarin.Forms apps to .NET MAUI are continually
    evolving since the release of .NET MAUI, based on usage and feedback. To review
    the latest guidelines, please visit the following URL in your favorite browser:
    [https://learn.microsoft.com/en-us/dotnet/maui/get-started/migrate?view=net-maui-7.0](https://learn.microsoft.com/en-us/dotnet/maui/get-started/migrate?view=net-maui-7.0).'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: 'When migrating your apps from Xamarin.Forms to .NET MAUI, you will need to
    follow the overall steps outlined here:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: Convert the Xamarin.Forms projects from .NET Framework into .NET SDK style.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Update the code from Xamarin.Forms to .NET MAUI.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Update any incompatible dependencies with .NET 6+ versions.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Address any breaking API changes.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the converted app and verify its functionality.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: .NET Upgrade Assistant is a tool that will attempt to perform the first four
    steps for you. However, before we dive into using .NET Upgrade Assistant, we are
    going to look at what each of these steps entails so that we have a firm understanding
    of how to migrate our app if .NET Upgrade Assistant is unable to operate on an
    app project.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: Converting the Xamarin.Forms projects from .NET Framework into .NET SDK style
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: Some Xamarin.Forms projects are based on the .NET Framework project template.
    It is a verbose project format that has been updated for .NET projects. The new
    format, typically referred to as the SDK style, is a much more concise format
    with better defaults. Xamarin.Forms projects created with Visual Studio 16.5 or
    later use the newer SDK format.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: 'To convert an old format project file, such as the one we will be using with
    .NET Upgrade Assistant, in the *Installing and running .NET Upgrade Assistant*
    section later in this chapter, you would need to change the `<Project />` element
    to the new SDK style, like this:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: 'Find a line like this in your project file:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '2.  Replace it with the following:'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Remember that you will have to make this change for all your Xamarin.Forms projects,
    platform-specific projects, and any shared library projects.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at the specific changes that you might have to make for a typical
    Xamarin.Forms project that targets both Android and iOS.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: 'To convert the shared library project of a Xamarin.Forms app into a .NET MAUI
    project, we need to replace the contents of the `csproj` file with the following:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The important bits are highlighted. `<UseMaui>True</UseMaui>` will enable the
    project system to automatically add the correct references to the project for
    .NET MAUI libraries. The `<TargetFrameworks>` elements are updated for the correct
    **Target Framework Monikers** (**TFMs**) for .NET 6 or 7.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: .NET MAUI also requires an additional `<SupportedOSPlatformVersion>` property,
    which is set conditionally based on `TargetPlatformIdentifier`.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: That is a significant amount of reduction from the .NET Framework `csproj` files.
    In addition to the property reduction, you can remove most of the `<ItemGroup>…</ItemGroup>`
    entries since all source files are now included by default. The groups to leave
    are the groups containing `<ProjectReferences />` entries.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: Now that we’ve converted the shared project, let’s review the changes needed
    for an Android project.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: 'As with all .NET Framework projects, we will need to change the `<Project …>`
    element to the following:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now, remove all the `<PropertyGroup>…</PropertyGroup>` elements since they
    are default values, and replace them with the following:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Again, in the Android project, we set the `<UseMaui>` and `<``TargetFramework>`
    properties.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: To finish migrating this project file, remove all the `<ItemGroup>` elements
    and their contents, except for the one group that contains the `<AndroidResource>`
    elements. Finally, remove the `<Import>` element at the bottom of the project
    file; it is no longer needed.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: 'The next project type to look at is an iOS project. The changes here will be
    very similar to the changes in an Android project but with an iOS twist. Xamarin.Forms
    iOS projects are also a .NET Framework style project, so we will need to change
    the `<Project …>` element to the following:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Then, we will need to remove all the existing `<PropertyGroup>` elements and
    add the following:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Again, you will notice the `<UseMaui>` property being set, and that the `<TargetFramwork>`
    value is `net7.0-ios`.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: To finish converting an iOS project, remove the `<ItemGroup>` and `<Import>`
    elements except for the one containing the `<ProjectReference>` items; those are
    still needed.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: Updating code from Xamarin.Forms to .NET MAUI
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: Updating the code from Xamarin.Forms to .NET MAUI consists of several steps.
    First, we need to add some new code that is required to initialize .NET MAUI.
    Refer to the *Examining the files section* of *Chapter 2* for more details on
    the files that are needed.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: 'The first change you will need is in the shared project. Add a new class file
    called `MauiProgram.cs` with the following contents, minimally:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You may have to add additional code to this file so that it can handle additional
    needs for your application, such as registering types for dependency injection
    or registering additional library features, such as logging.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: 'In the `Platforms/Android` folder, add a new class file named `MainApplication.cs`
    and update the class so that it looks like this:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We must also make a few adjustments to the `MainActivity` class. Open the `MainActivity.cs`
    file and make the changes highlighted in the following code:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: <uses-sdk android:minSdkVersion="21" android:targetSdkVersion="33" />
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'public partial class AppDelegate : MauiUIApplicationDelegate'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: protected override MauiApp CreateMauiApp() => MauiProgram.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: CreateMauiApp();
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: <ItemGroup>
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Microsoft.AspNetCore.SignalR.Client">
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <Version>7.0.9</Version>
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </PackageReference>
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Xamarin.Forms" Version="5.0.0.2578" />
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Xamarin.Android.Support.Design" Version="28.0.0.3"
    />
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Xamarin.Android.Support.v7.AppCompat" Version="28.0.0.3"
    />
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Xamarin.Android.Support.v4" Version="28.0.0.3" />
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Xamarin.Android.Support.v7.CardView" Version="28.0.0.3"
    />
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Xamarin.AndroidX.MediaRouter" Version="1.2.0" />
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Xamarin.AndroidX.Palette" Version="1.0.0.5" />
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </ItemGroup>
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: <ItemGroup>
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Microsoft.AspNetCore.SignalR.Client" Version="7.0.9"
    />
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="7.0.1"
    />
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </ItemGroup>
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: <ItemGroup>
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Xamarin.AndroidX.MediaRouter" Version="1.2.0" />
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Xamarin.AndroidX.Palette" Version="1.0.0.5" />
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Microsoft.AspNetCore.SignalR.Client" Version="7.0.9"
    />
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="7.0.1"
    />
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </ItemGroup>
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: <ItemGroup>
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Microsoft.AspNetCore.SignalR.Client" Version="7.0.9"
    />
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="7.0.1"
    />
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </ItemGroup>
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: using Microsoft.Maui;
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: namespace BuildChat.Droid
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: '[Activity(Label = "BuildChat", Icon = "@mipmap/icon", Theme = "@style/Theme.MaterialComponents",
    MainLauncher = true, ConfigurationChanges = ConfigChanges.ScreenSize | ConfigChanges.Orientation)]'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: 'public class MainActivity : MauiAppCompatActivity'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: protected override void OnCreate(Bundle savedInstanceState)
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: base.OnCreate(savedInstanceState);
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: using Foundation;
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: using Microsoft.Maui;
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: using Microsoft.Maui.Hosting;
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: using Microsoft.Maui.Hosting;
- en: namespace BuildChat.iOS
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: namespace BuildChat.iOS
- en: '{'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: // The UIApplicationDelegate for the application. This class is responsible
    for launching the
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: // 应用的UIApplicationDelegate。此类负责启动
- en: // User Interface of the application, as well as listening (and optionally responding)
    to
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: // 应用的用户界面，以及监听（并可选地响应）
- en: // application events from iOS.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: // 从iOS接收的应用事件。
- en: '[Register("AppDelegate")]'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '[Register("AppDelegate")]'
- en: 'public partial class AppDelegate : MauiUIApplicationDelegate'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 'public partial class AppDelegate : MauiUIApplicationDelegate'
- en: '{'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: protected override MauiApp CreateMauiApp() => MauiProgram.CreateMauiApp();
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: protected override MauiApp CreateMauiApp() => MauiProgram.CreateMauiApp();
- en: '}'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE22]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Part 2: Basic Projects'
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二部分：基本项目
- en: In this part, you will learn about .NET MAUI features such as Shell, CollectionView,
    Image, Button, Label, CarouselView, Grid, Custom Controls, and Gestures. You will
    explore using location services, calling custom web APIs, and designing your XAML
    for different form factors.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 在这部分，你将学习.NET MAUI的特性，例如Shell、CollectionView、Image、Button、Label、CarouselView、Grid、自定义控件和手势。你将探索使用位置服务、调用自定义Web
    API以及为不同形态设计你的XAML。
- en: 'This part has the following chapters:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 4*](B19214_04.xhtml#_idTextAnchor274), *Building a News App Using
    .NET MAUI Shell*'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第4章*](B19214_04.xhtml#_idTextAnchor274)，*使用.NET MAUI Shell构建新闻应用*'
- en: '[*Chapter 5*](B19214_05.xhtml#_idTextAnchor399), *Building a Matchmaking App
    with Rich UX Using Animations*'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第5章*](B19214_05.xhtml#_idTextAnchor399)，*使用动画构建具有丰富UX的匹配应用*'
- en: '[*Chapter 6*](B19214_06.xhtml#_idTextAnchor513), *Building a Photo Gallery
    App Using CollectionView and CarouselView*'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第6章*](B19214_06.xhtml#_idTextAnchor513)，*使用CollectionView和CarouselView构建照片库应用*'
- en: '[*Chapter 7*](B19214_07.xhtml#_idTextAnchor569), *Building a Location Tracking
    App Using GPS and Maps*'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第7章*](B19214_07.xhtml#_idTextAnchor569)，*使用GPS和地图构建位置跟踪应用*'
- en: '[*Chapter 8*](B19214_08.xhtml#_idTextAnchor708), *Building a Weather App for
    Multiple Form Factors*'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第8章*](B19214_08.xhtml#_idTextAnchor708)，*为多种形态构建天气应用*'
