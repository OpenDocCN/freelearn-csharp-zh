- en: 'Chapter 3: Improvements in Visual Studio 2022'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 章：Visual Studio 2022 的改进
- en: Every new Visual Studio version brings new features to improve user experience
    and performance and provides more functionalities and tools for developers.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 每个新的 Visual Studio 版本都会带来新的功能来改善用户体验和性能，并为开发者提供更多功能和工具。
- en: We are just starting with Visual Studio 2022\. In this book, you will learn
    some features with medium and high complexity, and in later chapters, we will
    study the changes in Visual Studio 2022 in more detail to get a deeper understanding.
    But in this chapter, we will review the most important features available in Visual
    Studio 2022 that you can use now.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚开始使用 Visual Studio 2022。在这本书中，您将学习一些中等和高级复杂性的功能，在后面的章节中，我们将更详细地研究 Visual
    Studio 2022 的变化，以获得更深入的理解。但在这章中，我们将回顾您现在可以使用 Visual Studio 2022 中的最重要的功能。
- en: By the end of this chapter, you will recognize the main differences between
    Visual Studio 2019 and Visual Studio 2022 and the most relevant improvements in
    this new version.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将认识到 Visual Studio 2019 和 Visual Studio 2022 之间的主要差异以及这个新版本中最相关的改进。
- en: 'We will review the following improvements in Visual Studio 2022:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将回顾 Visual Studio 2022 中的以下改进：
- en: 64-bit architecture
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 64 位架构
- en: New icons and styles
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新图标和样式
- en: .NET 6 support
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: .NET 6 支持
- en: Hot Reload
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 热重载
- en: Other improvements
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他改进
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For this chapter, you will need to have Visual Studio 2022 already installed
    on your machine. In [*Chapter 1*](B17873_01_ePub.xhtml#_idTextAnchor013), *Getting
    Started with Visual Studio 2022*, you can check the requirements and the installation
    process.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，您需要在您的机器上已经安装了 Visual Studio 2022。在 [*第 1 章*](B17873_01_ePub.xhtml#_idTextAnchor013)，*开始使用
    Visual Studio 2022*，您可以检查要求和安装过程。
- en: 64-bit architecture
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 64 位架构
- en: A simple but important feature in Visual Studio 2022 is the new architecture
    in 64 bit. This is a change that we cannot see, but internally, it takes advantage
    of a 64-bit CPU to improve the performance and reduce delays in the execution
    of multiple tasks.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 2022 中一个简单但重要的特性是其 64 位的新架构。这是一个我们无法直接看到的改变，但在内部，它利用 64 位 CPU
    来提高性能并减少多个任务执行中的延迟。
- en: Visual Studio 2022 only supports a 64-bit system; this is something common in
    current laptops and PCs.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 2022 仅支持 64 位系统；这在当前的笔记本电脑和 PC 中很常见。
- en: 'Using **Task Manager** in Windows, you will be able to notice the difference
    when Visual Studio 2019 and 2022 are running at the same time:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Windows 中的 **任务管理器**，您将能够注意到当 Visual Studio 2019 和 2022 同时运行时的差异：
- en: '![Figure 3.1 – Visual Studio 2022 on the 64-bit platform and 2019 on the 32-bit
    platform](img/Figure_3.1_B17873.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.1 – Visual Studio 2022 在 64 位平台上的运行和 2019 在 32 位平台上的运行](img/Figure_3.1_B17873.jpg)'
- en: Figure 3.1 – Visual Studio 2022 on the 64-bit platform and 2019 on the 32-bit
    platform
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 – Visual Studio 2022 在 64 位平台上的运行和 2019 在 32 位平台上的运行
- en: With a 32-bit architecture, there was an access limitation of 4 GB of memory.
    Now, thanks to a 64-bit architecture, it is possible to access a larger amount
    of memory, reducing time limits and avoiding IDE freezes or crashes.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在 32 位架构中，内存访问限制为 4 GB。现在，得益于 64 位架构，可以访问更多的内存，减少时间限制并避免 IDE 冻结或崩溃。
- en: All in all, the Visual Studio development team improved the performance for
    many scenarios in version 2022\. You will notice the difference when working on
    large projects, and performance will be better in future versions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，Visual Studio 开发团队在 2022 版本中提高了许多场景的性能。当您在大项目上工作时，您会注意到差异，并且未来的版本性能将更好。
- en: 64 bit is a good improvement for performance, but this feature doesn't improve
    user interaction while coding. In the following section, we will see how the icons
    and style were improved to have a better user experience.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 64 位架构是一个很好的性能提升，但这个特性在编码时并没有改善用户体验。在下一节中，我们将看到图标和样式的改进如何带来更好的用户体验。
- en: New icons and styles
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 新图标和样式
- en: 'New icons and styles were added in Visual Studio 2022\. Although this is a
    simple feature, it helps us to navigate easily in an application, using visual
    elements and identifying actions and tools properly. For instance, in *Figure
    3.2*, you can see the broom icon (row one, column five) has better contrast, with
    a new vibrant yellow color (specifically for a dark theme) and a modern design.
    It also implies that a code cleanup will be executed. The broom icon is used to
    execute code cleanup to fix code formatting:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 2022 中添加了新的图标和样式。尽管这是一个简单的功能，但它帮助我们更容易地在应用程序中导航，使用视觉元素并正确识别动作和工具。例如，在
    *图 3.2* 中，你可以看到扫帚图标（第一行，第五列）具有更好的对比度，采用了新的鲜艳的黄色（特别是针对深色主题）和现代设计。它还暗示将执行代码清理。扫帚图标用于执行代码清理以修复代码格式：
- en: '![Figure 3.2 – Icons in Visual Studio 2022 versus 2019'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.2 – Visual Studio 2022 与 2019 的图标对比'
- en: '](img/Figure_3.2_B17873.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.2_B17873.jpg)'
- en: Figure 3.2 – Icons in Visual Studio 2022 versus 2019
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2 – Visual Studio 2022 与 2019 的图标对比
- en: Important Note
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: An interesting fact about the new icons in Visual Studio 2022 is that the Visual
    Studio development team worked with the developer community to fulfill three purposes
    – consistency, readability, and familiarity. This resulted in a series of icons
    with the same meaning but with consistent colors, sharp contrast, and a recognizable
    silhouette.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Visual Studio 2022 中的新图标的一个有趣的事实是，Visual Studio 开发团队与开发者社区合作，以满足三个目的——一致性、可读性和熟悉性。这导致了一系列具有相同含义但具有一致颜色、鲜明对比和可识别轮廓的图标。
- en: 'The contrast between letters, icons, and background was improved to make it
    more pleasant and less tiring for the eyes. In *Figure 3.3*, you can see an example:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 字母、图标和背景之间的对比度得到了改善，使其更加舒适，对眼睛的疲劳感减少。在 *图 3.3* 中，你可以看到一个示例：
- en: '![Figure 3.3 – An example of a dark theme in Visual Studio 2019 (left) versus
    2022 (right)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.3 – Visual Studio 2019（左）与 2022（右）的深色主题示例]'
- en: '](img/Figure_3.3_B17873.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.3_B17873.jpg)'
- en: Figure 3.3 – An example of a dark theme in Visual Studio 2019 (left) versus
    2022 (right)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.3 – Visual Studio 2019（左）与 2022（右）的深色主题示例
- en: Important Note
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: While the use of dark themes is becoming more common among developers in general,
    it is also becoming more prevalent in applications across the industry.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然深色主题的使用在开发者中变得越来越普遍，但它也在整个行业的应用程序中变得越来越普遍。
- en: '*Figure 3.4* is another example of using the blue theme. Although the colors
    are very similar, we can see some differences and how the screen looks better
    with the new icons:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 3.4* 是使用蓝色主题的另一个示例。尽管颜色非常相似，但我们仍能看出一些差异，以及新图标如何使屏幕看起来更好：'
- en: '![Figure 3.4 – An example of a blue theme in Visual Studio 2019 (left) versus
    2022 (right)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.4 – Visual Studio 2019（左）与 2022（右）的蓝色主题示例]'
- en: '](img/Figure_3.4_B17873.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.4_B17873.jpg)'
- en: Figure 3.4 – An example of a blue theme in Visual Studio 2019 (left) versus
    2022 (right)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.4 – Visual Studio 2019（左）与 2022（右）的蓝色主题示例
- en: There are also some changes in the other themes, but dark and blue were the
    most improved.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 其他主题也有一些变化，但深色和蓝色是改进最多的。
- en: With these new icons and styles, working with Visual Studio becomes more user-friendly.
    In the next section, we will see how Visual Studio supports the new version of
    .NET, .NET 6\.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些新的图标和样式，使用 Visual Studio 变得更加用户友好。在下一节中，我们将看到 Visual Studio 如何支持 .NET 的新版本，.NET
    6。
- en: .NET 6 support
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: .NET 6 支持
- en: '**.NET** is a free, open source framework used to create web, desktop, mobile,
    and other kinds of applications, using C#, F#, and Visual Basic (with C# being
    the most popular one).'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**.NET** 是一个免费、开源的框架，用于使用 C#、F# 和 Visual Basic（其中 C# 是最受欢迎的）创建 Web、桌面、移动和其他类型的应用程序。'
- en: A new version of .NET has been released every year. .NET 6 is a new long-term
    support version, which offers great new improvements, such as minimal APIs and
    C# 10 compatibility. For more information about the improvements, you can visit
    [https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-6](https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-6).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 每年都会发布一个新的 .NET 版本。.NET 6 是一个新的长期支持版本，它提供了许多新的改进，例如最小 API 和 C# 10 兼容性。有关改进的更多信息，您可以访问
    [https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-6](https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-6)。
- en: Visual Studio 2022 is ready to create, compile, and publish projects using this
    new version.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 2022 已准备好使用这个新版本创建、编译和发布项目。
- en: In [*Chapter 4*](B17873_04_ePub.xhtml#_idTextAnchor052), *Creating Projects
    and Templates*, we will analyze the projects and templates provided by Visual
    Studio and look at the option to choose .NET 6 for our applications.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第 4 章*](B17873_04_ePub.xhtml#_idTextAnchor052)，“创建项目和模板”，我们将分析 Visual Studio
    提供的项目和模板，并查看选择 .NET 6 作为我们应用程序选项的方案。
- en: We can create projects using .NET 6, but we can also use a new functionality
    for quickly checking the code changes. In the next section, we will review how
    Hot Reload can improve our productivity while using Visual Studio 2022.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 .NET 6 创建项目，但也可以使用一种新的功能来快速检查代码更改。在下一节中，我们将回顾热重载如何在使用 Visual Studio 2022
    的过程中提高我们的生产力。
- en: Hot Reload
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 热重载
- en: For a long time, **Hot Reload** was the main requested feature in the .NET developers'
    community. This is a feature already implemented in many technologies and expands
    a developer's productivity by refreshing an application after every change made
    to code.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 对于很长时间，**热重载**一直是 .NET 开发者社区的主要请求功能。这是一个已经在许多技术中实现的功能，通过在每次对代码进行更改后刷新应用程序来提高开发者的生产力。
- en: Important Note
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Hot Reload is a feature that recompiles code after a change is made to it. This
    way, an application displays visual changes immediately without the need to restart
    it, significantly increasing productivity.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 热重载是一种在代码更改后重新编译代码的功能。这样，应用程序可以立即显示视觉更改，而无需重新启动，从而显著提高生产力。
- en: 'Even external companies are working on this feature; one of the most popular
    is LiveSharp, which offers a monthly subscription (at the time of writing). You
    can check it out at the following link:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是外部公司也在开发这项功能；最受欢迎的是 LiveSharp，它提供每月订阅（截至撰写本文时）。您可以通过以下链接查看：
- en: '[https://www.livesharp.net/](https://www.livesharp.net/)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.livesharp.net/](https://www.livesharp.net/)'
- en: 'Visual Studio 2022 includes this amazing feature for many kinds of projects,
    including ones involving ASP.NET and Blazor (by creating web apps using WebAssembly
    and Razor components):'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 2022 为许多类型的项目提供了这个令人惊叹的功能，包括涉及 ASP.NET 和 Blazor（通过使用 WebAssembly
    和 Razor 组件创建 Web 应用程序）的项目：
- en: '![Figure 3.5 – The Hot Reload button in Visual Studio 2022'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.5 – Visual Studio 2022 中的热重载按钮'
- en: '](img/Figure_3.5_B17873.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.5_B17873.jpg)'
- en: Figure 3.5 – The Hot Reload button in Visual Studio 2022
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.5 – Visual Studio 2022 中的热重载按钮
- en: Important Note
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The team behind Hot Reload decided not to support the new Hot Reload feature
    in *Xamarin.Forms* based projects for Android and iOS scenarios, so it is recommended
    to perform a migration to .NET MAUI to use this feature.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 热重载背后的团队决定不支持 Android 和 iOS 场景中基于 *Xamarin.Forms* 的新热重载功能，因此建议迁移到 .NET MAUI
    以使用此功能。
- en: In later chapters, we will use this utility in some demos and learn why this
    tool is very important for us. In the next section, we will share other improvements
    that can help us to increase our productivity, especially in larger projects.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在后续章节中，我们将在一些演示中使用此实用程序，并了解为什么这个工具对我们来说非常重要。在下一节中，我们将分享其他可以帮助我们提高生产力的改进，尤其是在大型项目中。
- en: Other improvements
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他改进
- en: 'Visual Studio 2022 has other improvements, one of which is performance. Visual
    Studio 2022 runs on 64 bit, but in addition, features such as the search file
    tool were improved to help find elements quickly in a project with a large number
    of files. In the following diagram, you will see a search example:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 2022 有其他改进，其中之一是性能。Visual Studio 2022 在 64 位操作系统上运行，此外，如搜索文件工具等特性也得到了改进，以帮助在包含大量文件的项目中快速查找元素。在下图中，您将看到一个搜索示例：
- en: '![Figure 3.6 – An example of searching for the word "class" in Visual Studio
    2022'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.6 – 在 Visual Studio 2022 中搜索单词 "class" 的示例'
- en: '](img/Figure_3.6_B17873.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.6_B17873.jpg)'
- en: Figure 3.6 – An example of searching for the word "class" in Visual Studio 2022
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.6 – 在 Visual Studio 2022 中搜索单词 "class" 的示例
- en: 'Also, you have a new type of breakpoint (*a breakpoint is a technique to stop
    application execution in a specific line of the code*). With this feature, we
    can add a breakpoint that depends on another created before. We will see more
    information about this feature in [*Chapter 5*](B17873_05_ePub.xhtml#_idTextAnchor060),
    *Debugging and Compiling Your Projects*. In *Figure 3.7*, you can see the new
    **Insert Dependent Breakpoint** option:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您还有一种新的断点类型（*断点是一种在代码的特定行中停止应用程序执行的技术*）。使用此功能，我们可以添加一个依赖于之前创建的断点的断点。我们将在
    [*第 5 章*](B17873_05_ePub.xhtml#_idTextAnchor060)，“调试和编译您的项目”中看到更多关于此功能的信息。在 *图
    3.7* 中，您可以看到新的 **插入依赖断点** 选项：
- en: '![Figure 3.7 – The dependent breakpoint in Visual Studio'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.7 – Visual Studio 中的依赖断点'
- en: '](img/Figure_3.7_B17873.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.7_B17873.jpg)'
- en: Figure 3.7 – The dependent breakpoint in Visual Studio
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.7 – Visual Studio 中的依赖断点
- en: This is a new type of breakpoint that is very useful for debugging large applications
    with high complexity. It will interrupt the execution of your application when
    a previous breakpoint meets a condition.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，IntelliCode 无疑是 Visual Studio 2022 中引入的主要变化之一，它允许开发者有信心地进行编程，快速找到问题，并通过在待办事项列表顶部建议最可能被使用的项目来进行集中的代码审查，正如你在
    *图 3.9* 中所看到的：
- en: 'Regarding Git integration, we have a new experimental feature that helps us
    to work with multiple repositories in the same solution. Thus, you can perform
    changes in different projects and then commit the changes (save the changes in
    Git) without opening multiple instances of Visual Studio. In *Figure 3.8*, the
    new option to enable multiple repositories is shown:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 [*第 7 章*](B17873_07_ePub.xhtml#_idTextAnchor088) “使用 AI 和代码视图高效编码” 中了解这个令人惊叹的新增功能的全部特性，这将允许你全面探索
    IntelliCode 的使用。
- en: '![Figure 3.8 – In Tools | Options | Preview Features, there is a new option
    to enable multi-repo support'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第 4 章*](B17873_04_ePub.xhtml#_idTextAnchor052) “创建项目和模板” 中，你将创建你的第一个项目，并分析
    Visual Studio 为不同编程语言和技术提供的模板。
- en: '](img/Figure_3.8_B17873.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.8 – Visual Studio 中的依赖断点'
- en: Figure 3.8 – In Tools | Options | Preview Features, there is a new option to
    enable multi-repo support
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.9_B17873.jpg)'
- en: We will analyze this feature deeper in [*Chapter 11*](B17873_11_ePub.xhtml#_idTextAnchor130),
    *Implementing Git Integration*, where we will use a repository in GitHub to try
    functionalities related to the integration with Git and GitHub.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 [*第 11 章*](B17873_11_ePub.xhtml#_idTextAnchor130) “实现 Git 集成” 中更深入地分析这个功能，我们将使用
    GitHub 上的一个仓库来尝试与 Git 和 GitHub 集成的相关功能。
- en: 'Finally, IntelliCode is undoubtedly one of the major changes introduced in
    Visual Studio 2022, allowing developers to program with confidence, find problems
    quickly, and have focused code reviews by suggesting items that are most likely
    to be used at the top of a to-do list, as you can see in *Figure 3.9*:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.8 – 在“工具 | 选项 | 预览功能”中，有一个新选项来启用多仓库支持
- en: '![Figure 3.9 – IntelliCode suggesting the properties and methods that are most
    likely to be utilized'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 摘要
- en: '](img/Figure_3.9_B17873.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.9 – IntelliCode 建议最可能被使用的属性和方法'
- en: Figure 3.9 – IntelliCode suggesting the properties and methods that are most
    likely to be utilized
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_3.8_B17873.jpg)'
- en: We will get to know all the features of this fabulous addition in [*Chapter
    7*](B17873_07_ePub.xhtml#_idTextAnchor088), *Coding Efficiently with AI and Code
    Views*, which will allow you to fully explore the use of IntelliCode.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种非常有用的断点类型，适用于调试具有高复杂性的大型应用程序。当先前的断点满足条件时，它将中断应用程序的执行。
- en: Summary
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图 3.9 – IntelliCode 建议最可能被使用的属性和方法
- en: In this chapter, we provided an overview of the main improvements in Visual
    Studio and some differences between Visual Studio 2022 and Visual Studio 2019\.
    Throughout this book, we will analyze these features further and use them in some
    demos.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们概述了 Visual Studio 的主要改进以及 Visual Studio 2022 和 Visual Studio 2019 之间的一些差异。在整个书中，我们将进一步分析这些功能并在一些演示中使用它们。
- en: In [*Chapter 4*](B17873_04_ePub.xhtml#_idTextAnchor052)*,* *Creating Projects
    and Templates*, you will create your first project and analyze the templates provided
    by Visual Studio for different programming languages and technologies.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Git 集成，我们有一个新的实验性功能，帮助我们在一个解决方案中处理多个仓库。因此，你可以在不同的项目中执行更改，然后提交更改（在 Git 中保存更改），而无需打开多个
    Visual Studio 实例。在 *图 3.8* 中显示了启用多个仓库的新选项：
