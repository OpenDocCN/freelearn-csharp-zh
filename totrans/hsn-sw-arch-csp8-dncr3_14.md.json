["```cs\n<Project Sdk=\"Microsoft.NET.Sdk\">\n  <PropertyGroup>\n    <TargetFramework>netstandard2.0</TargetFramework>\n  </PropertyGroup>\n</Project>\n```", "```cs\npublic class PrimeUsersEvaluation : Evaluation\n{\n    /// <summary>\n    /// The business rule implemented here indicates that grades that \n    /// came from prime users have 20% of increase\n    /// </summary>\n    /// <returns>the final grade from a prime user</returns>\n    public override double CalculateGrade()\n    {\n         return Grade * 1.2;\n    }\n}\n```", "```cs\npublic class EvaluationService\n{\n    public IContentEvaluated content { get; set; }\n    /// <summary>\n    /// No matter the Evaluation, the calculation will always get     \n    /// values from the method CalculateGrade\n    /// </summary>\n    /// <returns>The average of the grade from Evaluations</returns>\n    public double CalculateEvaluationAverage()\n    {\n        var count = 0;\n        double evaluationGrade = 0;\n        foreach (var evaluation in content.Evaluations)\n        {\n            evaluationGrade += evaluation.CalculateGrade();\n            count++;\n        }\n        return evaluationGrade/count;\n    }\n}\n```", "```cs\npublic class EvaluationService<T> where T: IContentEvaluated\n```", "```cs\npublic EvaluationService()\n{\n    var name = GetTypeOfEvaluation();\n    content = (T)Assembly.GetExecutingAssembly().CreateInstance(name);\n}\n```", "```cs\nvar service = new EvaluationService<CityEvaluation>();\n```"]