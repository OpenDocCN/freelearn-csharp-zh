["```cs\npublic **const** int MaxItems = 4; \n```", "```cs\npublic **readonly** int MaxItems; \n```", "```cs\n    using System.Collections; \n    using System.Collections.Generic; \n    using UnityEngine; \n\n    // 1 \n    using UnityEngine.SceneManagement; \n\n    // 2 \n    public static class Utilities  \n    { \n        // 3 \n        public static int PlayerDeaths = 0; \n\n        // 4 \n        public static void RestartLevel() \n        { \n            SceneManager.LoadScene(0); \n            Time.timeScale = 1.0f; \n        } \n    } \n    ```", "```cs\n    // 5\n    public void RestartScene()\n    {\n        Utilities.RestartLevel();\n    } \n    ```", "```cs\npublic bool AttackEnemy(int damage) {} \n```", "```cs\nAttackEnemy(int) \n```", "```cs\n    public static class Utilities  \n    {\n        public static int PlayerDeaths = 0;\n        public static void RestartLevel()\n        {\n            SceneManager.LoadScene(0);\n            Time.timeScale = 1.0f;\n        }\n        **// 1** \n        **public****static****bool****RestartLevel****(****int** **sceneIndex****)**\n        **{** \n            **// 2** \n            **SceneManager.LoadScene(sceneIndex);**\n            **Time.timeScale =** **1.0f****;**\n            **// 3** \n            **return****true****;**\n        **}** \n    } \n    ```", "```cs\n    // 4\n    public void RestartScene()\n    {\n        Utilities.RestartLevel(0);\n    } \n    ```", "```cs\npublic static class Utilities  \n{ \n    public static int PlayerDeaths = 0; \n    **// 1** \n    **public****static****string****UpdateDeathCount****(****ref****int** **countReference****)** \n    **{** \n        **// 2** \n        **countReference +=** **1****;** \n        **return****\"Next time you'll be at number \"** **+ countReference;**\n    **}**\n    public static void RestartLevel()\n    { \n       // ... No changes needed ...   \n    } \n    public static bool RestartLevel(int sceneIndex)\n    { \n        **// 3** \n        **Debug.Log(****\"Player deaths: \"** **+ PlayerDeaths);** \n        **string** **message = UpdateDeathCount(****ref** **PlayerDeaths);**\n        **Debug.Log(****\"Player deaths: \"** **+ PlayerDeaths);**\n        **Debug.Log(message);**\n        SceneManager.LoadScene(sceneIndex);\n        Time.timeScale = 1.0f;\n        return true;\n    }\n} \n```", "```cs\npublic static string UpdateDeathCount(**out** int countReference) \n{ \n     countReference = 1;\n     return \"Next time you'll be at number \" + countReference;\n} \n```", "```cs\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine; \n// 1 \npublic interface IManager  \n{ \n    // 2 \n    string State { get; set; } \n    // 3 \n    void Initialize();\n} \n```", "```cs\n**// 1** \npublic class GameBehavior : MonoBehaviour, **IManager** \n{ \n    **// 2** \n    **private****string** **_state;** \n    **// 3** \n    **public****string** **State**  \n    **{** \n        **get** **{** **return** **_state; }** \n        **set** **{ _state =** **value****; }** \n    **}**\n    // ... No other changes needed ... \n    **// 4** \n    **void****Start****()** \n    **{** \n        **Initialize();** \n    **}**\n    **// 5** \n    **public****void****Initialize****()**  \n    **{** \n        **_state =** **\"Game Manager initialized..\"****;**\n        **Debug.Log(_state);**\n    **}**\n} \n```", "```cs\n    using System.Collections;\n    using System.Collections.Generic;\n    using UnityEngine;\n    public class DataManager : MonoBehaviour, IManager\n    {\n        private string _state;\n        public string State\n        {\n            get { return _state; }\n            set { _state = value; }\n        }\n        void Start()\n        {\n            Initialize();\n        }\n        public void Initialize()\n        {\n            _state = \"Data Manager initialized..\";\n            Debug.Log(_state);\n        }\n    } \n    ```", "```cs\n// 1 \npublic abstract class BaseManager  \n{ \n    // 2 \n    protected string _state = \"Manager is not initialized...\";\n    public abstract string State { get; set; }\n    // 3 \n    public abstract void Initialize();\n} \n```", "```cs\n// 1 \npublic class CombatManager: BaseManager  \n{ \n    // 2 \n    public override string State \n    { \n        get { return _state; } \n        set { _state = value; } \n    }\n    // 3 \n    public override void Initialize() \n    { \n        _state = \"Combat Manager initialized..\";\n        Debug.Log(_state);\n    }\n} \n```", "```cs\npublic **static** returnType MethodName(**this** **ExtendingClass** localVal) {} \n```", "```cs\nusing System.Collections; \nusing System.Collections.Generic;\nusing UnityEngine;  \n// 1 \nnamespace CustomExtensions  \n{ \n    // 2 \n    public static class StringExtensions \n    { \n        // 3 \n        public static void FancyDebug(this string str)\n        { \n            // 4 \n            Debug.LogFormat(\"This string contains {0} characters.\", str.Length);\n        }\n    }\n} \n```", "```cs\nusing System.Collections; \nusing System.Collections.Generic; \nusing UnityEngine; \n**// 1** \n**using** **CustomExtensions;** \n\npublic class GameBehavior : MonoBehaviour, IManager \n{ \n    // ... No changes needed ... \n    void Start() \n    { \n        // ... No changes needed ... \n    } \n    public void Initialize()  \n    { \n        _state = \"Game Manager initialized..\";\n        **// 2** \n        **_state.FancyDebug();**\n        Debug.Log(_state);\n    }\n} \n```", "```cs\nusing AliasName = type; \n```", "```cs\nusing CustomInt = System.Int64; \n```", "```cs\npublic CustomInt PlayerHealth = 100; \n```"]