["```cs\n    using UnityEngine;\n    using UnityEngine.UI;\n    [System.Serializable]\n    public class DialogueBox\n    {\n        public CanvasGroup textHolder;\n        public Text textDisplayBox;\n        public string dialogue;\n    }\n    ```", "```cs\n    using System;\n    using System.Collections;\n    using System.Collections.Generic;\n    using UnityEngine;\n    using UnityEngine.SceneManagement;\n    ```", "```cs\n    public List<DialogueBox> dialogueBoxes;\n    ```", "```cs\n    [SerializeField] string nextScene;\n    ```", "```cs\n    int whichText = 0;\n    int positionInString = 0;\n    ```", "```cs\n    Coroutine textPusher;\n    ```", "```cs\n    IEnumerator WriteTheText()\n    {\n        for (int i = 0; i <= dialogueBoxes[whichText].dialogue.Length; i++)\n        {\n            dialogueBoxes[whichText].textDisplayBox.text = dialogueBoxes[whichText].dialogue.Substring(0, i);\n            positionInString++;\n            yield return new WaitForSeconds(0.1f);\n        }\n    }\n    ```", "```cs\n    void Start()\n    {\n        textPusher = StartCoroutine(WriteTheText());\n    }\n    ```", "```cs\n    public void ProceedText()\n    {\n        if (positionInString < dialogueBoxes[whichText].dialogue.Length)\n        {\n            StopCoroutine(textPusher);\n            dialogueBoxes[whichText].textDisplayBox.text = dialogueBoxes[whichText].dialogue;\n            positionInString = dialogueBoxes[whichText].dialogue.Length;\n        }\n        else\n        {\n            ToggleCanvasGroup(dialogueBoxes[whichText].textHolder, false);\n            whichText++;\n            if (whichText >= dialogueBoxes.Count)\n            {\n                SceneManager.LoadScene(nextScene);\n            }\n            else\n            {\n                positionInString = 0;\n                ToggleCanvasGroup(dialogueBoxes[whichText].textHolder, true);\n                textPusher = StartCoroutine(WriteTheText());\n            }\n        }\n    }\n    public void ToggleCanvasGroup(CanvasGroup Panel, bool show)\n    {\n        Panel.alpha = show ? 1 : 0;\n        Panel.interactable = show;\n        Panel.blocksRaycasts = show;\n    }\n    ```", "```cs\n    using System.Collections.Generic;\n    ```", "```cs\n    [System.Serializable]\n    public class Translation\n    {\n        public string languageKey;\n        public string translatedString;\n        public Font font;\n        public FontStyle fontStyle;\n    }\n    ```", "```cs\n    public List<Translation> translations;\n    ```", "```cs\n    [SerializeField] string currentLanguage;\n    ```", "```cs\n    private void Translate()\n    {\n        foreach (DialogueBox dialogueBox in dialogueBoxes)\n        {\n            int index = dialogueBox.translations.FindIndex(x => x.languageKey == currentLanguage);\n            if (index >= 0)\n            {\n                dialogueBox.dialogue = dialogueBox.translations[index].translatedString;\n                dialogueBox.textDisplayBox.font = dialogueBox.translations[index].font;\n                dialogueBox.textDisplayBox.fontStyle = dialogueBox.translations[index].fontStyle;\n            }\n        }\n    }\n    ```", "```cs\n    void Awake()\n    {\n        Translate();\n    }\n    ```"]