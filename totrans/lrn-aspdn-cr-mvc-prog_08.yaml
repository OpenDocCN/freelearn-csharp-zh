- en: Chapter 8. Beautifying ASP.NET MVC Applications with Bootstrap
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章：使用Bootstrap美化ASP.NET MVC应用程序
- en: You might have created an application with all the required functionalities.
    It may even work perfectly without any issues in all scenarios. But the success
    of your application depends on how well your users can access it. Your application
    should look good (if not great) and be user-friendly in order for it to be a success.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经创建了一个包含所有必需功能的应用程序。它甚至可能在所有场景下都完美运行，没有任何问题。但你的应用程序的成功取决于你的用户如何访问它。为了成功，你的应用程序应该看起来很好（如果不是极好），并且要用户友好。
- en: 'In this chapter, you are going to learn about the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习以下主题：
- en: Role of HTML and CSS in the ASP.NET Core application
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML和CSS在ASP.NET Core应用程序中的作用
- en: Characteristics of front-end frameworks and different frameworks available
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前端框架的特点和可用的不同框架
- en: Bootstrap and its grid system along its features
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bootstrap及其网格系统及其特性
- en: CSS classes available in Bootstrap for form elements such as input and select
    elements
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bootstrap中可用的CSS类，用于表单元素（如输入和选择元素）
- en: CSS classes for different types of HTML elements such as table
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同类型的HTML元素（如表格）的CSS类
- en: Using Bootstrap in your ASP.NET Core application
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的ASP.NET Core应用程序中使用Bootstrap
- en: Before discussing how to make our application look good, let us take a step
    back and discuss the roles that HTML and CSS play in your application.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论如何使我们的应用程序看起来更好之前，让我们退一步，讨论HTML和CSS在你的应用程序中的作用。
- en: Knowing HTML and CSS
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解HTML和CSS
- en: As mentioned earlier, all browsers can only understand HTML, CSS, and JavaScript.
    So, the applications that you build should produce output as HTML, CSS, and JavaScript.
    This holds true for web applications built using other technologies such as Java
    or Ruby on Rails. Having said that, we will only discuss HTML and CSS.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，所有浏览器只能理解HTML、CSS和JavaScript。因此，你构建的应用程序应该生成HTML、CSS和JavaScript的输出。这一点对于使用Java或Ruby
    on Rails等其他技术构建的Web应用程序同样适用。话虽如此，我们只会讨论HTML和CSS。
- en: '**HTML** ( **Hyper Text Markup Language** ) is used to structure the content
    in your web pages. For example, you can add content in a `title` tag so that it
    will be available in a browser''s tab or window. Let us see an example.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**HTML**（**超文本标记语言**）用于在网页中结构化内容。例如，你可以在`title`标签中添加内容，这样它就会在浏览器的标签页或窗口中可用。让我们看看一个例子。'
- en: 'Open any text editor (you can even use Notepad), type the following HTML content
    and the save file as `Bootstrap.html` . Please note the extension `.html` :'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 打开任何文本编辑器（你甚至可以使用记事本），输入以下HTML内容，并将文件保存为`Bootstrap.html`。请注意扩展名`.html`：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The first line tells that the HTML content follows HTML 5 standards (the latest
    and the current version of HTML) and should be interpreted as such. The `html`
    tag tells the browser it is the start of an HTML document. Information in the
    `head` tag represents metadata and tells the browser to the web page rather than
    the web page itself. Examples include the page title, description about the page,
    and keywords for the search engine optimization. All the contents of the `body`
    tag will be shown in the browser's main window. In the preceding HTML code, we
    have made `Bootstrap` the heading and the rest of the content has been made as
    a paragraph.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行表明HTML内容遵循HTML 5标准（最新和当前版本的HTML）并应如此解释。`html`标签告诉浏览器这是HTML文档的开始。`head`标签中的信息代表元数据，并告诉浏览器网页而不是网页本身。例如，包括页面标题、关于页面的描述和搜索引擎优化的关键词。`body`标签中的所有内容将在浏览器的主窗口中显示。在前面的HTML代码中，我们将`Bootstrap`作为标题，其余内容则被设置为段落。
- en: 'Open the file in the browser and you should see something like the following
    screenshot:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中打开文件，你应该会看到以下截图类似的内容：
- en: '![Knowing HTML and CSS](img/Image00111.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![了解HTML和CSS](img/Image00111.jpg)'
- en: You will notice the content placed in the `title` tag shown as the browser's
    tab title, the heading content is made bold and bigger in size, and the paragraph
    starts on a new line.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到放置在`title`标签中的内容显示为浏览器的标签页标题，标题内容被加粗并放大，段落则从新的一行开始。
- en: CSS is all about styling. You can use CSS to customize how each of the elements
    in your web page looks. You can change the color of the button, the font of the
    heading text, the border size of a table, and so on. You can include CSS styles
    either inline or using a separate file. If you are using inline CSS, it should
    be within a `style` tag. If you are using external CSS, we can make use of a `link`
    tag and refer to the external CSS file.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: CSS全部关于样式。你可以使用CSS来定制网页中每个元素的外观。你可以改变按钮的颜色、标题文本的字体、表格的边框大小等等。你可以将CSS样式内联或使用单独的文件包含。如果你使用内联CSS，它应该在一个
    `style` 标签内。如果你使用外部CSS，我们可以使用一个 `link` 标签并引用外部CSS文件。
- en: CSS is nothing but a set of rules used for the presentation. Each rule consists
    of two parts—a selector for which a declaration has to be applied and a declaration
    containing the styling information. The styling information has a property and
    a  value for the property.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: CSS不过是一组用于展示的规则。每个规则由两部分组成——一个需要应用声明的选择器和一个包含样式信息的声明。样式信息有一个属性和一个属性的值。
- en: 'Let us take the following simple CSS rule:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看以下简单的CSS规则：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This CSS rule states that all the heading text should be in a blue color. `h1`
    is the selector, which tells the browser the following declaration has to be applied
    for all `h1` tags. In the declaration, we are setting the blue color (`#0094ff`
     is blue in hexadecimal format).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这个CSS规则说明所有标题文本都应该使用蓝色。`h1` 是选择器，它告诉浏览器以下声明必须应用于所有 `h1` 标签。在声明中，我们设置了蓝色颜色（十六进制格式中的
    `#0094ff` 是蓝色）。
- en: 'The following is the updated HTML file where I''ve updated the CSS styles (highlighted
    in bold):'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我更新CSS样式（加粗显示）的更新后的HTML文件：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'When you open the file in a browser after making the style changes, you will
    get the following output:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中打开文件并做出样式更改后，你会得到以下输出：
- en: '![Knowing HTML and CSS](img/Image00112.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![了解HTML和CSS](img/Image00112.jpg)'
- en: Having said that, you need to create CSS rules to make the elements in your
    web application look good. But creating different styles for each element is a
    time-consuming and tedious task. You can choose from any of the frontend frameworks
    available.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，你需要创建CSS规则来让你的Web应用中的元素看起来更好。但为每个元素创建不同的样式是一个耗时且繁琐的任务。你可以选择任何可用的前端框架。
- en: 'Any application should have the following characteristics:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 任何应用程序都应该具有以下特点：
- en: '**Consistency** : The elements and the controls that are being used by your
    application should be familiar to the user. For example, if you use a drop-down
    list, the user should be able to select only one value from it.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一致性**：你应用中使用的元素和控制应该对用户来说很熟悉。例如，如果你使用下拉列表，用户应该只能从中选择一个值。'
- en: '**Responsive** : The application that you build should look good across all
    devices of different sizes. The code that you write should adapt to the screen
    size of the device of your users.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**响应式**：你构建的应用程序应该在不同尺寸的设备上看起来都很好。你编写的代码应该适应你用户设备的屏幕大小。'
- en: '**Mobile-friendly** : This is related to the preceding point. These days, many
    applications being accessed from mobile devices rather than desktops or laptops.
    We have to make sure that the application that we build will look great on mobile
    devices.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**移动友好**：这与前面的观点相关。如今，许多应用程序是通过移动设备而不是桌面或笔记本电脑访问的。我们必须确保我们构建的应用程序在移动设备上看起来很棒。'
- en: '**Customizable** : If you are going to use any front-end application framework,
    it should be customizable according to your needs. For example, if you want to
    update the heading text color, you should be able to update or override the CSS
    file to make the necessary changes.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可定制**：如果你打算使用任何前端应用框架，它应该根据你的需求进行定制。例如，如果你想更新标题文本颜色，你应该能够更新或覆盖CSS文件以进行必要的更改。'
- en: '**Easy to get started** : The learning curve for learning your front-end framework
    should be minimal as you should be spending time on delivering value to the customer—building
    and delivering the solution. We are not getting paid to learn a new fancy front-end
    framework.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**易于上手**：学习前端框架的曲线应该尽可能平缓，因为你应该把时间花在为客户创造价值——构建和交付解决方案上。我们不是为了学习一个新潮的前端框架而获得报酬。'
- en: There are few front-end frameworks available such as Bootstrap, **Foundation**
    , and **PureCSS** . In this chapter, we are going to use the Bootstrap framework
    as it is the most widely used front-end framework.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的前端框架不多，例如 Bootstrap、**Foundation** 和 **PureCSS**。在本章中，我们将使用 Bootstrap 框架，因为它是最广泛使用的前端框架。
- en: Bootstrap
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Bootstrap
- en: Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive,
    mobile-first projects on the web and you can access it at [http://getbootstrap.com/](http://getbootstrap.com/)
    .
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 是最受欢迎的 HTML、CSS 和 JS 框架，用于在网络上开发响应式、移动优先的项目，您可以在 [http://getbootstrap.com/](http://getbootstrap.com/)
    访问它。
- en: '![Bootstrap](img/Image00113.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![Bootstrap](img/Image00113.jpg)'
- en: Bootstrap has many features that meet the various needs of a web application.
    It has different CSS classes for each of the HTML elements so that you can use
    it without touching any CSS code. However, if you wish to override it, you can
    do so.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 拥有许多满足网页应用各种需求的功能。它为每个 HTML 元素提供了不同的 CSS 类，这样您就可以在不接触任何 CSS 代码的情况下使用它。然而，如果您希望覆盖它，您也可以这样做。
- en: Let us look at each of the features of Bootstrap in brief.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们简要地看看 Bootstrap 的每个功能。
- en: Bootstrap Grid system
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Bootstrap 网格系统
- en: The grid system in Bootstrap helps you to create a responsive layout for your
    application. This feature makes your application look great in all devices of
    different shapes including mobile devices.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 中的网格系统帮助您为您的应用创建响应式布局。这个特性使得您的应用在所有不同形状的设备上看起来都很棒，包括移动设备。
- en: 'Bootstrap provides a fluid grid system, which scales up to twelve columns as
    the device or viewport size increases. You can think of grid system as being like
    columns in an Excel sheet (like the one in the following screenshot):'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 提供了一个流体网格系统，随着设备或视口大小的增加，可以扩展到十二列。您可以将网格系统想象成 Excel 表格中的列（如下截图所示）：
- en: '![Bootstrap Grid system](img/Image00114.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![Bootstrap 网格系统](img/Image00114.jpg)'
- en: We can combine multiple columns to create a wider column. In the second row
    in the preceding screenshot, we have used a single column (using class .`col-md-1`
    ) twelve times. In the third row, we are using a CSS class (`.col-md-2` ) to create
    six wider columns instead of twelve shorter columns. Likewise, we are creating
    a lesser number of wider columns.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将多个列组合起来创建更宽的列。在上一个截图的第二行中，我们使用了单个列（使用类 `.col-md-1`）十二次。在第三行中，我们使用 CSS 类（`.col-md-2`）创建了六个更宽的列，而不是十二个较短的列。同样，我们创建较少数量的更宽的列。
- en: Forms
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表单
- en: 'All form controls receive global styling when you use Bootstrap in your application.
    The following is one such example (the screenshot is taken from the Bootstrap
    site):'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在应用中使用 Bootstrap 时，所有表单控件都会收到全局样式。以下是一个这样的例子（截图来自 Bootstrap 网站）：
- en: '![Forms](img/Image00115.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![表单](img/Image00115.jpg)'
- en: The following is the code for the preceding form. Related HTML elements are
    grouped together in the form. For example, the labels for the Email and **Email
    address** input text boxes are grouped together. The same is the case for **Password**
    and **File input** .
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码是上一个表单的代码。相关的 HTML 元素在表单中分组在一起。例如，电子邮件和 **电子邮件地址** 输入文本框的标签被分组在一起。**密码**
    和 **文件输入** 的情况也是如此。
- en: '![Forms](img/Image00116.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![表单](img/Image00116.jpg)'
- en: Inline forms
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内联表单
- en: Inline forms are forms where all the form elements are on the same line (as
    shown in the following screenshot). We need to add the class `form-inline` to
    the `form` element.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 内联表单是所有表单元素都在同一行上的表单（如下截图所示）。我们需要将类 `form-inline` 添加到 `form` 元素中。
- en: '![Inline forms](img/Image00117.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![内联表单](img/Image00117.jpg)'
- en: Horizontal forms
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 水平表单
- en: 'In horizontal forms, we have each element group on a separate line;  **Email**
    label, Email input on a line and **Password** label, Password input on a line
    (as shown in the following screenshot):'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在水平表单中，我们每个元素组都在单独的一行上；**电子邮件**标签，电子邮件输入在一行上，**密码**标签，密码输入在一行上（如下截图所示）：
- en: '![Horizontal forms](img/Image00118.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![水平表单](img/Image00118.jpg)'
- en: 'To apply the horizontal form styling, we just need to add the class `form-horizontal`
    as in the following code. Just like other forms, we need to group the related
    HTML elements together by applying the CSS class `form-group` :'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 要应用水平表单样式，我们只需添加类 `form-horizontal`，如下代码所示。就像其他表单一样，我们需要通过应用 CSS 类 `form-group`
    将相关的 HTML 元素分组在一起：
- en: '![Horizontal forms](img/Image00119.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![水平表单](img/Image00119.jpg)'
- en: Table CSS classes
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表格 CSS 类
- en: 'For basic styling, add the base CSS class `table` to the `table` HTML element
    as shown in the following screenshot:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 对于基本的样式，将基础 CSS 类 `table` 添加到 `table` HTML 元素中，如下截图所示：
- en: '![Table CSS classes](img/Image00120.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![表格CSS类](img/Image00120.jpg)'
- en: Striped tables
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 条纹表格
- en: In a striped table, the background of alternate rows will be of the same color.
    In the following screenshot, the background color of the first row and third row
    are the same color. You can apply the `table-striped` class to apply the striped
    table behavior to the table HTML element.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在条纹表格中，交替行的背景颜色将是相同的。在下面的屏幕截图中，第一行和第三行的背景颜色是相同的。您可以通过将`table-striped`类应用到表格HTML元素上来应用条纹表格行为。
- en: '![Striped tables](img/Image00121.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![条纹表格](img/Image00121.jpg)'
- en: Hover tables
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 悬停表格
- en: When you move your mouse over any of the rows in the table, the background color
    of the row is changed. This hover behavior can be achieved by applying the CSS
    class `table-hover` along with the class `table` to the HTML table element.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当您将鼠标移至表格中的任何一行时，该行的背景颜色会改变。这种悬停行为可以通过将CSS类`table-hover`与类`table`一起应用到HTML表格元素上来实现。
- en: '![Hover tables](img/Image00122.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![悬停表格](img/Image00122.jpg)'
- en: Bordered tables
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 带边框的表格
- en: We can have a bordered table (as in the following screenshot), if we apply the
    CSS class `table-bordered` to the `table` element.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过将CSS类`table-bordered`应用到`table`元素上来拥有一个带边框的表格（如下面的屏幕截图所示）。
- en: '![Bordered tables](img/Image00123.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![带边框的表格](img/Image00123.jpg)'
- en: Contextual classes in table
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 表格中的上下文类
- en: There are times when you want to highlight rows based on the data value. For
    example, if you are showing inventory data in tabular format, you might want to
    highlight the rows with a red background color for the items whose count is less
    than the stipulated count. In this case, you can apply a `danger` class to table
    rows to highlight them in a red color. There are different types of contextual
    class available for highlighting in different colors. You can apply these classes
    to individual cells instead of the complete rows.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 有时您可能想要根据数据值突出显示行。例如，如果您以表格格式显示库存数据，您可能想要将计数少于规定计数的项目的行突出显示为红色背景颜色。在这种情况下，您可以通过将`danger`类应用到表格行上来突出显示它们为红色。有不同类型的上下文类可用于以不同颜色突出显示。您可以将这些类应用到单个单元格而不是整个行。
- en: '![Contextual classes in table](img/Image00124.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![表格中的上下文类](img/Image00124.jpg)'
- en: Buttons
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按钮
- en: 'There are different styling options available for making buttons appear in
    different colors. For all the buttons, the base button class `btn` has to be applied:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 有不同的样式选项可供选择，以使按钮以不同的颜色显示。对于所有按钮，必须应用基本按钮类`btn`：
- en: '![Buttons](img/Image00125.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![按钮](img/Image00125.jpg)'
- en: The `btn-primary` button class is used to highlight the button in blue whereas
    the `btn-success` button class highlights the button in green. In the preceding
    screenshot, different options for styling the button are shown.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`btn-primary`按钮类用于将按钮突出显示为蓝色，而`btn-success`按钮类则将按钮突出显示为绿色。在先前的屏幕截图中，展示了按钮样式的不同选项。'
- en: Button sizes
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按钮大小
- en: You can change the size of the button according to your needs. The `btn-lg`
    class can be applied to a large button and the `btn-sm` class can be applied to
    buttons to make them appear small. The following are the different options available
    to control the size of the button.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以根据需要更改按钮的大小。`btn-lg`类可以应用于大按钮，而`btn-sm`类可以应用于按钮以使它们看起来更小。以下是可以用于控制按钮大小的不同选项。
- en: '![Button sizes](img/Image00126.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![按钮大小](img/Image00126.jpg)'
- en: Contextual colors
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上下文颜色
- en: Based on the context, you might want to change the color of the text. For example,
    you might want to make the text appear in green if the previous operation is successful.
    For an unsuccessful operation, you might want to show the error message in a red.
    In such scenarios, you might use this helper CSS classes to show them in different
    colors.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上下文，您可能想要更改文本的颜色。例如，如果您想要在操作成功时使文本显示为绿色，对于不成功的操作，您可能想要以红色显示错误消息。在这种情况下，您可能使用这些辅助CSS类以不同的颜色显示它们。
- en: '![Contextual colors](img/Image00127.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![上下文颜色](img/Image00127.jpg)'
- en: We have seen various features of Bootstrap. Now, let us use Bootstrap to make
    our application look good. Basically, we have two major components in our view—a
    form at the top to get the input from the user and a table at the bottom to display
    the results in a table.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了Bootstrap的各种功能。现在，让我们使用Bootstrap来使我们的应用程序看起来更美观。基本上，在我们的视图中有两个主要组件——一个位于顶部的表单用于获取用户的输入，以及一个位于底部的表格用于以表格形式显示结果。
- en: Using Bootstrap in your ASP.NET MVC application
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在ASP.NET MVC应用程序中使用Bootstrap
- en: 'There are different ways to get Bootstrap for your application:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 有不同的方式可以将Bootstrap应用到您的应用程序中：
- en: Refer to the Bootstrap file available at the CDN (Content Delivery Network)
    in your application
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考应用中可用的 CDN（内容分发网络）上的 Bootstrap 文件
- en: Download the source code
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载源代码
- en: Install with Bower
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Bower 安装
- en: Compile with Grunt
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Grunt 编译
- en: Of these options, the easiest option is the first one.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些选项中，最简单的选项是第一个。
- en: 'Open the layout file (`_Layout.cshtml` ) in the application that we created
    earlier. Include the CSS files at the top (within the `head` tag) and the scripts
    at the bottom (at the end of the `body` tag):'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们之前创建的应用程序中打开布局文件 (`_Layout.cshtml`)。在顶部（`head` 标签内）包含 CSS 文件，在底部（`body` 标签末尾）包含脚本：
- en: '[PRE3]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Installing with Bower
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Bower 安装
- en: 'Right click on the **Project** menu and select the **Manage Bower Packages**
    option from the **context** menu:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 右键点击**项目**菜单，从**上下文**菜单中选择**管理 Bower 包**选项：
- en: '![Installing with Bower](img/Image00128.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Bower 安装](img/Image00128.jpg)'
- en: Once you select **Manage Bower Packages** , you will be able to install or uninstall
    the Bower package just as you installed or uninstalled the `NuGet` package.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择**管理 Bower 包**，你就可以像安装或卸载 `NuGet` 包一样安装或卸载 Bower 包。
- en: '![Installing with Bower](img/Image00129.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Bower 安装](img/Image00129.jpg)'
- en: HTML doctype
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML doctype
- en: Bootstrap makes use of certain HTML elements and CSS properties that require
    the use of HTML 5 doctype. By default, the view that you create in ASP.NET Core
    will have HTML 5 doctype only. So, we do not need to do anything regarding this.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap 使用某些需要使用 HTML 5 doctype 的 HTML 元素和 CSS 属性。默认情况下，你创建的 ASP.NET Core
    视图将只有 HTML 5 doctype。因此，我们不需要对此做任何事情。
- en: '[PRE4]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let us make the following changes to our screen to make use of Bootstrap:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们对我们屏幕进行以下更改以使用 Bootstrap：
- en: Apply the CSS class `form-horizontal` to the form.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 CSS 类 `form-horizontal` 应用到表单上。
- en: For the label, input, and validation error spans use the CSS `col-sm-2` , `col-sm-4`
    , and `col-sm-3`  classes respectively
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于标签、输入和验证错误 span，分别使用 CSS 类 `col-sm-2`、`col-sm-4` 和 `col-sm-3`
- en: For labels, apply the CSS class `control-label`
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于标签，应用 CSS 类 `control-label`
- en: For input HTML elements, the `form-control` CSS class is applied
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于输入 HTML 元素，应用 `form-control` CSS 类
- en: For each of the form groups (containing the HTML elements such as label and
    input), apply the CSS class `form-group`
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于每个表单组（包含如标签和输入等 HTML 元素），应用 CSS 类 `form-group`
- en: For all validation error messages, apply the `text-danger` CSS class so that
    they will be shown in red
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于所有验证错误消息，应用 `text-danger` CSS 类，以便它们将以红色显示
- en: Apply the `table` , `table-bordered` CSS class to style the table
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用 `table` 和 `table-bordered` CSS 类来设置表格样式
- en: 'The following is the complete updated view code; we have used Bootstrap CSS
    classes to make our application look great:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是完全更新的视图代码；我们使用了 Bootstrap CSS 类来使我们的应用程序看起来很棒：
- en: '[PRE5]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'After making the preceding changes, when you run the application, your screen
    should look something like the following:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行上述更改后，当你运行应用程序时，你的屏幕应该看起来像以下这样：
- en: '![HTML doctype](img/Image00130.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![HTML doctype](img/Image00130.jpg)'
- en: 读累了记得休息一会哦~
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读累了记得休息一会哦~
- en: '**公众号：古德猫宁李**'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**公众号：古德猫宁李**'
- en: 电子书搜索下载
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子书搜索下载
- en: 书单分享
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 书单分享
- en: 书友学习交流
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 书友学习交流
- en: '**网站：**[沉金书屋 https://www.chenjin5.com](https://www.chenjin5.com)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**网站：**[沉金书屋 https://www.chenjin5.com](https://www.chenjin5.com)'
- en: 电子书搜索下载
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子书搜索下载
- en: 电子书打包资源分享
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子书打包资源分享
- en: 学习资源分享
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习资源分享
- en: Summary
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have learned about the role of HTML and CSS in any web application
    including the ASP.NET Core application. We have analyzed the needs of a frontend
    framework and discussed the features of Bootstrap—the most popular HTML, CSS,
    and JS framework for developing responsive, mobile-first projects on the web.
    We have discussed CSS and components available in Bootstrap for different types
    of HTML elements with examples. Finally, we have discussed how to incorporate
    Bootstrap in our ASP.NET Core application.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了 HTML 和 CSS 在任何 Web 应用程序中的作用，包括 ASP.NET Core 应用程序。我们分析了前端框架的需求，并讨论了
    Bootstrap 的特性——这是最受欢迎的 HTML、CSS 和 JS 框架，用于在 Web 上开发响应式、移动优先的项目。我们通过示例讨论了 Bootstrap
    中可用于不同类型 HTML 元素的 CSS 和组件。最后，我们讨论了如何将 Bootstrap 集成到我们的 ASP.NET Core 应用程序中。
