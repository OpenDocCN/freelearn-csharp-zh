- en: Documenting Requirements with Azure DevOps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure DevOps is the evolution of Visual Studio Team Services and there is a
    variety of new features that can help developers to document and organize their
    software. The purpose of this chapter is to present an overview of this tool provided
    by Microsoft.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Creating an Azure DevOps project using your Azure account
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the functionalities offered by Azure DevOps
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Organizing and managing requirements using Azure DevOps
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Presenting use cases in Azure DevOps
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter requires you to create a new free Azure account or use an existing
    one. The *Creating an Azure account* section of [Chapter 1](14b5c5da-4042-439e-9e5a-2e19ba4c4930.xhtml),
    *Understanding the Importance of Software Architecture*, explains how to create
    one.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Introducing Azure DevOps
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure DevOps is a Microsoft **Software as a S****ervice** (**SaaS**) platform
    that enables you to deliver continuous value to your customers. By creating an
    account there, you will be able to easily plan your project, store your code safely,
    test it, publish the solution to a staging environment, and then publish the solution
    to the actual production infrastructure.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Of course, Azure DevOps is a complete framework and the ecosystem that it provides
    for
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: software development is currently available. The automation of all the steps
    involved in software production ensures the continuous enhancement and improvement
    of an existing solution in order to adapt it to market needs.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: 'You can start the process moving in your Azure portal. If you don''t know how
    to create an Azure portal account, then please check [Chapter 1](14b5c5da-4042-439e-9e5a-2e19ba4c4930.xhtml),
    *Understanding the Importance of Software Architecture*. The steps to create an
    Azure DevOps account are quite simple:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: 'Select Create a resource and then DevOps Project:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0bb2e952-9c3d-4ec9-a014-b2ac7f3b9dc4.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
- en: 'As soon as you start the wizard for creating the project, you can choose how
    you want to deliver your system from several different platforms. This is one
    of the greatest advantages of Azure DevOps as you are not limited to Microsoft
    tools and products, but you can from all common platforms, tools, and products
    available on the market:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/88a26d74-f288-44f3-b0a9-d3d0a371f961.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
- en: 'The options available will depend on the platform chosen in the first step.
    In some cases, you can choose from several deployment options, as you can see
    in the following screenshot, which appears if you select the .NET platform:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/76e11a43-9b8e-4a88-8895-6950366f7ac7.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
- en: Once the setup is complete, you will be able to manage the project using the
    project portal according to the information you provided. It is worth mentioning
    that this wizard will create an Azure DevOps Service if you do not have one. The
    Azure DevOps organization is where you can organize all of you
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Azure DevOps projects. The whole process takes less than 20 minutes:'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Azure DevOps 项目。整个过程不到 20 分钟：
- en: '![](img/d23628fd-50d5-415b-8e82-7e5cda97f824.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d23628fd-50d5-415b-8e82-7e5cda97f824.png)'
- en: 'After that, you will be able to start planning your project. The following
    screenshot shows the page that appears once the Azure DevOps project creation
    is complete. In the remainder of this book, we will come back to this page several
    times to introduce and describe various useful features that ensure a faster and
    efficacious deployment:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，您将能够开始规划您的项目。以下截图显示了 Azure DevOps 项目创建完成后出现的页面。在本书的剩余部分，我们将多次回到这个页面，介绍和描述各种确保更快、更有效部署的有用功能：
- en: '![](img/7ba71792-4ed2-4066-b3e2-4341113b29fe.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7ba71792-4ed2-4066-b3e2-4341113b29fe.png)'
- en: As you can see from the preceding screenshot, the process for creating an Azure
    DevOps account and starting to develop the best-in-class DevOps tool is quite
    simple. It is worth mentioning that you can start using this fantastic tool at
    no cost, considering you have up to five developers on your team, plus any number
    of stakeholders.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个截图所示，创建 Azure DevOps 账户并开始开发一流的 DevOps 工具的过程非常简单。值得一提的是，如果您团队中有最多五名开发者，以及任何数量的利益相关者，您可以使用这款出色的工具而不需付费。
- en: Organizing your work using Azure DevOps
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Azure DevOps 组织您的工作
- en: DevOps is a **Continuous Integration/Continuous Deployment** (**CI/CD**) methodology,
    that is, a set of best practices on how to apply continuous improvements to a
    software application and how to deliver them to the production environment. Azure
    DevOps is a powerful tool whose range of applications encompasses all the steps
    involved in both the initial development of an application and in its subsequent CI/CD
    process.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 是一种 **持续集成/持续部署** (**CI/CD**) 方法论，即一套关于如何将持续改进应用于软件应用以及如何将其交付到生产环境中的最佳实践。Azure
    DevOps 是一款功能强大的工具，其应用范围涵盖了应用初始开发以及随后的 CI/CD 流程中的所有步骤。
- en: 'Azure DevOps contains tools for collecting requirements and for organizing
    the whole development process. They can be accessed by clicking the Boards menu
    in the Azure DevOps page and will be described in more detail in the next two
    sections:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 包含收集需求和组织整个开发流程的工具。您可以通过点击 Azure DevOps 页面中的“看板”菜单来访问它们，将在下一两个小节中更详细地描述：
- en: '![](img/aeaf61e6-9ec3-4739-836b-373b4b95bf2d.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/aeaf61e6-9ec3-4739-836b-373b4b95bf2d.png)'
- en: All other functionalities available in Azure DevOps are briefly reviewed in
    the following subsections. They will be discussed in detail in [Chapter 15](c707cf13-3616-4788-8f39-687bd1cb7c7b.xhtml),
    *Testing Your Code with Unit Test Cases and TDD*, to [Chapter 20](e61b3c5d-3abd-4442-9c9c-e12fd3acedcc.xhtml),
    *Automation for Software Testing*.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 中其他所有功能将在以下小节中简要介绍。它们将在第 15 章 [使用单元测试用例和 TDD 测试您的代码](c707cf13-3616-4788-8f39-687bd1cb7c7b.xhtml)到第
    20 章 [软件测试自动化](e61b3c5d-3abd-4442-9c9c-e12fd3acedcc.xhtml)中详细讨论。
- en: Azure DevOps repository
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure DevOps 仓库
- en: 'The Repos menu item gives you access to a Git repository in order to place
    the project code:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: “仓库”菜单项为您提供访问 Git 仓库的权限，以便放置项目代码：
- en: '![](img/a9b2f212-5f28-4b8d-8df0-08bce2ef787b.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a9b2f212-5f28-4b8d-8df0-08bce2ef787b.png)'
- en: 'You can connect to this repository from inside Visual Studio in a very simple
    way:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过非常简单的方式从 Visual Studio 内部连接到这个仓库：
- en: Start Visual Studio and ensure you are logged in to Visual Studio with the same
    Microsoft account used to define your DevOps project (or used to add you as a
    team member).
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Visual Studio 并确保您使用用于定义您的 DevOps 项目（或用于将您添加为团队成员）的相同 Microsoft 账户登录到 Visual
    Studio。
- en: Prepare a Visual Studio solution containing the Visual Studio projects you need
    in your application (further projects can be added during development) if your
    DevOps project repository is empty.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的 DevOps 项目仓库为空，请准备一个包含您应用程序中需要的 Visual Studio 项目（开发过程中可以添加更多项目）的 Visual
    Studio 解决方案。
- en: 'Select the Team Explorer tab and then click the connection button:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“团队资源管理器”选项卡，然后点击连接按钮：
- en: '![](img/c0fca1ee-8026-4583-9dcc-8f1579360299.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c0fca1ee-8026-4583-9dcc-8f1579360299.png)'
- en: Clicking the Connect... link of Azure DevOps, you will be driven to connect
    with one of your Azure DevOps projects.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 Azure DevOps 的“连接...”链接，您将被引导连接到您的其中一个 Azure DevOps 项目。
- en: 'Click the Team Explorer Home button. Now, you will see commands for performing
    Git operations and for interaction with other Azure DevOps areas:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“团队资源管理器主页”按钮。现在，您将看到执行 Git 操作以及与其他 Azure DevOps 区域交互的命令：
- en: '![](img/53bda670-8b1f-4794-b35c-451cbbad6a7a.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/53bda670-8b1f-4794-b35c-451cbbad6a7a.png)'
- en: Commit the solution you just created by clicking the Changes button if the Azure
    DevOps repository is empty and then following the subsequent instructions.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 Azure DevOps 仓库为空，请通过点击“更改”按钮提交您刚刚创建的解决方案，然后按照后续的指示操作。
- en: Click the Sync button to synchronize your local repository with the remote Azure
    DevOps repository. If the remote repository is empty and you just created a solution,
    this action will initialize the remote Azure DevOps repository with this solution;
    otherwise, this action will download the remote repository on your local machine.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“同步”按钮以同步您的本地仓库与远程 Azure DevOps 仓库。如果远程仓库为空且您刚刚创建了一个解决方案，此操作将使用此解决方案初始化远程
    Azure DevOps 仓库；否则，此操作将在您的本地机器上下载远程仓库。
- en: Once all team members have initialized both their local machine repositories
    and the Azure DevOps repository with the preceding steps, it is enough to open
    Visual Studio. The solution created in your local repository will appear in the
    bottom area of the Team Explorer window.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦所有团队成员都通过前面的步骤初始化了他们的本地机器仓库和 Azure DevOps 仓库，打开 Visual Studio 就足够了。您在本地仓库中创建的解决方案将出现在
    Team Explorer 窗口的底部区域。
- en: Click the window to open the solution on your local machine. Then, synchronize
    with the remote repository to ensure the code you are modifying is up to date.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击窗口以在您的本地机器上打开解决方案。然后，与远程仓库同步以确保您正在修改的代码是最新的。
- en: The Team Explorer menu enables you to execute most Git commands, to launch remote
    builds (Builds button) and to interact with other Azure DevOps areas (see, for
    instance, the Work Items button).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Team Explorer 菜单允许您执行大多数 Git 命令，启动远程构建（构建按钮）以及与其他 Azure DevOps 区域交互（例如，查看工作项按钮）。
- en: Package feeds
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 包源
- en: 'The Artifacts menu handles the software packages used by the project. There,
    you may define feeds for basically all types of packages such as NuGet, Node.js,
    and Python. Once in the Artifacts area, you may create several feeds by clicking
    the + New Feed link, where each feed can handle several kinds of packages:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '“工件”菜单处理项目使用的软件包。在那里，您可以定义基本上所有类型的包的源，如 NuGet、Node.js 和 Python。一旦进入工件区域，您可以通过点击“+新建源”链接创建多个源，其中每个源可以处理多种类型的包： '
- en: '![](img/18d082aa-6eee-4b29-b31a-60f26dfc9696.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/18d082aa-6eee-4b29-b31a-60f26dfc9696.png)'
- en: 'If you select the option to connect to packages from public sources, as a default,
    the feed connects to `npmjs`, `nuget.org`, and `pypi.org`. However, you can go
    to the upstream sources tab in the Feed settings section through the menu in the
    upper-right corner and remove/add package sources:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您选择从公共源连接到包的选项，默认情况下，源会连接到 `npmjs`、`nuget.org` 和 `pypi.org`。然而，您可以通过右上角的菜单进入“源设置”部分的“上游源”标签页来删除/添加包源：
- en: '![](img/9e8a421b-0634-4b20-99e4-679ef66afeae.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9e8a421b-0634-4b20-99e4-679ef66afeae.png)'
- en: 'The Connect to feed link of each feed shows a window that, for each package
    type, explains how to do the following things:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 每个源的“连接到源”链接会显示一个窗口，该窗口为每种包类型解释如何执行以下操作：
- en: Upload private packages to the feed. This way each team can use its private
    package's code base.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将私有包上传到源。这样，每个团队都可以使用其私有包的代码库。
- en: Connect to the feed to use its packages from Visual Studio. You should add all
    the project feeds to your Visual Studio feeds in order to also use the private
    team packages uploaded in the feed; otherwise, your local build will file.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过连接到源来使用 Visual Studio 中的其包。您应该将所有项目源添加到您的 Visual Studio 源中，以便也能使用源中上传的私有团队包；否则，您的本地构建将失败。
- en: 'Manage credentials to access the feed:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 管理访问源的凭据：
- en: '![](img/99c1a595-ddcf-42e3-8282-d14f45630f93.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/99c1a595-ddcf-42e3-8282-d14f45630f93.png)'
- en: Test plans
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试计划
- en: 'The Test Plans section allows you to define the test plans you want to use
    and their settings. It can be accessed through the Test Plans menu item:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 测试计划部分允许您定义您想要使用的测试计划和它们的设置。您可以通过测试计划菜单项访问它：
- en: '![](img/6857dc53-f333-4cb4-8ab5-24251e039eba.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6857dc53-f333-4cb4-8ab5-24251e039eba.png)'
- en: 'Here, you may define, execute, and track test plans made of the following:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以定义、执行和跟踪由以下内容组成的测试计划：
- en: Manual acceptance tests
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动验收测试
- en: Automatic unit tests
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动单元测试
- en: Load tests
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 负载测试
- en: 'Automatic unit tests must be defined in test projects contained in the Visual
    Studio solution and based on a framework such as NUnit, xUnit, and MSTest (Visual
    Studio has project templates for all of them). Test Plans gives you the opportunity
    to execute these tests on Azure and to define the following:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 必须在 Visual Studio 解决方案中包含的测试项目中定义自动单元测试，并基于如 NUnit、xUnit 和 MSTest（Visual Studio
    为它们都提供了项目模板）等框架。测试计划为您提供在 Azure 上执行这些测试的机会，并定义以下内容：
- en: A number of configuration settings
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一系列配置设置
- en: When to execute them
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时执行它们
- en: How to track them and where to report their results in the overall project documentation
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何跟踪它们以及在哪里在整体项目文档中报告结果
- en: For manual tests, you may define complete instructions for the operator, the
    environment in which to execute them (for example, an operating system), and where
    to report their results in the project documentation. You can also define how
    to execute load tests, how to measure results, and where to report them.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 对于手动测试，您可以定义操作员的完整说明、执行它们的执行环境（例如，操作系统），以及在哪里在项目文档中报告结果。您还可以定义如何执行负载测试、如何衡量结果以及在哪里报告它们。
- en: Pipelines
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管道
- en: 'Pipelines are automatic action plans that specify all steps from the code build
    until the software deployment is in production. They can be defined in the pipelines
    area, which is accessible through the Pipelines menu item:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 管道是自动行动计划，它指定了从代码构建到软件部署到生产中的所有步骤。它们可以在管道区域中定义，该区域可通过“管道”菜单项访问：
- en: '![](img/8d574ea9-3e7c-424a-9c24-ff9e19182ba8.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8d574ea9-3e7c-424a-9c24-ff9e19182ba8.png)'
- en: There, you can define a complete pipeline of tasks to execute alongside their
    triggering events, which encompasses steps such as code building, launching test
    plans, and what to do after the tests are passed.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在那里，您可以定义一个完整的任务管道，包括它们的触发事件，这包括代码构建、启动测试计划以及在测试通过后要执行的操作。
- en: 'Typically, after the tests are passed, the application is automatically deployed
    in a staging area where it can be beta-tested. You can also define the criteria
    for the automatic deployment in production. Such criteria include, but are not
    limited to, the following:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，在测试通过后，应用程序会自动部署到一个预发布区域，在那里可以进行beta测试。您还可以定义生产中自动部署的准则。这些准则包括但不限于以下内容：
- en: Number of days the application was beta-tested
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序进行beta测试的天数
- en: Number of bugs found during beta-testing and/or removed by the last code change
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在beta测试期间发现的错误数量以及/或最后代码更改中删除的错误数量
- en: Manual approval by one or more managers/team members
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一位或多位经理/团队成员的手动批准
- en: The criteria decision will depend on the way the company wants to manage the
    product that is being developed. You, as a software architect, have to understand
    that when it comes to moving code to production, the safer, the better.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 准则决策将取决于公司希望如何管理正在开发的产品。作为软件架构师，您必须理解，当涉及到将代码移至生产时，越安全越好。
- en: Managing system requirements in Azure DevOps
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Azure DevOps 中管理系统需求
- en: Azure DevOps enables you to document system requirements using *work items*.
    Work items are stored in your project as a piece of information that can be assigned
    to a person. They are classified into various types and may contain a measure
    of the development effort required, a status, and the development stage (iteration)
    they belong to.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 允许您使用 *工作项* 来记录系统需求。工作项作为信息存储在您的项目中，可以分配给个人。它们被分类为各种类型，可能包含所需开发工作的度量、状态以及它们所属的开发阶段（迭代）。
- en: In fact, DevOps methodology, as an Agile methodology, is made of several iterations
    and the whole development process is organized as a set of sprints. The work items
    available depends on the *Working Item Process* you select while creating the
    Azure DevOps project. The following subsections contain a description of the most
    common work item types.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，DevOps 方法论作为一种敏捷方法论，由多个迭代组成，整个开发过程被组织为一组冲刺。可用的工作项取决于在创建 Azure DevOps 项目时选择的
    *工作项流程*。以下小节包含了对最常见工作项类型的描述。
- en: Epics work items
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Epic 工作项
- en: Imagine you are developing a system made of various subsystems. Probably, you
    are not going to conclude the whole system in a single iteration. Therefore, we
    need an umbrella spanning several iterations to encapsulate all features of each
    subsystem. Each Epics work item represents one of these umbrellas that can contain
    several features to be implemented in various development iterations.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 想象你正在开发一个由各种子系统组成的系统。可能你不会在一个迭代中完成整个系统。因此，我们需要一个跨越几个迭代的总括来封装每个子系统的所有功能。每个史诗工作项代表这些总括中的一个，它可以包含在各个开发迭代中要实现的好几个功能。
- en: In the Epics work item, you can define the state and acceptance criteria as
    well as the start date and target date. Besides, you can also provide a priority
    and an effort estimate. All of this detailed information helps the stakeholders
    to follow the development process. This is really useful as a macro view of the
    project.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在史诗工作项中，你可以定义状态和验收标准，以及开始日期和目标日期。此外，你还可以提供优先级和努力估计。所有这些详细信息都有助于利益相关者跟踪开发过程。这作为一个项目的宏观视图是非常有用的。
- en: 'Epics are not available as a default. They must be enabled in the project''s
    Team Settings page, which can be reached by clicking the project settings link
    in the bottom-left corner of the project page and then selecting Team Settings:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 史诗不是默认可用的。必须在项目的团队设置页面中启用它们，该页面可以通过点击项目页面左下角的“项目设置”链接并选择“团队设置”来访问：
- en: '![](img/360da6d1-2fd9-4b0d-8fe1-5a31f7cb33af.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/360da6d1-2fd9-4b0d-8fe1-5a31f7cb33af.png)'
- en: Features work items
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 功能工作项
- en: All of the information that you provide in an Epics work item can also be placed
    in a Features work item. So, the difference between these two types of work items
    is not related to the kind of information they contain, but to their roles and
    the focus; your team will get to conclude them. Epics may span several iterations
    and are hierarchically above Features, that is, each Epics work items is linked
    to several children Features, while each Features work items must be implemented
    in a single iteration and is part of a single Epics work items.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你在史诗工作项中提供的所有信息也可以放置在功能工作项中。因此，这两种类型工作项之间的区别并不在于它们包含的信息类型，而在于它们的角色和焦点；你的团队将得出结论。史诗可能跨越几个迭代，并且在功能之上，也就是说，每个史诗工作项都与几个子功能工作项相关联，而每个功能工作项必须在单个迭代中实现，并且是单个史诗工作项的一部分。
- en: It is worth mentioning that all work items have sections for team discussions.
    There, you will be able to find a team member in the discussion area by typing
    the `@` character (like in several forum/social applications). Inside each work
    item, you can link and attach various information. You may also check the history
    of the current work item in a specific section.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，所有工作项都有团队讨论的部分。在那里，你可以通过输入`@`字符（就像在许多论坛/社交应用中一样）在讨论区域找到团队成员。在每个工作项内部，你可以链接和附加各种信息。你还可以在特定部分检查当前工作项的历史记录。
- en: Features work items are the places to start recording user requirements. For
    instance, you can write a Features work item called **Access Control** to define
    the complete functionally needed to implement the system access control.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 功能工作项是开始记录用户需求的地方。例如，你可以写一个名为**访问控制**的功能工作项来定义实现系统访问控制所需的所有功能。
- en: Product Backlog items/User Story work items
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 产品待办事项/用户故事工作项
- en: 'After selecting the *Working Item Process*, you will know which of these two
    work items is available. There are minor differences between them, but their purpose
    is substantially the same. They contain detailed requirements for the Features,
    described by the Features work items they are connected to. More specifically, each Product
    Backlog/User Story work item specifies the requirements of a single functionality
    that is a part of the behavior described in its father Features work items. For
    instance, in a Features of system access control, the maintenance of the users
    and the login interface should be two different User Stories/Product Backlog items.
    These requirements will guide the creation of other children work items:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择*工作项流程*之后，你将知道这两种工作项中哪一种可用。它们之间有一些细微的差别，但它们的目的基本上是相同的。它们包含详细的需求，这些需求由它们连接的功能工作项描述。更具体地说，每个产品待办事项/用户故事工作项指定了单个功能的需求，该功能是其父功能工作项中描述的行为的一部分。例如，在系统访问控制的功能中，用户维护和登录界面应该是两个不同的用户故事/产品待办事项。这些需求将指导创建其他子工作项：
- en: '**Tasks**: They are important work items that describe the job that needs to
    be done to meet the requirements stated in the father Product Backlog items/User
    Story work item. Task work items can contain time estimates that help team capacity
    management and overall scheduling.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务**：它们是重要的工作项，描述了为了满足父产品待办事项/用户故事工作项中声明的需求而需要完成的任务。任务工作项可以包含时间估计，这有助于团队容量管理和整体调度。'
- en: '**Test cases**: These items describe how to test the functionality described
    by the requirements.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试用例**：这些项目描述了如何测试需求中描述的功能。'
- en: The number of tasks and test cases you will create for each Product Backlog/User
    Story work item will vary according to the development and testing scenario you
    use.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 你将为每个产品待办事项/用户故事工作项创建的任务和测试用例的数量将根据你使用的开发和测试场景而有所不同。
- en: Book use case – presenting use cases in Azure DevOps
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 书籍用例 – 在 Azure DevOps 中展示用例
- en: 'This section clarifies the concepts exposed in the previous section with the
    practical example of the wwtravelclub. Considering the scenario described in [Chapter
    1](14b5c5da-4042-439e-9e5a-2e19ba4c4930.xhtml), *Understanding the Importance
    of Software Architecture*, we decided to define three Epics work items, as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 本节通过wwtravelclub的实际案例来阐明上一节中提出的概念。考虑到[第1章](14b5c5da-4042-439e-9e5a-2e19ba4c4930.xhtml)中描述的场景，即“理解软件架构的重要性”，我们决定定义三个史诗级工作项，如下所示：
- en: '![](img/4ffaa42d-4b11-498c-92a9-eb0ea4c4547f.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4ffaa42d-4b11-498c-92a9-eb0ea4c4547f.png)'
- en: 'The creation of these work items is quite simple:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 创建这些工作项非常简单：
- en: Inside each work item, link the different types of work items, as you can see
    in the following screenshot.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在每个工作项内部，链接不同类型的工作项，如下面的截图所示。
- en: 'It is really important to know that the connection between work items are really
    useful during software development. Hence, as a software architect, you have to
    provide this knowledge to your team and, more than that, you have to incentive
    them to make these connections:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 知道工作项之间的连接在软件开发中非常有用是非常重要的。因此，作为一名软件架构师，你必须向你的团队提供这方面的知识，而且更重要的是，你必须激励他们建立这些连接：
- en: '![](img/4b998f62-44ea-48a2-a493-54bbe32da6e4.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4b998f62-44ea-48a2-a493-54bbe32da6e4.png)'
- en: 'As soon as you create a Feature work item, you will be able to connect it to
    several Product Backlog work items that detail its specifications. The following
    screenshot shows the details of a Product Backlog work item:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你创建了功能工作项，你将能够将其连接到几个详细说明其规格的产品待办事项工作项。以下截图显示了产品待办事项工作项的详细信息：
- en: '![](img/64a16342-99a5-4d09-8844-cf33fbbd41fc.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/64a16342-99a5-4d09-8844-cf33fbbd41fc.png)'
- en: 'After that, Task and Test Case work items can be created for each Product Backlog
    work item. The user interface provided by Azure DevOps is really efficacious because
    it enables you to track the chain of functionalities and the relations among them:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，可以为每个产品待办事项工作项创建任务和测试用例工作项。Azure DevOps提供的用户界面非常有效，因为它允许你跟踪功能链及其之间的关系：
- en: '![](img/fe92bd07-a172-4c78-a547-e22c363404bd.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fe92bd07-a172-4c78-a547-e22c363404bd.png)'
- en: 'As soon as you complete the input for the Product Backlog and Tasks work items,
    you will be able to plan the project sprints together with your team. The plan
    view enables you to drag and drop Product Backlog work items to each planned Sprint:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你完成了产品待办事项和任务工作项的输入，你将能够与你的团队一起规划项目冲刺。计划视图允许你将产品待办事项工作项拖放到每个计划冲刺中：
- en: '![](img/af7d376f-1824-47cd-88d1-ce55c871c4e8.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/af7d376f-1824-47cd-88d1-ce55c871c4e8.png)'
- en: This is how these work items are created. Once you understand this mechanism,
    you will be able to create and plan any software project. It is worth mentioning
    that the tool itself will not solve problems related to team management. However,
    the tool is a great way to incentive the team to update the project status, so
    you can keep a clear vision of how the project is evolving.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工作项就是这样创建的。一旦你理解了这个机制，你将能够创建和规划任何软件项目。值得一提的是，工具本身并不能解决与团队管理相关的问题。然而，这个工具是激励团队更新项目状态的一个很好的方式，这样你可以清楚地了解项目是如何发展的。
- en: Summary
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter covered how you can create an Azure DevOps account for a software
    development project, and how to start managing your projects with Azure DevOps. It
    also gave a short review of all Azure DevOps functionalities, explaining how to
    access them through the Azure DevOps main menu. This chapter described in more
    detail how to manage system requirements and how to organize the job with various
    kinds of work items, and how to plan and organize sprints that will deliver Epics
    solutions with many Features.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了如何为软件开发项目创建Azure DevOps账户，以及如何使用Azure DevOps开始管理您的项目。它还简要回顾了所有Azure DevOps功能，解释了如何通过Azure
    DevOps主菜单访问它们。本章更详细地描述了如何管理系统需求，以及如何使用各种类型的工作项组织工作，以及如何规划和组织旨在交付具有许多功能的Epic解决方案的迭代。
- en: The next chapter discusses the different models of software architecture. We
    will also learn about the fundamental hints and criteria for choosing among the
    options offered by a sophisticated cloud platform such as Azure while developing
    the infrastructure.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将讨论软件架构的不同模型。我们还将了解在开发基础设施时，如何从复杂的云平台（如Azure）提供的选项中选择基本提示和标准。
- en: Questions
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Is Azure DevOps available only for .NET Core projects?
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure DevOps仅适用于.NET Core项目吗？
- en: May Azure DevOps trigger automatic builds after a commit in a specific branch? May
    Azure DevOps automatically trigger deployment in production?
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure DevOps能在特定分支提交后触发自动构建吗？Azure DevOps能自动触发生产环境的部署吗？
- en: What kind of test plans are available in Azure DevOps?
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure DevOps中可用的测试计划有哪些？
- en: Can DevOps projects use private NuGet packages?
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DevOps项目可以使用私有NuGet包吗？
- en: Why do we use work items?
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们为什么使用工作项？
- en: What is the difference between Epics and Features work items?
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Epic和功能工作项之间的区别是什么？
- en: What kind of relation exists between Tasks and Product Backlog items/User Story
    work items?
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任务与产品待办事项/用户故事工作项之间存在什么样的关系？
- en: Further reading
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Here are some books and links you may consider reading with a view to gathering
    more information about this chapter:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些书籍和链接，您可以考虑阅读，以收集更多关于本章信息：
- en: '[https://go.microsoft.com/fwlink/?LinkID=825688](https://go.microsoft.com/fwlink/?LinkID=825688)'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://go.microsoft.com/fwlink/?LinkID=825688](https://go.microsoft.com/fwlink/?LinkID=825688)'
- en: '[https://www.packtpub.com/virtualization-and-cloud/hands-devops-azure-video](https://www.packtpub.com/virtualization-and-cloud/hands-devops-azure-video)'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.packtpub.com/virtualization-and-cloud/hands-devops-azure-video](https://www.packtpub.com/virtualization-and-cloud/hands-devops-azure-video)'
- en: '[https://www.packtpub.com/application-development/mastering-non-functional-requirements](https://www.packtpub.com/application-development/mastering-non-functional-requirements)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.packtpub.com/application-development/mastering-non-functional-requirements](https://www.packtpub.com/application-development/mastering-non-functional-requirements)'
