- en: '*Chapter 3*: What Makes an Effective Solution Architect?'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we highlighted the importance of the different roles
    within a software development team. We also explored some key attributes to support
    you in assembling a powerful and successful team. *Why do you need to learn this?*
    Because you might hire the best candidates out there, but if you don't have a
    proper culture in place, and if the team members are not able to communicate with
    each other efficiently, you could end up losing the project or your client.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will primarily focus on the solution architect role. Additionally,
    we will elaborate on a set of personality traits that should empower you to lead
    effectively in today's digital world.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: An overview of solution architecture
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring the fundamental soft skills that every solution architect should have
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting to know some common pitfalls that should be avoided
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learning the difference between an enterprise architect, a technical architect,
    and a solution architect
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the end of this chapter, you will have an overview of what solution architecture
    is. Additionally, you will get to know core personality traits that you should
    acquire as a solution architect to empower your architectural thinking and leadership
    skills.
  prefs: []
  type: TYPE_NORMAL
- en: These personality traits are essential in order to become successful because
    the solution architect role has to deal with many aspects that are not technical,
    such as team building, negotiating with clients, resolving conflicts, improving
    business processes, and creating a culture of innovation and professionalism within
    the team.
  prefs: []
  type: TYPE_NORMAL
- en: What is solution architecture?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we dig deep into the personality traits of the solution architect, first,
    let's get to know what solution architecture is. **Solution architecture** is
    a set of activities that aims to explore and analyze a business problem based
    on predefined requirements and create an architecture design for the proposed
    technology solution that fits with the client's goals and needs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Typically, the solution architect should consider the following four key factors
    and related constraints when creating a balanced and effective solution and its
    architecture design:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Enterprise constraints**: Identify the enterprise constraints and goals behind
    building the product.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Stakeholders'' perspective**: Understand and analyze the requirements collected
    from the business stakeholders and power users.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Technology value**: Identify the value of the technology stack and components
    used in your solution that should comply with the enterprise strategic guidelines
    and best practices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Project constraints**: The solution architect should consider the project
    timeline and budget.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is an illustration that summarizes the different constraints that should
    be considered in your solution design:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.1: An ideal solution should consider these constraints](img/B17366_03_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.1: An ideal solution should consider these constraints'
  prefs: []
  type: TYPE_NORMAL
- en: '*So far, it looks pretty simple, right?* Solution architecture is the process
    of designing and managing the whole solution engineering, which is expected to
    solve a business problem by executing a list of practices. This should be accomplished
    by the solution architect before starting any development activity, and we will
    examine this in more detail later in this book.'
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's dive into some of the essential personality traits that a solution
    architect should have.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the personality traits and skills of an effective architect
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Being an effective solution architect can be both challenging and game-changing
    in today's rapidly changing and disruptive business world.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we'll take a look at some of the most important personality
    traits, soft skills, and qualities that are needed to become an efficient, practical,
    and business value-focused solution architect who can make a difference within
    a company.
  prefs: []
  type: TYPE_NORMAL
- en: Leading by example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Solution architects are responsible for *leading* all the architecture activities
    of a solution or a product. They should set the right direction for the team,
    enforce an innovative culture, and build an inspiring vision. One of the leadership
    skills that you should prove as a solution architect is to lead by exampleâ€”*walk
    the talk*. *So, what does that mean exactly?* Let''s imagine the following:'
  prefs: []
  type: TYPE_NORMAL
- en: There is the leader who asks people to stay late at work to solve problems but
    then leaves on time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are the managers who request that you reduce the amount of money spent
    on improving hardware or hiring new team members, but then buy themselves luxury
    office furniture.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There's a supervisor who asks his team to use their time wisely to be more productive
    but is then found to be spending a long time on social media during working hours.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Have you ever heard of these types of leaders?*'
  prefs: []
  type: TYPE_NORMAL
- en: For great leaders, actions speak louder than words. Nothing will kill the enthusiasm
    or motivation of a team faster than watching an incompetent leader say one thing
    and then do the opposite. It can be very disappointing, and it leads to low morale,
    which can be destructive for a team.
  prefs: []
  type: TYPE_NORMAL
- en: As a solution architect, you must know that you have a responsibility toward
    your team. They are closely watching every move you make because they are looking
    for guidance. You have to inspire them and push them to get the best outcome.
    The proper way to do this is by being a good example. Your actions must be consistent
    with what you say.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some ways that you can use to lead by example and win the trust of
    your team:'
  prefs: []
  type: TYPE_NORMAL
- en: Get your hands dirty and take responsibility by supporting your team during
    difficult times. Don't just sit back and tell them what to do.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Always apply the rules and standards that you set so that your team can follow
    you.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Empathy is essential; be emotionally sensitive to the feelings of your team
    members.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Take the time to make each individual feel special and important in front of
    the rest of the team and the entire organization.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Treat your team members the way you would like to be treated.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Not all team members are similar; challenge yourself to know them better, accept
    them for who they are, and respect their unique differences.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Listen to criticism because, sometimes, it can be constructive. Avoid being
    defensive when you do so.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interpersonal conflicts in the workplace can happen; you cannot avoid them.
    However, make sure you resolve them as quickly as possible.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Never take people for granted.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you walk the talk, you lead by showing your team members how to do things
    the right way, that is, you set a good example for them. In this way, you become
    a more effective leader.
  prefs: []
  type: TYPE_NORMAL
- en: Displaying outstanding communication skills
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the key competencies of a solution architect is having good communication
    skills, which are essential for building relationships. Remember that your role
    obliges you to negotiate with clients and resolve any conflicts with the team
    members. You must be a good listener, not only to respond but to also properly
    understand the needs of all parties. A lack of communication skills can create
    a serious bottleneck. However, on the contrary, being able to communicate effectively
    is a key factor in the success of a project and, therefore, the success of the
    solution architect.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some tips that you can use in your daily interactions with your team
    members to achieve effective communication:'
  prefs: []
  type: TYPE_NORMAL
- en: Show empathy because it creates mutual understanding and trust.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Give compliments to your team members, particularly during difficult discussions.
    Statements such as *I think what you are saying is great*, *I agree with you*,
    and *you did great work so far* will boost their motivation and improve the morale
    of the team.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Not all people will have the same opinion as you; be willing to respect the
    other person's opinion, and don't be rude or arrogant.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eye contact is important because it improves the quality of communication and
    most people consider it as a sign of trustworthiness. Try to look the other person
    in the eyes while having conversations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Respect each other's turn to speak and try your best to not interrupt.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition to these recommendations, try to have a clear direction in terms
    of how you want to manage a particular conversation with a team member or a client.
    Try to keep it direct; otherwise, it could end up being a useless argument.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows four steps that you can implement to achieve an
    effective and productive discussion:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.2: The steps to achieve a productive meeting](img/B17366_03_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.2: The steps to achieve a productive meeting'
  prefs: []
  type: TYPE_NORMAL
- en: '*Why is communication important in the workplace?* Let''s find out:'
  prefs: []
  type: TYPE_NORMAL
- en: Clear communication demonstrates your leadership abilities by describing your
    goals to the team. Additionally, it allows your workplace to become more collaborative
    and agile.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Effective communication has a significant impact on the productivity of the
    team because it keeps them engaged in important technical or non-technical decisions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It creates a positive work environment and improves the relationships that you
    have with clients and co-workers.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It boosts the productivity of the team and, therefore, increases the profit
    of the organization.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Communication skills are vital for conveying your ideas and vision to your team
    and clients. Remember that the greatest communication skill is listening to others,
    as that will help you to understand the situation and make proper decisions.
  prefs: []
  type: TYPE_NORMAL
- en: Possessing deep analytical skills
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The term *analytical* has become a buzzword in every senior tech job position.
    *So, what are analytical skills, and why are they essential for you as a solution
    architect?*
  prefs: []
  type: TYPE_NORMAL
- en: Analytical skills refer to how you investigate a particular problem or business
    process, collect and analyze all of the related information logically and thoughtfully
    by understanding how the different elements are connected, research the possible
    solutions, and then come up with an ideal solution for the situation.
  prefs: []
  type: TYPE_NORMAL
- en: Designing a solution is influenced by different factors; it requires a detail-oriented
    individual who possesses deep analytical skills with the ability to evaluate various
    aspects and deal with tasks that require analysis.
  prefs: []
  type: TYPE_NORMAL
- en: These are the skills that you need to find solutions to various problems and
    difficulties or to help your team members troubleshoot a problem they are facing
    by proposing the proper solution.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can develop your analytical skills by getting out of your comfort zone
    and starting to solve complex problems. Here are some of the core analytical skills
    that should be mastered by a solution architect:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Data analysis**: You must have the ability to analyze the data received,
    and identify patterns and trends that will support you in your decisions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Communication**: You must be a good communicator to explain your findings
    to your team, so the client can then describe your recommendations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Critical Thinking**: You must have the ability to analyze complex problems
    and evaluate the information you have collected to form a rational decision.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Creativity**: You should have the ability to go beyond the obvious solution
    in order to find the optimal one.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Research**: You must learn more about the problem you are trying to solve.
    You can do this by researching online articles and posts that are relevant and
    learning how other architects or competitors solved a particular problem. It might
    support you in brainstorming a possible solution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As a solution architect, you should possess solid analytical skills because
    they will help you to solve complex problems that might appear during the design
    or development of the solution.
  prefs: []
  type: TYPE_NORMAL
- en: Showcasing brilliant project and resource management skills
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Solution architects are not directly responsible for these two aspects. However,
    they are expected to focus on business results. Therefore, they are responsible
    for completing the project in the most efficient way by ensuring the following:'
  prefs: []
  type: TYPE_NORMAL
- en: The business goals of the client are being achieved.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The project is being implemented within the given timeframes and budget.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The team skills and assets are properly allocated and are being used efficiently
    to complete the project.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You are expected to intervene in the five major project management activities:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Project initiation**: This is after clarifying the project goals and scope.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Requirements gathering and planning**: This consists of developing a work
    breakdown structure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Project execution**: This is based on the produced schedule.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Performance monitoring**: This also includes managing change requests.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Project closeout**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is a graphic representation showing these major activities of project
    management:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.3: The five major activities of project management](img/B17366_03_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.3: The five major activities of project management'
  prefs: []
  type: TYPE_NORMAL
- en: 'The solution architect plays an important role in resource management, which
    is a critical part of project management. It is the process of planning and assigning
    resources efficiently to complete the project within the estimated time, budget,
    and scope, as defined at the earliest stage of the project. In software development,
    there are two types of resources and assets:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Intangible assets** include a variety of non-physical assets, such as staff
    skills, experience, company reputation, and time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tangible assets** are physical assets, such as equipment, materials, and
    investments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Having project and resource management skills is important for providing a strategic
    direction throughout the development process by making the right decisions whether
    they are technical or non-technical.
  prefs: []
  type: TYPE_NORMAL
- en: Exhibiting patience with others
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Patience* is a human strength. It is considered a tough skill to master; however,
    if you want to become an effective solution architect, you must have patience,
    particularly during a crisis. Being patient with others in the workplace is the
    ability to remain tranquil in the face of difficulties and react positively to
    your co-workers and clients.'
  prefs: []
  type: TYPE_NORMAL
- en: In our fast-moving world, tasks are expected to be completed instantaneously,
    and delays can create a stressful situation. For instance, your clients will want
    their projects to be delivered on time or your manager will be expecting a report
    that you assigned to someone in your team who didn't deliver on time. Think about
    clients who are continuously changing the requirements, and think about the co-workers
    who may have bad habits, who are hard to deal with, or who are hard to understand.
    All of these difficult circumstances are beyond your control, and they can make
    you instantly frustrated.
  prefs: []
  type: TYPE_NORMAL
- en: Losing patience with these people can complicate the situation. It could damage
    your relationships and leave a bad image of you.
  prefs: []
  type: TYPE_NORMAL
- en: Working collaboratively
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Building an architecture design and delivering a solution is a team effort.
    An effective architect can work collaboratively with all co-workers (including
    those who have different skillsets and expertise) with one goal in mind, which
    is to deliver the project efficiently and meet the client's targets.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take a look at the following reasons as to why collaboration is important:'
  prefs: []
  type: TYPE_NORMAL
- en: It helps you and the team to solve problems faster.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It boosts motivation and brings people closer together, which can improve retention
    rates.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It creates a learning and development environment, and, as a result, team members
    can learn from each other.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It creates a smoother workplace by removing constraints, enabling transparency
    between departments, and engaging team members in most of the decisions that are
    made in the project.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It enables a creative and innovative workplace where all members can share their
    ideas to innovate.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working collaboratively is of great importance for your role as a solution architect.
    This is because when you collaborate with your team, you ensure the delivery of
    not only good architecture but also a good quality product at the end of the development.
  prefs: []
  type: TYPE_NORMAL
- en: Demonstrating influencing and negotiation skills
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Strong influencing and negotiation skills are integral for the solution architect
    to resolve conflicts and develop win-win solutions. **Negotiating** is the ability
    to discuss a matter with a client or a team member and reach an agreement that
    is satisfactory for both of you. **Influencing** is a key part of a successful
    negotiation. It is the ability to negotiate and convince others so that they accept
    your suggestion.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some essential negotiation skills that will support you in becoming
    an effective negotiator:'
  prefs: []
  type: TYPE_NORMAL
- en: Align the negotiation flow with your strategic goals for the short term and
    the long term.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Before starting the negotiation, try to thoroughly prepare by collecting information
    about the people you are meeting with and the topics that you will negotiate.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prepare your **best alternative to a negotiated agreement** (**BATNA**). This
    is in case you do not reach an agreement in the negotiation at hand.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Have the ability to be rational by separating personal issues and negotiation
    issues. This is important to see the opportunities and reach the objectives of
    the negotiation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Know how to form coalitions by discussing your ideas with potential allies who
    share common interests with you and who can influence other people involved in
    the negotiation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build trust and reputation with the people you are negotiating with. You can
    do this by being respectful, transparent, and committed to your promises.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will always be in a situation where you need to influence the decision-making
    peers involved in the solution you are designing. Keep developing your negotiation
    skills to build solid relationships, resolve conflicts, and make great deals.
  prefs: []
  type: TYPE_NORMAL
- en: Possessing a wide range of technical expertise
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To be a true pillar of innovation, a solution architect should possess extensive
    technical expertise with the ability to consult management and engineering teams
    with technical recommendations. In particular, they need to be aware of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Software engineering and architectural design
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Information technology architecture, infrastructure, and cloud development
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Project management and product management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DevOps tools and practices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Business analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Breaking down problems efficiently
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A big problem is hard to deal with; sometimes, it will make you feel overwhelmed.
    Approach the problem with a positive attitude and make it easier on yourself and
    the team by breaking it down into smaller issues that are easier to solve than
    the original big one.
  prefs: []
  type: TYPE_NORMAL
- en: Good architects can also minimize the occurrence of problems and tackle them
    before they occur. This can be achieved by doing good risk analyses and by keeping
    an eye on the details.
  prefs: []
  type: TYPE_NORMAL
- en: Being pragmatic
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Every organization has its own set of standards, internal politics, deadlines,
    budget, and more. Good architects should be aware of the restrictions they might
    encounter during the implementation of a project. Therefore, they should deal
    with problems in a practical way, rather than by using an abstract theory that
    is not applicable in all cases. They should come up with realistic, timely, pragmatic,
    and efficient solutions that fit those restrictions. This is where decisions on
    business value-based architecture should be reached in order to optimize the company's
    **return on investment** (**ROI**).
  prefs: []
  type: TYPE_NORMAL
- en: So far, we have discussed some of the fundamental personality traits and key
    skills of the solution architect. In the next section, we will highlight a few
    common mistakes that you should deal with to avoid client dissatisfaction and
    any critical issues that could affect your project deliverables.
  prefs: []
  type: TYPE_NORMAL
- en: Taking a look at the common pitfalls for architects
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Too often, mistakes are learned about the hard way. In this section, we are
    going to highlight some traps that can affect the outcome of the solution architect:'
  prefs: []
  type: TYPE_NORMAL
- en: Avoid over-architecting the solution; for instance, by adding unnecessary layers
    and components to the solution, which can instead be replaced with simple classes.
    Over-architecting will increase the development activities and complicate the
    troubleshooting in the case of errors, which will decrease the achievements that
    your clients are looking for. Try to simplify your architecture and make it more
    aligned with the business requirements.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consider writing custom code instead of using ready-made and open-source frameworks
    or libraries. For instance, let's assume you need to build a responsive web solution;
    here, you have two options.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The first option is to reinvent the wheel and roll your own responsive framework.
    This option is costly since you need to develop the entire **CSS** and **JavaScript**
    from scratch. The second option is to use a popular open-source framework, such
    as **Bootstrap**, to build the responsive UI, which is a less costly option.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*Which option should you choose?* Of course, in such a situation the best option
    is to use a reliable open-source framework to shorten the development time, to
    avoid errors that you will face if you develop your custom framework, and to make
    use of the powerful capabilities that are provided by the open-source framework.
    You need to learn when you should develop your own code and when to use an open-source
    framework by deciding which one is the best option for your solution.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Jumping into development before planning or setting up the design will put the
    project deadlines, budgets, and goals at risk. Having a proper plan and design
    before starting the development is a must. It structures the work of your team
    members and sets expectations that should be aligned with the requirements. No
    matter how small or large the project you are working on, you should always follow
    the SDLC phases and adopt the output of each phase in order to move to the next
    one until you deliver the product.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Not structuring the code in a way to make it reusable and extendable will result
    in you having a lot of repetitive code in many locations across the software,
    which performs the same task. This will increase the size of the source code and
    will complicate the maintenance tasks. This is because the code will become difficult
    to read and you might need to fix the same defect in many places. Try to keep
    your code **DRY** (**Don't Repeat Yourself**), create components, make your software
    modular, and apply **Object-Oriented Programming** (**OOP**) when required by
    creating abstract classes and interfaces.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Developing the product without paying attention to security will deliver a software
    solution that is open to security vulnerabilities. Security attacks can damage
    the system and its associated database, which can cause downtime and your client
    could lose money. Securing your software solution is no longer an afterthought
    but a foremost one. Paying attention to security during the design and development
    of the software helps you avoid malware and prevent hacking attempts.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid relying on traditional development methodologies to build software rather
    than applying Agile software development methodology. Agile methodology is widely
    used by software development companies so that they can manage their projects
    effectively. It is a modern practice that adds value to your team and to the solution
    you are developing.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Agile is an evolutionary process that promotes a high level of collaboration
    between team members from different departments by bringing them all together
    to deliver the project. It increases the productivity of the team, allowing for
    multiple deliverables in a short time. Additionally, it allows clients to closely
    contribute to each stage by providing their feedback, which prevents any disappointments
    at the end of the project.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Avoid not paying enough attention to code optimization and performance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid not spending enough time on **User Acceptance Testing** (**UAT)**. All
    types of testing are very important in order to deliver high-quality products.
    UAT is a type of testing performed by the client to decide whether the requirements
    have been met. This is before moving to a production/live environment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Without a proper UAT phase, the product could be rejected by end users for many
    reasons, such as bad performance, missing features, and the product being buggy.
    To avoid this situation, make sure you prepare, in advance, the test cases based
    on the use cases that were agreed with the client. These test cases will be used
    in the UAT phase to verify every single functionality.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Avoid not allocating team members with the right skillsets that should be aligned
    with the project needs. Remember that success isn't possible without the right
    team members.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid the a of good planning by having an unrealistic timeline and budget and
    finding out about this at a late stage of the project. This can create conflicts,
    especially if you are working on multiple projects that are running in parallel.
    You must have a realistic plan with clear deadlines and goals; this should be
    identified during the planning phase of the project. You can apply the Agile methodology
    to avoid this pitfall.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These various pitfalls can occur regularly and probably in conjunction with
    each other, which could affect the quality of your deliverables and the reputation
    you have earned with your clients. We have described a few of the many pitfalls
    that you might experience. Being aware of these pitfalls will prepare you so that
    you can overcome them. As a solution architect, you need to constantly solve problems,
    try new things, and help align a project with the company vision and values.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will explore the difference between the enterprise architect,
    the technical architect, and the solution architect.
  prefs: []
  type: TYPE_NORMAL
- en: The enterprise architect versus the technical architect versus the solution
    architect
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are three different architecture-related roles in the information technology
    industry. Each of these roles is equally essential in the software development
    life cycle and cannot be replaced by any other positions:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Enterprise architect**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Technical architect**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Solution architect**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now, let''s learn more about the difference between these roles:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.4: The difference between enterprise architects, technical architects,
    and solution architects](img/B17366_03_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.4: The difference between enterprise architects, technical architects,
    and solution architects'
  prefs: []
  type: TYPE_NORMAL
- en: '**Enterprise architects** are responsible for collaborating with key stakeholders
    to define business goals and establishing the entire enterprise infrastructure
    (such as software and hardware), which supports the needs of the organization.
    They mainly focus on implementing and managing complex IT solutions that target
    critical and strategic business goals at the same time.'
  prefs: []
  type: TYPE_NORMAL
- en: Meanwhile, **solution architects** have a practical role to play within the
    organization. They collect the business requirements, then analyze them, and finally,
    turn them into a new software solution that uses the company's standards and technology
    stack.
  prefs: []
  type: TYPE_NORMAL
- en: '**Technical architects** mainly oversee the technical architecture of the solution
    and the core technology used in the implementation. Their main responsibility
    is to provide technical leadership to the development team and decide on every
    technical aspect of the software solution.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram depicts the structure of the enterprise architecture
    stack in an enterprise that provides digital transformation services:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.5: The enterprise architecture stack](img/B17366_03_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.5: The enterprise architecture stack'
  prefs: []
  type: TYPE_NORMAL
- en: By having a solution architect onboard, companies are able to primarily create
    a solid structure that aligns their corporate vision and goals with various technologies.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we provided a quick introduction to what solution architecture
    is. Then, we learned about some essential personality traits and soft skills that
    are required to become an effective solution architect. Later in this chapter,
    we highlighted few common pitfalls that should be avoided during the project development
    life cycle. Finally, you learned about the differences between enterprise architects,
    technical architects, and solution architects.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will dig deep into the principles of solution architecture,
    and you will learn about the seven popular UML diagrams that will help you to
    model your solution architecture.
  prefs: []
  type: TYPE_NORMAL
