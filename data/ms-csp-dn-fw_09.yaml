- en: Chapter 9. Architecture
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。架构
- en: This chapter and the next one are dedicated to different views of application
    development. In [Chapter 10](part0055.xhtml#aid-1KEEU1 "Chapter 10. Design Patterns"),
    *Design Patterns*, we will cover design patterns, good practices, and different
    solutions provided by the theorists about them. However, in this chapter, our
    goal is the structure of the application itself and the tools available its construction.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章和下一章致力于不同的应用程序开发视角。在[第10章](part0055.xhtml#aid-1KEEU1 "第10章。设计模式") *设计模式* 中，我们将涵盖设计模式、最佳实践以及理论家关于它们的提供解决方案。然而，在本章中，我们的目标是应用程序本身的架构及其构建可用的工具。
- en: In this chapter, first, we'll recommend a very useful guide to help you in the
    selection of the model to be used, depending on the application you have to build;
    and we'll go on to the process itself, as recommended by Microsoft Solutions Framework
    and its Governance Model. Security planning and design should also be considered
    by creating a *Threat Model*, addressing security scenarios.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，首先，我们将推荐一个非常有用的指南，帮助您根据您必须构建的应用程序选择要使用的模型；然后，我们将继续按照微软解决方案框架及其治理模型推荐的过程本身。还应通过创建*威胁模型*来考虑安全规划和设计，解决安全场景。
- en: To adequately build the different deliverables that the application's life cycle
    requires, we'll use Visio and check how this tool can be the perfect complement
    to the application's architect team, with all types of templates to help in the
    process.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了充分构建应用程序生命周期所需的不同可交付成果，我们将使用Visio，并检查这个工具如何成为应用程序架构团队的完美补充，提供各种模板以帮助这个过程。
- en: Then, in the area of development, testing, and deployment, we'll dig into Visual
    Studio Enterprise and learn how to reverse-engineer code and generate code maps
    and diagrams and its support for UML.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在开发、测试和部署领域，我们将深入研究Visual Studio Enterprise，学习如何逆向工程代码、生成代码地图和图表，以及它对UML的支持。
- en: Finally, we'll cover some aspects related to the final deployment phase and
    the different solutions at our disposal with the current tools.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将涵盖一些与最终部署阶段相关的方面，以及当前工具提供的不同解决方案。
- en: 'Altogether, in this chapter, we will discuss following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，在本章中，我们将讨论以下主题：
- en: The election of an architecture
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 架构的选择
- en: The role of Visio
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visio的作用
- en: The database design
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库设计
- en: Visual Studio architecture, testing, and analysis tools
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visual Studio架构、测试和分析工具
- en: The election of an architecture
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 架构的选择
- en: The first problem that arises when a new application is projected has much to
    do with the election of the model and the tools and artifacts that will better
    suit our needs and requirements.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个新应用程序被规划时出现的第一个问题与模型的选择以及将更好地满足我们需求和要求的工具和工件有很大关系。
- en: Microsoft published *.NET Technology Guide for Business Applications* in 2013,
    authored by Cesar de la Torre and David Carmona (both senior program managers
    at Microsoft/Redmond) to provide its customers with a vision about the principles
    and restrictions to be considered when selecting a model for an application. You
    can freely download it at [https://blogs.msdn.microsoft.com/microsoft_press/2013/11/13/free-ebook-net-technology-guide-for-business-applications/](https://blogs.msdn.microsoft.com/microsoft_press/2013/11/13/free-ebook-net-technology-guide-for-business-applications/).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 微软于2013年发布了*.NET技术指南：商业应用程序*，由Cesar de la Torre和David Carmona（均为微软/雷德蒙德的高级项目经理）撰写，旨在为其客户提供在选择应用程序模型时需要考虑的原则和限制的视角。您可以在[https://blogs.msdn.microsoft.com/microsoft_press/2013/11/13/free-ebook-net-technology-guide-for-business-applications/](https://blogs.msdn.microsoft.com/microsoft_press/2013/11/13/free-ebook-net-technology-guide-for-business-applications/)免费下载。
- en: In summary, the guide offers an exhaustive tour of all the different scenarios
    that developers might face and details the pros and cons that you should consider
    before deciding which tools and technologies are adequate for your business problem.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，该指南全面介绍了开发者可能遇到的所有不同场景，并详细说明了在决定哪些工具和技术适合您的业务问题之前应考虑的利弊。
- en: The Microsoft platform
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 微软平台
- en: 'Once this selection is made, you can dig into **Application Lifetime Management**
    (**ALM**). So, what''s the path to follow in order to get to a happy end? Consider
    that even today, some facts reflected in statistics seem frightening:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦做出选择，您就可以深入研究**应用程序生命周期管理**（**ALM**）。那么，通往幸福结局的道路是什么？考虑到即使今天，一些反映在统计数据中的事实似乎令人恐惧：
- en: 'One out of six IT projects ends up having an average cost of 200% over the
    projected target and a schedule delay of 70% (source*: Harvard Business Review*:
    [https://hbr.org/2011/09/why-your-it-project-may-be-riskier-than-you-think/ar/1](https://hbr.org/2011/09/why-your-it-project-may-be-riskier-than-you-think/ar/1))'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 六分之一的IT项目最终成本平均超过预期目标的200%，并且延期70%（来源*：Harvard Business Review*：[https://hbr.org/2011/09/why-your-it-project-may-be-riskier-than-you-think/ar/1](https://hbr.org/2011/09/why-your-it-project-may-be-riskier-than-you-think/ar/1)）
- en: 'Economy losses just in the United States are estimated at $50-$150 billion
    per year due to different types of failed IT projects (source: *Gallup Business
    Review*: [http://www.gallup.com/businessjournal/152429/cost-bad-management.aspx#1](http://www.gallup.com/businessjournal/152429/cost-bad-management.aspx#1))'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅在美国，由于不同类型的失败的IT项目，经济损失估计每年为500亿至1500亿美元（来源：*Gallup Business Review*：[http://www.gallup.com/businessjournal/152429/cost-bad-management.aspx#1](http://www.gallup.com/businessjournal/152429/cost-bad-management.aspx#1)）
- en: 'Fewer than a third of all projects were successfully completed on time and
    on the budget over the past year (source: *Standish Group*: [https://www.versionone.com/assets/img/files/CHAOSManifesto2013.pdf](https://www.versionone.com/assets/img/files/CHAOSManifesto2013.pdf))'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过去一年中，所有项目中有不到三分之一的成功按时并在预算内完成（来源：*Standish Group*：[https://www.versionone.com/assets/img/files/CHAOSManifesto2013.pdf](https://www.versionone.com/assets/img/files/CHAOSManifesto2013.pdf)）
- en: With these facts in mind, we need to explore how to properly manage a new project
    with some confidence and within the schedule and target that we initially foresaw.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这些事实，我们需要探索如何在有信心的情况下，在最初预见的范围内和时间内正确管理一个新的项目。
- en: A universal platform
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通用平台
- en: On one hand, we count on a complete set of tools and technologies (what we understand
    by the development platform) that allow any developer to build applications for
    any type of model, platform, or technology.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一方面，我们依赖一套完整的工具和技术（我们所说的开发平台），这允许任何开发者为任何类型的模型、平台或技术构建应用程序。
- en: This universal offer is even clearer now that it was in the Guide's publication,
    given the new options around the Universal Windows Platform and .NET Core (which
    we've already mentioned in this book and will see in more detail in the final
    chapter).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 由于现在围绕通用Windows平台和.NET Core的新选项，这个通用报价现在比在指南的出版时更加清晰（我们已经在本书中提到，将在最后一章中更详细地了解）。
- en: In addition, ASP.NET Core, and the rest of the initiatives related to Node.js,
    Apache Cordova, Linux support in Azure, SQL Server support in Linux, Office for
    Mac OS, and even the recent Visual Studio for Mac, present a vast panorama of
    opportunities for developers, which extends beyond Windows and its related technologies.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，ASP.NET Core以及与Node.js、Apache Cordova、Azure中的Linux支持、Linux中的SQL Server支持、Mac
    OS中的Office以及最近的Visual Studio for Mac相关的其他倡议，为开发者提供了广阔的机遇全景，这些机遇超越了Windows及其相关技术。
- en: 'The next diagram was officially published by Microsoft and reviewed in detail
    by several evangelists, showing the continuous growth in the scope of the Microsoft
    Development ecosystem:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个图表是由微软正式发布并由几位传教士详细审查的，显示了微软开发生态系统范围的持续增长：
- en: '![A universal platform](img/image00596.jpeg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![通用平台](img/image00596.jpeg)'
- en: 'We saw in this book that .NET has kept evolving since the beginning, and now,
    it provides a state-of-the-art developing experience no matter what the type of
    application to be developed is, or whether we are coding for the server or the
    client:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们看到了.NET自始至终都在不断进化，现在，无论要开发的应用程序类型是什么，或者我们是在为服务器还是客户端编码，它都提供了最先进的开发体验：
- en: On the server side, you can program cloud services or on-premise services equally
    well, using C#, or you can use Node.js as a backend, as we saw in the previous
    chapter. The location of the server is also independent since everything you install
    and deploy on your server is also installable and deployable in Azure.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在服务器端，你可以用C#编写云服务或本地服务，或者你可以像我们在上一章中看到的那样使用Node.js作为后端。服务器位置也是独立的，因为你服务器上安装和部署的任何东西都可以在Azure上安装和部署。
- en: 'Also, with the new ASP.NET CORE version, you can deploy your applications in
    two ways: using `Microsoft.AspNetCore.Server.WebListener` (which is Windows-only)
    or with `Microsoft.AspNetCore.Server.Kestrel`, which is cross-platform and can
    work in any host.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此外，随着新的ASP.NET CORE版本，你可以以两种方式部署你的应用程序：使用`Microsoft.AspNetCore.Server.WebListener`（仅限Windows）或使用`Microsoft.AspNetCore.Server.Kestrel`，它是跨平台的，可以在任何主机上运行。
- en: On the client side, you can build applications for the desktop either using
    Windows Forms, Windows Presentation Foundation, or even HTML5 + CSS3 + JavaScript
    for browser based solutions inside or outside Microsoft devices.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在客户端，你可以使用Windows Forms、Windows Presentation Foundation，甚至HTML5 + CSS3 + JavaScript为基于浏览器的解决方案构建桌面应用程序，无论是在微软设备内部还是外部。
- en: The second option is now empowered by the excellent support that Visual Studio
    offers for applications for Apache/Cordova and/or Xamarin as mobile solutions
    that run anywhere.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二种选择现在得到了Visual Studio对Apache/Cordova和/或Xamarin作为移动解决方案的出色支持，这些解决方案可以在任何地方运行。
- en: And, of course, this is just a rough view of the large amount of possibilities
    now available in the platform, which keeps on growing.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这只是对现在平台中大量可能性的粗略看法，这些可能性还在不断增长。
- en: The MSF application model
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MSF应用模型
- en: 'Microsoft Solutions Framework is, as defined by Wikipedia:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 微软解决方案框架，如维基百科所定义：
- en: '"Microsoft Solutions Framework (MSF) is a set of principles, models, disciplines,
    concepts, and guidelines for delivering information technology solutions from
    Microsoft. MSF is not limited to developing applications only, it is also applicable
    to other IT projects like deployment, networking or infrastructure projects. MSF
    does not force the developer to use a specific methodology (Waterfall, Agile)
    but lets them decide what methodology to use."'
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “微软解决方案框架（MSF）是一套原则、模型、学科、概念和指南，用于交付微软的信息技术解决方案。MSF不仅限于开发应用程序，也适用于其他IT项目，如部署、网络或基础设施项目。MSF不强迫开发者使用特定的方法论（瀑布、敏捷），而是让他们决定使用哪种方法论。”
- en: So, MSF sits on top of any methodology and recommends what to do in all phases
    of ALM. It has been around for four versions since its creation, the fourth being
    the latest revision.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，MSF位于任何方法论之上，并推荐在ALM的所有阶段应该做什么。自其创建以来，已经经历了四个版本，第四个版本是最新的修订版。
- en: 'The two models defined by MSF are as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: MSF定义的两个模型如下：
- en: The **Team Model**, which deals with the people who compound the development
    and management of the project, and their responsibilities and operations
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**团队模型**，它涉及组成项目开发和管理的个人，以及他们的责任和操作'
- en: The **Governance Model**, previously called the **Process Model**, which describes
    the different phases to pass through when building a project, and that includes
    five or six phases depending on the version to be used, going from the first steps
    to the final implementation and deployment (and even further)
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**治理模型**，之前称为**流程模型**，描述了在构建项目时需要经历的不同阶段，这包括根据使用的版本，从第一步到最后实施和部署（甚至更远）的五个或六个阶段。'
- en: 'It also defines three disciplines or sets of tasks to be performed and guides
    to follow in relation to the project''s completion. These disciplines are Project
    Management, Risk Management, and Readiness Management. The official Microsoft
    documentation on the ALM offers a clear schema of these concepts:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 它还定义了三个学科或要执行的任务集，并指导如何与项目的完成相关联。这些学科是项目管理、风险管理以及就绪管理。官方微软关于ALM的文档提供了这些概念的清晰架构：
- en: '![The MSF application model](img/image00597.jpeg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![MSF应用模型](img/image00597.jpeg)'
- en: Let's review the most important keys of these models and how they explain and
    propose well-defined procedures and practices along the ALM.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾这些模型最重要的关键点以及它们如何解释和提出在ALM中沿用的明确程序和实践。
- en: The Team Model
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 团队模型
- en: The Team Model is based on a schema that defines the different roles you can
    assign to the development team.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 团队模型基于一个架构，该架构定义了你可以分配给开发团队的不同角色。
- en: 'Microsoft proposes a new Team Model, as opposed to the classical Hierarchical
    Model, in order to avoid its typical drawbacks, which summarizes in several aspects:
    communication overhead, misunderstanding from non-direct contacts, lack of clarity
    in team roles and responsibilities, detached members, and process overheads.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 微软提出了一种新的团队模型，与经典的层次模型相反，以避免其典型的缺点，这些缺点可以总结为几个方面：通信开销、非直接接触导致的误解、团队角色和责任不明确、成员疏离以及流程开销。
- en: MSF proposes, in turn, that the Team Model be made up of a *team of peers*,
    whose members relate to each other as equals and know clearly which responsibility
    every member owns and which decisions are based on consensus.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: MSF进而提出，团队模型应由一个*同侪团队*组成，其成员彼此平等相待，并清楚地知道每个成员的责任以及哪些决策是基于共识的。
- en: The Team Model gives all members an equally important role in the final success
    of the project. In this way, many of the unclear responsibilities and vague definitions
    that are common to other Project Management solutions are suitably addressed.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 团队模型赋予所有成员在项目最终成功中的同等重要角色。以这种方式，许多在其他项目管理解决方案中常见的模糊责任和含糊定义都得到了适当的解决。
- en: 'In the next graphic, you can see how the authors and evangelists of the official
    Microsoft course on MSF organize these roles around the concept of a Team of Peers:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一张图中，您可以看到官方微软MSF课程作者和传道者如何围绕“同伴团队”的概念组织这些角色：
- en: '![The Team Model](img/image00598.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![团队模型](img/image00598.jpeg)'
- en: As you can see in the official schema, there are seven roles—all declared of
    having equal importance. Note, however, that for small teams, the same person
    might appear in more than one role.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在官方架构中可以看到的，共有七个角色——所有角色都被声明为具有同等重要性。请注意，然而，对于小型团队，同一个人可能扮演多个角色。
- en: 'In summary, the main responsibilities of each role are as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，每个角色的主要职责如下：
- en: '**Product management**: Be the contact with the customer, guaranteeing its
    satisfaction and serving as the voice of the customer for the Program management
    role.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**产品管理**：作为与客户的联系，保证其满意度，并作为项目管理角色的客户声音。'
- en: 'The functional areas for this role are:'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该角色的功能领域包括：
- en: Marketing/corporate communications
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 市场营销/企业沟通
- en: Business analysis
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 业务分析
- en: Product planning
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品规划
- en: '**Program management**: Be in charge of managing the project''s constraints,
    and be the voice of the team with product management.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目管理**：负责管理项目的限制，并作为产品管理角色的团队声音。'
- en: 'Overall, the functional areas should be:'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 总体而言，功能领域应该是：
- en: Project management
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目管理
- en: Program management
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目管理
- en: Resource management
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源管理
- en: Process assurance
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流程保证
- en: Project quality management
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目质量管理
- en: Project operations
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目运营
- en: '**Architecture**: The goal is to design the solution in a way as per the business
    goals without forgetting the project''s limitations (the budget, schedule, and
    so on).'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**架构**：目标是按照业务目标设计解决方案，同时不忘项目的限制（预算、时间表等）。'
- en: 'The functional areas of this role are mainly these two:'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该角色的功能领域主要是这两个：
- en: Solution architecture
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案架构
- en: Technical architecture
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术架构
- en: '**Development**: Generate code, agreeing with the project specifications, style
    indications, schedule milestones, and so on.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开发**：生成代码，同意项目规范、风格指示、时间表里程碑等。'
- en: 'The functional areas in this case as follows:'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这种情况下，功能领域如下：
- en: Solution development
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案开发
- en: Technology consulting
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术咨询
- en: '**Testing**: This is to take care of testing when all the issues are correctly
    addressed.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试**：这是在所有问题都得到正确解决时负责测试。'
- en: 'In general, four aspects of testing are considered critical (in different scenarios):'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通常，测试的四个方面被认为是关键的（在不同场景中）：
- en: Regression testing
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回归测试
- en: Functional testing
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 功能测试
- en: Usability testing
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可用性测试
- en: System testing
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统测试
- en: '**User experience**: This is understood as another form of testing and should
    improve the user experience and performance.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户体验**：这被视为另一种测试形式，应该改善用户体验和性能。'
- en: 'Here, the goals are closer to the user interaction:'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里，目标更接近用户交互：
- en: Accessibility
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可访问性
- en: Internationalization
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 国际化
- en: Technical support communications
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术支持沟通
- en: Training
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 培训
- en: Usability
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可用性
- en: User interface design
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户界面设计
- en: '**Release operations**: All operations require satisfactory installation, plus
    giving hints to the team with respect to future releases.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布操作**：所有操作都需要满意的安装，并向团队提供有关未来发布的提示。'
- en: 'In this final phase, the functional tasks are mainly as follows:'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这个最终阶段，功能任务主要包括以下内容：
- en: Accessibility
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可访问性
- en: Internationalization
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 国际化
- en: Technical support communications
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术支持沟通
- en: Training
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 培训
- en: Usability
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可用性
- en: User interface design
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户界面设计
- en: 'The way the Team Model is established, however, makes some roles incompatible.
    This depends on the type of responsibilities that a role owns because some of
    them are considered opposite in nature. The following graphic shows this situation
    in a table:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，团队模型的建立方式使得某些角色不兼容。这取决于角色所承担的责任类型，因为其中一些被认为在本质上是对立的。以下图表以表格形式展示了这种情况：
- en: '![The Team Model](img/image00599.jpeg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![团队模型](img/image00599.jpeg)'
- en: This is the case, for instance, with Program Management because the type of
    relations you carry on is, by nature, incompatible with Product Management (mainly
    responsible for the team). The most irreconcilable of all roles is the developer,
    which is—basically—incompatible with any other.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，项目管理就是这种情况，因为你所进行的关系类型本质上与产品管理（主要负责团队）不兼容。所有角色中最不可调和的是开发者，基本上与任何其他角色都不兼容。
- en: The Governance Model
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 治理模型
- en: In brief, the authors of MSF define project governance as the set of tools,
    guides, and techniques, which provide enough oversight, process guidance, and
    rigor to efficiently and effectively use project resources and deliver a solution.
    All this happens while handling trade-off patronage decisions and balancing adherence
    to a set of potentially changing project constraints.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，MSF的作者将项目管理定义为一系列工具、指南和技术，这些工具、指南和技术提供了足够的监督、流程指导和严谨性，以有效地使用项目资源并交付解决方案。所有这些都在处理权衡资助决策和平衡对一系列可能变化的项目的约束的遵守中发生。
- en: 'It deals with the process of building the application, and it''s traditionally
    divided into five or six phases depending on the model to be used. In the latest
    version (4.0), the schema presented by the Microsoft documentation is as follows:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 它涉及构建应用程序的过程，并且根据所使用的模型传统上分为五个或六个阶段。在最新版本（4.0）中，Microsoft文档中提出的方案如下：
- en: '![The Governance Model](img/image00600.jpeg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![治理模型](img/image00600.jpeg)'
- en: 'As you see, five phases are considered: **Envision**, **Plan**, **Build**,
    **Stabilize**, and **Deploy**. The transition from one phase to another takes
    place when you hit a milestone that assumes the existence of a set of deliverables
    approved by all members of the team.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，有五个阶段被考虑：**愿景**、**规划**、**构建**、**稳定**和**部署**。从一个阶段过渡到另一个阶段发生在你达到一个里程碑时，这个里程碑假定存在一套由团队所有成员批准的可交付成果。
- en: 'The main goals of these steps are as follows:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤的主要目标如下：
- en: '**Envision**: Here, the goal is to define a clear comprehension of what is
    required within the context of project constraints (the initially mentioned Guide
    could be helpful here as well). Also, the documentation states that it supposes
    to assemble the necessary team to envisage solutions with options and approaches
    that best meet the needs while optimally satisfying constraints.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**愿景**：在这里，目标是明确了解在项目约束的背景下需要什么（最初提到的指南在这里也可能很有帮助）。此外，文档还指出，它假设要组建必要的团队，以选择最佳选项和方法来设想解决方案，同时最优地满足约束。'
- en: '**Plan**: The preceding phase is sort of conceptual. This phase is about to
    concrete the previous ideas into tangible solutions: designing and implementing
    database structures in the RDBMS of choice, defining the user interfaces and their
    interactions with the final user, defining the proper configuration of the source
    code management tool (Team Foundation Server is the preferred choice for the Microsoft
    development environments), and so on:'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**规划**：前一个阶段有点像是概念性的。这个阶段是将之前的思想具体化为可操作的解决方案：在所选的RDBMS（关系数据库管理系统）中设计和实施数据库结构，定义用户界面及其与最终用户的交互，定义源代码管理工具的正确配置（Team
    Foundation Server是Microsoft开发环境的首选选择），等等：'
- en: In this phase, some aspects of security should be clearly established, especially
    those that might imply a loss of assets, revelation of private information (non-intended
    disclosure), possible Denial of Service (DoS) attacks, and so on.
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这个阶段，应明确确定一些安全方面的内容，特别是那些可能意味着资产损失、私人信息泄露（非故意披露）、可能的拒绝服务（DoS）攻击等。
- en: '**Build**: Most people relate this to just coding, but it goes a bit further.
    It should also consider good practices, style guidelines, and many other coding
    practices:'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建**：大多数人将这仅仅与编码联系起来，但它实际上要更进一步。它还应考虑良好的实践、风格指南以及许多其他编码实践：'
- en: You can find a dedicated page for coding conventions in C# at [https://msdn.microsoft.com/en-us/library/ff926074.aspx](https://msdn.microsoft.com/en-us/library/ff926074.aspx).
    In addition, a comprehensive list of the naming guidelines for .NET solutions
    is available at [https://msdn.microsoft.com/en-us/library/ms229002(v=vs.110).aspx](https://msdn.microsoft.com/en-us/library/ms229002(v=vs.110).aspx).
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在[https://msdn.microsoft.com/en-us/library/ff926074.aspx](https://msdn.microsoft.com/en-us/library/ff926074.aspx)找到C#编码约定的专用页面。此外，.NET解决方案的命名指南的完整列表可在[https://msdn.microsoft.com/en-us/library/ms229002(v=vs.110).aspx](https://msdn.microsoft.com/en-us/library/ms229002(v=vs.110).aspx)找到。
- en: This phase also includes a willingness to learn new coding techniques and implement
    requirements in the best possible manner. It's interesting to note that MSF recommends
    that this phase should never exceed 33% percent of the total time assigned to
    the project.
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个阶段还包括愿意学习新的编码技术并以最佳方式实现需求。值得注意的是，MSF建议这个阶段不应超过项目分配的总时间的33%。
- en: '**Stabilize**: The model emphasizes that this is not just about getting rid
    of bugs. Sometimes the problem lies in the usage of the application''s UI, the
    time required to access certain data after a request, or taking care that no collateral
    effects appear linked to a given process:'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**稳定化**：该模型强调的不仅仅是消除错误。有时问题在于应用程序UI的使用，请求后访问某些数据所需的时间，或者确保没有与给定过程相关的副作用：'
- en: Moreover, the user's perspective is very important as well, and certain techniques
    come in handy, such as unit tests, or behavior-driven tests, which simulate use
    cases from the beginning to the end.
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此外，用户的观点也非常重要，某些技术很有用，例如单元测试或行为驱动测试，这些测试从开始到结束模拟用例。
- en: Of course, security is another important aspect here. Behavior-driven tests
    should include all the security aspects evaluated and addressed if the Threat
    model has been properly designed.
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当然，安全也是这里的一个重要方面。如果威胁模型设计得当，行为驱动测试应包括所有评估和解决的安全方面。
- en: '**Deploy**: This is about integrating the solution successfully into production
    and transferring the rest of the management to the support teams designated for
    that purpose. It''s the final phase, but many times, its ending just connects
    with the beginning of the second version (or update, or release, you name it…).'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署**：这是关于成功地将解决方案集成到生产中，并将剩余的管理转移到为此目的指定的支持团队。这是最终阶段，但很多时候，其结束只是与第二个版本（或更新、或发布，您叫它什么…）的开始相连接。'
- en: Tip
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Just to deal with the deployment phase, Microsoft later created the Microsoft
    Operations Framework proposal, which covers every aspect of deployment, especially
    for applications with a certain volume and complexity (rising up to an entire
    operating system).
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 仅就部署阶段而言，微软后来创建了Microsoft Operations Framework提案，该提案涵盖了部署的各个方面，特别是对于具有一定规模和复杂性的应用程序（甚至包括整个操作系统）。
- en: 'These complex cases are themselves treated as another project, with all its
    phases and considerations. In subsequent versions of MOF, the entire coverage
    for any IT operation is considered, together with all scenarios that we mentioned
    earlier: on-premises, in the cloud, mixed, and so on.'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些复杂案例本身被视为另一个项目，包括所有阶段和考虑因素。在MOF的后续版本中，考虑了任何IT操作的整个覆盖范围，以及我们之前提到的所有场景：本地、云中、混合等。
- en: You can access the complete documentation about this subject on its dedicated
    website at [https://msdn.microsoft.com/en-us/library/cc506049.aspx](https://msdn.microsoft.com/en-us/library/cc506049.aspx).
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以在其专门的网站上找到有关此主题的完整文档：[https://msdn.microsoft.com/en-us/library/cc506049.aspx](https://msdn.microsoft.com/en-us/library/cc506049.aspx)。
- en: The Risk Model
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 风险模型
- en: The Risk Model explains how to deal with security along all the previous phases
    and how to take security into consideration from the very beginning of the application's
    life cycle. Some theoreticians prefer to include it in the process model itself,
    as we saw in the diagram at the beginning of this chapter.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 风险模型解释了如何在前述所有阶段处理安全，以及如何从应用程序生命周期的开始就考虑安全。一些理论家更喜欢将其包含在过程模型本身中，正如我们在本章开头的图中看到的。
- en: We are going to cover security in more depth in [Chapter 11](part0065.xhtml#aid-1TVKI1
    "Chapter 11. Security"), *Security*, (based on the OAuth 2.0 standard), so it
    is not the goal to discuss these techniques in depth here, but I would like to
    review the principles on which the Risk Model is based.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[第11章](part0065.xhtml#aid-1TVKI1 "第11章。安全")中更深入地介绍安全，*安全*（基于OAuth 2.0标准），因此在这里深入讨论这些技术不是目标，但我希望回顾基于风险模型的原则。
- en: The MSF Risk Management discipline makes a distinction between risks and issues
    (or problems that already exist or known problems). Thus, it defines a type of
    risk management that proactively identifies, analyzes, and addresses risks in
    order to improve the probability of success.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: MSF风险管理学科在风险和问题（或已知或已知的问题）之间做出区分。因此，它定义了一种风险管理类型，主动识别、分析和解决风险，以提高成功的概率。
- en: The strategy is to anticipate rather than react to problems, so the team should
    prepare for problem resolutions before problems occur in order to be able to react
    proactively and directly to the root causes, not only to symptoms.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 策略是预测而不是反应问题，因此团队应在问题发生之前准备问题解决方案，以便能够主动直接地应对根本原因，而不仅仅是症状。
- en: 'The official documentation schematizes risk management in the following graphic:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 官方文档以以下图形概述了风险管理：
- en: '![The Risk Model](img/image00601.jpeg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![风险模型](img/image00601.jpeg)'
- en: As you can see, the first step is identifying and stating a given risk. It follows
    an analysis and prioritization of the problem to be resolved, which goes along
    with a mitigation plan and schedule.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，第一步是识别和陈述一个既定的风险。这随后是对要解决的问题进行分析和优先级排序，这伴随着缓解计划和日程。
- en: Note
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In the planning phase, different areas of the application are assigned to different
    team members, and each member assumes the responsibility for the possible risks
    linked to it.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在规划阶段，将应用程序的不同领域分配给不同的团队成员，每个成员承担与其相关的可能风险的职责。
- en: Risk evaluation
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 风险评估
- en: 'The MSF documentation also establishes a classification of the risks according
    to this table, which lists the possible sources in four types of risks:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: MSF文档还根据此表对风险进行了分类，该表列出了四种类型风险的可能来源：
- en: '| Risk classifications | Risk sources |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| 风险分类 | 风险来源 |'
- en: '| --- | --- |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| People | Customers, end users, stakeholders, personnel, organizations, skills,
    and politics |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| 人员 | 客户、最终用户、利益相关者、人员、组织、技能和政治 |'
- en: '| Process | Mission and goals, decision-making, project characteristics, budget,
    costs, schedules, requirements, designs, building, and testing |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| 流程 | 任务和目标、决策、项目特性、预算、成本、时间表、需求、设计、构建和测试 |'
- en: '| Technology | Security, development and test environments, tools, deployment,
    support, operations environment, and availability |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| 技术 | 安全、开发与测试环境、工具、部署、支持、操作环境以及可用性 |'
- en: '| Environment | Laws, regulations, competition, economy, technology, and business
    |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| 环境 | 法律、法规、竞争、经济、技术以及商业 |'
- en: Risk assessment
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 风险评估
- en: 'The suggested procedure to evaluate risks is to publish a maintainable and
    accessible list in which every risk is evaluated using two factors: impact and
    probability, the first one being a pre-established value that the team estimates
    (let''s say from 1 to 100, 100 being the worst possible case).'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 评估风险的建议程序是发布一个可维护和可访问的列表，其中每个风险都使用两个因素进行评估：影响和概率，第一个因素是团队预先设定的值（比如说从1到100，100表示最坏的情况）。
- en: The second factor (the probability) is generally measured using the mathematical
    concept linked to this measurement (that is, a value between 0 and 1, 0 being
    the impossible and 1 being absolute certainty).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个因素（概率）通常使用与该测量相关的数学概念来衡量（即，介于0和1之间的值，0表示不可能，1表示绝对确定）。
- en: Later, both factors are multiplied and ordered as descending, so the most dangerous
    risks appear at the top, and the team can figure out their priority when they
    decide to take actions about it.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，这两个因素相乘并按降序排列，因此最危险的风险出现在顶部，团队可以在决定采取行动时确定其优先级。
- en: Risk action plans
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 风险行动计划
- en: 'Different tasks can be assigned to risk management in order to better cope
    with potential problems once these problems are detected and sorted:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将不同的任务分配给风险管理，以便在这些问题被检测和分类后更好地应对潜在问题：
- en: '**Research**: This is the process of finding more information about the risk
    before taking any action'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**研究**：这是在采取任何行动之前寻找更多关于风险信息的流程'
- en: '**Acceptance**: This means that it would be acceptable to live with the consequences
    if the risk occurs'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**接受**：这意味着如果风险发生，可以接受其后果'
- en: '**Avoidance**: If we change the project''s scope, would the risk be avoided
    as well?'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**避免**：如果我们改变项目的范围，风险也会避免吗？'
- en: '**Transfer**: In some cases, it''s possible to transfer the risk to other projects,
    teams, organizations, or individuals'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**转移**：在某些情况下，可以将风险转移到其他项目、团队、组织或个人'
- en: '**Mitigation**: What can the team do to reduce any of the two factors mentioned
    earlier (probability or impact)?'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缓解**：团队可以做什么来减少前面提到的两个因素中的任何一个（概率或影响）？'
- en: '**Contingency plan**: The team should evaluate whether a planned strategy would
    help in case of the risk becoming real'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应急计划**：团队应评估如果风险成为现实，计划中的策略是否会有帮助'
- en: With all these considerations, the team will collect and design a set of possible
    activities related to the Risk Model. Once that is done, the MSF documentation
    divides the proposed actions into two main areas, which they catalog as proactive
    and reactive.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到所有这些考虑因素，团队将收集和设计一套与风险模型相关的可能活动。一旦完成，MSF文档将提出的行动分为两个主要领域，它们将它们分类为主动和反应。
- en: The proactive approach means mitigation, that is, taking actions ahead of time
    in order to prevent a risk from occurring altogether, or—if the risk is inevitable—to
    reduce its impact to a level that can be considered acceptable.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 主动式方法意味着缓解，也就是说，在风险发生之前采取行动，以防止风险完全发生，或者——如果风险不可避免——将其影响降低到可接受的水平。
- en: In the other case, we have to manage actions to reduce real problems (the risk
    became real), so it's imperative to analyze possible problems in advance and—let's
    face it—place ourselves in the worst case, imagining all feasible solutions. The
    team should also define a trigger, something that—if it happens—should start the
    contingency plan.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一种情况下，我们必须管理行动以减少真实问题（风险变成了现实），因此，提前分析可能的问题并——让我们面对现实——将自己置于最坏的情况，想象所有可行的解决方案是至关重要的。团队还应定义一个触发器，如果发生，应启动应急计划。
- en: 'Observe that these triggers (the same as the risks linked to them) not only
    have to do with code, but also with many other factors. The MSF documentation
    cites a few: a team member''s resignation, the number of bugs exceeding the acceptable
    limit, or a milestone completed with a significant delay; these are just some
    common cases.'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这些触发器（与它们相关的风险相同）不仅与代码有关，还与许多其他因素有关。MSF文档引用了一些：团队成员的辞职、超出可接受限制的bug数量，或者完成里程碑有显著延迟；这些只是常见的一些情况。
- en: 'In summary, the MSF assesses these rules, stating that Risk Management should
    be:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，MSF评估这些规则，指出风险管理应该是：
- en: '**Comprehensive**: It should address all of the elements in a project (not
    just technology elements, but people and process as well)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全面性**：它应该涵盖项目中的所有要素（不仅仅是技术要素，还包括人员和流程）'
- en: '**Systematic**: It should incorporate a reproducible process for project risk
    management'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统性**：它应该包含一个可重复的项目风险管理流程'
- en: '**Continuous**: It should occur along the entire project life cycle, not just
    in the first two phases'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续性**：它应该在项目生命周期的整个过程中发生，而不仅仅是前两个阶段'
- en: '**Proactive**: It should seek to avoid or minify the impact of risk occurrences'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主动式**：它应该寻求避免或最小化风险发生的影响'
- en: '**Flexible**: It should be adaptable to a wide range of risk analysis methodologies'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活性**：它应该能够适应广泛的风险评估方法'
- en: '**Future-oriented**: It should be committed to individual- and enterprise-level
    learning and be supported by a Knowledge Base that serves for future endeavors
    later on'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**面向未来**：它应该致力于个人和企业级的学习，并得到一个知识库的支持，该知识库为未来的努力服务'
- en: CASE tools
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CASE工具
- en: As we've seen, MSF does not force you to work with any specific tool, since
    it's only about good practices, procedures, and protocols to follow in order to
    reach the projected goals, and all that being carried out on time and within the
    project's budget (almost a dream, isn't it?).
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，MSF并不强迫你使用任何特定的工具，因为它只关乎遵循良好实践、程序和协议，以便实现预期的目标，所有这些都在按时和项目预算内完成（这几乎是一个梦想，不是吗？）。
- en: However, there are tools that can, indeed, help you build these deliverables.
    This includes not only the source code, but also all reports, graphic schemes,
    and other documents that define and clarify the hardware and software structures
    and the desired behavior, both in the ALM and in production. This is something
    that goes far beyond the coding phase since every milestone requires its own documentation.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，确实有一些工具可以帮助你构建这些可交付成果。这包括不仅限于源代码，还包括所有报告、图形方案以及其他定义和阐明硬件和软件结构以及期望行为的文档，这些文档在ALM和在生产中都是必要的。这是超出编码阶段的事情，因为每个里程碑都需要自己的文档。
- en: '**CASE** (**Computer Aided Software Engineering**) Tools is the name given
    to the set of tools required for this purpose. If we talk about Microsoft, these
    case tools are quite numerous today.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '**CASE**（**计算机辅助软件工程**）工具是为此目的而命名的工具集。如果我们谈论微软，这些CASE工具今天相当多。'
- en: Of course, source code is aligned with Visual Studio in its different versions
    (also with the express versions and Visual Studio Code, as we've seen).
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，源代码与不同版本的Visual Studio保持一致（也与我们看到的Express版本和Visual Studio Code一致）。
- en: Moreover, Visual Studio integrates seamlessly with **Visual Studio Team Services**
    (**VSTS**), which the company defines as the set of services that allow software
    teams to share code, manage project advances and issues, and deliver software
    in any language (yes, in any language, including Java)— all in one package. Even
    more, Visual Studio Code and the latest Visual Studio 2017 can work directly with
    Github, as another choice for collaborative coding.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Visual Studio 与 **Visual Studio Team Services**（**VSTS**）无缝集成，公司将其定义为允许软件团队共享代码、管理项目进展和问题以及以任何语言（是的，任何语言，包括
    Java）交付软件的一套服务——所有这些都在一个包中。更进一步，Visual Studio Code 和最新的 Visual Studio 2017 可以直接与
    Github 一起工作，作为协作编码的另一种选择。
- en: 'Actually, what was previously called **Visual Studio On-line** is now part
    of VSTS and allows you to code, execute, and save the development projects online,
    including source code control, version control, and the like. It''s presented
    in different flavors and is excellent for source control and other coding services
    either on-premises or in the cloud (and it does not exclude Git or other types
    of repositories of code and different languages: C#, Java, JavaScript, and so
    on).'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，之前被称为 **Visual Studio On-line** 的现在已成为 VSTS 的一部分，允许你在线编码、执行和保存开发项目，包括源代码控制、版本控制等。它以不同的形式呈现，非常适合在本地或云端（并且不排除
    Git 或其他类型的代码和不同语言的存储库：C#、Java、JavaScript 等）进行源代码控制和其它编码服务。
- en: 'Besides, you can use them independently of the building model of your choice:
    MSF Agile, MSF for **CMMI** (**Capability Maturity Model Integration**), or any
    other. The next diagram shows the schema of the main capabilities available in
    VSTS:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你可以独立于你选择的构建模型使用它们：MSF Agile、MSF for **CMMI**（**能力成熟度模型集成**），或任何其他模型。接下来的图示显示了
    VSTS 中可用的主要功能架构：
- en: '![CASE tools](img/image00602.jpeg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![CASE 工具](img/image00602.jpeg)'
- en: Obviously, there are many other tasks that also require proper tooling and management
    (actually, there are a lot), but specifically, when the programmer deals with
    the two first phases of the development cycle, Microsoft Visio (now in version
    2016), might be a very useful one.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，还有许多其他任务也需要适当的工具和管理（实际上，有很多），但具体来说，当程序员处理开发周期的前两个阶段时，Microsoft Visio（现在是
    2016 版本），可能是一个非常有用的工具。
- en: The role of Visio
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Visio 的作用
- en: Although it is considered part of the Microsoft Office Suite, it is actually
    delivered separately, and it's now part of Office 365 (online). As the company
    puts it, Visio's lemma is Complexity made simple, and it lets you build all sort
    of diagrams, which can even update dynamically (as the original data changes),
    covering hundreds of possible diagramming scenarios.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然它被认为是 Microsoft Office 套件的一部分，但实际上它是单独提供的，现在它是 Office 365（在线）的一部分。正如公司所说，Visio
    的座右铭是“复杂化简单化”，它让你能够构建各种图表，这些图表甚至可以动态更新（随着原始数据的变化），覆盖数百种可能的图表场景。
- en: 'You can also use it in conjunction with Microsoft Project and other related
    tools, and its capability to import and incorporate external information makes
    it a perfect solution to integrate data from other sources and convert it into
    a useful diagram:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以将其与 Microsoft Project 和其他相关工具结合使用，它导入和整合外部信息的能力使其成为从其他来源集成数据并将其转换为有用图表的完美解决方案：
- en: '![The role of Visio](img/image00603.jpeg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![Visio 的作用](img/image00603.jpeg)'
- en: A first example
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个初步的例子
- en: Let's imagine that we already have the list of participants in our Team Model.
    We have discussed which role is competent for each member with them, and this
    information is written in an Excel sheet, indicating name, role, and photo for
    every member of the team. Each of the six roles has been assigned to a different
    person, as defined in the Team Model.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们假设我们已经有了团队模型中参与者的名单。我们已经与他们讨论了每个成员的胜任角色，并将这些信息记录在 Excel 表格中，表格中包含了团队每个成员的姓名、角色和照片。六个角色中的每一个都分配给了不同的人，正如团队模型中定义的那样。
- en: We can create an Organization Chart to express this initial statement, opening
    Visio and selecting **Organization Chart** among the templates Visio offers from
    the start. We even have an assistant to lead us in the process, if we prefer.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以创建一个组织结构图来表达这个初步声明，打开 Visio 并从提供的模板中选择 **组织结构图**。我们甚至有一个助手来引导我们完成这个过程，如果我们愿意的话。
- en: 'Then, we have an options menu, **Data/Quick Import**, which recovers the data
    we need in order to give every shape its corresponding information. This can be
    done automatically if you have been careful when creating the Excel data, or you
    can do it manually since a new pane will open up, showing the information inside
    the Excel Sheet (refer to the screenshot):'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们有一个选项菜单，**数据/快速导入**，它恢复我们需要的用于为每个形状提供相应信息的所需数据。如果你在创建 Excel 数据时小心谨慎，这可以自动完成，或者你可以手动完成，因为将打开一个新的面板，显示
    Excel 表格中的信息（参见图表）：
- en: '![A first example](img/image00604.jpeg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![第一个示例](img/image00604.jpeg)'
- en: In the process, if you do it either automatically or manually, you'll have the
    choice of changing the data, reassigning any shape, or loading images from a local
    or remote location to complete the Team Model Schema.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在此过程中，无论你是自动还是手动操作，你都可以选择更改数据、重新分配任何形状或从本地或远程位置加载图像以完成团队模型架构。
- en: 'The final shape should have an aspect similar to the one we include in the
    following figure with all roles assigned, names and pictures:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的形状应该与以下图示中的形状类似，包括所有分配的角色、名称和图片：
- en: '![A first example](img/image00605.jpeg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![第一个示例](img/image00605.jpeg)'
- en: You can now save the shape in a number of different formats or share it with
    any collaborative resource formerly installed for the project (not just TFS).
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以将形状保存为多种不同的格式或与项目之前安装的任何协作资源共享（不仅仅是 TFS）。
- en: If the previous Excel sheet is located in an accessible place (previously indicated
    to the assistant), any changes could be checked. For instance, in order to apply
    modifications to a role or to add a new field of interest, you can make changes
    in the Excel Sheet and they would be reflected in the shape as soon as this is
    open again.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果之前的 Excel 表格位于可访问的位置（之前已告知助手），任何更改都可以进行检查。例如，为了对角色进行修改或添加新的兴趣字段，你可以在 Excel
    表格中进行更改，一旦再次打开，这些更改就会立即反映在形状上。
- en: We also have templates to define any hardware architecture, network design,
    or any other hardware of software architecture that graphically schematizes the
    application's structure.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有模板来定义任何硬件架构、网络设计或任何其他硬件或软件架构，这些架构以图形方式概述了应用程序的结构。
- en: 'For instance, let''s think of a simple web application (ASP.NET MVC) that accesses
    a database and offers different devices to users (and form factors) along with
    the ability to list the contents of a few tables and modify them through CRUD
    operations, which we''ll instruct Visual Studio to generate for us. The following
    figure can express this scenario using multibrowser clients:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们考虑一个简单的网络应用程序（ASP.NET MVC），它访问数据库并为用户提供不同的设备（和形式因素），同时具备列出几个表的内容并通过 CRUD
    操作修改它们的能力，我们将指导 Visual Studio 为我们生成这些操作。以下图示可以使用多浏览器客户端表达此场景：
- en: '![A first example](img/image00606.jpeg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![第一个示例](img/image00606.jpeg)'
- en: The preceding design is done starting from a Network and Peripherals template,
    with no special data imported, just using the shapes corresponding to the workstation,
    laptop, tablet, and smartphone and the connector features of Visio.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 上述设计是从网络和外设模板开始的，没有导入特殊数据，只是使用工作站、笔记本电脑、平板电脑和智能手机以及 Visio 的连接器功能对应的形状。
- en: You connect every shape with the destination by dragging and dropping the sides
    of the connector from the center of the shapes that play the roles of initial
    connection (the emitter) to the center of the destination (the receiver). Also,
    note that you can add as many descriptive fields as required to any shape in order
    to specify, for example, network identifiers, IPs, hardware characteristics, users,
    roles, permissions, and so on.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过拖放连接器的两侧从充当初始连接（发射器）的形状的中心到目标（接收器）的中心来连接每个形状。此外，请注意，你可以为任何形状添加所需数量的描述字段，以指定，例如，网络标识符、IP、硬件特性、用户、角色、权限等等。
- en: The database design
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库设计
- en: With respect to the database design, we don't need to use Visio. On one hand,
    part of the functionality linked to reverse engineering databases in Visio was
    deprecated as of version 2013 of the product. On the other hand, Microsoft moved
    a big part of this functionality to Visual Studio itself, as we mentioned in [Chapter
    6](part0034.xhtml#aid-10DJ41 "Chapter 6. SQL Database Programming"), *SQL Database
    Programming*, when reviewing the data access capabilities of the IDE.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 关于数据库设计，我们不需要使用 Visio。一方面，与 Visio 中数据库反向工程相关的部分功能自产品 2013 版本以来已被弃用。另一方面，Microsoft
    将这部分功能的大部分移至 Visual Studio 本身，正如我们在[第 6 章](part0034.xhtml#aid-10DJ41 "第 6 章。SQL
    数据库编程") *SQL 数据库编程*中提到的，当审查 IDE 的数据访问功能时。
- en: Actually, we can even use **SQL Server Management Studio** (**SSMS**) to generate
    a graphic schema of the data required for our purposes using the Database Diagrams
    feature of the tool.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我们甚至可以使用 **SQL Server Management Studio** （**SSMS**）通过使用工具的数据库图功能来生成我们所需的数据的图形架构。
- en: 'We should make sure that the database has a valid proprietary linked to a valid
    login. If you didn''t assign one to the database to be used, you can assign it
    in the **Properties** dialog box of every database listed in the **Object Explorer**.
    Inside the **Files** page, you should select a valid owner. The next graphic shows
    the process:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该确保数据库有一个有效的所有者链接到有效的登录。如果您没有为要使用的数据库分配一个，您可以在 **对象资源管理器** 中列出的每个数据库的 **属性**
    对话框中分配它。在 **文件** 页面中，您应选择一个有效的所有者。下一个图形显示了此过程：
- en: '![The database design](img/image00607.jpeg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![数据库设计](img/image00607.jpeg)'
- en: '**SSMS** could still ask you about installing the required objects to manage
    diagram creation, and once they''re accepted, you''ll be able to generate a new
    schema.'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '**SSMS** 可能还会询问您是否要安装管理图创建所需的对象，一旦接受，您将能够生成一个新的架构。'
- en: By default, we'll have a blank schema in the editor, where we can select the
    tables implied in the process. I'm selecting just a couple of tables (`SalesPerson`
    and `SalesTerritory`) to show the relation between them in the schema along with
    some other capabilities.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，编辑器中将有一个空白架构，我们可以选择在过程中隐含的表。我在选择几个表（`SalesPerson` 和 `SalesTerritory`）以在架构中展示它们之间的关系，并展示一些其他功能。
- en: 'The resulting schema should look similar to what is shown in the following
    screenshot. Note that the edition surface offers several options in the contextual
    menu, where you can add comments, other tables (not yet selected), view the details
    of the relationships between tables, and so on:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的架构应类似于以下屏幕截图所示。请注意，编辑器表面在上下文菜单中提供了几个选项，您可以在其中添加注释、其他表（尚未选择）、查看表之间关系的详细信息等：
- en: '![The database design](img/image00608.jpeg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![数据库设计](img/image00608.jpeg)'
- en: Observe that the editor automatically recognizes all tables' relations (in this
    demo, the foreign key relation named `FK_SalesPerson_SalesTerritory_TerritoryId`
    and the configuration details of any selected object are presented in the **Properties**
    window, as usual).
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，编辑器会自动识别所有表的关系（在这个演示中，名为 `FK_SalesPerson_SalesTerritory_TerritoryId` 的外键关系以及任何选定对象的配置细节，如通常一样，在
    **属性** 窗口中展示）。
- en: You might need to refresh the Object Explorer, so SSMS recognizes the new diagram
    after you save it. If you make any modifications to the diagram that imply a change
    in the structure of the database, the new configuration will be checked before
    saving, using the values that appear in the **Properties** window. Should any
    change be incompatible with the current restrictions, the diagram won't be saved.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能需要刷新对象资源管理器，以便 SSMS 在您保存后识别新的图。如果您对图进行了任何修改，这些修改意味着数据库结构的更改，则在保存之前将使用 **属性**
    窗口中出现的值来检查新配置。如果任何更改与当前限制不兼容，则无法保存图。
- en: Creating the demo application in Visual Studio
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中创建演示应用程序
- en: Later on, we create a new ASP.NET MVC application in order to use these two
    tables and access their data from web pages. At creation time, when we add a new
    ORM model using Entity Framework in the way we saw in [Chapter 6](part0034.xhtml#aid-10DJ41
    "Chapter 6. SQL Database Programming"), *SQL Database Programming*, we'll get
    a similar diagram (not exactly the same but basically containing the same information).
    We don't show it here since it has nothing meaningful with respect to the previous
    output.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将创建一个新的 ASP.NET MVC 应用程序，以便使用这两个表并从网页访问它们的数据。在创建时，当我们使用 Entity Framework
    以我们在 [第 6 章](part0034.xhtml#aid-10DJ41 "第 6 章。SQL 数据库编程") 中看到的方式添加新的 ORM 模型时，我们将得到一个类似的图（不是完全相同，但基本上包含相同的信息）。我们在这里不显示它，因为它与前面的输出没有有意义的关系。
- en: However, in this new diagram from inside Visual Studio, you will have access
    to other information related to the code the IDE generates in order to facilitate
    programmers with access to the database and use the Entity Framework libraries.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在这个新的 Visual Studio 内部图中，您将能够访问与 IDE 生成的代码相关的其他信息，以便方便程序员访问数据库并使用 Entity
    Framework 库。
- en: 'Such information, visible from the IDE''s **Properties** window, might show
    you interesting and specific data in relation to the objects we have selected
    for our diagram. This includes the template used in code generation, the code
    generation strategy, the name of the Entity Container, and several Boolean values
    (most of them changeable), indicating all aspects of such code. Refer to the following
    screenshot:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 这种信息，从 IDE 的 **属性** 窗口中可见，可能会显示与我们为我们的图选择的对象相关的有趣和具体数据。这包括用于代码生成的模板、代码生成策略、实体容器的名称以及几个布尔值（大多数可以更改），表示此类代码的所有方面。请参考以下截图：
- en: '![Creating the demo application in Visual Studio](img/image00609.jpeg)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![在 Visual Studio 中创建演示应用程序](img/image00609.jpeg)'
- en: Since our goal here is not the code itself but the process of creation and the
    deliverables you might generate when following the MSF, I'm going to instruct
    Visual Studio to generate all the scaffolding for a complete CRUD set of operations
    with these two tables. The generated code will then be used to reverse-engineer
    the resulting site from Visio and create other useful schemas.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的目标不是代码本身，而是创建过程以及您在遵循 MSF 时可能生成的可交付成果，我将指示 Visual Studio 为这两个表生成完整的 CRUD
    操作集的所有脚手架。然后，生成的代码将用于从 Visio 反向工程生成的网站并创建其他有用的模式。
- en: So, I'll proceed as explained in [Chapter 6](part0034.xhtml#aid-10DJ41 "Chapter 6. SQL
    Database Programming"), *SQL Database Programming*, and ask the IDE to generate
    all this functionality from the **Add Controller** option for each of the tables
    selected here. It's a good practice to check the resulting files and test the
    basic functionality.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我将按照 [第 6 章](part0034.xhtml#aid-10DJ41 "第 6 章。SQL 数据库编程") 中所述进行操作，*SQL 数据库编程*，并要求
    IDE 为这里选择的每个表从 **添加控制器** 选项生成所有这些功能。检查生成的文件并测试基本功能是一个好习惯。
- en: The only real change in the code I'll make at this point will be to add two
    new links in the main page (remember the `_Layout.cshtml` file), so these new
    options can be accessed directly from the landing page.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我对代码的唯一实际更改将是向主页（记住 `_Layout.cshtml` 文件）添加两个新链接，以便可以直接从着陆页访问这些新选项。
- en: I also made some changes to the default information presented by the template,
    just to reflect the basic information offered by this demo instead of the template's
    information. However, the only operational changes will consist of adding a couple
    of links so that CRUD operations can be reached from the main page.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 我还对模板默认显示的信息做了一些修改，只是为了反映这个演示提供的基本信息，而不是模板本身的信息。然而，唯一的操作更改将包括添加几个链接，以便可以从主页访问
    CRUD 操作。
- en: Thus, I'll use two `ListItems` with `ActionLink` helpers to generate the new
    entries in the main menu and check whether they work properly, linking to the
    `Index` action method for each generated controller.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我将使用两个 `ListItems` 和 `ActionLink` 辅助器来生成主菜单中的新条目，并检查它们是否正常工作，链接到每个生成的控制器中的
    `Index` 动作方法。
- en: 'As usual, these lists show the complete list of records for every table, and
    other links are generated automatically (**Edit**, **Details**, and **Delete**
    for each individual record, plus an option at the top to create a new record).
    The code is pretty simple in this case:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 如同往常，这些列表显示了每个表的完整记录列表，并且其他链接会自动生成（每个单独记录的 **编辑**、**详情** 和 **删除**，以及顶部创建新记录的选项）。在这个情况下，代码相当简单：
- en: '[PRE0]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'After checking the preceding functionality, we''ll terminate the project at
    this time (refer to the following screenshot):'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在检查了前面的功能之后，我们将在此时刻结束项目（参考以下截图）：
- en: '![Creating the demo application in Visual Studio](img/image00610.jpeg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![在Visual Studio中创建演示应用程序](img/image00610.jpeg)'
- en: Website design
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网站设计
- en: There's more in the design phase, that can be solved using Visio resources and
    tools. Now, we have a working website to test some of the capabilities of Visio
    in order to reverse-engineer a website.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 设计阶段还有更多内容，可以使用Visio资源和工具来解决。现在，我们有一个可以测试Visio在逆向工程网站时的一些功能的网站。
- en: 'Visio offers two different types of web templates: **Conceptual Web Site**
    and **Web Site Map**, as you''ll find out when searching for the available templates.'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: Visio提供了两种不同的网页模板：**概念网站**和**网站地图**，您在搜索可用模板时将会发现。
- en: 'The first one is the type of schema that some developers like to create before
    any other code action. That is, it lets you define the distinct components of
    the website and helps you with the configuration of each one, defining its shapes
    and fields:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个是一些开发者在编写任何其他代码操作之前喜欢创建的架构类型。也就是说，它允许您定义网站的独特组件，并帮助您配置每个组件，定义其形状和字段：
- en: '![Website design](img/image00611.jpeg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![网站设计](img/image00611.jpeg)'
- en: The website map, however, can be created from scratch, or it can be reverse-engineered,
    instructing Visio to read the file information from an already existing website.
    Actually, if you create a new diagram starting from this template, you'll be offered
    the possibility of reading the information from an existing website.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，网站地图可以从零开始创建，或者可以逆向工程，指导Visio从已存在的网站上读取文件信息。实际上，如果您从这个模板开始创建新的图表，您将有机会从现有网站上读取信息。
- en: Since there are many factors involved in such task, a **Settings…** button at
    the bottom lets you tune the way Visio should try to read the information. For
    this demo, since we have not published our site to any real hosting service, we
    can use the `localhost:port` configuration to configure Visio as to where to look
    for information.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 由于涉及许多因素，因此在底部有一个**设置…**按钮，让您调整Visio尝试读取信息的方式。对于这个演示，由于我们没有将我们的网站发布到任何真正的托管服务，我们可以使用`localhost:port`配置来配置Visio，以确定查找信息的位置。
- en: Another important trick is that you should reduce the number of levels to two
    (in general). Finally, we can add the extensions for the Razor engine so that
    these files are recognized and analyzed properly.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的技巧是，您应该将层级数量减少到两个（通常）。最后，我们可以添加Razor引擎的扩展，以便这些文件被正确识别和分析。
- en: 'As you''ll see, many other aspects are available: the selection of communication
    protocols, the types of resources that appear in the list, the kind of layout
    to build the graphic tree, and so on:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您将看到的，还有许多其他方面可供选择：通信协议的选择、列表中出现的资源类型、构建图形树的布局类型等等：
- en: '![Website design](img/image00612.jpeg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![网站设计](img/image00612.jpeg)'
- en: After a few seconds, you will be presented with a new diagram containing all
    the selected resources present on the website.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 几秒钟后，您将看到一个包含网站上所有选定资源的新的图表。
- en: This final schema will be organized in just the same manner as the website,
    that is, hierarchical, starting from the initial URL and going top-down through
    all the levels, as indicated in the previous configuration (be careful with this
    value in some scenarios, or it could take a while to finish checking all possible
    links generated by the schema).
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 这个最终的架构将按照与网站相同的方式组织，即层次结构，从初始URL开始，向下通过所有层级，正如前一个配置中所示（在某些情况下，请注意此值，否则可能需要一段时间才能完成检查所有可能的链接）。
- en: Another useful configuration refers (take a look at the figure) to the number
    of links to be analyzed. 300 is more than enough for this demo, but depending
    on the site, you might miss some of them (especially those located at the deepest
    levels).
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的配置是指（查看图示）要分析的超链接数量。对于这个演示，300个已经足够了，但根据网站的不同，您可能会错过其中的一些（尤其是那些位于最深层级的）。
- en: 'Besides, once the tree is created, you can tune up different views of that
    tree and do further research with the help of a couple of tools that Visio enables
    by default: **FILTER WINDOW** and **LIST WINDOW**. Both appear collapsed next
    to the editing surface resulting from the process.'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，一旦创建了树，您就可以调整该树的不同的视图，并在Visio默认提供的几个工具的帮助下进行进一步的研究：**过滤器窗口**和**列表窗口**。这两个窗口都折叠在编辑表面旁边，由该过程产生。
- en: Another aspect to watch is the size of the diagram. You can make it as big as
    you please, but by default, the schema fits in the available space (no matter
    how big the site is), so you might find the resulting graphic quite reduced (of
    course, the zooming tool will let you see it the way you prefer).
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要注意的方面是图表的大小。你可以将其做得尽可能大，但默认情况下，图表会适应可用空间（无论网站有多大），因此你可能会发现生成的图形相当缩小（当然，缩放工具会让你以你喜欢的任何方式查看）。
- en: 'Overall, the result should look similar to what is shown in the next capture
    (although I''ve changed the size and retouched some entries to make them more
    visible):'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，结果应该看起来与下一张捕获中显示的内容相似（尽管我已经改变了大小并润色了一些条目以使其更明显）：
- en: '![Website design](img/image00613.jpeg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![网站设计](img/image00613.jpeg)'
- en: When you dig into the image, all details show up, and some aspects should be
    noted. In the areas pertaining to the `SalesPersons` and `SalesTerritories` controllers,
    you'll find as many links as registers are present when the `Index` action method
    returns, for example.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 当你深入查看图像时，所有细节都会显示出来，并且有一些方面需要注意。例如，在涉及`SalesPersons`和`SalesTerritories`控制器区域，你会找到与`Index`动作方法返回时注册数量一样多的链接。
- en: This means that for a very long listing, the number of graphics could be unmanageable.
    That's why limiting the number of links to 300 happens by default.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着对于非常长的列表，图形的数量可能会难以管理。这就是为什么默认情况下限制链接数量为300的原因。
- en: 'With such a complex schema, the location of individual elements can be challenging
    if you do it directly from the shape. This is where **LIST WINDOW** comes in handy:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在这样一个复杂的架构中，如果直接从形状进行操作，单个元素的位置可能会很具挑战性。这就是**列表窗口**派上用场的地方：
- en: '![Website design](img/image00614.jpeg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![网站设计](img/image00614.jpeg)'
- en: You just have to locate any item in the list and double-click on it; the graphic
    will locate and move to that element, showing its details.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 你只需在列表中定位任何项目，然后双击它；图形将定位并移动到该元素，显示其详细信息。
- en: Once the item is expanded, there's a bunch of available options that you can
    use. You'll find another collapsible window (Shape Data), which shows all the
    fields associated with the element of choice (the element, usually docks to the
    upper-right corner of the editing surface).
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦项目展开，就会有一系列可用的选项供你使用。你会发现另一个可折叠窗口（形状数据），它显示了与所选元素（通常停靠在编辑表面的右上角）关联的所有字段。
- en: You can also expand the corresponding link to see which elements will be active
    when the view is being presented.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以展开相应的链接，以查看在视图呈现时哪些元素将是活动的。
- en: 'Even better, you have a contextual menu, which includes the **Interactive Hyperlink
    Selection** option. If you click on the link, a new window will open up, presenting
    the real page at runtime that you would see if that link is selected. Refer to
    the screenshot corresponding to the **SalesTerritories/Edit/9** URL:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 更好的是，你还有一个上下文菜单，其中包括**交互式超链接选择**选项。如果你点击链接，将打开一个新窗口，显示在运行时你会看到的实际页面。参考对应于**SalesTerritories/Edit/9**
    URL的屏幕截图：
- en: '![Website design](img/image00615.jpeg)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![网站设计](img/image00615.jpeg)'
- en: The most useful aspect of this feature is that the window is not a read, view-only
    snapshot, but it lets you really change the information and will operate just
    the same as the real page in execution.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 这个功能的最大优点是窗口不是一个只读的、仅查看的快照，而是允许你真正更改信息，并且将像实际页面在执行时一样操作。
- en: 'For example, if you try to change some data and there''s some incompatible
    information in the fields, the form will not be sent, and the error messages will
    show up, indicating the problem, as you can see in the following capture, in which
    a string is introduced where the field expects a number:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你尝试更改一些数据，字段中存在一些不兼容的信息，表单将不会发送，并且会显示错误消息，指示问题，正如你在以下捕获中可以看到的，其中在字段期望数字的地方引入了一个字符串：
- en: '![Website design](img/image00616.jpeg)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![网站设计](img/image00616.jpeg)'
- en: 'Besides, we also have the choices offered by **FILTER WINDOW**, which permits
    the activation/deactivation of links and scripts in order to reduce the number
    of elements shown in the diagram:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还有**过滤器窗口**提供的选项，允许激活/停用链接和脚本，以减少图表中显示的元素数量：
- en: '![Website design](img/image00617.jpeg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![网站设计](img/image00617.jpeg)'
- en: Overall, we count on a wide number of possibilities, which only start when the
    initial diagram is drawn.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，我们依赖的是广泛的可能性，这些可能性仅从初始图表开始。
- en: Reports
  id: totrans-245
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 报告
- en: With all these possibilities, we can gather a good number of deliverables to
    accompany our project's documentation, but Visio offers some extra functionalities
    in order to enhance our documentation.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有这些可能性中，我们可以收集大量可交付成果来伴随我们的项目文档，但 Visio 还提供了一些额外的功能来增强我们的文档。
- en: One option is the possibility of generating reports in several formats (Excel,
    MS Access, Visio Graphics, among others), starting with the current shapes we're
    editing.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个选项是生成多种格式的报告（Excel、MS Access、Visio 图形等），从当前正在编辑的形状开始。
- en: Since these reports can also be linked, you can refresh the information as changes
    take place in the project. To create a new report, we just have to move to the
    **Web Site Map** tab in Visio's main menu and select **Create Report**.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些报告也可以链接，因此您可以在项目发生变化时刷新信息。要创建新的报告，我们只需将鼠标移动到 Visio 主菜单中的**网站地图**选项卡并选择**创建报告**。
- en: We can select an entire report, which includes all the elements selected in
    the map (what Visio calls Inventory), or we can create partial reports in order
    to take care of distinct aspects, such as generating only a **Links Report** or
    even a broken links report in the **Web Site Map** tab with the **Links with Errors**
    option.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以选择整个报告，包括在地图中选定的所有元素（Visio 所称的库存），或者我们可以创建部分报告，以处理不同的方面，例如仅生成**链接报告**，甚至在**网站地图**选项卡中使用**带有错误的链接**选项生成损坏的链接报告。
- en: In any case, we'll be offered a final format to save the information, which
    can be an Excel Sheet, a Visio Shape, an HTML page, or an XML file. If we choose
    HTML files, they can easily be published to a corporate Office 365, a project's
    dedicated SharePoint site, or just to any website convenient for our team.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何情况下，我们都会得到一个最终格式来保存信息，这可以是一个 Excel 表格、一个 Visio 形状、一个 HTML 页面或一个 XML 文件。如果我们选择
    HTML 文件，它们可以轻松发布到企业 Office 365、项目专用的 SharePoint 网站或任何对我们团队方便的网站。
- en: 'The next screenshot shows a web page generated in this way, including all the
    links discovered on our site. A basic table is presented, although you can tune
    all aspects of the generator, including the type of errors you want to exclude,
    and so on:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了以这种方式生成的网页，包括在我们网站上发现的全部链接。展示了一个基本表格，尽管您可以调整生成器的所有方面，包括要排除的错误类型等：
- en: '![Reports](img/image00618.jpeg)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![报告](img/image00618.jpeg)'
- en: Many other options
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 许多其他选项
- en: If you are not used to working with Visio, you'll have noticed a large number
    of other possibilities in order to visually express the distinct aspects of a
    project life cycle. Many are present since previous versions, but the company
    has enhanced and extended the number of options and functionalities in a meaningful
    way.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不习惯使用 Visio，您会注意到许多其他可能性来直观地表达项目生命周期的不同方面。其中许多自早期版本以来就存在，但公司以有意义的方式增强了选项和功能的数量。
- en: For example, since the first versions, Visio has the ability to create and update
    Calendar and Time diagrams in order to manage schedules and timetables, such as
    PERT and Gantt diagrams.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，自从最初版本以来，Visio 就具有创建和更新日历和时间图表的能力，以便管理日程安排和进度表，例如 PERT 和甘特图。
- en: 'Gantt diagrams, for example, let you control project management, task management,
    agendas, schedules, timetables, goal settings and, in general, a project''s lifecycle.
    Different templates are available: subtasks with the calendar, a simple task waterfall,
    and so on. The following screenshot shows the starting aspect of one of these
    templates:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，甘特图让您能够控制项目管理、任务管理、日程安排、进度表、目标设置，以及一般而言，项目的生命周期。有多种模板可供选择：带有日历的子任务、简单的任务瀑布图等。以下截图显示了这些模板的起始外观：
- en: '![Many other options](img/image00619.jpeg)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![许多其他选项](img/image00619.jpeg)'
- en: Of course, you also have configurable calendars in which you can insert all
    types of data for every date in order to extend control in a much more detailed
    manner.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您还可以配置日历，在其中可以插入每个日期的所有类型的数据，以便以更详细的方式扩展控制。
- en: BPMN 2.0 (Business Process Model and Notation)
  id: totrans-259
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: BPMN 2.0 (业务流程模型和符号)
- en: In relation to business processes, we find several solutions (Flow Charts, Organizational
    Charts, and so on), but it's worth noting that Visio now offers support for business
    standards as well.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在业务流程方面，我们发现了几种解决方案（流程图、组织结构图等），但值得注意的是，Visio 现在也提供了对业务标准的支持。
- en: 'The standard BPMN 2.0 is fully supported, and it offers several templates to
    represent the participants in the process:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 标准的 BPMN 2.0 完全受支持，并提供多个模板来表示流程中的参与者：
- en: BPMN Diagrams (start from scratch)
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BPMN 图表（从头开始）
- en: BPMN Process with Gateway (for processes that include a gateway with two outcomes)
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含网关的BPMN流程（对于包含两个结果的网关流程）
- en: BPMN Process with Multiple Roles (for cases where there is more that one major
    participant)
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多角色BPMN流程（适用于存在多个主要参与者的案例）
- en: BPMN Address Change Process, which the tool recommends when a process participant
    includes more that one role or function
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BPMN地址变更流程，当流程参与者包含多个角色或功能时，该工具推荐使用
- en: Note
  id: totrans-266
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The main statement of the standard defines BPMN, stating *a standard Business
    Process Model and Notation (BPMN) will provide businesses with the capability
    of understanding their internal business procedures in a graphical notation and
    will give organizations the ability to communicate these procedures in a standard
    manner*.
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 标准的主要声明定义了BPMN，指出*一个标准的业务流程模型和符号（BPMN）将使企业能够以图形符号理解其内部业务流程，并将使组织能够以标准方式传达这些流程*。
- en: It's interesting to note that these graphical proposals complement other classical
    schemes, especially certain UML diagrams (such as Activity diagrams or Sequence
    diagrams), helping clarify some business flows in more detail.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，这些图形建议补充了其他经典方案，特别是某些UML图（如活动图或序列图），有助于更详细地阐明某些业务流程。
- en: 'The default BPMN Address Change Process template is a perfect example of this
    (refer to the following screenshot):'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的BPMN地址变更流程模板是这一点的完美示例（参见图表）：
- en: '![BPMN 2.0 (Business Process Model and Notation)](img/image00620.jpeg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![BPMN 2.0（业务流程模型和符号）](img/image00620.jpeg)'
- en: 'Let''s take a look at what this process means: a customer changes her address
    and notifies a bank about it. There are three roles implied because **Help Desk**
    passes this new information to **Processing Center**, which, in turn, sends a
    confirmation to **Help Desk**, which sends changed confirmation to the client
    (the bank''s task ending right there). This can be expressed using a UML Sequence
    Diagram as well (and even a Use Case Diagram, since it implies three actors).'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看这个过程意味着什么：客户更改地址并通知银行。由于**帮助台**将此新信息传递给**处理中心**，而**处理中心**反过来向**帮助台**发送确认，然后**帮助台**将更改确认发送给客户（银行的任务在这里结束）。这也可以使用UML序列图来表示（甚至可以使用用例图，因为它暗示了三个参与者）。
- en: So, a basic UML Diagram can express the initial scenario, and we can use a more
    detailed BPMN diagram to be more precise about the specifics of the task steps
    and completion.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，一个基本的UML图可以表达初始场景，我们可以使用更详细的BPMN图来更精确地描述任务步骤和完成情况。
- en: UML standard support
  id: totrans-273
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: UML标准支持
- en: If you prefer to follow the diagrams proposed by **OMG Universal Modelling Language**
    (**OMG UML**) (now in version 2.5), you'll also find excellent support for all
    types of diagrams defined by the specification (both in Visio and Visual Studio
    as well).
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你倾向于遵循由**OMG通用建模语言**（**OMG UML**）（目前版本为2.5）提出的图表，你也会发现对规范中定义的所有类型图表的出色支持（包括在Visio和Visual
    Studio中）。
- en: Note
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you're interested in the current state of the UML Standard, the complete
    specification is available at [http://www.omg.org/spec/UML/Current](http://www.omg.org/spec/UML/Current).
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你感兴趣的是UML标准的当前状态，完整的规范可在[http://www.omg.org/spec/UML/Current](http://www.omg.org/spec/UML/Current)找到。
- en: That is, we can design diagrams for Use Cases, Classes, Activities, Sequences,
    and UML State Machines since all the required artifacts are present in the related
    templates and extra shapes.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，我们可以为用例、类、活动、序列和UML状态机设计图表，因为所有必需的工件都包含在相关的模板和额外形状中。
- en: Just take a look at the **More Shapes/Software and Database/Software** menu
    to find all these templates and the shapes the standard defines for them.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 只需查看**更多形状/软件和数据库/软件**菜单，就可以找到所有这些模板以及标准为它们定义的形状。
- en: Visual Studio architecture, testing, and analysis tools
  id: totrans-279
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Visual Studio架构、测试和分析工具
- en: Visio is not the only tool to help the architect in designing and organizing
    a software project. All versions of Visual Studio include extra tools (depending
    on the version) in order to aid these tasks in different ways.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: Visio并非是唯一帮助架构师设计和组织软件项目的工具。所有版本的Visual Studio都包含额外的工具（取决于版本），以不同方式协助这些任务。
- en: 'If you have the Visual Studio Enterprise Edition that I''m using now, you''ll
    find three main menu options in relation to this:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在使用的Visual Studio企业版，你将找到与此相关的三个主要菜单选项：
- en: '**Architecture**: Options for Code Map generation and UML diagramming (with
    support for all types of diagrams we just mentioned)'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**架构**：代码图生成和 UML 图形（支持我们刚才提到的所有类型图）'
- en: '**Testing**: A set of tools for testing, including specific, focused dialog
    boxes and artifacts'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试**：一组测试工具，包括特定、专注的对话框和工件'
- en: '**Analysis**: This covers Node.js profiling, code metrics, and code analysis,
    among other features.'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分析**：这包括 Node.js 性能分析、代码度量、代码分析等功能。'
- en: Application's architecture using Visual Studio
  id: totrans-285
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Visual Studio 的应用程序架构
- en: In order to maintain good coding velocity and prevent technical debt, improvements
    in your application's architecture are crucial. Moreover, understanding the impact
    of a potential change in the code is fundamental at the time of deciding whether
    a change should be done, and if so, what the consequences will be.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持良好的编码速度并防止技术债务，改进应用程序的架构至关重要。此外，在决定是否进行更改以及更改的后果时，理解代码潜在更改的影响是基本的。
- en: 'A first step is to generate a code map for the current solution. You can do
    it in two ways: generate it from scratch or use the **Generate Code Map for Solution**
    option. If you opt for the latter, a new DGML editor window will show up and a
    complex map will show the roots of the two main nodes: the DLL itself where our
    code is compiled (`WebApplication1.dll`), and another node called `Externals`,
    where you''ll find the relation of the DLLs used in the project.'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是为当前解决方案生成代码图。您可以通过两种方式完成：从头开始生成或使用 **为解决方案生成代码图** 选项。如果您选择后者，将弹出一个新的 DGML
    编辑器窗口，并显示一个复杂的地图，显示两个主要节点的根：我们的代码编译的 DLL 本身（`WebApplication1.dll`），以及另一个名为 `Externals`
    的节点，其中包含项目中使用的 DLL 的关系。
- en: 'You''ll have to expand both nodes to understand the entire picture and their
    relationships. Refer to the following screenshot:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须展开两个节点才能理解整个图及其关系。请参考以下截图：
- en: '![Application''s architecture using Visual Studio](img/image00621.jpeg)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Visual Studio 的应用程序架构](img/image00621.jpeg)'
- en: This type of diagrams are extremely useful in order to quickly view the main
    elements your application is made of. But it gets even better when we expand the
    nodes and identify our controllers or other configuration elements of the application.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的图在快速查看应用程序的主要元素方面非常有用。但当我们展开节点并识别我们的控制器或其他应用程序配置元素时，它就更加出色了。
- en: Since every node can be expanded, we can go deeper until we reach any class'
    member and its dependencies. If you double-click on any node, a new window will
    open with the matching source code and the caret located exactly where that member
    is defined.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 由于每个节点都可以展开，我们可以继续深入，直到达到任何类的成员及其依赖项。如果您双击任何节点，将打开一个新窗口，显示匹配的源代码，并将光标定位在该成员定义的确切位置。
- en: This ability gives us a distinct look at the code and its relationships, where
    it's possible to quickly identify which member is being used by which and which
    libraries a class depends on, among other useful information.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 这种能力让我们能够清晰地看到代码及其关系，可以快速识别哪些成员被哪些成员使用，以及一个类依赖于哪些库，以及其他有用的信息。
- en: 'The following screenshot illustrates this, marking two factors of interest:
    our controllers and the application''s configuration classes:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图说明了这一点，标记了两个感兴趣的因素：我们的控制器和应用程序的配置类：
- en: '![Application''s architecture using Visual Studio](img/image00622.jpeg)'
  id: totrans-294
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Visual Studio 的应用程序架构](img/image00622.jpeg)'
- en: If you inspect the node's details, you'll see that you can keep on going deep
    down until you get all the details of the element checked.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您检查节点的详细信息，您会看到您可以继续深入，直到获取元素的完整详细信息。
- en: Also, in the **Layout** submenu of the DGML editor, you can find extra analyzers
    to check for circular references, finding hubs or identifying unreferenced nodes.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在 DGML 编辑器的 **布局** 子菜单中，您可以找到额外的分析器来检查循环引用、查找中心节点或识别未引用的节点。
- en: Besides, the **Filters** window, which shows up next to the Solution Explorer,
    presents a list of the element types included in the diagram, all marked by default.
    To get a better understanding of what you have, you can unselect elements and
    the diagram will update automatically to show a new diagram, giving you the ability
    to change or save any view separately for a later study.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，**过滤器** 窗口，它出现在解决方案资源管理器旁边，显示包含在图中的元素类型列表，所有元素都默认选中。为了更好地了解您拥有的内容，您可以取消选择元素，然后图表将自动更新以显示新的图表，让您能够单独更改或保存任何视图以供以后研究。
- en: There's much more functionality available, as you'll see when you go through
    the distinct options of the editor.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的功能还有很多，当你浏览编辑器的不同选项时，你会看到这些功能。
- en: 'The other main feature of this menu is UML diagrams. It allows you to create
    a separate project, modeling project, based on the UML diagram of your choice
    or add the new diagrams to an existing project (refer to the screenshot):'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 该菜单的另一个主要功能是UML图。它允许您基于所选的UML图创建一个单独的项目，即建模项目，或者将新图添加到现有项目中（参见图表）：
- en: '![Application''s architecture using Visual Studio](img/image00623.jpeg)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![使用Visual Studio的应用程序架构](img/image00623.jpeg)'
- en: Class diagrams
  id: totrans-301
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 类图
- en: One of the most interesting features of Visual Studio Enterprise (and, also
    in some other versions) is the capability to create class diagrams from the existing
    code. It was originally linked to UML Class diagrams, but now it belongs directly
    to the class diagramming features as a separate template.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio Enterprise（以及某些其他版本）最有趣的功能之一是能够从现有代码创建类图。最初它与UML类图相关联，但现在它直接属于类图绘制功能，作为一个单独的模板。
- en: For example, we can create a new class diagram for our project from the **New/Class
    Diagram** option in the **Add** menu. This will take you to a new editing surface,
    where you can drag and drop classes (just our classes and not the files they're
    stored in).
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以从**添加**菜单中的**新/类图**选项为我们的项目创建一个新的类图。这将带您到一个新的编辑表面，在那里您可以拖放类（只是我们的类，而不是它们存储的文件）。
- en: 'The editor will reverse-engineer our classes, so we can easily have our controllers''
    diagrams in three simple actions and come up with a figure like this:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑器将逆向工程我们的类，因此我们可以通过三个简单的动作轻松地拥有我们的控制器图，并得到如图所示的图形：
- en: '![Class diagrams](img/image00624.jpeg)'
  id: totrans-305
  prefs: []
  type: TYPE_IMG
  zh: '![类图](img/image00624.jpeg)'
- en: 'Overall, we have a complete infrastructure to express the details of our solutions
    and comply with the life cycle frameworks: either we use MSF or any other option.'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，我们有一个完整的基础设施来表达我们解决方案的细节并符合生命周期框架：要么我们使用MSF，要么使用任何其他选项。
- en: Testing
  id: totrans-307
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试
- en: Testing is about checking the quality of a product. Numerous techniques allow
    a programmer to test software, although the first actions should define exactly
    what is to be tested.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 测试是关于检查产品的质量。许多技术允许程序员测试软件，尽管最初的动作应该精确地定义要测试的内容。
- en: 'There are many approaches to testing: unit tests, regression tests, behavioral
    tests, integration tests, cyclomatic complexity tests, and many others, although
    unit tests are probably the most used among programmers.'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 测试有许多方法：单元测试、回归测试、行为测试、集成测试、循环复杂度测试等，尽管单元测试可能是程序员中使用最广泛的。
- en: Unit tests verify the correctness of a function under certain assertions that
    the tester establishes using sentences expressed in the same language as the rest
    of the solution but specifically intended to launch a test engine.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 单元测试通过测试者使用与解决方案其余部分相同语言表达的句子所建立的某些断言，来验证函数的正确性。
- en: Tip
  id: totrans-311
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Note that this doesn't guarantee that the code unit is correct; it only guarantees
    that it passes the conditions asserted by the test.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这并不保证代码单元是正确的；它只保证它通过了测试所断言的条件。
- en: In the Agile Development Model (and in Extreme Model), part of the development
    phase adheres to the Test-Driven Design paradigm. In that model, you test units
    of implementation (functions, classes, or modules), expecting a correct execution
    of the unit in a way that drives the code that follows.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 在敏捷开发模型（以及在极限模型中），开发阶段的一部分遵循测试驱动设计范式。在该模型中，您测试实现单元（函数、类或模块），期望单元以正确执行的方式驱动后续的代码。
- en: In the alternative model named **Behavior-Driven Design** (or **BDD**), we understand
    by behavior how a use case is resolved and completed, giving the process a collaboration
    context that extends the results to nonprogrammers (for instance, it can be shared
    with the *user experience* part of the Team Model).
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 在名为**行为驱动设计**（或**BDD**）的替代模型中，我们通过行为来理解用例是如何被解决和完成的，这为过程提供了一个协作背景，将结果扩展到非程序员（例如，可以与团队模型的*用户体验*部分共享），*难以遗忘*。
- en: Visual Studio offers wide support for testing, that's focused on unit tests
    and the most popular testing techniques. Let's review the way it works using a
    new ASP.NET MVC application.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio提供了广泛的测试支持，专注于单元测试和最流行的测试技术。让我们通过一个新的ASP.NET MVC应用程序来回顾它是如何工作的。
- en: Testing our application in Visual Studio
  id: totrans-316
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Visual Studio中测试我们的应用程序
- en: The recommended procedure to test our application in Visual Studio would be
    to create our application and indicate—at creation time—that we're going to use
    a test project as well.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中测试我们的应用程序的推荐步骤是创建我们的应用程序，并在创建时指出我们将使用测试项目。
- en: 'To simplify this explanation and, at the same time, make it easier for you
    to check this feature, I''ll create another MVC project, but this time, I''ll
    make sure that a test project is selected from the beginning in parallel to the
    main one (refer to the following screenshot):'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化这个解释，同时让你更容易检查这个功能，我将创建另一个 MVC 项目，但这次，我会确保从一开始就与主项目并行选择一个测试项目（参考以下截图）：
- en: '![Testing our application in Visual Studio](img/image00625.jpeg)'
  id: totrans-319
  prefs: []
  type: TYPE_IMG
  zh: '![在 Visual Studio 中测试我们的应用程序](img/image00625.jpeg)'
- en: Tip
  id: totrans-320
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: It's not absolutely necessary, but strongly recommendable, that you create a
    separate project for testing. This will also help other members of the team if
    you consider that testing integrates extremely well with Team Foundation Server,
    and you can program the cadence and types of test to perform, assign responsibilities
    for the results, and so on.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这不是绝对必要的，但强烈建议你为测试创建一个单独的项目。如果你认为测试与 Team Foundation Server 集成得非常好，这也会帮助团队的其他成员，你可以编程测试的节奏和类型，分配结果的责任等等。
- en: Inside the test project, a new class is created by default in order to test
    the `Home` controller named `HomeControllerTest`. It contains three methods, with
    the same names as the action methods included in the controller.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试项目中，默认创建了一个名为 `HomeControllerTest` 的新类来测试 `Home` 控制器。它包含三个方法，与控制器中包含的操作方法同名。
- en: Observe, however, that both class and methods are marked with attributes [`TestClass`]
    and [`TestMethod`], respectively. This indicates the test engine, which members
    are part of the testing goals, and which ones should be only considered helper
    elements that collaborate in the testing process.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，请注意，类和方法分别用属性 `TestClass` 和 `TestMethod` 标记。这表明测试引擎，哪些成员是测试目标的一部分，哪些应该仅被视为在测试过程中协作的辅助元素。
- en: Now, it's time to compile the solution (both projects) and open the **Test Explorer**
    window that you'll find in the **Test/Windows** menu. After a few seconds, the
    test engine will detect all the tests available in the solution and show them
    in the upcoming list.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候编译解决方案（两个项目）并打开位于 **测试/窗口** 菜单中的 **测试资源管理器** 窗口了。几秒钟后，测试引擎将检测到解决方案中所有可用的测试，并在即将出现的列表中显示它们。
- en: Note that you will be offered a menu that lets you run all the tests or just
    the one selected or even create a playlist in which you indicate exactly which
    test you want to prove (all at once).
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，你会看到一个菜单，让你运行所有测试或仅运行选定的测试，甚至创建一个播放列表，其中你可以指定你想要证明的确切测试（一次性完成）。
- en: 'If you select only one test and run it, when the test succeeds, it will be
    marked **Passed**, and a new list will show the list of passed tests and the pending
    ones. For instance, after executing the test for the **About** method, you should
    see something like this:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只选择一个测试并运行它，当测试成功时，它将被标记为 **通过**，并将显示一个新列表，列出已通过和待定的测试。例如，在执行 **About** 方法的测试后，你应该看到如下内容：
- en: '![Testing our application in Visual Studio](img/image00626.jpeg)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
  zh: '![在 Visual Studio 中测试我们的应用程序](img/image00626.jpeg)'
- en: After using the **Run All** option, the three tests should pass and be listed
    as correct. However, what if something goes wrong? To check what happens, change
    the string inside the `About` test method for any other string, and save the code.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 **运行所有** 选项后，三个测试应该通过并显示为正确。然而，如果出了问题怎么办？为了检查发生了什么，将 `About` 测试方法中的字符串更改为任何其他字符串，并保存代码。
- en: After recompiling, you will learn how the test will not appear as passed; if
    you run the test, it will fail, and the second window of **Test Explorer** will
    present a list of references indicating what went wrong in order to give you a
    clue about how to fix the problem.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 重新编译后，你会了解到测试不会显示为通过；如果你运行测试，它将会失败，**测试资源管理器**的第二个窗口将显示一个引用列表，指出出了什么问题，以便给你提供如何解决问题的线索。
- en: Keep in mind that tests can be debugged, as with any other code. This will surely
    give you more clues about what's wrong with the test and with your code.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，测试可以像其他任何代码一样进行调试。这肯定会给你更多关于测试和代码中存在问题的线索。
- en: 'Another aspect to keep in mind is that your testing project will have to add
    references to the project to be tested as well as namespaces, such as using `Microsoft.VisualStudio.TestTools.UnitTesting`.
    In this demo project, Visual Studio does that by default, but if you add a new
    testing project, those references will depend on you:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要考虑的方面是，您的测试项目必须添加对要测试的项目以及命名空间的引用，例如使用 `Microsoft.VisualStudio.TestTools.UnitTesting`。在这个演示项目中，Visual
    Studio 默认会这样做，但如果您添加一个新的测试项目，这些引用将取决于您：
- en: '![Testing our application in Visual Studio](img/image00627.jpeg)'
  id: totrans-332
  prefs: []
  type: TYPE_IMG
  zh: '![在 Visual Studio 中测试我们的应用程序](img/image00627.jpeg)'
- en: Finally, let's mention that there are several different assertions that you
    can use (check the Intellisense after the `Assert` class) and also that you can
    opt for a different testing environment. A search for test in the **Extensions
    and Updates** menu will show you a number of other testing frameworks that Visual
    Studio admits, such as NUnit Test, Jasmine, Karma, and so on.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们提一下，您可以使用几种不同的断言（检查 `Assert` 类之后的 Intellisense），并且您还可以选择不同的测试环境。在 **扩展和更新**
    菜单中搜索测试将显示 Visual Studio 承认的许多其他测试框架，例如 NUnit 测试、Jasmine、Karma 等。
- en: Some of them (NUnit, for instance) are valid for C# as well, and others are
    focused on other languages, such as Jasmine and Karma, which are very popular
    when testing JavaScript solutions.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一些（例如 NUnit）也适用于 C#，而其他一些则专注于其他语言，如 Jasmine 和 Karma，它们在测试 JavaScript 解决方案时非常受欢迎。
- en: The Analyze menu
  id: totrans-335
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**分析** 菜单'
- en: The **Analyze** menu lets you calculate code metrics (such as the Cyclomatic
    Complexity, Depth of Inheritance, Class Coupling, and others), which offer other
    aspects or views of your code's quality.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '**分析** 菜单让您可以计算代码度量（如循环复杂度、继承深度、类耦合等），这些度量提供了对代码质量的其他方面或视角。'
- en: You can also check the code in search for inaccuracies using the **Code Analysis**
    configuration in the project's properties window (a feature we've already commented
    on in [Chapter 4](part0028.xhtml#aid-QMFO2 "Chapter 4. Comparing Approaches for
    Programming"), *Comparing Approaches for Programming*).
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用项目属性窗口中的 **代码分析** 配置在代码中查找不准确之处（我们已在 [第 4 章](part0028.xhtml#aid-QMFO2
    "第 4 章。比较编程方法") 中对此进行了评论，*比较编程方法*）。
- en: The end of the life cycle – publishing the solution
  id: totrans-338
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生命周期结束 – 发布解决方案
- en: Publication (deployment) is the final step of the Governance Model, and it may
    lead to a new version or upgrade.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 发布（部署）是治理模型的最终步骤，可能会导致新版本或升级。
- en: Another common possibility is to enter into maintenance time, in which new modifications
    are proposed and the whole cycle starts again—only with a much more reduced scope
    in functionality (and thus, in the number or team members implied).
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种常见的可能性是进入维护时间，在此期间会提出新的修改，整个周期再次开始——但功能范围（以及因此涉及的团队成员数量）将大大减少。
- en: Visual Studio allows you to publish solutions in different ways depending on
    the type of application. Additionally, we can also use third-party versions that
    only require a free registration, such as the light InstallShield version that
    the IDE offers in the **Other Projects** section.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 允许您根据应用程序类型以不同的方式发布解决方案。此外，我们还可以使用第三方版本，这些版本只需要免费注册，例如 IDE 在 **其他项目**
    部分提供的轻量级 InstallShield 版本。
- en: For Web Applications, there are many options. You can configure deployment using
    Team Foundation Server, or in this case, we can explore how to deploy this demo
    right from the IDE.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Web 应用程序，有许多选项。您可以使用 Team Foundation Server 配置部署，或者在这种情况下，我们可以探索如何直接从 IDE
    部署此演示。
- en: 'Just select **Publish** in the **Build** menu (or right-click on the project),
    and a new P**ublish Web** window will show the main options:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 只需在 **构建** 菜单中选择 **发布**（或右键单击项目），就会显示一个新窗口 **发布 Web**，其中包含主要选项：
- en: '![The end of the life cycle – publishing the solution](img/image00628.jpeg)'
  id: totrans-344
  prefs: []
  type: TYPE_IMG
  zh: '![生命周期结束 – 发布解决方案](img/image00628.jpeg)'
- en: 'A profile is required, and you can choose a previous profile publication (if
    there''s one defined) or select the **Custom** option, give it a name, and select
    the publication targets: **Web Deploy**, **Web Deploy Package**, **FTP**, or **File
    System**.'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 需要配置文件，您可以选择以前的配置文件发布（如果已定义）或选择 **自定义** 选项，给它命名，并选择发布目标：**Web Deploy**、**Web
    Deploy 包**、**FTP** 或 **文件系统**。
- en: If you want to try the results before performing a real implementation, the
    **File System** option is useful. Create a new folder to serve as a destination,
    and instruct the Assistant to publish the application there.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在实际实施之前尝试结果，**文件系统**选项很有用。创建一个新的文件夹作为目标位置，并指示助手将应用程序发布到那里。
- en: If everything succeeds (you'll be informed about it in the **Output** window),
    all the required files will be copied (binaries included) to the destination folder,
    where you'll be able to check whether anything's missing and retouch the process
    until is completed.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利（你将在**输出**窗口中收到通知），所有必需的文件（包括二进制文件）都将被复制到目标文件夹，你将能够检查是否缺少任何内容，并在完成前对过程进行修改。
- en: Summary
  id: totrans-348
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we went through the application life cycle process, starting
    with a review of Microsoft's Solution Framework and its basic recommendations
    and guidelines.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了应用程序的生命周期过程，从回顾微软的解决方案框架及其基本建议和指南开始。
- en: Through MSF, we explored the characteristics of the Team and Governance Models
    and how to configure the roles of our development people and their responsibilities
    and what the main assets of the application are.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 通过MSF，我们探讨了团队和治理模型的特点以及如何配置我们开发人员的角色和责任以及应用程序的主要资产。
- en: We also looked at the main principles that apply to the design of a Risk Model,
    and the techniques used to assess the application's risks.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还研究了适用于风险模型设计的主要原则以及评估应用程序风险的所用技术。
- en: Then, we reviewed the many options that Visio offers in order to create deliverables
    that visually express different aspects of our application.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们回顾了Visio提供的许多选项，以便创建能够直观表达我们应用程序不同方面的交付成果。
- en: Finally, we covered other aspects of the architecture, testing, and deployment
    of the applications available in Visual Studio Enterprise Edition.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们涵盖了Visual Studio Enterprise Edition中可用应用程序的架构、测试和部署的其他方面。
- en: In the next chapter, we will keep on talking about projects, but this time,
    the focus will be on the quality of the code and how good practices, well-known
    recommendations, software patterns and the like will help you in a better software
    design in order to improve your solution's stability and maintenance.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将继续讨论项目，但这次的重点将是代码的质量以及良好的实践、已知的建议、软件模式等如何帮助你进行更好的软件设计，以改善解决方案的稳定性和维护性。
