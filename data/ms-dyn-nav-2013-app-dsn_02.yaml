- en: Chapter 2. A Sample Application
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章. 示例应用程序
- en: Let's create a structure of our own in Microsoft Dynamics NAV. To do this, we
    must think of something that is not already available in the standard package
    but can be built on top of it.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在微软Dynamics NAV中创建一个自己的结构。为此，我们必须想到一些在标准包中尚未提供但可以在此基础上构建的东西。
- en: For our example application, we will run a squash court. Running a squash court
    is simple to understand but something we cannot do without changing and expanding
    the product. In order to define our changes, we first need to make a fit-gap analysis.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的示例应用程序，我们将运行一个网球场。运行网球场很容易理解，但我们不能不改变和扩展产品来做这件事。为了定义我们的更改，我们首先需要进行适配-缺口分析。
- en: After this chapter, you will have better understanding on how to reuse the framework
    of the Microsoft Dynamics NAV application. We will show how to reverse engineer
    the application and to study its functionality by going into the application code.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章之后，你将更好地理解如何重用微软Dynamics NAV应用程序的框架。我们将展示如何通过进入应用程序代码来逆向工程应用程序并研究其功能。
- en: For this example, some new and changed objects are required. The [Appendix](apa.html
    "Appendix A. Installation Guide"), *Installation Guide*, describes where to find
    the objects and how to install and activate them.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个例子，需要一些新的和更改的对象。《[附录](apa.html "附录A. 安装指南")》，*安装指南*，描述了如何找到这些对象以及如何安装和激活它们。
- en: In the first part, we will look at how to reverse engineer the standard application
    to look at and learn how it works and how to reuse the structures in our own solutions.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一部分，我们将研究如何逆向工程标准应用程序，以查看和学习它是如何工作的，以及如何在我们自己的解决方案中重用这些结构。
- en: In the second part of the chapter, we will learn how to use the journals and
    entries in a custom application.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的第二部分，我们将学习如何在自定义应用程序中使用日记和条目。
- en: Lastly, we will look at how to integrate our solution with the standard application;
    in our case, sales invoicing.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将研究如何将我们的解决方案与标准应用程序集成；在我们的案例中，是销售开票。
- en: Fit-gap analysis
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 适配-缺口分析
- en: When we do a fit-gap analysis, we look at the company's processes and define
    what we can and cannot do with the standard package. When a business process can
    be handled with the standard software we call this a **Fit**. When this cannot
    be done it's called a **Gap**. All gaps have to be either developed or we need
    to purchase an add-on.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们进行适配-缺口分析时，我们查看公司的流程，并定义我们可以和不能使用标准包做什么。当一个业务流程可以用标准软件处理时，我们称之为**适配**。当这不能做到时，我们称之为**缺口**。所有缺口都必须开发，或者我们需要购买一个附加组件。
- en: However, even when something could be done with standard software features it
    does not necessarily mean that doing this is wise. The standard application should
    be used for what it is designed for. Using standard features for something else
    might work in the current version but if it changes in a new version it might
    no longer fit. For this reason it is better to design something new instead of
    wrongly using standard features.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，即使可以使用标准软件功能来做某事，这并不意味着这样做是明智的。标准应用程序应该用于其设计的目的。将标准功能用于其他目的可能在当前版本中可行，但如果在新版本中发生变化，可能就不再适用。因此，最好设计一些新的东西，而不是错误地使用标准功能。
- en: Designing a squash court application
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计网球场应用程序
- en: The basic process of a squash court company is renting the courts to squash
    players; both members and non-members. There is a reservation and invoicing process
    handling different rates for members and non-members.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 网球场公司的基本流程是出租网球场给网球场球员；会员和非会员。有一个处理会员和非会员不同价格的预订和开票流程。
- en: Although this could be implemented using items as squash courts and customers
    as players, this would be a typical example of using standard features wrongly.
    Instead of doing this, we will look at how items and customers are designed and
    use this to create a new squash court application.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管可以使用网球场作为项目，顾客作为玩家来实现这一点，但这将是一个典型的错误使用标准功能的例子。而不是这样做，我们将研究项目和顾客是如何设计和使用的，并利用这一点来创建一个新的网球场应用程序。
- en: Designing a specific application using standard NAV features is a matter of
    **total cost of ownership** (**TCO**). If only one customer would use this solution,
    it would be better to use the standard application in a creative way. However,
    if we deploy the design from this chapter on a multi-tenant architecture and let
    thousands of companies run it, it would be economically possible to make the best
    application for the job. Keep this in mind each time you make a decision to design.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用标准 NAV 功能设计一个特定应用程序是**总拥有成本**（**TCO**）的问题。如果只有一个客户使用这个解决方案，最好以创新的方式使用标准应用程序。然而，如果我们从本章开始部署设计到多租户架构，并让成千上万的公司运行它，那么从经济上讲，制作最佳应用程序是可行的。每次你做出设计决策时，都要记住这一点。
- en: Look, learn, and love
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 看，学，爱
- en: To determine the design for this application, we will first look at the parts
    of the standard application, which we can use to learn how they work. We will
    use this knowledge in our own design.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确定这个应用程序的设计，我们首先将查看标准应用程序的各个部分，我们可以使用这些部分来学习它们是如何工作的。我们将利用这些知识来设计我们自己的应用程序。
- en: In Microsoft Dynamics NAV, customer and vendor master data are maintained using
    **relationship management** (**RM**). For our solution, we will create a new master
    data for squash players being the business part of the application. This will
    also be integrated with RM.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Microsoft Dynamics NAV 中，客户和供应商主数据是通过**关系管理**（**RM**）来维护的。对于我们的解决方案，我们将创建一个新的主数据，用于表示壁球运动员，作为应用程序的业务部分。这也会与
    RM 集成。
- en: To design the squash court, we will look at the design of items in the standard
    package. The squash court will be the product part of our application with a journal
    to create reservation entries, which we can invoice.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设计壁球场地，我们将查看标准包中项目的布局。壁球场地将是我们的应用程序的产品部分，有一个日记来创建预订条目，我们可以对其开票。
- en: For this invoicing process, we will use and integrate with the sales part of
    Microsoft Dynamics NAV.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个开票流程，我们将使用并集成 Microsoft Dynamics NAV 的销售部分。
- en: Drawing the table and posting schema
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 绘制表格和过账方案
- en: After we have decided on the design of our application, we can draw the tables
    and post the routines as we did in the previous chapter. This will clarify the
    design for others and guide us through the development process.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们决定应用程序的设计后，我们可以像上一章所做的那样绘制表格和过账程序。这将向其他人阐明设计，并指导我们通过开发过程。
- en: '![Drawing the table and posting schema](img/0365EN_02_01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![绘制表格和过账方案](img/0365EN_02_01.jpg)'
- en: In the preceding diagram, the objects in **Relationship Management** and **Sales**
    are standard objects that we will possibly need to modify. The objects for the
    **Squash Application** are new objects but based on similar objects in the standard
    application.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图中，**关系管理**和**销售**中的对象是标准对象，我们可能需要对其进行修改。**壁球应用程序**的对象是新的对象，但基于标准应用程序中的类似对象。
- en: The project approach
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 项目方法
- en: In order to keep track of our project, we'll cut the changes into smaller tasks.
    The first task will be to do the changes in relationship management to be able
    to create a squash player from a contact. The second part is to create squash
    courts. The reservation and invoice processes are part three and four.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了跟踪我们的项目，我们将把更改分成更小的任务。第一个任务是进行关系管理中的更改，以便能够从联系人创建壁球运动员。第二部分是创建壁球场地。预订和开票流程是第三和第四部分。
- en: Interfacing with the standard application
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与标准应用程序接口
- en: In our schema, we can see that we have two processes where we need to work on
    the standard Microsoft Dynamics NAV processes, which are **Relationship Management**
    and **Sales**.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的架构中，我们可以看到我们有两个流程需要在标准 Microsoft Dynamics NAV 流程上工作，这些流程是**关系管理**和**销售**。
- en: Design patterns
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计模式
- en: To create the squash court application, we can use proven design patterns. This
    will limit the risk of our development's success and make it easy to communicate
    with others who are familiar with the patterns.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建壁球场地应用程序，我们可以使用经过验证的设计模式。这将限制我们开发成功的风险，并使与其他熟悉这些模式的人沟通变得容易。
- en: Examples of the patterns we will use are master data, number series, and journals.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的模式示例包括主数据、编号序列和日记。
- en: Not everything that you need will be documented in patterns. Sometimes it is
    necessary to innovate. If you do this, it is important to still imagine your design
    as a pattern and document it for future use.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 并非你需要的一切都会在模式中记录。有时创新是必要的。如果你这样做，仍然重要的是要想象你的设计作为一个模式，并为未来的使用进行记录。
- en: Getting started
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始
- en: In the first part of the design process, we will look at how to reverse engineer
    the standard application in order to learn and reuse the knowledge in our own
    solution.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计过程的第一个部分，我们将查看如何逆向工程标准应用程序，以便在我们的解决方案中学习和重用知识。
- en: Creating squash players
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建壁球运动员
- en: For the administration of our squash players, we use the data from the contact
    table. In the standard product, it is possible to create a customer or vendor
    with the contact data. We require the same functionality to create squash players
    so let's have a look at how this is done by Microsoft.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们壁球运动员的管理，我们使用联系表中的数据。在标准产品中，可以使用联系数据创建客户或供应商。我们需要创建壁球运动员的相同功能，让我们看看微软是如何实现的。
- en: 'Open **Contact Card** and try to find this function, as shown in the following
    screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 打开**联系人卡**并尝试找到此功能，如下截图所示：
- en: '![Creating squash players](img/0365EN_02_02.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![创建壁球运动员](img/0365EN_02_02.jpg)'
- en: 'We want a function like this for our squash players. So let''s get in and see
    what it does. For this, we need to design the page and look at the actions. The
    page number in this case is **5050**, which we can find by clicking on **About
    this Page** in the top-right corner of the page, as shown in the following screenshot:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望为我们的壁球运动员有一个这样的功能。所以让我们进去看看它做了什么。为此，我们需要设计页面并查看操作。在这种情况下，页面编号是**5050**，我们可以通过点击页面右上角的**关于此页面**来找到它，如下截图所示：
- en: '![Creating squash players](img/0365EN_02_03.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![创建壁球运动员](img/0365EN_02_03.jpg)'
- en: This option can be very useful to find information about the fields that are
    not on the page, the filters, or the source table.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 此选项可以非常有助于查找页面上的字段信息、过滤器或源表。
- en: '![Creating squash players](img/0365EN_02_04.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![创建壁球运动员](img/0365EN_02_04.jpg)'
- en: 'To open the page, we need to open **Object Designer** in **Development Environment**
    (*Shift* + *F12*), as shown in the following screenshot:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要打开页面，我们需要在**开发环境**中打开**对象设计器**（*Shift* + *F12*），如下截图所示：
- en: '![Creating squash players](img/0365EN_02_05.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![创建壁球运动员](img/0365EN_02_05.jpg)'
- en: 'Here, we can find **5050 Contact Card** in **Page**:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以在**页面**中找到**5050 联系人卡**：
- en: '![Creating squash players](img/0365EN_02_06.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![创建壁球运动员](img/0365EN_02_06.jpg)'
- en: We are looking for **Actions** on this page. They are kind of difficult to find
    if you are unfamiliar with **Page Designer**. To open **Actions**, the cursor
    should be on the blank line below the last populated line. Then click on the right
    mouse button and **Actions** or select **Actions** from the **View** drop-down
    menu.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在寻找此页面上的**操作**。如果你不熟悉**页面设计器**，它们可能很难找到。要打开**操作**，光标应位于最后一行填充内容下方的空白行。然后点击鼠标右键选择**操作**，或者从**视图**下拉菜单中选择**操作**。
- en: '![Creating squash players](img/0365EN_02_07.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![创建壁球运动员](img/0365EN_02_07.jpg)'
- en: Tip
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Alternatively, you can also use the **Preview** option from the **View** drop-down
    menu to find the action.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你也可以使用**视图**下拉菜单中的**预览**选项来查找操作。
- en: 'Now, we are in the **Action Designer** and we can search for the **Create as**
    option. To see what it does, we need to go into the C/AL code by pressing *F9*
    or by selecting **C/AL Code** from the **View** drop-down menu:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们处于**操作设计器**中，我们可以搜索**创建为**选项。要查看它做了什么，我们需要通过按 *F9* 或从**视图**下拉菜单中选择**C/AL
    代码**进入 C/AL 代码：
- en: '![Creating squash players](img/0365EN_02_09.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![创建壁球运动员](img/0365EN_02_09.jpg)'
- en: CreateVendor versus CreateCustomer
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CreateVendor 与 CreateCustomer
- en: In Microsoft Dynamics NAV, there is a small difference between creating a customer
    and a vendor from a contact. When creating a customer, the system will ask us
    to select a customer template. The **Vendor** option does not have that. To keep
    things simple, we will look at and learn from the `Vendor` function in this chapter.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Microsoft Dynamics NAV 中，从联系人创建客户和供应商之间有一个小的区别。当创建客户时，系统会要求我们选择一个客户模板。**供应商**选项没有这个要求。为了保持简单，我们将在本章中查看并学习“供应商”功能。
- en: The customer and vendor table are almost identical in structure and fields are
    numbered similarly in both tables. This is called transaction mirroring between
    sales and purchasing, which we will discuss further in [Chapter 6](ch06.html "Chapter 6. Trade"),
    *Trade*. We will mirror our new table in a similar way to the other Microsoft
    Dynamics NAV tables.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 客户和供应商表在结构上几乎相同，字段在两个表中都按类似方式编号。这被称为销售和采购之间的交易镜像，我们将在[第 6 章](ch06.html "第 6
    章。贸易")*贸易*中进一步讨论。我们将以类似的方式镜像我们的新表到其他 Microsoft Dynamics NAV 表中。
- en: The C/AL code in **Action** tells us that when clicking on the **Menu** option,
    the function `CreateVendor` in the contact table is started. To copy this feature,
    we need to create a new function, `CreateSquashPlayer`. Let's keep that in mind
    while we dive further in this code.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**Action** 中的 C/AL 代码告诉我们，当点击 **菜单** 选项时，联系人表中的 `CreateVendor` 函数将被启动。为了复制此功能，我们需要创建一个新的函数，`CreateSquashPlayer`。让我们在深入研究此代码时记住这一点。'
- en: '![CreateVendor versus CreateCustomer](img/0365EN_02_10.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![CreateVendor 与 CreateCustomer 对比](img/0365EN_02_10.jpg)'
- en: 'Open the contact table (5050) and search for the function `CreateVendor`. You
    can find functions in a table by going into the C/AL code (*F9*) from anywhere
    in the table designer, and by using the **Find [Ctrl+F]** function, as shown in
    the following screenshot:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 打开联系人表（5050）并搜索函数 `CreateVendor`。您可以通过在表设计器中的任何位置进入 C/AL 代码（*F9*）以及使用 **查找 [Ctrl+F]**
    功能在表中查找函数，如下面的截图所示：
- en: '![CreateVendor versus CreateCustomer](img/0365EN_02_11.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![CreateVendor 与 CreateCustomer 对比](img/0365EN_02_11.jpg)'
- en: Reverse engineering
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 逆向工程
- en: We need to reverse engineer this code in order to see what we need to create
    for our `CreateSquashPlayer` function. We will look at each part of the C/AL code
    in order to decide whether we need it or not.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要逆向工程此代码，以便查看我们需要为我们的 `CreateSquashPlayer` 函数创建什么。我们将查看 C/AL 代码的每个部分，以决定我们是否需要它。
- en: '![Reverse engineering](img/0365EN_02_12.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![逆向工程](img/0365EN_02_12.jpg)'
- en: What does the following piece of code do?
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段做了什么？
- en: '[PRE0]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This tests the current record for a valid `Company No`. If this fails, we cannot
    continue and the end user gets a runtime error.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这测试当前记录的有效 `公司编号`。如果失败，则无法继续，最终用户将收到运行时错误。
- en: '[PRE1]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This reads the `Marketing Setup` table from the system and tests whether the
    `Bus. Rel. Code for Vendors` is valid. We need a new code for squash players here,
    which will be added as a new field to the setup table:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码从系统中读取 `Marketing Setup` 表并测试 `供应商业务关系代码` 是否有效。在这里，我们需要为壁球运动员添加一个新的代码，该代码将作为新字段添加到设置表中：
- en: '[PRE2]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here, the `Vendor` table is cleared and a function is called within that table,
    then a new record is inserted in the database while activating the necessary business
    logic. Then the same function is called again with another parameter. Since the
    `Vendor` table is what we are copying, we will write down that we might need a
    similar function as `SetInsertFromContact`:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，清除了 `Vendor` 表，并在该表中调用了一个函数，然后激活必要的业务逻辑的同时在数据库中插入了一条新记录。然后再次使用另一个参数调用相同的函数。由于
    `Vendor` 表是我们需要复制的，我们将写下我们可能需要一个类似于 `SetInsertFromContact` 的类似函数：
- en: '[PRE3]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This code checks whether the current contact is a company. If so, it populates
    the `ContComp` variable with this record. If not, it populates `ContComp` with
    the company our current contact is related to:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码检查当前联系人是否为公司。如果是，则使用此记录填充 `ContComp` 变量。如果不是，则使用当前联系人相关的公司填充 `ContComp`：
- en: '[PRE4]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The `ContBusRel` function refers to the table Contact Business Relation (5054)
    and is a linking table in the Microsoft Dynamics NAV data model. Technically,
    a contact can be connected to multiple customers and vendors although this does
    not make sense. This table is populated here. Let''s write down that we need to
    look into this table and see if it needs changes:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`ContBusRel` 函数引用联系人业务关系表（5054），在 Microsoft Dynamics NAV 数据模型中是一个链接表。技术上，一个联系人可以连接到多个客户和供应商，尽管这没有意义。此表在此处填充。让我们写下我们需要检查此表并查看是否需要更改：'
- en: '[PRE5]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '`UpdateCustVendBank` is an external codeunit that is used with the function
    `UpdateVendor`. We might need a copy of this function for our Squash players.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`UpdateCustVendBank` 是一个外部代码单元，与 `UpdateVendor` 函数一起使用。我们可能需要一个 `Squash players`
    的函数副本。'
- en: '[PRE6]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The preceding code gives a message box for the end user that the record is
    created with the new number. Now, we have a number of things on our to-do list:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码为最终用户显示一个消息框，告知记录已使用新编号创建。现在，我们的待办事项列表上有几件事情：
- en: Create a master data table that looks like the `Vendor` table.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个类似于 `Vendor` 表的主数据表。
- en: We need to copy the `CreateVendor` function.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要复制 `CreateVendor` 函数。
- en: Look at the `Contact Business Relation` table and the `CustVendBank-Update (5055)`
    codeunit.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看联系人业务关系表和 `CustVendBank-Update (5055)` 代码单元。
- en: 'Let''s look at the latter to learn something important before we start with
    the first:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在开始第一个函数之前先看看后者，以了解一些重要信息：
- en: '[PRE7]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This code synchronizes the contact table with the vendor table. It does that
    by using the `TRANSFERFIELDS` function. This function transfers all fields with
    the same number from one table to another. This means that we cannot be creative
    with our field numbering. For example, in the contact table, the **Name** field
    is number **2**. If we were to use a different number for the **Name** field,
    `TRANSFERFIELDS` would not copy the information.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码通过使用`TRANSFERFIELDS`函数同步联系表和供应商表。该函数将具有相同数字的所有字段从一个表转移到另一个表。这意味着我们无法在字段编号上发挥创意。例如，在联系表中，**Name**字段编号为**2**。如果我们为**Name**字段使用不同的编号，`TRANSFERFIELDS`将不会复制信息。
- en: 'Using this information, our table should look like this:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些信息，我们的表应该看起来像这样：
- en: '![Reverse engineering](img/0365EN_02_13.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![逆向工程](img/0365EN_02_13.jpg)'
- en: Notice that we use field **19** for our **Squash Player** specific field. This
    is because field **19** was used for **Budgeted Amount** in the vendor table.
    We can therefore safely assume that Microsoft will not use field **19** in the
    contact table in future.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们使用字段**19**为我们的**Squash Player**特定字段。这是因为字段**19**在供应商表中用于**Budgeted Amount**。因此，我们可以安全地假设微软将来不会在联系表中使用字段**19**。
- en: An alternative approach for this if we wanted to be even safer is to add the
    fields that are specific to our solution as fields in our add-on number series.
    In our case, it would be 123.456.700.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要更加安全，另一种方法是将特定于我们解决方案的字段作为我们的附加数字序列的字段。在我们的例子中，它将是123.456.700。
- en: Tip
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You can copy and paste fields from one table to another table. Note that table
    relations and C/AL code in the `OnValidate` and `OnLookup` trigger is copied as
    well. If the table we want to create is similar to an existing table, we could
    also use the **Save As** option from the **File** drop-down menu.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从一个表复制粘贴字段到另一个表。请注意，表关系和`OnValidate`和`OnLookup`触发器中的C/AL代码也会被复制。如果我们想创建的表类似于现有表，我们也可以使用**文件**下拉菜单中的**另存为**选项。
- en: 'The next step is to add some business logic to the table. We want this table
    to use number series functionality just like the vendor table. This requires some
    standard steps:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是为表添加一些业务逻辑。我们希望这个表使用数字序列功能，就像供应商表一样。这需要一些标准步骤：
- en: First we create the setup table. A number series is defined in a setup table.
    As the **Squash Court** module will be quite sophisticated, we'll create our own.![Reverse
    engineering](img/0365EN_02_14.jpg)
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们创建设置表。数字序列在设置表中定义。由于**Squash Court**模块将相当复杂，我们将创建自己的。[逆向工程](img/0365EN_02_14.jpg)
- en: Tip
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: On MSDN, you can watch a video about the singleton pattern at [http://msdn.microsoft.com/en-us/dynamics/nav/dn722393.aspx](http://msdn.microsoft.com/en-us/dynamics/nav/dn722393.aspx).
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MSDN上，你可以观看有关单例模式的视频，[http://msdn.microsoft.com/en-us/dynamics/nav/dn722393.aspx](http://msdn.microsoft.com/en-us/dynamics/nav/dn722393.aspx)。
- en: A setup table always has a single **Primary Key** field, as shown in the preceding
    screenshot, and the necessary setup fields. This table is designed to only have
    one single record.
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置表总是有一个单一的**主键**字段，如前图所示，以及必要的设置字段。这个表设计为只有一个记录。
- en: Then, we create a link to the number series. Our **Squash Player** table is
    now required to have a link to the number series. We can copy this field from
    the vendor table and can make a table relation to the **No. Series** table, as
    shown in the following screenshot:![Reverse engineering](img/0365EN_02_15.jpg)
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们创建一个链接到数字序列。现在，我们的**Squash Player**表需要有一个链接到数字序列。我们可以从供应商表中复制这个字段，并可以创建一个与**No.
    Series**表的表关系，如下截图所示：![逆向工程](img/0365EN_02_15.jpg)
- en: Now, we add the C/AL business logic to our table, but first we need to define
    the variables that are required. These are our new **Squash Setup** table and
    the **Number Series Management** codeunits.![Reverse engineering](img/0365EN_02_16.jpg)
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将C/AL业务逻辑添加到我们的表中，但首先我们需要定义所需的变量。这些是我们新的**Squash Setup**表和**Number Series
    Management**代码单元。[逆向工程](img/0365EN_02_16.jpg)
- en: We can define the variables in the specially created **C/AL Globals** menu.
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以在特别创建的**C/AL Globals**菜单中定义变量。
- en: '![Reverse engineering](img/0365EN_02_17.jpg)'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![逆向工程](img/0365EN_02_17.jpg)'
- en: Tip
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: It is highly recommended to use the Microsoft naming standard, which allows
    you to copy and paste a lot of code and makes it easier for others to read your
    code.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 强烈推荐使用微软的命名标准，这允许你复制粘贴大量代码，并使其他人更容易阅读你的代码。
- en: 'Number Series require three places of code. This code makes sure that the business
    logic of the Number Series functionality is always followed:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 数字系列需要三处代码。此代码确保数字系列功能的业务逻辑始终得到遵循：
- en: 'The following code goes into the `OnInsert` trigger. It populates the `No.`
    field with the next value of the Number Series:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码放入`OnInsert`触发器中。它使用数字系列的下一个值填充`No.`字段：
- en: '[PRE8]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The `OnValidate` trigger of the `No.` field tests when a user manually enters
    a value if that is allowed:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`No.`字段的`OnValidate`触发器测试当用户手动输入值时是否允许：'
- en: '[PRE9]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Lastly, we create a new `AssistEdit` function. This function is for readability
    and others reading your code afterwards. The code is used in the page or form
    and allows users to switch between linked number series:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们创建一个新的`AssistEdit`函数。这个函数是为了可读性，以及其他人阅读你之后的代码。代码用于页面或表单，并允许用户在链接的数字系列之间切换：
- en: '[PRE10]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: When the Number Series are in place, we can make the necessary change in the
    Contact Business Relation table.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 当数字系列就绪后，我们可以在接触业务关系表中做出必要的更改。
- en: 'In this table, we need to add the possibility to link squash players to contacts.
    This is done in the **Properties** window of **Table Designer** that can be accessed
    by pressing (*Shift* + *F4*) or by using the **Properties** option from the **View**
    drop-down menu, as shown in the following screenshot:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个表中，我们需要添加将壁球运动员链接到联系人的功能。这可以通过**表设计器**的**属性**窗口完成，该窗口可以通过按(*Shift* + *F4*)或使用**视图**下拉菜单中的**属性**选项访问，如下面的截图所示：
- en: '![Reverse engineering](img/0365EN_02_18.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![逆向工程](img/0365EN_02_18.jpg)'
- en: 'First, we add the **Squash player** option to the **Link to Table** field,
    as shown in the following screenshot:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将**壁球运动员**选项添加到**链接到表**字段中，如下面的截图所示：
- en: '![Reverse engineering](img/0365EN_02_19.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![逆向工程](img/0365EN_02_19.jpg)'
- en: Tip
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Options are converted to SQL Integer data types. Make sure to add some blank
    options so when Microsoft releases other functionality we are not impacted. Changing
    the integer value of an existing option field requires a lot of work.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 选项被转换为SQL Integer数据类型。确保添加一些空白选项，这样当微软发布其他功能时，我们不会受到影响。更改现有选项字段的整数值需要大量工作。
- en: 'Then, we create a table relation with our new table, as shown in the following
    screenshot:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们创建一个与我们的新表的关系，如下面的截图所示：
- en: '![Reverse engineering](img/0365EN_02_20.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![逆向工程](img/0365EN_02_20.jpg)'
- en: The next step is to expand the **CustVendBank-Update** codeunit with a new `UpdateSquashPlayer`
    function. This is a copy of the `UpdateVendor` function that we discussed before.
    We can add functions in the **Globals** menu.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是扩展**CustVendBank-Update**代码单元，添加一个新的`UpdateSquashPlayer`函数。这是之前讨论过的`UpdateVendor`函数的副本。我们可以在**全局**菜单中添加函数。
- en: There are two ways to copy a function. We can create a new function manually
    and copy the C/AL code and variables, or we can select a function from the list
    and use copy and paste and then rename the function.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 复制函数有两种方式。我们可以手动创建一个新函数并复制C/AL代码和变量，或者从列表中选择一个函数并使用复制和粘贴，然后重命名该函数。
- en: '![Reverse engineering](img/0365EN_02_21.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![逆向工程](img/0365EN_02_21.jpg)'
- en: Tip
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: When you add the `---` line to the function, others can see that it is not a
    Microsoft function. You can also include the project name like `---Squash`. This
    also makes the code easier to upgrade or to merge with other code.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在函数中添加`---`行时，其他人可以看到它不是一个微软函数。你还可以包括项目名称，如`---Squash`。这也使得代码更容易升级或与其他代码合并。
- en: 'This code also requires a new global variable, `SquashPlayer`:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码还需要一个新的全局变量，`SquashPlayer`：
- en: '[PRE11]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The final piece of preparation work is to add the **Bus. Rel. Code for Squash
    Players** field to the **Marketing Setup** table, as shown in the following screenshot:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的准备工作是向**营销设置**表添加**壁球运动员业务关系代码**字段，如下面的截图所示：
- en: '![Reverse engineering](img/0365EN_02_22.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![逆向工程](img/0365EN_02_22.jpg)'
- en: Tip
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: We use the same numbering in our fields as in our objects. This makes it easier
    in the future to see what belongs to what if more functionality is added.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在我们的字段中使用与我们的对象相同的编号。这样，如果将来添加更多功能，更容易看到什么属于什么。
- en: 'With all this preparation work, we can now finally go ahead and make our function
    in the contact table (5050) that we can call from the user interface:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成所有准备工作后，我们终于可以开始创建我们的函数了，这个函数位于接触表（5050）中，我们可以从用户界面调用它：
- en: '[PRE12]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Please note that we do not need the `SetInsertFromContact` function. This function
    enables users to create a new vendor first and create a contact using the vendor
    information. We do not want to support this method in our application.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们不需要`SetInsertFromContact`函数。此函数允许用户首先创建一个新的供应商，然后使用供应商信息创建一个联系。我们不想在我们的应用程序中支持此方法。
- en: 'Now, we can add the function to the page and test our functionality:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以将此功能添加到页面并测试我们的功能：
- en: '![Reverse engineering](img/0365EN_02_23.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![逆向工程](img/0365EN_02_23.jpg)'
- en: Designing a journal
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计日记
- en: Now, it is time to start on the product part of the squash application. In this
    part, we will no longer reverse engineer in detail. We will learn how to search
    in the standard functionality and reuse parts in our own software.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候开始壁球应用程序的产品部分了。在这一部分，我们将不再详细进行逆向工程。我们将学习如何在标准功能中搜索并重用我们自己的软件中的部分。
- en: For this part, we will look at resources in Microsoft Dynamics NAV. Resources
    are similar to using as products as items but far less complex making it easier
    to look and learn.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这部分，我们将查看Microsoft Dynamics NAV中的资源。资源类似于使用作为产品的项目，但远没有这么复杂，这使得查找和学习更容易。
- en: Squash court master data
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 壁球法庭主数据
- en: Our company has 12 courts that we want to register in Microsoft Dynamics NAV.
    This master data is comparable to resources so we'll go ahead and copy this functionality.
    Resources are not attached to the contact table like the vendor/squash player
    tables. We need the number series again so we'll add a new number series to our
    Squash Setup table.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们公司有12个法庭，我们想在Microsoft Dynamics NAV中注册这些法庭。这些主数据类似于资源，因此我们将继续并复制这个功能。资源不像供应商/壁球运动员表那样附加到联系表上。我们需要再次使用编号系列，所以我们将为我们的壁球设置表添加一个新的编号系列。
- en: 'The **Squash Court** table should look like this after creation:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 创建后，**壁球法庭**表应该看起来像这样：
- en: '![Squash court master data](img/0365EN_02_24.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![壁球法庭主数据](img/0365EN_02_24.jpg)'
- en: Chapter objects
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 章节对象
- en: With this chapter some objects are required. A description of how to import
    these objects can be found in the [Appendix](apa.html "Appendix A. Installation
    Guide"), *Installation Guide*.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 本章需要一些对象。有关如何导入这些对象的描述可以在[附录](apa.html "附录 A. 安装指南")，*安装指南*中找到。
- en: '![Chapter objects](img/0365EN_02_25.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![章节对象](img/0365EN_02_25.jpg)'
- en: After the import process is completed, make sure that your current database
    is the default database for the Role Tailored Client and run page 123456701, **Squash
    Setup**.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在导入过程完成后，请确保您的当前数据库是角色定制客户端的默认数据库，并运行页面123456701，**壁球设置**。
- en: '![Chapter objects](img/0365EN_02_26.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![章节对象](img/0365EN_02_26.jpg)'
- en: From this page, select the action **Initialize Squash Application**. This will
    execute the C/AL code in the `InitSquashApp` function of this page, which will
    prepare the demo data for us to play with. The objects are prepared and tested
    in a Microsoft Dynamics NAV 2013 R2 W1 database.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 从此页面，选择操作**初始化壁球应用程序**。这将执行此页面的`InitSquashApp`函数中的C/AL代码，这将为我们准备演示数据。对象是在Microsoft
    Dynamics NAV 2013 R2 W1数据库中准备和测试的。
- en: Reservations
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预订
- en: When running a squash court, we want to be able to keep track of reservations.
    Looking at standard Dynamics NAV functionality, it might be a good idea to create
    a squash player journal. The journal can create entries for reservations that
    can be invoiced.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行壁球法庭时，我们希望能够跟踪预订。查看标准Dynamics NAV功能，创建一个壁球运动员日记可能是个好主意。日记可以创建可以开票的预订条目。
- en: A journal needs the object structure. The journal is prepared in the objects
    delivered with this chapter. Creating a new journal from scratch is a lot of work
    and can easily lead to making mistakes. It is easier and safer to copy an existing
    journal structure from the standard application that is similar to the journal
    we need for our design.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 日记需要对象结构。日记是用本章提供的对象准备的。从头开始创建一个新的日记是一项大量工作，并且很容易导致出错。从类似我们设计所需的日记的标准应用程序中复制现有的日记结构更容易且更安全。
- en: 'In our example, we have copied the Resource Journals:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，我们已经复制了资源日记：
- en: '![Reservations](img/0365EN_02_27.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![预订](img/0365EN_02_27.jpg)'
- en: Tip
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You can export these objects in text format and then rename and renumber the
    objects to be reused easily. The Squash Journal objects are renumbered and renamed
    from the Resource Journal.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将这些对象以文本格式导出，然后重命名和重新编号要重用的对象。壁球日记对象是从资源日记中重新编号和重命名的。
- en: As explained in [Chapter 1](ch01.html "Chapter 1. Introduction to Microsoft
    Dynamics NAV"), *Introduction to Microsoft Dynamics NAV*, all journals have the
    same structure. The template, batch, and register tables are almost always the
    same whereas the journal line and ledger entry table contain function-specific
    fields. Let's have a look at all of them one by one.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第1章](ch01.html "第1章。Microsoft Dynamics NAV简介")中所述，*Microsoft Dynamics NAV简介*，所有期刊都具有相同的结构。模板、批次和登记簿表几乎总是相同的，而期刊行和总账条目表包含特定功能的字段。让我们逐一查看它们。
- en: 'The **Journal Template** has several fields, as shown in the following screenshot:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '**期刊模板**包含多个字段，如下面的截图所示：'
- en: '![Reservations](img/0365EN_02_28.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![预订](img/0365EN_02_28.jpg)'
- en: 'Let''s discuss these fields in more detail:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地讨论这些字段：
- en: '**Name**: This is the unique name. It is possible to define as many templates
    as required but usually one template per form ID and one for recurring will do.
    If you want journals with different source codes, you need to have more templates.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**名称**：这是一个唯一的名称。可以定义所需数量的模板，但通常每个表单ID一个模板，一个用于周期性即可。如果您需要具有不同源代码的期刊，则需要更多模板。'
- en: '**Description**: A readable and understandable description for its purpose.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**描述**：对其目的的一个可读且易于理解的描述。'
- en: '**Test Report ID**: All templates have a test report that allows the user to
    check for posting errors.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试报告ID**：所有模板都有一个测试报告，允许用户检查过账错误。'
- en: '**Form ID**: For some journals, more UI objects are required. For example,
    the General Journals have a special form for bank and cash.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表单ID**：对于某些期刊，需要更多的UI对象。例如，一般期刊有银行和现金的特殊表单。'
- en: '**Posting Report ID**: This report is printed when a user selects **Post**
    and **Print**.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过账报告ID**：当用户选择**过账**和**打印**时，打印此报告。'
- en: '**Force Posting Report**: Use this option when a posting report is mandatory.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**强制过账报告**：当必须生成过账报告时使用此选项。'
- en: '**Source Code**: Here you can enter a trail code for all the postings done
    via this journal.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**源代码**：在这里，您可以输入通过此期刊完成的全部条目的跟踪代码。'
- en: '**Reason Code**: This functionality is similar to **Source Code**.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原因代码**：此功能与**源代码**类似。'
- en: '**Recurring**: Whenever you post lines from a recurring journal, new lines
    are automatically created with a posting date defined in the recurring date formula.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**周期性**：每次从周期性期刊过账行时，都会自动创建新的行，并使用周期性日期公式中定义的过账日期。'
- en: '**No. Series**: When you use this feature the **Document No.** in the journal
    line is automatically populated with a new number from this Number Series.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编号系列**：当您使用此功能时，期刊行中的**文档编号**将自动填充从这个编号系列中的新编号。'
- en: '**Posting No. Series**: Use this feature for recurring journals.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过账编号系列**：用于周期性期刊。'
- en: 'The **Journal Batch** has various fields, as shown in the following screenshot:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '**期刊批次**包含各种字段，如下面的截图所示：'
- en: '![Reservations](img/0365EN_02_29.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![预订](img/0365EN_02_29.jpg)'
- en: 'Let''s discuss these fields in more detail:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地讨论这些字段：
- en: '**Journal Template Name**: The name of the journal template this batch refers
    to'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**期刊模板名称**：此批次所引用的期刊模板的名称'
- en: '**Name**: Each batch should have a unique code'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**名称**：每个批次都应该有一个唯一的代码'
- en: '**Description**: A readable and explaining description for this batch'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**描述**：对此次批次的一个可读且解释性的描述'
- en: '**Reason Code**: When populated this **Reason Code** will overrule **the Reason
    Code** from the **Journal Template**'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原因代码**：当填写此**原因代码**时，将覆盖**期刊模板**中的**原因代码**。'
- en: '**No. Series**: When populated this **No. Series** will overrule the **No.
    Series** from the **Journal Template**'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编号系列**：当填写此**编号系列**时，将覆盖**期刊模板**中的**编号系列**。'
- en: '**Posting No. Series**: When populated this **Posting No. Series** will overrule
    the **Posting No. Series** from the **Journal Template**'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过账编号系列**：当填写此**过账编号系列**时，将覆盖**期刊模板**中的**过账编号系列**。'
- en: 'The **Register** table has various fields, as shown in the following screenshot:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '**登记簿**表包含各种字段，如下面的截图所示：'
- en: '![Reservations](img/0365EN_02_30.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![预订](img/0365EN_02_30.jpg)'
- en: 'Terms from the **Journal Register** tab that you need to know would be:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要了解的来自**期刊登记簿**标签的术语包括：
- en: '**No.**: This field is automatically and incrementally populated for each transaction
    with this journal and there are no gaps between the numbers'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编号**：此字段为每个交易自动递增填充，并且数字之间没有空缺。'
- en: '**From Entry No.**: A reference to the first ledger entry created is with this
    transaction'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**起始条目编号**：此交易引用的是创建的第一个总账条目。'
- en: '**To Entry No.**: A reference to the last ledger entry is created with this
    transaction'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**至过账编号**：使用此交易创建的最后账簿过账的引用'
- en: '**Creation Date**: Always populated with the real date when the transaction
    was posted'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建日期**：始终填写交易过账的实际日期'
- en: '**User ID**: The ID of the end user who has posted the transaction'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户ID**：已发布交易的最后用户ID'
- en: The journal
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日记账
- en: The journal line has a number of mandatory fields that are required for all
    journals and some fields that are required for their designed functionality.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 日记账行有许多强制性字段，这些字段适用于所有日记账，以及一些适用于其设计功能的字段。
- en: In our case, the journal should create a reservation which then can be invoiced.
    This requires some information to be populated in the lines.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的案例中，日记账应该创建一个预订，然后可以开具发票。这需要在行中填写一些信息。
- en: Reservation
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 预订
- en: The reservation process is a logistical process that requires us to know the
    number of the squash court, the date, and the time of the reservation. We also
    need to know how long the players want to play. To check the reservation, it might
    also be useful to store the number of the squash player.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 预订流程是一个物流流程，需要我们知道网球场号码、预订日期和时间。我们还需要知道玩家想要玩多长时间。为了检查预订，存储网球场球员的号码也可能很有用。
- en: Invoicing
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 发票
- en: For the invoicing part, we need to know the price we need to invoice. It might
    also be useful to store the cost to see our profit. For the system to figure out
    the proper G/L Account for the turnover, we also need to define a General Product
    Posting Group. We will see more of how that works later in [Chapter 3](ch03.html
    "Chapter 3. Financial Management"), *Financial Management*.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 对于发票部分，我们需要知道需要开具发票的价格。存储成本以查看我们的利润也可能很有用。为了系统确定营业额的正确总账科目，我们还需要定义一个通用产品过账组。我们将在[第3章](ch03.html
    "第3章. 财务管理") *财务管理*中看到更多关于它是如何工作的内容。
- en: '![Invoicing](img/0365EN_02_31.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![发票](img/0365EN_02_31.jpg)'
- en: 'Let''s discuss these fields in more detail:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地讨论这些字段：
- en: '**Journal Template Name**: This is a reference to the current **Journal Template**.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日记账模板名称**：这是对当前**日记账模板**的引用。'
- en: '**Line No.**: Each journal has a virtually unlimited number of lines; this
    number is automatically incremented by 10000 allowing lines to be created in between.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**行号**：每个日记账都有几乎无限的行数；这个数字会自动增加10000，允许在行之间创建。'
- en: '**Entry Type**: This is the reservation or invoice.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过账类型**：这是预订或发票。'
- en: '**Document No.**: This number can be used to give to the squash player as a
    reservation number. When the **Entry Type** is **Invoice**, it is the invoice
    number.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档编号**：这个号码可以用作给网球场球员的预订号码。当**过账类型**为**发票**时，它是发票号码。'
- en: '**Posting Date**: This is usually the reservation date but when the **Entry
    Type** is **Invoice**, it might be the date of the invoice, which might differ
    from the posting date in the general ledger.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过账日期**：这通常是预订日期，但当**过账类型**为**发票**时，它可能是发票日期，这可能与总账的过账日期不同。'
- en: '**Squash Player No.**: This is a reference to the squash player who has made
    the reservation.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网球场球员编号**：这是对已预订的网球场球员的引用。'
- en: '**Squash Court No.**: This is a reference to the squash court.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网球场编号**：这是对网球的引用。'
- en: '**Description**: This is automatically updated with the number of the squash
    court, reservation date, and times, but can be changed by the user.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**描述**：这会自动更新为网球场编号、预订日期和时间，但可以被用户更改。'
- en: '**Reservation Date**: This is the actual date of the reservation.'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预订日期**：这是实际预订日期。'
- en: '**From Time**: This is the starting time of the reservation. We only allow
    whole and half hours.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从时间**：这是预订的开始时间。我们只允许整点和半小时。'
- en: '**To Time**: This is the ending time of the reservation. We only allow whole
    and half hours. This is automatically populated when people enter a quantity.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**至时间**：这是预订的结束时间。我们只允许整点和半小时。当人们输入数量时，这会自动填写。'
- en: '**Quantity**: This is the number of hours'' playing time. We only allow units
    of 0.5 to be entered here. This is automatically calculated when the times are
    populated.'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数量**：这是玩球时间的小时数。我们只允许输入0.5的倍数。当时间填写时，这会自动计算。'
- en: '**Unit Cost**: This is the cost to run a squash court for one hour.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单位成本**：这是运行一个网球场一小时的成本。'
- en: '**Total Cost**: This is the cost for this reservation.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**总成本**：这是此次预订的成本。'
- en: '**Unit Price**: This is the invoice price for this reservation per hour. This
    depends on whether or not the squash player is a member or not.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单价**：这是每小时预订的发票价格。这取决于壁球运动员是否是会员。'
- en: '**Total Price**: This is the total invoice price for this reservation.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**总价**：这是此预订的总发票价格。'
- en: '**Shortcut Dimension Code 1 & 2**: This is a reference to the dimensions used
    for this transaction.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快捷维度代码1和2**：这是对用于此交易的维度的引用。'
- en: '**Applies-to Entry No.**: When a reservation is invoiced, this is the reference
    to the **Squash Entry No.** of the reservation.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**适用于条目编号**：当预订被开票时，这是对预订的**壁球条目编号**的引用。'
- en: '**Source Code**: This is inherited from the journal batch or template and used
    when posting the transaction.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**源代码**：这是从日记账批次或模板继承的，并在过账交易时使用。'
- en: '**Chargeable**: When this option is used, there will not be an invoice for
    the reservation.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可收费**：当使用此选项时，预订将不会有发票。'
- en: '**Journal Batch Name**: This is a reference to the journal batch that is used
    for this transaction.'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日记账批次名称**：这是对用于此交易的日记账批次的引用。'
- en: '**Reason Code**: This is inherited from the journal batch or template and used
    when posting the transaction.'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原因代码**：这是从日记账批次或模板继承的，并在过账交易时使用。'
- en: '**Recurring Method**: When the journal is a recurring journal, you can use
    this field to determine if the **Amount** field is blanked after posting the lines.'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重复方法**：当日记账是重复日记账时，您可以使用此字段确定在过账行之后是否将**金额**字段清空。'
- en: '**Recurring Frequency**: This field determines the new posting date after the
    recurring lines are posted.'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重复频率**：此字段确定在过账重复行之后的新过账日期。'
- en: '**Gen. Bus. Posting Group**: The combination of general business and product
    posting group determines the G/L Account for turnover when we invoice the reservation.
    The **Gen. Bus. Posting Group** is inherited from the bill-to customer.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通用业务过账组**：通用业务和产品过账组的组合决定了我们在开票预订时的营业额的G/L账户。**通用业务过账组**是从开票客户那里继承的。'
- en: '**Gen. Prod. Posting Group**: This will be inherited from the squash player.'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通用生产过账组**：这将从壁球运动员那里继承。'
- en: '**External Document No.**: When a squash player wants us to note a reference
    number, we can store it here.'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**外部文档编号**：当壁球运动员希望我们记录一个参考编号时，我们可以在这里存储它。'
- en: '**Posting No. Series**: When the **Journal Template** has a **Posting No. Series**,
    it is populated here to be used when posting.'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过账编号系列**：当**日记账模板**有过账编号系列时，它将在这里被填充，以便在过账时使用。'
- en: '**Bill-to Customer No.**: This determines who is paying for the reservation.
    We will inherit this from the squash player.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开票客户编号**：这决定了谁为预订付费。我们将从壁球运动员那里继承这个信息。'
- en: 'So now we have a place to enter reservations but we have something to do before
    we can start doing this. Some fields were determined to be inherited and calculated:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们现在有一个地方可以输入预订，但在我们可以开始这样做之前，我们还有一些事情要做。一些字段被确定为继承和计算：
- en: The time field needs calculation to avoid people entering wrong values
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间字段需要进行计算，以避免人们输入错误值
- en: The **Unit Price** should be calculated
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单价**应该被计算'
- en: The **Unit Cost**, **Posting groups**, and **Bill-to Customer No.** need to
    be inherited
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单位成本**、**过账组**和**开票客户编号**需要被继承'
- en: As the final cherry on top, we will look at implementing dimensions
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为最后的点缀，我们将探讨实施维度
- en: Time calculation
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 时间计算
- en: When it comes to the time, we want only to allow specific start and end times.
    Our squash court can be used in blocks of half an hour. The **Quantity** field
    should be calculated based on the entered times and vice versa.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到时间时，我们只想允许特定的开始和结束时间。我们的壁球场地可以以半小时为一个时间段使用。**数量**字段应根据输入的时间计算，反之亦然。
- en: 'To have the most flexible solution possible, we will create a new table with
    allowed starting and ending times. This table will have two fields: **Reservation
    Time** and **Duration**.'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现最灵活的解决方案，我们将创建一个新的表格，其中包含允许的开始和结束时间。这个表格将有两个字段：**预订时间**和**持续时间**。
- en: The **Duration** field will be a decimal field that we will promote to a **SumIndexField**.
    This will enable us to use SIFT to calculate the quantity.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '**持续时间**字段将是一个小数字段，我们将将其提升为**索引求和字段**。这将使我们能够使用SIFT来计算数量。'
- en: '![Time calculation](img/0365EN_02_32.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![时间计算](img/0365EN_02_32.jpg)'
- en: 'When populated the table will look like this:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 当表格被填充时，它将看起来像这样：
- en: '![Time calculation](img/0365EN_02_33.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![时间计算](img/0365EN_02_33.jpg)'
- en: The time fields in the squash journal table will now get a table relation with
    this table. This prevents a user entering values that are not in the table, thus
    entering only valid starting and ending times. This is all done without any C/AL
    code and is flexible when times change later.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 网球场日记账表中的时间字段现在将与这个表建立表关系。这防止用户输入表中没有的值，从而只输入有效的开始和结束时间。这一切都无需任何C/AL代码，并且当时间改变时具有灵活性。
- en: '![Time calculation](img/0365EN_02_34.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![时间计算](img/0365EN_02_34.jpg)'
- en: 'Now, we need some code that calculates the quantity based on the input:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要一些代码来根据输入计算数量：
- en: '[PRE13]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: When a user enters a value in the **From Time** or **To Time** fields, the `CalcQty`
    function is executed. This checks if both fields have a value and then checks
    whether **To Time** is larger than **From Time**.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户在**从时间**或**到时间**字段中输入值时，会执行`CalcQty`函数。这会检查这两个字段是否有值，然后检查**到时间**是否大于**从时间**。
- en: Then we place a filter on the **Reservation Time** table. Now, when a user makes
    a reservation from `8:00` to `9:00`, there are three records in the filter making
    the result of the `Calcsums` (total of all records) of duration `1,5`. Therefore,
    we find the previous reservation time and use that.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们在**预订时间**表上放置一个过滤器。现在，当用户从`8:00`预订到`9:00`时，过滤器中有三个记录，使得`Calcsums`（所有记录的总和）的持续时间变为`1,5`。因此，我们找到之前的预订时间并使用它。
- en: This example shows how easy it is to use the built-in Microsoft Dynamics NAV
    functionality such as table relations and `Calcsums` instead of complex time calculations,
    which we could have also used.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子展示了如何轻松地使用内置的Microsoft Dynamics NAV功能，如表关系和`Calcsums`，而不是复杂的时计算，我们也可以使用。
- en: Price calculation
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 价格计算
- en: As discussed in [Chapter 1](ch01.html "Chapter 1. Introduction to Microsoft
    Dynamics NAV"), *Introduction to Microsoft Dynamics NAV*, there is a special technique
    to determine prices. Prices are stored in a table with all possible parameters
    as fields and by filtering down on these fields, the best price is determined.
    If required, extra logic is need to find the lowest (or highest) price, if more
    prices are found.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第1章](ch01.html "第1章。Microsoft Dynamics NAV 简介")中所述，*Microsoft Dynamics NAV
    简介*，有一个特殊的技巧来确定价格。价格存储在一个表中，其中所有可能的参数作为字段，通过过滤这些字段，确定最佳价格。如果需要，还需要额外的逻辑来找到最低（或最高）价格，如果找到多个价格。
- en: To look, learn, and love this part of the standard application, we have used
    table Sales Price (7002) and codeunit Sales Price Calc. Mgt. (7000), even though
    we only need a small part of this functionality. This mechanism of price calculation
    is used throughout the application and offers a normalized way of calculating
    sales prices. A similar construction is used for purchase prices with the table
    Purchase Price (7012) and codeunit Purch. Price Calc. Mgt. (7010).
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看、学习和热爱标准应用的部分，我们使用了销售价格表（7002）和销售价格计算管理代码单元（7000），尽管我们只需要这部分功能的一小部分。这种价格计算机制在整个应用中使用，并提供了计算销售价格的标准化方法。类似的构造用于采购价格，使用采购价格表（7012）和采购价格计算管理代码单元（7010）。
- en: Squash prices
  id: totrans-244
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 压缩价格
- en: In our case, we have already determined that we have a special rate for members,
    but let's say we have also a special rate for daytime and evening in winter and
    summer.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们已经确定我们有一个针对会员的特殊价格，但让我们假设我们还有一个针对冬季和夏季白天和晚上的特殊价格。
- en: 'This could make our table look as follows:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能使我们的表看起来如下：
- en: '![Squash prices](img/0365EN_02_35.jpg)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![压缩价格](img/0365EN_02_35.jpg)'
- en: We can make special prices for members on dates for winter and summer and make
    a price valid only until a certain time. We can also make a special price for
    a court.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以为冬季和夏季的日期为会员制定特殊价格，并使价格仅在特定时间有效。我们还可以为球场制定特殊价格。
- en: This table could be creatively expanded with all kinds of codes until we end
    up with table Sales Price (7002) in the standard product, which was the template
    for our example.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 这个表可以通过各种代码进行创造性地扩展，直到我们最终得到标准产品中的销售价格表（7002），这是我们例子的模板。
- en: Price Calc Mgt. codeunit
  id: totrans-250
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 价格计算管理代码单元
- en: 'To calculate the price, we need a codeunit similar to the standard product.
    This codeunit is called with a squash journal line record and stores all valid
    prices in a buffer table and then finds the lowest price if there is any overlap:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 为了计算价格，我们需要一个类似于标准产品的代码单元。这个代码单元使用网球场日记账记录调用，并将所有有效的价格存储在缓冲表中，然后如果存在任何重叠，找到最低价格：
- en: '[PRE14]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'If there is no price in the filter, it uses the unit price from the squash
    court, as shown here:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 如果过滤器中没有价格，它将使用网球场单位价格，如下所示：
- en: '[PRE15]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Inherited data
  id: totrans-255
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 继承数据
- en: To use the journal for the product part of the application, we want to inherit
    some of the fields from the master data tables. In order to make that possible,
    we need to copy and paste these fields from other tables to our master data table
    and populate it.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用日记账的应用程序产品部分，我们希望从主数据表中继承一些字段。为了实现这一点，我们需要将这些字段从其他表复制并粘贴到我们的主数据表中，并填充它。
- en: In our example, we can copy and paste the fields from the Resource table (156).
    We also need to add code to the `OnValidate` triggers in the journal line table.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，我们可以从资源表（156）复制并粘贴字段。我们还需要在日记账表中的 `OnValidate` 触发器中添加代码。
- en: '![Inherited data](img/0365EN_02_36.jpg)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![继承数据](img/0365EN_02_36.jpg)'
- en: The squash court table, for example, is expanded with the fields **Unit Code**,
    **Unit Price**, **Gen. Prod. Posting Group**, and **VAT Prod. Posting Group**,
    as shown in the preceding screenshot.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，壁球场地表通过以下字段扩展：**单位代码**、**单价**、**一般生产过账组**和**增值税过账组**，如前一张截图所示。
- en: We can now add code to the `OnValidate` of the `Squash Court No.` field in the
    Journal Line table.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以向日记账表中的 `Squash Court No.` 字段的 `OnValidate` 中添加代码。
- en: '[PRE16]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Please note that unit price is used in the Squash Price Calc. Mgt. codeunit
    that is executed from the `FindSquashPlayerPrice` function.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在从 `FindSquashPlayerPrice` 函数执行时，Squash 价格计算管理代码单元使用的是单价。
- en: Dimensions
  id: totrans-263
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 维度
- en: 'In Microsoft Dynamics NAV, dimensions are defined in master data and posted
    to the ledger entries to be used in analysis view entries. In [Chapter 3](ch03.html
    "Chapter 3. Financial Management"), *Financial Management*, we will discuss how
    to analyze the data generated by dimensions. In between that journey they move
    around a lot in different tables as follows:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Microsoft Dynamics NAV 中，维度在主数据中定义，并过账到总账条目以用于分析视图条目。在[第 3 章](ch03.html "第
    3 章。财务管理") *财务管理*中，我们将讨论如何分析维度生成数据。在这个过程中，它们会在不同的表中移动很多，如下所示：
- en: '**Table 348 | Dimension**: This is where the main dimension codes are defined.'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表 348 | 维度**：这是定义主要维度代码的地方。'
- en: '**Table 349 | Dimension Value**: This is where each dimension can have an unlimited
    number of values.'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表 349 | 维度值**：这是每个维度可以拥有无限多个值的表。'
- en: '**Table 350 | Dimension Combination**: In this table, we can block certain
    combinations of dimension codes.'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表 350 | 维度组合**：在这个表中，我们可以阻止某些维度代码的组合。'
- en: '**Table 351 | Dimension Value Combination**: In this table, we can block certain
    combinations of dimension values. If this table is populated, the value `Limited`
    is populated in the dimension combination table for these dimensions.'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表 351 | 维度值组合**：在这个表中，我们可以阻止某些维度值的组合。如果这个表被填充，这些维度的维度组合表中将填充值 `Limited`。'
- en: '**Table 352 | Default Dimension**: This table is populated for all master data
    that has dimensions defined.'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表 352 | 默认维度**：这个表为所有定义了维度的主数据填充。'
- en: '**Table 354 | Default Dimension Priority**: When more than one master data
    record in one transaction have the same dimensions, it is possible here to set
    priorities.'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表 354 | 默认维度优先级**：当一笔交易中有一个以上的主数据记录具有相同的维度时，可以在这里设置优先级。'
- en: '**Table 480 | Dimension Set Entry**: This table contains a matrix of all used
    dimension combinations.'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表 480 | 维度集条目**：这个表包含所有使用维度组合的矩阵。'
- en: '**Codeunit 408 | Dimension Management**: This codeunit is the single point
    in the application where all dimension movement is done.'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码单元 408 | 维度管理**：这是应用程序中所有维度移动的唯一点。'
- en: In our application, dimensions are moved from the squash player, squash court,
    and customer table via the squash journal line to the squash ledger entries. When
    we create an invoice, we move the dimensions from the ledger entries to the sales
    line table.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的应用程序中，维度通过壁球日志行从壁球运动员、壁球场地和客户表移动到壁球总账条目。当我们创建发票时，我们将维度从总账条目移动到销售行表。
- en: Master data
  id: totrans-274
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主数据
- en: To connect dimensions to master data, we first need to allow this changing codeunit
    408 dimension management.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 要将维度连接到主数据，我们首先需要允许更改代码单元 408 维度管理。
- en: '[PRE17]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The `TableIDArray` variable has a default number of 23 dimensions. This we have
    changed to `50`.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '`TableIDArray` 变量有默认的 23 个维度数。我们将这个数改为 `50`。'
- en: Tip
  id: totrans-278
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: By leaving gaps we allow Microsoft to add master data tables in future without
    us having to change our code.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 通过留下空位，我们允许微软在未来无需我们更改代码的情况下添加主数据表。
- en: 'Without this change, the system would return the following error message when
    we try to use dimensions:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不进行此更改，当尝试使用维度时，系统将返回以下错误消息：
- en: '![Master data](img/0365EN_02_37.jpg)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![主数据](img/0365EN_02_37.jpg)'
- en: Next change is to add the **Global Dimension** fields to the master data tables.
    They can be copied and pasted from other master data tables.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个更改是将**全局维度**字段添加到主数据表中。它们可以从其他主数据表中复制和粘贴。
- en: '![Master data](img/0365EN_02_38.jpg)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![主数据](img/0365EN_02_38.jpg)'
- en: 'When these fields are validated, the `ValidateShortcutDimCode` function is
    executed as follows:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 当这些字段被验证时，会执行`ValidateShortcutDimCode`函数，如下所示：
- en: '[PRE18]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Journal
  id: totrans-286
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 日记账
- en: 'When we use the master data records in the journal table, the dimensions are
    copied from the default dimension table to the dimension set entry table. This
    is done using the folowing piece of code that is called from `OnValidate` of each
    master data reference field:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在日记账表中使用主数据记录时，维度会从默认维度表复制到维度集条目表。这是通过从每个主数据引用字段的`OnValidate`中调用的以下代码片段来完成的：
- en: '[PRE19]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: To decide which dimensions to inherit, we should first analyze which master
    data is used in our Journal that is using default dimensions.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 为了决定要继承哪些维度，我们首先应该分析在我们的日记账中使用默认维度的哪些主数据。
- en: '[PRE20]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: In our case, `Table[1]` is `Squash Player`, `Table[2]` is `Squash Court`, and
    `Table[3]` is `Customer`. The dimension management codeunit makes sure everything
    is copied. We can use standard Microsoft Dynamics NAV functions.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的案例中，`Table[1]`是`Squash Player`，`Table[2]`是`Squash Court`，`Table[3]`是`Customer`。维度管理代码单元确保一切都被复制。我们可以使用标准的Microsoft
    Dynamics NAV函数。
- en: Posting
  id: totrans-292
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 过账
- en: 'When we post a journal using `Codeunit Squash Jnl.-Post Line (123456703)`,
    the dimensions are copied using the dimension set ID as follows:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们使用`Codeunit Squash Jnl.-Post Line (123456703)`过账日记账时，维度会使用以下维度集ID进行复制：
- en: '[PRE21]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This field is also used from our combine invoicing report, which we will create
    later in this chapter in the **Invoicing** section.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 此字段还用于我们将在本章的**发票**部分创建的合并发票报告中，我们将创建。
- en: '[PRE22]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The posting process
  id: totrans-297
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 过账过程
- en: Our journal is now ready to be posted. We've implemented all business logic,
    except the posting code.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已准备好过账日记账。我们已经实现了所有业务逻辑，除了过账代码。
- en: '![The posting process](img/0365EN_02_39.jpg)'
  id: totrans-299
  prefs: []
  type: TYPE_IMG
  zh: '![过账过程](img/0365EN_02_39.jpg)'
- en: 'The posting process of a journal in Microsoft Dynamics NAV has several codeunits
    for the structure:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 在Microsoft Dynamics NAV中，日记账的过账过程有几个代码单元用于结构：
- en: '`Jnl.-Check Line`: This codeunit checks if the journal line is valid for posting.'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Jnl.-Check Line`: 这个代码单元检查日记账行是否适用于过账。'
- en: '`Jnl.-Post Line`: This codeunit does the actual creation of the ledger entry
    and register tables and calls other `Jnl.-Post Line` codeunits if necessary to
    provide the transaction structure in [Chapter 1](ch01.html "Chapter 1. Introduction
    to Microsoft Dynamics NAV"), *Introduction to Microsoft Dynamics NAV*.'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Jnl.-Post Line`: 这个代码单元执行实际的日记账条目和登记表创建，并在必要时调用其他`Jnl.-Post Line`代码单元，以在[第1章](ch01.html
    "第1章。Microsoft Dynamics NAV 简介") *Microsoft Dynamics NAV 简介*中提供交易结构。'
- en: '`Jnl.-Post Batch`: This codeunit loops though all journal lines in a journal
    batch and posts all the lines.'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Jnl.-Post Batch`: 这个代码单元会遍历日记账批次中的所有日记账行，并过账所有行。'
- en: '`Jnl.-Post`: This is the codeunit that is called from the page. It calls the
    `Jnl.-Post Batch` codeunit and takes care of some user messaging.'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Jnl.-Post`: 这是从页面调用的代码单元。它调用`Jnl.-Post Batch`代码单元，并处理一些用户消息。'
- en: '`Jnl.-Post+Print`: This is the codeunit that is called when you click on **Post
    + Print**. It does the same as the `Jnl.-Post` codeunit but with the additional
    printing of a report defined in the journal template.'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Jnl.-Post+Print`: 当您点击**过账 + 打印**时，会调用此代码单元。它执行与`Jnl.-Post`代码单元相同的功能，但会额外打印在日记账模板中定义的报告。'
- en: '`Jnl.-B.Post`: This posts all the journal lines that have no errors and marks
    the ones that have errors.'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Jnl.-B.Post`: 这会过账所有没有错误的日记账行，并标记有错误的行。'
- en: '`Jnl.-B.Post+Print`: This does the same as `Jnl.-B.Post` but with the additional
    printing of a report defined in the journal template.'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Jnl.-B.Post+Print`: 这与`Jnl.-B.Post`执行相同的功能，但会额外打印在日记账模板中定义的报告。'
- en: Check line
  id: totrans-308
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查行
- en: 'Let''s have a look at the check line codeunit. When it comes to testing, Microsoft
    Dynamics NAV has a simple rule:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看检查行代码单元。在测试时，Microsoft Dynamics NAV有一个简单的规则：
- en: '*Test near, Test far, Do it, Clean up*'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '*测试近，测试远，做，清理*'
- en: First, we need to test the field in the journal line table, then read external
    data tables to check if all is good, and then post the lines and delete the data
    from the journal table.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要测试日记账行表中的字段，然后读取外部数据表以检查一切是否正常，然后过账行并从日记账表中删除数据。
- en: It does not make sense to read the G/L setup table from the database if the
    document no. in our own table is blank, or to start the posting process and error
    out because the posting date is outside of a valid range. This would cause a lot
    of unnecessary I/O from the database to the client.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们自己的表中的文档编号为空，或者因为过账日期不在有效范围内而开始过账过程并出错，那么从数据库中读取总账设置表是没有意义的。这会导致从数据库到客户端的大量不必要的I/O。
- en: '[PRE23]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: In the preceding code, we can clearly see that fields in our table are checked
    first, and then the date validation, and lastly the dimension checking.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，我们可以清楚地看到首先检查我们表中的字段，然后是日期验证，最后是维度检查。
- en: Post line
  id: totrans-315
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过账行
- en: The actual posting code turns out to be quite simple. The values are checked
    and then a register is created or updated.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 实际的过账代码非常简单。检查值后，创建或更新一个登记簿。
- en: '[PRE24]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: All the fields are simply moved to the ledger entry table. This is what makes
    Microsoft Dynamics NAV simple and powerful.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 所有字段都简单地移动到账簿分录表中。这就是使 Microsoft Dynamics NAV 简单而强大的原因。
- en: Here, we can clearly see how easy it is to add a field to a posting process.
    Just add the fields to the journal line, the ledger entry, and add one line of
    code to the posting process.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以清楚地看到向过账过程添加字段是多么容易。只需将字段添加到日记账行、账簿分录，并在过账过程中添加一行代码即可。
- en: Invoicing
  id: totrans-320
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发票
- en: The last issue on our to-do list is the invoicing process. For this, we use
    a part of the standard application.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 我们待办事项列表上的最后一个问题是发票过程。为此，我们使用标准应用程序的一部分。
- en: As explained in [Chapter 1](ch01.html "Chapter 1. Introduction to Microsoft
    Dynamics NAV"), *Introduction to Microsoft Dynamics NAV*, invoicing is done using
    a document structure with a header and a line table. This has a posting routine
    that will start the journal transactions.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第1章](ch01.html "第1章。Microsoft Dynamics NAV 简介")中所述，*Microsoft Dynamics NAV
    简介*，发票是通过具有头和行表的文档结构完成的。这有一个过账程序，将启动日记账交易。
- en: For our application, we need to create the invoice document and make sure that
    when posted, it updates our sub administration.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的应用程序，我们需要创建发票文档，并确保过账时更新我们的子管理。
- en: Invoice document
  id: totrans-324
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发票文档
- en: The sales invoice documents in Microsoft Dynamics NAV are stored in the Sales
    Header (36) and Sales Line (37) tables. We will create a report that will combine
    the outstanding reservation entries into invoices allowing the user to filter
    on a specific entry or any other field value in the squash ledger entry table.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Dynamics NAV 中的销售发票文档存储在销售头（36）和销售行（37）表中。我们将创建一个报告，将未结预订条目合并成发票，允许用户在压缩账簿分录表中按特定条目或任何其他字段值进行筛选。
- en: Reports in Microsoft Dynamics NAV are not just for printing documents; we can
    also use its dataset capabilities to start batch jobs.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Dynamics NAV 中的报告不仅用于打印文档；我们还可以使用其数据集功能来启动批处理作业。
- en: To enable this, our batch job needs to have a special property, `ProcessingOnly`,
    so let's start a blank report and do this.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 为了启用此功能，我们的批处理作业需要具有一个特殊属性，`ProcessingOnly`，所以让我们开始一个空白报告并执行此操作。
- en: '![Invoice document](img/0365EN_02_40.jpg)'
  id: totrans-328
  prefs: []
  type: TYPE_IMG
  zh: '![发票文档](img/0365EN_02_40.jpg)'
- en: The report will browse through the squash ledger entries filtered on entry type
    **Reservation** and open **Yes**. The sorting is **Open**, **Entry Type**, **Bill-to
    Customer No.**, and **Reservation Date**. To use sorting, the fields must be defined
    together as a key in the table definition.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 报告将遍历按条目类型**预订**筛选的压缩账簿分录，并打开**是**。排序顺序为**打开**、**条目类型**、**客户发票编号**和**预订日期**。为了使用排序，必须在表定义中将字段一起定义为键。
- en: '![Invoice document](img/0365EN_02_41.jpg)'
  id: totrans-330
  prefs: []
  type: TYPE_IMG
  zh: '![发票文档](img/0365EN_02_41.jpg)'
- en: As **Bill-to Customer No.** is the first non-filtered value in the sorting,
    we can assume that if this value changes, we need a new sales header.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 由于**客户发票编号**是排序中第一个非筛选值，我们可以假设如果这个值发生变化，我们需要一个新的销售头。
- en: 'For every squash ledger entry, we will generate a sales line as follows:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个压缩账簿分录，我们将生成以下销售行：
- en: '[PRE25]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Sales header
  id: totrans-334
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 销售头
- en: 'The code to create a sales header is as follows:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 创建销售头的代码如下：
- en: '[PRE26]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The `SetHideValidationDialog` function makes sure we don't get pop-up messages
    while validating values. This is a standard function in Microsoft Dynamics NAV,
    which is designed for this purpose.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '`SetHideValidationDialog` 函数确保在验证值时不会出现弹出消息。这是 Microsoft Dynamics NAV 中的一个标准函数，专为这个目的设计。'
- en: The `TRUE` parameter to the `INSERT` statement makes sure that the Number Series
    are triggered.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '`INSERT` 语句的 `TRUE` 参数确保触发了编号序列。'
- en: Sales line
  id: totrans-339
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 销售行
- en: To create a sales line, we need a minimum of the following code. Please note
    that we added the field `Applies-to Squash Entry No.` to the sales line table.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建销售行，我们需要以下代码的最小版本。请注意，我们在销售行表中添加了字段“适用于压榨条目编号”。
- en: '[PRE27]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Tip
  id: totrans-342
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: When you add fields to the sales and purchase document tables, make sure to
    also add these to the posted equivalents of these tables with the same number.
    This way you make sure that the information is copied to the historic data. This
    is done using the `TRANSFERFIELDS` command. We will discuss these tables in [Chapter
    6](ch06.html "Chapter 6. Trade"), *Trade*.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 当您向销售和采购文档表添加字段时，请确保也将这些字段添加到这些表的已过账等效表中，并使用相同的编号。这样，您可以确保信息被复制到历史数据中。这是使用`TRANSFERFIELDS`命令完成的。我们将在[第6章](ch06.html
    "第6章。贸易") *贸易*中讨论这些表。
- en: Dialog
  id: totrans-344
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对话框
- en: If the combined invoicing takes some time, it might be good to show the user
    a process bar. For this, Microsoft Dynamics NAV has a standard structure.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 如果合并开票需要一些时间，显示一个进度条可能是个好主意。为此，Microsoft Dynamics NAV有一个标准结构。
- en: The window shows the bill-to customer no. it is currently processing and a bar
    going from 1 percent to 100 percent. This is calculated by keeping a counter.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口显示当前正在处理的发票客户编号以及从1%到100%的进度条。这是通过保持计数器来计算的。
- en: At the end of the process, we show a message telling the user how many invoices
    were created out of the number of squash ledger entries.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 在过程结束时，我们显示一条消息，告诉用户从压榨账目条目中创建了多少发票。
- en: '[PRE28]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'To do this, we need some variables. The **Window** variable is of type **Dialog**
    whilst **Counter**, **CounterTotal**, and **CounterOK** are integers, as shown
    in the following screenshot:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成此操作，我们需要一些变量。**窗口**变量是**对话框**类型，而**计数器**、**计数器总数**和**计数器OK**是整数，如以下截图所示：
- en: '![Dialog](img/0365EN_02_42.jpg)'
  id: totrans-350
  prefs: []
  type: TYPE_IMG
  zh: '![对话框](img/0365EN_02_42.jpg)'
- en: The constant **Text000** has the special values **#1##########** and **@2@@@@@@@@@@@@@**.
    The first allows us to show and update some text; the latter is used to create
    the process bar.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 常量**Text000**具有特殊值**#1##########**和**@2@@@@@@@@@@@@@**。前者允许我们显示和更新一些文本；后者用于创建进度条。
- en: '![Dialog](img/0365EN_02_43.jpg)'
  id: totrans-352
  prefs: []
  type: TYPE_IMG
  zh: '![对话框](img/0365EN_02_43.jpg)'
- en: 'The result will look like what is shown in the following screenshot:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 结果将类似于以下截图所示：
- en: '![Dialog](img/0365EN_02_45.jpg)'
  id: totrans-354
  prefs: []
  type: TYPE_IMG
  zh: '![对话框](img/0365EN_02_45.jpg)'
- en: Note
  id: totrans-355
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备注
- en: There is a best practice document about using progress bars in combination with
    the impact on performance at [http://www.mibuso.com/howtoinfo.asp?FileID=17](http://www.mibuso.com/howtoinfo.asp?FileID=17).
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 关于使用进度条及其对性能影响的最佳实践文档可在[http://www.mibuso.com/howtoinfo.asp?FileID=17](http://www.mibuso.com/howtoinfo.asp?FileID=17)找到。
- en: Posting process
  id: totrans-357
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过账过程
- en: Now, our Sales Invoice is ready so we can start making the necessary changes
    to the posting process. Posting a sales document is done using a single posting
    codeunit and some helper objects.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的销售发票已经准备好，我们可以开始对过账过程进行必要的更改。过账销售文档是通过单个过账代码单元和一些辅助对象完成的。
- en: '**Report 297**: This report can be used to post more than one document at the
    same time with a filter.'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**报告297**：此报告可用于使用过滤器同时过账多个文档。'
- en: '**Codeunit 80**: This is the actual posting routine we are going to change.'
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码单元80**：这是我们即将更改的实际过账例程。'
- en: '**Codeunit 81**: This codeunit is called from the user interface and has a
    dialog if the user wants to ship, invoice, or both if the document is an order
    and a yes/no if the document is an invoice or credit memo.'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码单元81**：此代码单元从用户界面调用，如果用户想要发货、开票或两者兼而有之（如果文档是订单），如果文档是发票或贷项通知，则显示是/否对话框。'
- en: '**Codeunit 82**: When the user chooses post and print, this codeunit is executed,
    which does the same as **Codeunit 81** plus printing a report.'
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码单元82**：当用户选择过账并打印时，此代码单元将被执行，它执行与**代码单元81**相同的功能，并打印报告。'
- en: So we will make a change to **Codeunit 80**. This codeunit has a specific structure
    that we need to understand before we go in and make the change.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将对**代码单元80**进行修改。在进入并修改之前，我们需要了解这个代码单元的特定结构。
- en: Analyze the object
  id: totrans-364
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析对象
- en: The codeunit also has the *Test Near*, *Test Far*, *Do it*, and *Clean up* strategy
    so the first step is to make sure everything is in place before the actual posting
    starts. Let's have a look at how this codeunit is structured.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 代码单元还具有**测试近处**、**测试远处**、**执行**和**清理**策略，因此第一步是在实际过账开始之前确保一切就绪。让我们看看这个代码单元是如何结构的。
- en: Note
  id: totrans-366
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备注
- en: The Sales-Post codeunit is too long to discuss in detail. We will focus on the
    most important parts and learning how to read this type of code routine.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 销售后置代码单元太长，无法详细讨论。我们将关注最重要的部分，并学习如何阅读这类代码流程。
- en: This first part does the test near step and a part of the test far step. The
    `Ship`, `Invoice`, and `Receive` fields are set in codeunit 81 and 82 but checked
    and completed to make sure.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分执行了接近步骤的测试和远离步骤的一部分测试。`Ship`、`Invoice`和`Receive`字段在代码单元81和82中设置，但会进行检查和完成以确保无误。
- en: '[PRE29]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The next step is moving the sales header information to the history tables
    for shipment, invoice, credit memo, or return receipt header. These sections are
    commented like this:'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将销售表头信息移动到发货、发票、贷项通知或退货收据表头的历史表中。这些部分注释如下：
- en: '[PRE30]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Note
  id: totrans-372
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We will discuss the relation between a sales header and the sales shipment,
    sales invoice, sales credit memo, and return receipt in [Chapter 6](ch06.html
    "Chapter 6. Trade"), *Trade*.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[第6章](ch06.html "第6章. 贸易")*贸易*中讨论销售表头与销售发货、销售发票、销售贷项通知和退货收据之间的关系。
- en: When this is done, the sales lines are processed. They are also moved to the
    various posted line tables. This is all part of the *Do it* section of the posting
    routine.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些操作后，处理销售行。它们也被移动到各种已过账行表中。这都属于过账流程中的“执行”部分。
- en: '[PRE31]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: If there is a drop shipment in a purchase order, this is handled here. We will
    discuss drop shipments in [Chapter 6](ch06.html "Chapter 6. Trade"), *Trade*.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 如果采购订单中有寄售，这里将处理这种情况。我们将在[第6章](ch06.html "第6章. 贸易")*贸易*中讨论寄售。
- en: '[PRE32]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Then there is a section that creates the financial information in the general
    journal. We will go deeper into this section in [Chapter 3](ch03.html "Chapter 3. Financial
    Management"), *Financial Management*.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 然后有一个部分在总账中创建财务信息。我们将在[第3章](ch03.html "第3章. 财务管理")*财务管理*中深入探讨这一部分。
- en: '[PRE33]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Then the *Clean up* section starts by calculating remaining quantities, VAT,
    and deleting the sales header and sales lines if possible.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，“清理”部分开始于计算剩余数量、增值税，并在可能的情况下删除销售表头和销售行。
- en: '[PRE34]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The *Clean up* section ends by deleting the sales document and related information
    and clearing the variables used.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: “清理”部分以删除销售文档和相关信息以及清除使用的变量结束。
- en: '[PRE35]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Making the change
  id: totrans-384
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 进行更改
- en: 'The change we are going to make is in the section where the lines are handled:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要进行的更改是在处理行的部分：
- en: '[PRE36]'
  id: totrans-386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: We will create a new function, `PostSquashJnlLn`. This way we minimize the impact
    on standard code and when we upgrade to a newer version, we can easily copy and
    paste our function and only need to change the calling place if required.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个新的函数`PostSquashJnlLn`。这样我们最小化了标准代码的影响，当我们升级到新版本时，我们可以轻松地复制和粘贴我们的函数，并且如果需要，只需更改调用位置即可。
- en: Tip
  id: totrans-388
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Always try to design for easy upgrading whenever possible. Remember that Microsoft
    might change this code in newer versions so the more flexible we are and the more
    we manage to minimize the impact on standard code, the better.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 任何时候都要尽量设计易于升级。记住，微软可能会在新版本中更改此代码，因此我们越灵活，越能尽量减少对标准代码的影响，就越好。
- en: '[PRE37]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Our new function first gets the squash ledger entry it applies to and tests
    if it's still open and the bill-to customer no. has not changed. Then, we populate
    the squash journal line with the help of the sales line and the old squash ledger
    entry. Then dimensions are handled and the squash journal line is posted.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的新函数首先获取它应用的压平账目条目，并测试它是否仍然开放以及账单客户编号是否没有更改。然后，我们通过销售行和旧的压平账目条目来填充压平日记账行。然后处理维度，并过账压平日记账行。
- en: Tip
  id: totrans-392
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The journal lines are never actually inserted into the database. This is for
    performance and concurrency reasons. All journal transactions here are handled
    in the service tier cache. A journal is also never populated using `Validate`.
    This makes it very clear for you to see what happens.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 日记账行实际上从未真正插入到数据库中。这是出于性能和并发性的原因。这里的所有日记账交易都在服务层缓存中处理。日记账也永远不会使用`Validate`来填充。这使得您能够非常清楚地看到发生了什么。
- en: 'Now when we post an invoice, we can see that the invoice entries are created:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们过账发票时，我们可以看到创建了发票条目：
- en: '![Making the change](img/0365EN_02_46.jpg)'
  id: totrans-395
  prefs: []
  type: TYPE_IMG
  zh: '![进行更改](img/0365EN_02_46.jpg)'
- en: Navigate
  id: totrans-396
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导航
- en: 'We have now covered everything that is necessary for our squash court application
    to run but there is one special function of Microsoft Dynamics NAV that needs
    changing when we add new documents and ledger entries: the `Navigate` function.'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经涵盖了我们的压块球场应用程序运行所需的所有内容，但当我们添加新文档和账目条目时，Microsoft Dynamics NAV 有一个特殊功能需要更改：`Navigate`
    功能。
- en: The functionality was already discussed in [Chapter 1](ch01.html "Chapter 1. Introduction
    to Microsoft Dynamics NAV"), *Introduction to Microsoft Dynamics NAV*. The object
    is a single page (344) in the application that requires two changes.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 该功能已在 [第 1 章](ch01.html "第 1 章。Microsoft Dynamics NAV 简介") 中讨论过，*Microsoft Dynamics
    NAV 简介*。该对象是应用程序中的一个单独页面（344），需要更改两个地方。
- en: FindRecords
  id: totrans-399
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: FindRecords
- en: The first function we change is `FindRecords`. This browses through the database
    finding all possible combinations of document no. and posting date.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先更改的功能是 `FindRecords`。这个功能会遍历数据库，寻找所有可能的文档编号和过账日期的组合。
- en: '[PRE38]'
  id: totrans-401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: The function first checks if we have permission to read the squash ledger entry
    table. If our system administrator does not allow us to see this table, it should
    not show up.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 该功能首先检查我们是否有权限读取压块账目条目表。如果我们的系统管理员不允许我们查看此表，则它不应显示。
- en: The filtering is done on the document no. and posting date. When ready, the
    system inserts the number of found records in the result table.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤是在文档编号和过账日期上进行的。准备好后，系统将找到的记录数插入到结果表中。
- en: ShowRecords
  id: totrans-404
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ShowRecords
- en: The second function to change is `ShowRecords`. This makes sure we see the squash
    ledger entries when we click on the **Show** action.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 需要更改的第二个功能是 `ShowRecords`。这确保我们在点击 **显示** 动作时能看到压块账目条目。
- en: '[PRE39]'
  id: totrans-406
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Testing
  id: totrans-407
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试
- en: 'Now when we navigate from an invoice we posted that was generated from our
    combine invoicing report, we get the following result:'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们从由我们的合并开票报告生成的过账发票中进行导航时，我们得到以下结果：
- en: '![Testing](img/0365EN_02_47.jpg)'
  id: totrans-409
  prefs: []
  type: TYPE_IMG
  zh: '![测试](img/0365EN_02_47.jpg)'
- en: Summary
  id: totrans-410
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we created our own vertical add-on application for Microsoft
    Dynamics NAV. We used similar data model and posting structures and reused parts
    of the standard application where appropriate but never wrongly used standard
    features.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们为 Microsoft Dynamics NAV 创建了自己的垂直附加应用程序。我们使用了类似的数据模型和过账结构，并在适当的地方重用了标准应用程序的部分，但从未错误地使用标准功能。
- en: We saw how to reverse engineer Microsoft Dynamics NAV code in order to find
    out what similar standard functionality to copy, paste, and change for our application.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了如何逆向工程 Microsoft Dynamics NAV 代码，以便找出要复制、粘贴和修改到我们应用程序中的类似标准功能。
- en: We also found out how a journal and document posting code unit works and how
    to structure using *Test near*, *Test far*, *Do it*, and *Clean up*.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还了解到日记和文档过账代码单元的工作原理以及如何使用 *Test near*、*Test far*、*Do it* 和 *Clean up* 来构建结构。
- en: In the next chapter, we will explore the financial functionality of Microsoft
    Dynamics NAV and even make some changes to this part of the application.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨 Microsoft Dynamics NAV 的财务功能，并对应用程序的这一部分进行一些更改。
