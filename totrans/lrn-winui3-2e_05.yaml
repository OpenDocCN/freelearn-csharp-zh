- en: '5'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '5'
- en: Exploring WinUI Controls
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 WinUI 控件
- en: WinUI 3 and the Windows App SDK offer many controls and APIs for developers
    building desktop applications for Windows. The WinUI controls include some controls
    not previously available to Windows developers, as well as updated controls that
    were already available in WinUI 2.x and **UWP**. Using these new and updated controls
    with WinUI 3 enables their use in older versions of Windows that did not previously
    support this full suite of components. Developers can also leverage Windows App
    SDK APIs to get direct access to Windows features.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: WinUI 3 和 Windows App SDK 为开发 Windows 桌面应用程序的开发者提供了许多控件和 API。WinUI 控件包括一些之前未提供给
    Windows 开发者的控件，以及已在 WinUI 2.x 和 **UWP** 中可用的更新后的控件。使用这些新控件和 WinUI 3 的更新控件，可以在之前不支持此完整组件套件的旧版
    Windows 中使用它们。开发者还可以利用 Windows App SDK API 来直接访问 Windows 功能。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Learning more about the controls that are available in WinUI 3
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深入了解 WinUI 3 中可用的控件
- en: Exploring the **WinUI 3 Gallery** app for Windows to learn about the WinUI controls
    and design guidance
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 Windows 的 **WinUI 3 画廊** 应用程序以了解 WinUI 控件和设计指南
- en: How other Windows App SDK APIs provide Windows developers access to features
    such as power management and notifications
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他 Windows App SDK API 如何为 Windows 开发者提供对电源管理、通知等功能的访问
- en: How to implement `SplitButton` and `TeachingTip` controls in your own apps
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在您的应用程序中实现 `SplitButton` 和 `TeachingTip` 控件
- en: By the end of this chapter, you will have a greater understanding of the controls
    and libraries in WinUI 3\. You will also feel comfortable using the WinUI 3 Gallery
    app for Windows to explore the controls and find samples that demonstrate how
    to use them.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将更深入地了解 WinUI 3 中的控件和库。你还将能够舒适地使用 Windows 的 WinUI 3 画廊应用程序来探索控件并找到演示如何使用它们的示例。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To follow along with the examples in this chapter, please reference the *Technical
    requirements* section of [*Chapter 2*](B20908_02.xhtml#_idTextAnchor044), *Configuring
    the Development Environment and Creating* *the Project*.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本章中的示例，请参考 [*第 2 章*](B20908_02.xhtml#_idTextAnchor044) 的 *技术要求* 部分，*配置开发环境和创建*
    *项目*。
- en: 'The source code for this chapter is available on GitHub here: [https://github.com/PacktPublishing/Learn-WinUI-3-Second-Edition/tree/master/Chapter05](https://github.com/PacktPublishing/Learn-WinUI-3-Second-Edition/tree/master/Chapter05).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的源代码可在 GitHub 上找到：[https://github.com/PacktPublishing/Learn-WinUI-3-Second-Edition/tree/master/Chapter05](https://github.com/PacktPublishing/Learn-WinUI-3-Second-Edition/tree/master/Chapter05).
- en: Understanding what WinUI offers developers
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 WinUI 为开发者提供了什么
- en: 'In [*Chapter 1*](B20908_01.xhtml#_idTextAnchor015), *Introduction to WinUI*,
    you learned some background information about the origins of WinUI and UWP. That
    chapter also covered some of the controls available in the various releases of
    WinUI. Now, it’s time to explore a few of these in more detail. Let’s start by
    looking at a list of controls available to developers in WinUI 3:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第 1 章*](B20908_01.xhtml#_idTextAnchor015) 中，*WinUI 简介*，你了解了一些关于 WinUI 和
    UWP 源起的背景信息。该章节还涵盖了 WinUI 各个版本中可用的一些控件。现在，让我们更详细地探索其中的一些控件。让我们先看看 WinUI 3 中开发者可用的控件列表：
- en: '![Figure 5.1 – List of WinUI 3 controls](img/B20908_05_01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.1 – WinUI 3 控件列表](img/B20908_05_01.jpg)'
- en: Figure 5.1 – List of WinUI 3 controls
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.1 – WinUI 3 控件列表
- en: This is quite an extensive list of controls available to developers in the Windows
    App SDK.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Windows App SDK 中开发者可用的控件相当广泛的列表。
- en: Tip
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'For an up-to-date list of the available controls, you can check this page on
    *Microsoft* *Learn*: [https://learn.microsoft.com/windows/apps/design/controls/#alphabetical-index](https://learn.microsoft.com/windows/apps/design/controls/#alphabetical-index).'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取可用控件的最新列表，你可以查看 *Microsoft* *Learn* 上的此页面：[https://learn.microsoft.com/windows/apps/design/controls/#alphabetical-index](https://learn.microsoft.com/windows/apps/design/controls/#alphabetical-index).
- en: If you have developed Windows applications before, most of these control names
    probably look familiar to you. In the sections ahead, we’ll get an overview of
    some controls that you may not have seen before.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您之前开发过 Windows 应用程序，那么这些控件名称中的大多数可能对您来说都很熟悉。在接下来的部分中，我们将概述一些您可能之前没有见过的控件。
- en: Animated visual player (Lottie)
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动画视觉播放器（Lottie）
- en: 'The `AnimatedVisualPlayer` control, shown in *Figure 5**.2*, is a WinUI control
    that can display **Lottie animations**. Lottie is an open source library that
    can parse and display animations on Windows, the web, iOS, and Android. These
    animations are created by designers in tools such as **Adobe After Effects** and
    exported in JSON format. You can learn more about Lottie animations at the official
    website, [http://airbnb.io/lottie/#/](http://airbnb.io/lottie/#/):'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如 *图 5*.2 所示的 `AnimatedVisualPlayer` 控件是一个可以显示 **Lottie 动画** 的 WinUI 控件。Lottie
    是一个开源库，可以在 Windows、网页、iOS 和 Android 上解析和显示动画。这些动画由设计师在如 **Adobe After Effects**
    等工具中创建，并以 JSON 格式导出。您可以在官方网站 [http://airbnb.io/lottie/#/](http://airbnb.io/lottie/#/)
    上了解更多关于 Lottie 动画的信息：
- en: '![Figure 5.2 – The AnimatedVisualPlayer control](img/B20908_05_02.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.2 – AnimatedVisualPlayer 控件](img/B20908_05_02.jpg)'
- en: Figure 5.2 – The AnimatedVisualPlayer control
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.2 – AnimatedVisualPlayer 控件
- en: Navigation View
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导航视图
- en: '`NavigationView` provides a user-friendly page navigation system. Use it to
    give users quick access to all your application’s top-level pages. `NavigationView`
    can be configured to appear as a menu at the top of the application, with each
    page’s link appearing like a tab across the top of the page:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`NavigationView` 提供了一个用户友好的页面导航系统。使用它为用户提供快速访问所有应用程序的最高级页面。`NavigationView`
    可以配置为在应用程序顶部显示为一个菜单，每个页面的链接在页面顶部显示为一个标签：'
- en: '![Figure 5.3 – NavigationView configured at the top of a page](img/B20908_05_03.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.3 – 在页面顶部配置的 NavigationView](img/B20908_05_03.jpg)'
- en: Figure 5.3 – NavigationView configured at the top of a page
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.3 – 在页面顶部配置的 NavigationView
- en: '`NavigationView` can also be configured to appear on the left-hand side of
    the page. This is a view that should be familiar to Windows and Android users.
    This menu format is commonly known as a **hamburger menu**. This is how the view
    appears when the menu is in a collapsed state:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`NavigationView` 还可以配置为出现在页面左侧。这是一个对 Windows 和 Android 用户来说应该很熟悉的视图。这种菜单格式通常被称为
    **汉堡菜单**。这是菜单折叠状态下的视图外观：'
- en: '![Figure 5.4 – A collapsed left NavigationView control](img/B20908_05_04.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.4 – 折叠的左侧 NavigationView 控件](img/B20908_05_04.jpg)'
- en: Figure 5.4 – A collapsed left NavigationView control
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.4 – 折叠的左侧 NavigationView 控件
- en: 'In either configuration, `NavigationView` can hide or show a back arrow to
    navigate to the previous page and has a **Settings** menu item to show the application’s
    settings page. If your application does not have a settings page, this item should
    be hidden. When the left menu is expanded by clicking the *hamburger* icon below
    the back arrow, the menu text is displayed, along with the respective icons:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何配置中，`NavigationView` 都可以隐藏或显示一个返回箭头以导航到上一页，并有一个 **设置** 菜单项以显示应用程序的设置页面。如果您的应用程序没有设置页面，则应隐藏此项目。当通过点击返回箭头下方的
    *汉堡* 图标展开左侧菜单时，将显示菜单文本以及相应的图标：
- en: '![Figure 5.5 – The expanded left NavigationView control](img/B20908_05_05.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.5 – 展开的左侧 NavigationView 控件](img/B20908_05_05.jpg)'
- en: Figure 5.5 – The expanded left NavigationView control
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.5 – 展开的左侧 NavigationView 控件
- en: Everything on the menu is configurable. You can group pages with the `NavigationView`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单上的所有内容都是可配置的。您可以使用 `NavigationView` 对页面进行分组。
- en: Parallax view
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 垂直视差视图
- en: '`ParallaxView` control brings this concept to your WinUI applications. You
    link `ParallaxView` to `ListView` and a background image, and it will provide
    a parallax effect when `ListView` is scrolled. There are settings to control the
    relationship between scrolling the list and the amount the image scrolls. This
    effect has a great impact on users when it is not overused:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`ParallaxView` 控件将这一概念引入您的 WinUI 应用程序。您可以将 `ParallaxView` 与 `ListView` 和背景图像链接，当
    `ListView` 滚动时，它将提供垂直视差效果。有设置可以控制列表滚动与图像滚动量之间的关系。当不过度使用时，这种效果对用户有很大的影响：'
- en: '![Figure 5.6 – The ParallaxView control scrolled to the top of a list](img/B20908_05_06.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.6 – ParallaxView 控件滚动到列表顶部](img/B20908_05_06.jpg)'
- en: Figure 5.6 – The ParallaxView control scrolled to the top of a list
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.6 – ParallaxView 控件滚动到列表顶部
- en: '![Figure 5.7 – The ParallaxView control scrolled partially through a list](img/B20908_05_07.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.7 – ParallaxView 控件部分滚动通过列表](img/B20908_05_07.jpg)'
- en: Figure 5.7 – The ParallaxView control scrolled partially through a list
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.7 – ParallaxView 控件部分滚动通过列表
- en: Rating control
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 评分控件
- en: 'Everyone is familiar with rating controls. You see them on shopping websites,
    streaming apps, and online surveys. The WinUI `RatingControl` control allows users
    to rate items in your application from 1 to 5 stars:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都熟悉评分控件。您在购物网站、流媒体应用程序和在线调查中都能看到它们。WinUI 的 `RatingControl` 控件允许用户从 1 到 5
    星对应用程序中的项目进行评分：
- en: '![Figure 5.8 – RatingControl displaying the user’s rating](img/B20908_05_08.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.8 – RatingControl 显示用户的评分](img/B20908_05_08.jpg)'
- en: Figure 5.8 – RatingControl displaying the user’s rating
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.8 – RatingControl 显示用户的评分
- en: The control can also allow you to clear a rating by swiping left on the control
    and can show a placeholder value before the user has provided their own rating.
    Applications frequently use the placeholder value as a means of showing users
    the average rating given by other users.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 该控件还可以允许您通过在控件上向左滑动来清除评分，并在用户提供自己的评分之前显示一个占位符值。应用程序通常将占位符值用作向用户显示其他用户给出的平均评分的手段。
- en: Now that we have discussed a few of the controls that were added with WinUI,
    let’s explore a Windows application that makes it easy to explore them on your
    own.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论了一些新增的 WinUI 控件，让我们探索一个 Windows 应用程序，它使您能够自行轻松探索它们。
- en: Exploring the WinUI 3 Gallery app for Windows
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 Windows 的 WinUI 3 画廊应用程序
- en: Because there are so many powerful and configurable WinUI controls available,
    the WinUI team at Microsoft decided to create an application that allows Windows
    developers to explore and even try the controls. **WinUI 3 Gallery** is a great
    tool to get familiar with the controls, decide which ones are a good fit for your
    application, and get some sample code and design guidance.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 由于有如此多的强大且可配置的 WinUI 控件可用，微软的 WinUI 团队决定创建一个应用程序，允许 Windows 开发者探索甚至尝试这些控件。**WinUI
    3 画廊** 是一个了解控件、决定哪些控件适合您的应用程序以及获取一些示例代码和设计指导的绝佳工具。
- en: Note
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: There is also a **WinUI 2 Gallery** app for UWP developers. The two apps used
    to be a single app called **XAML** **Controls Gallery**.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 UWP 开发者，还有一个 **WinUI 2 画廊** 应用程序。这两个应用程序过去是单个应用程序，称为 **XAML 控件画廊**。
- en: 'To install the WinUI 3 Gallery app, you can visit its Microsoft Store page
    on the web ([https://apps.microsoft.com/store/detail/winui-3-gallery/9P3JFPWWDZRC](https://apps.microsoft.com/store/detail/winui-3-gallery/9P3JFPWWDZRC))
    or launch the Microsoft Store app for Windows and search for `WinUI 3 Gallery`.
    The Gallery app itself is open source. You can browse the code to learn more about
    it on GitHub: [https://github.com/microsoft/WinUI-Gallery](https://github.com/microsoft/WinUI-Gallery).'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 WinUI 3 画廊应用程序，您可以访问其 Microsoft Store 网页（[https://apps.microsoft.com/store/detail/winui-3-gallery/9P3JFPWWDZRC](https://apps.microsoft.com/store/detail/winui-3-gallery/9P3JFPWWDZRC)）或启动
    Windows 的 Microsoft Store 应用程序并搜索 `WinUI 3 画廊`。画廊应用程序本身是开源的。您可以在 GitHub 上浏览代码以了解更多信息：[https://github.com/microsoft/WinUI-Gallery](https://github.com/microsoft/WinUI-Gallery)。
- en: 'Once it’s been installed, launch the application:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，启动应用程序：
- en: '![Figure 5.9 – The WinUI 3 Gallery application](img/B20908_05_09.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.9 – WinUI 3 画廊应用程序](img/B20908_05_09.jpg)'
- en: Figure 5.9 – The WinUI 3 Gallery application
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.9 – WinUI 3 画廊应用程序
- en: In the `NavigationView` control, and the left-hand menu allows for quickly browsing
    or searching the various controls in the gallery.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `NavigationView` 控件中，左侧菜单允许快速浏览或搜索画廊中的各种控件。
- en: Note
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you search for the controls shown in the previous section, you may notice
    that the screenshots provided for the controls in this chapter were taken from
    the WinUI 3 Gallery application.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您搜索上一节中显示的控件，您可能会注意到本章中提供的控件截图是从 WinUI 3 画廊应用程序中获取的。
- en: Learning about the ScrollViewer control
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解 ScrollViewer 控件
- en: 'Suppose you were considering adding scrolling capability to a region of a page
    in your application. In the gallery application, you can click `ScrollViewer`
    control:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您正在考虑向应用程序中的页面区域添加滚动功能。在画廊应用程序中，您可以点击 `ScrollViewer` 控件：
- en: '![Figure 5.10 – The ScrollViewer control detail page in XAML Controls Gallery](img/B20908_05_10.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.10 – XAML 控件画廊中的 ScrollViewer 控件详细页面](img/B20908_05_10.jpg)'
- en: Figure 5.10 – The ScrollViewer control detail page in XAML Controls Gallery
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.10 – XAML 控件画廊中的 ScrollViewer 控件详细页面
- en: The control details page includes several sections. The header area provides
    a brief description of the control and its purpose. The right pane provides useful
    links to online documentation, other related controls in the gallery, and a link
    to provide feedback on the current gallery page.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 控件详细信息页面包括几个部分。标题区域提供了对控件及其用途的简要描述。右侧面板提供了有用的链接，指向在线文档、图库中的其他相关控件，以及一个链接，用于对当前图库页面提供反馈。
- en: 'The middle area of the page itself contains three sections: a rendered control,
    a functional control, and a properties panel. Using the properties panel, you
    can update some of the properties of `ScrollViewer` and see the rendered control
    immediately update. In the bottom center, you will find a panel containing the
    source code for the rendered control. The source control pane is very handy for
    copying the code to use as a starting point in your own project.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 页面的中间区域本身包含三个部分：一个渲染控件、一个功能控件和一个属性面板。使用属性面板，你可以更新 `ScrollViewer` 的一些属性，并立即看到渲染控件更新。在底部中心，你会找到一个包含渲染控件源代码的面板。源代码面板对于将代码复制到用作你自己的项目起点非常方便。
- en: 'The gallery application’s design also responds well to being resized. If you
    drag the right-hand side of the window to make it as narrow as possible, you will
    see the left and right panels collapse, and the center area will realign to a
    single vertical column:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图库应用程序的设计也很好地响应了调整大小。如果你将窗口的右侧拖动到尽可能窄，你会看到左侧和右侧的面板折叠，中心区域将重新对齐为一个单独的垂直列：
- en: '![Figure 5.11 – The gallery application resized horizontally](img/B20908_05_011.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.11 – 图库应用程序水平调整大小](img/B20908_05_011.jpg)'
- en: Figure 5.11 – The gallery application resized horizontally
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.11 – 图库应用程序水平调整大小
- en: You can imagine this view would fit well on a **Microsoft Surface Go laptop**
    or other small PC.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以想象这种视图非常适合在 **Microsoft Surface Go 笔记本电脑** 或其他小型 PC 上使用。
- en: Take some time to explore the controls in the gallery. Some of the code samples
    can be quite lengthy. Try changing some control properties and notice how the
    XAML code updates to reflect the new property values. This is a great way to learn
    XAML and familiarize yourself with the WinUI controls.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 花些时间探索图库中的控件。一些代码示例可能相当长。尝试更改一些控件属性，并注意 XAML 代码如何更新以反映新的属性值。这是一种学习 XAML 并熟悉
    WinUI 控件的好方法。
- en: Now, let’s take a tour of the new features of WinUI 3.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来浏览一下 WinUI 3 的新特性。
- en: Reviewing what’s new in WinUI 3 and the Windows App SDK
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看WinUI 3 和 Windows App SDK 的新增功能
- en: Although WinUI 3 is a major release, the number of new features, as compared
    to WinUI 2.x, is not extensive. That may be surprising to many people, but simply
    creating WinUI 3 and the Windows App SDK as a standalone release was quite an
    undertaking. We’ll look at the most significant features in the following subsections.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 WinUI 3 是一个主要版本，但与 WinUI 2.x 相比，新增功能并不多。这可能会让许多人感到惊讶，但仅仅创建 WinUI 3 和 Windows
    App SDK 作为独立发布就已经是一项相当大的任务。我们将在以下小节中查看最显著的功能。
- en: Backward compatibility
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向后兼容性
- en: To make WinUI applications compatible with more versions of Windows (it works
    with Windows 10, version 1809 and later), the WinUI team had to extract the UWP
    controls from the Windows SDK and move them to the new `Microsoft.UI.*` libraries
    in the Windows App SDK. The result of this work not only creates compatibility
    with more versions of Windows but also enables developers to consume WinUI, regardless
    of whether they are using .NET or Win32 as the underlying platform. C# developers
    can build .NET apps with WinUI for Desktop projects, and C++ developers can consume
    WinUI on the Win32 platform.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使 WinUI 应用程序与更多版本的 Windows 兼容（它支持 Windows 10 版本 1809 及以后的版本），WinUI 团队不得不从
    Windows SDK 中提取 UWP 控件，并将它们移动到 Windows App SDK 中的新 `Microsoft.UI.*` 库。这项工作的成果不仅为更多版本的
    Windows 提供了兼容性，还使开发者无论使用 .NET 还是 Win32 作为底层平台，都可以消费 WinUI。C# 开发者可以使用 WinUI 为桌面项目构建
    .NET 应用程序，而 C++ 开发者可以在 Win32 平台上消费 WinUI。
- en: Fluent UI and modern look and feel
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 流畅的用户界面和现代的外观
- en: Developers who maintain **Windows Presentation Form** (**WPF**), WinForms, and
    **Microsoft Foundation Class** (**MFC**) applications aren’t easily able to achieve
    the modern look and feel of Windows with **Fluent UI** the way you can in WinUI.
    We will be covering Fluent UI in depth in [*Chapter 7*](B20908_07.xhtml#_idTextAnchor152),
    *Fluent Design System for* *Windows Applications*.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 维护 **Windows Presentation Foundation** (**WPF**), WinForms 和 **Microsoft Foundation
    Class** (**MFC**) 应用程序的开发者不容易像在 WinUI 中那样使用 **Fluent UI** 来实现现代的 Windows 风格。我们将在
    [*第 7 章*](B20908_07.xhtml#_idTextAnchor152) 中深入探讨 Fluent UI，*Windows 应用程序* 的 *流畅设计系统*。
- en: Visual Studio tooling
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Visual Studio 工具
- en: Visual Studio can now add WinUI project templates without installing a separate
    extension from the Visual Studio Marketplace. As discussed in the opening chapter,
    WinUI support can be added along with the **.NET Desktop Development** workload
    for Visual Studio. Starting a new project with WinUI in Visual Studio is literally
    as easy as going to **File** | **New Project**.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 现在可以添加 WinUI 项目模板，而无需从 Visual Studio Marketplace 安装单独的扩展。正如在开篇章节中讨论的，WinUI
    支持可以与 Visual Studio 的 **.NET 桌面开发** 工作负载一起添加。在 Visual Studio 中以 WinUI 开始新项目实际上就像去
    **文件** | **新建项目** 一样简单。
- en: The WebView2 control
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: WebView2 控件
- en: One new control available to developers in WinUI 3 is `WebView2`. This new version
    of `WebView` is built on the Chromium-based Microsoft Edge web browser. If you
    need to embed some web content into your app, `WebView2` is the control you should
    use to ensure maximum compatibility with modern web standards.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: WinUI 3 中开发者可用的新控件是 `WebView2`。这个 `WebView` 的新版本是基于基于 Chromium 的 Microsoft Edge
    网络浏览器构建的。如果你需要将一些网络内容嵌入到你的应用中，`WebView2` 是你应该使用的控件，以确保与现代网络标准的最大兼容性。
- en: 'Here is a screenshot of **WebView2** running in the **WinUI 3** **Gallery**
    app:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是 **WebView2** 在 **WinUI 3** **图库** 应用中运行的截图：
- en: '![Figure 5.12 – WebView2 running in the WinUI 3 Gallery application](img/B20908_05_12.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.12 – WebView2 在 WinUI 3 图库应用中运行](img/B20908_05_12.jpg)'
- en: Figure 5.12 – WebView2 running in the WinUI 3 Gallery application
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.12 – WebView2 在 WinUI 3 图库应用中运行
- en: 'Web content can be loaded into the control from the web or local network, from
    files in local storage, or from files embedded into the application’s binaries.
    Here are some examples of loading into `WebView2` from each type of source:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 网络内容可以从网络或本地网络、本地存储中的文件或嵌入到应用程序的二进制文件中的文件加载到控件中。以下是从每种类型源加载到 `WebView2` 的示例：
- en: '[PRE0]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you have an existing application written for the web, then the `WebView2`
    control is a great way to integrate it into your new WinUI client application.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个为网络编写的现有应用程序，那么 `WebView2` 控件是将其集成到你的新 WinUI 客户端应用程序中的绝佳方式。
- en: Let’s shift gears for a moment and talk about some features of the Windows App
    SDK outside of the WinUI 3 controls.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们暂时转换一下话题，讨论一些 Windows App SDK 中 WinUI 3 控件之外的功能。
- en: What’s new in the Windows App SDK
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows App SDK 中的新功能
- en: 'You know by now that WinUI 3 is a part of the Windows App SDK. The Windows
    App SDK has its own versions, while WinUI 3 will always be known as WinUI 3\.
    The latest stable release of the Windows App SDK at the time of this writing is
    version 1.4\. In this section, we will review some of the Windows App SDK features
    that are outside the controls in WinUI. For a complete list of the current Windows
    App SDK features, you can review this page on *Microsoft* *Learn*: [https://learn.microsoft.com/windows/apps/windows-app-sdk/#windows-app-sdk-features](https://learn.microsoft.com/windows/apps/windows-app-sdk/#windows-app-sdk-features).'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在为止，你应该知道 WinUI 3 是 Windows App SDK 的一部分。Windows App SDK 有自己的版本，而 WinUI 3
    将始终被称为 WinUI 3。在撰写本文时，Windows App SDK 的最新稳定版本是 1.4。在本节中，我们将回顾一些 Windows App SDK
    的功能，这些功能位于 WinUI 控件之外。要查看当前 Windows App SDK 功能的完整列表，你可以查看 *Microsoft* *Learn*
    上的此页面：[https://learn.microsoft.com/windows/apps/windows-app-sdk/#windows-app-sdk-features](https://learn.microsoft.com/windows/apps/windows-app-sdk/#windows-app-sdk-features)。
- en: Power management
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 电源管理
- en: 'Your app can subscribe and respond to power management events as part of the
    Windows App SDK’s app lifecycle API. Some of the events exposed by the `PowerManager`
    class in the SDK include the following:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你的应用可以作为 Windows App SDK 应用生命周期 API 的一部分订阅并响应电源管理事件。SDK 中 `PowerManager` 类公开的一些事件包括以下内容：
- en: '`BatteryStatusChanged`: Raised when the status of the battery in the system
    has changed. Use the `BatteryStatus` property to get the current status.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`BatteryStatusChanged`：当系统电池状态发生变化时触发。使用 `BatteryStatus` 属性来获取当前状态。'
- en: '`DisplayStatusChanged`: Raised when the status of the display where the app
    is running changes. Use the `DisplayStatus` property to get the current status.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DisplayStatusChanged`：当运行应用程序的显示状态发生变化时触发。使用`DisplayStatus`属性来获取当前状态。'
- en: '`EffectivePowerModeChanged`: Raised when the effective power mode of the system
    has changed. These can also be referred to as power plans, such as battery saver
    and high performance. Use the `EffectivePowerMode` property to get the current
    mode.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`EffectivePowerModeChanged`：当系统的有效电源模式发生变化时触发。这些也可以被称为电源计划，例如省电模式和性能模式。使用`EffectivePowerMode`属性来获取当前模式。'
- en: '`SystemSuspendStatusChanged`: Raised when the system is suspended or resumes.
    In UWP, these types of events were part of the built-in lifecycle in the `App`
    class. Use the `SystemSuspendStatus` property to get the current status.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SystemSuspendStatusChanged`：当系统挂起或恢复时触发。在UWP中，这些类型的事件是`App`类内置生命周期的一部分。使用`SystemSuspendStatus`属性来获取当前状态。'
- en: '`UserPresenceStatusChanged`: Raised when the system detects a change in the
    user’s presence. Use the `UserPresenceStatus` property to get the current status.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UserPresenceStatusChanged`：当系统检测到用户状态变化时触发。使用`UserPresenceStatus`属性来获取当前状态。'
- en: 'A full list of `PowerManager` events and properties can be viewed on *Microsoft*
    *Learn*: [https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.power.powermanager](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.power.powermanager).'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在 *Microsoft* *Learn* 上查看`PowerManager`事件的完整列表和属性：[https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.power.powermanager](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.power.powermanager)。
- en: Responding to changes in these events can help your app be intelligent in how
    and when it performs resource-intensive actions. You may have some background
    processing that should only be performed when a system is plugged in or its battery
    capacity is above a certain percentage. You could also choose to suspend screen
    animations or dashboard updates when a user’s screen is dimmed or turned off in
    order to conserve power.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 对这些事件变化的响应可以帮助你的应用程序在何时以及如何执行资源密集型操作方面变得更加智能。你可能有一些后台处理，这些处理只有在系统连接电源或电池容量高于一定百分比时才应该执行。你也可以选择在用户屏幕变暗或关闭时暂停屏幕动画或仪表板更新，以节省电力。
- en: Next, let’s discuss the windowing capabilities in the Windows App SDK.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们讨论Windows App SDK中的窗口功能。
- en: Window management
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 窗口管理
- en: 'The Windows App SDK has some limited window management capabilities that can
    be leveraged by using the `AppWindow` class. By using some of the interop APIs,
    your app can get the `HWND` and `WindowId` values for the current window. In Win32
    development, a `WindowId` can then be used to get a reference to the current `AppWindow`
    object:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Windows App SDK提供了一些有限的窗口管理功能，可以通过使用`AppWindow`类来利用。通过使用一些互操作API，你的应用程序可以获取当前窗口的`HWND`和`WindowId`值。在Win32开发中，可以使用`WindowId`来获取当前`AppWindow`对象的引用：
- en: '[PRE1]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Most of the properties on `AppWindow` are read-only. You can get information
    such as its size, position, visibility, and the `WindowId` value of its owner.
    One writable property of `AppWindow` is `Title`. Setting `Title` allows you to
    change the text in the title bar of the current window.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`AppWindow`上的大多数属性都是只读的。你可以获取有关其大小、位置、可见性和其所有者的`WindowId`值等信息。`AppWindow`的一个可写属性是`Title`。设置`Title`允许你更改当前窗口标题栏中的文本。'
- en: Push notifications and app notifications
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 推送通知和应用程序通知
- en: '**Push notifications** can be used to either interact with the app without
    notifying the user or display a toast notification in Windows. The latter is considered
    an **app notification** and is most familiar to users. The other raw notifications
    that trigger within the app are used for things such as waking the app from an
    inactive state or for data syncing purposes.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**推送通知**可以用来在不通知用户的情况下与应用程序交互，或者在Windows中显示一个托盘通知。后者被认为是**应用程序通知**，并且对用户来说最为熟悉。在应用程序内部触发的其他原始通知用于唤醒应用程序从非活动状态或用于数据同步等目的。'
- en: 'The Windows App SDK supports both types of notifications. The APIs for these
    are in the `Microsoft.Windows.PushNotifications` and `Microsoft.Windows.AppNotifications`
    namespaces. Exploring notifications is beyond the scope of this chapter, but you
    can explore some quick starts on *Microsoft Learn* from the *Push notifications
    overview* page: [https://learn.microsoft.com/windows/apps/windows-app-sdk/notifications/push-notifications/](https://learn.microsoft.com/windows/apps/windows-app-sdk/notifications/push-notifications/).
    We will add notifications to our project in [*Chapter 8*](B20908_08.xhtml#_idTextAnchor197),
    *Adding Windows Notifications to* *WinUI Applications*.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Windows App SDK 支持两种类型的通知。这些API位于 `Microsoft.Windows.PushNotifications` 和 `Microsoft.Windows.AppNotifications`
    命名空间中。探索通知超出了本章的范围，但您可以从 *Push notifications overview* 页面上的快速入门部分在 *Microsoft
    Learn* 上进行探索：[https://learn.microsoft.com/windows/apps/windows-app-sdk/notifications/push-notifications/](https://learn.microsoft.com/windows/apps/windows-app-sdk/notifications/push-notifications/).
    我们将在 [*第8章*](B20908_08.xhtml#_idTextAnchor197) 中向我们的项目添加通知，*向WinUI应用程序添加Windows通知*。
- en: Now that we’ve learned about some of the new features in WinUI and the Windows
    App SDK, let’s get back to our project and add a couple of new controls to it.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了WinUI和Windows App SDK的一些新功能，让我们回到我们的项目，并添加几个新的控件。
- en: Adding some new controls to the project
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向项目中添加一些新控件
- en: In this section, we are going to use two controls that are only available to
    Windows applications with WinUI. We are going to change the `SplitButton` to allow
    users to save and return to a list of items, or save and continue adding another
    item to the item details page. Then, we will add a `TeachingTip` control to inform
    users of the new saving capabilities. To follow along with these steps, you can
    use the starter project on GitHub ([https://github.com/PacktPublishing/Learn-WinUI-3-Second-Edition/tree/master/Chapter05/Start](https://github.com/PacktPublishing/Learn-WinUI-3-Second-Edition/tree/master/Chapter05/Start)).
    Let’s start by updating the **Save** button.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用仅适用于具有WinUI的Windows应用程序的两个控件。我们将更改 `SplitButton` 以允许用户保存并返回到项目列表，或保存并继续在项目详情页上添加另一个项目。然后，我们将添加一个
    `TeachingTip` 控件来通知用户新的保存功能。要跟随这些步骤，您可以使用GitHub上的起始项目（[https://github.com/PacktPublishing/Learn-WinUI-3-Second-Edition/tree/master/Chapter05/Start](https://github.com/PacktPublishing/Learn-WinUI-3-Second-Edition/tree/master/Chapter05/Start)）。让我们先更新
    **Save** 按钮。
- en: Using the SplitButton control
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 SplitButton 控件
- en: 'Follow these steps:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤操作：
- en: 'First, in `ItemDetailsViewModel`, add a new `SaveItemAndContinue` method to
    be bound to the `Click` event of our new `SplitButton` control:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，在 `ItemDetailsViewModel` 中添加一个新的 `SaveItemAndContinue` 方法，并将其绑定到我们新的 `SplitButton`
    控件的 `Click` 事件：
- en: '[PRE2]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In the `SaveItemAndContinue` method, we are calling `Save` and then resetting
    all the item state data so that it’s ready for a new item to be entered. The one
    problem here is that `Save` currently navigates back to the previous page. Let’s
    fix that.
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 `SaveItemAndContinue` 方法中，我们调用 `Save` 并重置所有项目状态数据，以便为新项目输入做好准备。这里的一个问题是 `Save`
    当前会导航回上一页。让我们修复这个问题。
- en: 'To remove the call from `Save` to return to the previous page, we need a new
    method for the `SaveItemAndReturn`:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从 `Save` 中移除返回上一页的调用，我们需要为 `SaveItemAndReturn` 创建一个新的方法：
- en: '[PRE3]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Here, we are calling `Save` and then navigating back to the previous page. The
    call to `_navigationService.GoBack` can now be removed from `Save`.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，我们调用 `Save` 并然后导航回上一页。现在可以从 `Save` 中移除对 `_navigationService.GoBack` 的调用。
- en: We’re currently using `x:Bind` to bind directly to the save methods instead
    of using `ICommand`. So, you can remove the `RelayCommand` attribute from `Save`
    and the `CanSaveItem` method from `ItemDetailsViewModel`. You will also need to
    remove the `NotifyCanExecuteChangedFor` attribute from the `isDirty` private member.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们目前正在使用 `x:Bind` 直接绑定到保存方法，而不是使用 `ICommand`。因此，您可以从 `Save` 中移除 `RelayCommand`
    属性，并从 `ItemDetailsViewModel` 中移除 `CanSaveItem` 方法。您还需要从 `isDirty` 私有成员中移除 `NotifyCanExecuteChangedFor`
    属性。
- en: 'Finally, open `ItemDetailsPage` and update the `SplitButton` control:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，打开 `ItemDetailsPage` 并更新 `SplitButton` 控件：
- en: '[PRE4]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The content of `SplitButton` has been updated to `Save and Return`. We’ve also
    updated the binding to use the `Click` event to invoke the action and the `IsEnabled`
    property with `IsDirty`. A new child `Flyout` item is also added. `Flyout` contains
    a `StackPanel` control with `Button` controls for both the `Click` event invoking
    `SaveItemAndContinue`.
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`SplitButton` 的内容已更新为 `Save and Return`。我们还更新了绑定，使用 `Click` 事件来调用操作，以及使用 `IsDirty`
    的 `IsEnabled` 属性。还添加了一个新的子 `Flyout` 项目。`Flyout` 包含一个 `StackPanel` 控件，其中包含用于调用
    `SaveItemAndContinue` 的 `Click` 事件的 `Button` 控件。'
- en: 'That’s it! Now, run the application and try out this new feature. Here’s how
    the new button looks when you click the drop-down arrow:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这些！现在，运行应用程序并尝试这个新功能。当你点击下拉箭头时，新按钮看起来是这样的：
- en: '![Figure 5.13 – Using the new SplitButton control to save items](img/B20908_05_013.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.13 – 使用新的 SplitButton 控件保存项目](img/B20908_05_013.jpg)'
- en: Figure 5.13 – Using the new SplitButton control to save items
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.13 – 使用新的 SplitButton 控件保存项目
- en: Adding a TeachingTip control to the Save button
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 TeachingTip 控件添加到保存按钮
- en: A `TeachingTip` control is a great way to educate users about features in your
    application. It is a small popup with header text and content text. You may have
    seen them in some of the Windows applications you use.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`TeachingTip` 控件是教育用户了解应用程序中功能的一种很好的方式。它是一个带有标题文本和内容文本的小弹出窗口。你可能在使用的某些 Windows
    应用程序中见过它们。'
- en: '`TeachingTip` can either be linked to a control on the page or it can be placed
    directly on the page with an optional `PreferredPlacement` property, controlling
    where it appears on the page. It can be configured to be dismissed by the user
    with a **Close** button or automatically when the user starts interacting with
    the page.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`TeachingTip` 可以链接到页面上的控件，或者它可以直接放置在页面上，并使用可选的 `PreferredPlacement` 属性来控制它在页面上的位置。它可以配置为用户通过
    **关闭** 按钮或当用户开始与页面交互时自动关闭。'
- en: 'To add a `TeachingTip` control for our `SplitButton` control, add it to the
    `Resources` control in `ItemDetailsPage`, like so:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 要为我们的 `SplitButton` 控件添加 `TeachingTip` 控件，将其添加到 `ItemDetailsPage` 中的 `Resources`
    控件，如下所示：
- en: '[PRE5]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Inside the `TeachingTip` control, we’re binding `Target` to `SaveButton` and
    setting `Title` and `Subtitle` to educate users about the new **Save and create**
    **new** feature.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `TeachingTip` 控件内部，我们将 `Target` 绑定到 `SaveButton`，并将 `Title` 和 `Subtitle` 设置为教育用户关于新的
    **保存并创建** **新** 功能。
- en: 'There’s an additional call needed in the `ItemDetailsPage` constructor to make
    the tip appear:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `ItemDetailsPage` 构造函数中需要额外的调用才能使提示出现：
- en: '[PRE6]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If you run the application now, `TeachingTip` is going to appear every time
    the user opens `ItemDetailsPage`. This is going to quickly annoy our users. We
    can add a little bit of code to `ItemDetailsPage.xaml.cs` to save a user-level
    setting indicating that the current user has already seen this `TeachingTip` control.
    Then, the next time we load the page, we’ll check this setting so that the app
    can skip the code that displays the tip.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在运行应用程序，`TeachingTip` 将会在用户每次打开 `ItemDetailsPage` 时出现。这可能会迅速让我们的用户感到厌烦。我们可以在
    `ItemDetailsPage.xaml.cs` 中添加一些代码，以保存一个用户级设置，表示当前用户已经看到了这个 `TeachingTip` 控件。然后，下次我们加载页面时，我们会检查这个设置，以便应用程序可以跳过显示提示的代码。
- en: 'We’re going to leverage Windows local storage to save and load the user setting:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将利用 Windows 本地存储来保存和加载用户设置：
- en: '[PRE7]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now, the user will only see this tip the first time they load `ItemDetailsPage`.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，用户在第一次加载 `ItemDetailsPage` 时才会看到这个提示。
- en: 'Let’s see our `TeachingTip` control in action. Run the application, select
    an item, and click `ItemDetailsPage`:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们的 `TeachingTip` 控件的实际应用。运行应用程序，选择一个项目，并点击 `ItemDetailsPage`：
- en: '![Figure 5.14 – Using the new TeachingTip control](img/B20908_05_014.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.14 – 使用新的 TeachingTip 控件](img/B20908_05_014.jpg)'
- en: Figure 5.14 – Using the new TeachingTip control
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.14 – 使用新的 TeachingTip 控件
- en: Now, the application has a new feature and a great way to inform users of how
    to use it. Let’s wrap up and discuss what we have learned in this chapter.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，应用程序有一个新功能，以及一种很好的方式来告知用户如何使用它。让我们总结一下，并讨论在本章中学到的东西。
- en: Summary
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we explored many of the controls available in WinUI 3\. We
    learned that the **WinUI 3 Gallery** application is a great tool for exploring
    the controls available to WinUI developers. We also explored some of the features
    in the Windows App SDK that are not part of WinUI. At the end, we learned about,
    and added, a couple of new WinUI controls to our application.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了 WinUI 3 中可用的许多控件。我们了解到，**WinUI 3 Gallery** 应用程序是探索 WinUI 开发者可用控件的一个很好的工具。我们还探讨了
    Windows App SDK 中的一些不属于 WinUI 的功能。最后，我们在我们的应用程序中添加了一些新的 WinUI 控件。
- en: In the next chapter, we will learn more about services and will start persisting
    the data for our media items between sessions.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习更多关于服务的内容，并将开始在会话之间持久化我们的媒体项目数据。
- en: Questions
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which WinUI control can display Lottie animations?
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个 WinUI 控件可以显示 Lottie 动画？
- en: Which WinUI control can display HTML content with the Chromium-based Microsoft
    Edge browser?
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个 WinUI 控件可以使用基于 Chromium 的 Microsoft Edge 浏览器显示 HTML 内容？
- en: Can you create a WinUI 3 app with C++?
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用 C++ 创建 WinUI 3 应用程序吗？
- en: Which control would you use to educate users about a new feature?
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会用哪个控件来教育用户关于新功能的信息？
- en: Which application can you download from the Microsoft Store to learn about all
    the WinUI controls?
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以从 Microsoft Store 下载哪个应用来了解所有 WinUI 控件？
- en: What type of control can be used to save and load user settings between sessions?
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪种控件可以用来在会话之间保存和加载用户设置？
- en: Which Windows App SDK feature would you use to notify users when your app has
    a new message to be viewed?
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会用哪个 Windows App SDK 功能来通知用户你的应用有新消息可以查看？
