- en: Chapter 1. Xamarin and Mono – a Pathway to the Unnatural
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter provides an overview of the Mono project and the suite of Mono-based
    commercial products offered by Xamarin. To begin this pathway into the unknown,
    this chapter will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Mono
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why you should use Xamarin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installation of Xamarin.Android and Xamarin.iOS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Xamarin Studio and Visual Studio for development
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Options for source control
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding Mono
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we jump straight into a conversation about Xamarin, let''s discuss a
    related topic: Mono. Mono is an open source cross-platform implementation of the
    .NET platform. This includes a **Common Language Runtime** (**CLR**) that is binary
    compatible with Microsoft .NET, a set of compilers for languages such as C#, and
    an implementation of the .NET runtime libraries. The Mono CLR has been ported
    to many platforms, which include the Linux and BSD-based operating systems (which
    are not limited to just Android, iOS, and OS X), Windows-based systems, and even
    some game consoles such as the Wii, Xbox 360, and PS4.'
  prefs: []
  type: TYPE_NORMAL
- en: The Mono project was started by a Ximian, which was purchased by Novell. Xamarin
    now leads Mono.
  prefs: []
  type: TYPE_NORMAL
- en: The Xamarin product suite
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Xamarin is a software company that offers a suite of commercial Mono-based products
    that allow developers to create apps for Android, iOS, and OS X using C# and the
    .NET framework. Xamarin's cofounder, Miguel de Icaza, has directed the Mono project
    since its inception in 2001.
  prefs: []
  type: TYPE_NORMAL
- en: 'Xamarin''s primary product offerings are:'
  prefs: []
  type: TYPE_NORMAL
- en: Xamarin.Android (formerly Mono for Android)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xamarin.iOS (formerly MonoTouch)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xamarin.Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Each of these products is licensed through an annual subscription with the
    following levels being available:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Starter**: This subscription is actually free, but restricts the size of
    apps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Indie**: This subscription provides everything needed to build and deploy
    full-featured mobile apps, but can only be purchased by companies with five or
    less employees. This subscription also does not include the use of the Visual
    Studio add-in discussed in the *Using the Visual Studio environment* section.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Business**: This subscription adds the use of the Visual Studio add-in as
    well as e-mail support.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enterprise**: This subscription adds access to a set of prime components,
    hotfixes, and enhanced support.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: A link for the pricing information can be found at the end of this section.
    For quick reference, please visit [https://store.xamarin.com](https://store.xamarin.com).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Xamarin also hosts a component store; a market place to buy and sell components
    that can be used in Xamarin apps. The components in this store can be distributed
    for free or sold, and Xamarin pays component vendors a percentage of the revenue
    collected from the sales.
  prefs: []
  type: TYPE_NORMAL
- en: Another service that Xamarin offers is the Test Cloud. As the name implies,
    this is a cloud-based testing service that allows teams to create automated testing
    capabilities for their apps that can be run against a plethora of physical devices.
    This is particularly important for Android developers as there are far more devices
    that need to be considered.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following table provides useful links to additional information about the
    Xamarin suite:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Type of information | URL to access it |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Product information | [http://xamarin.com/tour](http://xamarin.com/tour)[http://xamarin.com/csharp](http://xamarin.com/csharp)[http://xamarin.com/products](http://xamarin.com/products)[http://xamarin.com/faq](http://xamarin.com/faq)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Product pricing | [https://store.xamarin.com](https://store.xamarin.com)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Component store | [https://components.xamarin.com](https://components.xamarin.com)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Xamarin Test Cloud | [http://xamarin.com/test-cloud](http://xamarin.com/test-cloud)
    |'
  prefs: []
  type: TYPE_TB
- en: Evaluating whether Xamarin is the right tool
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that you have some background on Mono and the Xamarin suite of products,
    you might want to ask yourself: "Is Xamarin the right tool for my project?"'
  prefs: []
  type: TYPE_NORMAL
- en: 'The benefits of using Xamarin are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**It builds on your existing skills of using C# and .NET**: Because of the
    huge number of features available to both the C# language and the .NET framework,
    it requires a huge investment of time and energy for developers to master them.
    Although you can argue that Java and Objective-C have similarities (being object-oriented
    languages), there is a real cost associated with transferring your proficiency
    in C# and .NET to make the same claim regarding Java or Objective-C. This is where
    Xamarin comes to your rescue; individuals and groups that have made a significant
    investment in C# and .NET might turn to it if they wish to develop iOS and Android
    apps due to the requirement of these skills.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Allows for reusability of code in cross-platform development**: Although
    the Xamarin suite prevents you to create an app that can also be deployed to Android,
    iOS, and WP8, it compensates for this by providing you with the capability to
    recycle huge portions of your code base across all of these platforms. The general
    process that makes this all so much easier for you is that the user interface
    code and the code that deals with the device capabilities tend to be written for
    each platform. With this, things such as client-side logic (proxies and caching),
    client-side validation, data caching, and client-side data storage can potentially
    be reused, saving you a huge amount of time and energy. I have personally seen
    Android and iOS apps share as much as 50 percent of the code base and some report
    as high as 80 percent. The more you invest in the approach to reuse, the more
    likely you will achieve a higher percentage.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'However, there are some drawbacks when it comes to using Xamarin:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Costs due to licensing requirements**: The Xamarin suite or tools are all
    commercial tools and must be licensed, meaning there is a tangible cost of entry.
    You can check Xamarin''s website for the current pricing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Waiting for updates**: You will find that there is some lag time between
    a new release of a platform (Android/iOS) and the corresponding release of the
    Xamarin products that support it. Xamarin has done a great job of releasing Xamarin.iOS
    on the same day when the new versions of the OS are made available. Xamarin.Android
    generally lags behind because Google does not make beta/preview versions available.
    In some ways, this delay is not a big issue at least for phone apps; the telecoms
    generally take some period of time before they provide the newest Android versions
    to be downloaded.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Performance and memory management**: This is probably more of a concern for
    Xamarin.Android than Xamarin.iOS. As you will see in [Chapter 2](ch02.html "Chapter 2. Demystifying
    Xamarin.iOS"), *Demystifying Xamarin.iOS*,Xamarin.iOS essentially builds a binary
    executable much like those produced by using just Xcode and the iOS SDK. However,
    as we will see in [Chapter 3](ch03.html "Chapter 3. Demystifying Xamarin.Android"),
    *Demystifying Xamarin.Android*, Xamarin.Android relies on deploying the Mono CLR
    and the communications between the Mono CLR and the Dalvik VM. In some cases,
    Xamarin.Android will allocate Java and C# objects to achieve some of the "magic"
    and "sorcery" behind developing in C# or .NET on an Android device. As a result
    of this, Xamarin.Android will affect both the memory footprint and execution performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Distribution size**: There are a number of runtime libraries that must be
    distributed or linked with Xamarin apps. A discussion of the actual size and strategies
    to minimize the distribution size is reserved for the last chapter.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While the list of drawbacks might seem extensive, in most cases, the impact
    of each can be minimized. I have chosen to build out a Xamarin consulting practice
    because I place a high value on the benefits identified and feel like many groups
    that have a significant investment in C# and .NET will see the same value. If
    you are a group or an individual that places a great value on Xamarin's benefits,
    then you should certainly consider using it.
  prefs: []
  type: TYPE_NORMAL
- en: Learning C#
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This book assumes that you have a working knowledge of C# and .NET. Since this
    might not be the case for some readers, we have included a few links to help you
    get up to speed. Xamarin provides the following link which presents C# from an
    Objective-C perspective: [http://docs.xamarin.com/guides/ios/advanced_topics/xamarin_for_objc/primer](http://docs.xamarin.com/guides/ios/advanced_topics/xamarin_for_objc/primer)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Microsoft provides a set of tutorials for learning C# available at: [http://msdn.microsoft.com/en-us/library/aa288436(v=vs.71).aspx](http://msdn.microsoft.com/en-us/library/aa288436(v=vs.71).aspx).'
  prefs: []
  type: TYPE_NORMAL
- en: Installing Xamarin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before moving on, we need to install Xamarin. This section will show you the
    steps to install Xamarin on both the Android and iOS platforms, notably Xamarin.Android
    and Xamarin.iOS, on both OS X and Windows.
  prefs: []
  type: TYPE_NORMAL
- en: Since Xamarin.iOS is dependent on the latest iOS SDK and the latest Xcode, both
    of these should be installed prior to starting the OS X install.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Both Xcode and the iOS SDK are free and you can download these installs from:
    [https://developer.apple.com/devcenter/ios/index.action#downloads](https://developer.apple.com/devcenter/ios/index.action#downloads).'
  prefs: []
  type: TYPE_NORMAL
- en: Also, note that you can install Xcode from the OS X App Store.
  prefs: []
  type: TYPE_NORMAL
- en: Likewise, Xamarin.Android is dependent on the latest Android SDK; however, the
    difference being that the Xamarin install will automatically download the Android
    SDK and install it as part of the overall install process. So, no separate steps
    need to be taken. If you already have installed the Android SDK, you have just
    been handed the opportunity to use it.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Xamarin on OS X
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To install Xamarin on OS X, go to [www.Xamarin.com](http://www.Xamarin.com),
    download the OS X installer to launch it, and follow the directions. Be sure to
    choose to install both Xamarin.Android and Xamarin.iOS; Xamarin.Mac is optional.
  prefs: []
  type: TYPE_NORMAL
- en: The Xamarin.iOS Visual Studio plugin uses the build server called `mtbserver`
    to compile the iOS code on your Mac. If you plan to use the Visual Studio plugin,
    be sure to choose to allow network connections.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Xamarin on Windows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now, we move on to the Windows installation process. If you plan on using the
    Visual Studio add-in, Visual Studio will need to be installed prior to installing
    Xamarin.
  prefs: []
  type: TYPE_NORMAL
- en: To install Xamarin on Windows, you need to visit [www.Xamarin.com](http://www.Xamarin.com),
    download the Windows installer, launch it, and then follow the directions. Be
    sure to install both Xamarin.Android and Xamarin.iOS.
  prefs: []
  type: TYPE_NORMAL
- en: Development environments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Developers have two options when it comes to IDEs: Xamarin Studio or Visual
    Studio. This section will show you how to develop apps for both Android and iOS
    through both of these studios.'
  prefs: []
  type: TYPE_NORMAL
- en: Using the Xamarin Studio environment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Xamarin Studio is a customized version of the MonoDevelop IDE and this can
    be used to develop applications for Android, iOS, and OS X. Xamarin Studio is
    available on both OS X and Windows with highly advanced and useful features such
    as:'
  prefs: []
  type: TYPE_NORMAL
- en: Code completion
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Smart syntax highlighting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Code navigation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Code tooltips
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrated debugging for mobile apps running in emulators or on devices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Source control integration with Git and Subversion built-in
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you look at the following screenshot, you will see how Xamarin Studio is
    shown with the Android user interface designer opened:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Using the Xamarin Studio environment](img/0838OT_01_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Using Xamarin Studio to develop Android apps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Xamarin Studio and the Xamarin.Android add-in allow the complete development
    and debugging of Android apps without use of any other IDEs. The Android UI designer
    can also be used from within Xamarin Studio.
  prefs: []
  type: TYPE_NORMAL
- en: Using Xamarin Studio to develop iOS apps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Xamarin Studio and the Xamarin.iOS add-in allow the development and testing
    of iOS apps when installed on a Mac with Xcode and the iOS SDK. All code can be
    written, compiled, and debugged from within Xamarin Studio. In general, the user
    interface XIB and/or storyboard files must be built within Xcode; Xamarin Studio
    provides a link to Xcode such that when a xib or storyboard file is double-clicked
    on, Xcode will be launched.
  prefs: []
  type: TYPE_NORMAL
- en: There is a caveat to this; Xamarin has an iOS UI designer built for Xamarin
    Studio, yet it has remained in an alpha status for almost a year. I have seen
    a number of posts on various forums indicating it is stable and safe to use, but
    Xamarin has been slow to clarify why it is still in alpha status and when it will
    move to a stable status. We will discuss the use of the iOS UI designer in more
    detail in [Chapter 4](ch04.html "Chapter 4. Developing Your First iOS App with
    Xamarin.iOS"), *Developing Your First iOS App with Xamarin.iOS.*
  prefs: []
  type: TYPE_NORMAL
- en: Using the Visual Studio environment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Xamarin for Visual Studio is an add-in that supports the development of the
    Xamarin.Android and Xamarin.iOS apps and is available to business and enterprise
    subscribers. This add-in can be used with any non-Express edition of Visual Studio
    2010 through to Version 2013\. Android apps can be completely developed using
    Visual Studio. In order to develop iOS apps, you will still need a Mac with the
    iOS SDK and Xcode to compile and create the user interface xib and/or storyboard
    files.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you already have a license for Visual Studio and are comfortable with the
    environment, this add-in will be better suited to you than Xamarin Studio due
    to it being simple to use.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows Visual Studio 2012 with the Android user interface
    designer opened:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Using the Visual Studio environment](img/0838OT_01_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The Android user interface designer
  prefs: []
  type: TYPE_NORMAL
- en: Using Visual Studio to develop Android apps
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Visual Studio add-in for Xamarin.Android allows the full development and
    debugging of Android apps without the use of any other IDE. This add-in provides
    the usage of the Android UI designer from within Visual Studio. For those that
    have the appropriate licenses and are comfortable with Visual Studio, this might
    be the best option for Android development.
  prefs: []
  type: TYPE_NORMAL
- en: Using Visual Studio to develop iOS apps
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Visual Studio add-in for Xamarin.iOS allows you to develop and test iOS
    apps, but only in conjunction with the use of a Mac with both Xcode and the iOS
    SDK installed. The iOS code must be compiled and executed on a Mac using the Xamarin's
    mtbserver. Xcode on a Mac must also be used to develop the user interface xib
    and/or storyboard files for an iOS app. We will discuss this configuration in
    more detail in [Chapter 4](ch04.html "Chapter 4. Developing Your First iOS App
    with Xamarin.iOS"), *Developing Your First iOS App with Xamarin.iOS*.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Solution and project files created and used by Xamarin Studio are completely
    compatible with Visual Studio. This gives teams the flexibility to choose which
    IDE to use and they can easily change throughout the duration of a project.
  prefs: []
  type: TYPE_NORMAL
- en: Comparing IDEs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The advantages and disadvantages of adopting each IDE are shown in the following
    table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| IDE | Pros | Cons |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Xamarin Studio | Available for all Xamarin subscription levelsRuns on Windows
    and OS X | Limited number of productivity add-ins availableDoes not offer support
    for the use of TFS for source control |'
  prefs: []
  type: TYPE_TB
- en: '| Visual Studio | Most C# developers are already familiar and comfortable with
    Visual StudioAllows the use of popular productivity add-ins such as ReShaper and
    CodeRushAllows the use of TFS for source control and issue tracking | Requires
    a business or enterprise subscription of XamarinRequires a license of VSRuns on
    Windows onlyFor iOS development, requires a more complex configuration in which
    VS must communicate with a Mac running Xcode to perform builds and UI development
    must be done with Xcode |'
  prefs: []
  type: TYPE_TB
- en: Version control
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Version control can be a challenge anytime you have a diverse set of development
    tools, and Xamarin certainly adds diversity to most shops. The challenge is making
    it easy to share and manage code from all of the different IDEs and client apps
    that folks will be working with; many times they do not have access to the same
    repositories. Since the benefits of using Xamarin are very attractive to existing
    .NET shops, many Xamarin developers will find themselves working in environments
    already committed to using Microsoft **Team Foundation Server** (**TFS**). Unfortunately,
    it's not always easy to connect to TFS from non-Microsoft tools. In the case of
    Xamarin Studio, there is an open source add-in that cannot be directly supported
    by Xamarin and can be challenging to configure.
  prefs: []
  type: TYPE_NORMAL
- en: 'Other version control systems to consider include Git and Subversion. Xamarin
    Studio contains built-in support for both Git and Subversion, and add-ins for
    both of these tools exist for Visual Studio. The following table contains useful
    URLs to download and read about the various add-ins:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Add-in | URL to access it |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| TFS add-in for Xamarin Studio | [https://github.com/Indomitable/monodevelop-tfs-addin](https://github.com/Indomitable/monodevelop-tfs-addin)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Git for Visual Studio | (VS2013 has built-in support)[http://msdn.microsoft.com/en-us/library/hh850437.aspx](http://msdn.microsoft.com/en-us/library/hh850437.aspx)(VS2012
    requires a free plugin)[http://visualstudiogallery.msdn.microsoft.com/abafc7d6-dcaa-40f4-8a5e-d6724bdb980c](http://visualstudiogallery.msdn.microsoft.com/abafc7d6-dcaa-40f4-8a5e-d6724bdb980c)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Subversion add-in for Visual Studio (by VisualSVN) | [http://www.visualsvn.com/visualsvn/?gclid=CMmSnY-opL0CFa07MgodDksA5g](http://www.visualsvn.com/visualsvn/?gclid=CMmSnY-opL0CFa07MgodDksA5g)
    |'
  prefs: []
  type: TYPE_TB
- en: 'Like many aspects of software development, there is not a "one size fits all".
    The following table outlines some of the pros and cons to consider when deciding
    on a source control solution for Xamarin projects:'
  prefs: []
  type: TYPE_NORMAL
- en: '| VCS Tool | Pros | Cons |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| TFS | Already in use by many shops that will consider Xamarin.Free add-in
    for Xamarin Studio. | Xamarin Studio add-in has been known to be problematic to
    use in the past. |'
  prefs: []
  type: TYPE_TB
- en: '| Git | Built-in support in Xamarin.Free add-in available for Visual Studio
    2012 and 2013. | Difficult to share and synchronize code with other teams in a
    large organization that might be using TFS for their C# code. |'
  prefs: []
  type: TYPE_TB
- en: '| Subversion | Built-in support in Xamarin Studio.Commercial add-in for Visual
    Studio. | Difficult to share and synchronize code with other teams in a large
    organization that might be using TFS for their C# code. |'
  prefs: []
  type: TYPE_TB
- en: If you already have a significant investment in using TFS, try to make that
    work for your Xamarin development as well. This can be done by either having developers
    use Visual Studio or trying your luck with the TFS add-in for Xamarin Studio.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we provided an introduction to Mono and the suite of commercial
    products offered by Xamarin and considered the pros and cons of using Xamarin.
    We also went through the installation process and took a first look at the IDE
    options available to developers.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will take a look at the architecture of the Xamarin.iOS
    product.
  prefs: []
  type: TYPE_NORMAL
