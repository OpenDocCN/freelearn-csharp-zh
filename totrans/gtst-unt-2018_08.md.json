["```cs\n using System.Collections;\n using System.Collections.Generic;\n using UnityEngine;\n\n public class BeetleNPC : MonoBehaviour {\n\n     Animator animator;\n\n     // Use this for initialization\n     void Start () {\n         animator = GetComponent&lt;Animator>();    \n     }\n\n     // Collision Detection Test\n     void OnCollisionEnter(Collision col) \n     {\n         if (col.gameObject.CompareTag(\"Player\"))\n         {\n             animator.Play(\"Die on Ground\");\n         }\n     }\n } \n```", "```cs\n using System.Collections;\n using System.Collections.Generic;\n using UnityEngine;\n\n public class BeetlePatrol : MonoBehaviour { \n```", "```cs\n// Variables\npublic static bool isDie = false;\n\npublic float speed = 5;\npublic float directionChangeInterval = 1;\npublic float maxHeadingChange = 30;\n\nAnimator beetleAnim;\n\nCharacterController controller;\nfloat heading;\nVector3 targetRotation;\n\n```", "```cs\nvoid Start () {\n\n     controller = GetComponent&lt;CharacterController>();\n     beetleAnim = GetComponent&lt;Animator> ();\n\n     // Set random initial rotation\n     heading = Random.Range(0, 360);\n     transform.eulerAngles = new Vector3(0, heading, 0);\n\n     StartCoroutine(NewHeading()); \n} \n```", "```cs\nvoid Update () {\n\n     if (!isDie) {\n          transform.eulerAngles = Vector3.Slerp (transform.eulerAngles, targetRotation, \n               Time.deltaTime * directionChangeInterval);\n          var forward = transform.TransformDirection (Vector3.forward);\n          controller.SimpleMove (forward * speed);\n     }\n\n} \n```", "```cs\nIEnumerator NewHeading () {\n\n     while (true) {\n          NewHeadingRoutine();\n          yield return new WaitForSeconds(directionChangeInterval);\n     }\n}\n\nvoid NewHeadingRoutine () {\n\n     var floor = transform.eulerAngles.y - maxHeadingChange;\n     var ceil  = transform.eulerAngles.y + maxHeadingChange;\n     heading = Random.Range(floor, ceil);\n     targetRotation = new Vector3(0, heading, 0);\n }\n\n} // this is the end of the Beetle Patrol class\n```", "```cs\nAnimator animator;\npublic GameObject cucumberToDestroy; \n```", "```cs\nvoid OnTriggerEnter(Collider theObject) {\n     if (theObject.gameObject.CompareTag (\"Cucumber\")) {\n         cucumberToDestroy = theObject.gameObject;\n         BeetlePatrol.isEating = true;\n         animator.Play (\"Eating on Ground\");\n         StartCoroutine (\"DestroyCucumber\");\n     }\n} \n```", "```cs\nIEnumerator DestroyCucumber() {\n\n     yield return new WaitForSecondsRealtime (4);\n     Destroy (cucumberToDestroy.gameObject);\n     BeetlePatrol.isEating = false;\n} \n```", "```cs\n public static bool isDie, isEating = false; \n```", "```cs\nvoid Update () {\n\n     if (!isDie && !isEating) {\n          transform.eulerAngles = Vector3.Slerp (transform.eulerAngles, targetRotation, \n               Time.deltaTime * directionChangeInterval);\n          var forward = transform.TransformDirection (Vector3.forward);\n          controller.SimpleMove (forward * speed);\n     }\n} \n```", "```cs\nvar cm = GameObject.Find (\"CucumberMan\");\nvar tf = cm.transform;\nthis.gameObject.transform.LookAt (tf); \n```", "```cs\nanimator.Play (\"Attacking on Ground\");\nStartCoroutine (\"DestroySelf\"); \n```", "```cs\nIEnumerator DestroySelf() {\n\n     yield return new WaitForSecondsRealtime (4);\n     animator.Play (\"Die on Ground\");\n     Destroy (this.gameObject, 4);\n} \n```", "```cs\n public static bool isDie, isEating, isAttacking =</span> false; \n```", "```cs\nvoid Update () {\n\n     if (!isDie && !isEating && !isAttacking)) {\n          transform.eulerAngles = Vector3.Slerp (transform.eulerAngles, \n               targetRotation, Time.deltaTime * directionChangeInterval);\n          var forward = transform.TransformDirection (Vector3.forward);\n          controller.SimpleMove (forward * speed);\n     }\n} \n```", "```cs\n using System.Collections;\n using System.Collections.Generic;\n using UnityEngine;\n\n public class BeetleNPC : MonoBehaviour {\n\n     Animator animator;\n     public GameObject cucumberToDestroy;\n     public bool cherryHit = false;\n     public float smoothTime = 3.0f; \n     public Vector3 smoothVelocity = Vector3.zero;\n```", "```cs\n void Start () {\n      animator = GetComponent&lt;Animator>();\n }\n```", "```cs\nvoid Update () {\n     if (cherryHit) {\n          var cm = GameObject.Find (\"CucumberMan\");\n          var tf = cm.transform;\n          this.gameObject.transform.LookAt (tf);\n\n          animator.Play (\"Standing Run\");\n\n          transform.position = Vector3.SmoothDamp (transform.position, tf.position,\n               ref smoothVelocity, smoothTime);\n     }\n}\n\n```", "```cs\n\n void OnCollisionEnter(Collision col) {\n      if (col.gameObject.CompareTag (\"Player\")) {\n\n           if (!cherryHit) {\n                BeetlePatrol.isAttacking = true;\n\n                var cm = GameObject.Find (\"CucumberMan\");\n                var tf = cm.transform;\n                this.gameObject.transform.LookAt (tf);\n\n                animator.Play (\"Attacking on Ground\");\n                StartCoroutine (\"DestroySelfOnGround\");\n           } else {\n                animator.Play (\"Standing Attack\");\n                StartCoroutine (\"DestroySelfStanding\");\n           }\n     }\n}\n```", "```cs\nvoid OnTriggerEnter(Collider theObject) {\n     if (theObject.gameObject.CompareTag (\"Cucumber\")) {\n\n          cucumberToDestroy = theObject.gameObject;\n          BeetlePatrol.isEating = true;\n          animator.Play (\"Eating on Ground\");\n          StartCoroutine (\"DestroyCucumber\");\n } else if (theObject.gameObject.CompareTag (\"Cherry\")) {\n          BeetlePatrol.isAttacking = true;\n          cherryHit = true;\n          animator.Play (\"Stand\");\n }\n}\n```", "```cs\nIEnumerator DestroyCucumber() {\n     yield return new WaitForSecondsRealtime (4);\n     Destroy (cucumberToDestroy.gameObject);\n     BeetlePatrol.isEating = false;\n}\n\nIEnumerator DestroySelfOnGround() {\n\n     yield return new WaitForSecondsRealtime (4);\n     animator.Play (\"Die on Ground\");\n     Destroy (this.gameObject, 4);\n}\n\nIEnumerator DestroySelfStanding() {\n\n     yield return new WaitForSecondsRealtime (4);\n     animator.Play (\"Die Standing\");\n\n     Destroy (this.gameObject, 4);\n     cherryHit = false;\n}\n\n} // End of BeetleNPC.cs\n```"]