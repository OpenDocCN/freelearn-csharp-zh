- en: What is an RPG?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we get started, it would be best to get a brief history of the genre
    and understand some of the key elements you will need to consider throughout the
    design of your RPG.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an overview of what we will be covering in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: A brief history of the genre
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Characteristics of an RPG
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Story and setting
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploration and quests
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inventory systems
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Character development
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Experience and leveling
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Combat systems
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User interaction and graphics
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Existing or upcoming RPGs
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patterns in RPGs
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You might have just started one of your most challenging tasks thus far.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: A brief history of the genre
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is an RPG? In short, it is a game in which players assume the roles of
    characters in a fictional setting, in which the participants assume the roles
    of characters and collaboratively create stories. Each player determines the actions
    of their characters based on their characterization, and the actions taken to
    succeed or fail according to the rules of the game.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: 'There are three varieties of RPGs, as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Tabletop
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Live action
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Computer RPG** (**cRPG**)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tabletop and **pen-and-paper** (**PnP**) RPGs are conducted through discussions
    in a small social gathering. There is usually a **Game Master** (**GM**) who describes
    the game world and its inhabitants. The other players describe the intended actions
    of their characters, and the GM describes the outcomes. This is the format in
    which RPGs were first popularized, namely through **Dungeons & Dragons** (**D&D**).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '**Live Action Role Playing** (**LARP**) is played more like improvisational
    theatre. Participants act out their character''s actions instead of describing
    them, and the real environment is used to represent the imaginary setting of the
    game world. Some LARPs use rock-paper-scissors or a comparison of attributes to
    resolve symbolically, while other LARPs use physical combat with simulated arms.
    A movie can be considered a simple LARP; the difference being that in a movie,
    all actions are scripted, and the players do not have much decision-making to
    do, whereas in a LARP, the characters can change the outcome of their actions
    based on their decisions.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: cRPGs are tabletop RPGs that have been translated into an electronic format.
    Early cRPGs influenced all types of electronic gaming, as well as spanning the
    role-playing video game genre. In short, a cRPG is a video game genre where the
    player controls the actions of the main character while immersed in a well-defined
    world.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: This book will concentrate on the design and development of a cRPG.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE:** Going forward, when we mention RPG in the book, we are referring
    to cRPG.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: Computer role-playing games take their root from tabletop versions of the genre.
    Many of the same terminologies, settings, and game mechanics have been carried
    over from the original tabletop games. Some of these similarities include story-telling
    and narrative elements, where, throughout the story, the player character will
    continuously develop their skills and abilities to meet the objective of the game.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Characteristics of an RPG
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Role-playing video games typically rely on a highly developed story and setting,
    which is divided into a number of quests or levels. Players typically control
    one or more characters by issuing commands, which are then performed by the player
    character based on their defined abilities and attributes. Throughout the game,
    these attributes increase or decrease, and set the personality of the character.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: An RPG usually also has a complex and dynamic interaction mechanism, defined
    and developed between the player character and the world within which they are
    immersed. This includes interaction with the world environment, as well as other
    non-character players defined within the world. Due to these factors, there is
    usually more time allocated to designing and developing the codebase that deals
    with the behavior and **artificial-intelligence** (**AI**) handling such events
    throughout the game.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: 'The key elements of an RPG are as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Story and setting
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploration and quests
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Items and inventory
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Character actions and abilities
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Experience and levels
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Combat
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interface and graphics
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Story and setting
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The premise of most role-playing games tasks the player with saving the world,
    or whichever level of society is threatened. There are often twists and turns
    as the story progresses, such as the surprise appearance of estranged relatives,
    or enemies who become friends or vice versa. The game world tends to be set in
    a historical, fantasy, or science fiction universe, which allows players to do
    things they cannot do in real life, and helps players suspend their disbelief
    about the rapid character growth.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: As stated previously, RPGs are heavily invested in story-telling. This is one
    of the main key entertainment factors of the genre. Due to this fact, when you
    are developing your RPG, you will need to pay close attention to how you develop
    your story and the characters that are within your story. This, in turn, translates
    into the kind of environments and settings you will have for your game, and characters
    within the game.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: Traditionally, RPGs progress the plot based on decisions that the player character
    makes during gameplay. This puts a great deal of pressure on the game designer,
    who needs to be able to integrate such forks in the gameplay with the main storyline
    of the game. This also raises the issue of how to program the game to take into
    consideration of all the different paths within the story.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: To make the game more interesting and attractive, the game designer can introduce
    special triggers within the story to make it more interesting or challenging.
    This is usually done by introducing new characters and/or areas to discover within
    an existing level. The following is a simplified description of the storyline
    and the setting we will be building for our cRPG.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: A glimpse of a cRPG story
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once upon a time, there was a great kingdom ruled by the great King Zazar. The
    ruler of the kingdom was a generous lord to his subjects. The kingdom under the
    rule of Zazar was peaceful and prosperous; however, over time, internal family
    rivalry and struggle caused cracks in the strong bond that kept the kingdom intact.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: Due to mysterious events, the great king decided to move his family away from
    the kingdom and trust his son to one of the wise elders that he trusted. The kingdom
    was never the same. Until now! Expanding on our story, in the second edition,
    we will implement more gameplay, as well as the introduction of quests.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Exploration and quests
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The whole idea behind an RPG is the ability of the player to have the freedom
    to explore the world in which they have been immersed. The more well defined the
    world is, the more interesting it will be for the player to explore and in return
    retain their curiosity and engagement throughout the gameplay.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: This is achieved by the narrative of the story developed for the RPG. Players
    will be specifically given the opportunity to walk around the world and explore
    their surroundings in order to meet their objectives.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: In an open-world RPG, the player is free to roam in the world event after they
    have met their objective, set by the storyline. In such cases, the player can
    still explore any area which is no longer needed for the continuation of the quest,
    but they can spend time exploring the area and maybe meet some other non-player
    characters that they hadn't previously met while completing their mission. But
    generally speaking, this is not done by the player; once they meet their objective,
    they are eager to move on to the next quest. Hence, the question is, how much
    time and effort do the game designers and developers apply to a region after the
    main objective has been met? The answer would be not much.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: Historically, the player follows a linear sequence of quests in order to realize
    their goals and objectives within the game. To make the game more engaging, the
    developer can introduce mini-quests within the main plot of the game at that particular
    location, to give the player the ability to explore and gain more skills and/or
    abilities. Since these are not part of the main storyline, they can be triggered
    anytime a player enters a specific area.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: For instance, assume the player has completed the main objective of the level
    and is ready to move on to the next objective. Now, imagine that we have created
    an open-world environment where the user can revisit the world anytime they choose.
    If the player decides to go back and explore a certain area of the world they
    just completed, and they happen to trigger the event to launch this mini-quest,
    wouldn't that be a great surprise for the player? Keep in mind that these mini-quests
    should not affect the main storyline, but they can be used to enhance the player
    experience. These types of decisions are important when you are developing your
    game. If they choose not to take on the challenge, you should not penalize them,
    except if you want to be really mean.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: Quests may involve defeating one or many enemies, rescuing a non-player character,
    item-fetch quests, or location puzzles, such as mysteriously locked doors.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: A glimpse at our exploration and quests
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Our game will have a total of four quests. Each quest will have unique objectives
    that the player will need to complete. The design and development of each quest
    will be discussed throughout the book as we progress.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a list of the levels we will be designing:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: Awakening
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The village
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Broken forest - the horizon
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The kingdom
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The game will start by immersing the player in the environment, where our hero
    will be given the basic training he will need to complete his mission.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: Inventory system
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'One of the main functions and features of an RPG is the inventory system. Throughout
    the game, the user will come across a vast amount of collectible items that can
    be used for different purposes within the game to help them progress through the
    journey. Therefore, RPGs needs to provide a mechanism to help the player store,
    retrieve, and organize the content relevant to their journey. Take a look at the
    following screenshot:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00005.jpeg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
- en: Inventory
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: As the player progresses throughout their journey in an RPG, they interact with
    the world they are immersed in. The storyline of the game usually forces the player
    to interact with the surrounding world and other non-player characters. These
    interactions are usually in the form of some sort of an exchange. Whether this
    exchange is done through narration, to provide the player with a better sense
    of the quest, or real exchange, in terms of items, is up to the game designers
    and developers.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: The game needs a way to keep track of all the interactions between the player
    character and everything and everyone else. One system that is used to keep track
    of these interactions is the inventory system.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: During the gameplay, players usually start off as a very simple character and
    part of the gameplay is to elevate their character by exploring the world and
    collecting items that will help them increase their skills and abilities.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, a player might start their journey with very basic clothes. Throughout
    the quest, they will either interact with a non-character player, such as a merchant
    who will provide them with a better set of clothes, and/or some sort of a weapon
    to get them started. These items will be stored and managed by the inventory system,
    an example of which is shown in the following screenshot:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00006.jpeg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
- en: Items will be stored and managed by the inventory system
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: The simplicity or complexity of the inventory system will be defined by the
    complexity of the game and the complexity of the characters within the game. In
    our game, we will be designing and developing a generic inventory system that
    can be applied to many different types of items.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some of the items that are usually collected in a game:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: Weapons
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Armor
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clothing
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Special objects
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some of the items are collected or discovered by world exploration, and some
    of the items are specifically traded throughout the game. If you are setting up
    a trade system in a game, then you will need to provide the mechanics for the
    trade. A trade usually takes place while interacting with a non-player character,
    usually a merchant, and it will use a special window to enable the interaction
    of the trade to take place.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: There is usually a cost associated with any trade. In general, there is a cost
    associated with everything the player does within the game, and the cost usually
    either increases the player character's ability and/or experience or decreases
    it. This can get pretty complex if you dig deeply into it.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: The main point to keep in mind is that everything that the player will need
    to collect and/or manage will be done through the inventory system. Hence, this
    is one of the most critical features that you will need to put effort into as
    a game designer and developer.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: One other element that can be used to enhance the gameplay for the player, and
    push them to strategize their quest, is limiting the amount of items they can
    carry in their inventory.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: For instance, in real life, a warrior will have limited ability to carry different
    types of weapons. Let's assume that in the real world, a warrior can carry a maximum
    of five different types of weapon at any given time. Now, in the game world, there
    might be 20 different types of weapon. Do you allow the player to carry all 20
    different types when they discover them? Or are you going to limit the quantity
    to five?
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: These are the small things that make the gameplay more interesting when planned
    out properly. There is more to an inventory system, and we will take a look at
    it in more detail in later chapters.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Character attributes and actions
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As with any other part of RPG development, character attributes and actions
    are highly defined by the storyline of the game. These actions, are performed
    indirectly within the game when the player commands the character to perform a
    specific task.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, in a given RPG there will be at least a couple of character classes.
    The following are some sample class types:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: Barbarians
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Orcs
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Magicians / Wizards
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zombies
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Humans
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each character class might even have subclasses of its own, with its own uniquely
    defined attributes. Again, this will be tightly coupled to your storyline for
    your RPG.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: For instance, we will have the player-character, who is technically the hero
    of our story and of the game. The hero is usually of a certain character class;
    let's assume the hero is part of the Human class.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: The Human class or race, then, will have some specific characteristics that
    will be inherited by the player character, or any other non-player character of
    the same type or class.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '**Note:** The character class and race usually determine the abilities of a
    character within the game, which then define the types of actions the character
    can perform.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: The strength of a character within the game is defined by the character class
    it belongs to and the type of actions it can perform. The performance of a character
    is defined by the value of the attributes defined within the character's class
    and race.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, if we take two different character classes and compare them side-by-side,
    such as a human and an orc, the orc will have far superior strength and brute
    force than the human. However, the human may have higher intelligence and problem-solving
    skills, which will out-rate the strength of the Orc if applied properly. Take
    a look at the following screenshot:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00007.jpeg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
- en: This is another key area where the RPG designer will have to spend a lot of
    time defining and specifying the specifications for the design and development
    of the characters within the game. The sky is the limit when it comes to designing
    and defining your characters, but there are some key attributes that you will
    need to consider for any RPG.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: Most RPGs allow the player to modify their characters before the game starts,
    or even during game play. By default, every character class will have some default
    attributes, and the player is allowed to adjust the values based on some modifier.
    The basic fundamental features allowed for modification are the sex, class, or
    race of a character.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: It all comes down to the budget and resources that are available to you during
    the production of the game. In some games, you can also introduce ethical attributes
    into the characteristics of the character. For instance, if you allow the ability
    to kill or rob innocent bystanders within the game, then the player will become
    less liked by the friendly non-player characters, and they may not be as friendly
    or helpful as needed to complete your quest. In other words, you will live by
    the consequences of your actions!
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'As a final takeaway, character classes define your character attributes and
    hence define your character''s strengths and weaknesses. These physical attributes
    can be simplified into the following: dexterity and strength, which determine
    the performance of a character during battle!'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: Experience and leveling
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To engage the player and to get them hooked on the game, game designer use mechanics
    to enhance the performance of the player-character. The progress is what is termed
    leveling or experience in RPGs.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: Leveling and experience are a key element of any role-playing game. A good leveling
    or experience tree will be defined for any RPG. This allows the player to develop
    their avatar through game play and become functionally more powerful by gaining
    more skills, points, and other resources necessary to complete their quest.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: 'The ability to acquire new weapons, armor, clothing, and/or any other game
    play item defined in the world, the player will need to meet some specific thresholds
    within the game. These thresholds can be a combination of the player''s acquired
    experience points, financial gains, and/or combat experience. There is no right
    or wrong when it comes to designing any of these hierarchies and/or systems. You
    will need to see which one works for your specific needs and how to best apply
    them. Take a look at the following screenshot:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00008.jpeg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
- en: In RPGs, the progress of the character player is measured by counting some defined
    attributes specified by the game designer. Usually, the advancements are defined
    by the player completing a certain task to get experience points, and slowly,
    the tasks and the points rewards are increased throughout the game. The player
    then can use the experience points to enhance his or her avatar within the game.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: Again, this is highly integrated with the story line, character classes, and/or
    race the player has selected. Some common ways to acquire points are by killing
    enemies, combating non-player characters of no importance, and performing quests
    that have been defined within the game.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: Just like in real-life, the more you play and apply your skills, the more experienced
    you become. The accumulation of your experience will then allow you to acquire
    better weapons and/or armor to strengthen your attack or defense for the next
    quest. Some games might give the player 100+ points and allow the player to distribute
    the points across the available character attributes for their avatar. Sometimes,
    the game automatically applies all of the experience to a specific area, such
    as strength.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: Gaining experience will also allow the user to unlock more features and skills
    to be acquired by the player during game play. This is a great way to monetize
    your games. In reality, most free games use this principle. They provide the basics
    of the world and the character for free, and they monetize the game through what
    are called in-game purchases, to increase either resources and/or character performance.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: How is this implemented? Just like the inventory system, we need a way to keep
    track of the progress of the player's skills. This is usually done through a skill
    tree. Learning or acquiring a particular skill in the tree will unlock more powerful
    skills and give the player the ability to utilize the skills in the game.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: Combat system
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Time for battle! This is the moment every player looks forward to during their
    journey to kill the boss, the bad guy, or the evil warlord! Every RPG has some
    type of combat or battle component built into the game play. This is when the
    player gets to use all of their acquired skills and experience to destroy the
    opponent or be destroyed by the opponent, depending on how the day goes.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: Historically, there were three basic types of RPG combat system. What type of
    combat system you choose to implement for your game will have a big impact on
    the game play, as well as the implementation of the game.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: 'The three types of combat system are as follows:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Traditional turn-based system
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Real-time combat
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Real-time with pause
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Historically, role-playing games used to implement turn-based combat systems.
    This type of combat system is as follows: only one character could act at a given
    time. During this time, all the other characters had to remain still. In other
    words, they could not take any action. This type of combat system is designed
    to put more emphasis on rewarding strategic planning.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: The next type is the real-time with pause combat system. This type of combat
    system is also strictly turn-based, but with a catch. If the player waits more
    than a certain period of time to make a move or issue a command, the game will
    automatically pass on the command to the other player. This will allow the other
    player, that is, the enemy, to take a turn and attack the player.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: In this book, we will be using a real-time combat system. Real-time combat imports
    features from action games and creates a hybrid action RPG game genre. Action
    RPG combat systems combine the RPG mechanics of role-playing with the direct,
    reflex-oriented, arcade-style, real-time combat systems of action games, instead
    of the more traditional battle systems of RPGs.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: Shigeru Miyamoto is best known as the creator of many of Nintendo's most beloved
    characters and franchises, including Mario, Donkey Kong, The Legend of Zelda,
    and many others. He was also the chief designer of Nintendo's Touch! Generation
    console series, which includes the Nintendo DS, Wii, and 3DS.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: For more information, visit [https://www.giantbomb.com/action-rpg/3015-8592/](https://www.giantbomb.com/action-rpg/3015-8592/).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: User interaction and graphics
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The question arises, how do we present our game world to the player? What kind
    of user interface are we going to provide for our game? What kind of view are
    we going to allow for our game? Are we going to design our world to be viewed
    as a top-down camera view? Are we going to create an isometric view of the world?
    Or are we going to create a first-person or a third-person perspective of our
    world?
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: Answering these questions is crucial, as when you are designing your game assets
    you will need to understand how they will be viewed in the game world. For instance,
    when designing your characters and/or 3D models for the game, if you know that
    you will be using an isometric view, then you will approach your modeling differently
    than, for instance, when you are designing for a first-person or third-person
    camera.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: In our game, we will be using a third-person camera view for the presentation
    of our world.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: 'The next question would be how to provide critical information to the player
    in a simple and meaningful fashion. Role-playing games require the player to manage
    a large amount of information and frequently make use of windowed interfaces to
    arrange the data for the player. This is usually designed and implemented through
    a **Heads-Up Display** (**HUD**). Take a look at the following screenshot:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00009.jpeg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
- en: HUD is frequently used to simultaneously display several pieces of information,
    including the main character's health, items, and indication of game progression.
    You can think of the HUD as the access point for all the information the user
    will be required to have access to and interact with during game play.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: 'The design of the HUD is crucial for RPG games. Typically, there are a few
    key data elements that you would like to continuously communicate with the player
    throughout the game play, which are as follows:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: Health
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Energy
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stamina
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Active weapon
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Active shield
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Special items
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Number of lives
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access to main menu
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access to inventory
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access to skills
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once again, the design of your HUD is derived by the type of game you are designing,
    as well as the type of information that will need to be available to the player
    during game play. Take a look at the following screenshot:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00010.jpeg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
- en: Since most RPGs collect and store large amounts of data for the player character,
    it is very important to create an easy-to-use, yet clean HUD.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: A very important thing to remember when designing a HUD is that it should never
    overpower the screen or become a distraction. It usually takes a few stabs to
    come up with a great HUD design for your game, from initial artistic concepts,
    to the actual implementation and testing by gamers to get some feedback before
    finalizing the design and internal workings.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: At the end of the day, the HUD is supposed to simplify the game play for the
    player, and not make it more confusing. Today, many games are moving away from
    traditional HUDs, leaning more towards cinematic or extremely simplistic experiences
    during the game play. This enables the game designer to immerse the player into
    the world and not to distract them with a constant, static HUD.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: Making a HUD that will fit into the game play and style of your game is basic.
    While an element-rich HUD might be extraordinary for a few games, an oversimplified
    HUD can be similarly successful, or more so. Everything relies upon the player
    encounter you need. So when you're prepared to make the heads-up display for your
    next game, ensure you're outlining the HUD to upgrade the player's involvement,
    and never over-burden the player with data.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: Existing or upcoming RPG games
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section of the book will take a look at some of the existing or upcoming
    RPGs on the market. The main idea behind this section is to provide you with a
    point of reference to multiple RPGs, as well as the game design implemented. It
    is also a good idea to research existing or upcoming games to get ideas for your
    own!
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: MU Legend
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is the sequel to a popular Korean MMORPG game. MU2 is a title that has
    been produced and published by Webzen Inc. The game is set on the mythical mainland
    of Mu which, as indicated by the hypothesis of James Churchward, was occupied
    by the antiquated human progress of Naacal.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: 'Players expect the parts of saints looking for fortune, undertakings, and a
    few beasts to chase in this amazing domain. Game play in MU2 centers around powerful
    battle taking after regular hack-and-slice mechanics. Take a look at the following
    screenshot:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00011.jpeg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
- en: MU Legend
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: The game tells the story of a war between the god of light, Rugard, and the
    god of destruction known as Sekneum that raged for many years. It finished with
    the thrashing of the latter at the hand of Akneria, the Supreme Creator, yet the
    peace did not last long, and Sekneum acquired a human body and came back to the
    mortal world. In any case, the Great Mage Kundun saw through the fallen god's
    ruse and imprisoned him inside his own body. In any case, at last, he crumpled
    under Sekneum's strength and emerged as Dark Lord, expediting the world towards
    its end. This is where the players enter the world, going with the last sage,
    Icarus, as Devias Knights in a last endeavor to spare Mu from fast-approaching
    annihilation.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: You can find more information at [http://mulegend.webzen.com/en](http://mulegend.webzen.com/en)
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: Titan Siege
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An allowed to-play MMORPG dream game including smaller-scale exchanges. The
    phenomenal setting of Titan Siege combines elements taken from Norse, Greek, and
    Egyptian folklore. The players take the parts of legends, who safeguard humankind
    from Titan groups taking up arms against each other. The journey begins with the
    character creation—the player can pick the sex, appearance, and battle details
    of his hero.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: 'The game play expands on open-world investigation, finishing journeys allocated
    by NPCs, battling experienced adversaries, and building up the fundamental hero''s
    aptitudes—this in the run of the mill MMORPG way. Throughout the game, the players
    acquire new things, such as captivated parchments, and bits of protective clothing,
    which help their characters during a fight. Travel through the immense areas can
    be accelerated by acquiring a steed. The two pets and inviting players can help
    us in fights. Players can likewise provoke us to a duel—the champ gets the hardware
    of the fallen legend. Take a look at the following screenshot:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00012.jpeg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
- en: The story in Titan Siege is set in a fantastical world, where elements of Norse,
    Greek, and Egyptian legends mix together to make a one-of-a-kind setting. The
    domain has turned into a combat zone, on which two groups of Titans take up arms
    against each other. Humankind chose to take matters in their own hands and proclaimed
    a war themselves, with the objective to put an end to the disarray caused by the
    Titans' war. Human armed forces are driven by saints—who are controlled by the
    players.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: You can find more information at [https://steamcommunity.com/sharedfiles/filedetails/?id=561159376](https://steamcommunity.com/sharedfiles/filedetails/?id=561159376).
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: 'Citadel: Forged with Fire'
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A multiplayer dream RPG created and distributed by Blue Isle. The generation
    is implied exclusively for online play and is sandbox in nature, giving players
    a chance to pick their own particular profession ways.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: 'The players play the part of magical adepts and utilize their spell-learning
    to investigate a fantastical domain that is loaded with threats and privileged
    insights, traveling, building fortresses and attack vehicles, and challenging
    other individuals. Gamers can locate their own homes which are counterparts of
    organizations and sets up their principles. At that point, we can battle against
    comparable gatherings for impact, an area, and fortunes close by our confidants.
    The game-play mechanics are controlled by the material science motor, so the various
    accessible spells sensibly affect the articles in the earth. The game is more
    enjoyable due to the likelihood of flying. Take a look at the following screenshot:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00013.jpeg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
- en: The activity is set in a fantastical domain known as Ignus and gives the players
    a chance to accept the part of arcane expressions adepts who set out looking for
    undertakings and magnificence. The diversion happens on a guide with a region
    of 36 square kilometers. It incorporates fields, thick timberlands, mountains,
    swamps, solidified tundra, and old demolishes that shroud significant fortunes
    and great curios.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: You can find more information at [http://www.citadelgame.com/](http://www.citadelgame.com/).
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: Cyberpunk 2077
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A sci-fi RPG title in the style of a table-top Cyberpunk game. This game was
    produced by the CD Projekt RED studio. The story takes you to the year 2077, including
    in fact progressed, though defiled universe without bounds. The game is set in
    Night City, a place well known to devotees of the Cyberpunk universe, where dismal
    interests and insider facts flourish.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: 'While investigating the game''s open world, you take in the complex, multi-string
    story through various exchanges, which regularly force you to make difficult decisions.
    The classes and character movement framework, battle show, and additionally many
    in-game expansions were motivated of the first pretending framework. The visual
    side of the game is based on an upgraded form of Red Engine. Take a look at the
    following screenshot:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00014.jpeg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
- en: Cyberpunk 2077 highlights an intense and develop approach towards the theme,
    drawing motivation from preparations, for example, Blade Runner. The title itself
    transports us to the year 2077 and presents us with a dream without bounds world,
    horrid and loaded with interest; the move of the title makes put in the famous
    Night City, which the fanatics of the Cyberpunk framework will as of now be acquainted
    with. Curiously, the CD Projekt RED studio has chosen to fabricate the amusement
    around the open world game play demonstrate, which enables the players to unreservedly
    investigate the world and finish side missions at whatever point they want.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: You can find more information at [https://www.cyberpunk.net/en](https://www.cyberpunk.net/en).
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: Patterns in RPG
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Just like any other technical project that might have patterns defined, an RPG
    can also utilize similar patterns that have been documented by Whitson John Kirk
    III in his book titled *Design Patterns for Successful Role-Playing Games*.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: '**Note:** Whitson was inspired by the book *Design Patterns: Elements of Reusable
    Object-Oriented Software*. His objective was to see if any special patterns existed
    in existing RPGs, and he approached this by examining specific patterns in successful
    games in the genre to detect and identify them.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we will be looking at some of the design patterns that have
    been identified, and that can be utilized for your own games.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: 'Anytime you start a new project, regardless of what type, you need to have
    some clear idea of what exactly it is that you are trying to accomplish. This
    is even truer for designing a game. Since designing a game has many different
    components to it, you will need to identify what your game is going to be about.
    Some questions to start the thinking process are as follows:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: What are you trying to accomplish?
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What mood are you trying to evoke?
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What do the characters do?
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What do the player or players, in a multiplayer environment, do?
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What kind of activities do you want to reward and what kinds of reward do you
    want to provide?
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What age group does your game targets?
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is your game going to have sequences?
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will the game and the story extend with supplemental assets?
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are all important questions that will affect the design of your game.
    As you read this chapter and the book in general, keep a pen and paper handy so
    that you can write down all ideas that flash into your mind. This way, you can
    keep track of all your thoughts, and if you need to expand on them you can do
    so at a later time.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: Terminology
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Every discipline has its own terminology. The following is a list of terminology
    that is used in RPG games. It is a good idea to take a moment and study them,
    to expand your vocabulary or to refresh your memory:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: Attribute**:** A gauge that is a common characteristic, a commonality.
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Character**:** A person in a game portrayed by a player, including, possibly,
    the Game Master.
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Characteristics**:** An aspect of a character. A character's name, height, age,
    beauty, and strength are some possible characteristics.
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Common Characteristics**:** Characteristics common to all characters of a given
    type in a game. A character's name, height, age, beauty, and strength are frequently
    common characteristics.
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conflict**:** Contention between characters, players, and/or game forces, especially
    contention that shapes the game's plot. This includes oppositions between two
    or more players concerning what facts should be introduced into a game world.
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contest**:** A conflict that is resolved through mechanical means.
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Derived Attributes**:** An attribute whose value is determined by a formula.
    Typically, the formula uses other attribute values to generate a number.
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drama**:** an outcome-based purely on story consideration. Outcomes in a drama
    are exclusively determined by what would be most entertaining for the participants.
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Flaw**:** a selected characteristic that is specifically not also a gauge. A
    character either has a flaw or he does not. Flaws are structurally very similar
    to gifts. But, flaws are generally considered detrimental to a character rather
    than beneficial.
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fortune**:** An outcome that is at least partly based on random factors. This
    may include rolling dice, drawing cards, or some other random value generator.
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Game Master**:** Traditionally, a player assigned responsibilities to manage
    the game flow. With computer RPGs, the Game Master (GM) is the glue that holds
    everything together.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gauge**:** A graduated value generally associated with a name. Commonly the
    graduated values are numeric values.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Gift: A selected characteristic that is specifically not a gauge. A character
    either has a gift or not. In general, gifts are considered beneficial to a character''s
    well-being.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Karma: An outcome based on non-random value comparison. A karma-based contest
    directly compares two values to determine an outcome.'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Non-Player Character (NPC): Any character portrayed by the Game Master as part
    of the role.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Optional Characteristics**:** A characteristic that is not common to all characters
    of a given type.
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Player: Any person participating in a role-playing game.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Player Character (PC): a character portrayed by any player while not assuming
    the role of a Game Master.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Primary Attribute**:** An attribute whose value is set directly by a player
    rather than being derived by a formula from other attributes. Commonly, primary
    attributes are used in formulas to determine the values of Derived Attributes,
    but their own values are not determined by formulas. Typically, they are generated
    by random numbers or set by spending some resources.
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Rank: The specific value of a gauge skill, handicap, or ranked trait. Also
    used as an adjective in place of gauge when describing such skills and traits.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ranked Trait: A trait that is also a gauge.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Selected Characteristic**:** A characteristic selected from a pre-defined list
    of choices.
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Shared Gauge: A gauge that is shared by many characters.'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Skill: A selected characteristic that is also a gauge and is generally considered
    beneficial to a character.
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Trait: A characteristic made up by a player without drawing it from a pre-defined
    list of choices.'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To get a better understanding about the relationships between the attributes
    and characteristics, we have put together a visual help explain it:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00015.jpeg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
- en: Contest tree
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The intent of a contest tree is to provide a mechanical means to create rising
    tension within a game. This is also known as Escalating Conflict.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: Contest trees are high-level conflict resolution systems made up of many levels
    of contests arranged in a hierarchical fashion. The way they work is that lower-level
    contests feed into the higher-level contests and hence affect the outcome of the
    higher-level contests.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: In other words, the higher-level contest could be to kill the big boss, but
    before you get to the big boss, there could be other mini battles that you will
    have to complete, and the outcome of the mini-battles will drive the outcome of
    the big battle. A simple example would be the amount of experience points you
    have gained before reaching the main boss.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: Since the higher-level contests are somehow related to the lower-level contests,
    players do pay attention to the outcome of the lower-level contests; therefore,
    tensions arise concerning the eventual success or failure of a higher-level contest
    as a lower-level contest succeeds or fails.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: It is best to use a contest tree when you want to create a sense of rising tension
    in your game. This can be achieved by applying different mechanics as the player
    progresses through the levels. Creating suspense in a cRPG is very simple, as
    you have a lot of control over the way levels and game play are designed. Since
    we have the ability to create our 3D worlds as we like, it would be easy to incorporate
    suspense into the game.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: 'A few key points for creating tension in your game are as follows:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: The hero and enemy should be evenly matched.
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The hero and enemy should both periodically fail in their attempts, providing
    they are worthy adversaries.
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The hero and enemy's successes and failures are never so great that all hope
    of success of attaining the high-level goals is eliminated from either side.
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A highlight concerning contest trees is that it can only resolve high-level
    conflicts dealing with the mechanical inputs by the system. That is, if Damage
    and Remaining Hit Points are the only gauges used as an input into a conflict
    resolution, then the mechanics can only resolve issues dealing with Damage and
    Hit Points. To design a flexible contest tree, you will need to consider both
    the inputs as well as the outputs.
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Last Man Standing
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Last Man Standing conflict system provides a generalized contest tree to
    resolve which side attains victory in battle.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: The Last Man Standing is also one of the most traditional forms of generalized
    contest trees. The basic idea behind the pattern is to identify who the winner
    is by the simple fact of who manages to destroy the opponent. He who does is the
    winner. This is also one of the simplest ways to implement a contest tree.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: It is used when there is a strong emphasis on tactical combat. Keep in mind
    that you are not obliged to use one pattern or the other. You can very well combine
    several patterns together, and you should, to make it more interesting. For instance,
    if your game has a great emphasis on combat, but you want to also introduce some
    negotiation into the conflict resolution, you can very much do so. Again, it all
    depends on you and your game design.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: 'Something to keep in mind: if the only way to resolve a high-level contest
    is through battle, then players will focus their efforts on being the best they
    possibly can at winning battles. In other words, if a game only provides a single
    tool to resolve disputes, then you can be assured that players will become very
    adept and focused at using that tool.'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: Negotiated Contest
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A Negotiated Contest provides a mechanical means to resolve disputes where the
    set of inputs and possible outcomes is negotiated by the player and non-player
    characters specifically for the conflict.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: Designing and developing a Negotiated Contest mechanism is pretty complex. In
    order for the pattern to work properly, you will need to consider all of the inputs
    and outputs of the negotiations. The challenge of developing such a system is
    not so much the actual technical implementation, but the database that you will
    have to create and retain, based on the available selection by the player and
    the outcome of each input.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: The implementation of the mechanics can be as simple as a few options and outcomes,
    and as complex as a variety of options and their eventual outcomes down the line.
    The important point is that you will have to introduce a negotiation mechanism
    after a conflict has been introduced, but before any action has been taken! The
    outcome is obviously what a win/lose concerns with, based on the negotiation before
    the conflict.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: '**Note:** The Negotiated Contest pattern requires that players be allowed to
    negotiate the effects of success and failure before the conflict is mechanically
    resolved.'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the Negotiates Contest pattern when your design goals include one of more
    of the following:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: A desire to unambiguously decide whether the outcome of a contest means a player
    wins or loses his stated goals, rather than whether or not his character succeeds
    in performing discrete actions
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A need to scale the resolution of contests to levels of granularity different
    than that of individual actions
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A willingness to allow players a great deal of narrative freedom in describing
    the results of contests, both good and bad
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For computer role-playing games, the negotiated contest will have some restrictions,
    as we cannot afford to create an AI system to be open-ended. But we can design
    a simpler means to provide the player a sense of some control on the negotiations,
    as part of the game play.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: 'Negotiation can be a great mechanics for exchanging information, and good with
    non-player characters in your role-playing game. There are three parts to a Negotiation
    pattern, as follows:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: '**Initiation**: This is the phase at which a character action is introduced
    into the game world'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Execution**: This is the phase in which the success or failure of a character
    action is determined'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Effect**: This is the phase in which the results of a character''s actions
    are determined.'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here are some questions to consider when designing a Negotiation system:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: What does the winner get?
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What does the loser get?
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How do we know who's the winner and who's the loser?
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What do we need to establish before resolution begins, and how?
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  id: totrans-253
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered in great detail what a role-playing game is. We
    briefly covered some of the historical aspects of the genre and looked at the
    different varieties of RPG. We discussed the key elements for designing a role-playing
    game and provided some examples to demonstrate.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: We looked into the characteristics of an RPG and discussed how to plan for your
    game, such as story and setting, exploration and quests within your game, different
    types of inventory systems, character development, user interaction, and some
    combat system patterns. We also covered some basic terminology that is used in
    RPGs.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 我们探讨了RPG的特点，并讨论了如何规划你的游戏，例如故事和背景，游戏内的探索和任务，不同的库存系统，角色发展，用户交互，以及一些战斗系统模式。我们还介绍了一些在RPG中使用的术语。
- en: By the end of the chapter, you should have a clear idea of what you will need
    to prepare for and the kind of effort it will take for making a role-playing game.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你应该对需要准备的内容以及制作角色扮演游戏所需付出的努力有一个清晰的认识。
- en: In the next chapter, we will start planning the design and development of our
    RPG.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将开始规划我们RPG的设计和开发。
