- en: 'Chapter 2: Configuring the IDE'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In general, it is common for software developers to have different tastes in
    writing code. This also applies in the configuration part of the tool you use
    to develop, such as whether you want to change the general color of the IDE or
    prefer to change the default font to one that suits you better.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you will learn about the different configuration options in
    Visual Studio, which can certainly help you improve your productivity by having
    the exact elements you need, both in terms of colors and the location of windows
    that you frequently use.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this chapter, you will be able to modify the IDE color scheme,
    configure dockable windows, and customize fonts.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will learn about the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Synchronizing accounts and settings
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring the color scheme
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customizing fonts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customizing the menu and toolbars
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customizing panels
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this chapter, you will need to have Visual Studio 2022 already installed
    on your machine. In [*Chapter 1*](B17873_01_ePub.xhtml#_idTextAnchor013), *Getting
    Started with Visual Studio 2022*, you can check the requirements and the installation
    process.
  prefs: []
  type: TYPE_NORMAL
- en: Synchronizing accounts and settings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A great feature of Visual Studio is that it allows you to synchronize the configurations
    you make, and also allows you to comfortably work on different computers.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is possible thanks to a Microsoft account, which is required for the use
    of Visual Studio. This account is requested when you start Visual Studio for the
    first time, or you can enter the account or modify it for use in Visual Studio
    at any time by clicking on the **Sign in** option, located at the top right of
    the IDE, as shown in *Figure 2.1*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.1 – Visual Studio – Sign in (at the top right of the main screen)'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.1_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.1 – Visual Studio – Sign in (at the top right of the main screen)
  prefs: []
  type: TYPE_NORMAL
- en: 'The main configurations that are synchronized through this process are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: User-defined window layout configurations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Themes and menu settings
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fonts and colors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keyboard shortcuts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Text editor settings
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you do not want to apply the synchronization of your configuration on a
    particular computer, it is possible to do so by going to the **Tools** | **Options**
    | **Environment** | **Accounts** menu. From here, you will be able to deselect
    the **Synchronize Visual Studio settings across devices** option, as shown in
    *Figure 2.2*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.2 – Disable the synchronization of preferences between devices'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.2_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.2 – Disable the synchronization of preferences between devices
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: Disabling this feature will not affect the synchronization process of other
    versions or editions of Visual Studio that may be installed on the same computer.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have learned about synchronizing settings between devices, let's
    look at how to customize the main settings.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the color scheme
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are different ways to customize Visual Studio 2022, one of the most important
    of which is to adjust colors.
  prefs: []
  type: TYPE_NORMAL
- en: Whether you're in a well-lit space or coming from another programming environment,
    you'll probably want to adjust colors according to your personal preferences.
  prefs: []
  type: TYPE_NORMAL
- en: 'To customize the color scheme in Visual Studio 2022 to our liking, there are
    two things we can use:'
  prefs: []
  type: TYPE_NORMAL
- en: Visual Studio default Themes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visual Studio Color Theme Designer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's analyze these options and learn how to apply the color scheme that best
    suits you.
  prefs: []
  type: TYPE_NORMAL
- en: Visual Studio default Themes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The first time you start Visual Studio 2022, you will be presented with a window,
    which will ask you about development settings, and a color theme, as shown in
    *Figure 2.3*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.3 – Selecting the initial theme'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.3_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.3 – Selecting the initial theme
  prefs: []
  type: TYPE_NORMAL
- en: 'These color themes are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Blue**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blue (Extra Contrast)**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dark**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Light**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Use system setting**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each of these options has a set of pre-established colors that you will be able
    to preview using the same window.
  prefs: []
  type: TYPE_NORMAL
- en: Once you select the theme of your choice, it will be applied and saved in the
    configuration that is associated with the Microsoft account with which you have
    requested the license for the use of the IDE.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: The **Dark** theme helps reduce eye strain in low-light conditions. This is
    a perfect option if you need to work for many hours per day in an office or places
    with limited light. *All the figures and screenshots will be in dark mode in this
    book*.
  prefs: []
  type: TYPE_NORMAL
- en: 'In case you want to change the theme you selected at the beginning, you can
    do so by going to the main Visual Studio window and clicking on the link that
    says **Continue without code**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.4 – Accessing Visual Studio without code'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.4_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.4 – Accessing Visual Studio without code
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, from the **Tools** dropdown menu, go to the **Themes** section; you will
    find all the default themes and those that you have previously installed. You
    only need to select one to apply the selected theme, as shown in *Figure 2.5*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.5 – Changing the Visual Studio theme'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.5_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.5 – Changing the Visual Studio theme
  prefs: []
  type: TYPE_NORMAL
- en: 'There is another way to change the theme. You can go to **Tools** | **Options**
    | **Environment** | **General** and choose **Color Theme**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.6 – Changing the color theme in the Options section'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.6_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.6 – Changing the color theme in the Options section
  prefs: []
  type: TYPE_NORMAL
- en: 'In this menu, you can also change how Visual Studio starts by selecting the
    different options in the section marked **On startup, open**. You can choose between
    the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Start window**: The default window where you can select a recent project
    or create a new one (see *Figure 2.4*).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Most recent solution**: Visual Studio will start with the last project or
    solution that was opened.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Empty environment**: Open the main windows in Visual Studio without selecting
    a project or solution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's now review a fabulous option to download additional themes.
  prefs: []
  type: TYPE_NORMAL
- en: Visual Studio Marketplace
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If the default themes that are part of the Visual Studio 2022 installation are
    not enough for you, you may want to look at the community-made themes hosted in
    Visual Studio Marketplace that you can find at [https://marketplace.visualstudio.com/](https://marketplace.visualstudio.com/).
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you are in **Marketplace**, what you need to do is make a filter to show
    only the themes created by other developers, as shown in *Figure 2.7*, which will
    display a series of very interesting options:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_2.7_B17873.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.7 – Searching for themes in Visual Studio Marketplace
  prefs: []
  type: TYPE_NORMAL
- en: If you want to know more about a specific theme, you need to click on the element,
    which will show you information about the theme, and almost always, an image of
    what the theme will look like once it is applied to Visual Studio will appear.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to install the theme, just click on the **Download** button, which
    will download the corresponding installer, and when you run it, it will start
    the installation process of the new theme.
  prefs: []
  type: TYPE_NORMAL
- en: Once the theme has been installed, just follow the same steps as in the previous
    section to switch to the new theme.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: Within the same Marketplace, there is a plugin called Visual Studio Theme Designer,
    which allows you to easily create your own themes.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have seen how to select a theme that fits our visual preferences,
    let's see how we can customize the font styles as well.
  prefs: []
  type: TYPE_NORMAL
- en: Customizing fonts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are two places where you will probably be interested in changing the
    type of font you use:'
  prefs: []
  type: TYPE_NORMAL
- en: In the general environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the source code editor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's analyze each of the options as follows.
  prefs: []
  type: TYPE_NORMAL
- en: Changing fonts in the IDE
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To change typography at the IDE level, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the **Tools** | **Options** menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the configuration window, go to the **Environment** | **Fonts and Colors**
    section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In this section, select the **Environment** option in the **Show settings for**
    drop-down list.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This will allow you to change options such as font and size:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.8 – Changing the environment font settings'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.8_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.8 – Changing the environment font settings
  prefs: []
  type: TYPE_NORMAL
- en: In *Figure 2.8*, we can use the option **Font** to change the **Automatic**
    or **Default** font in Visual Studio and see how it looks using the **Sample**
    section.
  prefs: []
  type: TYPE_NORMAL
- en: Now let's review reference highlighting to see how to customize the way Visual
    Studio highlights text in the code.
  prefs: []
  type: TYPE_NORMAL
- en: Reference highlighting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Another common customization is to change the highlighting of references. This
    refers to highlighting the different occurrences of a selected element, such as
    a variable or keyword. This can be best seen in *Figure 2.9*, in which, when positioned
    over the `int`keyword, all references to it are highlighted:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.9 – Reference highlighting'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.9_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.9 – Reference highlighting
  prefs: []
  type: TYPE_NORMAL
- en: 'If we want to change the color of the references found, we must perform the
    following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the **Tools** | **Options** menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Fonts and Colors** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Text Editor** configuration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the **Display items** section, select the configuration called **Highlighted
    Reference** and change the corresponding colors, as shown in *Figure 2.10*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 2.10 – Changing the highlighted references options'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.10_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.10 – Changing the highlighted references options
  prefs: []
  type: TYPE_NORMAL
- en: You can choose the text color in **Item foreground** and the backgound color
    in **Item background**, and finally see a preview of the color selected using
    the **Sample** section.
  prefs: []
  type: TYPE_NORMAL
- en: Changing fonts in the code editor
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To make changes to the typography used in the text editor, follow the same steps
    shown just before *Figure 2.10*.
  prefs: []
  type: TYPE_NORMAL
- en: As part of the configuration options, you can change the font used, the font
    color, the font size, and the background, among other attributes.
  prefs: []
  type: TYPE_NORMAL
- en: One of the advantages of this configuration option is that it allows you to
    be as specific with the configuration as you need. This means that you can also
    alter the typography for things such as selected text, line numbers, bookmarks,
    and code snippets, among many other settings.
  prefs: []
  type: TYPE_NORMAL
- en: Now that you know how to change the typography to suit your needs, let's see
    how to adjust the panels within the IDE so that your workflow will be faster according
    to your projects.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: In Visual Studio 2022, the Cascadia font has been introduced as the default
    font, which has been described as a fun font with better code readability.
  prefs: []
  type: TYPE_NORMAL
- en: Customizing the menu bar and toolbars
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Menus and toolbars are an excellent way to access tools or options, best known
    as commands, that you use frequently, so it is very important to learn how to
    customize them to help you in the development of your applications. In this section,
    we will learn the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Customizing the menu bar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customizing toolbars
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: First, let's see how to customize the menu bar.
  prefs: []
  type: TYPE_NORMAL
- en: Customizing the menu bar
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The menu bar is the set of options that appear at the top of the IDE, which
    allow you to access a drop-down menu of options (such as the **File** menu) to
    execute a certain task, display tools, or apply a change to a project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.11 – The default menu bar in Visual Studio 2022'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.11_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.11 – The default menu bar in Visual Studio 2022
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to change the tools that are part of the initial configuration,
    either to add options in a specific menu or to create your own menus, perform
    the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to **Tools** | **Customize**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the **Commands** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In this section, you should work with the **Menu bar** option, which will allow
    you to modify a main menu bar and a secondary menu bar, which you can differentiate
    with pipe symbols (|) in the dropdown, as seen in *Figure 2.12*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 2.12 – The Menu bar customization window'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.12_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.12 – The Menu bar customization window
  prefs: []
  type: TYPE_NORMAL
- en: Once you have selected the menu you wish to modify, a preview will appear, showing
    you how the menu currently looks. From here, you can add new commands to the menu
    bar by clicking the **Add Command** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This will open a new window that will show you each of the commands grouped
    by category, which you can select to add to the selected menu, as shown in *Figure
    2.13*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.13 – Changing the highlight references options'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.13_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.13 – Changing the highlight references options
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to remove the option added to the menu, just select it and click
    on the **Delete** button, which is highlighted by a rectangle in *Figure 2.14*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.14 – The button to delete an item from the menu bar'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.14_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.14 – The button to delete an item from the menu bar
  prefs: []
  type: TYPE_NORMAL
- en: You also have the **Move Up** and **Move Down** buttons, which allow you to
    move an option up or down on the menu and rearrange the menu items.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: It is possible to delete toolbars created by the user but not those that are
    part of the default configuration.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, it is also possible to create new submenus or even a new menu. To
    do this, click on the **Add New Menu** button, which will add a new menu according
    to the hierarchical level you are in. For example, if you want to add a main menu,
    you must select this option with the **Menu Bar** menu selected:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.15 – The configuration to add a new main menu'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.15_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.15 – The configuration to add a new main menu
  prefs: []
  type: TYPE_NORMAL
- en: 'Conversely, if you want to add a submenu – for example, in the **Edit** menu
    – you will have to carry out this action having selected the **Edit** menu:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.16 – The configuration to add a submenu in the Edit menu'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.16_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.16 – The configuration to add a submenu in the Edit menu
  prefs: []
  type: TYPE_NORMAL
- en: The customization of toolbars is done in the same window; let's see how to do
    it next.
  prefs: []
  type: TYPE_NORMAL
- en: Customizing toolbars
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The toolbar is the set of commands that you can access directly without the
    need to open a menu first, as shown in *Figure 2.17*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.17 – The Visual Studio 2022 toolbar section'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.17_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.17 – The Visual Studio 2022 toolbar section
  prefs: []
  type: TYPE_NORMAL
- en: 'It is also possible to configure which commands will appear in different tool
    groups by selecting **Tools** | **Customize**. In this window, we will see by
    default the tab called **Toolbars**, which will show us the different categories
    that we can select to show in the interface. By default, the **Standard** option
    is selected for API and web projects. Depending on the projects, there are other
    toolbars added by default, but we can add other toolbars manually, simply by selecting
    them with a tick, as shown in *Figure 2.18*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.18 – The customization window for adding toolbars to the toolbar
    section'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.18_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.18 – The customization window for adding toolbars to the toolbar section
  prefs: []
  type: TYPE_NORMAL
- en: You can add new commands to a toolbar by going to the **Commands** tab. In this
    tab, we will select the toolbar we want to modify and carry out the same steps
    described in the *Customizing the menu bar* section.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to quickly add different toolbars to the IDE, *Figure 2.19* shows
    how to do it easily by accessing the **View** menu and **Toolbars**, where you
    can select and deselect the toolbars you are interested in:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.19 – Access to the toolbars from the View menu'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.19_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.19 – Access to the toolbars from the View menu
  prefs: []
  type: TYPE_NORMAL
- en: You now know how to add and remove toolbars in Visual Studio to customize the
    set tools depending on your preferences or technologies you use. Next, let's review
    how to customize panels in Visual Studio.
  prefs: []
  type: TYPE_NORMAL
- en: Customizing panels
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Panels in Visual Studio are a way to access specific tools according to the
    type of project you are working on.
  prefs: []
  type: TYPE_NORMAL
- en: These panels are composed of tools and document editors, some of which are used
    most of the time, such as the solution explorer (to see the structure of your
    projects), the toolbox (which shows you controls to drag and drop according to
    the current project), the properties panel (to modify the properties of the selected
    element), and the code editor.
  prefs: []
  type: TYPE_NORMAL
- en: 'It is important that you know how to work with these panels so that you can
    configure the set of tools and editors that best suits your projects. That is
    why in this section, we will look at the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Adding tools to panels
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Panel accommodation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with documents
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing window layouts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's learn how to configure the IDE to show you the tools that you will need
    for your project.
  prefs: []
  type: TYPE_NORMAL
- en: Adding tools to panels
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Visual Studio 2022 has many tools or windows that you can show or hide according
    to your needs. This list of tools can be found in the **View** menu, as demonstrated
    in *Figure 2.20*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.20 – The list of available tools'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.20_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.20 – The list of available tools
  prefs: []
  type: TYPE_NORMAL
- en: Once you have opened this menu, you will find the tools that are usually the
    most used listed immediately. These tools include tools such as the server explorer,
    the class viewer, the error listing, the output window, and the terminal, among
    other powerful tools.
  prefs: []
  type: TYPE_NORMAL
- en: There is another set of tools that are not as widely used but may help you at
    some point. These are found in the **Other Windows** section.
  prefs: []
  type: TYPE_NORMAL
- en: From here, you can access tools such as containers, C# interactive, Data Sources,
    and the Package Manager Console, among others.
  prefs: []
  type: TYPE_NORMAL
- en: To add any of these tools to one of the panels, simply select one of them, and
    it will automatically be added to your current environment in a strategic panel.
    For example, if you add the **Server Explorer** tool, it will be added to the
    left panel. On the other hand, if you add the **Output** tool, it will be added
    to the bottom pane.
  prefs: []
  type: TYPE_NORMAL
- en: Panel accommodation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A great advantage of Visual Studio is that you can arrange the tool panels wherever
    you prefer. To achieve the best results, it is convenient that you know the structure
    of a panel.
  prefs: []
  type: TYPE_NORMAL
- en: 'Each panel is composed of five sections where you can place tools. These sections
    are located on each side of the panel, plus one in the center, as shown in *Figure
    2.21*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.21 – The sections of a panel'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.21_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.21 – The sections of a panel
  prefs: []
  type: TYPE_NORMAL
- en: 'To place a tool in a panel, simply position the cursor at the top of the tool
    and slide it to the panel you want. The IDE itself will show you the possible
    locations where you can place the tool, making the process simple and easy; you
    can also pull the panel out of the main windows and use it on its own. In *Figure
    2.22*, you can see what the process of docking a window looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.22 – Docking a window in a panel'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.22_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.22 – Docking a window in a panel
  prefs: []
  type: TYPE_NORMAL
- en: Now, it's time to review how we can work with documents.
  prefs: []
  type: TYPE_NORMAL
- en: Working with documents
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are special options that we can apply when working with document editors,
    such as the code editor. If we want to see these options, we just need to right-click
    on the tab of the open document, as shown in *Figure 2.23*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.23 – Changing the environment font settings'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.23_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.23 – Changing the environment font settings
  prefs: []
  type: TYPE_NORMAL
- en: These options are quite intuitive – for example, the **Float** option will allow
    us to turn the editor into a floating window, which we can drag to a second monitor.
    The **Pin Tab** option will allow us to set the tab at the beginning of the open
    windows, and the **Set Tab Layout** option will allow us to move the set of tabs
    to the left, the top, or the right.
  prefs: []
  type: TYPE_NORMAL
- en: 'It is important to highlight that if we have more documents open, we will have
    additional options available. With this option, we can create groups of documents
    to distribute the space and use it for performing tasks to increase productivity,
    such as comparing two documents. *Figure 2.24* demonstrates this visually:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.24 – Document groups'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.24_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.24 – Document groups
  prefs: []
  type: TYPE_NORMAL
- en: Now you know how to manage your documents in the editor and organize them. Next,
    let's learn about managing window layouts.
  prefs: []
  type: TYPE_NORMAL
- en: Managing window layouts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It is very likely that in your life as a developer, you will come across projects
    of all kinds. You may have to manage things related to databases in a project,
    so you will probably want to keep the **Server Explorer** tool open.
  prefs: []
  type: TYPE_NORMAL
- en: It may be that in another project you are working on at the same time, you don't
    have to touch anything related to databases and you want to keep the toolbox open.
  prefs: []
  type: TYPE_NORMAL
- en: Is there any way to have tools located in the panels you prefer, without cluttering
    the IDE with tools? The answer is yes, thanks to the use of window layouts.
  prefs: []
  type: TYPE_NORMAL
- en: Let's see the main tasks related to them.
  prefs: []
  type: TYPE_NORMAL
- en: Saving window layout
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once you have configured your panels with the tools you require for a certain
    project, you need to go to the **Window** | **Save Window Layout** menu.
  prefs: []
  type: TYPE_NORMAL
- en: This will open a new window, which will prompt you for a name for your workspace
    configuration. Once you have entered the name, the configuration will be saved
    automatically.
  prefs: []
  type: TYPE_NORMAL
- en: To verify that the change has been made, you can go to the **Window** | **Manage
    Window Layouts** menu, which will show you a window with all your previously saved
    layouts or workspaces.
  prefs: []
  type: TYPE_NORMAL
- en: Applying window layout
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once you have saved at least one layout, you can apply it so that your workspace
    loads the panels with the tools, according to their arrangement at the time you
    saved the window layout.
  prefs: []
  type: TYPE_NORMAL
- en: To apply a layout, you must go to the **Window** | **Apply Window Layout** menu,
    which will show you all the previously saved layouts. Select the one you want
    to apply, and you will have your workspace loaded.
  prefs: []
  type: TYPE_NORMAL
- en: Resetting a window layout
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Finally, you may want to reverse all changes made to a workspace so that you
    have the initial Visual Studio configuration. Fortunately, this option is available
    by going to the **Window** | **Reset Window Layout** menu.
  prefs: []
  type: TYPE_NORMAL
- en: When we press this button, we will be asked whether we agree to return to the
    initial configuration. We just need to click on **Yes** to have the environment
    with the default configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Tip – a Help Shortcut
  prefs: []
  type: TYPE_NORMAL
- en: Use *Ctrl* + *F1* to open the Visual Studio documentation to read guides and
    news.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you have learned how to customize Visual Studio, choosing a
    theme, fonts, colors, and panels. Depending on your needs, you can not only set
    up your Visual Studio preferences but also try default configuration settings
    first, and adjust Visual Studio according to your work style.
  prefs: []
  type: TYPE_NORMAL
- en: In [*Chapter 3*](B17873_03_ePub.xhtml#_idTextAnchor044)*,* *Improvements in
    Visual Studio 2022*, you will learn about the new improvements added in this release
    and see a comparison with Visual Studio 2019.
  prefs: []
  type: TYPE_NORMAL
