["```cs\n#pragma warning disable AZPROVISION001\nvar aSecret = builder.AddParameter(\"aSecret\", secret: true);\nvar keyVault = builder.AddAzureKeyVault(\"keyvault\",\n  (_, construct, _) =>\n  {\n    var secret = new KeyVaultSecret(construct,\n      name: \"secret1\");\n    secret.AssignProperty(p => p.Properties.Value,\n      aSecret);\n  });\n#pragma warning restore AZPROVISION001\n```", "```cs\nvar storage = builder.AddAzureStorage(\"storage\",\n  (builder, _, account) =>\n  {\n    builder.AddQueues(\"botqueue\");\n    builder.AddBlobs(\"checkpoints\");\n    account.AssignProperty(p => p.AccessTier, \"Hot\");\n    account.AssignProperty(p => p.Sku.Name,\n      \"Standard_LRS\");\n  });\n```", "```cs\naz group create -l westeurope -n rg-codebreaker-kubernetes\n```", "```cs\naz acr create -g rg-codebreaker-kubernetes --sku Basic -l <yourregion> -n <youracr>\n```", "```cs\naz aks get-credentials --resource-group <your resource group> --name <your aks name>\n```", "```cs\nkubectl get nodes\n```", "```cs\ncd Codebreaker.AppHost\ndotnet run --launch-profile OnPremises -- --publisher manifest --output-path onpremises-manifest.json\n```", "```cs\ndotnet tool install -g aspirate --prerelease\n```", "```cs\ncd Codebreaker.AppHost\naspirate init --launch-profile OnPremises\n```", "```cs\naspirate generate --launch-profile OnPremises --output-path ./kustomize-output --skip-build --namespace codebreakerns\n```", "```cs\naz acr login –name <yourregistry>\n```", "```cs\naspirate build --launch-profile OnPremises --container-image-tag 3.8 --container-image-tag latest --container-registry <yourregistry>.azurecr.io\n```", "```cs\naspirate apply --input-path kustomize-output\n```", "```cs\nkubectl get deployments --namespace codebreakerns\n```", "```cs\nkubectl get services --namespace codebreakerns\n```"]