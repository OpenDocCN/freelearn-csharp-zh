["```cs\nprivate static string ParseIntWithTryParse()\n{\n    string result = string.Empty;\n    if (int.TryParse(result, out var value))\n        result = value.ToString();\n    else\n        result = \"There is no int value\";\n    return $\"Final result: {result}\";\n}\nprivate static string ParseIntWithException()\n{\n    string result = string.Empty;\n    try\n    {\n        result = Convert.ToInt32(result).ToString();\n    }\n    catch (Exception)\n    {\n        result = \"There is no int value\";\n    }\n    return $\"Final result: {result}\";\n} \n```", "```cs\nusing System.Runtime.InteropServices;\nif (RuntimeInformation.IsOSPlatform(OSPlatform.Windows))\n\tConsole.WriteLine(\"Here you have Windows World!\");\nelse if(RuntimeInformation.IsOSPlatform(OSPlatform.Linux))\n\tConsole.WriteLine(\"Here you have Linux World!\");\nelse if (RuntimeInformation.IsOSPlatform(OSPlatform.OSX))\n\tConsole.WriteLine(\"Here you have macOS World!\"); \n```", "```cs\n    cat >sample.service<<EOF\n    [Unit]\n    Description=Your Linux Service\n    After=network.target\n    [Service]\n    ExecStart=/usr/bin/dotnet $(pwd)/appfolder/app.dll 5000\n    Restart=on-failure\n    [Install]\n    WantedBy=multi-user.target\n    EOF \n    ```", "```cs\n    sudo cp sample.service /lib/systemd/system\n    sudo systemctl daemon-reload\n    sudo systemctl enable sample \n    ```", "```cs\n    # Start the service\n    sudo systemctl start sample\n    # View service status\n    sudo systemctl status sample\n    # Stop the service\n    sudo systemctl stop sample \n    ```"]