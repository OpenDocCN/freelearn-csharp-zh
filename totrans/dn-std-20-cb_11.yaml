- en: Packaging and Delivery
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will look at the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Creating a .NET Standard 2.0 library
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a NuGet package of your library
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Submitting the package to NuGet package manager
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a classic Windows application and testing the NuGet package
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Readers should have a basic knowledge of C#. They should also have a basic knowledge
    of using Visual Studio, installing packages using NuGet, and referencing libraries
    within projects from other projects.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 'The code files for this chapter can be found on GitHub:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/PacktPublishing/DotNET-Standard-2-Cookbook/tree/master/Chapter11](https://github.com/PacktPublishing/DotNET-Standard-2-Cookbook/tree/master/Chapter11)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: 'Check out the following video to see the code in action:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '[https://goo.gl/XuznM7](https://goo.gl/XuznM7)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will look at how to create a NuGet package of your library.
    We will create a basic library, and after that, we will create a NuGet package
    and submit it. Finally, we will use that package in two different applications.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: NuGet is a package delivery tool for your .NET-based applications. It avoids
    the hassle of finding all the dependencies required for a package or library.
    For example, if you are looking for Library A, and it requires a few other libraries
    such as Library B and Library C, you just need to get Library A. NuGet will save
    you the time of searching for Libraries B and C, as well as installing and configuring
    them for you.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Creating a .NET Standard 2.0 library
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we will create a basic .NET Standard 2.0 library for packaging;
    for demonstration purposes, we will create a small calculator library.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Make sure you have the latest version of Visual Studio 2017 installed and updated
    on your system. This recipe assumes you have a fair amount of knowledge of creating
    a .NET Standard 2.0 library.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open Visual Studio 2017.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **File** | **New** | **Project** and, in the New Project template dialog
    box, select **Visual Studio Solutions** under **Other Project Types** in the left-hand
    pane and select Blank Solution in the right-hand pane.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the Name: textbox, type  `Chapter11.Packaging` as the name of the solution,
    as shown in the screenshot. Select a preferred location under the **Location:** drop-down
    list, or click the Browse... button and select a location. Leave the defaults
    as they are:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/206ff752-6be6-40b0-9842-0427689800db.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
- en: Click OK.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, in the Solution Explorer (or press *Ctrl* + *Alt* + *L*), select `Chapter11.Packaging`.
    Right-click and select **Add** | **New Project.**
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Add New Project dialog box, expand the Visual C# node and select .NET
    Standard in the left-hand pane.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the right-hand pane, select Class Library (.NET Standard), as shown here:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/57beb1ef-5520-4fa1-b68b-8078915b8f66.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
- en: 'Now, in the **Name:** textbox, type `Chapter11.Packaging.CalcLib` and leave
    the Location: textbox as it is:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4d971afa-de14-4a36-a71b-3d7e696b3101.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
- en: Click OK.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, the Solution Explorer should look like this:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/69251366-42ac-48ae-833a-b2a62d016717.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
- en: Click on `Class1.cs` and press *F2* to rename it. Type `Calculator.cs` as the
    new name.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select Yes to confirm the renaming of the class name, too.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, add these two public methods to the class body:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Press *Ctrl* + *Shift* + *B* for a quick build.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In steps 1 to 10, we created a blank solution and gave it a proper name. And
    then we added a .NET Standard 2.0 class library to the solution. In steps 11 and
    12, we renamed the default `Class1.cs` to something more meaningful. Yes, you
    can always delete this class and create a new one. And, in step 13, we created
    two simple methods for the addition and subtraction of two integers.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we performed a quick build in step 14 for syntax checking.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: Creating a NuGet package of your library
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we will look at how to create a NuGet package out of the library
    you have just built in the previous recipe.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Make sure you have completed the previous recipe or that you have a .NET Standard
    library already with you. Let's get started.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open Visual Studio 2017.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, open the solution from the previous recipe. Click File | Open | Open Project/Solution, or
    press *Ctrl* + *Shift* + *O*, and select the `Chapter11.Packaging` solution.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, the Solution Explorer should look like this:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ad94e6f1-f2c5-43ef-9361-cd492b730389.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
- en: Now, click on the `Chapter11.Packaging.CalcLib` project label to select it.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click and select Properties.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the Properties tab, click on the Packages label:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8ddf805b-d2d3-428c-a79e-818c9f846de0.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
- en: 'Now, fill in the information and it should look like this:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9d067ace-2868-4d55-a6b1-f14b41cc1983.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
- en: Now, Save and close.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Again, in the toolbar, select Release from the debugging area:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3ba7e866-9734-4a43-88fe-509256b94b27.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
- en: Now, again in the Solution Explorer, right-click on the `Chapter11.Packaging.CalcLib`
    label.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select Pack:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c7e5cc12-f2b8-4301-a681-d6f29a2d2908.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
- en: This should build and create a NuGet package in your location.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can see the location in the output window, as shown:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/df1e83e6-54b9-456c-adad-e512776c69d0.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
- en: How it works...
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The steps are self explanatory. As you follow these steps, you will be able
    to see the NuGet package is selected. In step 7, you can check Require License
    Acceptance to true, if you really want your customers to accept the license terms
    explicitly to your module. The most important step is step 9, in which you set
    the build option to Release. Make sure you have done this when you get your library
    up there—not the debug version, always the release version.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: Submitting the package to NuGet package manager
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we will look at how to submit our NuGet package created in the
    previous recipe. To submit a package to NuGet, you will be required to sign in.
    It's easy if you have a Microsoft Live account with you, otherwise you can always
    create a `nuget.org` account at the NuGet site itself.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Make sure you have completed the previous recipe and created a NuGet package.
    Also, it's handy to have a Microsoft Live account to make things smoother during
    the login process, but yes, you can always create a NuGet account.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open your preferred browser.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the address bar, type [www.nuget.org](https://www.nuget.org/), and press
    *Enter*.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, click on the Sign in link in the top right-hand corner:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8814ebb5-0fce-4878-9c24-bf1bb663eb16.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
- en: 'Use your Microsoft account or create a NuGet account and then sign in:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0b20eba3-c8dc-4f44-ba91-0f515767fb8c.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
- en: After a successful sign in, click the Upload link.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, in this screen, you can drag and drop your package or you can browse for
    the package:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2fa647c0-62e3-404b-97dc-7369c28f8fb2.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
- en: 'Now, click on the Browse... button and locate your package (or you can drag
    and drop the package here):'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a00c44c2-3ab9-4566-9f8f-6e4674b6f232.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
- en: Click Open.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the next screen, you will be asked to confirm the details of your package.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you are happy with it, click on the Submit button at the bottom of the screen:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/09cffbdb-84ed-415c-9694-570eb4e36fbe.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
- en: 'You should see this screen after a successful submission:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f66c2b98-551a-4b72-83e1-bfc846563a9a.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
- en: 'After a few minutes, you should see the installation instructions for your
    package:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e28271bb-6619-4fdb-9d83-ed5835acfa40.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
- en: How it works...
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All these steps explain how to create and submit your NuGet Package. You need
    to keep a few things in mind though, things such as proper naming, and testing
    before submitting a library. Always make sure you update the library with new
    versions, as they will contain bug fixes that allow you to deliver a very good
    product at the end of the day.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: Creating a classic Windows application and testing the NuGet package
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we will look at creating a classic Windows application and using
    the NuGet package submitted in the previous chapter. We will create a brand new
    project and use the library.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Make sure you have completed the previous recipe that submitted a NuGet package.
    Make sure that the package is ready for installation at `nuget.org`.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open Visual Studio 2017.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click File | New **|** Projectand select Windows Classic Desktop in the right-hand
    pane under Visual C#.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select Windows Forms App (.NET Framework) in the right-hand pane:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0e1e1972-28a0-4157-802a-a620bbbebddd.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
- en: 'Now, in the Name: textbox, type `Chapter11.Packaging.WinAppUsage` and, under
    the Location: textbox, select a proper location and leave the other fields as
    they are:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/61773209-30ad-4e65-9cb5-8989f7548e9e.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
- en: Click OK.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The Solution Explorer (*Ctrl* + *Alt* + *L*) should look like this:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d2295717-afd2-4c11-8a03-73a79164ec4d.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
- en: Now, click on `Form1.cs` and change the name to `MainForm.cs`.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Answer Yes to confirm the change to the class name as well.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, drag two buttons to the form in the designer.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Change the properties of the buttons as follows:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| **Control** | **Property** | **Value** |'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Button | Name | `BtnAdd` |'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Button | Text | `Add` |'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Button | Name | `BtnSub` |'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Button | Text | `Subtract` |'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Form | Name | `MainForm` |'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Form | Text | `Simple Calculator` |'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: 'Now, your form should look like this:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cfcc3913-a667-4a86-9996-e4da37755924.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
- en: Now, right-click on the References label.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select Manage NuGet Packages**.**
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click Browse and, in the search box, type the Package ID you have selected while
    uploading.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In this case, `Packt_DotNetStandard_CookBook_Chap1`, and press *Enter*:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/47bd98ce-a71f-430c-9ddf-ef0acf72984c.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
- en: Now, click on the package.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click the Install button in the right-hand pane:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e5d3b6bd-9489-4e3c-bcc1-7f63dcf721e6.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
- en: 'Click OK in the confirmation dialog box:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0e8b9c6f-6975-456c-a2f7-2a7681cbe2a1.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
- en: 'After a successful installation, the output window should look like this:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/549ec163-11b7-4853-900e-14e4a0affb60.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
- en: 'Now in the Solution Explorer, expand the References tab and you should see
    our library there:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f3e0a76e-6117-4988-8ad0-a9eeb62de1cf.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
- en: Now, double-click on the Add button to reach the code window.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scroll up till you see the `using` directives.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add the following directive at the end of the `using` directives.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now, scroll down till you reach the `BtnAdd_Click()` method.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add the following code inside the method:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now, double-click on the Subtract button and add the following code inside
    the `click` method:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now, press *F5* to test the application.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the Add button and you should see an output like this:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5e34f41e-febf-4596-98d1-59f8f57c3531.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
- en: Do the same for the Subtract button.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click OK and close the window.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In steps 1 to 7, we created a classic Windows application project. And then,
    in steps 9 to 11, we created the UI for the Windows project. In steps 14 and 15,
    we opened NuGet Package Manager. And then we searched for our package and confirmed
    that it had loaded. In steps 18 to 20, we installed our package and confirmed
    that it had installed.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: In step 24, we added the reference to our library, which is installed using
    NuGet Package Manager. In steps 25 and 26, we created an instance of the` Calculator`
    class and used its `Add()` and `Subtract()` methods. Finally, in steps 28 to 30,
    we tested the application.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the package manager is one way of installing a package from NuGet. But
    you can use the NuGet Package Manager Console to do the same. To access the package
    manager console, you can click Tools | NuGet Package Manager | Package Manager
    Console:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ec4c9099-d8d4-4edf-b4ea-d468bf4ad067.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
- en: 'In the console, you can type:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](img/37a6f006-8d10-4514-964e-740baf2efeb7.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/37a6f006-8d10-4514-964e-740baf2efeb7.png)'
- en: This method will do the same and install your package to the project.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法将执行相同操作并将您的包安装到项目中。
