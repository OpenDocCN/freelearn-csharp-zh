- en: '*Appendix*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*附录*'
- en: This section will include added notes and other topics that don't quite fit
    in our Unity project for several reasons – topics such as **Virtual Reality**
    (**VR**) for a side-scrolling game that could work but ideally would be better
    suited to a first-person view format to help with the potential issues that a
    developer may encounter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将包括一些额外的注释和其他由于几个原因不适合我们的Unity项目的话题——例如，**虚拟现实**（**VR**）对于侧滚动游戏可能适用，但理想情况下更适合第一人称视角格式，以帮助解决开发者可能遇到的问题。
- en: Finally, in the last topic, we will cover some random general knowledge pertaining
    to Unity that could also help you through the exam.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在最后一个主题中，我们将涵盖一些与Unity相关的随机一般知识，这些知识也可能有助于你通过考试。
- en: Developing for Virtual Reality
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 虚拟现实开发
- en: As you probably know, VR has been around commercially since the '90s, but it
    only became more widely recognized when Oculus and Vive headsets, which can be
    hooked up to a PC, became accessible. A short time thereafter, mobile phones were
    being turned into VR headsets as a cheaper alternative, examples including Google
    Cardboard and Samsung's Gear VR attachment headsets.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所知，VR自90年代以来就已经在商业上存在，但直到Oculus和Vive头戴式设备可以连接到PC，才被更广泛地认识。在此之后不久，手机也被转变为VR头戴式设备，作为一种更经济的替代品，例如Google
    Cardboard和三星的Gear VR附加头戴式设备。
- en: As Unity developers, we need to not only understand the technical limitations
    of these VR devices but also understand how and why some people feel sick while
    others do not.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 作为Unity开发者，我们不仅需要了解这些VR设备的技術限制，还需要了解为什么有些人会感到不适，而有些人则不会。
- en: VR games/simulations can get rejected very quickly if, for example, the brain
    and the body know they are not inhabiting the world their eyes are telling them
    they are a part of.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '如果，例如，大脑和身体知道他们并没有居住在他们眼睛告诉他们的那个世界中，VR游戏/模拟可能会很快被拒绝。 '
- en: Note
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you would like to know more about the health and safety aspect of using/developing
    a VR app, refer to the following link: [https://retrophil.codes/Self-Study-App-Cognitive-Behaviour-GearVR](https://retrophil.codes/Self-Study-App-Cognitive-Behaviour-GearVR).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要了解更多关于使用/开发VR应用的健康和安全方面的信息，请参考以下链接：[https://retrophil.codes/Self-Study-App-Cognitive-Behaviour-GearVR](https://retrophil.codes/Self-Study-App-Cognitive-Behaviour-GearVR)。
- en: So, in terms of performance and VR applications, frame rate is important. Developers
    are encouraged to aim for a high frame rate of 90 to avoid a jerky disconnect
    with the world the user is in. Latency or, to be more precise, **motion to photon**
    (**MTP**) is required to be no higher than 20 milliseconds (the delay in updates
    when the user moves their head) with a display refresh rate of 90 Hz (displays
    refresh every 11 milliseconds).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在性能和VR应用方面，帧率很重要。开发者被鼓励追求90帧的高帧率，以避免与用户所在世界的突然断开。延迟或更准确地说，**运动到光子**（**MTP**）不应超过20毫秒（用户移动头部时的更新延迟），显示刷新率为90Hz（显示每11毫秒刷新一次）。
- en: 'The following diagram shows the three aforementioned technical targets that
    need to be achieved when designing a VR app:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了在设计VR应用时需要实现的前述三个技术目标：
- en: '![Figure A.1 – Technical targets to achieve with VR'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '![图A.1 – 使用VR要实现的技术目标'
- en: '](img/Figure_A.01_B18381.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_A.01_B18381.jpg)'
- en: Figure A.1 – Technical targets to achieve with VR
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图A.1 – 使用VR要实现的技术目标
- en: So, if we can hit those three targets consistently, the user will feel more
    immersed in their world. Keeping performance high means being careful with the
    platform's resources. For example, if, in the user's distance, there are plenty
    of 3D assets with materials and various textures applied that the players are
    never going to reach, we may as well replace those assets with a skybox to help
    maintain the fluidity of the VR app. Another technique designed to help keep the
    VR app running smoothly is by altering the texture of the display (`renderViewportScale`)
    at unavoidable parts in the VR app.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果我们能持续达到这三个目标，用户将感觉更沉浸在他们的世界中。保持高性能意味着要小心使用平台资源。例如，如果，在用户的距离内，有大量的3D资产带有材料和各种纹理，而这些玩家永远不会到达，我们不妨用skybox来替换这些资产，以帮助保持VR应用的流畅性。另一种旨在帮助VR应用运行顺畅的技术是在VR应用中不可避免的部分改变显示纹理（`renderViewportScale`）。
- en: We, of course, can still make the user feel ill by overdoing things with post-processing
    effects and by adding aspects such as motion blur and depth of field, which may
    confuse the user, while removing aspects such as jagged edges on assets would
    naturally make the user feel even less like they are in a game/simulation. Meanwhile,
    even going as far as increasing the resolution through super-sampling can be a
    very expensive method for a mobile device. If your VR app is basic (no textures,
    basic lighting, and few assets), you may be able to achieve this... as long as
    your performance doesn't dip!
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们仍然可以通过过度使用后处理效果以及添加诸如运动模糊和景深等特性来让用户感到不适，这可能会让用户感到困惑，而移除资产上的锯齿边缘等特性则会让用户感觉更不像是身处游戏/模拟环境中。同时，即使通过超采样来提高分辨率也可能对移动设备来说是一种非常昂贵的做法。如果你的VR应用是基础的（没有纹理、基本光照和少量资产），你可能能够实现这一点……只要你的性能不下降！
- en: The main takeaway from this is that VR needs to run as smoothly and convincingly
    as possible before filling and polishing a scene too soon.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个例子中我们可以看出，VR需要在填充和抛光场景之前尽可能平稳和令人信服地运行。
- en: Closing suggestions for the game/exam
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 游戏或考试结束建议
- en: There is also a possibility in the Unity programmer exam that you will come
    across the odd question on shaders to establish how much you know about creating
    shaders or what different shaders can create. Learning about shaders is another
    book in itself, and it's also unlikely when you sit your exam that the majority
    of it will be devoted to shaders. Hence, if you don't know how to write shaders,
    do not concern yourself with the coding and focus more on the general practice
    and functions used. For example, a cel-shaded toon in an environment or custom
    post-processing effect can be achieved by using functions such as `Camera.depthTextureMode`
    to calculate the depth of a scene.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity程序员考试中，你还有可能遇到关于着色器的奇怪问题，以了解你对创建着色器或不同着色器可以创建的内容的了解程度。了解着色器本身就是一个主题，而且在你参加考试时，大部分内容也不太可能专注于着色器。因此，如果你不知道如何编写着色器，不要担心编码，而应更多地关注一般实践和使用的功能。例如，可以通过使用`Camera.depthTextureMode`等函数来计算场景的深度，从而实现环境中的卡通着色或自定义后处理效果。
- en: 'Knowing that these functions and methodologies exist will give you a better
    chance of answering them, and if you need more information on shaders in general,
    refer to the Packt book entitled *Unity 2021 Shaders and Effects Cookbook – Third
    Edition*; otherwise, I recommend skimming through the Shader reference manual
    provided by Unity: [https://dev.rbcafe.com/unity/unity-5.3.3/en/Manual/SL-SurfaceShaders.html](https://dev.rbcafe.com/unity/unity-5.3.3/en/Manual/SL-SurfaceShaders.html).'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 了解这些函数和方法的存在将提高你回答这些问题的机会，如果你需要有关着色器的一般信息，请参阅Packt出版的《Unity 2021 着色器和效果食谱 –
    第三版》一书；否则，我建议浏览Unity提供的着色器参考手册：[https://dev.rbcafe.com/unity/unity-5.3.3/en/Manual/SL-SurfaceShaders.html](https://dev.rbcafe.com/unity/unity-5.3.3/en/Manual/SL-SurfaceShaders.html)。
- en: In the next section, I'll go through the process of installing post-processing
    v2 on later versions of Unity.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我将介绍如何在Unity的后续版本上安装后处理v2。
- en: Rendering paths
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 渲染路径
- en: Some of the mock questions in the Unity programmer exam may refer to **Forward**
    and **Deferred** graphic settings, but what are these, apart from a selection
    that can be made in our **Camera** component in the **Inspector** window?
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Unity程序员考试中的一些模拟问题可能会提到**前向**和**延迟**图形设置，但除此之外，这些设置除了可以在**检查器**窗口的**相机**组件中进行选择之外，还有什么？
- en: 'The following screenshot shows alternative rendering paths in the **Camera**
    component:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了**相机**组件中的替代渲染路径：
- en: '![Figure A.2 – Render paths'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '![图A.2 – 渲染路径'
- en: '](img/Figure_A.02_B18381.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_A.02_B18381.jpg)'
- en: Figure A.2 – Render paths
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图A.2 – 渲染路径
- en: As we can see in the preceding screenshot, there are a variety of different
    rendering paths. Each of these will render our scene's surface and light in a
    slightly different way. Some will work faster than others but be devoid of other
    benefits, such as anti-aliasing.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的截图中所看到的，存在多种不同的渲染路径。这些路径中的每一个都会以略微不同的方式渲染场景的表面和光照。有些可能比其他路径运行得更快，但会缺少其他好处，比如抗锯齿。
- en: Note
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Refer to the following link to see the chart comparisons of the various rendering
    paths: [https://docs.unity3d.com/Manual/RenderingPaths.html](https://docs.unity3d.com/Manual/RenderingPaths.html).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 有关各种渲染路径的图表比较，请参阅以下链接：[https://docs.unity3d.com/Manual/RenderingPaths.html](https://docs.unity3d.com/Manual/RenderingPaths.html)。
- en: Adding to/optimizing Killer Wave
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优化“杀手波浪”
- en: So, we really have come to the end of the book, and the whole process of designing
    a game/prototype was a way of trying to cover as many objectives from the Unity
    programmer exam as possible in a variety of scenarios. There are parts in this
    tutorial series where obviously things could have been quicker or done better
    with regard to creating a project, but this book was never about making a game.
    It was about covering as much as possible while seeing your project develop.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们真的到了这本书的结尾，整个设计游戏/原型的过程是一种尝试，在多种场景下尽可能覆盖 Unity 程序员考试中的所有目标。在这个教程系列中，显然有些事情可以更快或做得更好，关于创建项目，但这本书从未是关于制作游戏的。它是在你的项目开发的同时尽可能覆盖更多内容。
- en: Also, if you bought this book simply with a view to making a game and you haven't
    made one before, you've covered a range of tools and components that you can now
    use, and for sure, you could find employment as a Unity developer. The majority
    of the 30+ Unity projects I have worked on have all emanated from the skills I
    have demonstrated in this book. Hence, if you want to carry on with Killer Wave
    or rename it and change the concept to personalize the game, go for it. You have
    an adequate foundation to continue, but where should you go next with the game?
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果你只是出于制作游戏的目的购买了这本书，而你之前没有制作过游戏，你已经覆盖了一系列工具和组件，你现在可以使用它们，并且肯定可以找到作为 Unity
    开发者的工作。我在 30 多个 Unity 项目中所做的大部分工作都源于我在这本书中展示的技能。因此，如果你想继续 Killer Wave 或将其重命名并更改概念以个性化游戏，那就去做吧。你有一个足够的基础来继续前进，但接下来你该把游戏做到哪里去？
- en: 'Here is a list of things that you could work on in order to continue with Killer
    Wave:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个你可以继续在 Killer Wave 上工作的项目列表：
- en: '**Optimize the code**:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**优化代码**：'
- en: Use the Unity **Profiler** as often as possible and take the first and most
    expensive resource used off the top of its list, as discussed back in [*Chapter
    13*](B18381_13_Epub.xhtml#_idTextAnchor219), *Effects, Testing, Performance, and
    Alt Controls*.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽可能多地使用 Unity **Profiler**，并从其列表中移除最昂贵和第一个资源，正如在 [*第 13 章*](B18381_13_Epub.xhtml#_idTextAnchor219)，*效果、测试、性能和替代控制*
    中讨论的那样。
- en: As your game will likely get bigger and more complex, using functions such as
    `GameObject.Find` and `Transform.Find` is going to slow your game down even more.
    Reference these variables by other means, such as in the **Inspector**.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着你的游戏可能变得更大和更复杂，使用 `GameObject.Find` 和 `Transform.Find` 等函数将使你的游戏运行得更慢。通过其他方式引用这些变量，例如在
    **检查器** 中。
- en: Avoid any kind of `if` statement within a `for` loop.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免在 `for` 循环中任何形式的 `if` 语句。
- en: Any multiplications made with Vector3s and floats need to be done separately
    (keep all floats within parentheses to prevent code from going back and forth
    between variables).
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何与 Vector3 和 floats 的乘法都需要单独进行（将所有 floats 放在括号内，以防止代码在变量之间来回切换）。
- en: 'The following code block shows an example of keeping Vector3s and floats separate:'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下代码块展示了将 Vector3 和 floats 分开的示例：
- en: '[PRE0]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Cache transforms; Unity performs checks to establish whether a game object
    has been deleted with its own standalone transform. The following code block shows
    an example of caching a transform:'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓存变换；Unity 会执行检查以确定游戏对象是否与其独立的变换一起被删除。以下代码块展示了缓存变换的示例：
- en: '[PRE1]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Use `transform.localPosition` instead of `transform.position` (if you can).
    Unity automatically stores all data as local positions internally.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果可能，使用 `transform.localPosition` 而不是 `transform.position`。Unity 会自动将所有数据作为局部位置存储在内部。
- en: Reduce engine calls by caching variables.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过缓存变量来减少引擎调用。
- en: Remove the `get` and `set` accessors, and keep variables as `public` to avoid
    accessing.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移除 `get` 和 `set` 访问器，并将变量保持为 `public` 以避免访问。
- en: Try to avoid `Vector` math and replace it with cache multiplied floats. This
    saves the creation of `Vector` and having to store values inside it.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量避免 `Vector` 数学，并用缓存乘以 floats 来替换。这节省了创建 `Vector` 并在其中存储值。
- en: Store `Time.deltaTime` as a `static` float to avoid multiple engine calls.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 `Time.deltaTime` 存储为 `static` float 以避免多次引擎调用。
- en: Use `for` loops instead of `foreach`, since `foreach` creates garbage.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `for` 循环而不是 `foreach`，因为 `foreach` 会创建垃圾。
- en: Use `array` instead of `List`.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `array` 而不是 `List`。
- en: Try and keep the **GC Alloc** list at zero in the **Profiler**. Basically, don't
    generate garbage if possible in order to avoid performance spikes.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量在 **Profiler** 中将 **GC Alloc** 列表保持在零。基本上，如果可能的话，不要生成垃圾以避免性能峰值。
- en: Instantiate game objects in the first frame.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第一帧中实例化游戏对象。
- en: Make an object pool of bullets instead of instantiating and destroying.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建子弹对象池而不是实例化和销毁。
- en: Don't use `string` concatenations; in worst-case scenarios, use `StringBuilder`.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要使用`string`连接；在最坏的情况下，使用`StringBuilder`。
- en: Create your own `Update` / `FixedUpdate` managers instead of using those offered
    by Unity. This aids performance, and you can create your own custom features to
    add to it.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建自己的`Update` / `FixedUpdate`管理器，而不是使用Unity提供的那些。这有助于性能，并且你可以创建自己的自定义功能来添加到其中。
- en: Use animated sprites instead of 3D assets.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用动画精灵而不是3D资产。
- en: Try not to use `GetComponent` / `GetComponentInChildren` / `GetComponentsInChildren`
    / `GetComponentInParent` / `GetComponentsInParent`. If you do, make sure you use
    them on startup (Awake, Enable, Start).
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量不要使用`GetComponent` / `GetComponentInChildren` / `GetComponentsInChildren`
    / `GetComponentInParent` / `GetComponentsInParent`。如果你确实使用它们，请确保在启动时（Awake, Enable,
    Start）使用。
- en: Avoid animating game objects with a large hierarchy.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免对具有大型层次结构的游戏对象进行动画处理。
- en: Create a loading screen if the scenes take too long to load.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果场景加载时间过长，创建一个加载界面。
- en: Make all final **Profiler** tests on the platform (**Development Mode** and/or
    **Logcat** for Android) on which you intend to build your game/app.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你打算构建游戏/应用程序的平台（**开发模式**和/或**Logcat**）上进行所有最终的**Profiler**测试。
- en: '**Other game ideas**:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**其他游戏想法**：'
- en: Create alternative scriptable assets for the current enemy.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为当前敌人创建替代的可脚本化资产。
- en: Make more items available in the shop.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在商店中提供更多商品。
- en: Add different enemy spawners.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加不同的敌人生成器。
- en: Make the cluster bomb do something!
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让集束炸弹做些事情！
- en: Fight the boss.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与Boss战斗。
- en: Create level 4.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建第4级。
- en: I hope these ideas/suggestions help and that the book, in general, helps you
    on your journey. The very best of luck!
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这些想法/建议能有所帮助，并且总的来说，这本书能帮助你踏上旅程。祝你好运！
- en: Mock answers
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模拟答案
- en: 'The answers to the mock questions located at the end of some chapters can be
    found in the following sections:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一些章节末尾的模拟问题的答案可以在以下部分找到：
- en: Chapter 3, Managing Scripts and Taking a Mock Test
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第3章，管理脚本和进行模拟测试
- en: '![](img/Table_012.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Table_012.jpg)'
- en: Chapter 7, Creating a Game Loop and Mock Test
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第7章，创建游戏循环和模拟测试
- en: '![](img/Table_021.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Table_021.jpg)'
- en: Chapter 10, Pausing the Game, Altering Sound, and a Mock Test
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第10章，暂停游戏，调整音效，以及模拟测试
- en: '![](img/Table_03_a.jpg)![](img/Table_03_b.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Table_03_a.jpg)![](img/Table_03_b.jpg)'
- en: ', NavMesh, Timeline, and a Mock Test'
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ', NavMesh, 时间轴，以及模拟测试'
- en: '![](img/Table_04_a.jpg)![](img/Table_04_b.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Table_04_a.jpg)![](img/Table_04_b.jpg)'
- en: Chapter 14, Full Unity Programmer Mock Exam
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第14章，完整的Unity程序员模拟考试
- en: '![](img/Table_05_a.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Table_05_a.jpg)'
- en: '![](img/Table_05_b.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Table_05_b.png)'
- en: '![](img/Table_05_c.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Table_05_c.png)'
- en: '![](img/Table_05_d.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Table_05_d.png)'
- en: '![](img/Table_05_e.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Table_05_e.jpg)'
- en: '![](img/Table_05_f.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Table_05_f.png)'
- en: 'More questions and answers can be found at the Packt repository at the following
    link: https://github.com/PacktPublishing/Unity-Certified-Programmer-Exam-Guide-Second-Edition
    /tree/main/Extra.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 更多的问题和答案可以在以下链接的Packt仓库中找到：https://github.com/PacktPublishing/Unity-Certified-Programmer-Exam-Guide-Second-Edition
    /tree/main/Extra.
