["```cs\n    using UnityEngine;\n    using System.Collections;\n\n    public class ReadDefaultResources : MonoBehaviour {\n      public string fileName = \"externalTexture\";\n      private Texture2D externalImage;\n\n      void Start () {\n        externalImage = (Texture2D)Resources.Load(fileName);\n        Renderer myRenderer = GetComponent<Renderer>();\n        myRenderer.material.SetTexture(\"_MainTex\", externalImage);\n      }\n    }\n    ```", "```cs\npublic class ReadDefaultResourcesText : MonoBehaviour {\n  public string fileName = \"textFileName\";\n  private string textFileContents;\n\n  void Start () {\n    TextAsset textAsset = (TextAsset)Resources.Load(fileName);\n    textFileContents = textAsset.text;\n    Debug.Log(textFileContents);\n  }\n}\n```", "```cs\nusing UnityEngine;\nusing System.Collections;\n\n[RequireComponent (typeof (AudioSource))]\npublic class ReadDefaultResourcesAudio : MonoBehaviour {\n  public string fileName = \"soundtrack\";\n  private AudioClip audioFile;\n\n  void  Start (){\n    AudioSource audioSource = GetComponent<AudioSource>();\n    audioSource.clip = (AudioClip)Resources.Load(fileName);\n    if(!audioSource.isPlaying && audioSource.clip.isReadyToPlay)\n      audioSource.Play();\n  }\n}\n```", "```cs\n    using UnityEngine;\n    using UnityEngine.UI;\n    using System.Collections;\n\n    public class ReadImageFromWeb : MonoBehaviour {\n      public string url = \"http://www.packtpub.com/sites/default/files/packt_logo.png\";\n\n      IEnumerator Start() {\n        WWW www = new WWW(url);\n        yield return www;\n        Texture2D texture = www.texture;\n        GetComponent<RawImage>().texture = texture;\n      }\n    }\n    ```", "```cs\n  private Sprite TextureToSprite(Texture2D texture){\n    Rect rect = new Rect(0, 0, texture.width, texture.height);\n    Vector2 pivot = new Vector2(0.5f, 0.5f);\n    Sprite sprite = Sprite.Create(texture, rect, pivot);\n    return sprite;\n  }\n```", "```cs\nusing UnityEngine;\nusing System.Collections;\nusing UnityEngine.UI;\n\npublic class ReadTextFromWeb : MonoBehaviour {\n  public string url = \"http://www.ascii-art.de/ascii/ab/badger.txt\";\n\n  IEnumerator Start(){\n    Text textUI = GetComponent<Text>();\n    textUI.text = \"(loading file ...)\";\n\n    WWW www = new WWW(url);\n    yield return www;\n    string textFileContents = www.text;\n    Debug.Log(textFileContents);\n\n    textUI.text = textFileContents;\n  }\n}\n```", "```cs\n    using UnityEngine;\n    using System.Collections;\n\n    using UnityEngine.UI;\n    using System.IO;\n\n    public class ReadManualResourceImageFile : MonoBehaviour {\n      private string fileName = \"externalTexture.jpg\";\n      private string url;\n      private Texture2D externalImage;\n\n      IEnumerator Start () {\n        url = \"file:\" + Application.dataPath;\n        url = Path.Combine(url, \"Resources\");\n        url = Path.Combine(url, fileName);\n\n        WWW www = new WWW (url);\n        yield return www;\n\n        Texture2D texture = www.texture;\n        GetComponent<Image>().sprite = TextureToSprite(texture);\n      }\n\n      private Sprite TextureToSprite(Texture2D texture){\n        Rect rect = new Rect(0, 0, texture.width, texture.height);\n        Vector2 pivot = new Vector2(0.5f, 0.5f);\n        Sprite sprite = Sprite.Create(texture, rect, pivot);\n        return sprite;\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n\n    public class Player : MonoBehaviour {\n      public static int scoreCorrect = 0;\n      public static int scoreIncorrect = 0;\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n\n    using UnityEngine.UI;\n\n    public class UpdateScoreText : MonoBehaviour {\n      void Start(){\n        Text scoreText = GetComponent<Text>();\n        int totalAttempts = Player.scoreCorrect + Player.scoreIncorrect;\n        string scoreMessage = \"Score = \";\n        scoreMessage += Player.scoreCorrect + \" / \" + totalAttempts;\n\n        scoreText.text = scoreMessage;\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n\n    public class IncrementCorrectScore : MonoBehaviour {\n      void Start () {\n        Player.scoreCorrect++;\t\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n\n    public class IncrementIncorrectScore : MonoBehaviour {\n      void Start () {\n        Player.scoreIncorrect++;\t\n      }\n    }\n    ```", "```cs\nvoid Start(){\n  Text scoreText = GetComponent<Text>();\n  int totalAttempts = Player.scoreCorrect + Player.scoreIncorrect;\n\n  // default is empty string\n  string scoreMessage = \"\";\n  if( totalAttempts > 0){\n    scoreMessage = \"Score = \";\n    scoreMessage += Player.scoreCorrect + \" / \" + totalAttempts;\n  }\n\n  scoreText.text = scoreMessage;\n}\n```", "```cs\n    void Start(){\n      Text scoreText = GetComponent<Text>();\n\n      int scoreCorrect = PlayerPrefs.GetInt(\"scoreCorrect\");\n      int scoreIncorrect = PlayerPrefs.GetInt(\"scoreIncorrect\");\n\n      int totalAttempts = scoreCorrect + scoreIncorrect;\n      string scoreMessage = \"Score = \";\n      scoreMessage += scoreCorrect + \" / \" + totalAttempts;\n\n      scoreText.text = scoreMessage;\n    }\n    ```", "```cs\n    void Start () {\n      int newScoreCorrect = 1 + PlayerPrefs.GetInt(\"scoreCorrect\");\n      PlayerPrefs.SetInt(\"scoreCorrect\", newScoreCorrect);\n    }\n    ```", "```cs\n    void Start () {\n      int newScoreIncorrect = 1 + PlayerPrefs.GetInt(\"scoreIncorrect\");\n      PlayerPrefs.SetInt(\"scoreIncorrect\", newScoreIncorrect);\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    using System;\n    using System.IO;\n\n    public class TakeScreenshot : MonoBehaviour {\n      public string prefix = \"Screenshot\";\n      public enum method{captureScreenshotPng, ReadPixelsPng, ReadPixelsJpg};\n      public method captMethod = method.captureScreenshotPng;\n      public int captureScreenshotScale = 1;\n      [Range(0, 100)]\n      public int jpgQuality = 75;\n      private Texture2D texture;\n      private int sw;\n      private int sh;\n      private Rect sRect;\n      string date;\n\n      void Start(){\n        sw = Screen.width;\n        sh = Screen.height;\n        sRect = new Rect(0,0,sw,sh);\n      }\n\n      void  Update (){\n        if (Input.GetKeyDown (KeyCode.P)){\n          TakeShot();\n        }\n      }\n\n      private void TakeShot(){\n        date = System.DateTime.Now.ToString(\"_d-MMM-yyyy-HH-mm-ss-f\");\n\n        if (captMethod == method.captureScreenshotPng){\n          Application.CaptureScreenshot(prefix + date + \".png\", captureScreenshotScale);\n        } else {\n          StartCoroutine(ReadPixels());\n        }\n      }\n\n      IEnumerator  ReadPixels (){\n        yield return new WaitForEndOfFrame();\n\n        byte[] bytes;\n        texture = new Texture2D (sw,sh,TextureFormat.RGB24,false);\n        texture.ReadPixels(sRect,0,0);\n        texture.Apply();\n\n        if (captMethod == method.ReadPixelsJpg){\n          bytes = texture.EncodeToJPG(jpgQuality);\n          WriteBytesToFile(bytes, \".jpg\");\n        } else if (captMethod == method.ReadPixelsPng){\n          bytes = texture.EncodeToPNG();\n          WriteBytesToFile(bytes, \".png\");\n        }\n      }\n\n      private void WriteBytesToFile(byte[] bytes, string format){\n        Destroy (texture);\n        File.WriteAllBytes(Application.dataPath + \"/../\"+prefix + date + format, bytes);\n      }\n    }\n    ```", "```cs\n    CREATE TABLE `score_list` (\n      `id` int(11) NOT NULL AUTO_INCREMENT,\n      `player` varchar(25) NOT NULL,\n      `score` int(11) NOT NULL,\n      PRIMARY KEY (`id`)\n    ) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;\n    ```", "```cs\n// Unity Csharp code\nstring key = \"harrypotter\"\nstring gameId = 21;\nstring gameCode = Utility.Md5Sum(key + gameId);\n```", "```cs\n// PHP – security code\n$key = \"harrypotter\"\n$game_id =  $_GET['game_id'];\n$provided_game_code =  $_GET['game_code'];\n$server_game_code = md5($key.$game_id);\n\nif( $server_game_code == $provided_game_code ) {\n  // codes match - do processing here\n}\n```", "```cs\n    using UnityEngine;\n    using System.Collections;\n\n    using System.Collections.Generic;\n\n    public class LoadMapFromTextfile : MonoBehaviour\n    {\n      public TextAsset levelDataTextFile;\n\n      public GameObject floor_848;\n      public GameObject corridor_849;\n      public GameObject horiz_1034;\n      public GameObject vert_1025;\n      public GameObject corpse_175;\n      public GameObject door_844;\n      public GameObject potion_675;\n      public GameObject chest_586;\n      public GameObject alter_583;\n      public GameObject stairs_up_994;\n      public GameObject stairs_down_993;\n      public GameObject wizard_287;\t\n\n      public Dictionary<char, GameObject> dictionary = new Dictionary<char, GameObject>();\n\n      void Awake(){\n        char newlineChar = '\\n';\n\n        dictionary['.'] = floor_848;\n        dictionary['#'] = corridor_849;\n        dictionary['('] = chest_586;\n        dictionary['!'] = potion_675;\n        dictionary['_'] = alter_583;\n        dictionary['>'] = stairs_down_993;\n        dictionary['<'] = stairs_up_994;\n        dictionary['-'] = horiz_1034;\n        dictionary['|'] = vert_1025;\n        dictionary['+'] = door_844;\n        dictionary['%'] = corpse_175;\n        dictionary['@'] = wizard_287;\n\n        string[] stringArray = levelDataTextFile.text.Split(newlineChar);\n        BuildMaze( stringArray );\n      }\n\n      private void BuildMaze(string[] stringArray){\n        int numRows = stringArray.Length;\n\n        float yOffset = (numRows / 2);\n\n        for(int row=0; row < numRows; row++){\n          string currentRowString = stringArray[row];\n          float y = -1 * (row - yOffset);\n          CreateRow(currentRowString, y);\n        }\n      }\n\n      private void CreateRow(string currentRowString, float y) {\n        int numChars = currentRowString.Length;\n        float xOffset = (numChars/2);\n\n        for(int charPos = 0; charPos < numChars; charPos++){\n          float x = (charPos - xOffset);\n          char prefabCharacter = currentRowString[charPos];\n\n          if (dictionary.ContainsKey(prefabCharacter)){\n            CreatePrefabInstance( dictionary[prefabCharacter], x, y);\n          }\n        }\n      }\n\n      private void CreatePrefabInstance(GameObject objectPrefab, float x, float y){\n        float z = 0;\n        Vector3 position = new Vector3(x, y, z);\n        Quaternion noRotation = Quaternion.identity;\n        Instantiate (objectPrefab, position, noRotation);\n      }\n    }\n    ```", "```cs\n    # =============== #\n    # Unity generated #\n    # =============== #\n    Temp/\n    Library/\n\n    # ===================================== #\n    # Visual Studio / MonoDevelop generated #\n    # ===================================== #\n    ExportedObj/\n    obj/\n    *.svd\n    *.userprefs\n    /*.csproj\n    *.pidb\n    *.suo\n    /*.sln\n    *.user\n    *.unityproj\n    *.booproj\n\n    # ============ #\n    # OS generated #\n    # ============ #\n    .DS_Store\n    .DS_Store?\n    ._*\n    .Spotlight-V100\n    .Trashes\n    ehthumbs.db\n    Thumbs.db\n    ```"]