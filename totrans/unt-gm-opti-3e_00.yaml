- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: User experience is a critical component of any game. This not only includes our
    game's story and its gameplay but also how smoothly the graphics run, how reliably
    the game connects to multiplayer servers, how responsive it is to user input,
    and even how large the final application file size is due to the prevalence of
    mobile devices and cloud downloads. The barrier of entry into game development
    has been lowered considerably thanks to tools such as Unity, which offer an enormous
    array of useful development features while still being accessible to individual
    developers. However, due to the amount of competition in the gaming industry,
    the level of quality of the final product that our players expect us to provide
    is increasing with every passing day. We should expect that players and critics
    can and will scrutinize every facet of our game.
  prefs: []
  type: TYPE_NORMAL
- en: The goals of performance optimization are deeply entwined with user experience.
    Poorly optimized games can result in low frame rates, freezes, crashes, input
    lag, long loading times, inconsistent and jittery runtime behavior, physics engine
    breakdowns, and even excessively high battery power consumption (an often-neglected
    metric for mobile devices). Having just one of these issues can be a game developer's
    worst nightmare as reviews will tend to focus on the one thing that we did poorly,
    ignoring all the things that we did well.
  prefs: []
  type: TYPE_NORMAL
- en: One goal of performance optimization is to make the best use of the available
    resources, including CPU resources such as the number of cycles consumed, how
    much main memory space we're using (known as RAM), as well as **Graphics Processing
    Unit** (**GPU**) resources, which includes its own memory space (known as VRAM),
    Fill Rate, Memory Bandwidth, and so on. However, the most important goal of performance
    optimization is to ensure that no single resource causes a bottleneck at an inappropriate
    time and that the highest priority tasks get taken care of first. Even small,
    intermittent hiccups and sluggishness in performance can pull the player out of
    the experience, breaking the game immersion and limiting our potential to create
    the experience we intended. Another consideration is that the more resources we
    can save, the more activity we can afford to implement in our games, allowing
    us to generate more exciting and dynamic gameplay.
  prefs: []
  type: TYPE_NORMAL
- en: It is also vital to decide when to take a step back and stop making performance
    enhancements. In a world with infinite time and resources, there will always be
    another way to make it better, faster, and more efficient. There must be a point
    during development where we decide that the product has reached an acceptable
    level of quality. If not, we risk dooming ourselves to repeatedly implementing
    changes that result in little or no tangible benefit, while each change also risks
    the chance that we introduce more bugs.
  prefs: []
  type: TYPE_NORMAL
- en: 'The best way to decide whether a performance issue is worth fixing is to answer
    the question, *will the user notice it?*. If the answer to this question is *no*, then
    performance optimization will be a wasted effort. There is an old saying in software
    development:'
  prefs: []
  type: TYPE_NORMAL
- en: Premature optimization is the root of all evil.
  prefs: []
  type: TYPE_NORMAL
- en: Premature optimization is the cardinal sin of reworking and refactoring code
    to enhance performance without any proof that it is necessary. This can mean either
    making changes without showing that a performance problem even exists, or making
    changes because we only believe a performance issue might stem from a particular
    area before it has been proven to be true.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, the original version of this common saying by Donald Knuth goes on
    to say that we should still write our code to avoid the more straightforward and
    obvious performance problems. However, the real performance optimization work
    toward the end of a project can take a lot of time, and we should plan the time
    to polish the product properly while avoiding the desire to implement more costly
    and time-consuming changes without any valid proof. These kinds of mistakes have
    cost software developers, as a collective whole, a depressing number of work hours
    for nothing.
  prefs: []
  type: TYPE_NORMAL
- en: This book intends to give you the tools, knowledge, and skills you need to both
    detect and fix performance issues in a Unity application, no matter where they
    stem from. These bottlenecks can appear within hardware components such as the
    CPU, GPU, and RAM, or within software subsystems such as physics, rendering, and
    the Unity engine itself.
  prefs: []
  type: TYPE_NORMAL
- en: Optimizing the performance of our games will give them a much better chance
    of succeeding and standing out from the crowd in a marketplace that is inundated
    with new, high-quality games every single day.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The book is intended for game developers who want to learn optimization techniques
    for building high performant games with the latest Unity version.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](2f4716a2-e77c-4aff-9375-937426ba08c6.xhtml), *Evaluating Performance
    Problems*, provides an exploration of the Unity Profiler and a series of methods
    to profile our application, detect performance bottlenecks, and perform root cause
    analysis.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](a1b841e8-d665-4cad-8b8b-523b8d2eefd5.xhtml), *Scripting Strategies*,
    deals with the best practices for our Unity C# script code, minimizing MonoBehaviour
    callback overhead, improving inter-object communication, and more.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](c55845b6-6528-4f12-99af-45655ec21ba4.xhtml), *The Benefits of Batching*,
    explores Unity''s dynamic batching and static batching systems, and how they can
    be utilized to ease the burden on the rendering pipeline.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](e215e6aa-f915-4977-a552-aeb09ba7ed6e.xhtml), *Optimizing Your Art
    Assets*, helps you to understand the underlying technology behind art assets and
    learn how to avoid common pitfalls with importing, compression, and encoding.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](78698578-cc3c-4d6c-95e3-0bbe9390b566.xhtml),  *Faster Physics*,
    is about investigating the nuances of Unity''s internal physics engines for both
    3D and 2D games, and how to properly organize our physics objects for improved
    performance.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](c374b25a-7082-4022-8c4a-79b595da7a51.xhtml), *Dynamic Graphics,* provides
    an in-depth exploration of the rendering pipeline, and how to improve applications
    that suffer rendering bottlenecks in the GPU or CPU, how to optimize graphical
    effects such as lighting, shadows, and particle effects, ways in which to optimize
    shader code, and some graphics optimization specific for mobile devices.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](f8500893-1fb4-4776-a383-c61f790f2f04.xhtml), *Optimizations for
    Virtual and Augmented Reality*, focuses on the new entertainment mediums of VR
    and AR, and includes several techniques for optimizing performance that is unique
    to apps built for these platforms.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](eb7d9924-d92d-4cfa-ae68-ddd0f77a15a0.xhtml), *Masterful Memory
    Management*, examines the inner workings of the Unity engine, the Mono framework,
    and how memory is managed within these components to protect our application from
    excessive heap allocations and runtime garbage collection.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](bc756ee8-292f-4b96-8eaf-f43d74140b75.xhtml), *The Data-Oriented
    Technology Stack, *examines the new Unity optimizations for multithreading intensive
    games:  DOTS. We introduce the new C# Job System, the new Unity ECS, and the burst
    compiler.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](e76af5e0-a83b-4158-bf79-c66562056b30.xhtml), *Tactical Tips and
    Tricks,* concludes the book with a multitude of useful techniques used by Unity
    professionals to improve project workflow and scene management.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The majority of this book will focus on features and enhancements that apply
    to Unity 2019 and Unity 2020\. Many of the techniques explored within this book
    can be applied to Unity 2018 projects and older, but some features may be different.
    These differences will be highlighted, where applicable.
  prefs: []
  type: TYPE_NORMAL
- en: It is worth noting that the code it is supposed to work on Unity 2020 but at
    the time of writing we could only test it on the alpha version. Additional incompatibilities
    may arise when Unity 2020 comes out of alpha.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](https://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Support tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Unity-Game-Optimization-Third-Edition](https://github.com/PacktPublishing/Unity-Game-Optimization-Third-Edition). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781838556518_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781838556518_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "These can be accessed through the `UnityEngine.Profiling.Profiler` class
    through its `BeginSample()` and `EndSample()` methods."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    screen. For example, words in menus or dialog boxes appear in the text like this.
    Here is an example: "When a Unity application is compiled in Development Mode."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](https://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://www.packt.com/).
  prefs: []
  type: TYPE_NORMAL
