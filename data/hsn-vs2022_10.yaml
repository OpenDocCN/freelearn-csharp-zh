- en: 'Chapter 8: Web Tools and Hot Reload'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 8 章：Web 工具和热重载
- en: Visual Studio has many tools to work with .NET applications and all the Microsoft
    ecosystem, but it also has many tools for other programming languages and technologies.
    This includes web development technologies such as JavaScript, CSS, and HTML.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 有许多工具可以用于 .NET 应用程序和所有 Microsoft 生态系统，但它也有许多工具用于其他编程语言和技术。这包括
    Web 开发技术，如 JavaScript、CSS 和 HTML。
- en: In Visual Studio 2022, there are also some new improvements that help us to
    code faster on the frontend side. This means design tools for web developers that
    work with CSS, JavaScript, and HTML. With these tools, you don't need to use other
    editors or IDEs to complete your activities while working with these technologies.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Visual Studio 2022 中，还有一些新的改进可以帮助我们在前端更快地编码。这意味着为 Web 开发者提供与 CSS、JavaScript
    和 HTML 一起工作的设计工具。有了这些工具，您在处理这些技术时不需要使用其他编辑器或 IDE 来完成您的活动。
- en: In this chapter, you will learn about web tools in Visual Studio, and how to
    take advantage of them and simplify when we are developing some common statements.
    These tools will help you to generate code automatically, install and specify
    a version of web libraries, inspect the code in JavaScript, and refresh the application
    automatically to see the changes in real time.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将了解 Visual Studio 中的 Web 工具，以及如何利用它们在开发一些常见语句时简化操作。这些工具将帮助您自动生成代码，安装和指定
    Web 库的版本，检查 JavaScript 中的代码，并自动刷新应用程序以实时查看更改。
- en: 'We will learn the following topics related to web tools:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将学习以下与 Web 工具相关的话题：
- en: Using scaffolding
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用脚手架
- en: Installing JavaScript and CSS libraries
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 JavaScript 和 CSS 库
- en: Debugging in JavaScript
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaScript 调试
- en: Hot Reload
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 热重载
- en: We will start using scaffolding, which is the main tool for creating project
    files, using templates that are included by default in Visual Studio 2022.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将开始使用脚手架，这是创建项目文件的主要工具，使用 Visual Studio 2022 中默认包含的模板。
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To complete the demos of this book chapter, you must have previously installed
    Visual Studio 2022 with the web development workload, as shown in [*Chapter 1*](B17873_01_ePub.xhtml#_idTextAnchor013),
    *Getting Started with Visual Studio 2022*. It's important to have the SPA base
    project that was created in [*Chapter 4*](B17873_04_ePub.xhtml#_idTextAnchor052),
    *Creating Projects and Templates*.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成本书本章的演示，您必须之前已安装带有 Web 开发工作负载的 Visual Studio 2022，如 [*第 1 章*](B17873_01_ePub.xhtml#_idTextAnchor013)
    中所示，*Visual Studio 2022 入门*。拥有在 [*第 4 章*](B17873_04_ePub.xhtml#_idTextAnchor052)
    中创建的 SPA 基础项目非常重要，*创建项目和模板*。
- en: 'You can check the changes completed in this chapter at the following link:
    [https://github.com/PacktPublishing/Hands-On-Visual-Studio-2022/tree/main/Chapter08](https://github.com/PacktPublishing/Hands-On-Visual-Studio-2022/tree/main/Chapter08).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下链接检查本章完成的更改：[https://github.com/PacktPublishing/Hands-On-Visual-Studio-2022/tree/main/Chapter08](https://github.com/PacktPublishing/Hands-On-Visual-Studio-2022/tree/main/Chapter08)。
- en: Using scaffolding
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用脚手架
- en: Scaffolding is one of the most beneficial features for developers in Visual
    Studio. By using scaffolding, we can save time generating code automatically by
    just clicking on some options.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 脚手架是 Visual Studio 中对开发者最有益的功能之一。通过使用脚手架，我们可以通过点击一些选项来自动生成代码，从而节省时间。
- en: 'It''s indispensable to clarify that scaffolding is a popular concept in software
    development, and this is not unique to Visual Studio. Normally, scaffolding is
    associated with the code generation of **model view controller** (**MVC**) components.
    MVC is a popular pattern for creating web applications. Using MVC, you must distribute
    the responsibilities for creating web applications into three different components:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 必须明确指出，脚手架是软件开发中的一个流行概念，这并不仅限于 Visual Studio。通常，脚手架与 **模型-视图-控制器**（**MVC**）组件的代码生成相关联。MVC
    是创建 Web 应用程序的一个流行模式。使用 MVC，您必须将创建 Web 应用程序的责任分配到三个不同的组件：
- en: '**Model**: Responsible for saving the data'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型**：负责保存数据'
- en: '**View**: The interface that interacts with the user'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视图**：与用户交互的界面'
- en: '**Controller**: In charge of handling all the actions performed by the user
    in the view'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**控制器**：负责处理在视图中用户执行的所有操作'
- en: 'To use scaffolding in Visual Studio, you can select the folder in the solution
    explorer and right-click it to open the options to select **New Scaffolded Item…**
    (see *Figure 8.1*):'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '要在 Visual Studio 中使用脚手架，您可以在解决方案资源管理器中选择文件夹，然后右键单击它以打开选项来选择 **新建脚手架项…**（见 *图
    8.1*）:'
- en: '![Figure 8.1 – The New Scaffolded Item… option in the project menu'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.1 – 项目菜单中的“新建脚手架项…”选项'
- en: '](img/Figure_8.1_B17873.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_8.1_B17873.jpg)'
- en: Figure 8.1 – The New Scaffolded Item… option in the project menu
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.1 – 项目菜单中的新脚手架项…选项
- en: Using this option, we have the possibility to create new elements in the project
    related to the MVC structure.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此选项，我们可以在项目中创建与MVC结构相关的新元素。
- en: 'After clicking on **New Scaffolded Item…**, Visual Studio will provide a list
    of elements that we can create using the scaffolding tool:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**新脚手架项…**后，Visual Studio将提供我们可以使用脚手架工具创建的元素列表：
- en: '![Figure 8.2 – The Add New Scaffolded Item modal options'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.2 – 添加新脚手架项的模态选项'
- en: '](img/Figure_8.02_B17873.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_8.02_B17873.jpg)'
- en: Figure 8.2 – The Add New Scaffolded Item modal options
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.2 – 添加新脚手架项的模态选项
- en: 'In this case, we will select `GET`, `POST`, `PUT` and `DELETE` verbs. Choose
    the name `GeneratedController.cs` and click on **Add**:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们将选择`GET`、`POST`、`PUT`和`DELETE`动词。选择名称`GeneratedController.cs`并点击**添加**：
- en: '![Figure 8.3 – Creating an API Controller with read/write actions'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.3 – 创建具有读写操作的API控制器'
- en: '](img/Figure_8.03_B17873.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_8.03_B17873.jpg)'
- en: Figure 8.3 – Creating an API Controller with read/write actions
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.3 – 创建具有读写操作的API控制器
- en: 'Visual Studio is going to generate a new controller in the `Controllers` folder
    with endpoints by default:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio将默认在`Controllers`文件夹中生成一个新的控制器，并带有端点：
- en: '![Figure 8.4 – GeneratedController is created in the Controllers folder'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.4 – 在Controllers文件夹中创建的GeneratedController'
- en: '](img/Figure_8.4_B17873.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_8.4_B17873.jpg)'
- en: Figure 8.4 – GeneratedController is created in the Controllers folder
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.4 – 在Controllers文件夹中创建的GeneratedController
- en: After creating the base template, you can replace the data type and method names
    to match your model.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 创建基本模板后，您可以替换数据类型和方法名称以匹配您的模型。
- en: 'Let''s create another example of a view page using scaffolding. Using the **Add
    New Scaffolded Item** option again, we will select **Razor View** (see *Figure
    8.5*):'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再举一个使用脚手架创建视图页面的例子。再次使用**添加新脚手架项**选项，我们将选择**Razor视图**（参见*图8.5*）：
- en: '![Figure 8.5 – The Razor View option in Add New Scaffolded Item'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.5 – 添加新脚手架项中的Razor视图选项'
- en: '](img/Figure_8.05_B17873.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_8.05_B17873.jpg)'
- en: Figure 8.5 – The Razor View option in Add New Scaffolded Item
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.5 – 添加新脚手架项中的Razor视图选项
- en: 'There are some templates that we can pick, including **Empty**. In this case,
    you should select **Create**, uncheck the **Use a layout page** option, and select
    the **WeatherForecast** model (included by default in the template), as shown
    in *Figure 8.6*:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以选择一些模板，包括**空**。在这种情况下，您应该选择**创建**，取消选中**使用布局页**选项，并选择默认包含在模板中的**WeatherForecast**模型（如*图8.6*所示）：
- en: '![Figure 8.6 – Configuration to create a new view page using scaffolding'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.6 – 使用脚手架创建新视图页面的配置'
- en: '](img/Figure_8.06_B17873.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_8.06_B17873.jpg)'
- en: Figure 8.6 – Configuration to create a new view page using scaffolding
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.6 – 使用脚手架创建新视图页面的配置
- en: 'We can complete the creation process by clicking the `Pages` folder. Visual
    Studio will analyze the model and then create a new form for each property in
    the model, considering the property type (see *Figure 8.7*):'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击`Pages`文件夹，我们可以完成创建过程。Visual Studio将分析模型，然后为模型中的每个属性创建一个新的表单，考虑到属性类型（参见*图8.7*）：
- en: '![Figure 8.7 – A view created using scaffolding and the WeatherForecast model'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.7 – 使用脚手架和WeatherForecast模型创建的视图'
- en: '](img/Figure_8.7_B17873.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_8.7_B17873.jpg)'
- en: Figure 8.7 – A view created using scaffolding and the WeatherForecast model
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.7 – 使用脚手架和WeatherForecast模型创建的视图
- en: 'In the `View.cshtml` file, we have a template for creating a new item from
    the **WeatherForecast** model. Scaffolding adds a label, an input, and span for
    control errors, as shown in this example:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在`View.cshtml`文件中，有一个从**WeatherForecast**模型创建新项的模板。脚手架添加了一个标签、一个输入和一个用于控制错误的span，如本例所示：
- en: '[PRE0]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Important Note
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Scaffolding is related to ASP.NET code; we can create controllers and views
    but not JavaScript components.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 脚手架与ASP.NET代码相关；我们可以创建控制器和视图，但不能创建JavaScript组件。
- en: Now you know how to use scaffolding in your projects and save time using some
    base templates provided by Visual Studio. Let's see another tool in Visual Studio
    that helps us to include JavaScript and CSS libraries in our projects.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经知道如何在项目中使用脚手架并使用Visual Studio提供的一些基本模板来节省时间。让我们看看Visual Studio中的另一个工具，它可以帮助我们在项目中包含JavaScript和CSS库。
- en: Installing JavaScript and CSS libraries
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装JavaScript和CSS库
- en: To start a project, we can use a template from Visual Studio to easily create
    a **proof of concept** (**POC**), demo, or base project, but there is a probability
    of the project growing in functionalities and services. In this scenario, we will
    have to include libraries to potentialize and optimize our project and extend
    the functions incorporated in the base template.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始一个项目，我们可以使用 Visual Studio 的模板来轻松创建一个 **概念验证**（**POC**）、演示或基础项目，但项目在功能和服务的增长方面存在可能性。在这种情况下，我们将需要包含库以潜在化和优化我们的项目，并扩展基础模板中集成的功能。
- en: 'To include a new JavaScript library in our SPAProject, you can open `ClientApp`
    folder. In the menu, you will find the **Client-Side Library…** option (see *Figure
    8.8*):'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要在我们的 SPAProject 中包含新的 JavaScript 库，您可以打开 `ClientApp` 文件夹。在菜单中，您将找到 **客户端库…**
    选项（见 *图 8.8*）：
- en: '![Figure 8.8 – The Client-Side Library… functionality in Visual Studio'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.8 – Visual Studio 中的客户端库…功能'
- en: '](img/Figure_8.08_B17873.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_8.08_B17873.jpg)'
- en: Figure 8.8 – The Client-Side Library… functionality in Visual Studio
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.8 – Visual Studio 中的客户端库…功能
- en: 'After clicking on this option, you will get a modal that allows you to include
    web libraries from different resources. By default, **cdnjs** is selected, but
    you can also choose the other sources supported by Visual Studio:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在点击此选项后，您将获得一个模态窗口，允许您从不同资源包含 Web 库。默认情况下，**cdnjs** 被选中，但您也可以选择 Visual Studio
    支持的其他来源：
- en: '![Figure 8.9 – Providers supported by Visual Studio 2022'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.9 – Visual Studio 2022 支持的提供者'
- en: '](img/Figure_8.09_B17873.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_8.09_B17873.jpg)'
- en: Figure 8.9 – Providers supported by Visual Studio 2022
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.9 – Visual Studio 2022 支持的提供者
- en: 'There are three public and trusted libraries for CSS and JavaScript that we
    can include in our projects. Visual Studio has support for different library sources;
    let''s review them:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在项目中包含三个公开和受信任的 CSS 和 JavaScript 库。Visual Studio 支持不同的库来源；让我们来回顾一下：
- en: '**cdnjs**: Fast and reliable content delivery for an open source library supported
    by Cloudflare'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**cdnjs**: Cloudflare 支持的开源库的快速可靠的内容分发'
- en: '**filesystem**: Custom packages in our local system'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**filesystem**: 我们本地系统中的自定义包'
- en: '**jsdelivr**: Free content delivery network integrated with GitHub and npm'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**jsdelivr**: 集成 GitHub 和 npm 的免费内容分发网络'
- en: '`libman.json` file manually, include the libraries in the json file, and then
    install them using Visual Studio. For more information, you can check [https://docs.microsoft.com/aspnet/core/client-side/libman/libman-vs](https://docs.microsoft.com/aspnet/core/client-side/libman/libman-vs).'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动包含 `libman.json` 文件，在 json 文件中包含库，然后使用 Visual Studio 安装它们。有关更多信息，您可以在 [https://docs.microsoft.com/aspnet/core/client-side/libman/libman-vs](https://docs.microsoft.com/aspnet/core/client-side/libman/libman-vs)
    查看文档。
- en: To analyze how Visual Studio adds a library to your project, you should select
    **cdnjs** and search by **bootstrap.** Bootstrap is a powerful library to create
    web interfaces easily using CSS classes. For more information, you can check the
    official documentation and quick-start guides at [https://getbootstrap.com/](https://getbootstrap.com/).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要分析 Visual Studio 如何将库添加到您的项目中，您应该选择 **cdnjs** 并通过 **bootstrap.** Bootstrap
    是一个强大的库，可以轻松使用 CSS 类创建 Web 接口。有关更多信息，您可以在 [https://getbootstrap.com/](https://getbootstrap.com/)
    查看官方文档和快速入门指南。
- en: 'Once you start typing, Visual Studio will suggest a list of libraries to which
    the written keyword is related (see *Figure 8.10*):'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦开始输入，Visual Studio 将建议与输入的键词相关的库列表（见 *图 8.10*）：
- en: '![Figure 8.10 – Libraries suggested by Visual Studio'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.10 – Visual Studio 推荐的库'
- en: '](img/Figure_8.10_B17873.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_8.10_B17873.jpg)'
- en: Figure 8.10 – Libraries suggested by Visual Studio
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.10 – Visual Studio 推荐的库
- en: 'After selecting `bootstrap@5.1.3` (see *Figure 8.11*). You can choose all the
    components associated with the library, but normally you only use the minify version.
    You can select only the files that you need, using the `bootstrap.min.js` file,
    which is the only file required to use this library:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择 `bootstrap@5.1.3`（见 *图 8.11*）之后。您可以选择与库关联的所有组件，但通常您只使用精简版本。您可以使用 `bootstrap.min.js`
    文件选择所需的文件，这是使用此库所需的唯一文件：
- en: '![Figure 8.11 – The Bootstrap library selected and the bootstrap.min.js file
    picked'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.11 – 选择的自定义库和 bootstrap.min.js 文件'
- en: '](img/Figure_8.11_B17873.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_8.11_B17873.jpg)'
- en: Figure 8.11 – The Bootstrap library selected and the bootstrap.min.js file picked
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.11 – 选择的自定义库和 bootstrap.min.js 文件
- en: Now, you can click on **Install** to include Bootstrap in our project.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以通过点击 **安装** 将 Bootstrap 包含到我们的项目中。
- en: 'After installing this library, you will see a new folder that contains all
    the files related to Bootstrap in the `ClientApp` folder. Also, you will see a
    new file called `libman.json` that contains the libraries installed in the project
    using Visual Studio:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 安装此库后，你将在 `ClientApp` 文件夹中看到一个包含所有与 Bootstrap 相关文件的新文件夹。此外，你还将看到一个名为 `libman.json`
    的新文件，该文件包含使用 Visual Studio 在项目中安装的库：
- en: '![Figure 8.12 – The Bootstrap library added in SPAProject'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.12 – 在 SPAProject 中添加的 Bootstrap 库'
- en: '](img/Figure_8.12_B17873.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_8.12_B17873.jpg)'
- en: Figure 8.12 – The Bootstrap library added in SPAProject
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.12 – 在 SPAProject 中添加的 Bootstrap 库
- en: This file helps Visual Studio to get the libraries from the servers when the
    project doesn't have the files for these libraries in the repository.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件帮助 Visual Studio 在项目仓库中没有这些库的文件时从服务器获取库。
- en: Visual Studio will execute all the processes automatically and create the `libman.json`
    file, where we can see the version of each library and the destination folder
    in the project.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 将自动执行所有过程并创建 `libman.json` 文件，我们可以在此文件中看到每个库的版本和项目中的目标文件夹。
- en: You now know how to include JavaScript and CSS libraries in your project using
    the different options supported by Visual Studio. Let's learn how to debug JavaScript
    code in Visual Studio to find and resolve issues quickly in the development process.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在知道如何使用 Visual Studio 支持的不同选项将 JavaScript 和 CSS 库包含到你的项目中。让我们学习如何在 Visual
    Studio 中调试 JavaScript 代码，以便在开发过程中快速找到并解决问题。
- en: Debugging in JavaScript
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaScript 调试
- en: We must debug a project when there is strange behavior, an issue, or a blocker
    in our application. Visual Studio supports debugging for many programming languages,
    including JavaScript. This is a great feature, given that we can debug the frontend
    side (for example, with JavaScript) and the backend side (for example, with C#)
    using the same IDE.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们的应用程序出现异常行为、问题或阻塞时，我们必须调试项目。Visual Studio 支持多种编程语言的调试，包括 JavaScript。考虑到我们可以使用相同的
    IDE 调试前端（例如，使用 JavaScript）和后端（例如，使用 C#），这是一个很棒的功能。
- en: 'To debug JavaScript and TypeScript code using Visual Studio, we need to check
    the **Script Debugging (Enabled)** option. This option is on the execution menu
    of the project:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Visual Studio 调试 JavaScript 和 TypeScript 代码，我们需要检查 **脚本调试（启用）** 选项。此选项位于项目的执行菜单中：
- en: '![Figure 8.13 – The Script Debugging (Enabled) option in the project execution
    menu'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.13 – 项目执行菜单中的脚本调试（启用）选项'
- en: '](img/Figure_8.13_B17873.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_8.13_B17873.jpg)'
- en: Figure 8.13 – The Script Debugging (Enabled) option in the project execution
    menu
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.13 – 项目执行菜单中的脚本调试（启用）选项
- en: 'Then, we can run the project in debug mode, but before that, we need to add
    a break to inspect the code. Navigate to `ClientApp` | `src` | `components` |
    `Counter.js` and create a new breakpoint in line number 13 (see *Figure 8.14*):'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以在调试模式下运行项目，但在那之前，我们需要添加一个断点来检查代码。导航到 `ClientApp` | `src` | `components`
    | `Counter.js` 并在行号 13 处创建一个新的断点（见 *图 8.14*）：
- en: '![Figure 8.14 – A breakpoint in the incrementCounter method inside Counter.js'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.14 – Counter.js 内 incrementCounter 方法的断点'
- en: '](img/Figure_8.14_B17873.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_8.14_B17873.jpg)'
- en: Figure 8.14 – A breakpoint in the incrementCounter method inside Counter.js
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.14 – Counter.js 内 incrementCounter 方法的断点
- en: 'Now, execute the project using the option in the banner or press *F5* and then
    navigate to the counter module. Once you click on `incrementCounter` method in
    JavaScript. In *Figure 8.15*, you can see this expected behavior:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用横幅中的选项或按 *F5* 执行项目，然后导航到计数器模块。一旦你点击 JavaScript 中的 `incrementCounter` 方法。在
    *图 8.15* 中，你可以看到这个预期行为：
- en: '![Figure 8.15 – The debugging process in the incrementCounter method with the
    breakpoint'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.15 – 在 incrementCounter 方法中设置断点时的调试过程'
- en: '](img/Figure_8.15_B17873.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_8.15_B17873.jpg)'
- en: Figure 8.15 – The debugging process in the incrementCounter method with the
    breakpoint
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.15 – 在 incrementCounter 方法中设置断点时的调试过程
- en: 'At this point, we can inspect the variables in this file – for example, in
    *Figure 8.16*, we can see the values of `Counter.name` and `currentCount`:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们可以检查此文件中的变量——例如，在 *图 8.16* 中，我们可以看到 `Counter.name` 和 `currentCount`
    的值：
- en: '![Figure 8.16 – The inspection of Counter.name and currentCount during debugging'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.16 – 调试期间检查 Counter.name 和 currentCount'
- en: '](img/Figure_8.16_B17873.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_8.16_B17873.jpg)'
- en: Figure 8.16 – The inspection of Counter.name and currentCount during debugging
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.16 – 调试期间检查 Counter.name 和 currentCount
- en: '`Counter.name` equals `"Counter"` and `currentCount` equals `0`. After executing
    the `incrementCounter` async method, the variable in the `currentCount` state
    will have a value of `1`.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`Counter.name` 等于 `"Counter"`，`currentCount` 等于 `0`。在执行 `incrementCounter`
    异步方法后，`currentCount` 状态中的变量将具有 `1` 的值。'
- en: 'You can use the options to execute the lines of code step by step related to
    the workflow for inspecting the variables, as shown in *Figure 8.17*:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用选项来执行与检查变量的工作流程相关的代码行，如图 *8.17* 所示：
- en: '![Figure 8.17 – Step Over and tools for the debug process'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.17 – 调试过程步骤覆盖和工具'
- en: '](img/Figure_8.17_B17873.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 8.17_B17873.jpg](img/Figure_8.17_B17873.jpg)'
- en: Figure 8.17 – Step Over and tools for the debug process
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.17 – 调试过程步骤覆盖和工具
- en: You can now debug JavaScript code in Visual Studio and use the same tools and
    actions that we reviewed in [*Chapter 5*](B17873_05_ePub.xhtml#_idTextAnchor060),
    *Debugging and Compiling Your Projects*.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以在 Visual Studio 中调试 JavaScript 代码，并使用我们在 [*第 5 章*](B17873_05_ePub.xhtml#_idTextAnchor060)
    中回顾的相同工具和操作，*调试和编译你的项目*。
- en: In the next section, we will review a new functionality in Visual Studio 2022
    to refresh the UI after performing changes in the code.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将回顾 Visual Studio 2022 中的一个新功能，该功能在代码中进行更改后刷新 UI。
- en: Hot Reload
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 热重载
- en: 'For many years, C# developers were waiting for a feature that would allow them
    to see real-time changes in web applications. The big challenge with this was
    the naturalness of C# as a programming language because C# is a compiled language.
    A compiled language needs to be converted to a low-level language for use by an
    interpreter, and this process consumes time and resources in a machine. In *Figure
    8.18*, you can see a new flame-shaped icon. After clicking on this icon, you will
    refresh the changes in the browser, or you can select the **Hot Reload on File
    Save** option to reload a web application automatically after saving changes:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，C# 开发者一直在等待一个功能，允许他们看到 Web 应用程序中的实时更改。这个挑战的难点在于 C# 作为一种编程语言的直观性，因为 C# 是一种编译型语言。编译型语言需要转换为低级语言，以便由解释器使用，这个过程在机器上消耗时间和资源。在
    *图 8.18* 中，你可以看到一个新的火焰形状图标。点击此图标后，你将在浏览器中刷新更改，或者你可以选择**在文件保存时热重载**选项，在保存更改后自动重新加载
    Web 应用程序：
- en: '![Figure 8.18 – The Hot Reload option in Visual Studio enabled during the execution'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.18 – Visual Studio 执行期间启用的热重载选项'
- en: '](img/Figure_8.18_B17873.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 8.18_B17873.jpg](img/Figure_8.18_B17873.jpg)'
- en: Figure 8.18 – The Hot Reload option in Visual Studio enabled during the execution
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.18 – Visual Studio 执行期间启用的热重载选项
- en: 'The Hot Reload feature has some settings that we can modify according to our
    needs. You can access the features using the **Settings** option when the Hot
    Reload button is enabled, or you can navigate to **Tools** | **Options** | **Debugging**
    | **.NET / C++ Hot Reload**:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 热重载功能有一些设置，我们可以根据需要修改。当启用热重载按钮时，你可以使用**设置**选项访问功能，或者你可以导航到**工具** | **选项** |
    **调试** | **.NET / C++ 热重载**：
- en: '![Figure 8.19 – The settings for Hot Reload in Visual Studio 2022'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.19 – Visual Studio 2022 中热重载的设置'
- en: '](img/Figure_8.19_B17873.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 8.19_B17873.jpg](img/Figure_8.19_B17873.jpg)'
- en: Figure 8.19 – The settings for Hot Reload in Visual Studio 2022
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.19 – Visual Studio 2022 中热重载的设置
- en: 'Let''s review these options:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾这些选项：
- en: '**Enable Hot Reload and Edit and Continue when debugging**: This option enables
    Hot Reload in debug mode.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在调试时启用热重载和继续编辑**：此选项在调试模式下启用热重载。'
- en: '**Enable Hot Reload when starting without debugging**: This option enables
    hot reload without debugging.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在启动时启用热重载**：此选项启用热重载而不进行调试。'
- en: '**Apply Hot Reload on File Save**: After performing a change in any file and
    saving it, the application will reload.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在文件保存时应用热重载**：在任意文件中进行更改并保存后，应用程序将重新加载。'
- en: Note
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: If you do not enable the **Apply Hot Reload on File Save** option, you need
    to use the hot reload button to refresh the web application and see the changes.
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你没有启用**在文件保存时应用热重载**选项，你需要使用热重载按钮来刷新 Web 应用程序并查看更改。
- en: 'To test this functionality in Visual Studio, you can run a project by pressing
    *F5* or using the option in the `NavMenu.js` file and change the name of `NavLink`
    from `Counter` to `Counter Module`:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Visual Studio 中测试此功能，你可以通过按 *F5* 或使用 `NavMenu.js` 文件中的选项来运行项目，并将 `NavLink`
    的名称从 `Counter` 更改为 `Counter Module`：
- en: '![Figure 8.20 – The Counter Module NavLink in NavMenu.js'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.20 – NavMenu.js 中的 Counter Module NavLink'
- en: '](img/Figure_8.20_B17873.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 8.20_B17873.jpg](img/Figure_8.20_B17873.jpg)'
- en: Figure 8.20 – The Counter Module NavLink in NavMenu.js
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.20 – NavMenu.js 中的 Counter Module NavLink
- en: 'After saving the file using *Ctrl* + *S* or the **File** - > **Save All** menu,
    you will see the change in real time in the web browser. Check the changes shown
    in *Figure 8.21*:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用*Ctrl* + *S*或**文件** - > **全部保存**菜单保存文件后，你将在网页浏览器中实时看到更改。检查*图8.21*中显示的更改：
- en: '![Figure 8.21 – Checking the changes in the UI related to Counter Module'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.21 – 检查与计数器模块相关的UI更改'
- en: '](img/Figure_8.21_B17873.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.21 – 检查与计数器模块相关的UI更改'
- en: Figure 8.21 – Checking the changes in the UI related to Counter Module
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.21 – 检查与计数器模块相关的UI更改
- en: Important Note
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The wait time to see the changes in the browser depends on the project size
    and machine resources. Normally, it doesn't take more than 2 or 3 seconds.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器中看到更改的等待时间取决于项目大小和机器资源。通常情况下，这不会超过2或3秒。
- en: We don't need to include a library in the project or install an extension in
    Visual Studio to use this amazing functionally. Hot reload is supported for all
    the web projects, including ASP.NET MVC, SPA with React and Angular (such as our
    SPAProject), and Blazor.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不需要在项目中包含库或在Visual Studio中安装扩展来使用这个惊人的功能。热重载支持所有Web项目，包括ASP.NET MVC、使用React和Angular的SPA（如我们的SPAProject）和Blazor。
- en: You can now use Hot Reload in your web project to improve your productivity
    when you are coding and need to test the changes in the UI quickly.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以在你的Web项目中使用热重载来提高你在编码时测试UI更改的效率。
- en: This brings us to the end of this chapter. Let's now review what we learned.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 这就结束了本章的内容。现在，让我们回顾一下我们学到了什么。
- en: Summary
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Now, you are ready to take advantage of the web tools in Visual Studio to code
    faster and improve the quality of your code. With scaffolding, we have the possibility
    to create components for an MVC model easily. Visual Studio generates the code
    using a template with simple sample code.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经准备好利用Visual Studio中的Web工具来加速编码并提高代码质量。通过脚手架，我们可以轻松地为MVC模型创建组件。Visual Studio使用模板和简单的示例代码生成代码。
- en: You also learned how to include JavaScript and CSS libraries using the tools
    included in Visual Studio. Using these tools, you know how to select the right
    version of the library and upgrade dependencies in the future.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 你还学习了如何使用Visual Studio中包含的工具来包含JavaScript和CSS库。使用这些工具，你知道如何选择库的正确版本，并在将来升级依赖项。
- en: If there is an issue or strange behavior in the code, you can now use JavaScript
    debugging to analyze the code deeper and execute the code step by step, inspecting
    the values of the variables and workflows.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果代码中存在问题或异常行为，你现在可以使用JavaScript调试来深入分析代码，并逐步执行代码，检查变量的值和工作流程。
- en: Finally, you learned how to use hot reload in Visual Studio 2022 to refresh
    the application when you are debugging and see the changes performed in the code
    in real time.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你学习了如何在Visual Studio 2022中使用热重载来在调试时刷新应用程序，并实时查看代码中的更改。
- en: In [*Chapter 9*](B17873_09_ePub.xhtml#_idTextAnchor108), *Styling and Cleanup
    Tools*, we will continue learning about tools included in Visual Studio that improve
    our experience working with styles and CSS. We will also use some tools to clean
    up code by choosing a specific file or a whole project.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第9章*](B17873_09_ePub.xhtml#_idTextAnchor108)，“样式和清理工具”，我们将继续学习Visual Studio中包含的、用于改进我们处理样式和CSS体验的工具。我们还将使用一些工具通过选择特定文件或整个项目来清理代码。
