["```cs\npublic class Airport {\n  public string Country { get; set; }\n  public string Code { get; set; }\n  public string Name { get; set; }\n  // Non-relevant code omitted...\n}\n```", "```cs\npublic class Airport {\n  public required string Country { get; set; }\n  public required string Code { get; set; }\n  public required string Name { get; set; }\n  // Non-relevant code omitted...\n}\n```", "```cs\npublic override bool Equals(object? obj) {\n  Airport? otherAirport = obj as Airport;\n  if (otherAirport == null)\n    return false;\n  string otherName = otherAirport.Name;\n  string otherCountry = otherAirport.Country;\n  string otherCode = otherAirport.Code;\n  return Country == otherCountry &&\n          Code == otherCode;\n}\n```", "```cs\nif (obj is not Airport otherAirport)\n      return false;\n```", "```cs\nstring otherName = otherAirport.Name;\nstring otherCountry = otherAirport.Country;\nstring otherCode = otherAirport.Code;\nreturn Country == otherCountry &&\n        Code == otherCode;\n```", "```cs\npublic class Flight {\n  public string BuildMessage(string id, string status) {\n    return $\"Flight {id} is {status}\";\n  }\n}\n```", "```cs\nusing System.Diagnostics.CodeAnalysis;\nnamespace Packt.CloudySkiesAir.Chapter12.Flight;\npublic class Flight {\n  [SuppressMessage(\"Performance\",\n    \"CA1822:Mark members as static\",\n    Justification = \"Intend to work with instance data in future        release\")]\n  public string BuildMessage(string id, string status) {\n    return $\"Flight {id} is {status}\";\n  }\n}\n```", "```cs\npublic static class DateHelpers {\n  public static string Format(this DateTime time) {\n    return time.ToString(\"ddd MMM dd HH:mm tt\");\n  }\n}\n```", "```cs\npublic class CharterFlightInfo : FlightInfoBase {\n  public List<ICargoItem> Cargo { get; } = new();\n  public override string BuildFlightIdentifier() {\n    StringBuilder sb = new(base.BuildFlightIdentifier());\n    if (Cargo.Count != 0) {\n      sb.Append(\" carrying \");\n      foreach (var cargo in Cargo) {\n        sb.Append($\"{cargo}, \");\n      }\n    }\n    return sb.ToString();\n  }\n}\n```", "```cs\nsb.Append(CultureInfo.InvariantCulture, $\"{cargo}, \");\n```", "```cs\nCultureInfo culture = CultureInfo.InvariantCulture;\nreturn time.ToString(\"ddd MMM dd HH:mm tt\", culture);\n```"]