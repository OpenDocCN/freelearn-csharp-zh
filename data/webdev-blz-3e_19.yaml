- en: '19'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '19'
- en: Where to Go from Here
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从哪里开始
- en: The book is coming to an end, and I want to leave you with some of the things
    we have encountered while running Blazor in production ever since it was in preview.
    We will also talk about where to go from here.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书即将结束，我想让你记住我们在 Blazor 预览阶段以来在生产环境中遇到的一些事情。我们还将讨论从这里开始的方向。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Take-aways from running Blazor in production
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行 Blazor 的生产经验总结
- en: The next steps
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下一步
- en: Take-aways from running Blazor in production
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行 Blazor 的生产经验总结
- en: Since Blazor was in preview, we have been running Blazor Server in production.
    In most cases, everything has run without issues. Occasionally, we have encountered
    a few problems, and I will share our take-aways from this with you in this section.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Blazor 处于预览阶段，我们一直在生产环境中运行 Blazor 服务器。在大多数情况下，一切运行良好，没有问题。偶尔，我们遇到了一些问题，我将在本节中与您分享我们的经验总结。
- en: 'We will look at the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将查看以下内容：
- en: Solving memory problems
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决内存问题
- en: Solving concurrency problems
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决并发问题
- en: Solving errors
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决错误
- en: Old browsers
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 旧浏览器
- en: These are some of the things we ran into, and we have solved them all in a way
    that works for us.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们遇到的一些问题，我们已经以对我们有效的方式解决了它们。
- en: Solving memory problems
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决内存问题
- en: Our latest upgrade added many users and, with that, a bigger load on the server.
    The server manages memory quite well, but with this release, the backend system
    was a bit slow, so users would press *F5* to reload a page. Then, the circuit
    would disconnect and a new circuit would be created. The old circuit would wait
    for the user to connect to the server again for 3 minutes (by default).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最新的升级增加了许多用户，随之而来的是服务器负载的增加。服务器管理内存相当好，但在这个版本中，后端系统有点慢，所以用户会按 *F5* 重新加载页面。然后，电路会断开，并创建一个新的电路。旧的电路会等待用户再次连接到服务器，默认时间为
    3 分钟。
- en: The user would then have a new circuit and would never connect to the old circuit
    again, but for three minutes, the user’s state would still take up memory. This
    is probably not a problem for most applications, but we are loading a lot of data
    into memory—the data, the render tree, and everything surrounding that will be
    kept in memory.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，用户将有一个新的电路，并且永远不会再次连接到旧的电路，但在这三分钟内，用户的会话状态仍然会占用内存。这可能对大多数应用程序来说不是问题，但我们正在将大量数据加载到内存中——数据、渲染树以及与之相关的所有内容都将保留在内存中。
- en: So, what can we learn from that? Blazor is a single-page application. Reloading
    the page is like restarting an app, which means we should always make sure to
    add the ability to update the data from within the page (if that makes sense for
    the application). We could also update the data as it changes, as we did in *Chapter
    11*, *Managing State – Part 2*.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们能从中学到什么呢？Blazor 是一个单页应用程序。重新加载页面就像重启应用程序一样，这意味着我们应该始终确保添加从页面内部更新数据的能力（如果这对应用程序有意义）。我们也可以像在
    *第 11 章*，*管理状态 – 第 2 部分* 中所做的那样，在数据变化时更新数据。
- en: In our case, we added more memory to the server and then made sure there were
    reload buttons in the UI that refresh the data without reloading the whole page.
    The ultimate goal is to add real-time updates that continuously update the UI
    when the data changes.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们这个案例中，我们给服务器增加了更多内存，并确保在用户界面中有重新加载按钮，这些按钮可以刷新数据而不重新加载整个页面。最终目标是添加实时更新，当数据发生变化时，持续更新用户界面。
- en: 'If adding more memory to the server isn’t an option, we can try to change the
    garbage collection from the server to the desktop. The .NET garbage collection
    has two modes:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果增加服务器的内存不是一个选择，我们可以尝试将垃圾回收从服务器改为桌面。.NET 垃圾回收有两个模式：
- en: '**Workstation** mode is optimized for running on a workstation that typically
    doesn’t have a lot of memory. It runs the garbage collection multiple times per
    second.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作站**模式针对在通常没有很多内存的工作站上运行进行了优化。它每秒运行垃圾回收多次。'
- en: '**Server** mode is optimized for servers where there is usually lots of memory
    and prioritizes speed, meaning it will only run the garbage collector every 2
    seconds.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务器**模式针对通常有很多内存的服务器进行了优化，优先考虑速度，这意味着它每 2 秒只会运行垃圾回收器一次。'
- en: 'The mode of the garbage collector can be set in the project file or the `runtimeconfig.json`
    file by changing the `ServerGarbageCollection` node:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 垃圾回收器的模式可以在项目文件或 `runtimeconfig.json` 文件中通过更改 `ServerGarbageCollection` 节点来设置：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Adding more memory is probably a better idea, though.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然增加内存可能是一个更好的主意。
- en: We have also noticed the importance of disposing of our database contexts. Make
    sure to use `IDbContextFactory` to create an instance of the data context and,
    when we are done, dispose of it by using the `Using` keyword.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也注意到了处理我们的数据库上下文的重要性。请确保使用 `IDbContextFactory` 创建数据上下文的实例，并在我们完成时，通过使用 `Using`
    关键字来释放它。
- en: Then the data context will only be available for a short time and then disposed
    of, freeing up memory fast.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，数据上下文将只短暂可用，然后被释放，快速释放内存。
- en: Solving concurrency problems
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决并发问题
- en: We have often run into problems where the data context was already in use and
    couldn’t access the database from two different threads.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们经常遇到数据上下文已经被使用，无法从两个不同的线程访问数据库的问题。
- en: This is solved by using `IDbContextFactory` and disposing of the data context
    when we are finished using it.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过使用 `IDbContextFactory` 并在我们完成使用数据上下文后释放它来解决。
- en: In a non-Blazor site, having multiple components to load at the same time is
    never a problem (because the web does one thing at a time), so the fact that Blazor
    can do multiple things at the same time is something we need to think about when
    we design our architecture.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在非 Blazor 网站中，同时加载多个组件永远不会是问题（因为网页一次只做一件事），所以 Blazor 能够同时做很多事情，这是我们设计架构时需要考虑的。
- en: Solving errors
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决错误
- en: 'Blazor usually gives us an error that is easy to understand, but in some rare
    cases, we do run into problems that are hard to figure out. We can add detailed
    errors to our circuit (for Blazor Server) by adding the following option in `Startup.cs`:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Blazor 通常会给出易于理解的错误，但在一些罕见的情况下，我们确实会遇到难以解决的问题。我们可以通过在 `Startup.cs` 中添加以下选项来向我们的电路（对于
    Blazor Server）添加详细的错误：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: By doing so, we will get more detailed errors. I don’t recommend using detailed
    errors in a production scenario, however. With that said, we have the setting
    turned on for an internal app in production because the internal users are briefed
    on it and understand how to handle it. It makes it easier for us to help our users,
    and the error message is only visible in the developer tools of the web browser
    and not in the interface of the user.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，我们将获得更详细的错误。然而，我不建议在生产环境中使用详细的错误。话虽如此，我们在生产中的内部应用程序中打开了此设置，因为内部用户已经接受了培训并了解如何处理它。这使得我们更容易帮助用户，并且错误消息仅在网页浏览器的开发者工具中可见，而不是在用户界面上可见。
- en: Old browsers
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 旧浏览器
- en: Some of our customers were running old browsers on old systems, and even though
    Blazor supports all major browsers, that support doesn’t include really old browsers.
    We ended up helping those customers upgrade to Edge or Chrome simply because we
    didn’t think they should be browsing the web using browsers that no longer receive
    security patches.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一些客户在旧系统上运行旧浏览器，尽管 Blazor 支持所有主流浏览器，但这种支持不包括真正旧的浏览器。我们最终帮助这些客户升级到 Edge 或 Chrome，仅仅是因为我们认为他们不应该使用不再接收安全补丁的浏览器浏览网页。
- en: Even our TV at home can run Blazor WebAssembly, so old browsers are probably
    not a big problem, but it can be worth thinking about when it comes to browser
    support. What browsers do we need/want to support?
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是我们家里的电视也能运行 Blazor WebAssembly，所以旧浏览器可能不是大问题，但在考虑浏览器支持时，这值得思考。我们需要/想要支持哪些浏览器？
- en: The next steps
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下一步
- en: At this point, we know the difference between Blazor Server and Blazor WebAssembly,
    and we know when to choose what, and picking one of them is not really that important.
    We know how to create reusable components, make APIs, manage state, and much more.
    But where do we go from here? What are the next steps?
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 到这个时候，我们已经知道了 Blazor Server 和 Blazor WebAssembly 之间的区别，也知道何时选择什么，选择其中一个并不是真的那么重要。我们知道如何创建可重用组件，制作
    API，管理状态，等等。但接下来我们该怎么办？下一步是什么？
- en: The community
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 社区
- en: The Blazor community is not as big as other frameworks but is growing fast.
    Many people share content with the community through blogs or videos. YouTube
    and PluralSight have a lot of tutorials and courses. Twitch has a growing amount
    of Blazor content, but it is not always easy to find in the vast content catalog.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Blazor 社区不如其他框架那么大，但发展迅速。许多人通过博客或视频与社区分享内容。YouTube 和 PluralSight 有很多教程和课程。Twitch
    上有越来越多的 Blazor 内容，但在庞大的内容目录中并不总是容易找到。
- en: 'There are a number of resources worth mentioning:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多值得提及的资源：
- en: '**Jimmy Engström** – I wouldn’t be much of a Blazor enthusiast if I didn’t
    make it into my own list. I talk about Blazor and throw in a pun here and there.
    When we stream, we do that using CodingAfterWork (see below). My blog has a lot
    of Blazor content and more to come: [https://engstromjimmy.com/](https://engstromjimmy.com/).
    X: `@EngstromJimmy`.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**吉米·恩斯特罗姆** – 如果我没有把我自己列入我的名单，我就不是一个大大的Blazor爱好者。我谈论Blazor，时不时地来点双关语。当我们直播时，我们使用CodingAfterWork（见下文）。我的博客有很多Blazor内容，还有更多即将到来：[https://engstromjimmy.com/](https://engstromjimmy.com/).
    X: `@EngstromJimmy`.'
- en: 'The **Blazm** component library that we have written can be found here: [http://blazm.net/](http://blazm.net/).
    There are many better grid components out there, but this shows how easy and yet
    complex a grid component can be.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们编写的**Blazm**组件库可以在[http://blazm.net/](http://blazm.net/)找到。虽然有许多更好的网格组件，但这也展示了网格组件既简单又复杂。
- en: '**Coding after Work** has many episodes of our podcast and our stream covering
    Blazor; please follow us on social media: [http://codingafterwork.com/FindUs](http://codingafterwork.com/FindUs).'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作后编码**在我们的播客和直播中有很多关于Blazor的内容；请在我们的社交媒体上关注我们：[http://codingafterwork.com/FindUs](http://codingafterwork.com/FindUs).'
- en: '**Daniel Roth** is the PM for Blazor. Amazing to listen to, he has been a guest
    on our podcast. Search for him on YouTube. X: `@danroth27`.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**丹尼尔·罗思**是Blazor的产品经理。他非常值得聆听，曾作为嘉宾出现在我们的播客中。在YouTube上搜索他。X: `@danroth27`.'
- en: '**Steve Sanderson** is the guy who invented Blazor; he is definitely worth
    a follow. He continues to do groundbreaking things in his talks; search for him
    on YouTube. Make sure to see his NDC Oslo talk where he shows Blazor for the first
    time. X: `@stevensanderson`.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**史蒂夫·桑德森**是Blazor的发明者；他绝对值得关注。他在演讲中继续做一些开创性的工作；在YouTube上搜索他。确保观看他在NDC奥斯陆的演讲，他在那里首次展示了Blazor。X:
    `@stevensanderson`.'
- en: '**Awesome-Blazor** has a huge list of Blazor-related links and resources that
    can be found here: [https://github.com/AdrienTorris/awesome-blazor](https://github.com/AdrienTorris/awesome-blazor).'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Awesome-Blazor**有一个包含大量Blazor相关链接和资源的巨大列表，可以在[https://github.com/AdrienTorris/awesome-blazor](https://github.com/AdrienTorris/awesome-blazor)找到。'
- en: '**Jeff Fritz** shares Blazor knowledge (among other things) on Twitch: [https://www.twitch.tv/csharpfritz](https://www.twitch.tv/csharpfritz).
    X: `@csharpfritz`.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**杰夫·弗里茨**在Twitch上分享Blazor知识（以及其他内容）：[https://www.twitch.tv/csharpfritz](https://www.twitch.tv/csharpfritz).
    X: `@csharpfritz`.'
- en: '**Chris Sainty** is a fellow author and has made many really amazing packages
    for Blazor. He has lots of content on his blog: [https://chrissainty.com/](https://chrissainty.com/).
    X: `@chris_sainty`.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**克里斯·圣蒂**是一位同行作者，他为Blazor制作了许多真正令人惊叹的包。他在博客上有很多内容：[https://chrissainty.com/](https://chrissainty.com/).
    X: `@chris_sainty`.'
- en: '**Carl Franklin** has done a lot of Blazor videos on [https://BlazorTrain.com/](https://BlazorTrain.com/).
    X: `@carlfranklin`.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**卡尔·富兰克林**在[https://BlazorTrain.com/](https://BlazorTrain.com/)上制作了许多Blazor视频。X:
    `@carlfranklin`.'
- en: '**John Hilton** has a lot of Blazor content. You can find him here: [https://jonhilton.net/](https://jonhilton.net/).
    X: `@jonhilt`.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**约翰·希尔顿**有很多Blazor内容。你可以在[https://jonhilton.net/](https://jonhilton.net/)找到他。X:
    `@jonhilt`.'
- en: '**Patrick God** has a lot of great content on his YouTube channel: [https://www.youtube.com/@PatrickGod](mailto:https://www.youtube.com/@PatrickGod).
    X: `@_PatrickGod`.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**帕特里克·戈德**在他的YouTube频道上有许多精彩内容：[https://www.youtube.com/@PatrickGod](mailto:https://www.youtube.com/@PatrickGod).
    X: `@_PatrickGod`.'
- en: '**David Pine** is a fellow author and the creator of Blazorators and can be
    found here: [https://github.com/IEvangelist/blazorators](https://github.com/IEvangelist/blazorators).
    X: `@davidpine7`.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大卫·派恩**是一位同行作者，也是Blazorators的创造者，可以在[https://github.com/IEvangelist/blazorators](https://github.com/IEvangelist/blazorators)找到他。X:
    `@davidpine7`.'
- en: '**Peter Morris** is the creator of Fluxor and is a great person to follow.
    X: `@MrPeterLMorris`'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**彼得·莫里斯**是Fluxor的创造者，是一位值得关注的伟大人物。X: `@MrPeterLMorris`'
- en: '**Michael Washington** is a fellow author, and we can find him here: [https://adefwebserver.com/](https://adefwebserver.com/).
    X: `@ADefWebserver`.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**迈克尔·华盛顿**是一位同行作者，我们可以在[https://adefwebserver.com/](https://adefwebserver.com/)找到他。X:
    `@ADefWebserver`.'
- en: '**Ed Charbeneau** always has great content. Make sure to follow him. [https://edcharbeneau.com/](https://edcharbeneau.com/)
    [https://www.twitch.tv/edcharbeneau](https://www.twitch.tv/edcharbeneau), [https://www.youtube.com/edwardcharbeneau](https://www.youtube.com/edwardcharbeneau),
    [https://www.twitch.tv/codeitlive](https://www.twitch.tv/codeitlive), [https://www.youtube.com/@telerik](mailto:https://www.youtube.com/@telerik).
    X: `@EdCharbeneau`.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ed Charbeneau** 总是能提供优质的内容。请务必关注他。[https://edcharbeneau.com/](https://edcharbeneau.com/)
    [https://www.twitch.tv/edcharbeneau](https://www.twitch.tv/edcharbeneau)，[https://www.youtube.com/edwardcharbeneau](https://www.youtube.com/edwardcharbeneau)，[https://www.twitch.tv/codeitlive](https://www.twitch.tv/codeitlive)，[https://www.youtube.com/@telerik](mailto:https://www.youtube.com/@telerik)。X:
    `@EdCharbeneau`。'
- en: '**Eric Johansson** is a regular on Twitch, showing his projects and modernizing
    his .NET Framework apps to a more modern platform [https://www.twitch.tv/thindal](https://www.twitch.tv/thindal)
    X: `@EricJohansson`.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Eric Johansson** 是 Twitch 上的常客，展示他的项目并将他的 .NET Framework 应用现代化到一个更现代的平台 [https://www.twitch.tv/thindal](https://www.twitch.tv/thindal)
    X: `@EricJohansson`。'
- en: '**Egil Hansen** is the creator of bUnit. We can find him here: [https://egilhansen.com/about/](https://egilhansen.com/about/).
    X: `@egilhansen`.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Egil Hansen** 是 bUnit 的创造者。我们可以在以下链接找到他：[https://egilhansen.com/about/](https://egilhansen.com/about/)。X:
    `@egilhansen`。'
- en: '**Sam Basu** is a great person to follow when it comes to .NET MAUI content.
    [https://www.twitch.tv/codeitlive](https://www.twitch.tv/codeitlive) and [https://www.youtube.com/@telerik](mailto:https://www.youtube.com/@telerik).
    X: `@samidip`.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Sam Basu** 是关注 .NET MAUI 内容时的一个优秀人选。[https://www.twitch.tv/codeitlive](https://www.twitch.tv/codeitlive)
    和 [https://www.youtube.com/@telerik](mailto:https://www.youtube.com/@telerik)。X:
    `@samidip`。'
- en: '**Junichi Sakamoto** has made loads of fantastic Blazor libraries, everything
    from connecting to gamepads to translation and pre-rendering. You can find his
    projects here: [https://github.com/jsakamoto](https://github.com/jsakamoto). X:
    `@jsakamoto`.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Junichi Sakamoto** 制作了大量的出色 Blazor 库，从连接游戏手柄到翻译和预渲染，应有尽有。你可以在以下链接找到他的项目：[https://github.com/jsakamoto](https://github.com/jsakamoto)。X:
    `@jsakamoto`。'
- en: '**Blazor University** has a lot of training material and is a great resource
    to learn more: [https://blazor-university.com/](https://blazor-university.com/).'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Blazor University** 提供了大量的培训材料，是学习更多知识的绝佳资源：[https://blazor-university.com/](https://blazor-university.com/)。'
- en: '**Gerald Versluis** has plenty of content on his YouTube channel related to
    all kinds of .NET things: [https://youtube.com/GeraldVersluis](https://youtube.com/GeraldVersluis).
    X: `@jfversluis`.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Gerald Versluis** 在他的 YouTube 频道上提供了大量与各种 .NET 相关的内容：[https://youtube.com/GeraldVersluis](https://youtube.com/GeraldVersluis)。X:
    `@jfversluis`。'
- en: '**Maddy Montaquilla** is amazing to watch; search for her on YouTube to watch
    her videos. X: `@maddymontaquila`.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Maddy Montaquilla** 的视频非常值得观看；在 YouTube 上搜索她来观看她的视频。X: `@maddymontaquila`。'
- en: '**James Montemagno** has a great YouTube channel with loads of .NET MAUI content:
    [https://www.youtube.com/JamesMontemagno](https://www.youtube.com/JamesMontemagno).
    X: `@JamesMontemagno`.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**James Montemagno** 拥有一个内容丰富的 YouTube 频道，其中包含大量的 .NET MAUI 内容：[https://www.youtube.com/JamesMontemagno](https://www.youtube.com/JamesMontemagno)。X:
    `@JamesMontemagno`。'
- en: '**Daniel Hindrikes** has some great .NET MAUI content on this YouTube channel:
    [https://www.youtube.com/@DanielHindrikes](mailto:https://www.youtube.com/@DanielHindrikes).
    X: `@hindrikes`.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Daniel Hindrikes** 在这个 YouTube 频道上提供了一些关于 .NET MAUI 的优质内容：[https://www.youtube.com/@DanielHindrikes](mailto:https://www.youtube.com/@DanielHindrikes)。X:
    `@hindrikes`。'
- en: The components
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组件
- en: Most third-party component vendors, such as Progress Telerik, DevExpress, Syncfusion,
    Radzen, ComponentOne, and many more, have invested in Blazor. Some cost money
    and some are free. There are also a lot of open-source component libraries that
    we can use.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数第三方组件供应商，如 Progress Telerik、DevExpress、Syncfusion、Radzen、ComponentOne 以及更多，都投资了
    Blazor。有些需要付费，有些是免费的。还有很多开源组件库供我们使用。
- en: 'This question comes up a lot: *I am new to Blazor. What third-party vendor
    should I use?* My recommendation is to try to figure out what you need before
    investing in a library (either in terms of money or time).'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题经常出现：*我是 Blazor 的初学者。我应该使用哪个第三方供应商？* 我的建议是在投资库（无论是金钱还是时间）之前，先尝试弄清楚你需要什么。
- en: Many vendors can do all the things we need, but in some cases, it will take
    a bit more effort to make an app work. We started to work on a grid component
    ourselves, and after a while, we decided to make it open-source.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 许多供应商可以完成我们所需要的一切，但在某些情况下，使应用程序工作可能需要更多的努力。我们开始自己开发一个网格组件，过了一段时间后，我们决定将其开源。
- en: This is how Blazm was born. We had a few special requirements (nothing fancy),
    but they required us to write a lot of code over and over again to make it work
    in a third-party vendor component.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是Blazm的诞生。我们有一些特殊的要求（并不复杂），但它们要求我们反复编写大量代码，以便在第三方供应商组件中使其工作。
- en: We learned so much from writing our component, which is really easy to do. My
    recommendation is not always to write your own components. It is much better to
    focus on the actual business problem you are trying to solve.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 通过编写我们的组件，我们学到了很多，这实际上是非常容易做到的。我的建议并不总是要编写自己的组件。专注于你试图解决的真正业务问题会更好。
- en: For us, building a pretty advanced grid component taught us so much about the
    inner workings of Blazor.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们来说，构建一个相当高级的网格组件教会了我们很多关于Blazor内部工作原理的知识。
- en: Think about what you need and try out the different vendors to see what works
    best for you. Perhaps it would be better to build the component yourself, at least
    in the beginning, to learn more about Blazor.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 想想你需要什么，尝试不同的供应商以查看哪个最适合你。也许一开始自己构建组件会更好，这样你可以更多地了解Blazor。
- en: 'But always look at your code. If you repeat the same code, wrap it in a component.
    Always think: *Could this be a reusable component?*'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 但始终关注你的代码。如果你重复相同的代码，将其封装在组件中。始终思考：*这能成为一个可重用的组件吗？*
- en: We currently use a component vendor, but we wrap all the components in one of
    our components. This way, it is easy to set defaults and add logic that is right
    for us, just as we have learned throughout the book.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们目前使用一个组件供应商，但我们把所有组件都封装在我们自己的一个组件中。这样，设置默认值和添加适合我们的逻辑就变得很容易，就像我们在整本书中学到的那样。
- en: Summary
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we examined some of the challenges we have encountered while
    running Blazor in production and discussed where to go from here.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们检查了在生产环境中运行Blazor时遇到的一些挑战，并讨论了下一步该怎么做。
- en: Throughout the book, we have learned how Blazor works and how to create basic
    and advanced components. We implemented security with both authentication and
    authorization. We created and consumed an API connected to a “database.”
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我们学习了Blazor的工作原理以及如何创建基本和高级组件。我们实现了使用认证和授权的安全功能。我们创建并使用了连接到“数据库”的API。
- en: We made JavaScript calls and real-time updates. We debugged our application
    and tested our code, and last but not least, we looked at deploying to production.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们进行了JavaScript调用和实时更新。我们调试了我们的应用程序并测试了我们的代码，最后但同样重要的是，我们探讨了如何部署到生产环境。
- en: We are now ready to apply all this knowledge to the next adventure, another
    app. I hope you have had as much fun reading this book as I have had writing it.
    Being part of the Blazor community is so much fun, and we learn new things every
    day.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经准备好将所有这些知识应用到下一个冒险，另一个应用程序中。我希望你在阅读这本书的过程中和我写作这本书一样感到乐趣。成为Blazor社区的一员非常有趣，我们每天都在学习新事物。
- en: Thank you for reading this book. Please stay in touch. I would love to learn
    about the things you build!
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您阅读这本书。请保持联系。我很乐意了解您构建的东西！
- en: '*Welcome to the Blazor community!*'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '*欢迎加入Blazor社区！*'
- en: Join our community on Discord
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的社区Discord
- en: 'Join our community’s Discord space for discussions with the author and other
    readers:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们的社区Discord空间，与作者和其他读者进行讨论：
- en: '[https://packt.link/WebDevBlazor3e](https://packt.link/WebDevBlazor3e)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/WebDevBlazor3e](https://packt.link/WebDevBlazor3e)'
- en: '![](img/QR_Code2668029180838459906.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code2668029180838459906.png)'
