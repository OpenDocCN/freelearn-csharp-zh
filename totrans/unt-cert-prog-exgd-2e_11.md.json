["```cs\n    using UnityEngine.Audio;\n    ```", "```cs\n     [SerializeField]\n     AudioMixer masterMixer;\n    ```", "```cs\n     [SerializeField]\n     GameObject musicSlider;\n     [SerializeField]\n     GameObject effectsSlider;\n    ```", "```cs\n      public void SetMusicLevelFromSlider()\n      {\n        masterMixer.SetFloat(\"musicVol\",musicSlider.GetComponent<Slider>\n          ().value);\n      }\n    ```", "```cs\n        public void SetEffectsLevelFromSlider()\n      {\n        masterMixer.SetFloat(\"effectsVol\",effectsSlider.    GetComponent\n           <Slider>().value);\n      }\n    ```", "```cs\n      public void SetMusicLevelFromSlider()\n      {\n        masterMixer.SetFloat(\"musicVol\",musicSlider.        GetComponent\n           <Slider>().value);\n        PlayerPrefs.SetFloat(\"musicVolume\",musicSlider.        GetComponent\n           <Slider>().value);    // << NEW CODE LINE\n      }\n    ```", "```cs\n        public void SetEffectsLevelFromSlider()\n      {\n        masterMixer.SetFloat(\"effectsVol\",effectsSlider.        GetComponent\n          <Slider>().value);\n        PlayerPrefs.SetFloat(\"effectsVolume\",effectsSlider.        GetComponent\n          <Slider>().value);  // << NEW CODE LINE\n      }\n    ```", "```cs\n        masterMixer.SetFloat(\"musicVol\",PlayerPrefs.GetFloat(\"musicVolume\"));\n        masterMixer.SetFloat(\"effectsVol\",PlayerPrefs.GetFloat(\"effectsVolume\"));\n    ```", "```cs\n      float GetMusicLevelFromMixer()\n      {\n        float musicMixersValue;\n        bool result = masterMixer.GetFloat(\"musicVol\", \n           out musicMixersValue); \n\n        if (result)\n        {\n          return musicMixersValue;\n        }\n        else\n        {\n          return 0;\n        }\n      }\n    ```", "```cs\n    musicSlider.GetComponent<Slider>().value = GetMusicLevelFromMixer();\n    ```", "```cs\n    public class GameStats\n    {\n        public int livesLeft;\n        public string completed;\n        public int score;\n    }\n    ```", "```cs\n    SendInJsonFormat(SceneManager.GetActiveScene().name);\n    ```", "```cs\n      void SendInJsonFormat(string lastLevel)\n      {\n        if (lastLevel == \"level3\")\n          {\n            GameStats gameStats = new GameStats();\n            gameStats.livesLeft = GameManager.playerLives;\n            gameStats.completed = System.DateTime.Now.ToString();\n             gameStats.score = GetComponent<ScoreManager>().             PlayersScore;\n\n            string json = JsonUtility.ToJson(gameStats,true);\n            Debug.Log(json);\n          }\n      }\n    ```", "```cs\n    Debug.Log(Application.persistentDataPath + \"/GameStatsSaved.json\");\n    System.IO.File.WriteAllText(Application.persistentDataPath +\n       \"/GameStatsSaved.json\",json);\n    ```"]