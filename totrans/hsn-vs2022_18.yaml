- en: 'Chapter 15: Learning Keyboard Shortcuts'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: During this book, we have analyzed some shortcuts that help us improve our productivity,
    using a combination of some keys to perform common actions in the IDE and source
    code. Visual Studio includes some useful shortcuts by default, but we also have
    the possibility of creating our own shortcuts, depending on our needs or common
    operations that we need to perform daily.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will provide a summary of the most important shortcuts included
    by default in Visual Studio 2022 and a section that shows how to create our own.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will review the following topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: The most-used shortcuts for use in source code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The most common shortcuts for use in the IDE
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating custom shortcuts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When working with Visual Studio, it is extremely important that we know the
    keyboard shortcuts so that we can carry out operations quickly. This will prevent
    you from wasting time on repetitive tasks, such as formatting a complete source
    code file or renaming a member of a class.
  prefs: []
  type: TYPE_NORMAL
- en: It is important you put these keyboard shortcuts into practice and begin to
    use them little by little, even if you execute them slowly at the beginning. You
    will see that with time, you will execute them automatically, without resorting
    to any visual aid.
  prefs: []
  type: TYPE_NORMAL
- en: Let's learn how to improve our productivity using shortcuts.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To use shortcuts in this project, you must have previously installed Visual
    Studio 2022 with the web development workload installed, as shown in [*Chapter
    1*](B17873_01_ePub.xhtml#_idTextAnchor013), *Getting Started with Visual Studio*.
    It's also important to have the SPA base project created in [*Chapter 4*](B17873_04_ePub.xhtml#_idTextAnchor052),
    *Projects and Templates*.
  prefs: []
  type: TYPE_NORMAL
- en: It is important to note that there are different keyboard mapping schemes that
    can completely modify the shortcut keys. In addition, extensions such as ReSharper
    can also modify keyboard shortcuts. For correct execution of all the shortcuts
    shown in this chapter, you must have a **Default** keyboard mapping scheme, which
    can be selected from the **Tools | Options | Environment | Keyboard** menu.
  prefs: []
  type: TYPE_NORMAL
- en: Let's enter the world of shortcuts, which will undoubtedly make you become a
    more efficient and productive programmer.
  prefs: []
  type: TYPE_NORMAL
- en: Shortcuts for use in source code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Working with source code involves working with thousands of lines of code, which
    can be a headache for even the most experienced developer. That is why the powerful
    search tools included in Visual Studio are an excellent way to search and navigate
    throughout the lines of code.
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, code editing and refactoring tasks are ongoing in projects, not to
    mention debugging and testing in large projects.
  prefs: []
  type: TYPE_NORMAL
- en: This is why working with shortcuts that give you instant access to these tools
    should be a priority in your career as a developer. Let's see what these keyboard
    shortcuts are.
  prefs: []
  type: TYPE_NORMAL
- en: Shortcuts for searching and navigating through source code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Finding members of a class quickly may seem like a simple task when working
    on a one-class project, but you may not think so if you work with projects that
    contain hundreds of classes or even several projects within the same solution.
    It is during these moments that the following keyboard shortcuts become a great
    help.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take a look at the shortcuts that will help us perform quick search
    and navigation operations in Visual Studio:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Ctrl* + *Q*: Displays **Visual Studio Search**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *T*: Displays the **Go To All** tool'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *-*: Navigates backward between opened documents in the current session'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Shift* + *-*: Navigates forward between opened documents in the current
    session'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*F12*: Navigates to a class definition'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Alt* + *F12*: Allows you to view and edit the code of a class in a pop-up
    window, from the code file you are writing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *F12*: Navigates to the implementation of a member in a class'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Shift* + *F12*: Moves to the next error line when the error list
    window is open and more than one error is listed'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*F8*: Navigates forward in the list of results of the current window'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Shift* + *F8*: Navigates backward in the list of results of the current window'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The shortcuts discussed here allow you to quickly navigate between files, members,
    results, and implementations without taking your hands away from the keyboard.
    Now, let's look at the most common shortcuts for editing and refactoring.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: 'You can check out all the most common shortcuts in Visual Studio at the following
    link: [https://docs.microsoft.com/visualstudio/ide/default-keyboard-shortcuts-in-visual-studio?view=vs-2022](https://docs.microsoft.com/visualstudio/ide/default-keyboard-shortcuts-in-visual-studio?view=vs-2022).
    We encourage you to download the file, print it, and keep it near you for quick
    reference to these shortcuts.'
  prefs: []
  type: TYPE_NORMAL
- en: Shortcuts for editing and refactoring
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The commands that we will see in this subsection correspond to those that allow
    you to apply changes directly to source code. Among the most common operations
    are renaming members, commenting on lines of code, and moving lines up and down.
    Let''s see the list of shortcuts that will make writing code even easier:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Alt* + *Enter*: Displays quick actions'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *K*, *Ctrl* + *I*: Obtains information about a member of a class'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *K*, *Ctrl* + *C*: Comments multiple selected lines in the source
    code'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *K*, *Ctrl* + *U*: Uncomments multiple selected lines in the source
    code'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Shift* + *L*: Deletes selected lines'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Shift* + *V*: Displays and allows pasting the contents from the buffer
    ring (it refers to the history of elements that have been previously copied)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *F*: Finds a specific text in the code'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *A*: Selects all the lines in the current file'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *S*: Saves the pending changes in the current file'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Shift* + *S*: Saves the pending changes in all the opened files'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Shift* + *.*: Zooms into the current file'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Shift* + *,*: Zooms out from the current file'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Up*: Moves selected lines up in a code file'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Down*: Moves selected lines down in a code file'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *K*, *Ctrl* + *D*: Applies the style rules to the entire document'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *K*, *Ctrl* + *F*: Applies the style rules only in the selected lines
    in the document'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *K*, *Ctrl* + *S*: Used to encapsulate the code between common clauses,
    such as cycles (`while`, `for`, and so on), control statements (`if`, `switch`,
    and so on), or code regions (`#region`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *R*, *Ctrl* + *R*: Renames a member'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *R*, *Ctrl* + *E*: Creates a property for a field of a class'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *R*, *Ctrl* + *G*: Removes unused `using` statements in a class and
    sorts them alphabetically'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *R*, *Ctrl* + *M*: Creates a method from the selected code'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now that we have learned about the main shortcuts for editing and refactoring
    code, let's take a look at those that will help us to optimize depuration and
    testing tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Shortcuts for debugging and testing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Debugging and code execution is one of the most constant tasks we will perform
    while working with Visual Studio. Therefore, it is important to know the keyboard
    shortcuts that can help us to execute these tasks quickly. That is why, in this
    subsection, we will mention the most important shortcuts focused on these tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '*F5*: Starts the application in debug mode'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *F5*: Starts the application without debug mode'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Shift* + *5*: Stops the application when it''s running'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Shift* + *F5*: Stops the application execution, rebuilds the project,
    and creates a new debugging session'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*F9*: Places or removes a breakpoint'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*F10*: Skips the execution of code when debugging'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*F11*: Debugs source code line by line'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Shift* + *F11*: Steps out of the execution of the method'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *R*, *Ctrl* + *A*: Starts unit test execution in debug mode'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *R*, *A*: Starts unit test execution without debug mode'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This concludes the list of shortcuts that can help us to improve our time when
    working with source code. Let's now review the shortcuts that can help us perform
    quick actions in the IDE environment.
  prefs: []
  type: TYPE_NORMAL
- en: The most common shortcuts for use in the IDE
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Knowing how to get around in the Visual Studio IDE through keyboard shortcuts
    is an important part of avoiding wasting time searching through menus to activate
    a specific panel. It is very common, for example, to close by mistake the **Solution
    Explorer** or **Properties** window and not know which menu contains the option
    to open them again. That is why, in this section, we will examine the shortcuts
    that will speed up the performance of these tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Ctrl* + *[* + *S*: If we have a file open, this shortcut allows us to quickly
    select it in the **Solution Explorer** window.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Alt* + *L*: Opens the **Solution Explorer** window.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Alt* + *O*: Opens the **Output** window.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *\*, *E*: Opens the **Error List** window.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *\*, *Ctrl* + *M*: Opens the **Team Explorer** window.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Alt* + *B*: Opens the **Breakpoints** window.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*F4*: Opens the **Properties** window.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Alt* + *F6*: Allows you to scroll back between windows on the panels that
    are open.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Shift* + *Alt* + *F6*: Allows you to scroll forward between windows on the
    panels that are open.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Shift* + *Esc*: Allows you to close the current tool window.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Alt* + *Pg Up*: Allows scrolling up between open documents even when
    it is not the same session.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Alt* + *Pg Dn*: Allows scrolling down between open documents even
    when it is not the same session.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Tab*: Displays a special window with the open documents and selects
    the most recent one.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *Shift* + *Tab*: Displays a special window with the open documents
    and selects the least recent one.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Shift* + *Alt* + *Enter*: Allows you to place the Visual Studio environment
    at full screen, allowing you to concentrate on the current document. Use the same
    shortcut to get out of full-screen mode.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *K* + *K*: Creates a bookmark in the line where we are positioned.
    If there is already a bookmark on that line, it will be deleted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Bookmarks are a feature of Visual Studio that allow you to mark lines in your
    code to quickly return to them. You can find more information about them at the
    following link: [https://docs.microsoft.com/en-us/visualstudio/ide/setting-bookmarks-in-code?view=vs-2022](https://docs.microsoft.com/en-us/visualstudio/ide/setting-bookmarks-in-code?view=vs-2022).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*Ctrl* + *K* + *N*: Allows you to scroll forward through the different bookmarks
    that are part of a project.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ctrl* + *K* + *P*: Allows you to scroll backward through the different bookmarks
    that are part of a project.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At this point, you have learned the most common and useful shortcuts in Visual
    Studio, but there is a way to create our own shortcuts to adapt Visual Studio
    for our needs. Let's analyze step by step how to create custom shortcuts.
  prefs: []
  type: TYPE_NORMAL
- en: Creating custom shortcuts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can create our own shortcuts for specific actions in Visual Studio, and there
    are several options available to customize the current shortcuts.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can navigate to **Tools** | **Options** | **Environment** | **Keyboard**
    to see all the current shortcuts in Visual Studio (as shown in *Figure 15.1*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 15.1 – The Keyboard option to customize shortcuts'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_15.01_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 15.1 – The Keyboard option to customize shortcuts
  prefs: []
  type: TYPE_NORMAL
- en: 'You will find all the current shortcuts in Visual Studio for all the functionalities
    and a scheme for the shortcuts, where you can set them up, depending on the context.
    By default, Visual Studio includes different keyboard schemes with different keyboard
    shortcut configurations. (see *Figure 15.2*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 15.2 – Mapping schemes for shortcuts'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_15.02_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 15.2 – Mapping schemes for shortcuts
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a new shortcut, select (**Default**) in the **Apply the following
    additional keyboard mapping scheme** option, and then select the **Analyze.RunDefaultCodeCleanUpOnSolution**
    command. This command executes a process to clean up code to improve the format
    and remove unnecessary code. Finally, you can assign the shortcut for this command
    by adding the *Ctrl* + *Alt* + *Y* combination in the **Press shortcut keys**
    option (see *Figure 15.3*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 15.3 – Assigning the Ctrl + Alt + Y shortcut to a command'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_15.03_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 15.3 – Assigning the Ctrl + Alt + Y shortcut to a command
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, click **Assign** and then **OK** to confirm and add this new shortcut
    in Visual Studio, and perform the cleanup process by default in the solution quickly
    (see *Figure 15.4*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 15.4 – The shortcut is assigned to the command'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_15.04_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 15.4 – The shortcut is assigned to the command
  prefs: []
  type: TYPE_NORMAL
- en: After assigning the shortcuts for the selected command, you can try it in Visual
    Studio. In this case, the **Analyze.RunDefaultCodeCleanUpOnSolution** command
    can be used globally, so you only need to have the SPAProject open, and after
    pressing *Ctrl* + *Alt* + *Y*, Visual Studio will perform a cleanup on the solution.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: You can override shortcuts included by default in Visual Studio. However, this
    is not the best practice, since you are altering the normal behavior in Visual
    Studio, and it could be difficult to work in other environments.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned about shortcuts in Visual Studio, and we reviewed
    all the useful shortcuts that we can use while coding or performing an action
    with tools or functionalities.
  prefs: []
  type: TYPE_NORMAL
- en: With this knowledge on how to use shortcuts in your daily work, you will depend
    less and less on the keyboard to execute actions within Visual Studio, which will
    allow you to become an efficient developer.
  prefs: []
  type: TYPE_NORMAL
- en: We also learned how to create our own shortcuts and automate common tasks in
    our projects using a key combination.
  prefs: []
  type: TYPE_NORMAL
- en: It has been a long journey from where we started – analyzing what Visual Studio
    is in [*Chapter 1*](B17873_01_ePub.xhtml#_idTextAnchor013), *Getting Started with
    Visual Studio 2022*, what the available versions are, and how to install it in
    our local environment – to the current chapter where we learned about shortcuts.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, we must congratulate you for having reached the end of the book.
    We hope you enjoyed reading it as much as we enjoyed writing it. The next step
    is to get down to work and apply the knowledge you have acquired in your day-to-day
    work as a developer. Happy coding.
  prefs: []
  type: TYPE_NORMAL
