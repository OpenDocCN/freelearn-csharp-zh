["```cs\n<Application\n    x:Class=\"MyMediaCollection.App\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/\n  presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:local=\"using:MyMediaCollection\">\n    <Application.Resources>\n        <ResourceDictionary>\n            <ResourceDictionary.MergedDictionaries>\n                <XamlControlsResources\n                  xmlns=\"using:Microsoft.UI\n                    .Xaml.Controls\" />\n                <!-- Other merged dictionaries here -->\n            </ResourceDictionary.MergedDictionaries>\n            <!-- Other app resources here -->\n        </ResourceDictionary>\n    </Application.Resources>\n</Application>\n```", "```cs\nm_window = new MainWindow();\nm_window.Activate();\n```", "```cs\n<Window\n    x:Class=\"MyMediaCollection.MainWindow\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/\n      presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:local=\"using:MyMediaCollection\"\n    xmlns:d=\"http://schemas.microsoft.com/expression/blend/\n      2008\"\n    xmlns:mc=\"http://schemas.openxmlformats.org/\n      markup-compatibility/2006\"\n    mc:Ignorable=\"d\">\n    <Grid>\n        <TextBlock Text=\"Media\"/>\n    </Grid>\n</Page>\n```", "```cs\n    public enum ItemType\n    {\n        Music,\n        Video,\n        Book\n    }\n    ```", "```cs\n    public enum LocationType\n    {\n        InCollection,\n        Loaned\n    }\n    ```", "```cs\n    public class Medium\n    {\n        public int Id { get; set; }\n        public string Name { get; set; }\n        public ItemType MediaType { get; set; }\n    }\n    public class MediaItem\n    {\n        public int Id { get; set; }\n        public string Name { get; set; }\n        public ItemType MediaType { get; set; }\n        public Medium MediumInfo { get; set; }\n        public LocationType Location { get; set; }\n    }\n    ```", "```cs\n    public void PopulateData()\n    {\n        if (_isLoaded) return;\n        _isLoaded = true;\n        var cd = new MediaItem\n        {\n            Id = 1,\n            Name = \"Classical Favorites\",\n            MediaType = ItemType.Music,\n            MediumInfo = new Medium { Id = 1,\n              MediaType = ItemType.Music, Name = \"CD\" }\n        };\n        Var book = new MediaItem\n        {\n            Id = 2,\n            Name = \"Classic Fairy Tales\",\n            MediaType = ItemType.Book,\n            MediumInfo = new Medium { Id = 2,\n              MediaType = ItemType.Book, Name = \"Book\" }\n        };\n        var bluRay = new MediaItem\n        {\n            Id = 3,\n            Name = \"The Mummy\",\n            MediaType = ItemType.Video,\n            MediumInfo = new Medium { Id = 3,\n              MediaType = ItemType.Video, Name = \"Blu Ray\" }\n        };\n        _items = new List<MediaItem>\n        {\n            cd,\n            book,\n            bluRay\n        };\n    }\n    ```", "```cs\n    private IList<MediaItem> _items { get; set; }\n    private bool _isLoaded;\n    ```", "```cs\n    public MainWindow()\n    {\n        this.InitializeComponent();\n        PopulateData();\n    }\n    ```", "```cs\n    <Grid.RowDefinitions>\n        <RowDefinition Height=\"Auto\"/>\n        <RowDefinition Height=\"*\"/>\n    </Grid.RowDefinitions>\n    ```", "```cs\n    <ListView Grid.Row=\"1\" x:Name=\"ItemList\"\n      Background=\"LightGoldenrodYellow\"/>\n    ```", "```cs\nItemList.Loaded += ItemList_Loaded;\n```", "```cs\nprivate void ItemList_Loaded(object sender,\n  Microsoft.UI.Xaml.RoutedEventArgs e)\n{\n    var listView = (ListView)sender;\n    PopulateData();\n    listView.ItemsSource = _items;\n}\n```", "```cs\n<ListView Grid.Row=\"1\"\n          x:Name=\"ItemList\"\n          Background=\"LightGoldenrodYellow\">\n    <ListView.ItemTemplate>\n        <DataTemplate x:DataType=\"model:MediaItem\">\n            <Grid>\n                <Grid.ColumnDefinitions>\n                    <ColumnDefinition Width=\"100\"/>\n                    <ColumnDefinition Width=\"*\"/>\n                </Grid.ColumnDefinitions>\n                <TextBlock Text=\"{x:Bind\n                  Path=MediumInfo.Name}\"/>\n                <TextBlock Grid.Column=\"1\"\n                   Text=\"{x:Bind Path=Name}\"/>\n            </Grid>\n        </DataTemplate>\n    </ListView.ItemTemplate>\n</ListView>\n```", "```cs\nxmlns:model=\"using:MyMediaCollection.Model\"\n```", "```cs\n<ListView.HeaderTemplate>\n    <DataTemplate>\n        <Grid>\n            <Grid.ColumnDefinitions>\n                <ColumnDefinition Width=\"100\"/>\n                <ColumnDefinition Width=\"*\"/>\n            </Grid.ColumnDefinitions>\n            <Border BorderBrush=\"BlueViolet\"\n                    BorderThickness=\"0,0,0,1\">\n                <TextBlock Text=\"Medium\"\n                           Margin=\"5,0,0,0\"\n                           FontWeight=\"Bold\"/>\n            </Border>\n            <Border Grid.Column=\"1\"\n                    BorderBrush=\"BlueViolet\"\n                    BorderThickness=\"0,0,0,1\">\n                <TextBlock Text=\"Title\"\n                           Margin=\"5,0,0,0\"\n                           FontWeight=\"Bold\"/>\n            </Border>\n        </Grid>\n    </DataTemplate>\n</ListView.HeaderTemplate>\n```", "```cs\n    <Grid>\n        <Grid.ColumnDefinitions>\n            <ColumnDefinition Width=\"*\"/>\n            <ColumnDefinition Width=\"Auto\"/>\n        </Grid.ColumnDefinitions>\n        <TextBlock Text=\"Media Collection\"\n                   Margin=\"4\"\n                   FontWeight=\"Bold\"\n                   VerticalAlignment=\"Center\"/>\n        <StackPanel Grid.Column=\"1\"\n                    Orientation=\"Horizontal\"\n                    HorizontalAlignment=\"Right\">\n            <TextBlock Text=\"Media Type:\" Margin=\"4\"\n                       FontWeight=\"Bold\"\n                       VerticalAlignment=\"Center\"/>\n            <ComboBox x:Name=\"ItemFilter\"\n                      MinWidth=\"120\" Margin=\"0,2,6,4\"/>\n        </StackPanel>\n    </Grid>\n    ```", "```cs\n    private IList<string> _mediums { get; set; }\n    ```", "```cs\n    _mediums = new List<string>\n    {\n        \"All\",\n        nameof(ItemType.Book),\n        nameof(ItemType.Music),\n        nameof(ItemType.Video)\n    };\n    ```", "```cs\n    ItemFilter.Loaded += ItemFilter_Loaded;\n    ```", "```cs\n    private void ItemFilter_Loaded(object sender,\n      Microsoft.UI.Xaml.RoutedEventArgs e)\n    {\n        var filterCombo = (ComboBox)sender;\n        PopulateData();\n        filterCombo.ItemsSource = _mediums;\n        filterCombo.SelectedIndex = 0;\n    }\n    ```", "```cs\n    private IList<MediaItem> _allItems { get; set; }\n    ```", "```cs\n    _allItems = new List<MediaItem>\n    {\n        cd,\n        book,\n        bluRay\n    };\n    ```", "```cs\n    ItemFilter.SelectionChanged +=\n        ItemFilter_SelectionChanged;\n    ```", "```cs\n    private void ItemFilter_SelectionChanged(\n      object sender,Microsoft.UI.Xaml.Controls.\n        SelectionChangedEventArgs e)\n    {\n            var updatedItems =\n              (from item in _allItems\n              where\n                string.IsNullOrWhiteSpace(ItemFilter.\n                  SelectedValue.ToString()) ||\n                ItemFilter.SelectedValue.ToString() ==\n                  \"All\" ||\n                ItemFilter.SelectedValue.ToString() ==\n                  item.MediaType.ToString()\n              select item).ToList();\n           ItemList.ItemsSource = updatedItems;\n    }\n    ```", "```cs\n<Grid.RowDefinitions>\n    <RowDefinition Height=\"Auto\"/>\n    <RowDefinition Height=\"*\"/>\n<RowDefinition Height=\"Auto\"/>\n</Grid.RowDefinitions>\n```", "```cs\n<Button x:Name=\"AddButton\" Content=\"Add Item\"\n  HorizontalAlignment=\"Right\" Grid.Row=\"2\" Margin=\"8\"/>\n```", "```cs\n<Button Content=\"Add Item\"\n   HorizontalAlignment=\"Right\"\n     Grid.Row=\"2\" Margin=\"8\" Click=\"AddButton_Click\"/>\n```", "```cs\nprivate async void AddButton_Click(object sender,\n  RoutedEventArgs e)\n{\n    var dialog = new ContentDialog\n        {\n            Title = \"My Media Collection\",\n            Content = \"Adding items to the collection is\n                not yet supported.\",\n            CloseButtonText = \"OK\",\n            XamlRoot = Content.XamlRoot\n        };\n    await dialog.ShowAsync();\n}\n```"]