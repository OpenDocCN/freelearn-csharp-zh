["```cs\n    using UnityEngine;\n    ```", "```cs\n    [CreateAssetMenu(fileName = \"Create Shop Piece\", menuName = \n       \"Create Shop Piece\")]\n    ```", "```cs\n    public class SOShopSelection : ScriptableObject\n    {\n    ```", "```cs\n      public Sprite icon;\n      public string iconName;\n      public string description;\n      public string cost;\n    }\n    ```", "```cs\n    using UnityEngine;\n    ```", "```cs\n    public class ShopPiece : MonoBehaviour \n    {\n    ```", "```cs\n    [SerializeField]\n      SOShopSelection shopSelection;\n      public SOShopSelection ShopSelection\n      {\n        get {return shopSelection; }\n        set {shopSelection = value; }\n      }\n    ```", "```cs\n    void Awake()\n      {\n       //icon slot\n       if (GetComponentInChildren<SpriteRenderer>() != null)\n      {\n       GetComponentInChildren<SpriteRenderer>().sprite = \n         shopSelection.icon;\n      }\n    ```", "```cs\n       //selection value\n        if(transform.Find(\"itemText\"))\n        {\n          GetComponentInChildren<TextMesh>().text =     shopSelection.cost;\n        }\n      }\n    ```", "```cs\n    using UnityEngine;\n    ```", "```cs\n    public class PlayerShipBuild : MonoBehaviour \n    {\n    ```", "```cs\n      [SerializeField]\n      GameObject[] shopButtons;\n    ```", "```cs\n      GameObject target;\n      GameObject tmpSelection;\n    ```", "```cs\n      void Start()\n      {\n        TurnOffSelectionHighlights();\n      }\n    ```", "```cs\n      void TurnOffSelectionHighlights()\n      {\n        for (int i = 0; i < shopButtons.Length; i++)\n        {\n          shopButtons[i].SetActive(false);\n        }\n      }\n    ```", "```cs\n      void Update()\n      {\n        AttemptSelection();\n      }\n    ```", "```cs\n      GameObject ReturnClickedObject (out RaycastHit hit)\n      {\n        GameObject target = null;\n        Ray ray = Camera.main.ScreenPointToRay (Input.mousePosition);\n        if (Physics.Raycast (ray.origin, ray.direction * 100, out hit)) \n        {\n          target = hit.collider.gameObject;\n        }\n        return target;\n      }\n    ```", "```cs\n    void AttemptSelection()\n    {\n        if (Input.GetMouseButtonDown (0)) \n        {\n          RaycastHit hitInfo;\n          target = ReturnClickedObject (out hitInfo);\n          if (target != null)\n          {\n            if (target.transform.Find(\"itemText\"))\n            { \n              TurnOffSelectionHighlights();\n              Select();\n            }\n          }\n        }\n     }\n    ```", "```cs\n      void Select()\n      {\n        tmpSelection =  target.transform.Find\n           (\"SelectionQuad\").gameObject;\n        tmpSelection.SetActive(true);\n      }\n    ```", "```cs\n    GameObject textBoxPanel;\n    ```", "```cs\n    textBoxPanel = GameObject.Find(\"textBoxPanel\");\n    ```", "```cs\n            if (target.transform.Find(\"itemText\"))\n            { \n              TurnOffSelectionHighlights();\n              Select();\n              UpdateDescriptionBox();\n            }        \n    ```", "```cs\n    void UpdateDescriptionBox()\n    {\n                   textBoxPanel.transform.Find(\"name\").gameObject.GetComponent\n       <TextMesh>().text = tmpSelection.GetComponentInParent\n          <ShopPiece>().ShopSelection.iconName;\n        textBoxPanel.transform.Find(\"desc\").gameObject.GetComponent\n       <TextMesh>().text = tmpSelection.GetComponentInParent\n          <ShopPiece>().ShopSelection.description;\n     }\n    ```"]