- en: Chapter 2. Managing Payments and Banks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The sales and purchase cycle does not finish after the goods are shipped, or
    the services are provided, and the invoice has been issued. After that, the company
    has to charge for items delivered and has to pay for services received.
  prefs: []
  type: TYPE_NORMAL
- en: 'The management of advanced payments, cash payments, or deferred payments is
    of vital importance for the company. In this chapter, we will learn how to do
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Manage different payment methods such as payment registrations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Handle incoming and outgoing payments in NAV
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Import bank reconciliation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing due dates
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you start working with a new customer or vendor, you reach an agreement
    with them on when are invoices due. On the **Payments** tab of the customer and
    vendor card, you select the **Payment Term** tab that suits the agreement. After
    that, the program will automatically calculate the due date when you create an
    invoice.
  prefs: []
  type: TYPE_NORMAL
- en: Payment terms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Payment Terms** page contains one line for each set of **Payment Terms**
    the company uses. You can create as many payment terms as you need.
  prefs: []
  type: TYPE_NORMAL
- en: Every set of payment terms must contain a **Due Date Calculation** formula that
    the program uses together with the document date of the invoice to calculate the
    due date. In addition, you can also specify a **Discount Date Calculation** formula
    and a **Discount %** that will be used to calculate discounts on the basis of
    early payments.
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate to `Departments/Financial Management/Receivables/Setup` to see the
    full list, which is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Payment terms](img/B05733_02_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The payment term code is assigned to each customer by filling in a field called
    **Payment Terms Code**. When a customer uses an invoice, the payment term is copied
    to it and the due date gets calculated based on the document date of the invoice.
  prefs: []
  type: TYPE_NORMAL
- en: '![Payment terms](img/B05733_02_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'When the invoice is posted, a customer ledger entry is created with its corresponding
    **Due Date**. You can see the flow of data in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Payment terms](img/B05733_02_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can change the payment term in a particular invoice if you have reached
    a different agreement with the customer for this sale. You can also change the
    due date on the ledger entry if needed. At the end of the process, the system
    checks for due dates of ledger entries to claim charges from customers and to
    propose payments to vendors.
  prefs: []
  type: TYPE_NORMAL
- en: The **On Hold** field in the **Customer Ledger Entries** tab is used to indicate
    that the invoice should wait for approval before the payment can be reclaimed
    or interest added to it. You can fill the field with your initials or any other
    code. The same field can be found for vendor ledger entry, to indicate that an
    invoice cannot be paid yet. Actually, everything explained in this section also
    applies to vendors.
  prefs: []
  type: TYPE_NORMAL
- en: Prepayments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Prepayments are payments that are invoiced and posted to a sales or purchase
    prepayment order before final invoicing. As per the company and item specification,
    you may require to make the payment before you ship items to a customer or receive
    goods from a vendor.
  prefs: []
  type: TYPE_NORMAL
- en: You use the prepayments functionality in Microsoft Dynamics NAV to invoice and
    collect deposits that are required from customers or remit deposits to vendors.
  prefs: []
  type: TYPE_NORMAL
- en: Until the final invoice has been issued, we do not have a ledger entry to base
    the payments on. Prepayments can be set up for customers or vendors, regardless
    of the items or services included in the document. You can also specify different
    prepayments rates for certain items. Use a 100% rate if you need to pay it all
    in advance.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some types of prepayments:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Customer and vendor prepayments**: You can specify a prepayment percent on
    the customer or vendor card in a field called **Prepayment %**, which will apply
    to all orders. Leave the field blank if you want to use prepayments for individual
    items.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Prepayments](img/B05733_02_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Item prepayments**: Similar to how you set up prices, you can specify prepayment
    rates for items. You can do it on the **Sales Prepayment Percentages** and **Purchase
    Prepayment Percentages** pages, which can be accessed from the ribbon bar of the
    customer and vendor list, respectively. You can also access both from the item
    list.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Prepayments](img/B05733_02_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Prepayment processing flow
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The steps involved in the flow of prepayment processing are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Set up prepayments:** First of all, we will perform the following prerequisite
    setups to process the prepayment in NAV 2016'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**General posting setup:** In this form, we will define the G/L account card
    for the **Purchase Prepayment** and **Sales Prepayment** accounts with respect
    to the **Gen. Business Posting** and **Gen. Product Posting** groups:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Prepayment processing flow](img/B05733_02_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**General ledger setup**: In this form, we will enable and disable general
    prepayment features:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable **Prepayment Unrealized Tax**
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sales & receivables setup**: In this form, we will enable and disable sales-related
    prepayment features:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable **Check Prepmnt. when Posting**
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Set up a number series for prepayment documents
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Prepayment processing flow](img/B05733_02_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Assign prepayment percentage**: You can define a prepayment percentage by
    any of the following combinations:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customer card
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Vendor card
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Item card (customer-item)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Item card (vendor-item)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Prepayment processing flow](img/B05733_02_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Process**: Once you have done all the preceding prepayment setups, we can
    move on to prepayment posting, as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a sales order with a prepayment requirement.![Prepayment processing flow](img/B05733_02_09.jpg)
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Send a prepayment invoice for the prepayment amount to the customer.![Prepayment
    processing flow](img/B05733_02_10.jpg)
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: The customer pays the prepayment amount.![Prepayment processing flow](img/B05733_02_11.jpg)
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Apply the prepayment amount to **Sales Order**.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Ship and invoice the order to the customer.![Prepayment processing flow](img/B05733_02_12.jpg)
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Verify the sales invoice for the total amount of sales order minus the prepayment
    amount.![Prepayment processing flow](img/B05733_02_13.jpg)
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Receive the remaining payment from the customer and post the payment to **Sales
    Order**.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Using credit cards and other payment methods
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Different payment methods, used both by customers and vendors, can be defined
    at `Departments/Financial Management/Receivables/Setup/Payment Methods`.
  prefs: []
  type: TYPE_NORMAL
- en: '![Using credit cards and other payment methods](img/B05733_02_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note that both **CASH** and **CREDITCARD** have a **Bal. Account No.** defined.
    When you post an invoice with one of the payment methods selected, the system
    will create and post the payment against the invoice, so you don't have to manually
    do it later on. This is useful when the payment is done at the same time the invoice
    is raised.
  prefs: []
  type: TYPE_NORMAL
- en: When you use the credit card payment method in a sales order or invoice, you
    have to specify which credit card will be used. Credit cards are created on the
    customer card, through the **Credit Cards - Credit Cards** action found on the
    ribbon. Information commonly required for credit cards has to be filled in, such
    as the card type, the holder's name, the card number, and the expiry date. Once
    the credit card is selected, an authorization against the total invoice amount
    is required. This can either occur manually or automatically. When the invoice
    is posted, the actual payment is sent to the payment service. The payment is then
    captured and posted in Dynamics NAV. If it cannot be processed, an error message
    is displayed. In this case, the invoice is posted anyway, but the payment is not
    posted. It can be captured and posted later on using the **Cash Receipt Journal**
    window.
  prefs: []
  type: TYPE_NORMAL
- en: Posting payments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When you pay or are being paid, you need to register the transaction in your
    system, no matter what method you have used. To do so, you use the **Cash Receipt
    Journal** window or the **Payment Journal** window. Both work the same way, but
    the **Payment Journal** can also be used to print checks. To post a payment, you
    need to inform:'
  prefs: []
  type: TYPE_NORMAL
- en: The customer that is paying you
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The bank account that they used to make the payment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The invoice that is being paid
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Consider the following example:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Imagine that customer `20000`, `Selangorian Ltd.` has paid us for invoice `103032`,
    which was due on `02/09/2017`. Let''s follow the steps needed to post the payment:'
  prefs: []
  type: TYPE_NORMAL
- en: Access the **Cash Receipt Journal** window from `Journals/Cash Receipt Journals`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **BANK** section and double-click on it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new line on the journal with the following information:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| **Posting Date** | **Document Type** | **Document No.** |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| 01/26/2017 | Payment | This gets filled by a series number. |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: 'To indicate the customer that is paying:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| **Account Type** | **Account No.** | **Description** |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Customer | 20000 | This gets filled with the customer name. You can change
    it. |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: 'To indicate the bank account that the customer used to pay us:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| **Bal. Account Type** | **Bal. Account No.** |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Bank Account | WWB-OPERATING. This is the code that identifies the bank.
    |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: 'To indicate the invoice that is being paid:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| **Applies-to Doc. No.** |  |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| 103032 | When you click on this field, a page opens showing you all the pending
    entries for the customer. Select one. |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: 'Once you select a pending entry in the **Applies-to Doc. No.** field, the rest
    of the fields in the journal line get filled automatically: **Amount** and **Applies-to
    Doc. Type**. After completion, you will end up with something like this:![Posting
    payments](img/B05733_02_15.jpg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Post the transaction.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you do not know which invoice is being paid, you can leave the **Applies-to
    Doc. No.** field blank and apply the payment to the invoice later on.
  prefs: []
  type: TYPE_NORMAL
- en: Suggesting vendor payments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The **Payment Journal** window has a nice feature called **suggest vendor payments**.
    This process creates the payment lines for you according to certain conditions,
    such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: It only includes invoices due until a date of your choice
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can specify a maximum available amount for payments, so it will only suggest
    payments up to that amount
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can prioritize vendors when you have a specific available amount so that
    the most important vendors are always paid first
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It will not process invoices that are on hold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: However, this process only suggests, which means that you can modify whatever
    is needed before actually posting the payments.
  prefs: []
  type: TYPE_NORMAL
- en: Creating and printing checks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: On the **Payment Journal**, you can also print checks to use them as a payment
    method for your vendors.
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating and printing checks](img/B05733_02_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: When there are one or more computer checks in your **Payment Journal**, you
    have to print them using the corresponding actions on the ribbon. The system will
    not allow you to post the payment if the checks have not been printed. However,
    you do not have to print anything if you have selected **Manual Check**, which
    means that you have created your check manually and just want Dynamics NAV to
    keep track of it. The posting of the journal will create check ledger entries.
  prefs: []
  type: TYPE_NORMAL
- en: Customer balances
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The balance is the total amount a customer owes you or you owe to a vendor.
    Customer and vendor balances can be seen on their card through a field called
    **Balance (LCY)**. **LCY** stands for **Local Currency**. This means that, regardless
    of the currency used, amounts are always translated to your local currency.
  prefs: []
  type: TYPE_NORMAL
- en: 'To learn the details of the balance amount, you can click on the amount and
    the corresponding ledger entries will be shown. This can be seen in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Customer balances](img/B05733_02_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, customer `20000`, `Selangorian Ltd.` has seven pending invoices.
    Two of them are already due (they are shown in red) and invoice `00-8` has been
    partially paid (note that the remaining amount is lower than the original amount).
  prefs: []
  type: TYPE_NORMAL
- en: Which invoice has been paid?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Customer `20000`, `Selangorian Ltd.` has had many other transactions in the
    past. In the previous screenshot, we just viewed open transactions, but we can
    see them all by going back to the card and clicking on **Ledger Entries** in the
    **Navigate** tab.
  prefs: []
  type: TYPE_NORMAL
- en: To see which invoices are paid, compare the **Original Amount** and **Remaining
    Amount** columns. If the **Remaining Amount** column is zero, the full payment
    has been received.
  prefs: []
  type: TYPE_NORMAL
- en: Also, if the checkbox is not selected in the **Open** column, the invoice is
    fully settled.
  prefs: []
  type: TYPE_NORMAL
- en: '![Which invoice has been paid?](img/B05733_02_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Vendor balances
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are two key fields in this page: **Remaining Amount** and **Open**. Note
    that many transactions are not open and show zero as the remaining amounts. This
    means that those invoices have already been paid or that credit memos and payments
    have been applied to an invoice to reduce its remaining amount:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Vendor balances](img/B05733_02_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Select a ledger entry and click on **Applied Entries** in the ribbon to know
    how a certain transaction has been applied. You can then reapply entries.
  prefs: []
  type: TYPE_NORMAL
- en: Payment registration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The **payment registration** functionality is a unique method of handling customer
    receipts without creating entries through the **Cash Receipt Journal**. This functionality
    is designed to support users in tasks involved in balancing internal accounts,
    using actual cash figures to ensure effective collection from customers. To perform
    this, we have to perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to `Departments/Financial Management/Cash Management/ Payment Registration`*.*
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set up **Payment Registration**.![Payment registration](img/B05733_02_20.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Change Amount Received or Date Received**: The **Payment Registration** window
    shows all open customer ledger entries. Normally, you only have to mark the entries,
    post them, and then you are done.![Payment registration](img/B05733_02_21.jpg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Lump Payment**: This covers multiple invoices for one customer with a single
    payment.![Payment registration](img/B05733_02_22.jpg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Finance charge for overdue amounts:** A **Finance Charge Memo** window can
    be created directly from the **Payment Registration** window by selecting the
    **Finance Charge Memo** function.![Payment registration](img/B05733_02_23.jpg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Handling payment discounts**: When a payment is received within the payment
    discount period, the deducted amount will automatically be added and the invoice
    and the payment will be fully applied and closed after posting the payment.![Payment
    registration](img/B05733_02_24.jpg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Payment reconciliation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A payment reconciliation journal is where we specify payments, either incoming
    from customers or outgoing to vendors, that have been recorded as transactions
    on your electronic bank site and that need to be applied to their related open
    entries.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can perform the following main activities in the **Payment Reconciliation
    Journal** window:'
  prefs: []
  type: TYPE_NORMAL
- en: Import files with bank transactions for payments that have been made to or from
    your bank account and then automatically apply the payments to their related open
    entries.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Payment reconciliation](img/B05733_02_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Review and manually apply payments that were applied automatically to wrong
    open entries, or were not applied at all, from the **Payment Reconciliation Journal**
    window, shown as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Payment reconciliation](img/B05733_02_26.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Payment application rules
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the **Payment Application Rules** window, you set up rules to govern how
    payments should be automatically applied to their related open entries when you
    use the **Apply Automatically** function in the **Payment Reconciliation Journal**
    window. For this, refer to the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Payment application rules](img/B05733_02_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The bank data conversion service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The bank data conversion service is available out-of-the-box without additional
    charge to all Microsoft Dynamics NAV customers.
  prefs: []
  type: TYPE_NORMAL
- en: 'The bank data conversion service is used for the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Enabling users to export payment files from Microsoft Dynamics NAV in any format
    required by their bank to enable efficient processing of outgoing payments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enabling users to import bank statement files from any bank in the format required
    by Microsoft Dynamics NAV to enable efficient reconciliation of payments and their
    bank accounts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Providing support for many banks on all Microsoft localized versions of Dynamics
    NAV
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Making payments with the bank data conversion service or SEPA credit transfer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the **Payment Journal** window, you can process payments to your vendors
    by exporting a file together with the payment information from the journal lines.
    You can then upload the file to your electronic bank where the related money transfers
    are processed.
  prefs: []
  type: TYPE_NORMAL
- en: To enable SEPA credit transfers, you must first set up a bank account, a vendor,
    and the general journal batch that the payment journal is based on.
  prefs: []
  type: TYPE_NORMAL
- en: You then prepare payments to vendors by automatically filling in the **Payment
    Journal** window with due payments with specified posting dates.
  prefs: []
  type: TYPE_NORMAL
- en: '**Activate the bank data conversion service**: This is used for any bank statement
    file converted to a format in which you can import or export your bank data requirements:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Making payments with the bank data conversion service or SEPA credit transfer](img/B05733_02_28.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Payment method for vendor**: To perform a SEPA credit transfer in the payment
    journal, we have to specify the **Bank Data Conversion** payment method in the
    vendor card:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Making payments with the bank data conversion service or SEPA credit transfer](img/B05733_02_29.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Bank statement import format**: We also need to link either the **Bank Data
    Conversion Service** or **SEPA CAMT** in the bank''s card, to import the statement
    into Microsoft dynamics NAV 2016:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Making payments with the bank data conversion service or SEPA credit transfer](img/B05733_02_30.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Suggest vendor payments**: Perform this to fill the **Payment Journal** with
    lines for due payments to vendors, with the posting dates based on the due date
    of the related purchase documents:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Making payments with the bank data conversion service or SEPA credit transfer](img/B05733_02_31.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Export payments to a bank file**: When you are ready to make payments to
    your vendors using the **Payment Journal** window, you can export a file with
    the payment information on the journal lines. You can then upload the file to
    your electronic bank to process the related money transfers:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Making payments with the bank data conversion service or SEPA credit transfer](img/B05733_02_32.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Post journals**: When the electronic payment is successfully processed by
    the bank, post the **Payments Journal** to affect the vendor, G/L, and bank account
    respectively.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Incoming and outgoing payments in NAV
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A new feature called **Payment Reconciliation** Journal enables users to import
    bank transaction data into a dedicated UI and automatically open entries representing
    customer and vendor documents. Features include advanced record matching, strong
    review tools, and the possibility to freely define the payment match tolerance
    and to modify the generic matching algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: '![Incoming and outgoing payments in NAV](img/B05733_02_33.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Data Exchange Framework
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Data Exchange Framework** is used to define the format of files for exchange
    of data in bank files, electronic documents, currency exchange rates, and other
    with ERP systems; these vary depending on the provider of the data file or stream
    and on the country/region.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows the architecture of the Data Exchange Framework:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Data Exchange Framework](img/B05733_02_34.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Bank account currency restrictions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After you have set up your bank accounts, you may need to transfer an amount
    between two bank accounts that have the same and different currency codes.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the bank account currency restriction for posting
    a transaction:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bank account currency restrictions](img/B05733_02_35.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Bank reconciliation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The purpose of the bank reconciliation feature is to check whether the statements
    your bank provides you with agree with the bank account ledger entries that you
    have been creating while posting payments. It helps you check whether there is
    any cash movement that you have not posted into the system yet. At the end of
    a given period, the statement ending balance must equal the balance of the bank
    account in Dynamics NAV.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a new bank account reconciliation, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to `Departments/Financial Management/Cash Management/Bank Account Reconciliations`
    and click on **New**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the `WWB-OPERATING` code in the **Bank Account No.** field.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select `03/31/2017` as the statement date and write `-600000` as the **Statement
    Ending Balance**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Suggest Lines...** option from the ribbon bar and click on **OK**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: New reconciliation lines are created as copies of open bank ledger entries.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the reconciliation lines against the bank statement lines.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Post the lines.![Bank reconciliation](img/B05733_02_36.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the preceding screenshot, most of the bank statement entries have been posted
    in the system, but the first and the last ones are missing. You can manually create
    them in the bank reconciliation and use the **Transfer to General Journal...**
    action to transfer them to the corresponding journal, complete the transaction
    there, and post them.
  prefs: []
  type: TYPE_NORMAL
- en: Once the missing statement lines are posted, from the bank reconciliation page
    use the **Apply Entries** actions to select new bank ledger entries to be applied
    against the manually created bank reconciliation lines.
  prefs: []
  type: TYPE_NORMAL
- en: And finally, post the bank reconciliation using the **Post** action found on
    the ribbon. Once a reconciliation is posted, its ending balance will become the
    initial balance of the next statement.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned how to manage payments using different payment
    methods both for customers and vendors. We have also learned how to create and
    post those payments in the system and how they affect the balances for customers
    and vendors. Finally, we have seen how to reconcile banks ledger entries in Dynamics
    NAV with the actual bank statement.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will see how different accounting processes are managed.
  prefs: []
  type: TYPE_NORMAL
