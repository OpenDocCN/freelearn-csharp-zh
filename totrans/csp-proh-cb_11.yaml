- en: Chapter 11. Creating a Mobile Application in Visual Studio
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章. 在Visual Studio中创建移动应用程序
- en: 'Visual Studio is the tour de force of **integrated development environments**
    (**IDEs**). There is no doubt about that. You as a developer are able to be as
    versatile as you like by creating applications for a wide range of platforms.
    One of these platforms is mobile development. Developers are starting to create
    mobile applications, but don''t want to use a different IDE. With Visual Studio
    2015, you don''t have to. It will allow you to create Android and (now with **Xamarin**)
    iOS applications too. This chapter will therefore take a look at the following
    concepts:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio是**集成开发环境**（**IDE**）中的佼佼者。这一点毫无疑问。作为开发者，你可以通过为广泛的平台创建应用程序来变得非常灵活。其中之一就是移动开发。开发者开始创建移动应用程序，但不想使用不同的IDE。在Visual
    Studio 2015中，你不必这样做。它将允许你创建Android和（现在通过**Xamarin**）iOS应用程序。因此，本章将探讨以下概念：
- en: Installing Xamarin and other required components
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Xamarin和其他必需组件
- en: Creating an Android Visual Studio project using Apache Cordova
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Apache Cordova创建Android Visual Studio项目
- en: Creating an iOS application using Xamarin Forms
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Xamarin Forms创建iOS应用程序
- en: Introduction
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: If you have not heard about Xamarin, we encourage you to do a Google search
    for this tool. Traditionally, developers needed to use **Xcode** or **NetBeans**
    to create iOS and Android applications. The challenge for developers was that
    it meant learning a new programming language. If you, for example, created an
    application that you wanted to deploy to iOS, Android, and Windows, you needed
    to know Objective-C or Swift, Java, and a .NET language.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有听说过Xamarin，我们鼓励你通过Google搜索这个工具。传统上，开发者需要使用**Xcode**或**NetBeans**来创建iOS和Android应用程序。对于开发者来说，这意味着需要学习一门新的编程语言。例如，如果你创建了一个你希望部署到iOS、Android和Windows的应用程序，你需要了解Objective-C或Swift、Java和.NET语言。
- en: This also created additional challenges for development, because it meant having
    to maintain multiple code bases. If a change was to be made in the Windows version
    of the application, it also had to be made to the iOS and Android code base. Sometimes
    companies would manage different development teams for each platform. You can
    imagine the complications involved in managing a change across multiple teams
    on multiple platforms. This is especially true if you are dealing with a large
    code base.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这也给开发带来了额外的挑战，因为它意味着需要维护多个代码库。如果需要在应用程序的Windows版本中进行更改，也必须在iOS和Android代码库中进行更改。有时公司会为每个平台管理不同的开发团队。你可以想象在多个平台上的多个团队之间管理更改的复杂性。这尤其适用于你处理的是大型代码库。
- en: Xamarin solves this problem by allowing .NET developers to use standard .NET
    libraries to create iOS and Android applications using Visual Studio. You, as
    a .NET developer, can now use the skills you already have to accomplish this.
    In a nutshell, you would create a shared library for your applications and then
    have different facades for the different platforms. A second option is to use
    Xamarin Forms to create one Visual Studio project and target all three platforms.
    This makes it very easy for developers to target multiple platforms.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Xamarin通过允许.NET开发者使用标准的.NET库，在Visual Studio中创建iOS和Android应用程序来解决这一问题。作为.NET开发者，你现在可以使用你已有的技能来完成这项任务。简而言之，你会为你的应用程序创建一个共享库，然后为不同的平台创建不同的外观。第二个选项是使用Xamarin
    Forms来创建一个Visual Studio项目，并针对所有三个平台。这使得开发者针对多个平台变得非常容易。
- en: Installing Xamarin and other required components
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Xamarin和其他必需组件
- en: Xamarin can be installed during custom Visual Studio installation. For now,
    let's assume that Xamarin has not been installed and that you need to do that
    now, after you have installed Visual Studio.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Xamarin可以在自定义Visual Studio安装过程中安装。现在，让我们假设Xamarin尚未安装，并且在你安装Visual Studio之后需要现在安装它。
- en: Getting ready
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: One thing to be aware of if you want to target iOS is that you will need to
    use a Mac to build your iOS applications.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想针对iOS进行开发，需要注意的一点是你将需要使用Mac来构建你的iOS应用程序。
- en: How to do it…
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: In the **Control Panel**, click on **Programs and Features**. Right-click on
    your Visual Studio installation and click on **Change**:![How to do it…](img/B05391_11_01.jpg)
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**控制面板**中，点击**程序和功能**。右键单击你的Visual Studio安装，然后点击**更改**：![如何操作…](img/B05391_11_01.jpg)
- en: This will display the Visual Studio installer for you. Here you can modify your
    current Visual Studio installation by adding and removing components at will.
    Notice that we have selected **C#/.NET (Xamarin v4.0.3)** and **HTML/JavaScript
    (Apache Cordova) Update 8.1** to install. If you have no interest in using Xamarin,
    then leave off the Xamarin component and just keep the Apache Cordova option selected.
    This will still allow you to create Android applications using Apache Cordova
    instead of using Xamarin. Similarly, if you have no interest in Apache Cordova
    and simply want to create Android applications and iOS applications using Visual
    Studio, select the Xamarin component to install. The rest of the installation
    is straightforward:![How to do it…](img/B05391_11_02.jpg)
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将显示Visual Studio安装程序。在这里，您可以随意添加和删除组件来修改您当前的Visual Studio安装。请注意，我们已选择**C#/.NET
    (Xamarin v4.0.3)**和**HTML/JavaScript (Apache Cordova) Update 8.1**进行安装。如果您对使用Xamarin没有兴趣，则可以不安装Xamarin组件，只保留Apache
    Cordova选项选中。这将仍然允许您使用Apache Cordova而不是Xamarin来创建Android应用程序。同样，如果您对Apache Cordova没有兴趣，只想使用Visual
    Studio创建Android应用程序和iOS应用程序，请选择安装Xamarin组件。其余的安装过程很简单：![如何操作…](img/B05391_11_02.jpg)
- en: There is also a second step we need to take if we want to use Xamarin to target
    iOS applications. We have to install the required software on a Mac. Head on over
    to Xamarin's website on your Mac. The URL is [https://www.xamarin.com/](https://www.xamarin.com/).
    Click on the **Products** dropdown and select **Xamarin Platform** from the list:![How
    to do it…](img/B05391_11_03.jpg)
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想使用Xamarin来针对iOS应用程序，我们还需要采取第二个步骤。我们必须在Mac上安装所需的软件。在您的Mac上打开Xamarin的网站。网址是[https://www.xamarin.com/](https://www.xamarin.com/)。点击**产品**下拉菜单，从列表中选择**Xamarin
    Platform**：![如何操作…](img/B05391_11_03.jpg)
- en: You can also access the required page by going to [https://www.xamarin.com/platform](https://www.xamarin.com/platform).
    Clicking on the **Download now for free** button will install something called
    Xamarin Studio on your Mac. You need to be aware that when installed on a Mac,
    Xamarin Studio cannot create Windows Apps. It will only allow you to create iOS
    and Android apps on a Mac. Along with Xamarin Studio, you will also get the Xamarin
    Mac Agent (previously called the Xamarin Build Host). This is a required component
    so that you can link your PC to your Mac in order to build your iOS application.
    Lastly, the PC and Mac must also be able to connect to each other over a network
    (more on this later):![How to do it…](img/B05391_11_04.jpg)
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您也可以通过访问[https://www.xamarin.com/platform](https://www.xamarin.com/platform)来获取所需页面。点击**免费下载**按钮将在您的Mac上安装一个名为Xamarin
    Studio的程序。您需要知道，当安装在Mac上时，Xamarin Studio无法创建Windows应用程序。它只会允许您在Mac上创建iOS和Android应用程序。除了Xamarin
    Studio，您还将获得Xamarin Mac Agent（之前称为Xamarin Build Host）。这是一个必需的组件，以便您可以将您的PC连接到您的Mac以构建您的iOS应用程序。最后，PC和Mac也必须能够通过网络相互连接（关于这一点稍后会有更多说明）：![如何操作…](img/B05391_11_04.jpg)
- en: After downloading the installer on the Mac, the installation is straightforward.
    Just follow the screen prompts to complete the installation:![How to do it…](img/B05391_11_05.jpg)
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Mac上下载安装程序后，安装过程很简单。只需按照屏幕提示完成安装：![如何操作…](img/B05391_11_05.jpg)
- en: How it works…
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'The steps we took previously when installing Xamarin and Apache Cordova will
    allow us to do the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前在安装Xamarin和Apache Cordova时采取的步骤将使我们能够做到以下事情：
- en: '**Install Apache Cordova**: If you only want to target Android, iOS, and Windows
    but don''t want to use Xamarin'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安装Apache Cordova**：如果您只想针对Android、iOS和Windows，但不想使用Xamarin'
- en: '**Install Xamarin**: If you want to target Android, iOS, Windows, or all three
    and use a single solution to do so'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安装Xamarin**：如果您想针对Android、iOS、Windows或三者都进行目标定位，并使用单个解决方案来实现'
- en: Visual Studio is extremely flexible and offers developers a wide variety of
    choice.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio非常灵活，为开发者提供了广泛的选择。
- en: Creating an Android Visual Studio project using Apache Cordova
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Apache Cordova创建Android Visual Studio项目
- en: Creating an Android application using Apache Cordova is extremely easy. This
    recipe, however, will only show you how to get started.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Apache Cordova创建Android应用程序非常简单。然而，这个配方只会向您展示如何开始。
- en: Getting ready
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need to have Apache Cordova installed as part of the custom installation
    options during Visual Studio setup. To see how to do this, refer to the *Installing
    Xamarin and other required components* recipe in this chapter.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在Visual Studio设置过程中，您需要将Apache Cordova作为自定义安装选项的一部分进行安装。要了解如何操作，请参阅本章中的*安装Xamarin和其他必需组件*配方。
- en: How to do it…
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: From the **New Project** dialog screen, select **Apache Cordova Apps** and select
    the **Blank App (Apache Cordova)** as the template to use. Choose a location for
    your project and click on the **OK** button:![How to do it…](img/B05391_11_06.jpg)
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**新建项目**对话框屏幕中，选择**Apache Cordova应用程序**，并将**空白应用（Apache Cordova）**作为要使用的模板。选择项目位置，然后点击**确定**按钮：![如何操作……](img/B05391_11_06.jpg)
- en: Once Visual Studio has created your application, you will notice that it has
    a very specific structure to it. From the project, you will notice that you can
    target Android, iOS, Windows, or Windows Phone 8.1\. This is the framework you
    will be using to create your Android application:![How to do it…](img/B05391_11_07.jpg)
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦Visual Studio创建了你的应用程序，你会注意到它有一个非常具体的结构。从项目来看，你会注意到你可以针对Android、iOS、Windows或Windows
    Phone 8.1。这是你将用来创建Android应用程序的框架：![如何操作……](img/B05391_11_07.jpg)
- en: When you are ready to debug, you can choose an emulator from the **Debug** menu.
    This will deploy your application to the selected emulator and allow you to test
    your application:![How to do it…](img/B05391_11_08.jpg)
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你准备好调试时，你可以从**调试**菜单中选择一个模拟器。这将部署你的应用程序到所选模拟器，并允许你测试你的应用程序：![如何操作……](img/B05391_11_08.jpg)
- en: How it works…
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: Being able to target different mobile devices from a single solution using Visual
    Studio allows developers the freedom to experiment and find what solution fits
    them and their development style the best.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 能够使用Visual Studio从一个解决方案中针对不同的移动设备，这给了开发者自由去实验，找到最适合他们和发展风格的解决方案。
- en: Creating an iOS application using Xamarin Forms
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Xamarin Forms创建iOS应用程序
- en: Many developers want to try their hand at writing an iOS application. The big
    drawback has always been learning a new programming language and a new IDE. For
    some, it is probably not an issue as they want to learn something new. But for
    many .NET developers, being able to stick to an IDE and programming language they
    know is immensely empowering. Well, this is exactly what Xamarin Forms and Visual
    Studio achieve. It gives .NET developers the ability to use Visual Studio to write
    applications that can be run cross-platform easily, without having a separate
    code base for each.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 许多开发者都想尝试编写iOS应用程序。一直以来，最大的缺点就是学习一门新的编程语言和新的IDE。对一些人来说，这可能不是问题，因为他们想学习新东西。但对许多.NET开发者来说，能够坚持使用他们熟悉的IDE和编程语言是非常有利的。嗯，这正是Xamarin
    Forms和Visual Studio所实现的。它为.NET开发者提供了使用Visual Studio编写可以在多个平台上轻松运行的应用程序的能力，而不需要为每个平台编写单独的代码库。
- en: Getting ready
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need to have a Mac running OS X. You will only need this for debugging
    iOS applications.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要有一台运行OS X的Mac。你只需要这个来调试iOS应用程序。
- en: How to do it…
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: In Visual Studio 2015, create a new project. From the installed templates, choose
    **Cross-Platform** and select **Blank App (Xamarin.Forms.Portable)**. This will
    allow us to create an application that will be cross-platform and not specific
    to a single platform (Android or iOS, for example):![How to do it…](img/B05391_11_09.jpg)
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Visual Studio 2015中创建一个新的项目。从已安装的模板中选择**跨平台**，然后选择**空白应用（Xamarin.Forms.Portable）**。这将使我们能够创建一个跨平台的应用程序，而不是针对单一平台（例如Android或iOS）：![如何操作……](img/B05391_11_09.jpg)
- en: Project creation can take a few minutes to complete. Along the way, you might
    see a message telling you that **Developer Mode** is not enabled for Windows 10
    (assuming you are running Windows 10):![How to do it…](img/B05391_11_10.jpg)
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目创建可能需要几分钟才能完成。在这个过程中，你可能会看到一个消息告诉你Windows 10（假设你在运行Windows 10）的**开发者模式**尚未启用：![如何操作……](img/B05391_11_10.jpg)
- en: Enabling this is easy enough. You can click on the **settings for developers**
    link in the message that popped up, or you can type in `Developer mode` in the
    **Find a setting** search box in Windows 10 **Settings**:![How to do it…](img/B05391_11_11.jpg)
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用这个功能很简单。你可以在弹出的消息中点击**开发者设置**链接，或者你可以在Windows 10 **设置**中的**查找设置**搜索框中输入`开发者模式`：![如何操作……](img/B05391_11_11.jpg)
- en: Clicking on the **Developer mode** option will display the **Use developer features**
    confirmation dialog. Just click on **Yes** to continue:![How to do it…](img/B05391_11_12.jpg)
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**开发者模式**选项将显示**使用开发者功能**确认对话框。只需点击**是**继续：![如何操作……](img/B05391_11_12.jpg)
- en: After the project is created, you will be presented with a **Get started with
    Xamarin.Forms** screen:![How to do it…](img/B05391_11_13.jpg)
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目创建完成后，你将看到一个**开始使用Xamarin.Forms**的屏幕：![如何操作……](img/B05391_11_13.jpg)
- en: Looking at your **Solution Explorer** you will notice that several projects
    have been created. We will only focus on the iOS project:![How to do it…](img/B05391_11_14.jpg)
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看你的**解决方案资源管理器**，你会注意到已经创建了几个项目。我们只关注iOS项目：![如何操作…](img/B05391_11_14.jpg)
- en: Taking a look at the debug targets, you will notice that as you change your
    target to Droid, for example, the Android project is set as the start-up project.
    The same happens if you set it to iOS:![How to do it…](img/B05391_11_15.jpg)
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看调试目标时，你会注意到，当你将目标更改为Droid，例如，Android项目被设置为启动项目。如果你将其设置为iOS，也会发生相同的情况：![如何操作…](img/B05391_11_15.jpg)
- en: As it stands now, before you can go ahead and debug your iOS application, you
    need to connect Visual Studio to the Xamarin Mac Agent on your Mac. In Visual
    Studio, hover over the **Xamarin Mac Agent** button on the iOS toolbar. It will
    show as disconnected:![How to do it…](img/B05391_11_16.jpg)
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 目前为止，在你开始调试iOS应用程序之前，你需要将Visual Studio连接到Mac上的Xamarin Mac Agent。在Visual Studio中，将鼠标悬停在iOS工具栏上的**Xamarin
    Mac Agent**按钮上。它将显示为未连接：![如何操作…](img/B05391_11_16.jpg)
- en: Note
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: See the *Installing Xamarin and other required components* recipe earlier in
    this chapter for how to install the Xamarin Mac Agent.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考本章前面的*安装Xamarin和其他必需组件*部分，了解如何安装Xamarin Mac Agent。
- en: To connect to the Xamarin Mac Agent, click on this button. The **Xamarin Mac
    Agent Instructions** window will be displayed. You can follow the instructions
    on this screen, which are as follows:![How to do it…](img/B05391_11_17.jpg)
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要连接到Xamarin Mac Agent，点击此按钮。将显示**Xamarin Mac Agent说明**窗口。你可以按照此屏幕上的说明操作，说明如下：![如何操作…](img/B05391_11_17.jpg)
- en: On your Mac, open up **System Preferences**. Look for and click on the **Sharing**
    icon:![How to do it…](img/B05391_11_18.jpg)
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的Mac上，打开**系统偏好设置**。查找并点击**共享**图标：![如何操作…](img/B05391_11_18.jpg)
- en: This will display the **Sharing** window. Select **Remote Login** from the menu
    on the left and, under **Only these users**, select or add your current Mac user
    to this list:![How to do it…](img/B05391_11_19.jpg)
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将显示**共享**窗口。从左侧菜单中选择**远程登录**，然后在**仅这些用户**下选择或添加你当前Mac用户到这个列表中：![如何操作…](img/B05391_11_19.jpg)
- en: When you have added your current Mac user to the **Remote Login** list, click
    the back button to return to the previous screen. Then look for and click on **Network**:![How
    to do it…](img/B05391_11_18.jpg)
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你将你的当前Mac用户添加到**远程登录**列表中后，点击后退按钮返回到上一个屏幕。然后查找并点击**网络**：![如何操作…](img/B05391_11_18.jpg)
- en: This will open up the **Network** screen. Look where it shows the current status
    as **Connected**. Underneath that, you will see an IP address. Make a note of
    the IP address displayed, because you will need to use it to connect Visual Studio
    to the Xamarin Mac Agent:![How to do it…](img/B05391_11_20.jpg)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开**网络**屏幕。查看显示当前状态为**已连接**的地方。下面，你会看到一个IP地址。记下显示的IP地址，因为你将需要使用它将Visual Studio连接到Xamarin
    Mac Agent：![如何操作…](img/B05391_11_20.jpg)
- en: Note
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Just note that I have purposefully masked my IP address in the screenshot.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 只要注意，我已经故意在截图上隐藏了我的IP地址。
- en: Back in Windows, in Visual Studio click **OK** to dismiss the **Xamarin Mac
    Agent Instructions** screen. The **Xamarin Mac Agent** screen will now be visible.
    At the bottom of this screen, click on the **Add Mac…** button:![How to do it…](img/B05391_11_21.jpg)
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Windows中，在Visual Studio中点击**确定**以关闭**Xamarin Mac Agent说明**屏幕。现在，**Xamarin Mac
    Agent**屏幕将可见。在此屏幕底部，点击**添加Mac…**按钮：![如何操作…](img/B05391_11_21.jpg)
- en: This will display the **Add Mac** screen, where you need to enter the IP address
    you noted from the **Network** screen in your Mac's **System Preferences**. Click
    on the **Add** button:![How to do it…](img/B05391_11_22.jpg)
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将显示**添加Mac**屏幕，在这里你需要输入从Mac的**系统偏好设置**中的**网络**屏幕上记下的IP地址。点击**添加**按钮：![如何操作…](img/B05391_11_22.jpg)
- en: Note
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Just note that I have purposefully masked my IP address in the screenshot.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 只要注意，我已经故意在截图上隐藏了我的IP地址。
- en: You will now be asked to provide the username and password for the Mac user
    you added on the **Remote Login** screen earlier. Click on the **Login** button:![How
    to do it…](img/B05391_11_23.jpg)
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你将被要求提供之前在**远程登录**屏幕上添加的Mac用户的用户名和密码。点击**登录**按钮：![如何操作…](img/B05391_11_23.jpg)
- en: Note
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Just note that I have purposefully masked IP addresses and GUID in the screenshot.
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 只要注意，我已经故意在截图上隐藏了IP地址和GUID。
- en: After clicking **Login**, you should automatically be connected to your Xamarin
    Mac Agent from Visual Studio:![How to do it…](img/B05391_11_24.jpg)
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**登录**后，你应该会自动从Visual Studio连接到你的Xamarin Mac Agent：![如何操作…](img/B05391_11_24.jpg)
- en: You can now select the iOS device you want to debug on. As you can see, there
    are a wide variety of iOS devices to choose from:![How to do it…](img/B05391_11_25.jpg)
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在可以选中你想要调试的 iOS 设备。正如你所见，有各种各样的 iOS 设备可供选择：![如何操作…](img/B05391_11_25.jpg)
- en: For the purposes of this recipe, we have just chosen an **iPhone 4S iOS 9.3**.
    Click on the **Debug** button to start the app:![How to do it…](img/B05391_11_26.jpg)
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了本菜谱的目的，我们只是选择了一个**iPhone 4S iOS 9.3**。点击**调试**按钮以启动应用：![如何操作…](img/B05391_11_26.jpg)
- en: This will now build your application and send that information over the network
    connection to the Xamarin Mac Agent. This will then fire up the simulator on your
    Mac. The first time you do this, it might take a few minutes to spin up the simulator,
    but once it is done, successive debug sessions will go much quicker:![How to do
    it…](img/B05391_11_27.jpg)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将现在构建你的应用程序，并通过网络连接将信息发送到 Xamarin Mac 代理。然后它将在你的 Mac 上启动模拟器。第一次这样做时，启动模拟器可能需要几分钟，但一旦完成，后续的调试会快得多：![如何操作…](img/B05391_11_27.jpg)
- en: After the simulator is started on the Mac, the Xamarin application will be launched:![How
    to do it…](img/B05391_11_28.jpg)
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Mac 上启动模拟器后，Xamarin 应用程序将被启动：![如何操作…](img/B05391_11_28.jpg)
- en: When the Xamarin splash screen closes, you will see the **Welc****ome to Xamarin
    Forms!** text:![How to do it…](img/B05391_11_29.jpg)
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当 Xamarin 启动画面关闭时，你会看到**欢迎使用 Xamarin Forms！**文本：![如何操作…](img/B05391_11_29.jpg)
- en: Back in Visual Studio, stop debugging. You will notice that the app closes in
    the simulator app on the Mac, and that debugging stops in Visual Studio. The simulator,
    however, remains open on your Mac.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中返回，停止调试。你会注意到应用在 Mac 的模拟器中关闭，并且调试在 Visual Studio 中停止。然而，模拟器在你的
    Mac 上仍然保持打开状态。
- en: 'Now let''s change some text. Look at the portable project in your Visual Studio
    solution. This is the shared project that all the other projects in the solution
    will use. In the portable project, click on the `App.cs` file:'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在让我们更改一些文本。查看你的 Visual Studio 解决方案中的可移植项目。这是所有其他解决方案中项目将使用的共享项目。在可移植项目中，点击
    `App.cs` 文件：
- en: '![How to do it…](img/B05391_11_30.jpg)'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/B05391_11_30.jpg)'
- en: The default code is displayed. Here you can see the `Welcome to Xamarin Forms!`
    text we saw in the application we debugged earlier:![How to do it…](img/B05391_11_31.jpg)
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认代码显示。在这里，你可以看到我们在之前调试的应用程序中看到的 `Welcome to Xamarin Forms!` 文本：![如何操作…](img/B05391_11_31.jpg)
- en: 'Change the code to look as follows. All we are doing is adding the date and
    time. A few things to note here are:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将代码更改为如下所示。我们正在做的是添加日期和时间。这里有几个需要注意的地方：
- en: We are using the standard .NET `DateTime` library here
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在这里使用标准的 .NET `DateTime` 库。
- en: 'We are using string interpolation to create our text to display on the form:'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们使用字符串插值来创建在表单上显示的文本：
- en: '[PRE0]'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When you have done that, debug your application again. When the simulator displays
    your iOS application on the Mac, you will see that the date and time are shown:![How
    to do it…](img/B05391_11_32.jpg)
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成这些后，再次调试你的应用程序。当模拟器在 Mac 上显示你的 iOS 应用程序时，你会看到日期和时间被显示出来：![如何操作…](img/B05391_11_32.jpg)
- en: How it works…
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: One thing to note is that we are not doing anything different here than we would
    do in any other standard .NET application. We are writing C# code and compiling
    it to run on an iOS operating system. We can also easily change the application
    to debug on any iOS device. We didn't need to learn Objective-C or Swift (although
    Swift is an awesome language and well worth learning). We also didn't need to
    get to grips with learning a new IDE (Xcode, which is used to develop iOS and
    Mac applications). We didn't have to tweak any constraints, modify any playground
    elements, or learn how to use any new controls. Xamarin Forms and Visual Studio
    take care of all of this for us out of the box. Best of all, Xamarin is now free
    with Visual Studio. There is no reason why you shouldn't try your hand at writing
    an iOS application.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的一点是，我们在这里做的并没有比在其他任何标准 .NET 应用程序中做的更多。我们正在编写 C# 代码并将其编译以在 iOS 操作系统上运行。我们也可以轻松地将应用程序更改为在任何
    iOS 设备上调试。我们不需要学习 Objective-C 或 Swift（尽管 Swift 是一种很棒的语言，值得学习）。我们也不需要熟悉新的 IDE（用于开发
    iOS 和 Mac 应用的 Xcode）。我们不需要调整任何约束，修改任何游乐场元素，或学习如何使用任何新的控件。Xamarin Forms 和 Visual
    Studio 会为我们处理所有这些。最好的是，Xamarin 现在免费与 Visual Studio 一起使用。没有理由你不应该尝试编写 iOS 应用程序。
