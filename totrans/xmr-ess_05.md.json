["```cs\n[Activity (Label = \"NationalParks.Droid\",\n    MainLauncher = true)]\n```", "```cs\nprotected override void OnCreate (Bundle bundle)\n{\n    base.OnCreate (bundle);\n\n    // Set our view from the \"main\" layout resource\n    SetContentView (Resource.Layout.Main);\n\n    // Get our button from the layout resource,\n    // and attach an event to it\n    Button button =\n        FindViewById<Button> (Resource.Id.myButton);\n\n    button.Click += delegate {\n        button.Text = string.Format (\n            \"{0} clicks!\", count++);\n    };\n}\n```", "```cs\n    private static NationalParksData _instance;\n    public static NationalParksData Instance\n    {\n        get { return _instance ??\n            (_instance = new NationalParksData()); }\n    }\n    ```", "```cs\n       public List<NationalPark> Parks { get; protected set; }\n    ```", "```cs\n    protected string GetFilename()\n    {\n      return Path.Combine (\n           Environment.GetFolderPath(\n               Environment.SpecialFolder.MyDocuments),\n              \"NationalParks.json\");\n    }\n    ```", "```cs\n    private NationalParksData ()\n    {\n      if (File.Exists (GetFilename())) {\n        string var serializedParks = File.ReadAllText\n            (GetFilename());\n        Parks =\n          JsonConvert.DeserializeObject<List<NationalPark>>\n            (serializedParks);\n      }\n      else\n        Parks = new List<NationalPark> ();\n    }\n    ```", "```cs\n    public void Save(NationalPark park)\n    {\n      if (Parks != null) {\n        if (!Parks.Contains (park))\n          _parks.Add (park);\n        string var serializedParks =\n          JsonConvert.SerializeObject (Parks);\n        File.WriteAllText (GetFilename (), serializedParks);\n      }\n    }\n    ```", "```cs\n    public void Delete(NationalPark park)\n    {\n      if (Parks != null) {\n        Parks.Remove (park);\n        string serializedParks =\n          JsonConvert.SerializeObject (Parks);\n        File.WriteAllText (GetFilename (), serializedParks);\n      }\n    }\n    ```", "```cs\n    public class NationalParksAdapter :\n        BaseAdapter<NationalPark>\n    {\n    }\n    ```", "```cs\n    private Activity _context;\n    public NationalParksAdapter(Activity context)\n    {\n        _context = context;\n    }\n    ```", "```cs\n    public override long GetItemId(int position)\n    {\n        return  position;\n    }\n    ```", "```cs\n    public override int Count\n    {\n        get { return NationalParksData.Instance.Parks.Count; }\n    }\n    ```", "```cs\n    public override NationalPark this[int position]\n    {\n        get { return NationalParksData.Instance.Parks[position]; }\n    }\n    ```", "```cs\n    public override View GetView(int position,\n        View convertView, ViewGroup parent)\n    {\n        View view = convertView;\n        if (view == null) {\n            view = \n                _context.LayoutInflater.Inflate(\n                    Android.Resource.Layout.SimpleListItem1,\n                    null);\n        }\n\n        view.FindViewById<TextView>\n            (Android.Resource.Id.Text1).Text =\n                NationalParksData.Instance.Parks [position].Name;\n\n        return view;\n    }\n    ```", "```cs\n    NationalParksAdapter _adapter;\n    . . .\n    protected override void OnCreate (Bundle bundle)\n    {\n        . . . \n        _adapter = new NationalParksAdapter (this);\n        FindViewById<ListView>\n           (Resource.Id.parksListView).Adapter = _adapter;\n        . . .\n    }\n    ```", "```cs\n    <menu\n      >\n        <item android:id=\"@+id/actionNew\"\n            android:icon=\"@drawable/ic_new\"\n            android:title=\"New\"\n            android:showAsAction=\"ifRoom\" />\n    </menu>\n    ```", "```cs\npublic override bool OnCreateOptionsMenu(IMenu menu)\n{\n    MenuInflater.Inflate(Resource.Menu.MainMenu, menu);\n    return base.OnCreateOptionsMenu(menu);\n}\n```", "```cs\npublic override bool OnOptionsItemSelected (\n    IMenuItem item)\n{\n    switch (item.ItemId)\n    {\n    case Resource.Id.actionNew:\n        // Navigate to Detail View\n        return true;\n\n    default :\n        return base.OnOptionsItemSelected(item);\n    }\n}\n```", "```cs\n    SetContentView (Resource.Layout.Detail);\n    ```", "```cs\n<menu >\n    <item android:id=\"@+id/actionEdit\"\n        android:icon=\"@drawable/ic_edit\"\n       android:title=\"Edit\"\n       android:showAsAction=\"ifRoom\" />\n   <item android:id=\"@+id/actionPhotos\"\n       android:title=\"Photos\"\n       android:showAsAction=\"never\" />\n    <item android:id=\"@+id/actionDirections\"\n       android:title=\"Directions\"\n       android:showAsAction=\"never\" />\n</menu>\n```", "```cs\n    if (Intent.HasExtra (\"parkid\")) {\n        string parkId = Intent.GetStringExtra (\"parkid\");\n        _park = NationalParksData.Instance.\n            Parks.FirstOrDefault (x => x.Id == parkId);\n    }\n    else\n        _park = new NationalPark ();\n    ```", "```cs\n    protected void ParkToUI()\n    {\n        _nameEditText.Text = _park.Name;\n        . . .\n        _latEditText.Text = _park.Latitude.ToString();\n        . . .\n    }\n    ```", "```cs\npublic override bool OnOptionsItemSelected (\n    IMenuItem item)\n{\n    switch (item.ItemId) {\n    . . .\n    case Resource.Id.actionPhotos:\n        Intent urlIntent =\n            new Intent (Intent.ActionView);\n          urlIntent.SetData (\n            Android.Net.Uri.Parse (\n            String.Format(\n                \"http://www.bing.com/images/search?q={0}\",\n                _park.Name)));\n        StartActivity (urlIntent);\n        return true;\n    . . .\n    }\n}\n```", "```cs\ncase Resource.Id.actionDirections:\n\n    if ((_park.Latitude.HasValue) &&\n       (_park.Longitude.HasValue)) {\n        Intent mapIntent = new Intent\n           (Intent.ActionView,\n            Android.Net.Uri.Parse (\n            String.Format (\"geo:0,0?q={0},{1}&z=16 ({2})\",\n            _park.Latitude,\n            _park.Longitude,\n            _park.Name)));\n        StartActivity (mapIntent);\n    }\n\n    return true;\n```", "```cs\n    public void ParkClicked(object sender,\n        ListView.ItemClickEventArgs e)\n    {\n        Intent intent = new Intent (this,\n            typeof(DetailActivity));\n        intent.PutExtra(\"parkid\", adapter[e.Position].Id);\n        StartActivity (intent);\n    }\n    ```", "```cs\n    FindViewById<ListView>\n        (Resource.Id.parksListView).ItemClick   += ParkClicked;\n    ```", "```cs\n    SetContentView (Resource.Layout.Edit);\n    ```", "```cs\n<menu >\n    <item android:id=\"@+id/actionSave\"\n    android:icon=\"@drawable/ic_save\"\n      android:title=\"Save\"\n      android:showAsAction=\"always\" />\n    <item android:id=\"@+id/actionDelete\"\n    android:icon=\"@drawable/ic_delete\"\n      android:title=\"Delete\"\n      android:showAsAction=\"always\" />\n</menu>\n```", "```cs\npublic override bool OnOptionsItemSelected (IMenuItem item)\n{\n    switch (item.ItemId)\n    {\n        case Resource.Id.actionSave:\n            // will add save logic here…\n            return true;\n\n        case Resource.Id.actionDelete: \n            // will add delete logic here…\n            return true;\n\n        default :\n            return base.OnOptionsItemSelected(item);\n    }\n}\n```", "```cs\n    EditText _nameEditText;\n    EditText _descrEditText;\n    . . .\n    ```", "```cs\n    _nameEditText= FindViewById<EditText>\n        (Resource.Id.nameEditText);\n    _descrEditText = FindViewById<EditText>\n        (Resource.Id.descrEditText);\n    . . .\n    ```", "```cs\n    protected void ParkToUI()\n    {\n          _nameEditText.Text = _park.Name;\n          _descrEditText.Text = _park.Description;\n          . . .\n    }\n    ```", "```cs\n    protected override void OnResume ()\n    {\n        base.OnResume ();\n        ParkToUI ();\n    }\n    ```", "```cs\n    protected void UIToPark()\n    {\n        _park.Name = _nameEditText.Text;\n        _park.Description = _descrEditText.Text;\n        . . .\n        if (!String.IsNullOrEmpty (_latEditText.Text))\n            _park.Latitude = Double.Parse (_latEditText.Text);\n        else\n            _park.Latitude = null;\n        . . .\n    }\n    ```", "```cs\n    protected void SavePark()\n      {\n          UIToPark ();\n          NationalParksData.Instance.Save (_park);\n\n        Intent returnIntent = new Intent ();\n        returnIntent.PutExtra (\"parkdeleted\", false);\n        SetResult (Result.Ok, returnIntent);\n\n          Finish ();\n    }\n    ```", "```cs\n    case Resource.Id.actionSave:\n          SavePark ();\n          return true;\n    ```", "```cs\n    protected void DeletePark()\n    {\n        NationalParksData.Instance.Delete (_park);\n\n        Intent returnIntent = new Intent ();\n        returnIntent.PutExtra (\"parkdeleted\", true);\n        SetResult (Result.Ok, returnIntent);\n\n        Finish ();\n    }\n    ```", "```cs\n    case Resource.Id.actionDelete:\n          DeletePark ();\n          return true;\n    ```", "```cs\npublic override bool OnOptionsItemSelected (\n    IMenuItem item)\n{\n    switch (item.ItemId)\n    {\n        case Resource.Id.actionNew:\n            StartActivity (typeof(DetailActivity));\n            return true;\n        default :\n            return base.OnOptionsItemSelected(item);\n    }\n}\n```", "```cs\ncase Resource.Id.actionEdit:\n    Intent editIntent = new Intent(this, \n        typeof(EditActivity));\n    editIntent.PutExtra(\"parkid\", _park.Id);\n    StartActivityForResult(editIntent, 1);\n    return true;\n```", "```cs\nprotected override void OnActivityResult (\n    int requestCode, Result resultCode, Intent data)\n  {\n      if ((requestCode == 1) && (resultCode == Result.Ok))\n      {\n          if (data.GetBooleanExtra (\"parkdeleted\", false))\n              Finish ();\n          }\n        else\n            base.OnActivityResult (\n                requestCode, resultCode, data);\n      }\n}\n```", "```cs\nprotected override void OnResume ()\n{\n    base.OnResume ();\n    adapter.NotifyDataSetChanged ();\n}\n```"]