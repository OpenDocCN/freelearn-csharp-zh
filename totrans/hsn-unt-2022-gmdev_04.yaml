- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Importing and Integrating Assets
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入和整合资源
- en: In the previous chapter, we created the prototype of our level. Now, let’s suppose
    that we have coded the game and tested it, confirming the game idea is fun. With
    that, it’s time to replace the prototype art with the real finished art. We are
    going to actually code the game in the next chapter, *Chapter 5*, *Introduction
    to C# and Visual Scripting*, but for learning purposes, let’s just skip that part
    for now. In order to use the final assets, we need to learn how to get them (images,
    3D models, and so on), how to import them into Unity, and how to integrate them
    into our scene.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们创建了我们的关卡原型。现在，让我们假设我们已经编写了游戏并进行了测试，确认游戏想法很有趣。有了这个，现在是时候用真正的完成艺术来替换原型艺术了。我们将在下一章*第5章*，*C#和视觉脚本简介*中实际编写游戏，但现在为了学习目的，让我们先跳过这部分。为了使用最终资源，我们需要学习如何获取它们（图像、3D模型等），如何将它们导入Unity，以及如何将它们整合到我们的场景中。
- en: 'In this chapter, we will examine the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下主题：
- en: Importing assets
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入资源
- en: Integrating assets
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整合资源
- en: Configuring assets
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置资源
- en: Let’s start by learning how to get assets in Unity, such as 3D models and textures.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先学习如何在Unity中获取资源，例如3D模型和纹理。
- en: Importing assets
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入资源
- en: We have different sources of assets we can use in our project. We can simply
    receive a file from our artist, download them from different free and paid assets
    sites, or we can use the **Asset Store**, Unity’s official asset virtual store,
    where we can get free and paid assets ready to use with Unity. We will use a mix
    of downloading assets from the internet and from the Asset Store, just to use
    all possible resources.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用的项目资源来源有很多。我们可以简单地从我们的艺术家那里接收文件，从不同的免费和付费资源网站上下载它们，或者我们可以使用**Asset Store**，Unity的官方虚拟资源商店，在那里我们可以获取免费和付费的资源，这些资源可以与Unity一起使用。我们将使用从互联网和Asset
    Store下载资源的混合方式，以便使用所有可能资源。
- en: 'In this section, we will cover the following concepts related to importing
    assets:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍与导入资源相关的以下概念：
- en: Importing assets from the internet
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从互联网导入资源
- en: Importing assets from the Asset Store
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从Asset Store导入资源
- en: Importing assets from Unity Packages
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从Unity包导入资源
- en: Let’s start by exploring the first source of assets, the internet.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让我们先探索第一个资源来源，互联网。
- en: Importing assets from the internet
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从互联网导入资源
- en: 'In terms of getting art assets for our project, let’s start with our terrain
    textures. Remember that we have our terrain painted with a grid pattern, so the
    idea is to replace that with grass, mud, rock, and other kinds of textures. To
    do that, we need images. In this case, these kinds of images are usually top-down
    views of different terrain patterns, and they have the requirement of being “tileable,”
    meaning you can repeat them with no noticeable pattern in their connections. You
    can see an example of this in the following image:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在获取项目中的艺术资源方面，让我们从我们的地形纹理开始。请记住，我们的地形已经被涂上了网格图案，所以想法是用草地、泥土、岩石和其他类型的纹理来替换它。为了做到这一点，我们需要图像。在这种情况下，这类图像通常是不同地形图案的俯视图，并且它们有“可平铺”的要求，这意味着您可以在它们的连接处重复它们而不会出现明显的图案。您可以在以下图像中看到这个例子：
- en: '![](img/B18585_04_01.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_01.png)'
- en: 'Figure 4.1: Left – grass patch; Right – the same grass patch separated to highlight
    the texture tiling'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1：左 - 草地块；右 - 将同一草地块分开以突出纹理平铺
- en: The grass on the left seems to be one single big image, but if you pay attention,
    you should be able to see some patterns repeating themselves. In this case, this
    grass is just a single image repeated four times in a grid, like the one on the
    right. This way, you can cover large areas by repeating a single small image,
    saving lots of RAM on the user’s computer.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧的草地看起来像是一张巨大的单一图像，但如果您仔细观察，应该能够看到一些重复出现的图案。在这种情况下，这片草地实际上只是单个图像在网格中重复了四次，就像右侧的图像一样。这样，您可以通过重复单个小图像来覆盖大面积，从而在用户的计算机上节省大量RAM。
- en: 'The idea is to get these kinds of images to paint our terrain. You can get
    them from several places, but the easiest way is to use *Google Images* or any
    image search engine. Always check for copyright permissions before using something
    from these sources. To do this, follow these steps:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 策略是获取这类图像来绘制我们的地形。您可以从几个地方获取它们，但最简单的方法是使用*Google Images*或任何图像搜索引擎。在使用这些来源的内容之前，请始终检查版权许可。为此，请按照以下步骤操作：
- en: Open your browser (Chrome, Safari, Edge, etc.).
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的浏览器（Chrome、Safari、Edge等）。
- en: Go to your preferred search engine. In this case, I will use Google.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往您偏好的搜索引擎。在这种情况下，我将使用Google。
- en: Use the keywords `PATTERN tileable texture`, replacing `PATTERN` with the kind
    of terrain you are looking for, such as `grass tileable texture` or `mud tileable
    texture`. In this case, I am going to type `grass tileable texture` and then press
    *Enter* to search.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用关键词`PATTERN tileable texture`，将`PATTERN`替换为你正在寻找的地形类型，例如`grass tileable texture`或`mud
    tileable texture`。在这种情况下，我将输入`grass tileable texture`，然后按*Enter*键进行搜索。
- en: 'Switch to image search mode:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到图片搜索模式：
- en: '![](img/B18585_04_02.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_02.png)'
- en: 'Figure 4.2: Google search for images'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2：Google搜索图片
- en: Choose any texture you find suitable for the kind of grass you need and click
    it. Remember that the texture must be a top-down view of the grass and must repeat.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择任何你认为适合所需草地的纹理，然后点击它。请记住，纹理必须是草地的俯视图，并且必须重复。
- en: Try to check the image’s resolution before picking it. Try to select squared
    images that have a resolution less than 1024 x 1024 for now.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择之前尝试检查图片的分辨率。目前尝试选择分辨率小于1024 x 1024的方形图片。
- en: 'Right-click the opened image and select **Save image as…**:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击打开的图片，并选择**另存为…**：
- en: '![](img/B18585_04_03.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_03.png)'
- en: Figure 4.3 Save image as… option
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.3另存为…选项
- en: Save the image in any folder you will remember.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将图片保存到任何你记得的文件夹中。
- en: 'Now that you have downloaded the image, you can add it to your project in several
    ways. The simplest one would be by doing the following:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经下载了图片，你可以通过几种方式将其添加到你的项目中。最简单的一种方法如下：
- en: Locate your image using **File Explorer** (**Finder** on Mac).
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**文件资源管理器**（Mac上的**Finder**）定位你的图片。
- en: Locate or create the `Textures` folder in the Project window in Unity.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Unity的项目窗口中定位或创建`Textures`文件夹。
- en: Put both the **File Explorer** and the **Unity Project Window** next to each
    other.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**文件资源管理器**和**Unity项目窗口**并排放置。
- en: 'Drag the file from **File Explorer** to the `Textures` folder in the **Unity
    Project Window**:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件从**文件资源管理器**拖动到**Unity项目窗口**中的`Textures`文件夹：
- en: '![](img/B18585_04_04.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_04.png)'
- en: 'Figure 4.4: Texture being dragged from Windows File Explorer to Unity’s Project
    view'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.4：从Windows文件资源管理器拖动纹理到Unity的项目视图
- en: For simple textures like these ones, any search engine can be helpful, but if
    you want to replace the player’s base geometry with detailed walls and doors or
    place enemies in your scene, you need to get 3D models. If you search for those
    in any search engine using keywords such as “free zombie 3D model,” you will find
    endless free and paid 3D models sites such as TurboSquid and Mixamo, but those
    sites can be problematic because those meshes are usually not prepared for being
    used in Unity, or even games. You will find models with very high polygon counts,
    incorrect sizes or orientations, unoptimized textures, and so on. To prevent those
    problems, we’ll want to use a better source, and in this case, we will use Unity’s
    Asset Store, so let’s explore it.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这些简单的纹理，任何搜索引擎都可以有所帮助，但如果你想要用详细的墙壁和门替换玩家的基础几何形状，或者在你的场景中放置敌人，你需要获取3D模型。如果你在搜索引擎中使用诸如“免费僵尸3D模型”等关键词搜索，你会找到无数免费和付费的3D模型网站，如TurboSquid和Mixamo，但那些网站可能会有问题，因为那些网格通常没有为在Unity中使用或甚至用于游戏而准备。你会发现具有非常高的多边形计数、不正确的尺寸或方向、未优化的纹理等问题。为了避免这些问题，我们希望使用更好的来源，在这种情况下，我们将使用Unity的Asset
    Store，让我们来探索它。
- en: Importing assets from the Asset Store
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从Asset Store导入资源
- en: The Asset Store is Unity’s official asset marketplace where you can find lots
    of models, textures, sounds, and even entire Unity plugins to extend the capabilities
    of the engine. In this case, we will limit ourselves to downloading 3D models
    to replace the player’s base prototype. You will want to get 3D models with a
    modular design, meaning that you will get several pieces, such as walls, floors,
    corners, and so on. You can connect them to create any kind of scenario.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Asset Store是Unity的官方资源市场，你可以在这里找到许多模型、纹理、声音，甚至完整的Unity插件来扩展引擎的功能。在这种情况下，我们将限制自己下载3D模型来替换玩家的基础原型。你将想要获取具有模块化设计的3D模型，这意味着你将得到几个部件，如墙壁、地板、角落等。你可以将它们连接起来创建任何类型的场景。
- en: 'In order to do that, you must follow these steps:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，你必须遵循以下步骤：
- en: 'Click on **Window | Asset Store** in Unity, which will open a new window saying
    the Asset Store has moved. In previous versions of Unity, you could see the Asset
    Store directly inside the editor, but now, it is recommended to open it in a regular
    web browser, so just click the **Search Online** button, which will open the site
    [https://assetstore.unity.com/](https://assetstore.unity.com/) in your preferred
    browser. Also, you can check the **Always open in browser from menu** to directly
    open the page whenever you click on **Window | Asset Store**:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Unity中点击**窗口 | 资产商店**，这将打开一个新窗口，显示资产商店已迁移。在Unity的早期版本中，你可以在编辑器中直接看到资产商店，但现在，建议在常规网页浏览器中打开它，所以点击**在线搜索**按钮，这将在你首选的浏览器中打开网站[https://assetstore.unity.com/](https://assetstore.unity.com/)。此外，你可以勾选**从菜单始终在浏览器中打开**，以便在点击**窗口
    | 资产商店**时直接打开页面：
- en: '![](img/B18585_04_05.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_05.png)'
- en: 'Figure 4.5: Asset Store moved message'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.5：资产商店迁移消息
- en: 'In the top menu, click on the **3D** category to browse 3D assets:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部菜单中，点击**3D**类别来浏览3D资产：
- en: '![](img/B18585_04_06.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_06.png)'
- en: 'Figure 4.6: 3D assets menu'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.6：3D资产菜单
- en: 'In the recently opened page, click the arrow to the right of the **3D** category
    in the **All Categories** panel on the right, and then open **Environments** and
    check the **Sci-Fi** mark, as we will make a future-themed game:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在最近打开的页面中，点击右侧**所有类别**面板中**3D**类别的右侧箭头，然后打开**环境**并勾选**科幻**标记，因为我们将会制作一个未来主题的游戏：
- en: '![](img/B18585_04_07.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_07.png)'
- en: 'Figure 4.7: 3D assets menu'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.7：3D资产菜单
- en: As you can see, there are several categories for finding different types of
    assets, and you can pick another one if you want to. In **Environments**, you
    will find 3D models that can be used to generate the scenery for your game.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，有几个类别可以用来查找不同类型的资产，如果你想的话，可以挑选另一个。在**环境**类别中，你可以找到可用于为你的游戏生成场景的3D模型。
- en: 'If you need to, you can pay for an asset, but let’s hide the paid ones for
    now. You can do that by clicking the **Sort by Price** option in the top-left
    section and selecting the **Free Assets** option:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你需要，你可以为资产付费，但现在让我们先隐藏付费的资产。你可以通过点击左上角的**按价格排序**选项，并选择**免费资产**选项来实现：
- en: '![](img/B18585_04_08.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_08.png)'
- en: 'Figure 4.8: Free Assets option'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.8：免费资产选项
- en: 'In the search area, find any asset that seems to have the aesthetic you are
    looking for and click it. Remember to look out for outdoor assets, because most
    environment packs are usually interiors only. In my case, I have picked one called
    **Sci-Fi Styled Modular Pack**, which serves for both interiors and exteriors.
    Take into account that that package might not exist by the time you are reading
    this, so you might need to choose another one. If you don’t find a suitable package,
    you can download and pick the asset files we used in the GitHub repository:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索区域，找到任何看起来符合你审美需求的资产并点击它。记得要留意户外资产，因为大多数环境包通常只包含室内场景。在我的例子中，我选择了一个名为**科幻风格模块包**的资产，它适用于室内和室外。请注意，当你阅读这篇文档时，这个包可能已经不存在了，所以你可能需要选择另一个。如果你找不到合适的包，你可以从GitHub仓库下载并选择我们使用的资产文件：
- en: '![](img/B18585_04_09.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_09.png)'
- en: 'Figure 4.9: Preview of Asset Store searched packages'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.9：资产商店搜索包预览
- en: 'Now, you will see the package details in the **Asset Store** window. Here,
    you can find information regarding the package’s description, videos/images, the
    package’s contents, and the most important part, the reviews, where you can see
    whether the package is worth getting:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你将在**资产商店**窗口中看到包的详细信息。在这里，你可以找到关于包的描述、视频/图片、包的内容，以及最重要的部分，即评论，你可以看到这个包是否值得获取：
- en: '![](img/B18585_04_10.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_10.png)'
- en: 'Figure 4.10: Asset Store package details'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.10：资产商店包详细信息
- en: 'If you are OK with this package, click the **Add To My Assets** button, log
    in to Unity if requested, and then click the **Open In Unity** button. You might
    be prompted to accept the browser to open Unity; if so, just accept:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你对这个包没有异议，点击**添加到我的资产**按钮，如果需要，登录Unity，然后点击**在Unity中打开**按钮。你可能需要接受浏览器打开Unity的提示；如果是这样，只需接受即可：
- en: '![](img/B18585_04_11.png)Figure 4.11: Switching apps'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B18585_04_11.png)图4.11：切换应用'
- en: 'This will open the **Package Manager** again, but this time in the **My Assets**
    mode, showing a list of all assets you have ever downloaded from the Asset Store,
    and the one you just selected highlighted in the list:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将再次打开**包管理器**，但这次是在**我的资产**模式下，显示你从资产商店下载的所有资产的列表，你刚刚选择的资产在列表中突出显示：
- en: '![](img/B18585_04_12.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_12.png)'
- en: 'Figure 4.12: Package Manager showing assets'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.12：资源管理器显示资源
- en: Click on **Download** on the bottom-right part of the window and wait for it
    to finish. Then hit **Import**.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在窗口的右下角点击**下载**，等待完成。然后点击**导入**。
- en: 'After a while, the **Package Contents window** will show up, allowing you to
    select exactly which assets of the package you want in your project. For now,
    leave it as-is and click **Import**:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一段时间后，**包内容窗口**将出现，允许你选择你想要在项目中使用的包中的确切资源。现在，保持原样并点击**导入**：
- en: '![](img/B18585_04_13.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_13.png)'
- en: 'Figure 4.13: Assets to import selection'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.13：导入资源选择
- en: After some importing time, you will see all the package files in your **Project
    window**.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 经过一段时间导入后，你将在你的**项目窗口**中看到所有包文件。
- en: 'Take into account that importing lots of full packages will increase your project’s
    size considerably, and that, later, you will probably want to remove the assets
    that you didn’t use. Also, if you import assets that generate errors that prevent
    you from playing the scene, just delete all the `.cs` files that come with the
    package. They are usually in folders called `Scripts`. Those are code files that
    might not be compatible with your Unity version:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，导入大量完整包会增加你的项目大小，并且之后你可能想要删除未使用的资源。此外，如果你导入的资源产生了错误，阻止你播放场景，只需删除包中附带的所有`.cs`文件。它们通常在名为`Scripts`的文件夹中。这些是可能与你的Unity版本不兼容的代码文件：
- en: '![](img/B18585_04_14.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_14.png)'
- en: 'Figure 4.14: Code error warning when hitting play'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.14：在播放时触发的代码错误警告
- en: 'Before you continue with this chapter, try to download a character 3D model
    using the Asset Store, following the previous steps. In order to do this, you
    must complete the same steps as we did with the level environment pack but look
    in the **3D | Characters | Humanoid** category of the Asset Store. In my case,
    I picked the **Robot Hero: PBR HP Polyart** package:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续本章内容之前，尝试使用资源商店，按照之前的步骤下载一个角色3D模型。为了做到这一点，你必须完成与我们为关卡环境包所做相同的步骤，但在资源商店的**3D
    | 角色 | 人形**类别中查找。在我的情况下，我选择了**机器人英雄：PBR HP Polyart**包：
- en: '![](img/B18585_04_15.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_15.png)'
- en: 'Figure 4.15: Character package used in our game'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.15：游戏中使用的角色包
- en: 'Now, let’s explore yet another source of Unity Assets: **Unity Packages**.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们探索Unity资源的另一个来源：**Unity包**。
- en: Importing assets from Unity Packages
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从Unity包导入资源
- en: The Asset Store is not the only source of asset packages; you can get .unitypackage
    files from the internet, or maybe from a coworker who wants to share assets with
    you.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 资源商店不是资产包的唯一来源；你可以从互联网上获取.unitypackage文件，或者可能从想要与你分享资源的同事那里获取。
- en: 'In order to import a `.unitypackage` file, you need to do the following:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为了导入`.unitypackage`文件，你需要执行以下操作：
- en: 'Go to the **Assets | Import Package | Custom Package** option:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**资产 | 导入包 | 自定义包**选项：
- en: '![](img/B18585_04_16.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_16.png)'
- en: 'Figure 4.16: Importing custom packages'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.16：导入自定义包
- en: Search for the `.unitypackage` file in the displayed dialog.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在显示的对话框中搜索`.unitypackage`文件。
- en: Click the **Import** option in the **Import** **Unity Package** window that
    appeared, the same that we saw earlier in the Asset Store section.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的**导入Unity包**窗口中点击**导入**选项，与我们在资源商店部分看到的相同。
- en: Now that we have imported lots of art assets, let’s learn how to use them in
    our scene.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经导入了很多艺术资源，让我们学习如何在场景中使用它们。
- en: Integrating assets
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成资源
- en: We have just imported lots of files that can be used in several ways, so the
    idea of this section is to see how Unity integrates those assets with the GameObjects
    and components that need them.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚导入了很多可以以多种方式使用的文件，所以本节的想法是看看Unity如何将这些资源与需要它们的GameObject和组件集成。
- en: 'In this section, we will cover the following concepts related to importing
    assets:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍与导入资源相关的以下概念：
- en: Integrating terrain textures
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成地形纹理
- en: Integrating meshes
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网格集成
- en: Integrating materials
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成材质
- en: Let’s start by using the tileable textures to cover the terrain.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先使用可重复纹理来覆盖地形。
- en: Integrating terrain textures
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成地形纹理
- en: 'In order to apply textures to our terrain, do the following:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将纹理应用到我们的地形上，请按照以下步骤操作：
- en: Select the **Terrain** object.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**地形**对象。
- en: In the **Inspector**, click the brush icon of the **Terrain** component (second
    button).
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**检查器**中，点击**地形**组件的刷子图标（第二个按钮）。
- en: 'From the drop-down menu, select **Paint Texture**:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择**绘制纹理**：
- en: '![](img/B18585_04_17.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_17.png)'
- en: 'Figure 4.17: Terrain Paint Texture option'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.17：地形绘制纹理选项
- en: Click the **Edit Terrain Layers… | Create Layer** option.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**编辑地形层… | 创建层**选项。
- en: 'Find and double-click the terrain texture you downloaded previously in the
    **Texture Picker** window that appears:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的**纹理选择器**窗口中找到并双击之前下载的地形纹理：
- en: '![](img/B18585_04_18.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_18.png)'
- en: 'Figure 4.18: Texture to paint picker'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.18：纹理绘制选择器
- en: You will see how the texture will be immediately applied to the whole terrain.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将看到纹理将立即应用到整个地形上。
- en: Repeat *steps 4* and *5* to add other textures. This time, you will see that
    that texture is not immediately applied.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复**步骤 4**和**步骤 5**以添加其他纹理。这次，你会发现该纹理不会立即应用。
- en: In the **Terrain Layers** section, select the new texture you have created to
    start painting with that. I used a mud texture in my case.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**地形层**部分，选择你创建的新纹理以开始使用该纹理进行绘制。在我的例子中，我使用了泥地纹理。
- en: As when you edited the terrain, in the **Brushes** section, you can select and
    configure a brush to paint the terrain.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你编辑地形时，在**画笔**部分，你可以选择并配置一个画笔来绘制地形。
- en: In the **Scene** view, paint the areas you want to have that texture applied
    to.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**场景视图**中，绘制你想应用该纹理的区域。
- en: If your texture patterns are too obvious, open the **New Layer N** section on
    top of the **Brushes** section, where *N* is a number that depends on the layer
    you have created.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你的纹理图案过于明显，打开**新层N**部分，该部分位于**画笔**部分之上，其中*N*是一个取决于你创建的层的数字。
- en: Each time you add a texture to the terrain, you will see that a new asset called
    **New Layer N** is created in the **Project** view. It holds data of the terrain
    layer you have created, and you can use that one on other terrains if you need
    to. You can also rename that asset to give it a meaningful name. Also, you can
    reorganize those assets in their own folder for organization purposes.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 每次你将纹理添加到地形上，你都会看到在**项目**视图中创建了一个名为**新层N**的新资产。它包含你创建的地形层的数据，如果你需要，可以使用该资产在其他地形上。你还可以重命名该资产以赋予它一个有意义的名称。此外，你可以根据自己的需要将这些资产重新组织到自己的文件夹中。
- en: 'Open the section using the triangle to its left and increase the **Size** property
    in the **Tiling Settings** section until you find a suitable size where the pattern
    is not that obvious:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用左侧的三角形打开该部分，并在**平铺设置**部分中增加**大小**属性，直到你找到一个图案不那么明显的合适大小：
- en: '![](img/B18585_04_19.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_19.png)'
- en: 'Figure 4.19: Painting texture options'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.19：绘制纹理选项
- en: 'Repeat *steps* *4* to *12* until you have applied all the textures you wanted
    to add to your terrain. In my case, I applied the mud texture to the river basin
    and used a rock texture for the hills. For the texture of the rocks, I reduced
    the opacity property of the brush to blend it better with the grass in the mountains.
    You can try to add a layer of snow at the top just for fun:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复**步骤 4**到**12**，直到你将所有想要添加到地形中的纹理都应用完毕。在我的例子中，我将泥地纹理应用到河盆地，并为山丘使用了岩石纹理。对于岩石纹理，我将画笔的不透明度属性降低，以便更好地与山中的草地混合。你可以尝试在顶部添加一层雪，只为增添乐趣：
- en: '![](img/B18585_04_20.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_20.png)'
- en: 'Figure 4.20: Results of painting our terrain with three different textures'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.20：使用三种不同纹理绘制我们的地形的成果
- en: Of course, we can improve this a lot using lots of the advanced tools of the
    system, but let’s just keep things simple for now. Now, let’s see how we can integrate
    the 3D models into our game.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可以使用系统的大量高级工具来大幅改进这一点，但现在让我们保持简单。现在，让我们看看我们如何将3D模型集成到我们的游戏中。
- en: Integrating meshes
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成网格
- en: 'If you select one of the 3D assets we have downloaded previously and click
    the arrow to its right, one or more sub-assets will appear in the **Project window**.
    This means that the 3D model files we downloaded from the Asset Store (the FBX
    files) are containers of assets that define the 3D model:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择我们之前下载的3D资产并点击其右侧的箭头，**项目窗口**中会出现一个或多个子资产。这意味着我们从资产商店（FBX文件）下载的3D模型文件是定义3D模型的资产的容器：
- en: '![](img/B18585_04_21.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_21.png)'
- en: 'Figure 4.21: Mesh picker'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.21：网格选择器
- en: Some of those sub-assets are meshes, which are a collection of triangles that
    define the geometry of your model. You can find at least one of these mesh sub-assets
    inside the file, but you can also find several, and that can happen if your model
    is composed of lots of pieces. For example, a car can be a single rigid mesh,
    but that won’t allow you to rotate its wheels or open its doors; it will be just
    a static car, and that can be enough if the car is just a prop in the scene, but
    if the player will be able to control it, you will probably need to modify it.
    The idea is that all pieces of your car are different GameObjects parented to
    one another in such a way that if you move one, all of them will move, but you
    can still rotate its pieces independently.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一些子资产是网格，它们是一系列定义模型几何形状的三角形集合。你可以在文件中至少找到一个这样的网格子资产，但你也可以找到几个，这可能会发生在你的模型由很多部分组成的情况下。例如，一辆车可以是一个单一的刚性网格，但这不会让你旋转它的轮子或打开它的车门；它将只是一个静态的车，如果车只是场景中的一个道具，这可能就足够了，但如果玩家将能够控制它，你可能需要对其进行修改。想法是，你的汽车的所有部件都是不同的GameObject，彼此之间以某种方式相互关联，这样如果你移动其中一个，所有这些都会移动，但你仍然可以独立旋转它的部件。
- en: 'When you drag the 3D model file to the scene (not the sub-asset), Unity will
    automatically create all the objects for each piece and its proper parenting based
    on how the artist created those. You can select the object in the Hierarchy and
    explore all its children to see this:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将3D模型文件拖动到场景中（不是子资产）时，Unity将根据艺术家创建的方式自动为每个部分创建所有对象及其适当的父级。你可以在层次结构中选择对象并探索其所有子对象以查看这一点：
- en: '![](img/B18585_04_22.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18585_04_22.png)'
- en: 'Figure 4.22: Sub-object selection'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.22：子对象选择
- en: Also, you will find that each of those objects may have its own `Mesh Filter`
    and `Mesh Renderer` components, each one rendering just that piece of the model.
    Remember that the `Mesh Filter` is a component that has a reference to the mesh
    asset to render, so the `Mesh Filter` is the one using those mesh sub-assets we
    talked about previously. In the case of animated characters, you will find the
    `Skinned Mesh Renderer` component instead, but we will discuss that component
    later, in *Part 3, Improving Graphics*.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你会发现每个对象可能都有自己的`Mesh Filter`和`Mesh Renderer`组件，每个组件仅渲染模型的那一部分。记住，`Mesh Filter`是一个具有渲染网格资产的引用的组件，因此`Mesh
    Filter`是使用我们之前讨论过的那些网格子资产的组件。在动画角色的案例中，你将找到`Skinned Mesh Renderer`组件，但我们将稍后在*第3部分，改进图形*中讨论该组件。
- en: Now, when you drag the 3D model file into the scene, you will get a similar
    result as if the model were a Prefab and you were instancing it. But 3D model
    files are more limited than Prefabs because you can’t apply changes to the model.
    If you’ve dragged the object onto the scene and edited it to have the behavior
    you want, I suggest that you create a Prefab to get all the benefits we discussed
    in *Chapter 2*, *Editing Scenes and GameObjects*, such as applying changes to
    all the instances of the Prefab and so on. Never create lots of instances of a
    model from its model file—always create them from the Prefab you created based
    on that file to allow you to add extra behavior to it.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你将3D模型文件拖动到场景中时，你将得到一个类似于模型是一个Prefab并且你正在实例化的结果。但是3D模型文件比Prefab更有限，因为你不能对模型应用更改。如果你已经将对象拖动到场景中并编辑它以具有你想要的行为，我建议你创建一个Prefab以获得我们在*第2章*中讨论的所有好处，例如将更改应用于Prefab的所有实例等。永远不要从模型文件创建大量模型的实例——始终从基于该文件创建的Prefab创建它们，以便你可以向它添加额外的行为。
- en: That’s the basic usage of 3D meshes. Now, let’s explore the texture integration
    process, which will give our 3D models more detail.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是3D网格的基本用法。现在，让我们探索纹理集成过程，这将使我们的3D模型更加详细。
- en: Integrating textures
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成纹理
- en: Maybe your model already has the texture applied but has a magenta color applied
    to all of it. If this is the case, that means the asset wasn’t prepared to work
    with the **Universal Render Pipeline** (**URP**) template you selected when creating
    the project.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 可能你的模型已经应用了纹理，但整个模型都被应用了洋红色。如果是这种情况，这意味着资产没有准备好与你在创建项目时选择的**通用渲染管道（URP**）模板一起工作。
- en: 'Some assets in the Asset Store are created by third-party editors and could
    be meant to be used in older versions of Unity:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: Asset Store中的一些资产是由第三方编辑器创建的，可能旨在用于Unity的旧版本：
- en: '![](img/B18585_04_23.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18585_04_23.png)'
- en: 'Figure 4.23: Mesh being rendered with erroneous or no material at all'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.23：渲染带有错误材料或根本没有材料的网格
- en: 'One option to fix magenta assets is using the **Render Pipeline Converter**,
    a tool that will find them and reconfigure them (if possible) to work with URP.
    To do so, perform the following steps every time you import an asset that looks
    magenta:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 修复洋红色资产的一个选项是使用**渲染管线转换器**，这是一个工具，可以找到它们并将它们（如果可能）重新配置为与URP一起工作。为此，每次导入看起来像洋红色的资产时，都要执行以下步骤：
- en: Go to **Window | Rendering | Render Pipeline Converter**.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**窗口 | 渲染 | 渲染管线转换器**。
- en: 'Select the **Built-in to URP** option from the dropdown:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择**内置到URP**选项：
- en: '![](img/B18585_04_24.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18585_04_24.png)'
- en: 'Figure 4.24: Upgrading older assets to URP'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.24：将旧资产升级到URP
- en: Scroll until you see the **Material Upgrade** checkbox and check it.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动直到你看到**材料升级**复选框并勾选它。
- en: 'Click the **Initialize Converters** button in the bottom-left corner. This
    will display a list of all the materials that need to be upgraded. We will discuss
    materials more later:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左下角的**初始化转换器**按钮。这将显示所有需要升级的材料列表。我们将在稍后讨论材料：
- en: '![](img/B18585_04_25.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18585_04_25.png)'
- en: 'Figure 4.25: Fixing Material to work with URP'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.25：修复材料以与URP一起工作
- en: Click the **Convert Assets** button and see if the model was fixed.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**转换资产**按钮，查看模型是否已修复。
- en: You will need to close the window for it to detect new magenta assets that weren’t
    there before opening it. The con of this method is that, sometimes, it won’t upgrade
    the material properly. Luckily, we can fix this by reapplying the textures of
    the objects manually. Even if your assets work just fine, I suggest that you reapply
    your textures anyway, just to learn more about the concept of materials.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要关闭窗口以便它检测到之前打开时不存在的新洋红色资产。这种方法的不利之处在于，有时它不会正确升级材料。幸运的是，我们可以通过手动重新应用对象的纹理来修复这个问题。即使你的资产工作得很好，我也建议你无论如何都重新应用你的纹理，这样你就可以更多地了解材料的概念。
- en: A texture is not applied directly to the object. That’s because the texture
    is just one single configuration of all the ones that control the aspect of your
    model. In order to change the appearance of a model, you must create a **Material**.
    A material is a separate asset that contains lots of settings about how Unity
    should render your object. You can apply that asset to several objects that share
    the same graphics settings, and if you change the settings of the material, it
    will affect all the objects that are using it. It works like a graphics profile.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 纹理不是直接应用到对象上的。这是因为纹理只是控制模型外观的所有配置中的一个。为了改变模型的外观，你必须创建一个**材料**。材料是一个独立的资产，其中包含大量关于Unity如何渲染你的对象的设置。你可以将该资产应用到具有相同图形设置的多个对象上，如果你更改材料的设置，它将影响所有使用它的对象。它就像一个图形配置文件。
- en: 'In order to create a material to apply the textures of your object, you need
    to follow these steps:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建一个应用你对象纹理的材料，你需要遵循以下步骤：
- en: In the **Project Window**, click the plus (**+**) button in the top-left part
    of the window.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**项目窗口**中，点击窗口左上角的加号（**+**）按钮。
- en: Click the **Material** option in that menu.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在该菜单中点击**材料**选项。
- en: Name your material. This is usually the name of the asset we will be applying
    the material to (for example, `Car`, `Ship`, `Character`, and so on).
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为你的材料命名。这通常是我们要应用材料的资产名称（例如，`Car`，`Ship`，`Character`等等）。
- en: Drag the created material to the model instance on your scene. If you move the
    mouse with the dragged asset over the object, you will be able to see a preview
    of how it will look with that material, which would be white in the case of a
    new material. We will change that in the following steps.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将创建的材料拖动到场景中的模型实例上。如果你用拖动的资产在对象上移动鼠标，你将能够看到该材料将如何预览，如果是新材料，它将是白色的。我们将在以下步骤中更改这一点。
- en: Apply the material by releasing the mouse.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 释放鼠标以应用材料。
- en: If your object has several parts, you will need to drag the material to each
    part.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你的对象有多个部分，你需要将材料拖动到每个部分。
- en: Dragging the material will change the material’s property of the `MeshRenderer`
    component of the object you have dragged.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 拖动材料将改变你拖动的对象的`MeshRenderer`组件的材料属性。
- en: Select the material and click the circle to the left of the **Base Map** property
    (see *Figure 4.23*).
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择材料并点击**基础贴图**属性左侧的圆圈（见*图4.23*）。
- en: 'In the **Texture Selector**, click on the texture of your model. It can be
    complicated to locate the texture just by looking at it. Usually, the name of
    the texture will match the model’s name. If not, you will need to try different
    textures until you see one that fits your object. Also, you may find several textures
    with the same name as your model. Just pick the one that seems to have the proper
    colors instead of the ones that look black and white or light blue; we will use
    those later:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**纹理选择器**中，点击您模型的纹理。仅通过观察可能很难找到纹理。通常，纹理的名称将与模型名称匹配。如果不匹配，您需要尝试不同的纹理，直到找到适合您物体的纹理。此外，您可能会发现几个与您的模型名称相同的纹理。只需选择看起来颜色合适的纹理，而不是那些看起来是黑白或浅蓝色的纹理；我们稍后会使用那些：
- en: '![](img/B18585_04_26.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_26.png)'
- en: 'Figure 4.26: Base Map property of URP materials'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.26：URP材质的基础地图属性
- en: With this, you have successfully applied the texture to the object through a
    material. For each object that uses the same texture, just drag the same material.
    Now that we have a basic understanding of how to apply the model textures, let’s
    learn how to properly configure the import settings before spreading models all
    over the scene.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，您已经成功通过材质将纹理应用到物体上。对于使用相同纹理的每个对象，只需拖动相同的材质。现在我们已经对如何应用模型纹理有了基本的了解，让我们学习如何在将模型散布到场景之前正确配置导入设置。
- en: Configuring assets
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置资产
- en: As we mentioned earlier, artists are used to creating art assets outside Unity,
    and that can cause differences between how the asset is seen from that tool and
    how Unity will import it. As an example, 3D Studio Max can work in centimeters,
    inches, and so on, while Unity works in meters. We have just downloaded and used
    lots of assets, but we have skipped the configuration step to solve those discrepancies,
    so let’s take a look at this now.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，艺术家习惯于在Unity之外创建艺术资产，这可能会导致该工具中看到的资产与Unity导入的资产之间的差异。例如，3D Studio
    Max可以在厘米、英寸等中工作，而Unity则使用米。我们刚刚下载并使用了大量资产，但跳过了配置步骤来解决这些差异，所以现在让我们来看看。
- en: 'In this section, we will cover the following concepts related to importing
    assets:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍与导入资产相关的以下概念：
- en: Configuring meshes
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置网格
- en: Configuring textures
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置纹理
- en: Let’s start by discussing how to configure 3D meshes.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先讨论如何配置3D网格。
- en: Configuring meshes
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置网格
- en: 'In order to change the model’s import settings, you need to locate the model
    file you have downloaded. There are several file extensions that contain 3D models,
    with the most common one being the `.fbx` file, but you can encounter others such
    as `.obj`,`.3ds`, `.blender`, `.mb`, and so on. You can identify whether the file
    is a 3D mesh via its extension:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更改模型的导入设置，您需要找到您下载的模型文件。包含3D模型的文件扩展名有多种，最常见的是`.fbx`文件，但您可能会遇到其他文件，如`.obj`、`.3ds`、`.blender`、`.mb`等。您可以通过扩展名来识别文件是否为3D网格：
- en: '![](img/B18585_04_27.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_27.png)'
- en: 'Figure 4.27: Selected asset path extension'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.27：所选资产路径扩展
- en: 'Also, you can click the **asset** and check in the **Inspector** for the tabs
    you can see in the following screenshot:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以点击**资产**，在**检查器**中查看您可以在以下屏幕截图中看到的选项卡：
- en: '![](img/B18585_04_28.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_28.png)'
- en: 'Figure 4.28: Mesh materials settings'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.28：网格材质设置
- en: Now that you have located the 3D mesh files, you can configure them properly.
    Right now, the only thing we should take into account is the proper scale of the
    model. Artists are used to working with different software with different setups;
    maybe one artist created the model using meters as its metric unit, while other
    artists used inches, feet, and so on. When importing assets that have been created
    in different units, they will probably be unproportioned, which means we will
    get results such as humans being bigger than buildings and so on.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经找到了3D网格文件，您可以正确地配置它们。目前，我们唯一需要考虑的是模型的正确比例。艺术家习惯于使用不同软件和不同设置进行工作；也许一位艺术家使用米作为其度量单位创建了模型，而其他艺术家则使用英寸、英尺等。当导入以不同单位创建的资产时，它们可能会不成比例，这意味着我们会得到人类比建筑物更大的结果等。
- en: 'The best solution is to just ask the artist to fix that. If all the assets
    were authored in your company, or if you used an external asset, you could ask
    the artist to fix it to the way your company works, but right now, you are probably
    a single developer learning Unity by yourself. Luckily, Unity has a setting that
    allows you to rescale the original asset before using it in Unity. In order to
    change the “**Scale Factor**” of an object, you must do the following:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳解决方案是直接要求艺术家进行修复。如果所有资产都是在您的公司创作的，或者如果您使用了外部资产，您可以要求艺术家按照您公司的标准进行修复，但就目前而言，您可能是一位自学Unity的单个开发者。幸运的是，Unity有一个设置，允许您在使用Unity之前重新缩放原始资产。为了更改对象的“**缩放因子**”，您必须执行以下操作：
- en: Locate the 3D mesh in your **Project Window**.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的**项目窗口**中定位3D网格。
- en: Drag it to the scene. You will see that an object will appear in your scene.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其拖动到场景中。您会看到场景中会出现一个对象。
- en: Create a capsule using the **GameObject | 3D Object | Capsule** option.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**GameObject | 3D Object | Capsule**选项创建一个胶囊。
- en: 'Put the capsule next to the model you dragged into the editor. See if the scale
    has sense. The idea is that the capsule is representing a human being (2 meters
    tall) so that you have a reference for the scale:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将胶囊放在您拖入编辑器的模型旁边。看看缩放是否合理。想法是胶囊代表一个人类（2米高），这样您就有了一个缩放的参考：
- en: '![](img/B18585_04_29.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18585_04_29.png)'
- en: 'Figure 4.29: Using a capsule as reference for scale'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.29：使用胶囊作为缩放参考
- en: If the model is bigger or smaller than expected, select the mesh again in the
    Project window (not the GameObject instance you dragged to the editor) and you
    will see some import settings in the Inspector. In the image, we can say the model
    has good relative size, but just for learning purposes, do the next steps.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果模型比预期的大或小，请在项目窗口中再次选择网格（不是您拖到编辑器中的GameObject实例）并您将在检查器中看到一些导入设置。在图片中，我们可以认为模型具有良好的相对尺寸，但为了学习目的，请执行以下步骤。
- en: 'Look for the **Scale Factor** property and modify it, increasing it if your
    model is smaller than expected, or reducing it in the opposite case:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找**缩放因子**属性并修改它，如果您的模型比预期小，则增加它；如果相反，则减少它：
- en: '![](img/B18585_04_30.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18585_04_30.png)'
- en: 'Figure 4.30: Model mesh options'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.30：模型网格选项
- en: Click the **Apply** button at the bottom of the Inspector.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击检查器底部的**应用**按钮。
- en: Repeat *steps 6* and *7* until you get the desired result.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复*步骤6*和*步骤7*，直到您得到期望的结果。
- en: There are plenty of other options to configure, but let’s stop here for now.
    Now, let’s discuss how to properly configure the textures of our models.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多其他选项可以配置，但现在我们先到此为止。现在，让我们讨论如何正确配置我们模型的纹理。
- en: Configuring textures
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置纹理
- en: Again, there are several settings to configure here, but let’s focus on the
    **Texture Size** for now. The idea is to use the size that best fits the usage
    of that texture, and that depends on lots of factors.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，这里有许多设置可以配置，但现在我们只关注**纹理大小**。想法是使用最适合该纹理使用的尺寸，这取决于许多因素。
- en: The first factor to take into account is the distance from which the object
    will be seen. If you are creating a first-person game, you will probably see lots
    of objects near enough to justify a big texture, but maybe you have lots of distant
    objects, such as billboards at the top of buildings, which you will never be near
    enough to see the details of, so you can use smaller textures for that.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 首先要考虑的因素是对象将被看到的距离。如果您正在创建第一人称游戏，您可能会看到很多足够近的对象，这可以证明大纹理的合理性，但也许您有很多远处的对象，比如建筑物顶部的广告牌，您永远不会足够接近去看到细节，所以您可以使用较小的纹理。
- en: Another thing to take into account is the importance of the object. If you are
    creating a racing game, you will probably have lots of 3D models that will be
    on screen for a few seconds and the player will never focus on them; they will
    be paying attention to the road and other cars. In this case, an object such as
    a trash can on the street can have a little texture and a low polygon model and
    the user will never notice that (unless they stop to appreciate the scenery, but
    that’s acceptable).
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个要考虑的因素是对象的重要性。如果您正在创建赛车游戏，您可能会在屏幕上有许多3D模型，它们将在屏幕上显示几秒钟，玩家永远不会关注它们；他们将会关注道路和其他车辆。在这种情况下，例如街道上的垃圾桶可以有一个小的纹理和低多边形模型，用户永远不会注意到这一点（除非他们停下来欣赏风景，但这是可以接受的）。
- en: 'Finally, you can have a game with a top-down view that will never zoom-in on
    the scene, so the same object that has a big texture in first-person games will
    have a less detailed texture here. In the following images, you can see that the
    smaller ship could use a smaller texture:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以有一个俯视视角的游戏，它永远不会放大场景，所以在这个地方，第一人称游戏中具有大纹理的对象将具有更少的细节纹理。在以下图像中，你可以看到较小的飞船可以使用较小的纹理：
- en: '![](img/B18585_04_31.png)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_31.png)'
- en: 'Figure 4.31: The same model seen at different distances'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.31：从不同距离看到的相同模型
- en: 'The ideal size of the texture is relative. The usual way to find it is by changing
    its size until you find the smallest possible size with a decent quality when
    the object is seen from the nearest position possible in the game. This is a trial-and-error
    method. In order to do that, you can do the following:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 纹理的理想大小是相对的。通常找到它的方法是改变其大小，直到你找到在游戏中最接近的位置可以看到对象时，最小的可能尺寸且质量尚可。这是一个试错法。为了做到这一点，你可以执行以下操作：
- en: Locate the 3D model and put it into the scene.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位3D模型并将其放入场景中。
- en: Put the Scene view camera in a position that shows the object at its biggest
    possible in-game size. As an example, in a **first-person-shooter** (**FPS**)
    game, the camera can be almost right next to the object, while in a top-down game,
    it would be a few meters above the object. Again, that depends on your game. Remember
    our game is a third-person shooter.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将场景视图相机放置在一个可以显示对象在游戏中可能最大尺寸的位置。例如，在一个**第一人称射击**（**FPS**）游戏中，相机可以几乎紧挨着对象，而在一个俯视游戏中，它会在对象上方几米处。同样，这取决于你的游戏。记住，我们的游戏是第三人称射击游戏。
- en: Find and select the texture that the object is using in the folders that were
    imported with the package or from the material you created previously. They usually
    have the `.png`, `.jpg`, or `.tif` extensions.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在与包一起导入的文件夹中或从之前创建的材料中找到并选择对象使用的纹理。它们通常具有`.png`、`.jpg`或`.tif`扩展名。
- en: In the Inspector, look at the **Max Size** property and reduce it, trying the
    next smaller value. For example, if the texture is **2048**, try **1024**.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在检查器中，查看**最大尺寸**属性并减小它，尝试下一个更小的值。例如，如果纹理是**2048**，尝试**1024**。
- en: Click **Apply** and check the Scene view to see if the quality has decreased
    dramatically or if the change isn’t noticeable. You will be surprised.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**应用**并检查场景视图，看看质量是否大幅下降，或者变化是否不明显。你会感到惊讶的。
- en: Repeat *steps 4* to *5* until you get a bad-quality result. In that case, just
    increase the previous resolution to get an acceptable quality. Of course, if you
    are targeting PC games, you can expect higher resolutions than mobile games.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复*步骤4*到*5*，直到你得到一个质量差的成果。在这种情况下，只需提高之前的分辨率以获得可接受的质量。当然，如果你针对PC游戏，你可以期望比移动游戏更高的分辨率。
- en: Now that you have imported, integrated, and configured your objects, let’s create
    our player’s base with those assets.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经导入、集成和配置了你的对象，让我们用这些资产创建玩家的基础。
- en: Assembling the scene
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组装场景
- en: 'Let’s start replacing our prototype base using the environment pack we have
    downloaded. To do that, you must do the following:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始用我们下载的环境包替换我们的原型基础。为此，你必须执行以下操作：
- en: 'In the **Environment** pack we imported before, locate the folder that contains
    all the models for the different pieces of the scene and try to find a corner.
    You can use the search bar in the **Project Window** to search for the `corner`
    keyword:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们之前导入的**环境**包中，找到包含场景不同部分所有模型的文件夹，并尝试找到一个角落。你可以在**项目窗口**中的搜索栏中搜索`corner`关键字：
- en: '![](img/B18585_04_32.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_32.png)'
- en: 'Figure 4.32: Mesh picker'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.32：网格选择器
- en: In my specific case, I have the outer and inner sides of the corner as separate
    models, so I need to put them together.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我具体的情况下，角落的外侧和内侧是分开的模型，所以我需要将它们放在一起。
- en: 'Position it in the same position as any corner of your prototype base:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其放置在原型基础的任何角落相同的位置：
- en: '![](img/B18585_04_33.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B18585_04_33.png)'
- en: 'Figure 4.33: Positioning the mesh on a placeholder for replacement'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.33：将网格定位在占位符上进行替换
- en: Find the proper model that will connect with that corner to create walls. Again,
    you can try searching for the `wall` keyword in the **Project Window**.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到与那个角落相连以创建墙壁的正确模型。再次，你可以在**项目窗口**中尝试搜索`wall`关键字。
- en: Instance it and position it so that it’s connected to the corner. Don’t worry
    if it doesn’t fit perfectly; you will go over the scene when necessary later.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实例化它并定位，使其与角落相连。如果它不能完美地适应，不要担心；你将在必要时稍后检查场景。
- en: You can select an object and press the *V* key to select a vertex of the selected
    object. Then you can drag it, click on the rectangle in the middle of the translate
    gizmo, and direct it to a vertex of another object. This is called **Vertex Snapping**.
    It allows you to connect two pieces of the scene exactly as intended.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以选择一个对象并按*V*键来选择所选对象的顶点。然后你可以拖动它，点击变换 Gizmo 中间的矩形，并将其直接指向另一个对象的顶点。这被称为**顶点吸附**。它允许你精确地连接场景中的两个部件。
- en: '![](img/B18585_04_34.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18585_04_34.png)'
- en: 'Figure 4.34: Connecting two modules'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.34：连接两个模块
- en: 'Repeat the walls until you reach the other end of the player base and position
    another corner. You might get a wall that’s a little bit larger or smaller than
    the original prototype, but that’s fine:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复放置墙壁，直到达到玩家基地的另一端并放置另一个角落。你可能得到的墙壁比原始原型略大或略小，但这没关系：
- en: '![](img/B18585_04_35.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18585_04_35.png)'
- en: 'Figure 4.35: Chain of connected modules'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.35：连接的模块链
- en: You can move an object while pressing the *Ctrl* key (*Command* on Mac) to snap
    the object’s position so that the clones of the wall can be easily located right
    next to the others. Another option is to manually set the `Position` property
    of the `Transform` component in the Inspector.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在按住*Ctrl*键（Mac上的*Command*键）的同时移动对象，可以固定对象的位置，以便墙的克隆可以轻松地定位在旁边。另一个选项是在检查器中手动设置`Transform`组件的`Position`属性。
- en: Complete the rest of the walls and destroy the prototype cube we made in ProBuilder.
    Remember that this process is slow and you will need to be patient.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成剩余的墙壁，并销毁我们在ProBuilder中制作的原始立方体。请记住，这个过程很慢，你需要有耐心。
- en: 'Add floors by looking for floor tiles and repeating them all over the surface:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过寻找地板砖并在整个表面上重复它们来添加地板：
- en: '![](img/B18585_04_36.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18585_04_36.png)'
- en: 'Figure 4.36: Floor modules with a hole for the pit'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.36：带有坑洞的地板模块
- en: Add whatever details you want to add with other modular pieces in the package.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用包中的其他模块化部件添加你想要的任何细节。
- en: 'Put all those pieces in a container object called `Base`. Remember to create
    an empty object and drag the base pieces into it:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有这些部件放入一个名为`Base`的容器对象中。请记住创建一个空对象并将基础部件拖入其中：
- en: '![](img/B18585_04_37.png)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18585_04_37.png)'
- en: 'Figure 4.37: Mesh sub-assets'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.37：网格子资产
- en: After a lot of practice doing this, you will slowly gain experience with the
    common pitfalls and good practices of modular scene design. All the packages have
    a different modular design in mind, so you will need to adapt to them.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 经过大量练习后，你将逐渐积累关于模块化场景设计常见陷阱和良好实践的丰富经验。所有包都有不同的模块化设计理念，因此你需要适应它们。
- en: Summary
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to import models and textures and integrate
    them into our scene. We discussed how to apply textures to the terrain, how to
    replace our prototype mesh with modular models, how to apply textures to those,
    and how to properly configure the assets, all while taking several criteria into
    account according to the usage of the object.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何导入模型和纹理并将它们集成到场景中。我们讨论了如何将纹理应用到地形上，如何用模块化模型替换我们的原型网格，如何将这些纹理应用到它们上，以及如何根据对象的用途适当配置资产，同时考虑到几个标准。
- en: With this, we have finished *Part 1* of this book and discussed several basic
    Unity concepts we will use throughout the book. In *Part 2*, we will start coding
    the gameplay of our game, like the player’s movement and the health system. We
    will start learning how to create our own components to add behavior to our objects
    and the basic anatomy of a script.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些，我们已经完成了这本书的*第一部分*，并讨论了我们在整本书中会使用的几个基本Unity概念。在*第二部分*中，我们将开始编写游戏的游戏玩法，比如玩家的移动和健康系统。我们将开始学习如何创建自己的组件来为我们的对象添加行为以及脚本的基本结构。
