- en: '*Chapter 1*: Hello Unity'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第一章*：你好，Unity'
- en: Before we get started with using Unity to develop games, I think it's good to
    first understand Unity itself. Many people, especially those who are interested
    in games and game development, know that Unity is a widely used game engine, and
    you may have played many games developed with Unity. But you may not be familiar
    with how to use Unity to develop games. For example, there are many different
    Unity versions available, so how do you choose the version that suits you? Unity
    provides different subscription plans, but which subscription plan is right for
    your situation?
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始使用Unity开发游戏之前，我认为首先了解Unity本身是很好的。许多人，尤其是对游戏和游戏开发感兴趣的人，都知道Unity是一个广泛使用的游戏引擎，您可能玩过许多使用Unity开发的游戏。但您可能不熟悉如何使用Unity来开发游戏。例如，有多个不同的Unity版本可供选择，那么您如何选择适合您的版本呢？Unity提供了不同的订阅计划，但哪个订阅计划适合您的具体情况？
- en: If you have never used Unity before, it is necessary for you to learn how to
    use the Unity Editor first. In addition to the Unity Editor, what features does
    the Unity engine provide to help game developers develop games? It is also important
    to know the features in Unity. If you are a .NET developer, then it's likely that
    you are familiar with Visual Studio. You need to know how to use Visual Studio
    to develop a Unity game. But developing a Unity game is different from developing
    a .NET application.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您之前从未使用过Unity，那么首先学习如何使用Unity编辑器是必要的。除了Unity编辑器之外，Unity引擎还提供了哪些功能来帮助游戏开发者开发游戏？了解Unity中的功能也很重要。如果您是.NET开发者，那么您可能熟悉Visual
    Studio。您需要了解如何使用Visual Studio来开发Unity游戏。但开发Unity游戏与开发.NET应用程序是不同的。
- en: Am I asking too many questions? Don't worry – this chapter will help you answer
    them.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我问的问题太多了吗？不用担心——这一章将帮助您解答这些问题。
- en: In this chapter, we will introduce how to choose the right release of Unity
    and provide an overview of how to download and install Unity via the Unity Hub
    or the Unity installer. Then, we will choose the right subscription plan for your
    situation. At this point, you should have installed Unity and opened the Unity
    Editor.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍如何选择正确的Unity版本，并提供通过Unity Hub或Unity安装程序下载和安装Unity的概述。然后，我们将为您的情况选择正确的订阅计划。到这时，您应该已经安装了Unity并打开了Unity编辑器。
- en: If you have only just started using the Unity Editor, you may not know how to
    use it. We will first explore the Unity Editor and then discuss the different
    features provided by Unity. We will then introduce the .NET profiles in Unity
    and the scripting backend offered by Unity. Finally, we will present how to use
    Visual Studio to develop Unity games.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您刚刚开始使用Unity编辑器，您可能不知道如何使用它。我们将首先探索Unity编辑器，然后讨论Unity提供的不同功能。然后，我们将介绍Unity中的.NET配置文件和Unity提供的脚本后端。最后，我们将展示如何使用Visual
    Studio来开发Unity游戏。
- en: 'We will cover the following key topics in this chapter:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下关键主题：
- en: Getting started with the Unity Editor
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始使用Unity编辑器
- en: Working with different features in Unity
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Unity中处理不同的功能
- en: .NET/C# and scripting in Unity
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: .NET/C#和Unity中的脚本
- en: Building Unity games with Visual Studio
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Visual Studio构建Unity游戏
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'Before starting, I highly recommend you first check whether your system can
    run the Unity Editor. The following table gives the minimum requirements to run
    the Unity Editor:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，我强烈建议您首先检查您的系统是否可以运行Unity编辑器。以下表格给出了运行Unity编辑器的最低要求：
- en: '![](img/B17146_01_Table_1.1.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17146_01_Table_1.1.jpg)'
- en: Getting started with the Unity Editor
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用Unity编辑器
- en: 'Whether you are an independent game developer or work in a team for a company,
    you need to do two things before installing or even downloading Unity:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是独立游戏开发者还是为公司团队工作，在安装或下载Unity之前，您需要做两件事：
- en: Choose the right Unity release for you.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择适合您的Unity版本。
- en: Choose the right subscription plan for you.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择适合您的订阅计划。
- en: Therefore, before introducing how to install Unity and exploring the Unity Editor,
    let's first introduce the Unity release and subscription plans. We hope that by
    reading these contents, you can find the right release for you and choose a suitable
    subscription plan.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在介绍如何安装Unity和探索Unity编辑器之前，让我们首先介绍Unity版本和订阅计划。我们希望您通过阅读这些内容，可以找到适合您的版本并选择一个合适的订阅计划。
- en: Choosing the right Unity release for you
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择适合您的Unity版本
- en: 'Nowadays, Unity offers two different release versions each year. They are as
    follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Unity每年提供两个不同的版本。它们如下所示：
- en: Tech Stream releases
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tech Stream版本
- en: '**Long-Term Support** (**LTS**) releases:'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**长期支持**（**LTS**）版本：'
- en: '![Figure 1.1 – Unity releases'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.1 – Unity 版本发布'
- en: '](img/Figure_1.01_B17146.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_1.01_B17146.jpg)'
- en: Figure 1.1 – Unity releases
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – Unity 版本发布
- en: You may not be quite sure which version of Unity is best to use in your project,
    so I will explain these two different releases so that you can get an idea of
    how to choose the right release for you.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能不确定在您的项目中使用哪个版本的 Unity 最佳，因此我将解释这两个不同的版本，以便您了解如何选择适合您的版本。
- en: LTS releases provide developers with maximum stability and full support for
    their projects, and they are the last Tech Stream releases of each year. With
    LTS releases, there are no new features or API changes. The updates of LTS releases
    address crashes, and fix bugs and any minor issues. As I mentioned at the beginning
    of this section, each year, Unity releases new versions of the LTS release, and
    each one is supported for 2 full years from the date of the announcement.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: LTS 版本为开发者提供最大稳定性和对其项目的全面支持，并且是每年最后一个技术流版本。LTS 版本没有新功能或 API 变更。LTS 版本的更新解决崩溃，修复错误和任何小问题。正如我在本节开头提到的，每年，Unity
    会发布 LTS 版本的新版本，每个版本从发布之日起支持 2 年。
- en: Therefore, if you are looking for performance and stability, or your project
    is already in production or in the middle of development, it is a good idea to
    use the latest LTS release version to ensure best performance and stability.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果您正在寻找性能和稳定性，或者您的项目已经处于生产状态或开发过程中，使用最新的长期支持版本是一个好主意，以确保最佳性能和稳定性。
- en: Note
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: At the time of writing (April 2022), there are two LTS releases, namely Unity
    2020 LTS and Unity 2019.4\. Unity 2020 LTS is the latest LTS release and has the
    same feature set as the Unity 2020.2 Tech Stream release. Alternatively, Unity
    2019.4 is the legacy LTS release now.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时（2022 年 4 月），有两个长期支持版本发布，分别是 Unity 2020 LTS 和 Unity 2019.4。Unity 2020
    LTS 是最新的长期支持版本，具有与 Unity 2020.2 技术流版本相同的特性集。另一方面，Unity 2019.4 现在是遗留的长期支持版本。
- en: The Tech Stream releases give developers who want to explore the latest in-progress
    features an option to use them to prepare for future projects. Unlike the LTS
    releases, a Tech Stream release will be released twice a year (typically published
    in the first and last quarters) and will only be supported until the next Tech
    Stream release is officially published.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 技术流版本为想要探索最新进行中特性的开发者提供了一个选项，他们可以使用这些版本为未来的项目做准备。与长期支持版本不同，技术流版本每年发布两次（通常在第一季度和第四季度发布），并且只支持到下一个技术流版本正式发布。
- en: Therefore, if you are preparing for your next project or working on prototyping
    and experimentation, you should try the Tech Stream releases.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果您正在为您的下一个项目做准备或正在做原型设计和实验，您应该尝试技术流版本。
- en: Note
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: At the time of writing (April 2022), the latest Tech Stream release is Unity
    2021.2\.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时（2022 年 4 月），最新的技术流版本是 Unity 2021.2。
- en: By reading this section, I hope you have gained an understanding of the Unity
    releases, and you should be able to choose the right Unity release according to
    your situation.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 通过阅读本节，我希望您已经了解了 Unity 版本发布的情况，并且应该能够根据您的具体情况选择正确的 Unity 版本。
- en: When writing this book, I chose the latest LTS version, Unity 2020.3.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，我选择了最新的 LTS 版本，Unity 2020.3。
- en: Choosing the right subscription plan for you
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择适合您的订阅计划
- en: Unity is a widely used game engine, and many independent game developers use
    Unity to develop their games. But technically speaking, Unity is not a free game
    engine. In this section, I will introduce several different subscription plans
    offered by Unity. I hope that after reading this section, you can choose a subscription
    plan that suits your situation.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 是一个广泛使用的游戏引擎，许多独立游戏开发者使用 Unity 来开发他们的游戏。但从技术上讲，Unity 不是一个免费的游戏引擎。在本节中，我将介绍
    Unity 提供的几种不同的订阅计划。希望您阅读本节后，能够选择适合您情况的订阅计划。
- en: 'Unity offers a range of plans, from the free Personal plan for individual learners
    to Enterprise plans used by large organizations:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 提供了一系列计划，从为个人学习者提供的免费个人计划到大型组织使用的企业计划：
- en: '![Figure 1.2 – The Plans and pricing page'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.2 – 计划和定价页面'
- en: '](img/Figure_1.02_B17146.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_1.02_B17146.jpg)'
- en: Figure 1.2 – The Plans and pricing page
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – 计划和定价页面
- en: 'Because each Unity plan has different eligibility requirements, you should
    choose the right plan for your project. Next, I will introduce the subscription
    plans:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 由于每个 Unity 计划有不同的资格要求，您应选择适合您项目的正确计划。接下来，我将介绍订阅计划：
- en: The **Personal plan** is free and includes all the basic functionality of Unity.
    You can choose this plan if you work as an individual and have earned less than
    $100,000 in revenue or funding for your Unity project in the past 12 months. In
    addition, if you are a student or educator, you can get additional benefits, but
    before that, you need to join the **GitHub Student Developer Pack** to be verified.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Plus plan** is a paid plan and offers more functionality and training
    resources, such as advanced cloud diagnostics and splash screen customization.
    If you have earned more than $100,000 but less than $200,000 in revenue from using
    Unity in the past 12 months, you should choose this plan.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Pro plan** is also a paid plan. Compared with the Plus plan, you can get
    more technical support from Unity by using the Pro plan. If your organization
    has earned more than $200,000 in the last 12 months from any source, you must
    use the Pro plan or the **Enterprise plan**.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Enterprise plan** is specifically for teams with at least 20 members and
    provides more support than the Pro plan. For example, a customer success manager
    from Unity will be assigned to your organization to provide guidance, orchestrate
    resources, and serve as an internal advocate.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I hope this section was helpful for you in choosing the right Unity plan for
    your situation. Next, let's download and install the Unity Editor!
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: Downloading and installing the Unity Editor
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are two different ways to download and install the Unity Editor. The first
    and recommended way to download and install Unity is to use the **Unity Hub**.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: 'The Unity Hub is a management tool that can be used to manage all your Unity
    projects and Unity installations. We can take the following steps to install the
    Unity Hub and the Unity Editor:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: 'To install the Unity Hub, visit the **Download Unity** page at [https://unity3d.com/get-unity/download](https://unity3d.com/get-unity/download):'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.3 – The Download Unity page'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.03_B17146.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.3 – The Download Unity page
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: As you can see in the **System requirements** section in the preceding screenshot,
    the Unity Hub supports **Windows**, **Mac OS X**, **Ubuntu**, and **CentOS**.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: 'Installing the Unity Hub is very easy; you just need to choose the folder where
    the Unity Hub is installed. Then, click on the **Install** button:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.4 – Unity Hub Setup'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.04_B17146.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.4 – Unity Hub Setup
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: 'After installing the Unity Hub, select the **Run Unity Hub** option and click
    on the **Finish** button to launch the Unity Hub:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.5 – Completing Unity Hub Setup'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.05_B17146.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.5 – Completing Unity Hub Setup
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: I am using the latest version of Unity Hub (*version 3.0.0*) at the time of
    writing. If you have used previous versions of Unity Hub, you will find that the
    launch page of the new version of Unity Hub is completely different.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: 'You need a Unity account to access the Unity Editor and the Unity Hub. If you
    don''t have a Unity account yet, then you need to create a new one:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要一个 Unity 账户才能访问 Unity 编辑器和 Unity Hub。如果你还没有 Unity 账户，那么你需要创建一个新的：
- en: '![Figure 1.6 – Unity Hub'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.6 – Unity Hub'
- en: '](img/Figure_1.06_B17146.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.06_B17146.jpg)'
- en: Figure 1.6 – Unity Hub
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6 – Unity Hub
- en: 'When you sign into the Unity Hub for the first time, you will be asked to add
    an active license, as you can see at the top of the following screenshot. Click
    on the **Manage licenses** button to open the **Licenses** setting panel:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你首次登录 Unity Hub 时，你将被要求添加一个有效许可证，如以下截图顶部所示。点击 **管理许可证** 按钮以打开 **许可证** 设置面板：
- en: '![Figure 1.7 – Click the Manage licenses button'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.7 – 点击管理许可证按钮'
- en: '](img/Figure_1.07_B17146.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.07_B17146.jpg)'
- en: Figure 1.7 – Click the Manage licenses button
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7 – 点击管理许可证按钮
- en: 'There are two buttons available for you to add a new license. You can click
    either the **Add** button at the top-right corner or the **Add license** button:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有两个按钮可供你添加新的许可证。你可以点击右上角的 **添加** 按钮，或者点击 **添加许可证** 按钮：
- en: '![Figure 1.8 – The Licenses setting panel'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.8 – 许可证设置面板'
- en: '](img/Figure_1.08_B17146.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.08_B17146.jpg)'
- en: Figure 1.8 – The Licenses setting panel
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.8 – 许可证设置面板
- en: 'Then, you have different options to activate the license. We have discussed
    the different Unity subscription plans in the previous section:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你有不同的选项来激活许可证。我们已经在上一节讨论了不同的 Unity 订阅计划：
- en: '![Figure 1.9 – Add new license'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.9 – 添加新许可证'
- en: '](img/Figure_1.09_B17146.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.09_B17146.jpg)'
- en: Figure 1.9 – Add new license
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.9 – 添加新许可证
- en: 'After adding the new license, we can start exploring the Unity Hub. From the
    **Projects** view, you can find a list of Unity projects that are tracked by the
    Unity Hub. You can also create a brand-new project by clicking the **New project**
    button at the upper-right corner of the **Projects** view, or you can import an
    existing project by clicking the **Open** button:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加新的许可证后，我们可以开始探索 Unity Hub。从 **项目** 视图，你可以找到由 Unity Hub 跟踪的 Unity 项目的列表。你还可以通过点击
    **项目** 视图右上角的 **新建项目** 按钮创建一个全新的项目，或者通过点击 **打开** 按钮导入现有项目：
- en: '![Figure 1.10 – The Projects view'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.10 – 项目视图'
- en: '](img/Figure_1.10_B17146.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.10_B17146.jpg)'
- en: Figure 1.10 – The Projects view
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.10 – 项目视图
- en: 'To install the Unity Editor, open the **Installs** view, where you can manage
    the installation of multiple versions of the Unity Editor:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要安装 Unity 编辑器，请打开 **安装** 视图，在那里你可以管理多个版本的 Unity 编辑器的安装：
- en: '![Figure 1.11 – The Installs view'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.11 – 安装视图'
- en: '](img/Figure_1.11_B17146.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.11_B17146.jpg)'
- en: Figure 1.11 – The Installs view
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.11 – 安装视图
- en: There is a list of the Unity Editors that are installed and managed by the Unity
    Hub. Similar to the **Projects** view, you can download and install a new Unity
    Editor, or you can import an existing Unity Editor that is not managed by the
    Unity Hub, such as the Unity Editor that we installed using the Unity installer.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Unity Hub 安装并管理着一系列的 Unity 编辑器。类似于 **项目** 视图，你可以下载并安装新的 Unity 编辑器，或者导入一个未被 Unity
    Hub 管理的现有 Unity 编辑器，例如我们使用 Unity 安装程序安装的 Unity 编辑器。
- en: 'Open the **Install Unity Editor** panel by clicking the **Install Editor**
    button on the **Installs** view. Then, you will see the latest version of each
    release:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击 **安装编辑器** 视图中的 **安装编辑器** 按钮打开 **安装 Unity 编辑器** 面板。然后，你将看到每个发布版本的最新版本：
- en: '![Figure 1.12 – Install Unity Editor'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.12 – 安装 Unity 编辑器'
- en: '](img/Figure_1.12_B17146.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.12_B17146.jpg)'
- en: Figure 1.12 – Install Unity Editor
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.12 – 安装 Unity 编辑器
- en: Note
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Unity 2018 LTS has reached the end of its support cycle, so you should not install
    it.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 2018 LTS 已达到其支持周期的结束，因此你不应该安装它。
- en: 'We will use the latest version of the Unity 2020 LTS release, so we need to
    install Unity **2020.3.13f1** here:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 Unity 2020 LTS 版本的最新版本，因此我们需要在此处安装 Unity **2020.3.13f1**：
- en: '![Figure 1.13 – Install Unity 2020.3.13f1'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.13 – 安装 Unity 2020.3.13f1'
- en: '](img/Figure_1.13_B17146.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.13_B17146.jpg)'
- en: Figure 1.13 – Install Unity 2020.3.13f1
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.13 – 安装 Unity 2020.3.13f1
- en: Then, we need to select the modules that need to be installed. As you can see
    in the preceding screenshot, **Microsoft Visual Studio Community 2019** will be
    installed by default, which will be our **Integrated Development Environment**
    (**IDE**) to develop games in Unity.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要选择需要安装的模块。如前一个截图所示，**Microsoft Visual Studio Community 2019** 将默认安装，这将作为我们在
    Unity 中开发游戏的 **集成开发环境**（**IDE**）。
- en: Note
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you want to change the installation location, you can change it in the **Installs**
    settings of the **Preferences** panel.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想更改安装位置，您可以在**首选项**面板的**安装**设置中更改它。
- en: Once it has been downloaded and installed, we are ready to start exploring the
    Unity Editor!
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 下载并安装完成后，我们就准备好开始探索Unity编辑器了！
- en: 'Sometimes, you may need a specific version that is not available through the
    Unity Hub, such as some older Unity versions. At this point, you can also install
    the Unity Editor a second way, which is through the **Unity installer**. You can
    use the Unity installer to download the previous versions of Unity:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，您可能需要一个通过Unity Hub无法获取的特定版本，例如一些较旧的Unity版本。在这种情况下，您还可以通过第二种方式安装Unity编辑器，即通过**Unity安装程序**。您可以使用Unity安装程序下载Unity的早期版本：
- en: '![Figure 1.14 – The Unity download archive page'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.14 – Unity下载存档页面'
- en: '](img/Figure_1.14_B17146.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_1.14_B17146.jpg]'
- en: Figure 1.14 – The Unity download archive page
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.14 – Unity下载存档页面
- en: 'Now, follow these steps to install the Unity Editor through the Unity installer:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，按照以下步骤通过Unity安装程序安装Unity编辑器：
- en: To download a previous version of Unity, you should access the Unity download
    archive page at [https://unity3d.com/get-unity/download/archive](https://unity3d.com/get-unity/download/archive).
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要下载Unity的早期版本，您应该访问Unity下载存档页面[https://unity3d.com/get-unity/download/archive](https://unity3d.com/get-unity/download/archive)。
- en: 'Click on the **Next** button and choose the components of Unity that you want
    to download and install. The Unity installer should resemble the following screenshot:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**按钮，并选择您想要下载和安装的Unity组件。Unity安装程序应该类似于以下截图：
- en: '![Figure 1.15 – The Unity installer'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_1.15 – Unity安装程序'
- en: '](img/Figure_1.15_B17146.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_1.15_B17146.jpg]'
- en: Figure 1.15 – The Unity installer
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.15 – Unity安装程序
- en: 'The Unity Editor is selected by default; in order to build games for different
    platforms, you also need to select the corresponding **build support** components.
    For example, if you want to build an Android game running on Android devices,
    you need to download and install the **Android Build Support** component:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Unity编辑器默认选中；为了构建不同平台的游戏，您还需要选择相应的**构建支持**组件。例如，如果您想为运行在Android设备上的Android游戏构建，您需要下载并安装**Android构建支持**组件：
- en: '![Figure 1.16 – Choosing components'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_1.16 – 选择组件'
- en: '](img/Figure_1.16_B17146.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_1.16_B17146.jpg]'
- en: Figure 1.16 – Choosing components
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.16 – 选择组件
- en: 'Click the **Next** button, and then you need to choose **download and install
    locations**:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**按钮，然后您需要选择**下载和安装位置**：
- en: '![Figure 1.17 – Choose Download and Install locations'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_1.17 – 选择下载和安装位置'
- en: '](img/Figure_1.17_B17146.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_1.17_B17146.jpg]'
- en: Figure 1.17 – Choose Download and Install locations
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.17 – 选择下载和安装位置
- en: 'After specifying where to download and install these files, click the **Next**
    button to download Unity:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在指定下载和安装这些文件的位置后，点击**下一步**按钮下载Unity：
- en: '![Figure 1.18 – Downloading and Installing'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_1.18 – 下载和安装'
- en: '](img/Figure_1.18_B17146.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_1.18_B17146.jpg]'
- en: Figure 1.18 – Downloading and Installing
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.18 – 下载和安装
- en: After the download and installation are complete, the Unity Editor icon will
    appear on your desktop.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 下载和安装完成后，Unity编辑器图标将出现在您的桌面上。
- en: Exploring the Unity Editor
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索Unity编辑器
- en: The first thing we need to do is use the Unity Hub to create a new Unity project.
    As I mentioned in the previous section, we will create a brand-new project by
    clicking the **New Project** button at the upper-right corner of the **Projects**
    view.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是使用Unity Hub创建一个新的Unity项目。正如我在上一节中提到的，我们将通过点击**项目**视图右上角的**新建项目**按钮来创建一个全新的项目。
- en: '![Figure 1.19 – Creating a new project'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_1.19 – 创建新项目'
- en: '](img/Figure_1.19_B17146.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_1.19_B17146.jpg]'
- en: Figure 1.19 – Creating a new project
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.19 – 创建新项目
- en: As shown in the preceding screenshot, we can choose different Unity Editor versions
    for this new project, and Unity provides us with some built-in project templates,
    such as the **2D**, **3D**, **HDRP**, and **URP** templates. You can also download
    and install more templates from Unity, such as the **VR** template and the **AR**
    template. In the **PROJECT SETTINGS** section, you can set the name of the project
    and the location of the project.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一张截图所示，我们可以为这个新项目选择不同的Unity编辑器版本，Unity为我们提供了一些内置的项目模板，例如**2D**、**3D**、**HDRP**和**URP**模板。您还可以从Unity下载并安装更多模板，例如**VR**模板和**AR**模板。在**项目设置**部分，您可以设置项目的名称和项目位置。
- en: 'Here, we will choose the default `UnityBook`. Then, click on the **Create project**
    button. After that, the Unity Editor you previously selected will launch and open
    a new project for you:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.20 – The Unity Editor'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.20_B17146.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.20 – The Unity Editor
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: 'As you can see in the preceding screenshot, the Unity Editor layout organizes
    the most important windows for you. Specifically, the default layout divides the
    editor interface into five key areas. From top to bottom, they are as follows:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: '**Toolbar**'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Hierarchy window**'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Scene view and Game view**'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Inspector window**'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Project window**'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, I will introduce these UI areas in order.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: The Toolbar
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The Toolbar is always at the top of the Unity Editor interface, and it consists
    of several groups of controls:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.21 – The Toolbar'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.21_B17146.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.21 – The Toolbar
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: 'From left to right, the first tool in the Toolbar is the **transform tools
    set**. The transform tools are used in the **Scene** view and allow you to pan
    around the Scene and move, rotate, and scale individual GameObjects in the Scene:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.22  – The transform tools set'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.22_B17146.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.22 – The transform tools set
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: 'The next tool is the **Gizmo handle position toggles set**, which is used to
    define the position of any transform tool Gizmo in the **Scene** view:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.23 – The Gizmo handle position toggles set'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.23_B17146.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.23 – The Gizmo handle position toggles set
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, you can find the **Play, Pause, and Step buttons** in the center. You
    can use these buttons in the **Game** view:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.24 – The Play, Pause, and Step buttons'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.24_B17146.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.24 – The Play, Pause, and Step buttons
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: On the right side, let's take a look at the **Unity Plastic SCM** button first,
    which allows you to access the Plastic SCM version control and source code management
    tool in the Unity Editor directly. You can click the **cloud** button to open
    the **Unity Services** window, where you are able to access a lot of cloud services
    provided by Unity, such as the **Cloud Build** service, the **Analytics** service,
    and the **Ads** service.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also access your Unity account from the **Account** drop-down menu.
    There are two other drop-down menus on the right, namely **Layers** and **Layout**;
    you can control which objects in the **Scene** view appear using the **Layers**
    drop-down menu and change or create a new layout of your Unity Editor using the
    **Layout** drop-down menu:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.25 – The Unity Collaborate and Unity Services buttons and'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: the Unity Account, Layers, and Layout dropdowns
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_1.25_B17146.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.25 – The Unity Collaborate and Unity Services buttons and the Unity
    Account, Layers, and Layout dropdowns
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: The Hierarchy window
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The second area is the **Hierarchy** window. As you can see in the following
    screenshot, the **Hierarchy** window in the Unity Editor displays everything in
    a **Scene**; the things in the Scene, such as **Main Camera**, **Directional Light**,
    and the 3D cube, are called **GameObjects**.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个区域是**层次结构**窗口。如图所示，Unity 编辑器中的**层次结构**窗口以**场景**的形式显示所有内容；场景中的事物，如**主摄像机**、**方向光**和
    3D 立方体，被称为**游戏对象**。
- en: 'We can also organize all the objects in the game world in the **Hierarchy**
    window:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以在**层次结构**窗口中组织游戏世界中所有的对象：
- en: '![Figure 1.26 – The Hierarchy window'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.26 – 层次结构窗口'
- en: '](img/Figure_1.26_B17146.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 1.26](img/Figure_1.26_B17146.jpg)'
- en: Figure 1.26 – The Hierarchy window
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.26 – 层次结构窗口
- en: 'It is very easy to create a new GameObject in a Scene. You only need to right-click
    on the **Hierarchy** window, and a menu will pop up where you can select the object
    you want to create:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在场景中创建新的游戏对象非常简单。你只需要在**层次结构**窗口上右键单击，就会弹出一个菜单，你可以从中选择要创建的对象：
- en: '![Figure 1.27 – Creating a new GameObject'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.27 – 创建新的游戏对象'
- en: '](img/Figure_1.27_B17146.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 1.27](img/Figure_1.27_B17146.jpg)'
- en: Figure 1.27 – Creating a new GameObject
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.27 – 创建新的游戏对象
- en: 'It is worth noting that Unity uses parent-child hierarchies to organize GameObjects,
    so you can create one object as a child of another. If you want to create a new
    GameObject as a child of another GameObject, then you only need to select the
    parent GameObject first and then right-click to create the child GameObject:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，Unity 使用父子层次结构来组织游戏对象，因此你可以创建一个对象作为另一个对象的子对象。如果你想创建一个新的游戏对象作为另一个游戏对象的子对象，那么你只需要首先选择父游戏对象，然后右键单击以创建子游戏对象：
- en: '![Figure 1.28 – The parent-child hierarchy'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.28 – 父子层次结构'
- en: '](img/Figure_1.28_B17146.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 1.28](img/Figure_1.28_B17146.jpg)'
- en: Figure 1.28 – The parent-child hierarchy
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.28 – 父子层次结构
- en: 'Another way to create a parent-child hierarchy is to directly drag an existing
    GameObject onto the parent GameObject in the **Hierarchy** window:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 创建父子层次结构的另一种方法是直接将现有的游戏对象拖动到**层次结构**窗口中的父游戏对象上：
- en: '![Figure 1.29 – The parent-child hierarchy'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.29 – 父子层次结构'
- en: '](img/Figure_1.29_B17146.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 1.29](img/Figure_1.29_B17146.jpg)'
- en: Figure 1.29 – The parent-child hierarchy
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.29 – 父子层次结构
- en: As you can see in the preceding screenshot, we dragged the GameObject named
    **Cube** onto the GameObject named **Child** to create a parent-child hierarchy.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，我们将名为**Cube**的游戏对象拖动到名为**Child**的游戏对象上以创建父子层次结构。
- en: '![Figure 1.30 – Hiding and showing GameObjects'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.30 – 隐藏和显示游戏对象'
- en: '](img/Figure_1.30_B17146.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 1.30](img/Figure_1.30_B17146.jpg)'
- en: Figure 1.30 – Hiding and showing GameObjects
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.30 – 隐藏和显示游戏对象
- en: Another feature of the **Hierarchy** window is that it allows you to hide and
    show GameObjects in the **Scene** view without changing their visibility in the
    **Game** view or the final application.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '**层次结构**窗口的另一个功能是，它允许你在**场景**视图中隐藏和显示游戏对象，而不会改变它们在**游戏**视图或最终应用程序中的可见性。'
- en: The Scene view and the Game view
  id: totrans-191
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 场景视图和游戏视图
- en: 'The center of the default Unity Editor layout is the **Scene** view and the
    **Game** view, which is the most important window in the Unity Editor. The **Scene**
    view is an interactive view of the game world you are creating:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 默认 Unity 编辑器布局的中心是**场景**视图和**游戏**视图，这是 Unity 编辑器中最重要的窗口。**场景**视图是你正在创建的游戏世界的交互式视图：
- en: '![Figure 1.31 – The Scene view'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.31 – 场景视图'
- en: '](img/Figure_1.31_B17146.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 1.31](img/Figure_1.31_B17146.jpg)'
- en: Figure 1.31 – The Scene view
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.31 – 场景视图
- en: 'You can use the **Scene** view to manipulate GameObjects and view them from
    various angles. Also, there are some useful tools available in the **Scene** view,
    such as the **Scene** Gizmo tool at the upper-right corner of the **Scene** view:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用**场景**视图来操纵游戏对象，并从不同的角度查看它们。此外，**场景**视图中还有一些有用的工具，例如位于**场景**视图右上角的**场景**Gizmo
    工具：
- en: '![Figure 1.32 – The Scene Gizmo tool'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.32 – 场景 Gizmo 工具'
- en: '](img/Figure_1.32_B17146.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 1.32](img/Figure_1.32_B17146.jpg)'
- en: Figure 1.32 – The Scene Gizmo tool
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.32 – 场景 Gizmo 工具
- en: It shows the current orientation of the **Scene** view camera and allows you
    to quickly modify the angle of the view and projection mode.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 它显示了场景视图相机的当前方向，并允许你快速修改视图角度和投影模式。
- en: 'If you want to modify the settings of the **Scene** view camera, you can click
    the **Camera** button next to the **Gizmos** button to open the **Scene Camera**
    settings window:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想修改场景视图相机的设置，你可以点击**Gizmos**按钮旁边的**相机**按钮以打开**场景相机**设置窗口：
- en: '![Figure 1.33 – The Scene Camera settings'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.33 – 场景相机设置'
- en: '](img/Figure_1.33_B17146.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_1.33_B17146.jpg]'
- en: Figure 1.33 – The Scene Camera settings
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 1.33 – The Scene Camera settings
- en: Here, you can adjust some settings of the **Scene** view camera, such as **Field
    of View** and **Camera Speed**.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以调整**场景**视图相机的某些设置，例如**视野**和**相机速度**。
- en: 'A visual grid is another useful tool that you can use in the **Scene** view
    to help you align GameObjects by moving them to the nearest grid location:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 可视网格是您可以在**场景**视图中使用的另一个有用工具，可以帮助您通过将GameObject移动到最近的网格位置来对齐GameObject：
- en: '![Figure 1.34 – Toggle the visibility of the grid'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.34 – Toggle the visibility of the grid]'
- en: '](img/Figure_1.34_B17146.jpg)'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_1.34_B17146.jpg]'
- en: Figure 1.34 – Toggle the visibility of the grid
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 1.34 – 切换网格的可见性
- en: As you can see in the preceding screenshot, you can also move a GameObject to
    a grid projected along the **X**, **Y**, or **Z** axes.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在前面的屏幕截图中所见，您还可以将GameObject移动到沿**X**、**Y**或**Z**轴投影的网格上。
- en: 'The last useful tool in the **Scene** view that I want to introduce is **draw
    mode** used in the Scene:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 我想介绍的最后一个有用的**场景**视图工具是**绘制模式**：
- en: '![Figure 1.35 – The draw mode in the Scene'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.35 – The draw mode in the Scene]'
- en: '](img/Figure_1.35_B17146.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure_1.35_B17146.jpg]'
- en: Figure 1.35 – The draw mode in the Scene
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 1.35 – The draw mode in the Scene
- en: This is useful if your project uses the built-in render pipeline of Unity because
    a different draw mode in the Scene can help you understand and debug the lighting
    in it.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的项目使用Unity的内置渲染管线，这很有用，因为场景中的不同绘制模式可以帮助您理解和调试其中的光照。
- en: 'In the default layout, the **Game** view also appears in the same area as the
    **Scene** view. You can click the **Game** button to switch to the **Game** view
    from the **Scene** view:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在默认布局中，**游戏**视图也出现在与**场景**视图相同的区域。您可以通过点击**游戏**按钮从**场景**视图切换到**游戏**视图：
- en: '![Figure 1.36 – Click the Game button to switch to the Game view'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.36 – Click the Game button to switch to the Game view]'
- en: '](img/Figure_1.36_B17146.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_1.36_B17146.jpg]'
- en: Figure 1.36 – Click the Game button to switch to the Game view
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.36 – 点击游戏按钮切换到游戏视图]'
- en: 'The **Game** view represents your final published game. The content of the
    **Game** view is rendered from the camera(s) in your game. In the **Game** view,
    you cannot modify the viewing angle and projection mode at will, as with the **Scene**
    view. You need to modify the settings of the camera object to achieve this function:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '**游戏**视图代表您最终发布的游戏。**游戏**视图的内容是从您游戏中的相机渲染的。在**游戏**视图中，您不能像在**场景**视图中那样随意修改观看角度和投影模式。您需要修改相机对象设置以实现此功能：'
- en: '![Figure 1.37 – The Game view'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.37 – The Game view]'
- en: '](img/Figure_1.37_B17146.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_1.37_B17146.jpg]'
- en: Figure 1.37 – The Game view
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.37 – The Game view]'
- en: You can run your game directly inside the **Game** view by clicking the **Play**
    button on the Toolbar. It's important to note that in **Play** mode, any changes
    you make are temporary and will be reset when you exit it; therefore, it is not
    a good idea to make lots of changes in play mode.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以直接在**游戏**视图中运行您的游戏，通过在工具栏上点击**播放**按钮。需要注意的是，在**播放**模式下，您所做的任何更改都是临时的，并在退出时重置；因此，在播放模式下进行大量更改不是一个好主意。
- en: I want to introduce three tools in the **Game** view, namely **Aspect**, **Maximize
    On Play**, and **Stats**.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 我想介绍**游戏**视图中三个工具，即**纵横比**、**播放时最大化**和**统计信息**。
- en: 'The **Aspect** drop-down menu is very useful when you develop games for different
    screens with different aspect ratios. You can select different values to test
    how your game looks on these screens, and you even can add custom values by clicking
    the **plus** button at the bottom of the menu:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '**纵横比**下拉菜单在您为不同纵横比的不同屏幕开发游戏时非常有用。您可以选择不同的值来测试您的游戏在这些屏幕上的外观，并且您甚至可以通过点击菜单底部的**加号**按钮添加自定义值：'
- en: '![](img/Figure_1.38_B17146.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![img/Figure_1.38_B17146.jpg]'
- en: Figure 1.38 – The Free Aspect drop-down menu
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 1.38 – The Free Aspect drop-down menu
- en: 'The second feature is called **Maximize On Play**, which can maximize the **Game**
    view for a full-screen preview when you enter play mode:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个功能称为**播放时最大化**，当您进入播放模式时，它可以最大化**游戏**视图以进行全屏预览：
- en: '![](img/Figure_1.39_B17146.jpg)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![img/Figure_1.39_B17146.jpg]'
- en: Figure 1.39 – The Maximize On Play button
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 1.39 – The Maximize On Play button
- en: 'The third feature is called **Stats**. This feature is useful because it can
    display the **rendering statistics** about your game''s audio and graphics. Therefore,
    you can use it for monitoring the performance of your game while in play mode:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个功能称为**统计信息**。这个功能很有用，因为它可以显示关于您游戏音频和图形的**渲染统计信息**。因此，您可以在播放模式下使用它来监控您游戏的表现：
- en: '![](img/Figure_1.40_B17146.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![img/Figure_1.40_B17146.jpg]'
- en: Figure 1.40 – The Stats window
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.40 – 统计窗口
- en: In the **Scene** view, you can view and adjust the game world you are creating.
    In the **Game** view, you can see your final game. So, this area is very important
    in the Editor. Next, let's take a look at the UI area related to a specific GameObject
    in the Scene.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在**场景**视图中，你可以查看和调整你正在创建的游戏世界。在**游戏**视图中，你可以看到你的最终游戏。因此，这个区域在编辑器中非常重要。接下来，让我们看看与场景中特定GameObject相关的UI区域。
- en: The Inspector window
  id: totrans-236
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查器窗口
- en: If you want to modify the properties of a GameObject or a component on a GameObject,
    you need to use the **Inspector** window.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要修改GameObject或GameObject上的组件的属性，你需要使用**检查器**窗口。
- en: 'You can select a GameObject in the **Scene** view or the **Hierarchy** window,
    and then you will see the properties and the components of it in the **Inspector**
    window:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在**场景**视图或**层次结构**窗口中选择一个GameObject，然后你将在**检查器**窗口中看到它的属性和组件：
- en: '![](img/Figure_1.41_B17146.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_1.41_B17146.jpg)'
- en: Figure 1.41 – The Inspector window of a GameObject
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.41 – GameObject的检查器窗口
- en: You can modify these properties directly in the **Inspector** window, which
    also provides some useful tools that can help you modify your GameObjects.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以直接在**检查器**窗口中修改这些属性，该窗口还提供了一些有用的工具，可以帮助你修改你的GameObject。
- en: 'For example, if you want to copy the values of a component on a GameObject,
    you can right-click on the component, and then a menu will pop up; from there,
    you can select the **Copy Component** command:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你想复制GameObject上组件的值，你可以在组件上右键单击，然后会弹出一个菜单；从那里，你可以选择**复制组件**命令：
- en: '![](img/Figure_1.42_B17146.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_1.42_B17146.jpg)'
- en: Figure 1.42 – Copy Component
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.42 – 复制组件
- en: 'Not only can the GameObjects in the **Scene** view be inspected but also the
    digital assets in the **Project** window. You can select a digital asset in the
    **Project** window, and the **Inspector** window will display the settings that
    control how Unity imports and uses the asset at runtime:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅可以在**场景**视图中检查GameObject，还可以在**项目**窗口中检查数字资源。你可以在**项目**窗口中选择一个数字资源，然后**检查器**窗口将显示控制Unity在运行时导入和使用该资源的设置的设置：
- en: '![](img/Figure_1.43_B17146.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_1.43_B17146.jpg)'
- en: Figure 1.43 – The Inspector window of an asset
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.43 – 资源的检查器窗口
- en: In this section, we learned how to view and modify the properties of a GameObject
    and asset through the **Inspector** window.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了如何通过**检查器**窗口查看和修改GameObject和资源的属性。
- en: The Project window
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 项目窗口
- en: 'The final window I will introduce is the `assets` files in folders:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 我将要介绍的最后一个窗口是文件夹中的`assets`文件：
- en: '![](img/Figure_1.44_B17146.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_1.44_B17146.jpg)'
- en: Figure 1.44 – The Project window
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.44 – 项目窗口
- en: 'The **Project** window is the main way to navigate and find assets in your
    game. It provides two ways to search assets, by type or label:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '**项目**窗口是导航和查找游戏内资源的主要方式。它提供了两种搜索资源的方式，按类型或标签：'
- en: '![](img/Figure_1.45_B17146.jpg)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_1.45_B17146.jpg)'
- en: Figure 1.45 – Searching assets by type
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.45 – 通过类型搜索资源
- en: 'It is very easy to import external digital assets or create an asset inside
    the Unity Editor directly. You just need to right-click on the Project window
    and a menu will pop up where you can create a new asset or import an existing
    asset:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity编辑器中导入外部数字资源或直接创建资源非常容易。你只需在项目窗口上右键单击，就会弹出一个菜单，你可以从中创建一个新的资源或导入现有的资源：
- en: '![](img/Figure_1.46_B17146.jpg)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_1.46_B17146.jpg)'
- en: Figure 1.46 – Creating an asset
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.46 – 创建资源
- en: I hope you now have a good understanding of the Unity Editor by reading this
    section. Next, I will introduce what a game engine is and what important features
    Unity provides as a game engine.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 希望通过阅读本节，你现在对Unity编辑器有了很好的理解。接下来，我将介绍什么是游戏引擎，以及Unity作为游戏引擎提供了哪些重要功能。
- en: Working with different features in Unity
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Unity中处理不同的功能
- en: Nowadays, Unity is no longer just a game engine but also a creative tool widely
    used in various industries. However, Unity still retains its game engine roots,
    and it remains one of the most popular game engines. To learn how to use Unity
    to develop games, you must first understand what features Unity provides for game
    developers as a game engine.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Unity不再仅仅是一个游戏引擎，而是一个在各个行业中广泛使用的创意工具。然而，Unity仍然保留了其游戏引擎的根源，并且仍然是最受欢迎的游戏引擎之一。要学习如何使用Unity开发游戏，你必须首先了解Unity作为游戏引擎为游戏开发者提供了哪些功能。
- en: In fact, almost all game engines provide similar functional modules to Unity
    to game developers. So, the first question is, what exactly is a game engine?
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，几乎所有的游戏引擎都为游戏开发者提供了类似于Unity的功能模块。所以，第一个问题是，游戏引擎究竟是什么？
- en: What is a game engine?
  id: totrans-263
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是游戏引擎？
- en: The term **game engine** is widely used in the game industry, but not everyone
    knows what this term means, especially new game developers. So, I will explain
    what a game engine is and, at the same time, introduce the corresponding functions
    in Unity.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '**游戏引擎**这个术语在游戏行业中广泛使用，但并非每个人都了解这个术语的含义，尤其是新游戏开发者。所以，我将解释什么是游戏引擎，同时介绍Unity中的相应功能。'
- en: A game engine is not just a computer graphics renderer. Of course, rendering
    is an important function of a game engine, but the process of creating a game
    is much more complicated than just rendering.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏引擎不仅仅是计算机图形渲染器。当然，渲染是游戏引擎的一个重要功能，但创建游戏的过程远比仅仅渲染复杂得多。
- en: As a game developer, you need to import different types of **digital assets**,
    such as 3D models, 2D textures, and audio, and most of these digital assets are
    not created inside a game engine. Therefore, a game engine should provide the
    function of managing digital assets. In addition to digital assets, you also need
    to use **scripts** to add game logic to guide these assets to perform correct
    behaviors, such as character interactions.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名游戏开发者，您需要导入不同类型的**数字资产**，例如3D模型、2D纹理和音频，而且这些数字资产中的大多数都不是在游戏引擎内部创建的。因此，游戏引擎应该提供管理数字资产的功能。除了数字资产之外，您还需要使用**脚本**来添加游戏逻辑，以引导这些资产执行正确的行为，例如角色交互。
- en: '**UI** is another integral part of a game, and even some gameplay is based
    on UI. Therefore, a good game engine should provide an easy-to-use and powerful
    UI toolkit to develop user interfaces for games.'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '**UI**是游戏中的另一个重要组成部分，甚至有些游戏玩法是基于UI的。因此，一个好的游戏引擎应该提供易于使用且功能强大的UI工具包，以开发游戏的用户界面。'
- en: You can use other software to develop animation files and import them into a
    game engine, but in order for animation files to be played and controlled correctly
    in the game, the game engine needs to provide an **animation** feature.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用其他软件来开发动画文件并将它们导入到游戏引擎中，但为了使动画文件在游戏中正确播放和控制，游戏引擎需要提供**动画**功能。
- en: At the same time, a **physical** effect is a common function in modern games,
    so a powerful game engine should provide a physical function so that game developers
    do not need to implement a physical effect from scratch.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，**物理**效果是现代游戏中常见的功能，因此一个强大的游戏引擎应该提供物理功能，以便游戏开发者不需要从头开始实现物理效果。
- en: There is no doubt that adding **video and audio** to your game can make your
    game livelier and more interesting. With audio especially, suitable background
    music and some appropriate sound effects can make your game feel completely different.
    Even if it is just a prototype, background music and sound effects can make the
    game more complete and more professional. Therefore, although many people often
    ignore the functions of video and sound when talking about game engines, I don't
    think that a game engine without video and audio functions is a good one.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 毫无疑问，将**视频和音频**添加到您的游戏中可以使您的游戏更加生动有趣。特别是音频，合适的背景音乐和一些适当的声音效果可以使您的游戏感觉完全不同。即使只是一个原型，背景音乐和声音效果也可以使游戏更加完整和更加专业。因此，尽管许多人经常在谈论游戏引擎时忽略视频和声音的功能，但我认为没有视频和音频功能的游戏引擎不是一个好的游戏引擎。
- en: As you can see, there are many features in a game engine for game developers
    to develop their games. A game engine integrates all aspects of creating a game
    to create a complete game user experience. So, in game development, you will deal
    with different functions. For example, you may need to properly manage digital
    assets and create appropriate digital assets for your game engine to optimize
    performance at runtime, or you may need to know how to use the scripting function
    provided by the game engine you are using to develop logic for your game.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，游戏引擎中有很多功能供游戏开发者开发他们的游戏。游戏引擎整合了创建游戏的各个方面，以创建完整的游戏用户体验。因此，在游戏开发中，您将处理不同的功能。例如，您可能需要适当地管理数字资产并为您的游戏引擎创建适当的数字资产以优化运行时的性能，或者您可能需要了解如何使用您所使用的游戏引擎提供的脚本功能来为您的游戏开发逻辑。
- en: As one of the most popular game engines, Unity also provides the aforementioned
    functions. In the following subsection, I will introduce these functions in Unity.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最受欢迎的游戏引擎之一，Unity也提供了上述功能。在接下来的小节中，我将介绍Unity中的这些功能。
- en: Features in Unity
  id: totrans-273
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Unity 中的功能
- en: Like other excellent game engines, Unity also provides many functions for game
    developers. You will be introduced to these functions in the following sections.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他优秀的游戏引擎一样，Unity 也为游戏开发者提供了许多功能。您将在接下来的章节中了解这些功能。
- en: Graphics
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图形
- en: 'The first feature I want to introduce is **graphics** in Unity. You can use
    Unity''s graphics features to create beautiful, optimized graphics on various
    platforms:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 我要介绍的第一个功能是 Unity 中的 **图形**。您可以使用 Unity 的图形功能在各种平台上创建美观、优化的图形：
- en: '![](img/Figure_1.47_B17146.jpg)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_1.47_B17146.jpg)'
- en: Figure 1.47 – A Unity HDRP template Scene
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.47 – Unity HDRP 模板场景
- en: 'A render pipeline performs a series of operations that render the contents
    of a Scene on a screen. There are three render pipelines available in Unity:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 渲染管线执行一系列操作，将场景内容渲染到屏幕上。Unity 中有三种可用的渲染管线：
- en: The **Built-in Render Pipeline**, which is the default render pipeline in Unity.
    You cannot modify this render pipeline.
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内置渲染管线**，这是 Unity 中的默认渲染管线。您无法修改此渲染管线。'
- en: The **Universal Render Pipeline** (**URP**), which allows developers to customize
    and create optimized graphics for different platforms.
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通用渲染管线**（**URP**），它允许开发者针对不同平台自定义和创建优化的图形。'
- en: The **High Definition Render Pipeline** (**HDRP**), which focuses on cutting-edge,
    high-fidelity graphics on high-end platforms.
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高清晰度渲染管线**（**HDRP**），它专注于高端平台上的尖端、高保真图形。'
- en: In addition, you can also create your own render pipeline by using the **Scriptable
    Render Pipeline API** in Unity. We will introduce it in detail in [*Chapter 8*](B17146_08_Final_ASB_ePub.xhtml#_idTextAnchor143),
    *The Scriptable Render Pipeline in Unity*.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您还可以通过使用 Unity 中的 **可脚本化渲染管线 API** 来创建自己的渲染管线。我们将在[*第 8 章*](B17146_08_Final_ASB_ePub.xhtml#_idTextAnchor143)，“Unity
    中的可脚本化渲染管线”中详细介绍它。
- en: Scripting
  id: totrans-284
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 脚本
- en: '**Scripting** is another essential feature of Unity. You need scripts to implement
    the game logic in your games.'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '**脚本**是 Unity 的另一个基本功能。您需要脚本来实现游戏中的游戏逻辑。'
- en: The Unity engine is built with native C/C++ internally, but it offers scripting
    APIs in C#, so you do not have to learn C/C++ to create a game. In the following
    sections and chapters, you will learn more about the concepts of scripting.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 引擎内部使用原生 C/C++ 构建，但它提供了 C# 脚本 API，因此您不需要学习 C/C++ 就可以创建游戏。在接下来的章节中，您将了解更多关于脚本的概念。
- en: UI
  id: totrans-287
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: UI
- en: 'UI is very important for a game, and Unity offers three different UI solutions
    for game developers:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: UI 对于游戏非常重要，Unity 为游戏开发者提供了三种不同的 UI 解决方案：
- en: The **Immediate Mode Graphical User Interface** (**IMGUI**)
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**即时模式图形用户界面**（**IMGUI**）'
- en: The **Unity UI** (**uGUI**) package
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Unity UI**（**uGUI**）包'
- en: The **UI Toolkit**
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UI 工具包**'
- en: The IMGUI is a relatively old UI solution in Unity, and it is not recommended
    for building a runtime UI. The UI Toolkit is the latest UI solution; however,
    it is still missing some features that you can find in the uGUI package and the
    IMGUI. The uGUI package is a mature UI solution in Unity, which is widely used
    in the game industry. We will introduce the uGUI package in detail in [*Chapter
    3*](B17146_03_Final_ASB_ePub.xhtml#_idTextAnchor046), *Developing UI with the
    Unity UI System*.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: IMGUI 是 Unity 中相对较旧的 UI 解决方案，不建议用于构建运行时 UI。UI Toolkit 是最新的 UI 解决方案；然而，它仍然缺少您可以在
    uGUI 包和 IMGUI 中找到的一些功能。uGUI 包是 Unity 中成熟的 UI 解决方案，在游戏行业中得到广泛应用。我们将在[*第 3 章*](B17146_03_Final_ASB_ePub.xhtml#_idTextAnchor046)，“使用
    Unity UI 系统开发 UI”中详细介绍 uGUI 包。
- en: Animation
  id: totrans-293
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 动画
- en: Animation can make your game more vivid. Unity provides a powerful animation
    feature called **Mecanim** that allows you to retarget an animation, control the
    weight of it at runtime, and call events from the animation playback.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 动画可以使您的游戏更加生动。Unity 提供了一个强大的动画功能，称为 **Mecanim**，它允许您重定向动画，在运行时控制其权重，并从动画播放中调用事件。
- en: We will introduce Unity's animation system in [*Chapter 4*](B17146_04_Final_ASB_ePub.xhtml#_idTextAnchor062),
    *Creating Animations with the Unity Animation System*.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[*第 4 章*](B17146_04_Final_ASB_ePub.xhtml#_idTextAnchor062)，“使用 Unity 动画系统创建动画”中介绍
    Unity 的动画系统。
- en: Physics
  id: totrans-296
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 物理引擎
- en: '**Physical simulation** is an indispensable feature in certain types of games,
    and some gameplays are even based entirely on physical simulation. There are different
    physics engine implementations in Unity, and you can select one according to your
    game needs.'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '**物理模拟**是某些类型游戏中的必备功能，某些游戏玩法甚至完全基于物理模拟。Unity 中有不同的物理引擎实现，您可以根据游戏需求选择一个。'
- en: We will introduce Unity's physics engine implementations in [*Chapter 5*](B17146_05_Final_ASB_ePub.xhtml#_idTextAnchor078),
    *Working with the Unity Physics System*.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 [*第 5 章*](B17146_05_Final_ASB_ePub.xhtml#_idTextAnchor078) 中介绍 Unity 的物理引擎实现，*使用
    Unity 物理系统*。
- en: Video and audio
  id: totrans-299
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 视频 和 音频
- en: Good background music, sound effects, and video can make your game stand out.
    This is a feature that cannot be ignored. Unity provides **video and audio** features,
    allowing your game to play videos on different platforms, and supports real-time
    mixing and full 3D spatial sound effects.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 优秀的背景音乐、音效和视频可以使您的游戏脱颖而出。这是一个不容忽视的功能。Unity 提供了 **视频和音频** 功能，允许您的游戏在不同的平台上播放视频，并支持实时混音和全
    3D 空间音效。
- en: We will discuss video and audio more in [*Chapter 6*](B17146_06_Final_ASB_ePub.xhtml#_idTextAnchor095),
    *Integrating Audio and Video in a Unity Project*.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 [*第 6 章*](B17146_06_Final_ASB_ePub.xhtml#_idTextAnchor095) 中更详细地讨论视频和音频，*在
    Unity 项目中集成音频和视频*。
- en: Assets
  id: totrans-302
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 资产
- en: You can import your digital asset files into the Unity Editor, such as 3D models
    and 2D textures. Unity offers an Asset Import Pipeline to process these imported
    assets. You can also customize the import settings to control how Unity imports
    and uses the assets at runtime.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将您的数字资产文件导入到 Unity 编辑器中，例如 3D 模型和 2D 纹理。Unity 提供了一个资产导入管道来处理这些导入的资产。您还可以自定义导入设置来控制
    Unity 在运行时如何导入和使用这些资产。
- en: We will introduce **assets management** and **serialization** in [*Chapter 10*](B17146_10_Final_ASB_ePub.xhtml#_idTextAnchor181),
    *Serialization System and Assets Management In Unity and Azure*.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 [*第 10 章*](B17146_10_Final_ASB_ePub.xhtml#_idTextAnchor181) 中介绍 **资产管理**
    和 **序列化**，*Unity 和 Azure 中的序列化系统和资产管理*。
- en: We've briefly introduced the functions that a game engine needs to provide and
    the functions provided by Unity. Next, let's introduce .NET/C# and scripting in
    Unity.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 我们简要介绍了游戏引擎需要提供的功能以及 Unity 提供的功能。接下来，让我们介绍 .NET/C# 和 Unity 中的脚本。
- en: .NET/C# and scripting in Unity
  id: totrans-306
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: .NET/C# 和 Unity 脚本
- en: Unity is a game engine written in C/C++, but in order to make it easier for
    game developers to develop games, Unity provides C# (*pronounced C-sharp*) as
    a scripting programming language to write game logic in Unity. This is because
    compared with C/C++, C# is easier to learn. In addition, it is a "managed language,"
    which means that it will automatically manage memory for you – allocate release
    memory, cover memory leaks, and so on.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 是一个用 C/C++ 编写的游戏引擎，但为了使游戏开发者更容易开发游戏，Unity 提供了 C#（发音为 C-sharp）作为脚本编程语言，以便在
    Unity 中编写游戏逻辑。这是因为与 C/C++ 相比，C# 更容易学习。此外，它是一种“托管语言”，这意味着它会自动为您管理内存 – 分配和释放内存，防止内存泄漏等。
- en: In this section, we will introduce .NET/C# and scripting in Unity.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍 .NET/C# 和 Unity 中的脚本。
- en: .NET profiles in Unity
  id: totrans-309
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Unity 中的 .NET 配置文件
- en: 'The Unity game engine uses **Mono**, an open source ECMA CLI, C#, and .NET
    implementation, for scripting. You can follow the development of Unity''s fork
    of Mono on GitHub: [https://github.com/Unity-Technologies/mono/tree/unity-master-new-unitychanges](https://github.com/Unity-Technologies/mono/tree/unity-master-new-unitychanges).'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 游戏引擎使用 **Mono**，一个开源的 ECMA CLI、C# 和 .NET 实现，用于脚本。您可以在 GitHub 上跟踪 Unity
    对 Mono 的分支开发：[https://github.com/Unity-Technologies/mono/tree/unity-master-new-unitychanges](https://github.com/Unity-Technologies/mono/tree/unity-master-new-unitychanges)。
- en: Unity provides different .NET profiles. If you are using the legacy version
    of Unity, which is before Unity 2018, you may find that it provides two API compatibility
    levels in the **Player** settings panel (**Edit** | **Project Settings** | **Player**
    | **Other Settings**), which are **.NET 2.0 Subset** and **.NET 2.0**. First of
    all, if you are using a legacy version of Unity, then I strongly recommend that
    you update your Unity version. Secondly, both the **.NET 2.0 Subset** and **.NET
    2.0** profiles in Unity are closely aligned with the .NET 2.0 profile from Microsoft.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 提供了不同的 .NET 配置文件。如果您使用的是 Unity 的旧版本，即在 Unity 2018 之前，您可能会发现它在 **Player**
    设置面板中提供了两个 API 兼容性级别（**编辑** | **项目设置** | **Player** | **其他设置**），即 **.NET 2.0 子集**
    和 **.NET 2.0**。首先，如果您使用的是 Unity 的旧版本，那么我强烈建议您更新您的 Unity 版本。其次，Unity 中的 **.NET
    2.0 子集** 和 **.NET 2.0** 配置文件与微软的 .NET 2.0 配置文件紧密一致。
- en: 'If you are using a modern version of Unity, which is Unity 2019 or later, you
    will find another two .NET profiles supported by Unity, which are **.NET Standard
    2.0** and **.NET 4.x**:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是 Unity 的现代版本，即 Unity 2019 或更高版本，您会发现 Unity 支持另外两个 .NET 配置文件，即 **.NET
    Standard 2.0** 和 **.NET 4.x**：
- en: '![](img/Figure_1.48_B17146.jpg)'
  id: totrans-313
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_1.48_B17146.jpg)'
- en: Figure 1.48 – The Api Compatibility Level settings
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.48 – Api 兼容性级别设置
- en: Note
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The name of the .NET Standard 2.0 profile can be a bit misleading because it
    is not related to the **.NET 2.0** and **.NET 2.0 Subset** profiles from the legacy
    versions of Unity.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: .NET Standard 2.0配置文件的名字可能有点误导，因为它与Unity旧版本中的**.NET 2.0**和**.NET 2.0子集**配置文件无关。
- en: '.NET Standard is a formal specification of the .NET APIs that all .NET platforms
    have to implement. These .NET platforms include .NET Framework, .NET Core, Xamarin,
    and Mono. You can find the .NET Standard repository on GitHub: [https://github.com/dotnet/standard](https://github.com/dotnet/standard).'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: .NET Standard是.NET API的正式规范，所有.NET平台都必须实现。这些.NET平台包括.NET Framework、.NET Core、Xamarin和Mono。你可以在GitHub上找到.NET
    Standard仓库：[https://github.com/dotnet/standard](https://github.com/dotnet/standard)。
- en: On the other hand, the .NET 4.x profile in Unity matches the .NET 4 series (.NET
    4.5, .NET 4.6, .NET 4.7, and so on) of profiles from the .NET Framework.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，Unity中的.NET 4.x配置文件与.NET Framework的.NET 4系列配置文件（.NET 4.5、.NET 4.6、.NET
    4.7等）相匹配。
- en: Therefore, it is a good idea to use the .NET Standard 2.0 profile in Unity,
    and you should choose the .NET 4.x profile only for compatibility reasons.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在Unity中使用.NET Standard 2.0配置文件是个不错的选择，而且你应该只为了兼容性原因选择.NET 4.x配置文件。
- en: Scripting backends in Unity
  id: totrans-320
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Unity中的脚本后端
- en: 'In addition to the .NET profiles, Unity also provides two different **scripting
    backends**, which are **Mono** and **IL2CPP** (which stands for **Intermediate
    Language To C++**):'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 除了.NET配置文件外，Unity还提供了两种不同的**脚本后端**，分别是**Mono**和**IL2CPP**（代表**中间语言到C++**）：
- en: '![](img/Figure_1.49_B17146.jpg)'
  id: totrans-322
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_1.49_B17146.jpg)'
- en: Figure 1.49 – The Scripting Backend settings
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.49 – 脚本后端设置
- en: You can change the scripting backend of your project in the same settings panel,
    which can be found by going to **Edit** | **Project Settings** | **Player** |
    **Other Settings**.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在相同的设置面板中更改项目的脚本后端，该面板可以通过访问**编辑** | **项目设置** | **玩家** | **其他设置**找到。
- en: 'The key difference between the two scripting backends is how they compile your
    Unity scripting API code (C# code):'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 两种脚本后端之间的关键区别在于它们如何编译你的Unity脚本API代码（C#代码）：
- en: The Mono scripting backend uses **Just-in-Time** (**JIT**) compilation and compiles
    code on demand at runtime. It will compile your Unity scripting API code to regular
    .NET DLLs. And, as I mentioned in the previous sections, Unity uses an implementation
    of the standard Mono runtime for scripting that natively supports C#.
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mono脚本后端使用**即时编译**（**JIT**）编译，在运行时按需编译代码。它将你的Unity脚本API代码编译成常规.NET DLL。而且，正如我在前面的章节中提到的，Unity使用一个支持C#的Mono运行时的实现来执行脚本。
- en: 'Alternatively, the IL2CPP scripting backend uses **Ahead-of-Time** (**AOT**)
    compilation and compiles your entire application before it is run. And it not
    only compiles your Unity scripting API code into .NET DLL but also converts all
    managed assemblies into standard C++ code. In addition, the runtime of IL2CPP
    is developed by Unity, which is an alternative to the Mono runtime:'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或者，IL2CPP脚本后端使用**即时编译**（**AOT**）编译，在运行前编译整个应用程序。它不仅将你的Unity脚本API代码编译成.NET DLL，还将所有托管程序集转换为标准C++代码。此外，IL2CPP的运行时是由Unity开发的，它是Mono运行时的替代品：
- en: '![](img/Figure_1.50_B17146.jpg)'
  id: totrans-328
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_1.50_B17146.jpg)'
- en: Figure 1.50 – The IL2CPP scripting backend
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.50 – IL2CPP脚本后端
- en: As shown in *Figure 1.50*, IL2CPP not only compiles C# code into managed assemblies
    but also further converts assemblies into C++ code, and then compiles the C++
    code into the native binary format.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 如*图1.50*所示，IL2CPP不仅将C#代码编译成托管程序集，而且还进一步将程序集转换为C++代码，然后编译C++代码成原生二进制格式。
- en: Clearly, IL2CPP takes more time to compile code compared to Mono, so why do
    we still need IL2CPP?
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，与Mono相比，IL2CPP编译代码需要更多的时间，那么为什么我们还需要IL2CPP呢？
- en: Well, first, IL2CPP uses AOT compilation, which takes longer to compile, but
    when you ship the game for a specific platform, the binary files are fully specified,
    which means that compared to Mono, code generation is greatly improved.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，首先，IL2CPP使用AOT编译，编译时间较长，但当你为特定平台发布游戏时，二进制文件是完整指定的，这意味着与Mono相比，代码生成得到了极大的改进。
- en: 'Second, it is worth noting that IL2CPP is the only scripting backend available
    when building for **iOS** and **WebGL**. In addition to iOS and WebGL, Unity has
    added support for **Android 64-bit** in Unity 2018.2 to comply with the **Google
    Play** **Store** policy, which requires that starting from August 1, 2019, your
    apps published on Google Play need to support 64-bit architectures:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，值得注意的是，当为**iOS**和**WebGL**构建时，IL2CPP是唯一的脚本后端。除了iOS和WebGL，Unity在Unity 2018.2中增加了对**Android
    64位**的支持，以符合**Google Play** **商店**政策，该政策要求从2019年8月1日起，你在Google Play上发布的应用需要支持64位架构：
- en: '![](img/Figure_1.51_B17146.jpg)'
  id: totrans-334
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_1.51_B17146.jpg)'
- en: Figure 1.51 – The Android 64-bit ARM architecture is not supported on the Mono
    scripting backend
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.51 – Android 64位ARM架构不支持Mono脚本后端
- en: And as you can see in the preceding screenshot, the Android 64-bit ARM architecture
    is not supported on the Mono scripting backend. In this situation, you have to
    choose the IL2CPP scripting backend.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 如前述截图所示，Android 64位ARM架构不支持Mono脚本后端。在这种情况下，你必须选择IL2CPP脚本后端。
- en: 'So, whether we use IL2CPP for better code generation or some specific platforms
    or architectures, spending more compilation time is still a disadvantage of IL2CPP.
    So, how should we optimize the compilation time of IL2CPP? I think the following
    tips will help:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，无论我们是为了更好的代码生成还是针对某些特定的平台或架构使用IL2CPP，花费更多的时间进行编译仍然是IL2CPP的缺点。那么，我们应该如何优化IL2CPP的编译时间呢？我认为以下提示会有所帮助：
- en: Don't delete the previous `build` folder, and build your project with the IL2CPP
    scripting backend at the same location as the folder. This is because we can use
    incremental building, which means the C++ compiler only recompiles files that
    have changed since the last build.
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要删除之前的`build`文件夹，并在与文件夹相同的目录下使用IL2CPP脚本后端构建你的项目。这是因为我们可以使用增量构建，这意味着C++编译器只重新编译自上次构建以来已更改的文件。
- en: Store your project and target build folder on a **Solid-State Drive** (**SSD**).
    This is because when IL2CPP is selected, the compilation process will convert
    the IL code into C++ and compile it, which involves a lot of read/write operations.
    A faster storage device will speed up this process.
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将你的项目和目标构建文件夹存储在**固态硬盘**（**SSD**）上。这是因为当选择IL2CPP时，编译过程会将IL代码转换为C++并编译它，这涉及到大量的读写操作。一个更快的存储设备将加快这一过程。
- en: Disable anti-malware software before building the project. Of course, this depends
    on your security strategy.
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在构建项目之前，请禁用防病毒软件。当然，这取决于你的安全策略。
- en: Well, I hope that by reading this section, you now have a general understanding
    of Unity's scripting system, such as the .NET profiles in Unity, the two scripting
    backends, and some optimization tips for IL2CPP.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，我希望通过阅读本节，你现在对Unity的脚本系统有了大致的了解，例如Unity中的.NET配置文件、两个脚本后端以及一些IL2CPP的优化技巧。
- en: In the next section, you will learn how to set up your development environment
    and use the widely used Visual Studio to develop games in Unity.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，你将学习如何设置你的开发环境并使用广泛使用的Visual Studio在Unity中开发游戏。
- en: Building Unity games with Visual Studio
  id: totrans-343
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Visual Studio构建Unity游戏
- en: 'Before you start writing any code, it is important to choose suitable development
    tools. Microsoft''s **Visual Studio** is not only a widely used IDE but also the
    development environment that is installed by default when you install Unity on
    Windows or macOS:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始编写任何代码之前，选择合适的发展工具非常重要。微软的**Visual Studio**不仅是一个广泛使用的IDE，而且当你在Windows或macOS上安装Unity时，它还是默认安装的开发环境：
- en: '![](img/Figure_1.52_B17146.jpg)'
  id: totrans-345
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_1.52_B17146.jpg)'
- en: Figure 1.52 – Visual Studio Installer
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.52 – Visual Studio安装程序
- en: While installing Visual Studio, **Visual Studio Tools for Unity** will also
    be installed. It is a free extension that provides support for writing and debugging
    C# in Unity.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装Visual Studio时，**Visual Studio Tools for Unity**也会被安装。这是一个免费扩展，它为在Unity中编写和调试C#提供支持。
- en: 'If you do not install Visual Studio through the Unity Hub, please make sure
    you installed this extension. You can check it in the **Visual Studio Installer**:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有通过Unity Hub安装Visual Studio，请确保你已安装此扩展。你可以在**Visual Studio安装程序**中检查：
- en: '![](img/Figure_1.53_B17146.jpg)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_1.53_B17146.jpg)'
- en: Figure 1.53 – Installing Visual Studio Tools for Unity
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.53 – 安装Visual Studio Tools for Unity
- en: 'After installing the Unity Editor and Visual Studio Community 2019, you can
    check the **External Script Editor** settings in the **Preferences** window of
    the Unity Editor:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Unity编辑器和Visual Studio Community 2019后，你可以在Unity编辑器的**首选项**窗口中检查**外部脚本编辑器**设置：
- en: '![](img/Figure_1.54_B17146.jpg)'
  id: totrans-352
  prefs: []
  type: TYPE_IMG
  zh: '![图1.54_B17146](img/Figure_1.54_B17146.jpg)'
- en: Figure 1.54 – The External Script Editor settings
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.54 – 外部脚本编辑器设置
- en: In addition, you can also select other script editors by modifying this setting,
    such as **Visual Studio Code** and **JetBrains Rider**.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您还可以通过修改此设置来选择其他脚本编辑器，例如**Visual Studio Code**和**JetBrains Rider**。
- en: 'Then, we can create a new C# script file named `NewBehaviourScript` in the
    Unity Editor and double-click to open it in Visual Studio:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以在Unity编辑器中创建一个名为`NewBehaviourScript`的新C#脚本文件，并双击它以在Visual Studio中打开：
- en: '![](img/Figure_1.55_B17146.jpg)'
  id: totrans-356
  prefs: []
  type: TYPE_IMG
  zh: '![图1.55_B17146](img/Figure_1.55_B17146.jpg)'
- en: Figure 1.55 – IntelliSense for the Unity APIs
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.55 – Unity API的IntelliSense
- en: 'As you can see in the preceding screenshot, there are two built-in methods
    in the script file by default, namely `Start` and `Update`. Visual Studio supports
    **IntelliSense** for Unity APIs, so we can write code quickly:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 如前述截图所示，脚本文件中默认有两个内置方法，即`Start`和`Update`。Visual Studio支持Unity API的**IntelliSense**，因此我们可以快速编写代码：
- en: '![](img/Figure_1.56_B17146.jpg)'
  id: totrans-359
  prefs: []
  type: TYPE_IMG
  zh: '![图1.56_B17146](img/Figure_1.56_B17146.jpg)'
- en: Figure 1.56 – Debugging your code
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.56 – 调试您的代码
- en: 'It is also very easy to debug your code in Visual Studio. In the preceding
    screenshot, I set a breakpoint inside the `Start` method and clicked the **Attach
    to Unity** button in Visual Studio:'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 在Visual Studio中调试您的代码也非常容易。在前述截图中，我在`Start`方法内设置了断点，并在Visual Studio中点击了**附加到Unity**按钮：
- en: '![](img/Figure_1.57_B17146.jpg)'
  id: totrans-362
  prefs: []
  type: TYPE_IMG
  zh: '![图1.57_B17146](img/Figure_1.57_B17146.jpg)'
- en: Figure 1.57 – Clicking the Attach to Unity button
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.57 – 点击“附加到Unity”按钮
- en: In order to run this code, I attach this script to a GameObject in the Scene
    and click on the **Play** button in the Unity Editor to run the game in the **Game**
    view.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 为了运行此代码，我将此脚本附加到场景中的GameObject上，并在Unity编辑器中点击**播放**按钮以在**游戏**视图中运行游戏。
- en: '![](img/Figure_1.58_B17146.jpg)'
  id: totrans-365
  prefs: []
  type: TYPE_IMG
  zh: '![图1.58_B17146](img/Figure_1.58_B17146.jpg)'
- en: Figure 1.58 – The debugger stopping at the breakpoint
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.58 – 调试器在断点处停止
- en: Then, the debugger will stop at the breakpoint, and you can look at the current
    state of the game.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，调试器将在断点处停止，您可以看到游戏当前的状态。
- en: Summary
  id: totrans-368
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we started by choosing the Unity release and subscription plan
    that suits your needs. Then, you learned how to install and manage the Unity Editor
    by using the Unity Hub and explored the five important areas of the Unity Editor
    – the Toolbar, the **Hierarchy** window, the **Scene** view and the **Game** view,
    the **Inspector** window, and the **Project** window. You were then introduced
    to the Unity Editor toolbars and the windows provided by Unity. We also discussed
    what a game engine is and explored the different features provided by Unity for
    developers to develop games. We then introduced the .NET profiles in Unity and
    the scripting backends offered by Unity; you should now know the difference between
    the Mono scripting backend and the IL2CPP scripting backend. Finally, we demonstrated
    how to set up Visual Studio for Unity Editor to write code.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先选择了适合您需求的Unity发布和订阅计划。然后，您学习了如何使用Unity Hub安装和管理Unity编辑器，并探索了Unity编辑器的五个重要区域——工具栏、**层次结构**窗口、**场景**视图和**游戏**视图、**检查器**窗口和**项目**窗口。然后，您被介绍到Unity编辑器的工具栏和Unity提供的窗口。我们还讨论了游戏引擎是什么，并探索了Unity为开发者提供的不同游戏开发功能。然后，我们介绍了Unity中的.NET配置文件和Unity提供的脚本后端；您现在应该知道Mono脚本后端和IL2CPP脚本后端的区别。最后，我们演示了如何为Unity编辑器设置Visual
    Studio以编写代码。
- en: In the next chapter, we will start with a detailed introduction to the basic
    concepts of scripting in Unity, such as GameObjects, components, and some special,
    important components such as **Transform**. We will also introduce you to the
    life cycle of a script instance. Then, we will discuss how to create objects from
    scripts and how to access GameObjects or components through C# code. Some best
    practices for scripting in Unity will also be introduced. Finally, we will introduce
    **packages** and the **Package Manager** in Unity.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将从Unity脚本的基本概念详细介绍开始，例如GameObject、组件，以及一些特殊且重要的组件，如**Transform**。我们还将向您介绍脚本实例的生命周期。然后，我们将讨论如何通过脚本创建对象以及如何通过C#代码访问GameObject或组件。还将介绍Unity脚本的一些最佳实践。最后，我们将介绍Unity中的**包**和**包管理器**。
