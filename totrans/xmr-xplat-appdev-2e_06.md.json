["```cs\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <string name=\"ApplicationName\">XamChat</string>\n    <string name=\"ErrorTitle\">Oops!</string>\n    <string name=\"Loading\">Loading</string>\n</resources>\n```", "```cs\n[Application(Theme = \"@android:style/Theme.Holo.Light\")]\npublic class Application : Android.App.Application\n{\n  public Application(IntPtr javaReference, JniHandleOwnership transfer): base(javaReference, transfer)\n  {\n  }\n\n  public override void OnCreate()\n  {\n    base.OnCreate();\n\n    //ViewModels\n    ServiceContainer.Register<LoginViewModel>(() => new LoginViewModel());\n    ServiceContainer.Register<FriendViewModel>(() => new FriendViewModel());\n    ServiceContainer.Register<MessageViewModel>(() => new MessageViewModel());\n    ServiceContainer.Register<RegisterViewModel>(() => new RegisterViewModel());\n\n    //Models\n    ServiceContainer.Register<ISettings>(() => new FakeSettings());\n    ServiceContainer.Register<IWebService>(() => new FakeWebService());\n  }\n}\n```", "```cs\n[Activity]\npublic class BaseActivity<TViewModel> : Activitywhere TViewModel : BaseViewModel\n{\n  protected readonly TViewModel viewModel;\n  protected ProgressDialog progress;\n\n  public BaseActivity()\n  {\n    viewModel = ServiceContainer.Resolve(typeof(TViewModel)) asTViewModel;\n  }\n  protected override void OnCreate(Bundle bundle)\n  {\n    base.OnCreate(bundle);\n    progress = new ProgressDialog(this);\n    progress.SetCancelable(false);progress.SetTitle(Resource.String.Loading);}\n  protected override void OnResume()\n  {\n    base.OnResume();\n    viewModel.IsBusyChanged += OnIsBusyChanged;\n  }\n  protected override void OnPause()\n  {\n    base.OnPause();\n    viewModel.IsBusyChanged -= OnIsBusyChanged;\n  }\n  void OnIsBusyChanged (object sender, EventArgs e)\n  {\n    if (viewModel.IsBusy)\n      progress.Show();\n    else\n      progress.Hide();\n  }\n}\n```", "```cs\nprotected void DisplayError(Exception exc)\n{\n  string error = exc.Message;\n  new AlertDialog.Builder(this)\n  .SetTitle(Resource.String.ErrorTitle) \n  .SetMessage(error)\n  .SetPositiveButton(Android.Resource.String.Ok,(IDialogInterfaceOnClickListener)null)\n  .Show();\n}\n```", "```cs\n[Activity(Label = \"@string/ApplicationName\", MainLauncher = true)]\npublic class LoginActivity : BaseActivity<LoginViewModel>\n{\n  EditText username, password;\n  Button login;\n\n  protected override void OnCreate(Bundle bundle)\n  {\n    base.OnCreate(bundle);\n    SetContentView(Resource.Layout.Login);\n    username = FindViewById<EditText>(Resource.Id.username);\n    password = FindViewById<EditText>(Resource.Id.password);\n    login = FindViewById<Button>(Resource.Id.login);\n    login.Click += OnLogin;\n  }\n  protected override void OnResume()\n  {\n    base.OnResume();\n    username.Text = password.Text = string.Empty;\n  }\n  async void OnLogin (object sender, EventArgs e)\n  {\n    viewModel.Username = username.Text;\n    viewModel.Password = password.Text;\n    try\n    {\n      await viewModel.Login();\n        //TODO: navigate to a new activity\n    }\n    catch (Exception exc)\n    {\n      DisplayError(exc);\n    }\n  }\n}\n```", "```cs\n[Activity(Label = \"Conversations\")]\npublic class ConversationsActivity :BaseActivity<MessageViewModel>\n{\n  //Other code here later\n}\n```", "```cs\nclass Adapter : BaseAdapter<Conversation>\n{\n  readonly MessageViewModel messageViewModel = ServiceContainer.Resolve<MessageViewModel>();\n  readonly LayoutInflater inflater;\n\n  public Adapter(Context context)\n  {\n    inflater = (LayoutInflater)context.GetSystemService (Context.LayoutInflaterService);\n  }\n  public override long GetItemId(int position)\n  {\n    //This is an abstract method, just a simple implementation\n    return position;\n  }\n  public override View GetView(int position, View convertView, ViewGroup parent)\n  {\n    if (convertView == null)\n    {\n      convertView = inflater.Inflate (Resource.Layout.ConversationListItem, null);\n    }\n    var conversation = this [position];\n    var username = convertView.FindViewById<TextView>(Resource.Id.conversationUsername);\n    var lastMessage = convertView.FindViewById<TextView>(Resource.Id.conversationLastMessage);\n    username.Text = conversation.Username;\n    lastMessage.Text = conversation.LastMessage;\n    return convertView;\n  }\n  public override int Count\n  {\n    get { return messageViewModel.Conversations == null ? 0: messageViewModel.Conversations.Length; }\n  }\n  public override Conversation this[int index]\n  {\n    get { return messageViewModel.Conversations [index]; }\n  }\n}\n```", "```cs\nListView listView;\nAdapter adapter;\n\nprotected override void OnCreate(Bundle bundle)\n{\n  base.OnCreate(bundle);\n  SetContentView(Resource.Layout.Conversations);\n  listView = FindViewById<ListView>(Resource.Id.conversationsList);\n  listView.Adapter = adapter = new Adapter(this);\n}\nprotected async override void OnResume()\n{\n  base.OnResume();\n  try\n  {\n    await viewModel.GetConversations();\n    adapter.NotifyDataSetInvalidated();\n  }\n  catch (Exception exc)\n  {\n    DisplayError(exc);\n  }\n}\n```", "```cs\nStartActivity(typeof(ConversationsActivity));\n```", "```cs\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu >\n  <item android:id=\"@+id/addFriendMenu\"android:icon=\"@android:drawable/ic_menu_add\"android:showAsAction=\"ifRoom\"/>\n</menu>\n```", "```cs\npublic override bool OnCreateOptionsMenu(IMenu menu)\n{\n  MenuInflater.Inflate(Resource.Menu.ConversationsMenu, menu);\n  return base.OnCreateOptionsMenu(menu);\n}\n```", "```cs\npublic override bool OnOptionsItemSelected(IMenuItem item)\n{\n  if (item.ItemId == Resource.Id.addFriendMenu)\n  {\n    //TODO: launch the next activity\n  }\n  return base.OnOptionsItemSelected(item);\n}\n```", "```cs\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout \nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"fill_parent\">\n  <TextView android:text=\"Large Text\"\n  android:textAppearance=\"?android:attr/textAppearanceLarge\"\n  android:layout_width=\"wrap_content\"\n  android:layout_height=\"wrap_content\"\n  android:id=\"@+id/friendName\"\n  android:layout_margin=\"3dp\" />\n  <ImageView \n  android:src=\"img/ic_menu_add\" \n  android:layout_alignParentRight=\"true\" \n  android:layout_width=\"wrap_content\"\n  android:layout_height=\"wrap_content\"\n  android:layout_margin=\"3dp\" />\n</RelativeLayout>\n```", "```cs\n[Activity(Label = \"Friends\")]\npublic class FriendsActivity : BaseActivity<FriendViewModel>\n{\n  protected override void OnCreate(Bundle bundle)\n  {\n    base.OnCreate(bundle);\n  }\n}\n```", "```cs\nclass Adapter : BaseAdapter<User>\n{\n  readonly FriendViewModel friendViewModel = ServiceContainer.Resolve<FriendViewModel>();\n  readonly LayoutInflater inflater;\n\n  public Adapter(Context context)\n  {\n    inflater = (LayoutInflater)context.GetSystemService (Context.LayoutInflaterService);\n  }\n  public override long GetItemId(int position)\n  {\n    return position;\n  }\n  public override View GetView(int position, View convertView, ViewGroup parent)\n  {\n    if (convertView == null)\n    {\n      convertView = inflater.Inflate(Resource.Layout.FriendListItem, null);\n    }\n    var friend = this [position];\n    var friendname = convertView.FindViewById<TextView>(Resource.Id.friendName);\n    friendname.Text = friend.Username;\n    return convertView;\n  }\n  public override int Count\n  {\n    get { return friendViewModel.Friends == null ? 0: friendViewModel.Friends.Length; }\n  }\n  public override User this[int index]\n  {\n    get { return friendViewModel.Friends [index]; }\n  }\n}\n```", "```cs\nListView listView;\nAdapter adapter;\n\nprotected override void OnCreate(Bundle bundle)\n{\n  base.OnCreate(bundle);\n  SetContentView(Resource.Layout.Friends);\n  listView = FindViewById<ListView>(Resource.Id.friendsList);\n  listView.Adapter = adapter = new Adapter(this);\n}\nprotected async override void OnResume()\n{\n  base.OnResume();\n  try\n  {\n    await viewModel.GetFriends();\n    adapter.NotifyDataSetInvalidated();\n  }\n  catch (Exception exc)\n  {\n    DisplayError(exc);\n  }\n}\n```", "```cs\npublic override bool OnOptionsItemSelected(IMenuItem item)\n{\n  if (item.ItemId == Resource.Id.addFriendMenu)\n  {\n    StartActivity(typeof(FriendsActivity));\n  }\n  return base.OnOptionsItemSelected(item);\n}\n```", "```cs\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout\n\n  android:orientation=\"vertical\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\">\n  <ListView\n    android:minWidth=\"25px\"\n    android:minHeight=\"25px\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"wrap_content\"\n    android:id=\"@+id/messageList\"\n    android:layout_weight=\"1\"\n    android:stackFromBottom=\"true\"\n    android:transcriptMode=\"alwaysScroll\" />\n  <RelativeLayout\n  android:minWidth=\"25px\"\n  android:minHeight=\"25px\"\n  android:layout_width=\"fill_parent\"\n  android:layout_height=\"wrap_content\">\n  <Button\n    android:text=\"Send\"\n    android:layout_alignParentRight=\"true\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:id=\"@+id/sendButton\" />\n  <EditText\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_toLeftOf=\"@id/sendButton\"\n    android:layout_centerInParent=\"true\"\n    android:id=\"@+id/messageText\" />\n  </RelativeLayout>\n</LinearLayout>\n\n```", "```cs\n[Activity(Label = \"Messages\")]\npublic class MessagesActivity : BaseActivity<MessageViewModel>\n{\n  protected override void OnCreate(Bundle bundle)\n  {\n    base.OnCreate(bundle);\n  }\n}\n```", "```cs\nclass Adapter : BaseAdapter<Message>\n{\n  readonly MessageViewModel messageViewModel = ServiceContainer.Resolve<MessageViewModel>();\n  readonly ISettings settings = ServiceContainer.Resolve<ISettings>();\n  readonly LayoutInflater inflater;\n  const int MyMessageType = 0, TheirMessageType = 1;\n\n  public Adapter (Context context)\n  {\n    inflater = (LayoutInflater)context.GetSystemService (Context.LayoutInflaterService);\n  }\n  public override long GetItemId(int position)\n  {\n    return position;\n  }\n  public override int Count\n  {\n    get { return messageViewModel.Messages == null ? 0: messageViewModel.Messages.Length; }\n  }\n  public override Message this[int index]\n  {\n    get { return messageViewModel.Messages [index]; }\n  }\n  public override int ViewTypeCount\n  {\n    get { return 2; }\n  }\n  public override int GetItemViewType(int position)\n  {\n    var message = this [position];\n    return message.UserId == settings.User.Id ?MyMessageType : TheirMessageType;\n  }\n}\n```", "```cs\npublic override View GetView(int position, View convertView, ViewGroup parent)\n{\n  var message = this [position];\n  int type = GetItemViewType(position);\n  if (convertView == null)\n  {\n    if (type == MyMessageType)\n    {\n      convertView = inflater.Inflate(Resource.Layout.MyMessageListItem, null);\n    }\n    else\n    {\n      convertView = inflater.Inflate(Resource.Layout.TheirMessageListItem, null);\n    }\n  }\n  TextView messageText, dateText;\n  if (type == MyMessageType)\n  {\n    messageText = convertView.FindViewById<TextView>(Resource.Id.myMessageText);\n    dateText = convertView.FindViewById<TextView>(Resource.Id.myMessageDate);\n  }\n  else\n  {\n    messageText = convertView.FindViewById<TextView>(Resource.Id.theirMessageText);\n    dateText = convertView.FindViewById<TextView>(Resource.Id.theirMessageDate);\n    }\n  messageText.Text = message.Text;\n  dateText.Text = message.Date.ToString(\"MM/dd/yy HH:mm\");\n  return convertView;\n}\n```", "```cs\nListView listView;\nEditText messageText;\nButton sendButton;\nAdapter adapter;\n\nprotected override void OnCreate(Bundle bundle)\n{\n  base.OnCreate(bundle);\n\n  Title = viewModel.Conversation.Username;\n  SetContentView(Resource.Layout.Messages);\n  listView = FindViewById<ListView>(Resource.Id.messageList);\n  messageText = FindViewById<EditText>(Resource.Id.messageText);\n  sendButton = FindViewById<Button>(Resource.Id.sendButton);\n\n  listView.Adapter = adapter = new Adapter(this);\n\n  sendButton.Click += async (sender, e) =>\n  {\n    viewModel.Text = messageText.Text;\n    try\n    {\n      await viewModel.SendMessage();\n      messageText.Text = string.Empty;\n      adapter.NotifyDataSetInvalidated();\n      listView.SetSelection(adapter.Count);\n    }\n    catch (Exception exc)\n    {\n      DisplayError(exc);\n    }\n  };\n}\n```", "```cs\nprotected async override void OnResume()\n{\n  base.OnResume();\n  try\n  {\n    await viewModel.GetMessages();\n    adapter.NotifyDataSetInvalidated();\n    listView.SetSelection(adapter.Count);\n  }\n  catch (Exception exc)\n  {\n    DisplayError(exc);\n  }\n}\n```"]