["```cs\ndotnet new web\n```", "```cs\nvar builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\napp.MapGet(\"/\", () => \"Hello World!\");\napp.Run();\n```", "```cs\nnamespace Chapter3;\npublic record Employee(string FirstName, string LastName);\n```", "```cs\napp.MapGet(\"/api/employees\", () => new Employee[]\n        {\n            new(\"Jane\", \"Doe\"),\n            new(\"John\", \"Doe\")\n        });\n```", "```cs\nusing Chapter3;\nvar builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\napp.MapGet(\"/api/employees\", () => new Employee[]\n        {\n            new(\"Jane\", \"Doe\"),\n            new(\"John\", \"Doe\")\n        });\napp.Run();\n```", "```cs\ninfo: Microsoft.Hosting.Lifetime[14]\n```", "```cs\n      Now listening on: https://localhost:7027\n```", "```cs\ninfo: Microsoft.Hosting.Lifetime[14]\n```", "```cs\n      Now listening on: http://localhost:5016\n```", "```cs\ninfo: Microsoft.Hosting.Lifetime[0]\n```", "```cs\n      Application started. Press Ctrl+C to shut down.\n```", "```cs\ninfo: Microsoft.Hosting.Lifetime[0]\n```", "```cs\n      Hosting environment: Development\n```", "```cs\ninfo: Microsoft.Hosting.Lifetime[0]\n```", "```cs\n      Content root path: /Users/einari/Projects/Metaprogramming-in-C/Chapter3/\n```", "```cs\n[{\"firstName\":\"Jane\",\"lastName\":\"Doe\"},{\"firstName\":\"John\",\"lastName\":\"Doe\"}]\n```", "```cs\nusing Microsoft.AspNetCore.Mvc;\nnamespace Chapter3;\n[Route(\"/api/employees\")]\npublic class EmployeesController : Controller\n{\n    [HttpGet]\n    public IEnumerable<Employee> AllEmployees()\n    {\n        return new Employee[]\n        {\n            new(\"Jane\", \"Doe\"),\n            new(\"John\", \"Doe\")\n        };\n    }\n}\n```", "```cs\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddControllers();\nvar app = builder.Build();\napp.MapControllers();\napp.Run();\n```", "```cs\npublic record Employee(\n    [Required]\n    string FirstName,\n    [Required]\n    string LastName);\n```", "```cs\nusing Microsoft.AspNetCore.Mvc;\nnamespace Chapter3;\n[Route(\"/api/employees\")]\npublic class EmployeesController : Controller\n{\n    [HttpPost]\n    public IActionResult Register(Employee employee)\n    {\n        if (!ModelState.IsValid)\n        {\n            return ValidationProblem(ModelState);\n        }\n        // ...\n        // Do some business logic\n        // ...\n        return Ok();\n    }\n}\n```", "```cs\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.AspNetCore.Mvc.Filters;\nnamespace Chapter3;\npublic class ValidationFilter : IAsyncActionFilter\n{\n    public async Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next)\n    {\n        if (context.ModelState.IsValid)\n        {\n            await next();\n        }\n        else\n        {\n            context.Result = new BadRequestObjectResult(new ValidationProblemDetails(context.ModelState));\n        }\n    }\n}\n```", "```cs\nusing Microsoft.AspNetCore.Mvc;\nnamespace Chapter3;\n[Route(\"/api/employees\")]\npublic class EmployeesController : Controller\n{\n    [HttpPost]\n    public IActionResult Register(Employee employee)\n    {\n        // ...\n        // Do some business logic\n        // ...\n        return Ok();\n    }\n}\n```", "```cs\nusing Chapter3;\nvar builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddControllers(mvcOptions => mvcOptions.Filters.Add<ValidationFilter>());\nvar app = builder.Build();\napp.MapControllers();\napp.Run();\n```"]