["```cs\npublic class SkyboxMaterialExposureControl : MonoBehaviour\n{\n    public Material skyboxMaterial;\n    public float exp = 1.0f;\n\n    private void Update()\n    {\n        SetExposure(exp);\n    }\n\n    public void SetExposure(float value)\n    {\n        skyboxMaterial.SetFloat(\"_Exposure\", value);\n    }\n}\n```", "```cs\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n```", "```cs\n\npublic class BirdController : MonoBehaviour\n{\n    public GameObject bird;\n    public List<GameObject> targets = new List<GameObject>();\n    public int animIndex;\n\n    public bool collideWithObjects = false;\n    public float birdScale = 1.0f;\n\n    private int prevIndex;\n\n    void Start()\n    {\n        prevIndex = 0;\n    }\n\n    void Update()\n    {\n        if (animIndex != prevIndex && \n            index > 0 && \n            index < targets.Count)\n        {\n            prevIndex = animIndex;\n            bird.gameObject.SendMessage(\"FlyToTarget\", targets[index].transform.position);\n        }\n    }\n}\n}\n```", "```cs\n// lb_BirdController controller; // removed\npublic BirdController controller; // added\n```", "```cs\n// remove this\n// void SetController(lb_BirdController cont){\n//     controller = cont;\n// }\n```", "```cs\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.Playables;\n\npublic class LookAtToStart : MonoBehaviour\n{\n    public PlayableDirector timeline;\n    public float timeToSelect = 2f;\n    private float countDown;\n\n    void Start()\n    {\n        countDown = timeToSelect;\n    }\n```", "```cs\n\n    void Update()\n    {\n        // Do nothing if already playing\n        if (timeline.state == PlayState.Playing)\n            return;\n\n        // Is user looking here?\n        Transform camera = Camera.main.transform;\n        Ray ray = new Ray(camera.position, camera.rotation * Vector3.forward);\n        RaycastHit hit;\n        if (Physics.Raycast(ray, out hit) && \n            (hit.collider.gameObject == gameObject))\n        {\n            if (countDown > 0f)\n            {\n                countDown -= Time.deltaTime;\n            }\n            else\n            {\n                // go!\n                timeline.Play();\n            }\n        }\n        else\n        {\n            // reset timer\n            countDown = timeToSelect;\n        }\n    }\n}\n```", "```cs\nprivate bool resetSetup;\n\nvoid Start()\n{\n    countDown = timeToSelect;\n    resetSetup = true;\n}\n```", "```cs\nIEnumerator PlayToSetup()\n{\n    timeline.Play();\n    yield return new WaitForSeconds(0.1f);\n    timeline.Stop();\n}\n```", "```cs\n    void Update()\n    {\n        if (timeline.state == PlayState.Playing)\n        {\n            return;\n        }\n        if (resetSetup)\n        {\n            StartCoroutine(\"PlayToSetup\");\n            resetSetup = false;\n        }\n```", "```cs\n        ...\n            // go!\n            timeline.Play();\n            resetSetup = true;\n        }\n```"]