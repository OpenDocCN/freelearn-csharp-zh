- en: A Better Foot Forward
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更好的起点
- en: You've made it to the final chapter of *Practical Test-Driven Development using
    C# 7*. We thank you. But, your journey as a **Test-Driven Development** (**TDD**)
    practitioner is just beginning. Soon it will be time for you to rejoin the world
    as a TDD expert.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经到达了《使用C# 7进行实用测试驱动开发》的最后一章。我们感谢你。但是，你作为**测试驱动开发**（**TDD**）实践者的旅程才刚刚开始。很快，你将有机会以TDD专家的身份重新加入世界。
- en: 'In this chapter, we''ll summarize the main topics from previous chapters and
    give you some pointers to help you continue on this voyage. In this chapter, we
    will gain an understanding of:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将总结前几章的主要主题，并给你一些指导，帮助你继续这次航行。在本章中，我们将了解：
- en: Why TDD is important
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么TDD很重要
- en: Growing applications through tests
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过测试来增长应用程序
- en: Introducing TDD to your team
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将TDD引入你的团队
- en: Rejoining the world as a TDD expert
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以TDD专家的身份重新加入世界
- en: What we've covered
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们所涵盖的内容
- en: You're likely not yet an expert. That's okay. There will be times when you may
    become stuck or doubt the benefits of TDD. Fret not. Reading this book has been
    but a step on the journey to becoming a TDD master. The road is long but well
    worth the time and effort devoted to this journey. You are a professional, a craftsman
    devoted to your trade.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还不是专家。这没关系。有时你可能会遇到困难或怀疑TDD的好处。不用担心。阅读这本书只是成为TDD大师旅程中的一步。这条路很长，但值得你投入时间和精力。你是一位专业人士，一位致力于自己行业的工匠。
- en: By now, you should feel confident setting up your development environment. You
    can configure your IDE of choice to run your suite of unit tests. You should be
    comfortable with choosing a test runner and the specific nuances and features
    involved in that choice. And, of course, you know how to assemble a comprehensive
    set of unit tests.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在为止，你应该对自己的开发环境设置感到自信。你可以配置你选择的IDE来运行你的单元测试套件。你应该对选择测试运行器和该选择所涉及的具体细微差别和功能感到舒适。当然，你知道如何组装一套全面的单元测试。
- en: You can grow an application guided by tests. Refactoring should now be a breeze
    as you have the confidence to move code around without introducing breaking changes.
    You can demonstrate correctness to application stakeholders and you have guarded
    against regression bugs with the confidence provided by your tests.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过测试来引导应用程序的生长。现在重构应该变得轻而易举，因为你有了信心在不引入破坏性更改的情况下移动代码。你可以向应用程序的利益相关者展示正确性，并且通过你的测试提供了对回归错误的信心。
- en: The world in the TDD space makes perfect sense. You'll wonder how you ever lived
    without your new-found knowledge. Let's take a moment and review what we've learned.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在TDD领域，世界是完美的。你会 wonder 你是如何在没有你新获得的知识的情况下生活的。让我们花点时间回顾一下我们学到了什么。
- en: Moving forward
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前进之路
- en: So, where do you go from here? Hopefully, you're as excited about TDD as you
    were when you first successfully compiled a software application. Each successive
    passing test is proof of your hard work and understanding of the problem at hand.
    Celebrate each small victory for the accomplishment that it is. Validate your
    understanding along the way by introducing more and more functionality to the
    system through your tests.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，接下来你该怎么做呢？希望你对TDD的热情和你第一次成功编译软件应用程序时一样。每一次成功的测试都是你辛勤工作和对当前问题理解的证明。为每一次小的胜利欢呼，因为这是你的成就。通过在测试中引入越来越多的功能来验证你的理解。
- en: As you continue in your career, it is up to you to choose to operate in a TDD
    fashion. Adherence to the philosophy and how well you maintain the TDD mindset
    is completely up to you. Don't be discouraged if your boss isn’t familiar with
    TDD. You don't need permission.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在你继续职业生涯的过程中，选择以TDD的方式操作取决于你。遵守这一哲学以及你保持TDD心态的好坏完全取决于你。如果你的老板不熟悉TDD，不要气馁。你不需要许可。
- en: Continue to grow applications through tests. If others ask about TDD, share
    your knowledge and enthusiasm. Introduce the practice to your team, but do not
    force the practice on anyone who is not ready.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 继续通过测试来增长应用程序。如果别人询问TDD，分享你的知识和热情。向你的团队引入这一实践，但不要强迫那些尚未准备好的人。
- en: TDD is a personal practice
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: TDD是一种个人实践
- en: First and foremost, TDD is a personal practice. It should not be a line item
    on anyone's budget. TDD is the way in which high-quality software is developed
    by those who care deeply about their craft.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，TDD是一种个人实践。它不应该是任何人预算上的一个条目。TDD是那些深深关心自己工艺的人开发高质量软件的方式。
- en: If you suspect you might get pushback from your team, managers, or project sponsors
    then there is no need to involve them in the decision to develop software in this
    way.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你怀疑你可能会从你的团队、经理或项目赞助者那里得到反对，那么没有必要让他们参与以这种方式开发软件的决定。
- en: It is often better that the development team is made aware that there are tests
    in the system so as to avoid breaking them, but it need not be necessary to seek
    permission.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，让开发团队知道系统中存在测试以避免破坏它们是更好的，但并不一定需要寻求许可。
- en: You don't need anyone's permission to do good work.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要任何人的许可来做好的工作。
- en: You don't need permission
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你不需要许可
- en: If you introduce TDD on a project that was not originally started that way,
    you may be asked who gave you permission to do so. You don't need anyone's permission
    to do good work. TDD is a personal practice to ensure you deliver high-quality
    software. You shouldn't need anyone's permission to do so.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在一个原本不是这样开始的项中引入TDD，你可能会被问及谁给了你这样做许可。你不需要任何人的许可来做好的工作。TDD是一种个人实践，以确保你交付高质量的软件。你不需要任何人的许可来做这件事。
- en: Take pride in your work and do the best that you know how. As you grow and become
    more comfortable with TDD, it will likely become your default method of software
    delivery.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 为你的工作感到自豪，尽你所能做到最好。随着你成长并对TDD更加舒适，它很可能会成为你交付软件的默认方法。
- en: Grow applications through tests
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过测试来增长应用
- en: It's easy to fall into the trap of *Big Design Upfront*. These design sessions
    are important, but the artifacts of these meetings are the exploratory ideas they
    generate, not a note-for-note plan of attack. Applications should be grown organically,
    guided by the tests written by you, the developer.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 容易陷入**大设计前期**的陷阱。这些设计会议很重要，但会议产生的成果是探索性的想法，而不是逐字逐句的攻击计划。应用应该通过你，开发者所编写的测试来有机地增长。
- en: When developing a greenfield application, it’s much easier to get started with
    TDD. Designing with testing in mind from the beginning is much easier than trying
    to retrofit tests at a later date. Your applications will benefit greatly when
    developed from the beginning with testing in mind. Guided by tests, your software
    will be simpler and much easier to grow and maintain.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发绿色字段应用时，使用TDD开始要容易得多。从一开始就考虑测试的设计要容易得多，而不是在以后尝试重新设计测试。如果你的应用从一开始就考虑测试，那么将受益匪浅。在测试的指导下，你的软件将更简单，更容易增长和维护。
- en: Enhancements, assuming the needs and expectations are clearly defined, are effortlessly
    added to a system through tests. If a user story has been well defined, then the
    requirements translate easily to a series of new tests. Subsequently, new production
    code can easily be added to the system by making the new tests pass. Fear of introducing
    new defects or changing existing behavior should be minimal, assuming an existing
    comprehensive suite of unit tests.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 假设需求和期望已经明确定义，增强功能可以通过测试轻松添加到系统中。如果一个用户故事已经很好地定义，那么需求可以轻松地转化为一系列新的测试。随后，可以通过使新测试通过来轻松地将新的生产代码添加到系统中。假设有一个现有的全面的单元测试套件，引入新缺陷或更改现有行为的恐惧应该是最小的。
- en: Defects can be addressed as they are discovered. Simply write one or more tests
    to define the expected behavior and modify the production code as you go. More
    defects may be uncovered, or existing behavior, and by extension existing tests
    may need to change as a result. Don't worry, the suite of tests is there to guard
    against bugs and to give you, the developer, a sense of security.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 缺陷可以在发现时解决。只需编写一个或多个测试来定义预期的行为，并在进行中修改生产代码。可能会发现更多缺陷，或者现有的行为，以及由此产生的现有测试可能需要更改。不用担心，测试套件在那里是为了防止错误，并给你，开发者，一种安全感。
- en: Introducing TDD to your team
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向你的团队引入TDD
- en: At this point, you are probably quite excited at sharing the wonderful world
    of TDD with your organization and fellow team members. Be aware that others may
    not have the same enthusiasm. Writing unit tests may be a scary proposition to
    someone that has never tried it before. There may be some negative connotations
    associated with the idea for some on your team.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你可能非常兴奋地想要与你的组织和你所在的团队成员分享TDD的奇妙世界。请注意，其他人可能没有同样的热情。对于从未尝试过的人来说，编写单元测试可能是一个令人畏惧的建议。对于你团队中的某些人来说，这个想法可能有一些负面含义。
- en: As developers, we're paid to be the experts. We're expected to have the answers.
    When something new and unknown is introduced, it can be an anxiety-inducing experience.
    Work towards reducing the anxiety your team might feel when learning something
    new. Remember how it felt when you heard the term TDD and didn’t know where to
    begin. Think about how you felt before picking up this book.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 作为开发者，我们被付薪水的目的是成为专家。我们被期望有答案。当引入新事物和未知事物时，这可能是一种令人焦虑的经历。努力减少团队在学习新事物时可能感到的焦虑。记住当你听到TDD这个术语而不知道从何开始时的感受。想想你在拿起这本书之前的感觉。
- en: There are good ways and not so good ways to introduce TDD to your team. If you
    truly want your team to adopt the practice, then think about ways in which to
    get them excited about the prospect.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 向团队介绍TDD（测试驱动开发）有好的方法，也有不那么好的方法。如果你真的希望你的团队能够采纳这种实践，那么考虑一下如何让他们对这种前景感到兴奋。
- en: Don’t force TDD on anyone
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不要强迫任何人使用TDD
- en: There have been countless tales of woe associated with introducing TDD to a
    team. An over enthusiastic member tries to cram the merits of TDD down the throats
    of the rest of the team. Project leaders may balk and try to ban the process altogether.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 与向团队介绍TDD相关的无数悲惨故事。一个过于热情的成员试图把TDD的优点强加给其他团队成员。项目领导者可能会反对，并试图完全禁止这个过程。
- en: If a team does decide to adopt the practice as a whole, be sure that each member
    of the team has a say. Everyone's voice is important. If a team member is not
    on board, team mates may recoil, and may even leave the project or the company.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个团队决定整体采纳这种实践，确保每个团队成员都有发言权。每个人的意见都很重要。如果团队成员不支持，队友可能会退缩，甚至可能离开项目或公司。
- en: Gamification of TDD
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: TDD的趣味化
- en: A great way to expose a new team to TDD is by making a game out of the process.
    Introduce the subject slowly and get people excited about the prospect of learning
    a new skill. Create a friendly rivalry or set of challenges for the team.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将过程游戏化，让新团队接触TDD是一个很好的方法。慢慢地介绍这个主题，让人们对新技能的学习前景感到兴奋。为团队创造友好的竞争或挑战。
- en: Lunch and learn sessions can be a great way to introduce the subject. There
    are countless video tutorials on YouTube and sites such as Pluralsight that can
    be a great introduction and social sharing event for your team.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 午餐和学习会是一个介绍主题的好方法。YouTube和Pluralsight等网站上有很多视频教程，这对你的团队来说可以是一个很好的介绍和社交分享活动。
- en: Code Katas are an excellent way to expose someone to TDD. Small, 20-minute exercises
    are simple enough to get someone comfortable with the basic premise. Slowly introduce
    more complexity and different challenges as the members get more comfortable with
    the exercise.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 代码Kata（编程练习）是让某人接触TDD的极好方式。这些20分钟的简短练习足够简单，可以让人们熟悉基本原理。随着成员对练习越来越熟悉，逐渐引入更多复杂性和不同的挑战。
- en: Code Challenges and/or homework may prove to be a good way to get your team
    involved. You should have a feel for who works best under what scenarios. Some
    may prefer homework and working on their own, while others may be more responsive
    to individual challenges.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 代码挑战和/或家庭作业可能是让团队参与的好方法。你应该对谁在什么情况下工作得最好有所了解。有些人可能更喜欢家庭作业和独立工作，而其他人可能对个人挑战更有反应。
- en: Showing your team the benefits
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 展示团队的好处
- en: Your best bet is to introduce testing slowly. If you're working to resolve a
    defect, look to wrap the existing method or function with a test to verify the
    defect. Correct the code to allow the new tests to pass. Share your results with
    your teammates. Explain how easy the process was and how much time and effort
    might have been saved as a result. Do not pressure, just inform.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你最好的选择是慢慢地引入测试。如果你正在努力解决缺陷，考虑用测试包裹现有的方法或函数以验证缺陷。修正代码以允许新测试通过。与你的队友分享你的结果。解释这个过程有多容易，以及可能节省了多少时间和精力。不要施加压力，只需告知即可。
- en: New features to existing applications are a great time to explore TDD with your
    team. If you can show your co-workers how new features can be developed using
    TDD in an existing application, it may prove useful. It may be easier to introduce
    a foreign concept, such as TDD, within an existing application that developers
    are comfortable with. With the comfort of the known application, the unknown is
    kept to a minimum and the focus can be on TDD.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在现有应用程序中添加新功能是探索TDD与团队一起的好时机。如果你能向同事展示如何使用TDD在现有应用程序中开发新功能，这可能很有用。在开发者熟悉的应用程序中引入TDD这样的新概念可能更容易。在熟悉的应用程序中，未知因素被降至最低，焦点可以放在TDD上。
- en: If you are beginning a new project it may be beneficial to take ownership of
    part of the application in order to develop this part using TDD. If at least part
    of the application is developed with TDD, then this can be used to demonstrate
    the basics to others on the team. Using this piece of the application as an example,
    you may convince others to explore spreading TDD into the rest of the application.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你开始了一个新的项目，为了使用TDD开发这个应用程序的一部分，可能有益于承担这个应用程序的一部分。如果至少有一部分应用程序是用TDD开发的，那么可以用它来向团队中的其他人展示基础知识。使用这个应用程序的这部分作为例子，你可能会说服其他人探索将TDD扩展到应用程序的其余部分。
- en: Be sure to track progress along the way. You may find that individuals or parts
    of applications are better suited for TDD. If anyone is struggling, it may be
    difficult for them to admit their troubles. Keep an eye out and lend a hand where
    you can.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 一定要跟踪进度。你可能会发现，个人或应用程序的部分更适合TDD。如果有人遇到困难，他们可能很难承认自己的问题。留心观察，并在可能的情况下提供帮助。
- en: Review the results
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审查结果
- en: When introducing TDD to a team, be prepared to address any potential issues
    often associated with developers new to TDD. Useless tests will be written that
    provide no value. Look for these and other issues within the test suite.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当向团队介绍TDD时，要准备好解决与TDD新手经常相关的问题。会编写一些无用的测试，它们没有任何价值。寻找这些和其他问题在测试套件中。
- en: If your team does not currently utilize pull-requests or code reviews, now would
    be a perfect time to introduce the practice. Make a habit of reviewing tests that
    are written. This will go a long way to spotting any potential trouble spots.
    This also has the added benefit of learning more about parts of the system with
    which you may not be familiar.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的团队目前没有使用拉取请求或代码审查，现在是一个引入这一实践的好时机。养成审查所编写测试的习惯。这将有助于发现任何潜在的问题点。这也带来了额外的益处，即更多地了解你可能不熟悉的系统部分。
- en: If you're working on an existing project, or any new feature over which you
    have control, begin by developing this feature with TDD. If you have a code review
    process in place, be sure that the reviewers are made aware and demonstrate the
    passing tests to them.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在处理一个现有项目，或者任何你能够控制的新的功能，首先使用TDD来开发这个功能。如果你有代码审查流程，确保审查者知道，并向他们展示通过测试。
- en: Rejoining the world as a TDD expert
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重新以TDD专家的身份加入世界
- en: It is now time to rejoin the world as a TDD expert. Don't worry if you don't
    quite feel like an expert yet. You likely have more knowledge than at least one
    co-worker or peer. To them, you are the expert with knowledge to share. Go forth
    and share that knowledge. But remember, there is always more to learn.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候以TDD专家的身份重新加入世界了。如果你还没有完全觉得自己像专家，不要担心。你很可能比至少一个同事或同行知道得多。对他们来说，你是拥有可以分享的知识的专业人士。去分享那些知识吧。但记住，总有更多东西可以学习。
- en: Seek a mentor
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 寻找一个导师
- en: It may be beneficial to seek out a mentor or mentors. There is likely someone
    in your community with TDD knowledge who is willing to speak with you. They could
    be employees of your company or members of the tech community in your city. Seek
    them out and offer to buy them lunch or meet for coffee. You may find that they’re
    thrilled to find someone else willing and eager to discuss TDD as a practice.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 寻找一个或多个导师可能是有益的。在你所在的社区中，可能有人了解TDD，并愿意与你交谈。他们可能是你公司的员工，也可能是你所在城市的技术社区成员。找到他们，并提议请他们吃午餐或喝咖啡。你可能会发现，他们很高兴找到愿意并渴望讨论TDD作为一种实践的人。
- en: User groups and meetups are a great place to network. Look for meetings in your
    area that you could attend. TDD has become a hot topic in recent years and you're
    likely to find a meeting close by. The programming language may be different from
    your daily routine (for example, Java vs C#), but the overall premise will likely
    be beneficial. Besides, exposure to new and different languages helps you explore
    paradigms with which you might not be familiar.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 用户组和聚会是建立人脉的好地方。寻找你所在地区可以参加的会议。近年来，TDD（测试驱动开发）已经成为一个热门话题，你很可能找到附近的会议。编程语言可能与你的日常使用不同（例如，Java
    与 C#），但整体原则可能是有益的。此外，接触新的不同语言有助于你探索你可能不熟悉的范式。
- en: Twitter is another great resource these days. The amount of technology professionals
    active on Twitter and other social media these days is staggering. Never before
    has it been possible to strike up a conversation with the giants of our industry.
    Don't be afraid to ping technologists on Twitter and the like, and express interest
    in gaining knowledge. You may be surprised at the response you receive.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Twitter现在是另一个极好的资源。如今活跃在Twitter和其他社交媒体上的技术专业人士数量令人震惊。以前从未有过与行业巨头交谈的可能。不要害怕在Twitter和其他平台上联系技术专家，并表达你获取知识的兴趣。你可能会对你的回应感到惊讶。
- en: Becoming a mentor
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 成为导师
- en: In the same vein as seeking a mentor, you may also consider becoming a mentor.
    The same venues apply to becoming a mentor. You'll learn more by teaching. Share
    your knowledge with others and learn just as much from those you teach.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 与寻找导师一样，你也可以考虑成为导师。成为导师的场所同样适用。通过教学你会学到更多。与他人分享你的知识，并从你所教授的人那里学到同样多的东西。
- en: User groups and meetups are always interested in having someone speak. Consider
    putting together a presentation and sharing your interest in TDD. This could be
    anything from a 5- to 15-minute lightning talk, an hour-long presentation, or
    a full-day workshop.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 用户组和聚会总是希望有人来演讲。考虑准备一个演示文稿，分享你对TDD的兴趣。这可以是5到15分钟的闪电演讲，一个小时的演讲，或者一整天的研讨会。
- en: Practice, practice, practice
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习，练习，再练习
- en: There's a reason doctors and lawyers define what they do as *practice*. Like
    these professions, the computer programmer is engaged fully in the practice of
    software development. It is a practice that requires practice.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 医生和律师之所以将他们所做的事情定义为“实践”，是有原因的。像这些职业一样，计算机程序员完全沉浸在软件开发实践中。这是一种需要练习的实践。
- en: Develop a habit of spending the first 20 minutes of each day working on a different
    Code Kata. Solve a new puzzle using TDD. Work on a problem you've solved before
    using a new or different technique. Try a different approach at developing a solution.
    Spend time on your craft and train yourself to look for alternate solutions that
    are testable and verifiable.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 养成每天花前20分钟做不同Code Kata的习惯。使用TDD解决一个新的谜题。用新的或不同的技术解决你以前解决的问题。尝试不同的方法来开发解决方案。在你的技艺上花时间，并训练自己寻找可测试和可验证的替代解决方案。
- en: Review your work. Ensure that you are truly driving your application development
    through tests. Verify that you are actually testing your application and not simply
    going through the motions.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 审查你的工作。确保你真正是通过测试来推动你的应用程序开发。核实你实际上是在测试你的应用程序，而不仅仅是走形式。
- en: Most of all, have fun!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的是，享受乐趣！
- en: Summary
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Our journey has come to an end, but fear not. You now are well equipped to enter
    the world as a TDD master.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的旅程已经结束，但不要害怕。你现在已经准备好作为一个TDD大师进入这个世界。
- en: You not only understand how to develop with a TDD mindset, you also know why
    TDD is so important to develop testable, extensible, and maintainable software
    applications. Your IDE is set up to test C# and/or JavaScript applications and
    you have a continuous feedback loop on the quality of your software.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你不仅理解了如何以TDD心态进行开发，你还知道为什么TDD对于开发可测试、可扩展和可维护的软件应用如此重要。你的IDE已经设置好以测试C#和/或JavaScript应用程序，并且你对软件质量有一个持续的反馈循环。
- en: You understand the importance of defining and testing the boundaries of an application
    and the benefits of abstracting away third-party code (including the .NET Framework).
    Spies, mocks, and fakes, and how best to employ them are now well understood.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你理解了定义和测试应用程序边界的的重要性，以及抽象化第三方代码（包括.NET框架）的好处。间谍、模拟和伪造，以及如何最好地使用它们，现在已经被充分理解。
- en: 'Approaching a green-field application with TDD is mind should now be almost
    trivial. Take the broader problem of the overall application and break it into
    meaningful chunks that can be developed independently. You have learned different
    approaches to developing an application such as: front to back, back to front,
    and inside out. Choose what is most appropriate.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 使用TDD来接近绿色田野应用程序，现在应该几乎是一件微不足道的事情。将整体应用程序的更广泛问题分解成可以独立开发的具有意义的块。你已经学习了不同的应用程序开发方法，例如：从前到后、从后到前和从内到外。选择最合适的方法。
- en: Taking requirements and assembled user stories and turning them into working
    software using TDD should be a breeze! Utilize all the skills you’ve assembled
    to test the boundaries, testing small, individual units.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用TDD将需求和要求故事转换为工作软件应该是一件轻而易举的事情！利用你已掌握的所有技能来测试边界，测试小的、独立的单元。
- en: Abstract away third-party libraries, including the .NET Framework. Remove dependencies
    on things such as `DateTime` and Entity Framework. You've learned ways to decouple
    your application from specific implementations to allow your application to be
    testable, but also much more flexible and easy to modify in the future.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 抽象化第三方库，包括.NET框架。移除对诸如`DateTime`和Entity Framework之类的依赖。你已经学会了如何将你的应用与特定的实现解耦，以便你的应用可测试，同时也更加灵活，并且在未来更容易修改。
- en: What happens when the requirements change? What happens if a bug is discovered?
    No problem, change a test or write a new one to cover the new requirement or to
    defend against the discovered bug. Then, write some new code or change some existing
    code to make all of our new/modified tests pass. If you do everything correctly
    you should feel safe to make these changes as our existing test suite will prevent
    you from introducing new bugs.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 当需求发生变化时会发生什么？如果发现了一个错误会发生什么？没问题，更改一个测试或编写一个新的测试来覆盖新的需求或防御已发现的错误。然后，编写一些新的代码或更改一些现有的代码，以确保所有新的/修改后的测试通过。如果你做得正确，你应该可以放心地做出这些更改，因为我们的现有测试套件将防止你引入新的错误。
- en: There are a lot of applications out there without sufficient (any?) test coverage.
    Even fewer were written test-first. You're now aware of some of the major problems
    with legacy applications that weren't written with testability in mind and know
    how to best to rectify this.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在市面上有很多应用缺乏足够的（任何？）测试覆盖率。甚至更少的应用是按照测试优先的原则编写的。你现在已经意识到，那些没有考虑到可测试性的遗留应用存在的一些主要问题，并且知道如何最好地纠正这些问题。
- en: You know how to safely modify a legacy application that wasn't written with
    testing in mind, and know how to add tests to minimize the potential for introducing
    new bugs when modifying existing code.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道如何安全地修改一个没有考虑到测试的遗留应用，并且知道如何添加测试以最小化在修改现有代码时引入新错误的可能性。
- en: Remember, TDD is a personal choice. You don't need anyone's permission to do
    good work. Now, rejoin the world as a TDD expert!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，TDD（测试驱动开发）是一个个人选择。你不需要任何人的许可来做好的工作。现在，以TDD专家的身份重新加入世界吧！
