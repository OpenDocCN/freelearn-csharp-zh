["```cs\n    functionOnTriggerEnter( other : Collider )\n    {\n      Debug.Log(\"OnTrigger Event\");\n    }\n\n    functionOnTriggerExit( other : Collider )\n    {\n      Debug.Log(\"OnTriggerExit Event\");\n    }\n    ```", "```cs\n#pragma strict\n@scriptRequireComponent(Rigidbody) \n/******* RequirementComponent ensure there should be a Rigid body as it asks for Rigidbody as required component/ \nprivatevaronPlane = false; \n// Multiply the velocity when using the velocity.\nvarvelocityMultiplier = 100.0f;\n// Multiply the move distance.\nvarmoveMultiplier= 8.0f;\n// Multiply the force to make the cube jump.\nvarjumpMultiplier= 700.0f;\n\nfunctionFixedUpdate(){\n// Calculate the velocity/move direction based on the user input.\n  varmoveDirection = Vector3( Input.GetAxis(\"Horizontal\"), 0, Input.GetAxis(\"Vertical\") ) * Time.deltaTime;\nmoveDirection = Camera.main.transform.TransformDirection( moveDirection );\n// Here TransformDirection transforms direction from local space\n// to world space.\n\n  if ( rigidbody != null && !rigidbody.isKinematic )\n    {\n    rigidbody.MovePosition( rigidbody.position + ( moveDirection * moveMultiplier ) );\nrigidbody.velocity = Vector3( 0, rigidbody.velocity.y, 0 );\n\n  }\n\nif ( Input.GetButtonDown(\"Jump\") &&onPlane )\n  {\n\n    rigidbody.AddForce( Vector3.up * jumpMultiplier );\n     }\n\n}\n\nfunctionOnCollisionStay(collisionInfo : Collision)\n{\n  onPlane = true;\n}\n\nfunctionOnCollisionExit( collisionInfo : Collision )\n{\nonPlane = false;\n\n}\n```"]