- en: Assessments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估
- en: This section contains answers to questions from all the chapters.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本节包含所有章节的问题答案。
- en: Chapter 1 – Text, Flow, Choices, and Weaves
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一章 – 文本、流程、选择和编织
- en: The story is the content, and the narrative is the experience of it. In nonlinear
    storytelling, the story is potentially experienced in a different order, with
    each reordering creating a new narrative for the reader.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 故事是内容，叙述是体验。在非线性叙事中，故事可能以不同的顺序体验，每次重新排序都会为读者创造一个新的叙述。
- en: ink understands flow as movement through the story as a narrative-like experience.
    In ink, this can "*run out*" when there are no paths to the end of the story.
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ink 将流程理解为作为类似叙述体验的故事中的移动。在 ink 中，当没有通往故事结尾的路径时，这可能会“耗尽”。
- en: Multiple lines can be combined using glue, a combination of less-than and greater-than
    symbols.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用粘合剂将多行组合在一起，粘合剂是小于和大于符号的组合。
- en: A weave is a collection of choices.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编织是一系列选择的集合。
- en: The different types of choices are basic, often called disappearing, and sticky
    choices. The first can only be used once and the second multiple times, as they
    "stick around" across weave usages.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不同的选择类型有基本型、通常称为消失型选择和粘性选择。第一种只能使用一次，第二种可以多次使用，因为它们“粘附”在编织使用中。
- en: Selective output allows an author to *select* what to use when shaping an option
    based on the text of the choice in ink. Different amounts of text can be shown
    to the reader based on the use of opening and closing square brackets with the
    text of the choice.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择性输出允许作者根据 ink 中选择的文本选择在塑造选项时要使用的内容。可以根据使用开闭方括号和选择文本的文本显示给读者的不同数量的文本。
- en: Sticky choices keep options open for later use. In more complex stories, the
    reader may return to a weave and pick a different or the same option again.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 粘性选择保持选项打开以供以后使用。在更复杂的故事中，读者可能返回到编织并选择不同的或相同的选项。
- en: Chapter 2 – Knots, Diverts, and Looping Patterns
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章 – 节点、引导和循环模式
- en: A knot is a section of a story with a name that can be diverted to ink.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 节点是故事的一个部分，有一个名字，可以被引导到墨迹中。
- en: '`DONE` ends the current flow and `END` stops the story completely.'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`DONE` 结束当前流程，`END` 完全停止故事。'
- en: A stitch is a sub-section of a story that can only appear inside a knot.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 缝是故事的一个子部分，只能出现在节点内。
- en: The `INCLUDE` keyword pulls in other files and allows a project to use multiple
    files with their own knots and stitches available to the whole project.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`INCLUDE` 关键字将其他文件拉入，允许项目使用具有自己节点和缝的多个文件，这些节点和缝对整个项目都是可用的。'
- en: A labeled option creates a value that is increased each time it is shown. Conditional
    values, on the other hand, allow for comparing variables and values. If the condition
    is true when used with an option, it will be shown. Otherwise, it will be hidden.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 标记的选项在每次显示时都会创建一个增加的值。另一方面，条件值允许比较变量和值。如果使用选项时条件为真，它将被显示。否则，它将被隐藏。
- en: Chapter 3 – Sequences, Cycles, and Shuffling Text
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章 – 序列、循环和文本洗牌
- en: The three types of alternatives are sequences, cycles, and shuffles.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 三种替代类型是序列、循环和洗牌。
- en: The single-line forms of sequences, cycles, and shuffles all use the vertical
    bar, `|`, between elements.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 序列、循环和洗牌的单行形式都使用元素之间的垂直线 `|`。
- en: The ampersand, `&`, is used before the first element as an alternative to creating
    a cycle.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第一个元素之前使用 `&` 符号作为创建循环的替代。
- en: A sequence will show each of the elements until the last. A cycle will loop
    back to the first element after its last one.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 序列将显示每个元素直到最后一个。循环将在最后一个元素之后返回到第一个元素。
- en: A shuffle picks a random element from its set each time it is run.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 洗牌在每次运行时都会从其集合中随机选择一个元素。
- en: Multi-line sequences use the `stopping` keyword. This is unlike cycles and shuffles,
    which each use the name of the type of alternative as the keyword to create their
    multi-line forms.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 多行序列使用 `stopping` 关键字。这与循环和洗牌不同，它们各自使用替代类型的名称作为关键字来创建它们的多行形式。
- en: Chapter 4 – Variables, Lists, and Functions
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章 – 变量、列表和函数
- en: Assignment happens any time a variable is given a new value. This happens when
    a variable is first created in ink and can also happen on single lines of code.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 赋值发生在变量被赋予新值时。这发生在变量在墨迹中首次创建时，也可能发生在单行代码中。
- en: A new string created based on two strings being added, or between a string and
    numerical value, is known as concatenation.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于两个字符串相加或字符串与数值之间创建的新字符串称为连接。
- en: The tilde defines a single line of code in ink. It is often used with assignment,
    to call a function, or to perform some other single-line action.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 波浪号定义了ink中的一行代码。它通常与赋值、调用函数或执行其他单行操作一起使用。
- en: The values in a list are part of a Boolean set. This means they are either `true`
    or `false`. In ink, all values in a list are set to `false` by default. To change
    to `true`, they must be surrounded by opening and closing parentheses.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列表中的值是布尔集的一部分。这意味着它们是`true`或`false`。在ink中，默认情况下，列表中的所有值都设置为`false`。要更改为`true`，它们必须被括号包围。
- en: The technical term for a variable defined as part of a function or a knot is
    a parameter. It affects the calculations or how content is processed by the function.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将作为函数或结的一部分定义的变量称为参数。它影响计算或函数如何处理内容。
- en: Chapter 5 – Tunnels and Threads
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章 – 地道和线程
- en: To create a tunnel, a divert must be used before and after the name of a knot
    or stitch. Within the knot or stitch, two diverts must be used together to return
    from the tunnel.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建地道，必须在结或缝合的名称前后使用转向。在结或缝合内部，必须一起使用两个转向以从地道返回。
- en: Tunnels connect two different locations in ink. They can be used between knots,
    stitches, or other locations in a story. Tunnels move the flow to a location and
    then return when two diverts are encountered.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 地道连接墨水中的两个不同位置。它们可以在故事中的结、缝合或其他位置之间使用。地道将流动移动到某个位置，然后在遇到两个转向时返回。
- en: A divert moves the flow to another knot or stitch. A tunnel uses two diverts
    to move to a knot or stitch and then returns to where it started. A thread is
    the inverse of a divert. It moves the knot or stitch to the current flow location
    instead of moving the flow to the knot or stitch.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转向将流动移动到另一个结或缝合。地道使用两个转向移动到结或缝合，然后返回到起始位置。线程是转向的逆。它将结或缝合移动到当前流动位置，而不是将流动移动到结或缝合。
- en: Normally, multiple threads cannot be used on the same line. However, when using
    alternatives, it is possible to include multiple threads as part of the same structure.
    They are still accessed one at a time but can be grouped together on one line.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通常，同一行上不能使用多个线程。然而，当使用替代方案时，可以将多个线程作为同一结构的一部分包含在内。它们仍然逐个访问，但可以在同一行上分组。
- en: Chapter 6 – Adding and Working with the ink-Unity Integration Plugin
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章 – 添加和使用ink-Unity集成插件
- en: No, Inkle, the maintainers of the ink-Unity Integration plugin, do not recommend
    using the version found in the Unity Asset Store. This version is often out of
    date.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，Inkle，ink-Unity集成插件的维护者，不建议使用在Unity Asset Store中找到的版本。这个版本通常过时。
- en: When the ink-Unity Integration plugin is installed in a project, new ink files
    can be created using the Create menu. This can be accessed using the **Project**
    window toolbar, right-clicking in the **Project** window, or via the **Assets**
    menu by selecting **Create**.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当在项目中安装ink-Unity集成插件时，可以使用创建菜单创建新的ink文件。这可以通过**项目**窗口工具栏、在**项目**窗口中右键单击或通过**资产**菜单选择**创建**来访问。
- en: Inky is a good choice for editing ink source files. However, it needs to be
    associated with ink source files, which can be opened by double-clicking on files
    in the **Project** window.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Inky是编辑ink源文件的不错选择。然而，它需要与ink源文件关联，这些文件可以通过在**项目**窗口中双击文件来打开。
- en: Yes, the auto-compilation process can be adjusted by opening the **Project**
    Settings, selecting **Ink**, and then changing the **Compile All Ink Automatically**
    option.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，可以通过打开**项目**设置、选择**ink**然后更改**自动编译所有ink**选项来调整自动编译过程。
- en: Chapter 7 – Unity API – Making Choices and Story Progression
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章 – Unity API – 制作选择和故事进展
- en: The `Continue()` method only loads a single line of ink text content and the
    next weave it encounters each time it is called. The `ContinueMaximally()` method
    loads all text content until it encounters a weave or the end of the story.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Continue()`方法仅在每次调用时加载一行ink文本内容和遇到的下一个编织。`ContinueMaximally()`方法加载所有文本内容，直到遇到编织或故事的结尾。'
- en: The `ChooseChoiceIndex()` method expects an `int` value within the range of
    the total number of entries in the `currentChoices` property in the `Story` class.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ChooseChoiceIndex()`方法期望在`Story`类中`currentChoices`属性的条目总数范围内的`int`值。'
- en: The `canContinue` property is a Boolean value. If there is more story content,
    it will be `true`. Otherwise, it will be `false`. The `canContinue` property should
    always be checked as part of a conditional statement before using the `Continue()`
    or `ContinueMaximally()` methods to prevent either method from throwing an error.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`canContinue` 属性是一个布尔值。如果有更多的剧情内容，它将是 `true`。否则，它将是 `false`。在使用 `Continue()`
    或 `ContinueMaximally()` 方法之前，应始终将 `canContinue` 属性作为条件语句的一部分进行检查，以防止任一方法抛出错误。'
- en: A prefab is a `GameObject` instance saved as an asset in Unity. Any game object
    used as part of the **Hierarchy** view can be saved as an asset by dragging it
    into the **Project** window. A copy of a prefab can be created during runtime
    through a process called *instantiation* in Unity.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Prefab 是在 Unity 中保存为资产的 `GameObject` 实例。任何用作 **Hierarchy** 视图一部分的游戏对象都可以通过将其拖入
    **Project** 窗口来保存为资产。在 Unity 中，可以通过称为 *实例化* 的过程在运行时创建 prefab 的副本。
- en: For a weave encountered in a running ink story, the `currentChoices` properties
    will contain a `List<Choice>` instance, where each entry is an object based on
    the `Choice` class with `text` and `index` properties.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于在运行的 ink 剧情中遇到的编织内容，`currentChoices` 属性将包含一个 `List<Choice>` 实例，其中每个条目都是基于
    `Choice` 类的对象，具有 `text` 和 `index` 属性。
- en: Chapter 8 – Story API – Accessing ink Variables and Functions
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 8 章 – Story API – 访问 ink 变量和函数
- en: Yes, once a variable is created in ink, it can be accessed at any point in the
    story. By using the `variablesState` property as part of the Story API, the values
    of variables can also be accessed and changed.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，一旦在 ink 中创建了一个变量，就可以在任何剧情点访问它。通过使用 Story API 的一部分 `variablesState` 属性，也可以访问和更改变量的值。
- en: Because functions are global in ink, this means they can be accessed from any
    point in an ink story. When working with the ink-Unity Integration plugin, the
    `HasFunction()` and `EvaluateFunction()` methods as part of the Story API provide
    the ability to test for a global function in an ink story and evaluate it, if
    it exists. The `EvaluateFunction()` method calls the ink function and can be used
    to pass data to ink or retrieve the text output of the function using the `out`
    C# keyword.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于函数在 ink 中是全局的，这意味着可以从 ink 剧情的任何点访问它们。当使用 ink-Unity Integration 插件时，Story API
    中的 `HasFunction()` 和 `EvaluateFunction()` 方法提供了在 ink 剧情中测试全局函数并评估它的能力。`EvaluateFunction()`
    方法调用 ink 函数，并可以使用 `out` C# 关键字将数据传递给 ink 或检索函数的文本输出。
- en: Unlike text content, the values of variables in ink exist outside of story progression
    controlled by the `Continue()` method or `ContinueMaximally()` method. However,
    because variables are global, their values can be changed during the action of
    loading a line or a larger chunk of a story. The value of a variable might be
    changed because of using either the `Continue()` method or `ContinueMaximally()`
    method, but they are not technically needed to work with variables in ink.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与文本内容不同，ink 中变量的值存在于由 `Continue()` 方法或 `ContinueMaximally()` 方法控制的剧情进展之外。然而，由于变量是全局的，它们在加载一行或更大块的故事内容时可以被更改。变量的值可能会因为使用
    `Continue()` 方法或 `ContinueMaximally()` 方法而改变，但它们在技术上并不是处理 ink 中的变量所必需的。
- en: Any variables can be accessed by using their name in quotation marks within
    square brackets when working with the `variablesState` property as part of the
    Story API. While the same API provides methods for working with variables in ink,
    the shorthand syntax is often the preferred way to access and change the values
    of variables.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用 Story API 中的 `variablesState` 属性时，可以通过在方括号内使用引号包裹的变量名来访问任何变量。虽然相同的 API 提供了在
    ink 中处理变量的方法，但简写语法通常是访问和更改变量值的首选方式。
- en: Yes. It is recommended to use the `HasFunction()` method for functions before
    attempting to change the value of a variable or evaluate a function. This will
    help prevent potentially game-crashing problems.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的。在尝试更改变量值或评估函数之前，建议使用 `HasFunction()` 方法来处理函数。这将有助于防止可能的游戏崩溃问题。
- en: The `out` C# keyword provides a way to pass a variable by reference instead
    of passing only its value. This is an easy way to retrieve the text output of
    an ink function as a parameter to the `EvaluateFunction()` method of the Story
    API.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`out` C# 关键字提供了一种通过引用传递变量而不是仅传递其值的方法。这是将 ink 函数的文本输出作为 Story API 的 `EvaluateFunction()`
    方法的参数检索的一种简单方式。'
- en: Chapter 9 – Story API – Observing and Reacting to Story Events
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 9 章 – Story API – 观察和响应剧情事件
- en: The `ObserveVariable()` and `ObserveVariables()` methods are based on the use
    of the action of *observing* variables. This separates the reaction in Unity from
    the action in ink. The action of observing allows Unity to react in any way it
    wants. The methods only provide the name of the variable and its new value.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ObserveVariable()`和`ObserveVariables()`方法基于对变量观察动作的使用。这使Unity的反应与ink中的动作分离。观察动作允许Unity以任何它想要的方式做出反应。这些方法只提供变量的名称及其新值。'
- en: Delegated functions are the second parameter of both the `ObserveVariable()`
    and `ObserveVariables()` methods. The use of the `delegate` C# keyword *delegates*
    the running of a function because of another function or method. The `ObserveVariable()`
    and `ObserveVariables()` methods are used in a callback approach.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 委托函数是`ObserveVariable()`和`ObserveVariables()`方法的第二个参数。使用`delegate` C#关键字将函数的运行委托给另一个函数或方法。`ObserveVariable()`和`ObserveVariables()`方法用于回调方法。
- en: The first, the `ObserveVariable()` method, accepts the name of a single variable
    and a delegated function to be called when it changes. The second, the `ObserveVariables()`
    method, accepts a `List<string>` instance of variables to watch and a delegated
    function. In both cases, the delegated function will be called with the name of
    the variable that changed and its new value.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一个方法是`ObserveVariable()`，它接受一个变量的名称和一个在变量变化时被调用的委托函数。第二个方法是`ObserveVariables()`，它接受一个要监视的变量`List<string>`实例和一个委托函数。在这两种情况下，委托函数都会被调用，并传入变化变量的名称及其新值。
- en: The `variablesState` property provides direct access to ink variables and their
    current values by their names. However, the name of the ink variable must be used
    to access its value as part of recurring code such as might be found in the `Update()`
    or `FixedUpdate()` methods in Unity. The `ObserveVariable()` and `ObserveVariables()`
    methods allow a developer to write code that only runs when one or more ink variables
    change and only then. This can free up time each cycle to only run the necessary
    code and then update Unity when ink itself updates some value.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`variablesState`属性通过名称直接访问ink变量及其当前值。然而，必须使用ink变量的名称来访问其值，作为重复代码的一部分，例如在Unity中的`Update()`或`FixedUpdate()`方法中。`ObserveVariable()`和`ObserveVariables()`方法允许开发者编写只有在一个或多个ink变量发生变化时才运行的代码，并且仅在那时运行。这可以在每个周期中节省时间，只运行必要的代码，然后在ink本身更新某些值时更新Unity。'
- en: Chapter 10 – Dialogue Systems with ink
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章 – 使用ink的对话系统
- en: A hashtag is created when the hash (`#`) is used to create a tag on a single
    line in ink. Hashtags are used to add extra data per line.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当在墨迹中单行上使用哈希（`#`）来创建标签时，会创建一个哈希标签。哈希标签用于在每行添加额外数据。
- en: A hashtag can only be used at the end of a line, but a speech tag is often used
    at the beginning of a line. A speech tag is always used to mark who is communicating,
    but a hashtag conveys extra information of any form.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哈希标签只能用于行尾，但说话标签通常用于行首。说话标签总是用来标记谁在进行交流，但哈希标签传达任何形式的其他信息。
- en: The branching patterns of dialogue often look like trees, where the initial
    set of choices appears as a "*trunk*," with each branch moving outward into its
    own sets.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对话的分支模式通常看起来像树，初始的选项集合看起来像“树干”，每个分支向外扩展到它自己的集合中。
- en: The list pattern presents options in a vertical arrangement. It can display
    multiple sentences per option but often needs scroll bars to present all the options
    within a set. It is best used when there is more visual spacing available for
    dialogue choices.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列表模式以垂直排列的方式呈现选项。它可以显示每个选项的多个句子，但通常需要滚动条来呈现集合中的所有选项。当有更多视觉空间用于对话选项时，它最好使用。
- en: The radial menu pattern presents options clockwise on the screen. It is often
    used with video game consoles or other limited visual space contexts. Because
    of the reduced amount of spacing, options often appear as single words, icons,
    or short descriptions of their outcomes.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 径向菜单模式以顺时针方向在屏幕上呈现选项。它通常与视频游戏控制台或其他有限视觉空间环境一起使用。由于空间减少，选项通常以单个单词、图标或其结果的简短描述的形式出现。
- en: Chapter 11 – Quest Tracking and Branching Narratives
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章 – 任务跟踪和分支叙事
- en: A quest is a series of events connected to a character within a story.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任务是一系列与故事中角色相关的事件。
- en: The name of the ink knot used to progress a quest is `progress`.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用于推进任务的ink节点名称是`progress`。
- en: The `ChoosePathString()` method abruptly moves the current location from one
    section to another.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ChoosePathString()`方法会突然将当前位置从一个部分移动到另一个部分。'
- en: The global property in Unity is named `Application.dataPath`.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Unity中的全局属性命名为`Application.dataPath`。
- en: Polling requires checking values in one system from another. The events-based
    approach allows one system to observe another and respond to changes (events)
    as they happen.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 投票需要检查一个系统中的值与另一个系统中的值。基于事件的方法允许一个系统观察另一个系统，并在事件发生时对其做出响应。
- en: Chapter 12 – Procedural Storytelling with ink
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第12章 – 使用ink进行程序化叙事
- en: '**Procedural storytelling** occurs when the story of a project is generated
    by procedures, or rules, that dynamically plan or shape content for a player.'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**程序化叙事**发生在项目的叙事是通过程序或规则生成的，这些程序或规则动态地规划或塑造为玩家提供的内容时。'
- en: A **random table** is a set of entries where individual values are chosen at
    random. Originally created as tables where rows were chosen using dice, the same
    concept can be used in ink with shuffles.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**随机表**是一组条目，其中个别值是随机选择的。最初作为使用骰子选择行的表格创建，这个概念可以在ink中使用洗牌来实现。'
- en: '`RANDOM()` function can be used to decide the probability of entries instead
    of the default equal amounts when using the shuffle functionality.'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用`RANDOM()`函数来决定条目的概率，而不是在启用洗牌功能时使用默认的等量分配。
- en: A **grammar** is a set of rules for a language. A substitution grammar decides
    the substitution of words or phrases according to a set of rules. Often, substitution
    grammars are used with random entries or according to conditional rules.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**语法**是一套语言的规则。替换语法根据一套规则决定单词或短语的替换。通常，替换语法会与随机条目或根据条件规则一起使用。'
- en: '**Story planning** is the ordering of story content based on rules. Story planning
    is based on using a substitution grammar for deciding which parts of a project
    a player might experience, either before play starts or because of certain player
    actions.'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**故事规划**是基于规则对故事内容进行排序。故事规划基于使用替换语法来决定玩家可能会体验项目中的哪些部分，无论是在游戏开始之前还是由于某些玩家行为。'
