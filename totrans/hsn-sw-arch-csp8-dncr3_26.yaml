- en: Assessments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估
- en: Chapter 1
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一章
- en: A software architect needs to be aware of any technology that can help them
    solve problems faster and ensure they have better quality.
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 软件架构师需要了解任何可以帮助他们更快解决问题并确保他们有更好质量的技术的技术。
- en: Azure provides, and keeps evolving, lots of components that a software architect
    can implement in solutions.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure 提供了，并且不断演进，许多软件架构师可以在解决方案中实现的功能组件。
- en: The process model can help you understand the team you have, the kind of solution
    you will provide, and the budget that's available.
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 流程模型可以帮助你了解你的团队，你将提供的解决方案类型，以及可用的预算。
- en: A software architect pays attention to any user or system requirement that can
    have an effect on performance, security, usability, and so on.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 软件架构师会关注任何可能影响性能、安全性、可用性等方面的用户或系统需求。
- en: All of them, but the non-functional requirements need to be given more attention.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有这些，但非功能性需求需要更多的关注。
- en: Design Thinking is a tool that helps software architects define exactly what
    users need.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设计思维是一种帮助软件架构师精确定义用户需求的工具。
- en: User Stories are good when we want to define functional requirements.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们想要定义功能性需求时，用户故事是好的。
- en: Caching, asynchronous programming, and correct object allocation.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 缓存、异步编程和正确的对象分配。
- en: To check that the implementation is correct, a software architect compares it
    with models and prototypes that have already been designed and validated.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了检查实现是否正确，软件架构师将其与已经设计和验证过的模型和原型进行比较。
- en: Chapter 2
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章
- en: Vertically and horizontally.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 垂直和水平。
- en: Yes, you can deploy automatically to an already defined web app or create a
    new one directly using Visual Studio.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，你可以自动部署到已定义的 Web 应用程序，或者直接使用 Visual Studio 创建一个新的。
- en: To take advantage of available hardware resources by minimizing the time they
    remain idle.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过最小化它们闲置的时间来利用可用的硬件资源。
- en: Code behavior is deterministic, so it is easy to debug. No deadlocks are possible
    and the execution flow mimics the flow of sequential code, which means it's easier
    to design and understand.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码行为是确定的，因此易于调试。不可能出现死锁，执行流程模仿顺序代码的流程，这意味着更容易设计和理解。
- en: Because the right order minimizes the number of gestures that are needed to
    fill in a form.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因为正确的顺序可以最小化填写表格所需的动作数量。
- en: Because it allows for the manipulation of path files in a way that is independent
    of the operating system.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因为它允许以独立于操作系统的方式操作路径文件。
- en: It can be used with several .NET Core versions, as well as with several versions
    of the classic .NET framework.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它可以与多个 .NET Core 版本以及多个经典 .NET 框架版本一起使用。
- en: Console, .NET Core, and .NET standard class library; ASP.NET Core, Test, and
    Microservices.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 控制台、.NET Core 和 .NET 标准类库；ASP.NET Core、测试和微服务。
- en: Chapter 3
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章
- en: No, it is available for several platforms.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，它适用于多个平台。
- en: Yes, every step involved in the development/deployment process can be automated,
    including deployment to production.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，开发/部署过程中的每一步都可以自动化，包括部署到生产环境。
- en: Automatic, manual, and load test plans.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自动、手动和负载测试计划。
- en: Yes, they can – through Azure DevOps feeds.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，他们可以通过 Azure DevOps 源来做到这一点。
- en: To manage requirements and to organize the whole development process.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了管理需求和组织整个开发过程。
- en: Epic work items represent high-level system subparts that are made up of several
    features.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 史诗级工作项代表由多个功能组成的高级系统子部分。
- en: A children-father relationship.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一种父子关系。
- en: Chapter 4
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章
- en: IaaS is a good option when you are migrating from an on-premise solution or
    if you have an infrastructure team.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你从本地解决方案迁移或拥有基础设施团队时，IaaS 是一个好的选择。
- en: PaaS is the best option for fast and safe software delivery in systems where
    the team is focused on software development.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PaaS 是在团队专注于软件开发时，快速且安全交付软件的最佳选择。
- en: If the solution you intend to deliver is provided by a well-known player, such
    as a SaaS, you should consider using it.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你打算交付的解决方案由知名玩家提供，例如 SaaS，你应该考虑使用它。
- en: Serverless is definitely an option when you are building a new system where
    you don't have people who specialize in infrastructure and you don't want to worry
    about scalability.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你构建一个新系统，没有专门从事基础设施的人员，并且不想担心可伸缩性时，无服务器绝对是一个选项。
- en: Azure SQL Server Database can be up in minutes and you will have all the power
    of a Microsoft SQL Server afterward.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure SQL Server 数据库可以在几分钟内启动，之后你将拥有 Microsoft SQL Server 的全部功能。
- en: Azure provides a set of services called Azure Cognitive Services. These services
    provide solutions for vision, speech, language, search, and knowledge.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure 提供了一组称为 Azure 认知服务的服务。这些服务提供视觉、语音、语言、搜索和知识方面的解决方案。
- en: In a hybrid scenario, you have the flexibility to decide on the best solution
    for each part of your system while respecting the solution's path and driving
    it into the future.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在混合场景中，你有灵活性来决定系统每个部分的最佳解决方案，同时尊重解决方案的路径并将其推向未来。
- en: To allow update/write parallelism.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了允许更新/写入并行性。
- en: The third argument that's passed to the `Create` method, which creates proxy
    instances, allows us to specify permitted targets for communication. In general,
    the third argument of the `ServiceReplicaListener` constructor specifies whether
    the listener will be created on secondary replicas or not.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 传递给 `Create` 方法的第三个参数，它创建代理实例，允许我们指定通信的允许目标。通常，`ServiceReplicaListener` 构造函数的第三个参数指定是否在辅助副本上创建监听器。
- en: Chapter 5
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章
- en: The modularity of code and deployment modularity.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码模块化和部署模块化。
- en: No, other important advantages include handling the development team and the
    whole CI/CD cycle well, and the possibility of mixing heterogeneous technologies
    easily and effectively.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，其他重要优势包括很好地处理开发团队和整个 CI/CD 循环，以及轻松有效地混合异构技术的可能性。
- en: A library that helps us implement resilient communication.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个帮助我们实现弹性通信的库。
- en: It is in the `HostBuilder` method that you can declare dependency injection
    and hosted services.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `HostBuilder` 方法中可以声明依赖注入和托管服务。
- en: Once you've installed Docker on your development machine, you can develop, debug,
    and deploy Dockerized .NET Core applications. You can also add Docker images to
    Service Fabric applications that are being handled with Visual Studio.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你在开发机器上安装了 Docker，你就可以开发、调试和部署 Docker 化的 .NET Core 应用程序。你还可以将 Docker 镜像添加到由
    Visual Studio 处理的服务 Fabric 应用程序中。
- en: The one based on Kubernetes `.yaml` files.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于 Kubernetes `.yaml` 文件的那个。
- en: The one that's exposed to traffic from outside the cluster and is accessible
    through the cluster's URI.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 面向集群外部的流量，并通过集群的 URI 访问的那个。
- en: Chapter 6
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第六章
- en: With the help of database-dependent providers.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在数据库依赖提供者的帮助下。
- en: Either by calling them `Id` or by decorating them with the `Key` attribute.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要么通过调用它们 `Id`，要么通过使用 `Key` 属性装饰它们。
- en: With the `MaxLength` and `MinLength` attributes.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `MaxLength` 和 `MinLength` 属性。
- en: With something similar to: `builder.Entity<Package>().HasIndex(m => m.Name);`.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类似于：`builder.Entity<Package>().HasIndex(m => m.Name);`.
- en: 'With something similar to `builder.Entity<Destination>()`:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类似于 `builder.Entity<Destination>()`：
- en: '`.HasMany(m => m.Packages)`'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`.HasMany(m => m.Packages)`'
- en: '`.WithOne(m => m.MyDestination)`'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`.WithOne(m => m.MyDestination)`'
- en: '`.HasForeignKey(m => m.DestinationId)`'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`.HasForeignKey(m => m.DestinationId)`'
- en: '`.OnDelete(DeleteBehavior.Cascade);`'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`.OnDelete(DeleteBehavior.Cascade);`'
- en: Add-Migration and Update-Database.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Add-Migration 和 Update-Database.
- en: No, but you can forcefully include them with the `Include` LINQ clause.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，但你可以使用 `Include` LINQ 子句强制包含它们。
- en: Yes, it is, thanks to the `Select` LINQ clause.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，它是，多亏了 `Select` LINQ 子句。
- en: By calling `context.Database.Migrate()`.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过调用 `context.Database.Migrate()`。
- en: Chapter 7
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第七章
- en: No, it is an in-memory dictionary that can be used as a cache or for other in-memory
    storage needs.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，它是一个内存中的字典，可以用作缓存或满足其他内存存储需求。
- en: Yes, they are. Most of this chapter's sections are dedicated to explaining why.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，它们是。本章的大部分内容都是致力于解释为什么。
- en: Write operations.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 写操作。
- en: The main weaknesses of NoSQL databases are their consistency and transactions,
    while their main advantage is performance, especially when it comes to handling
    distributed writes.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: NoSQL 数据库的主要弱点是其一致性和事务，而其主要优势是性能，尤其是在处理分布式写入时。
- en: Eventual, Consistency Prefix, Session, Bounded Staleness, Strong.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最终一致性、一致性前缀、会话、有界不一致性、强一致性。
- en: No, they are not efficient in a distributed environment. GUID-based strings
    perform better, since their uniqueness is automatic and doesn't require synchronization
    operations.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，它们在分布式环境中效率不高。基于 GUID 的字符串表现更好，因为它们的唯一性是自动的，不需要同步操作。
- en: '`OwnsMany` and `OwnsOne`.'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`OwnsMany` 和 `OwnsOne`.'
- en: Yes, they can. Once you use `SelectMany`, indices can be used to search for
    nested objects.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，它们可以。一旦你使用了 `SelectMany`，索引就可以用来搜索嵌套对象。
- en: Chapter 8
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第八章
- en: Azure Functions is an Azure PaaS component that allows you to implement FaaS
    solutions.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure Functions 是一个 Azure PaaS 组件，允许你实现 FaaS 解决方案。
- en: You can program Azure Functions in different languages, such as C#, F#, and
    Node. You can also create functions using Azure Portal and Visual Studio VS Code.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用不同的语言编写Azure Functions，例如C#、F#和Node。你还可以使用Azure Portal和Visual Studio VS
    Code创建函数。
- en: There are two plan options in Azure Functions. The first plan is the Consumption
    Plan, where you are charged according to the amount you use. The second plan is
    the App Service Plan, where you share your App Service resources with the function's
    needs.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure Functions有两种计划选项。第一种计划是消费计划，你将根据使用的数量付费。第二种计划是App Service计划，你将与函数的需求共享App
    Service资源。
- en: The process of deploying Functions in Visual Studio is the same as in web app
    deployment.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Visual Studio中部署函数的过程与Web应用部署相同。
- en: There are lots of ways we can trigger Azure Functions, such as using Blob Storage,
    Cosmos DB, Event Grid, Event Hubs, HTTP, Microsoft Graph Events, Queue storage,
    Service Bus, Timer, and Webhooks.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以触发Azure Functions的方式有很多，例如使用Blob存储、Cosmos DB、Event Grid、Event Hubs、HTTP、Microsoft
    Graph事件、队列存储、服务总线、定时器和Webhooks。
- en: Azure Functions v1 needs the .NET Framework Engine, whereas v2 needs .NET Core.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure Functions v1需要.NET Framework引擎，而v2需要.NET Core。
- en: The execution of every Azure Function can be monitored by Application Insights.
    Here, you can check the time it took to process, resource usage, errors, and exceptions
    that happened in each function call.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个Azure Function的执行都可以通过Application Insights进行监控。在这里，你可以检查处理所需的时间、资源使用情况、每个函数调用中发生的错误和异常。
- en: Chapter 9
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章
- en: Design patterns are good solutions to common problems in software development.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设计模式是解决软件开发中常见问题的良好解决方案。
- en: While design patterns give you code implementation for typical problems we face
    in development, design principles help you select the best options when it comes
    to implementing the software architecture.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 虽然设计模式为你提供了我们在开发中面临的典型问题的代码实现，但设计原则有助于你在实现软件架构时选择最佳选项。
- en: The Builder Pattern will help you generate sophisticated objects without the
    need to define them in the class you are going to use them in.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 建造者模式将帮助你生成复杂的对象，而无需在你要使用它们的类中定义它们。
- en: The Factory Pattern is really useful in situations where you have multiple kinds
    of object from the same abstraction and you don't know which of them needs to
    be created by the time you start coding.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 工厂模式在有多种来自同一抽象的对象且不知道在开始编码时需要创建哪个对象的情况下非常有用。
- en: The Singleton Pattern is useful when you need a class that has only one instance
    during the software's execution.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你需要一个在软件执行期间只有一个实例的类时，单例模式非常有用。
- en: The Proxy Pattern is used when you need to provide an object that controls access
    to another object.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你需要提供一个控制对另一个对象访问的对象时，使用代理模式。
- en: The Command Pattern is used when you need to execute a *command* that will affect
    the behavior of an object.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你需要执行将影响对象行为的*命令*时，使用命令模式。
- en: The Publisher/Subscriber Pattern is useful when you need to provide information
    about an object to a group of other objects.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你需要向一组其他对象提供有关对象的信息时，发布/订阅模式非常有用。
- en: The DI Pattern is useful if you want to implement the Dependency Inversion principle.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想实现依赖倒置原则，DI模式非常有用。
- en: Chapter 10
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章
- en: Changes in the language used by experts and changes in the meaning of words.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 专家使用的语言变化以及词语含义的变化。
- en: Domain mapping.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 领域映射。
- en: No; the whole communication passes through the entity, that is, the aggregate
    root.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不；整个通信都通过实体进行，即聚合根。
- en: Because aggregates represent part-subpart hierarchies.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因为聚合体代表部分-部分层次结构。
- en: Just one, since repositories are aggregate-centric.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 只有一个，因为仓库是聚合中心。
- en: The application layer manipulates repository interfaces. Repository implementations
    are registered in the dependency injection engine.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用层操作仓库接口。仓库实现注册在依赖注入引擎中。
- en: To coordinate in single transactions operations on several aggregates.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了在多个聚合体上协调单事务操作。
- en: The specifications for updates and queries are usually quite different, especially
    in simple CRUD systems. The reason for its strongest form is mainly the optimization
    of query response times.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新和查询的规范通常相当不同，尤其是在简单的CRUD系统中。其最强形式的原因主要是查询响应时间的优化。
- en: Dependency injection.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 依赖注入。
- en: No; a serious impact analysis must be performed so that we can adopt it.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不；必须进行严重的影响分析，以便我们可以采用它。
- en: Chapter 11
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章
- en: No, since you will have lots of duplicate code in this approach, which will
    cause difficulties when it comes to maintenance.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，因为这种方法会有很多重复代码，这会在维护时造成困难。
- en: The best approach for code reuse is creating libraries.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码重用的最佳方法是创建库。
- en: Yes. You can find components that have already been created in the libraries
    you've created before and then increase these libraries by creating new components
    that can be reused in the future.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的。你可以在你之前创建的库中找到已经创建的组件，然后通过创建可以在未来重用的新组件来增加这些库。
- en: The .NET Standard is a specification that allows compatibility between different
    frameworks of .NET, from .NET Framework to Unity. .NET Core is one .NET implementation
    and is open source.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: .NET标准是一个规范，它允许.NET的不同框架之间实现兼容性，从.NET Framework到Unity。.NET Core是.NET的一种实现，并且是开源的。
- en: By creating a .NET Standard library, you will be able to use it in different
    .NET implementations, such as .NET Core, the .NET Framework, and Xamarin.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过创建.NET标准库，你将能够在不同的.NET实现中使用它，例如.NET Core、.NET Framework和Xamarin。
- en: You can enable code reuse using object-oriented principles (inheritance, encapsulation,
    abstraction, and polymorphism).
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用面向对象的原则（继承、封装、抽象和多态）来启用代码重用。
- en: Generics is a sophisticated implementation that simplifies how objects with
    the same characteristics are treated by defining a placeholder that will be replaced
    with the specific type at compile time.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 泛型是一种复杂的实现，通过定义一个占位符来简化具有相同特性的对象在编译时被替换为特定类型的方式。
- en: Chapter 12
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第12章
- en: No, since this would violate the principle that a service reaction to a request
    must depend on the request itself and not on other messages/requests that had
    previously been exchanged with the client.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，因为这会违反服务对请求的反应必须依赖于请求本身，而不是之前与客户端交换的其他消息/请求的原则。
- en: No, since this would violate the interoperability constraint.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，因为这会违反互操作性约束。
- en: Yes, it can. The primary action of a POST must be creation, but a delete can
    be performed as a side-effect.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，它可以。POST的主要操作必须是创建，但删除可以作为副作用执行。
- en: Three, that is, Base64 encoding of the header and body plus the signature.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 三，即头和体的Base64编码加上签名。
- en: From the request body.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从请求体中。
- en: With the `ApiController` attribute.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`ApiController`属性。
- en: The `ProducesResponseType` attribute.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ProducesResponseType`属性。'
- en: With the `Route` and `Http<verb>` attributes.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`Route`和`Http<verb>`属性。
- en: Something like `services.AddHttpClient<MyProxy>()`.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类似于`services.AddHttpClient<MyProxy>()`。
- en: Chapter 13
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第13章
- en: Developer error pages and developer database error pages, production error pages,
    hosts, HTTPS redirection, routing, authentication and authorization, and endpoint
    invokers.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开发者错误页面和开发者数据库错误页面、生产错误页面、主机、HTTPS重定向、路由、身份验证和授权以及端点调用者。
- en: No.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不。
- en: False. Several tag helpers can be invoked on the same tag.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误。同一个标签上可以调用多个标签助手。
- en: '`ModelState.IsValid`.'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ModelState.IsValid`。'
- en: '`@RenderBody()`.'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`@RenderBody()`。'
- en: 'We can use `@RenderSection("Scripts", required: false)`.'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '我们可以使用`@RenderSection("Scripts", required: false)`。'
- en: We can use `return View("viewname", ViewModel)`.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用`return View("viewname", ViewModel)`。
- en: Three.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 三。
- en: No; there is also the `ViewState` dictionary.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不；还有`ViewState`字典。
- en: Chapter 14
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第14章
- en: Maintainability gives you the opportunity to deliver the software you designed
    quickly. It also allows you to fix bugs easily.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可维护性为你提供了快速交付你设计的软件的机会。它还允许你轻松修复错误。
- en: Cyclomatic complexity is a metric that detects the number of nodes a method
    has. The higher the number, the worse the effect.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 圈复杂度是一个检测方法节点数量的指标。数字越高，影响越差。
- en: A version control system will guarantee the integrity of your source code, giving
    you the opportunity to analyze the history of each modification that you've made.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 版本控制系统将保证源代码的完整性，并为你提供分析每个修改历史的机会。
- en: Try-catch is a way to control exceptions that have been invoked by the code
    you are writing. Try-finally is a way to guarantee that, even with an exception
    inside the try-block, the finally block will carry out its process. You can use
    try-catch-finally when you want to solve both situations in the same piece of
    code.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Try-catch是控制由你编写的代码引发的异常的一种方式。Try-finally是一种保证即使在try块内部有异常，finally块也会执行其过程的方式。当你想在同一块代码中解决这两种情况时，可以使用try-catch-finally。
- en: A garbage collector is a .NET Core/.NET Framework system that monitors your
    application and detects objects that you aren't using anymore. It disposes of
    these objects to release memory.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 垃圾回收器是 .NET Core/.NET Framework 系统的一种，它监视你的应用程序并检测你不再使用的对象。它清理这些对象以释放内存。
- en: The `IDisposable` interface is important in classes that instantiate objects
    that need to be disposed of by the programmer since the garbage collector cannot
    dispose of them.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`IDisposable` 接口对于需要程序员进行清理的对象实例化的类来说很重要，因为垃圾回收器无法清理它们。'
- en: .NET Core encapsulates some design patterns in some of its libraries in a way
    that can guarantee safer code, such as with dependency injection and Builder.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: .NET Core 以一种可以保证更安全代码的方式封装了一些设计模式，例如依赖注入和 Builder。
- en: Chapter 15
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 15 章
- en: Because most of the tests must be repeated after any software changes occur.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因为大多数测试在软件发生任何更改后都必须重新进行。
- en: Because the probability of exactly the same error occurring in a unit test and
    in its associated application code is very low.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因为在单元测试及其相关应用程序代码中发生完全相同错误的概率非常低。
- en: '`[Theory]` is used when the test method defines several tests, while `[Fact]` is
    used when the test method defines just one test.'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当测试方法定义了多个测试时使用 `[Theory]`，而当测试方法只定义了一个测试时使用 `[Fact]`。
- en: '`Assert`.'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Assert`。'
- en: '`Setup`, `Returns`, and `ReturnsAsync`.'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Setup`、`Returns` 和 `ReturnsAsync`。'
- en: Yes; with `ReturnAsync`.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的；使用 `ReturnAsync`。
- en: Chapter 16
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 16 章
- en: Well-written code is code that any person skilled in that programming language
    can handle, modify, and evolve.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写良好的代码是任何熟练掌握该编程语言的人都可以处理、修改和发展的代码。
- en: Roslyn is the .NET Compiler that's used for code analysis inside Visual Studio.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Roslyn 是用于在 Visual Studio 内部进行代码分析的 .NET 编译器。
- en: Code analysis is a practice that considers the way the code is written to detect
    bad practices before compilation.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码分析是一种在编译前检测不良实践的实践，它考虑了代码的编写方式。
- en: Code analysis can find problems that happen even with apparently good software,
    such as memory leaks and bad programming practices.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码分析可以发现即使在表面上看起来很好的软件中也会发生的问题，例如内存泄漏和不良编程实践。
- en: Roslyn can be programmed for code analysis.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Roslyn 可以用于代码分析。
- en: Visual Studio Extensions are tools that have been programmed to run inside Visual
    Studio. These tools can help you out in some cases where Visual Studio IDE doesn't
    have the appropriate feature for you to use.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Visual Studio 扩展是在 Visual Studio 内部运行的编程工具。这些工具可以在某些情况下帮助你，在这些情况下 Visual Studio
    IDE 没有为你提供适当的功能。
- en: Microsoft Code Analysis, SonarLint, and Code Cracker.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 微软代码分析、SonarLint 和 Code Cracker。
- en: Chapter 17
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 17 章
- en: To maximize the value that the software provides for the target organization.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了最大化软件为目标组织提供的价值。
- en: No; it requires the acquisition of all competencies that are required to maximize
    the value added by the software.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不；它需要获取所有能够最大化软件增值所需的能力。
- en: Because when a new user subscribes, its tenant must be created automatically,
    and because new software updates must be distributed to all the customer's infrastructures.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因为当新用户订阅时，其租户必须自动创建，并且因为新的软件更新必须分发到所有客户的基础设施中。
- en: Yes; Terraform is an example.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的；Terraform 是一个例子。
- en: Azure pipelines.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure 管道。
- en: Your business depends on the SaaS supplier, so its reliability is fundamental.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的业务依赖于 SaaS 供应商，因此其可靠性是基本的。
- en: No; scalability is just as important as fault tolerance and automatic fault
    recovery.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不；可扩展性同容错性和自动故障恢复一样重要。
- en: Chapter 18
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 18 章
- en: DevOps is the approach of delivering value to the end user continuously. To
    do this with success, continuous integration, continuous delivery, and continuous
    feedback must be undertaken.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DevOps 是一种持续向最终用户提供价值的途径。为了成功做到这一点，必须进行持续集成、持续交付和持续反馈。
- en: Continuous integration allows you to check the quality of the software you are
    delivering every single time you commit a change. You can do this by turning on
    this feature in Azure DevOps.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 持续集成允许你在每次提交更改时检查你交付的软件的质量。你可以通过在 Azure DevOps 中启用此功能来完成此操作。
- en: Continuous delivery allows you to deploy a solution once you are sure that all
    the quality checks have passed the tests you designed. Azure DevOps helps you
    with that by providing you with relevant tools.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 持续交付允许你在确信所有质量检查都通过了你设计的测试后部署解决方案。Azure DevOps 通过提供相关工具来帮助你完成此操作。
- en: Continuous Feedback is the adoption of tools in the DevOps life cycle that enable
    fast feedback when it comes to performance, usability, and other aspects of the
    application you are developing.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 持续反馈是采用 DevOps 生命周期中的工具，以便在性能、可用性以及你正在开发的应用的其他方面快速获得反馈。
- en: The build pipeline will let you run tasks for building and testing your application,
    while the release pipeline will give you the opportunity to define how the application
    will be deployed in each scenario.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建管道将允许你运行构建和测试应用程序的任务，而发布管道将为你提供定义应用程序在每个场景中如何部署的机会。
- en: Application Insights is a helpful tool for monitoring the health of the system
    you've deployed, which makes it a fantastic continuous feedback tool.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用洞察（Application Insights）是监控你已部署的系统健康状况的有用工具，这使得它成为一款出色的持续反馈工具。
- en: Test & Feedback is a tool that allows stakeholders to analyze the software you
    are developing and enables a connection with Azure DevOps to open tasks and even
    bugs.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试与反馈（Test & Feedback）是一个工具，允许利益相关者分析你正在开发的软件，并能够与 Azure DevOps 连接以打开任务甚至错误。
- en: Chapter 19
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第19章
- en: It is an approach that makes sure that every single commit to the code repository
    is built and tested.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是一种确保每次提交到代码仓库的代码都经过构建和测试的方法。
- en: Yes, you can have DevOps separately and then enable Continuous Delivery later.
    Your team and process need to be ready and attentive for this to happen.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，你可以先独立设置 DevOps，然后稍后启用持续交付。你的团队和流程需要准备好并关注这一变化的发生。
- en: All of these risks may cause damage to your production environment. You can
    have, for example, a feature that isn't ready but has been deployed, you can cause
    a stop at a bad time for your customers, or you can even suffer a bad collateral
    effect due to an incorrect fix.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有这些风险都可能对你的生产环境造成损害。例如，你可能有一个尚未准备好的功能却已经部署了，你可能在客户不利的时刻造成服务中断，或者你可能因为错误的修复而遭受不良的副作用。
- en: A multi-stage environment protects production from bad releases.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 多阶段环境可以保护生产环境免受不良发布的影响。
- en: Automated tests anticipate bugs and bad behaviors in preview scenarios.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自动化测试可以预测预览场景中的错误和不良行为。
- en: Pull requests allow code reviews before commits are made in the master branch.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 拉取请求允许在主分支提交之前进行代码审查。
- en: No; pull requests can help you in any development approach where you have GIT
    as your source control.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不；拉取请求（pull requests）可以帮助你在任何有 Git 作为源控制的发展方法中。
- en: Chapter 20
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第20章
- en: No; it depends on the complexity of the user interface and how often it changes.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不；这取决于用户界面的复杂性和变化频率。
- en: The ASP.NET Core pipeline isn't executed, but inputs are passed directly to
    controllers.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ASP.NET Core 管道不会执行，但输入会直接传递到控制器。
- en: Use of the `Microsoft.AspNetCore.Mvc.Testing` NuGet package.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `Microsoft.AspNetCore.Mvc.Testing` NuGet 包。
- en: Use of the `AngleSharp` NuGet package.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `AngleSharp` NuGet 包。
