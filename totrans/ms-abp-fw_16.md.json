["```cs\n@inject IThemeManager ThemeManager\n@{\n    Layout = ThemeManager.CurrentTheme\n             .GetLayout(StandardLayouts.Empty);\n}\n```", "```cs\n@using Volo.Abp.AspNetCore.Mvc.UI.Theming\n@inject IThemeManager ThemeManager\n@{\n    Layout = ThemeManager.CurrentTheme\n             .GetLayout(StandardLayouts.Account);\n}\n```", "```cs\n{\n  ...\n  \"dependencies\": {\n    \"@abp/aspnetcore.mvc.ui.theme.basic\": \"^5.0.0\"\n  }\n}\n```", "```cs\nnpm install vue\n```", "```cs\n\"@node_modules/vue/dist/vue.min.js\": \"@libs/vue/\"\n```", "```cs\nmodule.exports = {\n    aliases: { },\n    mappings: {\n        \"@node_modules/vue/dist/vue.min.js\": \"@libs/vue/\"\n    }\n};\n```", "```cs\nabp install-libs\n```", "```cs\n\"@node_modules/vue/dist/*\": \"@libs/vue/\"\n```", "```cs\nnpm install @abp/vue\n```", "```cs\n@section scripts {\n    <abp-script src=»/libs/vue/vue.min.js» />\n}\n```", "```cs\n<script src=»/libs/vue/vue.min.js?_v=637653840922970000»></script>\n```", "```cs\n@page\n@model MvcDemo.Web.Pages.VueDemoModel\n@section scripts {\n    <abp-script src=»/libs/vue/vue.min.js» />\n    <script>\n        var app = new Vue({\n            el: '#app',\n            data: {\n                message: 'Hello Vue!'\n            }\n        })\n    </script>\n}\n<div id=\"app\">\n    <h2>{{ message }}</h2>\n</div>\n```", "```cs\nvar app = new Vue({\n    el: '#app',\n    data: {\n        message: 'Hello Vue!'\n    }\n});\n```", "```cs\n@page\n@model MvcDemo.Web.Pages.VueDemoModel\n@section scripts {\n    <abp-script src=»/libs/vue/vue.min.js» />\n    <abp-script src=»/Pages/VueDemo.cshtml.js» />\n}\n<div id=\"app\">\n    <h2>{{ message }}</h2>\n</div>\n```", "```cs\n@section styles {\n    <abp-style src=\"img/VueDemo.cshtml.css\" />\n}\n```", "```cs\n@section scripts {\n    <abp-script-bundle>\n        <abp-script src=»/libs/vue/vue.min.js» />\n        <abp-script src=»/Pages/VueDemo.cshtml.js» />\n    </abp-script-bundle>\n}\n```", "```cs\n<abp-script-bundle>\n    <abp-script src=\"img/validator.js\" />\n    @if (System.Globalization.CultureInfo\n         .CurrentUICulture.Name == \"tr\")\n    {\n        <abp-script src=\"img/validator.tr.js\" />\n    }\n    <abp-script src=\"img/some-other.js\" />\n</abp-script-bundle>\n```", "```cs\nConfigure<AbpBundlingOptions>(options =>\n{\n    options.ScriptBundles.Configure(\n        StandardBundles.Scripts.Global,\n        bundle =>\n        {\n            bundle.AddFiles(«/libs/vue/vue.min.js»);\n        }\n    );\n    options.StyleBundles.Configure(\n        StandardBundles.Styles.Global,\n        bundle =>\n        {\n            bundle.AddFiles(\"/global-styles.css\");\n        }\n    );\n});\n```", "```cs\nConfigure<AbpBundlingOptions>(options =>\n{\n    options\n        .ScriptBundles\n        .Add(\"MyGlobalScripts\", bundle => {\n            bundle.AddFiles(\n                \"/libs/jquery/jquery.js\",\n                \"/libs/bootstrap/js/bootstrap.js\",\n                \"/scripts/my-global-scripts.js\"\n            );\n        });                \n});\n```", "```cs\n<abp-script-bundle name=\"MyGlobalScripts\" />\n```", "```cs\nConfigure<AbpBundlingOptions>(options =>\n{\n    options.Mode = BundlingMode.None;\n});\n```", "```cs\nConfigure<AbpNavigationOptions>(options =>\n{\n    options.MenuContributors.Add(new MyMenuContributor());\n});\n```", "```cs\npublic class MvcDemoMenuContributor : IMenuContributor\n{\n    public async Task ConfigureMenuAsync(\n        MenuConfigurationContext context)\n    {\n        if (context.Menu.Name == StandardMenus.Main)\n        {\n            //TODO: Configure the main menu\n        }\n    }\n}\n```", "```cs\nvar l = context.GetLocalizer<MvcDemoResource>();\ncontext.Menu.AddItem(\n    new ApplicationMenuItem(\"MyProject.Crm\", l[\"CRM\"])\n        .AddItem(new ApplicationMenuItem(\n            name: \"MyProject.Crm.Customers\", \n            displayName: l[\"Customers\"], \n            url: \"/crm/customers\")\n        ).AddItem(new ApplicationMenuItem(\n            name: \"MyProject.Crm.Orders\", \n            displayName: l[\"Orders\"],\n            url: \"/crm/orders\")\n        )\n);\n```", "```cs\nif (await context.IsGrantedAsync(\"MyPermissionName\"))\n{\n    context.Menu.AddItem(...);\n}\n```", "```cs\nvar authorizationService = context\n    .ServiceProvider.GetRequiredService<IAuthorizationService>();\nif (await authorizationService.IsGrantedAsync(\n    \"MyPermissionName\"))\n{\n    context.Menu.AddItem()\n}\n```", "```cs\n<abp-button button-type=\"Primary\" text=\"Click me!\" />\n```", "```cs\n<button class=\"btn btn-primary\" type=\"button\">\n    Click me!\n</button>\n```", "```cs\npublic class CreateMovieModel : AbpPageModel\n{\n    [BindProperty]\n    public MovieViewModel Movie { get; set; }\n\n    public void OnGet()\n    {\n        Movie = new MovieViewModel();\n    }\n    public async Task OnPostAsync()\n    {\n        // TODO: process the form (using the Movie object)\n    }\n}\n```", "```cs\npublic class MovieViewModel\n{\n    [Required]\n    [StringLength(256)]\n    public string Name { get; set; }\n    [Required]\n    [DataType(DataType.Date)]\n    public DateTime ReleaseDate { get; set; }\n    [Required]\n    [TextArea]\n    [StringLength(1000)]\n    public string Description { get; set; }\n    public Genre Genre { get; set; }\n    public float? Price { get; set; }\n    public bool PreOrder { get; set; }\n}\n```", "```cs\npublic enum Genre\n{\n    Classic, Action, Fiction, Fantasy, Animation\n}\n```", "```cs\n<form method=\"post\">\n    <-- TODO: FORM ELEMENTS -->\n    <button class=\"btn btn-primary\" type=\"submit\">\n        Submit\n    </button>\n</form>\n```", "```cs\n<div class=\"form-group\">\n    <label asp-for=\"Movie.Name\" class=\"control-label\">\n    </label>\n    <input asp-for=\"Movie.Name\" class=\"form-control\"/>\n    <span asp-validation-for=\"Movie.Name\" \n        class=\"text-danger\"></span>\n</div>\n```", "```cs\n<abp-input asp-for=\"Movie.Name\" />\n```", "```cs\n<form method=\"post\">\n    <abp-input asp-for=\"Movie.Name\" />\n    <abp-select asp-for=\"Movie.Genre\" />\n    <abp-input asp-for=\"Movie.Description\" />\n    <abp-input asp-for=\"Movie.Price\" />\n    <abp-input asp-for=\"Movie.ReleaseDate\" />\n    <abp-input asp-for=\"Movie.PreOrder\" />\n    <abp-button type=\"submit\" button-type=\"Primary\"\n        text=\"Submit\"/>\n</form>\n```", "```cs\n<abp-dynamic-form abp-model=\"Movie\" submit-button=\"true\" />\n```", "```cs\npublic async Task OnPostAsync()\n{\n    if (ModelState.IsValid)\n    {\n        //TODO: Create a new movie\n    }\n    else\n    {\n        Alerts.Danger(\"Please correct the form fields!\");\n    }\n}\n```", "```cs\npublic class MovieViewModel : IValidatableObject\n{\n    // ... properties omitted\n    public IEnumerable<ValidationResult> Validate(\n        ValidationContext validationContext)\n    {\n        if (PreOrder && Price > 999)\n        {\n            yield return new ValidationResult(\n                \"Price should be lower than 999 for \n                 pre-order movies!\",\n                new[] { nameof(Price) }\n            );\n        }\n    }\n}\n```", "```cs\n\"DisplayName:Name\": \"Name\",\n\"DisplayName:ReleaseDate\": \"Release date\",\n«DisplayName:Description»: «Description»,\n«DisplayName:Genre»: «Genre»,\n\"DisplayName:Price\": \"Price\",\n\"DisplayName:PreOrder\": \"Pre-order\"\n```", "```cs\n\"DisplayName:Name\": \"İsim\",\n\"DisplayName:ReleaseDate\": \"Yayınlanma tarihi\",\n\"DisplayName:Description\": \"Açıklama\",\n\"DisplayName:Genre\": \"Tür\",\n\"DisplayName:Price\": \"Ücret\",\n\"DisplayName:PreOrder\": \"Ön sipariş\"\n```", "```cs\n[DisplayName(\"MoviePrice\")]\npublic float? Price { get; set; }\n```", "```cs\n<abp-dynamic-form abp-model=\"Movie\"\n                  submit-button=\"true\" \n                  data-ajaxForm=\"true\"\n                  id=\"MovieForm\" />\n```", "```cs\npublic async Task<IActionResult> OnPostAsync()\n{\n    ValidateModel();    \n    //TODO: Create a new movie\n    return NoContent();\n}\n```", "```cs\n$(function (){\n    $('#MovieForm').on('abp-ajax-success', function(){\n        $('#MovieForm').slideUp();\n        abp.message.success('Successfully saved, thanks\n            :)');\n    });\n});\n```", "```cs\npublic class MySimpleModalModel : AbpPageModel\n{\n    public string Message { get; set; }\n\n    public void OnGet()\n    {\n        Message = \"Hello modals!\";\n    }\n}\n```", "```cs\n@page\n@model MvcDemo.Web.Pages.MySimpleModalModel\n@{\n    Layout = null;\n}\n<abp-modal>\n    <abp-modal-header title=\"My header\"></abp-modal-header>\n    <abp-modal-body>\n        @Model.Message\n    </abp-modal-body>\n    <abp-modal-footer buttons=\"Close\"></abp-modal-footer>\n</abp-modal>\n```", "```cs\nvar simpleModal = new abp.ModalManager({\n    viewUrl: '/MySimpleModal'\n});\n```", "```cs\n$(function (){\n    $('#Button1').click(function (){\n        simpleModal.open();\n    });\n});\n```", "```cs\nsimpleModal.open({\n    productId: 42\n});\n```", "```cs\npublic void OnGet(int productId)\n{\n    ...\n}\n```", "```cs\npublic class ModalWithForm : AbpPageModel\n{\n    [BindProperty]\n    public MovieViewModel Movie { get; set; }\n\n    public void OnGet()\n    {\n        Movie = new MovieViewModel();\n    }\n    public async Task<IActionResult> OnPostAsync()\n    {\n        ValidateModel();\n        //TODO: Create a new movie\n        return NoContent();\n    }\n}\n```", "```cs\n@page\n@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal\n@model MvcDemo.Web.Pages.ModalWithForm\n@{\n    Layout = null;\n}\n<form method=\"post\" asp-page=\"/ModalWithForm\">\n    <abp-modal>\n        <abp-modal-header title=\"Create new movie\">\n        </abp-modal-header>\n        <abp-modal-body>\n            <abp-input asp-for=\"Movie.Name\" />\n            <abp-select asp-for=\"Movie.Genre\" />\n            <abp-input asp-for=\"Movie.Description\" />\n            <abp-input asp-for=\"Movie.Price\" />\n            <abp-input asp-for=\"Movie.ReleaseDate\" />\n            <abp-input asp-for=\"Movie.PreOrder\" />\n        </abp-modal-body>\n        <abp-modal-footer buttons=\"@(\n            AbpModalButtons.Cancel|AbpModalButtons.Save)\">\n        </abp-modal-footer>\n    </abp-modal>\n</form>\n```", "```cs\nvar newMovieModal = new abp.ModalManager({\n    viewUrl: '/ModalWithForm'\n});\n$(function (){\n    $('#Button2').click(function (){\n        newMovieModal.open();\n    });\n});\n```", "```cs\n<abp-dynamic-form abp-model=\"Movie\" \n    asp-page=\"ModalWithForm\">\n    <abp-modal>\n        <abp-modal-header title=\"Create new movie!\">\n        </abp-modal-header>\n        <abp-modal-body>\n            <abp-form-content/>\n        </abp-modal-body>\n        <abp-modal-footer buttons=\"@(\n            AbpModalButtons.Cancel|AbpModalButtons.Save)\">\n        </abp-modal-footer>\n    </abp-modal>\n</abp-dynamic-form>\n```", "```cs\nnewMovieModal.onResult(function (e, data){\n    console.log(data.responseText);\n});\n```", "```cs\npublic async Task<IActionResult> OnPostAsync()\n{\n    ...\n    return Content(\"42\");\n}\n```", "```cs\nabp.modals.MovieCreation = function () {\n     this.initModal = function(modalManager, args) {\n        var $modal = modalManager.getModal();\n        var preOrderCheckbox =\n            $modal.find('input[name=\"Movie.PreOrder\"]');\n        preOrderCheckbox.change(function(){\n            if (this.checked){\n               alert('checked pre-order!'); \n            }\n        });\n        console.log('initialized the modal...');\n    }\n};\n```", "```cs\nvar newMovieModal = new abp.ModalManager({\n    viewUrl: '/ModalWithForm',\n    modalClass: 'MovieCreation'\n});\n```", "```cs\n<abp-script src=\"img/ModalWithForm.cshtml.js\" />\n```", "```cs\nvar newMovieModal = new abp.ModalManager({\n    viewUrl: '/ModalWithForm',\n    scriptUrl: '/Pages/ModalWithForm.cshtml.js',\n    modalClass: 'MovieCreation'\n});\n```", "```cs\nvar userId = abp.currentUser.id;\nvar userName = abp.currentUser. userName;\n```", "```cs\n{\n  isAuthenticated: true,\n  id: \"813108d7-7108-4ab2-b828-f3c28bbcd8e0\",\n  tenantId: null,\n  userName: \"john\",\n  name: \"John\",\n  surName: \"Nash\",\n  email: \"john.nash@abp.io\",\n  emailVerified: true,\n  phoneNumber: \"+901112223342\",\n  phoneNumberVerified: true,\n  roles: [\"moderator\",\"manager\"]\n}\n```", "```cs\nif (abp.auth.isGranted('DeleteProduct')) {\n  // TODO: Delete the product\n} else {\n  abp.message.warn(\"You don't have permission to delete\n                    products!\");\n}\n```", "```cs\nif (abp.features.isEnabled('MailchimpImport'))\n{\n  // TODO: Import from Mailchimp\n}\n```", "```cs\nvar str = abp.localization.localize('HelloWorld');\n```", "```cs\nvar str = abp.localization.localize('HelloWorld', 'MyResource');\n```", "```cs\nvar localizer = abp.localization.getResource('MyResource');\nvar str = localizer('HelloWorld');\n```", "```cs\n\"GreetingMessage\": \"Hello {0}!\"\n```", "```cs\nvar str = abp.localization.localize('GreetingMessage', 'John');\n```", "```cs\nabp.message.success('Your changes have been successfully\n                     saved!', 'Congratulations');\n```", "```cs\nabp.message.confirm('Are you sure to delete this product?')\n.then(function(confirmed){\n  if(confirmed){\n    // TODO: Delete the product!\n  }\n});\n```", "```cs\nabp.notify.info(\n    'The product has been successfully deleted.',\n    'Deleted the Product'\n);\n```", "```cs\nabp.ajax({\n  type: 'GET',\n  url: '/api/identity/users'\n}).then(function(result){\n  // TODO: process the result\n});\n```", "```cs\nabp.ajax({\n  type: 'GET',\n  url: '/api/identity/users',\n  abpHandleError: false\n}).then(function(result){\n  // TODO: process the result\n}).catch(function(){\n  abp.message.error(\"request failed :(\");\n});\n```", "```cs\nnamespace ProductManagement.Products\n{\n    public interface IProductAppService :\n        IApplicationService\n    {\n        Task CreateAsync(CreateUpdateProductDto input);\n        Task<ProductDto> GetAsync(Guid id);\n    }\n}\n```", "```cs\nproductManagement.products.product\n  .get('1b8517c8-2c08-5016-bca8-39fef5c4f817')\n  .then(function (result) {\n    console.log(result);\n  });\n```", "```cs\nproductManagement.products.product.create({\n  categoryId: '5f568193-91b2-17de-21f3-39fef5c4f808',\n  name: 'My product',\n  price: 42,\n  isFreeCargo: true,\n  releaseDate: '2023-05-24',\n  stockState: 'PreOrder'\n});\n```", "```cs\nproductManagement.products.product.create({\n  categoryId: '5f568193-91b2-17de-21f3-39fef5c4f808',\n  name: 'My product',\n  //...other values\n}, {\n  url: 'https://localhost:21322/api/my-custom-url'\n  headers: {\n    'MyHeader': 'MyValue'\n  }\n});\n```", "```cs\nabp generate-proxy -t js -u https://localhost:44349\n```", "```cs\nConfigure<DynamicJavaScriptProxyOptions>(options => {\n    options.EnabledModules.Remove(\"app\");\n});\n```"]