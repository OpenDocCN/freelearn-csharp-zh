["```cs\n{\n  \"x-generator\": \"NSwag v12.0.12.0 (NJsonSchema v9.13.15.0 (Newtonsoft.Json v12.0.0.0))\",\n  \"swagger\": \"2.0\",\n  \"host\": \"localhost:5000\",\n  \"schemes\": [\n    \"http\"\n  ],\n  \"consumes\": [\n    \"application/json\"\n  ],\n  \"paths\": {\n    \"/api/artist\": {\n      \"get\": {\n        \"tags\": [\n          \"Artist\"\n        ],\n        \"operationId\": \"Artist_Get\",\n        \"parameters\": [\n          {\n            \"type\": \"string\",\n            \"name\": \"artistId\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"schema\": {\n              \"type\": \"file\"\n            }\n          }\n        }\n...\n```", "```cs\ndotnet add package NSwag.AspNetCore\n```", "```cs\n...\n    public class Startup\n    {\n\n        public void ConfigureServices(IServiceCollection services)\n        {\n            services\n                .AddCatalogContext(Configuration.\n                GetSection(\"DataSource:ConnectionString\").Value);\n\n            services\n               ..\n                .AddOpenApiDocument(settings =>{\n                                       settings.Title = \"Catalog API\";\n                                       settings.DocumentName = \"v3\";\n                                       settings.Version = \"v3\";                                   \n                                    });\n        }\n\n        public void Configure(IApplicationBuilder app, \n        IHostingEnvironment env)\n        {\n            ...\n             app\n                .UseOpenApi()\n .UseSwaggerUi3();\n        }\n    }\n}\n```", "```cs\n..\n    [ApiController]\n    public class ItemController : ControllerBase\n    {\n        [HttpGet]\n        [ApiConventionMethod(typeof(DefaultApiConventions), \n        nameof(DefaultApiConventions.Get))]\n        public async Task<IActionResult> Get([FromQuery] int pageSize = \n        10, [FromQuery] int pageIndex = 0)\n\n        [HttpGet(\"{id:guid}\")]\n        [ApiConventionMethod(typeof(DefaultApiConventions), \n        nameof(DefaultApiConventions.Get))]\n        public async Task<IActionResult> GetById(Guid id)\n      ...\n```", "```cs\n        ...\n\n        [HttpPost]\n        [ApiConventionMethod(typeof(DefaultApiConventions), \n        nameof(DefaultApiConventions.Create))]\n        public async Task<IActionResult> Create(AddItemRequest request)\n\n        [HttpPut(\"{id:guid}\")]\n        [ApiConventionMethod(typeof(DefaultApiConventions), \n        nameof(DefaultApiConventions.Update))]\n        public async Task<IActionResult> Update(Guid id, \n        EditItemRequest request)\n\n        [HttpDelete(\"{id:guid}\")]\n        [ApiConventionMethod(typeof(DefaultApiConventions), \n        nameof(DefaultApiConventions.Delete))]\n        public async Task<IActionResult> Delete(Guid id)\n    }\n}\n```", "```cs\nusing Microsoft.AspNetCore.Mvc.ApiExplorer;\n\nnamespace Microsoft.AspNetCore.Mvc\n{\n  public static class DefaultApiConventions\n  {\n    [ProducesResponseType(200)]\n [ProducesResponseType(404)]\n [ProducesDefaultResponseType]\n [ApiConventionNameMatch(ApiConventionNameMatchBehavior.Prefix)]\n public static void Get([ApiConventionNameMatch\n    (ApiConventionNameMatchBehavior.Suffix), ApiConventionTypeMatch(\n    ApiConventionTypeMatchBehavior.Any)] object id)\n {\n }\n\n    ...\n  }\n}\n```", "```cs\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.AspNetCore.Mvc.ApiExplorer;\n\nnamespace Catalog.API.Conventions\n{\n    public static class ItemApiConvention\n    {\n\n        [ProducesResponseType(200)]\n        [ProducesResponseType(404)]\n        [ProducesResponseType(400)]\n        [ProducesDefaultResponseType]\n        [ApiConventionNameMatch(ApiConventionNameMatchBehavior.Prefix)]\n        public static void Get([ApiConventionNameMatch\n        (ApiConventionNameMatchBehavior.Suffix),\n                                ApiConventionTypeMatch\n                                (ApiConventionTypeMatchBehavior.Any)]\n                                 object id)\n        {\n        }\n\n        ...\n    }\n}\n```", "```cs\n[HttpGet]\n[ApiConventionMethod(typeof(ItemApiConvention), nameof(ItemApiConvention.Get))]\npublic async Task<IActionResult> Get([FromQuery] int pageSize = 10, [FromQuery] int pageIndex = 0)\n{\n\n    ...\n}\n```"]