["```cs\nUpdateEstimates()\nIF SalesCycleStage.GET(\"Sales Cycle Code\",\"Sales Cycle Stage\") \nTHEN BEGIN\n  SalesCycle.GET(\"Sales Cycle Code\");\n  CASE SalesCycle.\"Probability Calculation\" OF\n    SalesCycle.\"Probability Calculation\"::Multiply:\n      BEGIN\n        \"Probability %\" := \"Chances of Success %\" * \n                      SalesCycleStage.\"Completed %\" / 100;\n      END;\n    SalesCycle.\"Probability Calculation\"::Add:\n      BEGIN\n        \"Probability %\" := (\"Chances of Success %\" + \n                      SalesCycleStage.\"Completed %\") / 2;\n      END;\n    SalesCycle.\"Probability Calculation\"::\"Chances of Success %\":\n      BEGIN\n        \"Probability %\" := \"Chances of Success %\";\n      END;\n    SalesCycle.\"Probability Calculation\"::\"Completed %\":\n      BEGIN\n        \"Probability %\" := SalesCycleStage.\"Completed %\";\n      END;\n  END;\n  \"Completed %\" := SalesCycleStage.\"Completed %\";\n  \"Calcd. Current Value (LCY)\" := \"Estimated Value (LCY)\" * \n                           \"Probability %\" / 100;\nEND;\n```", "```cs\n    \"Probability %\" := (\"Chances of Success %\" +  \n      SalesCycleStage.\"Completed %\") / 2;\n\n    \"Calcd. Current Value (LCY)\" := \"Estimated Value (LCY)\" * \n      \"Probability %\" / 100;\n    ```", "```cs\nContactAddrAlt()\n...\n  ContIdenticalAddress:\n    WITH ContAltAddr DO BEGIN\n      GET(Cont.\"Company No.\",CompanyAltAddressCode);\n      FormatAddr(\n        AddrArray,\"Company Name\",\"Company Name 2\",\n        Cont.Name,Address,\"Address 2\",\n        City,\"Post Code\",County,\"Country/Region Code\");\n    END;\n  (Cont.Type=Cont.Type::Person) AND\n  (Cont.\"Company No.\" <> ''):\n    WITH Cont DO\n      FormatAddr(\n//        AddrArray,ContCompany.Name,ContCompany.\"Name 2\",\n//        Name,Address,\"Address 2\",\n        AddrArray,ContCompany.Name,ContCompany.\"Name 2\",\n        GetSalutation(5, Cont.\"Language Code\"),Address,\n        \"Address 2\",City,\"Post Code\",County,\n        \"Country/Region Code\") \n```", "```cs\nGetSalutation()\nIF NOT SalutationFormula.GET(\"Salutation Code\",LanguageCode,\n  SalutationType) \nTHEN\n  ERROR(Text021,LanguageCode,\"No.\");\n\nSalutationFormula.TESTFIELD(Salutation);\n\nCASE SalutationFormula.\"Name 1\" OF\n  SalutationFormula.\"Name 1\"::\"Job Title\":\n    NamePart[1] := \"Job Title\";\n  SalutationFormula.\"Name 1\"::\"First Name\":\n    NamePart[1] := \"First Name\";\n  SalutationFormula.\"Name 1\"::\"Middle Name\":\n    NamePart[1] := \"Middle Name\";\n  SalutationFormula.\"Name 1\"::Surname:\n    NamePart[1] := Surname;\n  SalutationFormula.\"Name 1\"::Initials:\n    NamePart[1] := Initials;\n  SalutationFormula.\"Name 1\"::\"Company Name\":\n    NamePart[1] := \"Company Name\";\nEND;\n\nCASE SalutationFormula.\"Name 2\" OF\n  ...\nEND;\n...\nFOR i := 1 TO 5 DO\n  IF NamePart[i] = '' THEN BEGIN\n    SubStr := '%' + FORMAT(i) + ' ';\n    IF STRPOS(SalutationFormula.Salutation,SubStr) > 0 THEN\n      SalutationFormula.Salutation :=\n        DELSTR(SalutationFormula.Salutation,STRPOS(SalutationFormula.Salutation,SubStr),3);\n  END;\n\nEXIT(STRSUBSTNO(SalutationFormula.Salutation,NamePart[1],\n  NamePart[2],NamePart[3],NamePart[4],NamePart[5]))\n```", "```cs\nCreateCustomer()\n...\n\nCLEAR(Cust);\nCust.SetInsertFromContact(TRUE);\n//* Maintain Contact No. >>>\nCust.\"No.\" := \"No.\";\n//* Maintain Contact No. <<<\nCust.INSERT(TRUE);\nCust.SetInsertFromContact(FALSE);\n```", "```cs\nOnInsert()\nIF \"No.\" = '' THEN BEGIN\n  SalesSetup.GET;\n  SalesSetup.TESTFIELD(\"Customer Nos.\");\n  NoSeriesMgt.InitSeries(SalesSetup.\"Customer Nos.\",\n    xRec.\"No. Series\",0D,\"No.\",\"No. Series\");\nEND;\n...\n```", "```cs\nCreateCustomer()\n...\n\nContBusRel.RESET;\nContBusRel.SETRANGE(\"Contact No.\",\"No.\");\nContBusRel.SETRANGE(\"Link to Table\",ContBusRel.\"Link to Table\"::Customer);\n//* Company Sharing >>>\nContBusRel.SETRANGE(Company, COMPANYNAME);\n//* Company Sharing <<<\nIF ContBusRel.FIND('-') THEN\n  ERROR(\n    Text019,\n\n...\n```", "```cs\nContBusRel.\"Contact No.\" := ContComp.\"No.\";\nContBusRel.\"Business Relation Code\" := RMSetup.\"Bus. Rel. Code for Customers\";\nContBusRel.\"Link to Table\" := ContBusRel.\"Link to Table\"::Customer;\n//* Company Sharing >>>\nContBusRel.Company := COMPANYNAME;\n//* Company Sharing <<<\nContBusRel.\"No.\" := Cust.\"No.\";\nContBusRel.INSERT(TRUE); \n```", "```cs\nUpdateCustomer()\nWITH Cust DO BEGIN\n//* Company Sharing >>>\n CHANGECOMPANY(COMPANYNAME);\n//* Company Sharing <<<\n  GET(ContBusRel.\"No.\");\n  ...\nEND; \n```", "```cs\nContactBusinessRelation2 - OnPreDataItem()\nIF ContactOK AND ((GETFILTERS<>'') OR SquashFilters) THEN\n  ContactOK := FALSE\nELSE\n  CurrReport.BREAK;\n\nContactBusinessRelation2 - OnAfterGetRecord()\nSkipSquashLedgerEntry := FALSE;\nIF NOT SquashFilters THEN BEGIN\n  ContactOK := TRUE;\n  SkipSquashLedgerEntry := TRUE;\n  CurrReport.BREAK;\nEND;\n```", "```cs\nReport - OnPreReport()\nItemFilters := \"Value Entry\".HASFILTER;\n\n//* Squash >>>\nSquashFilters := \"Squash Ledger Entry\".HASFILTER;\n//* Squash <<<\n...\n```", "```cs\nSquash Ledger Entry - OnPreDataItem()\nIF SkipSquashLedgerEntry THEN\n  CurrReport.BREAK;\n\nCASE ContactBusinessRelation2.\"Link to Table\" OF\n  ContactBusinessRelation2.\"Link to Table\"::\"Squash Player\": \n  BEGIN\n    SETRANGE(\"Squash Player No.\",\n      ContactBusinessRelation2.\"No.\");\n  END;\n  ELSE\n    CurrReport.BREAK;\nEND;\nSquash Ledger Entry - OnAfterGetRecord()\nContactOK := TRUE;\n\nIF ContactOK THEN\n  CurrReport.BREAK;\n```", "```cs\nOnPreReport()\n...\nSegCriteriaManagement.InsertCriteriaFilter(\n  \"Segment Header\".GETFILTER(\"No.\"),DATABASE::\"Value Entry\",\n  \"Value Entry\".GETFILTERS,\"Value Entry\".GETVIEW(FALSE));\n//* Squash >>>\nSegCriteriaManagement.InsertCriteriaFilter(\n  \"Segment Header\".GETFILTER(\"No.\"),\n    DATABASE::\"Squash Ledger Entry\",\n    \"Squash Ledger Entry\".GETFILTERS,\n    \"Squash Ledger Entry\".GETVIEW(FALSE));\n//* Squash <<<\n```", "```cs\nSegCriteriaFilter()\n...\n\nCASE TableNo OF\n   ...\n//* Squash Ledger Entry >>>\n  DATABASE::\"Squash Ledger Entry\":\n    BEGIN\n      SquashLedgEntry.SETVIEW(View);\n      EXIT(SquashLedgEntry.GETFILTERS);\n    END;\n//* Squash Ledger Entry <<<\nEND;\n```"]