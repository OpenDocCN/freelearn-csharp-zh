- en: '*Chapter 1*: Setting Up for AR Development'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第一章*：为AR开发设置'
- en: '**Augmented reality** (**AR**) is widely recognized as the next-generation
    computing platform where digital content is seamlessly merged into real-world
    experiences. This book will help get you started with developing your own AR applications
    using the Unity 3D game engine and the AR Foundation toolkit provided by Unity.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**增强现实**（**AR**）被广泛认为是下一代计算平台，其中数字内容无缝融入现实世界体验。这本书将帮助你开始使用Unity 3D游戏引擎和Unity提供的AR
    Foundation工具包开发自己的AR应用程序。'
- en: In this chapter, you will take your first steps by setting up your computer
    for AR development using the Unity 3D game engine. We will begin by briefly defining
    augmented reality, thus setting the context for this industry and some of the
    basics of AR technology. We will then install the Unity software, the AR Foundation
    toolkit, and make sure your system has been set up to develop for Android and/or
    iOS mobile devices. Finally, we'll build and run a test scene to verify things
    are working as they should.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将通过使用Unity 3D游戏引擎设置你的计算机以进行AR开发来迈出第一步。我们将首先简要定义增强现实，从而为这个行业以及AR技术的一些基本概念设定背景。然后，我们将安装Unity软件、AR
    Foundation工具包，并确保你的系统已经设置好以开发Android和/或iOS移动设备。最后，我们将构建并运行一个测试场景，以验证一切是否按预期工作。
- en: 'We will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖以下主题：
- en: Defining augmented reality
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义增强现实
- en: Getting started with Unity, including installation and using Unity
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity入门，包括安装和使用Unity
- en: Preparing your project for AR development, including XR plugins, AR Foundation,
    Input System, and the Universal Render Pipeline
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为AR开发准备你的项目，包括XR插件、AR Foundation、输入系统以及通用渲染管线
- en: Setting up for mobile development (Android ARCore and iOS ARKit)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为移动开发设置（Android ARCore和iOS ARKit）
- en: Note for Experienced Readers
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 经验丰富读者的注意事项
- en: If you are already familiar with Unity, already have it installed on your system,
    and are set up to build for your iOS or Android mobile device, you may be able
    to skim through details related to those topics that are interspersed in this
    chapter.
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你已经熟悉Unity，已经在你的系统上安装了它，并且已经设置好为iOS或Android移动设备构建，你可能可以快速浏览本章中穿插的与这些主题相关的细节。
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: First, you need a PC or Mac that's capable of running Unity. The minimum requirements
    are not difficult; almost any PC or Mac today will be sufficient (see [https://docs.unity3d.com/Manual/system-requirements.html](https://docs.unity3d.com/Manual/system-requirements.html)).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要一台能够运行Unity的PC或Mac。最低要求并不困难；几乎任何今天的PC或Mac都足够使用（见[https://docs.unity3d.com/Manual/system-requirements.html](https://docs.unity3d.com/Manual/system-requirements.html)）。
- en: If you are developing for iOS, you will need a Mac running OSX with the current
    version of XCode installed, and an Apple developer account. If you are developing
    for Android, you can use either a Windows PC or Mac. We will discuss this further
    throughout this chapter.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在为iOS开发，你需要一台运行OSX的Mac，并安装了当前版本的XCode，以及一个Apple开发者账户。如果你正在为Android开发，你可以使用Windows
    PC或Mac。我们将在本章中进一步讨论这个问题。
- en: It is not practical to develop for AR without a device capable of running your
    application. For this chapter (and this book as a whole), you will need either
    an iOS device that supports Apple *ARKit* (search the web as Apple does not appear
    to publish a list; for example, [https://ioshacker.com/iphone/arkit-compatibility-list-iphone-ipad-ipod-touch](https://ioshacker.com/iphone/arkit-compatibility-list-iphone-ipad-ipod-touch))
    or an Android device that supports *ARCore* ([https://developers.google.com/ar/discover/supported-devices](https://developers.google.com/ar/discover/supported-devices)).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 没有能够运行你的应用程序的设备，开发AR是不切实际的。对于本章（以及本书整体），你需要一台支持Apple *ARKit* 的iOS设备（由于Apple似乎没有发布列表，你可以在网上搜索；例如，[https://ioshacker.com/iphone/arkit-compatibility-list-iphone-ipad-ipod-touch](https://ioshacker.com/iphone/arkit-compatibility-list-iphone-ipad-ipod-touch)）或一台支持
    *ARCore* 的Android设备（[https://developers.google.com/ar/discover/supported-devices](https://developers.google.com/ar/discover/supported-devices)）。
- en: Because this chapter is largely about installing tools and packages according
    to your requirements, please work through the topics in this chapter for additional
    technical requirements and to learn how to install them. The GitHub repository
    for this book can be found at [https://github.com/PacktPublishing/Augmented-Reality-with-Unity-AR-Foundation](https://github.com/PacktPublishing/Augmented-Reality-with-Unity-AR-Foundation).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 因为本章主要关于根据您的需求安装工具和包，请仔细阅读本章内容以了解额外的技术要求，并学习如何安装它们。本书的GitHub仓库可以在[https://github.com/PacktPublishing/Augmented-Reality-with-Unity-AR-Foundation](https://github.com/PacktPublishing/Augmented-Reality-with-Unity-AR-Foundation)找到。
- en: Defining Augmented Reality
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义增强现实
- en: According to the Merriam-Webster dictionary, the word *augment* means "to make
    greater, more numerous, larger, or more intense," while *reality* is defined as
    "the quality or state of being real." Considering this, we realize that "augmented
    reality" is all about using digital content to improve our real world to add better
    information, understanding, and value to our experiences.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 根据Merriam-Webster词典，单词*增强*的意思是“使更大、更多、更大或更强烈”，而*现实*被定义为“真实存在的质量或状态。”考虑到这一点，我们意识到“增强现实”就是利用数字内容来改善我们的现实世界，为我们的体验添加更好的信息、理解和价值。
- en: Augmented reality is most commonly associated with *visual* augmentation, where
    computer-generated graphics are combined with actual real-world visuals. When
    using a handheld mobile phone or tablet, for instance, AR combines graphics with
    the on-screen video (I call this *video see-through* AR). Using wearable AR glasses,
    graphics are directly added to your visual field (*optical see-through* AR).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 增强现实最常与*视觉增强*相关联，其中计算机生成的图形与实际现实世界的视觉相结合。例如，当使用手持手机或平板电脑时，AR将图形与屏幕上的视频结合（我称之为*视频透视*AR）。使用可穿戴AR眼镜，图形直接添加到您的视觉场中（*光学透视*AR）。
- en: 'But AR is not simply a computer graphic overlay. In his acclaimed 1997 research
    report, *A Survey of Augmented Reality* ([http://www.cs.unc.edu/~azuma/ARpresence.pdf](http://www.cs.unc.edu/~azuma/ARpresence.pdf)),
    Ronald Azuma proposed that AR must meet the following characteristics:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 但AR不仅仅是计算机图形叠加。在他的备受赞誉的1997年研究报告《增强现实概述》（[http://www.cs.unc.edu/~azuma/ARpresence.pdf](http://www.cs.unc.edu/~azuma/ARpresence.pdf)）中，Ronald
    Azuma提出了AR必须满足以下特征：
- en: '*Combines the real and virtual*: The virtual objects are perceived as real-world
    objects that are sharing the physical space around you.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*结合现实与虚拟*：虚拟对象被感知为与您周围物理空间共享的现实世界对象。'
- en: '*Interactive in real time*: AR is experienced in real time, not pre-recorded.
    For example, cinematic special effects that combine real action with computer
    graphics do not count as AR.'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*实时交互*：AR是实时体验的，不是预先录制的。例如，结合真实动作与计算机图形的电影特效不算作AR。'
- en: '*Registered in 3D*: The graphics must be registered to real-world 3D locations.
    For example, a **heads-up display** (**HUD**) where information is simply overlayed
    in the visual field is not AR.'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*注册在3D中*：图形必须注册到现实世界的3D位置。例如，一个**抬头显示**（**HUD**）只是简单地在视觉场中叠加信息，这不属于增强现实。'
- en: 'To register a virtual object in 3D, the AR device must have the ability to
    track its location in 3D space and map the surrounding environment to place objects
    in the scene. There are multiple technologies and techniques for positional and
    orientation tracking (together referred to as *pose tracking*), as well as environmental
    feature detection, including the following:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要在3D中注册虚拟对象，AR设备必须能够跟踪其在3D空间中的位置并将周围环境映射到场景中以放置对象。存在多种用于位置和方向跟踪（统称为*姿态跟踪*）的技术和技巧，以及环境特征检测，包括以下内容：
- en: '*Geolocation*: GPS provides low-resolution tracking of your location on the
    Earth (GPS accuracy is measured in feet or meters). This is usually good enough
    for wayfinding in a city and identifying nearby businesses, for example, but not
    for more specific positioning.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*地理定位*：GPS提供对地球上的位置的低分辨率跟踪（GPS精度以英尺或米为单位）。这通常足以在城市中导航和识别附近的商业机构，例如，但不适用于更具体的定位。'
- en: '*Image Tracking*: Images from the device''s camera can be used to match the
    predefined or real-time 2D images, such as QR code markers, game cards, or product
    packaging, to display AR graphics that track an image''s pose (3D position and
    orientation) relative to the camera space.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*图像跟踪*：设备摄像头的图像可以用来匹配预定义或实时2D图像，如二维码标记、游戏卡或产品包装，以显示跟踪图像姿态（相对于相机空间的3D位置和方向）的AR图形。'
- en: '*Motion Tracking*: Using the device''s camera and other sensors (including
    inertial measurement by IMU motion sensors), you can compute your position and
    orientation in 3D, and detect visually distinct features in the environment. Academically,
    you may see this referred to as **Simultaneous Localization and Mapping** (**SLAM**).'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*运动跟踪*：使用设备的相机和其他传感器（包括惯性测量仪运动传感器），您可以在 3D 中计算您的位置和方向，并检测环境中的视觉特征。在学术上，您可能会看到这被称为
    **同时定位与地图构建**（**SLAM**）。'
- en: '*Environmental Understanding*: As features are detected in the environment,
    such as X-Y-Z location depth points, they can be clusters to identify horizontal
    and vertical planes, as well as other shapes in 3D. These can be used by your
    application for object placement and interaction with real-world objects.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*环境理解*：当检测到环境中的特征，如 X-Y-Z 位置深度点时，它们可以被聚类以识别水平和垂直平面，以及 3D 中的其他形状。这些可以被您的应用程序用于对象放置和与真实世界对象的交互。'
- en: '*Face and Object Tracking*: Augmented selfie pictures use the camera to detect
    faces and map a 3D mesh that can be used to add a face mask or other (often humorous)
    enhancements to your image. Likewise, other shaped objects can be recognized and
    tracked, as may be required for industrial applications.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*人脸和物体跟踪*：增强现实自拍图片使用相机检测人脸并映射一个可用于添加面部面具或其他（通常是幽默的）增强功能的 3D 网格。同样，其他形状的物体可以被识别和跟踪，这可能适用于工业应用。'
- en: In this book, we will be using many of these techniques in real projects with
    Unity's AR Foundation toolkit, so that you can learn how to build a wide variety
    of AR applications. And we'll also be learning many other details and capabilities
    offered by Unity and AR software, all of which we'll use to improve the quality
    and realism of your graphics and provide engaging interactive experiences for
    your users.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们将使用 Unity 的 AR Foundation 工具包在真实项目中使用许多这些技术，以便您学习如何构建各种 AR 应用程序。我们还将学习
    Unity 和 AR 软件提供的许多其他细节和能力，所有这些都将用于提高您图形的质量和真实感，并为您的用户提供引人入胜的交互体验。
- en: Like all technologies, AR can potentially be used for better or for worse. A
    great exposé on a hypothetical disturbing future, where AR is ubiquitous and as
    consuming as today's mobile media technologies, can be found in this 2016 *Hyper-Reality*
    art video by Keiichi Matsuda ([http://hyper-reality.co/](http://hyper-reality.co/)).
    Hopefully, you can help build a better future!
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 就像所有技术一样，AR 可以被用于更好的或更坏的目的。在 2016 年 Keiichi Matsuda 的 *Hyper-Reality* 艺术视频中，可以看到一个关于假设的令人不安的未来，其中
    AR 无处不在，就像今天的移动媒体技术一样令人着迷([http://hyper-reality.co/](http://hyper-reality.co/))。希望您能帮助构建一个更好的未来！
- en: '![Figure 1.1 – Hyper-Reality video by Keiichi Matsuda (used with permission)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.1 – Keiichi Matsuda 的超现实视频（经许可使用）](img/Figure_1.01.hyper-reality.jpg)'
- en: '](img/Figure_1.01.hyper-reality.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.01.hyper-reality.jpg)'
- en: Figure 1.1 – Hyper-Reality video by Keiichi Matsuda (used with permission)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – Keiichi Matsuda 的超现实视频（经许可使用）
- en: 'In this book, we are using the Unity 3D game engine for development ([https://unity.com/](https://unity.com/)),
    as well as the AR Foundation toolkit package. AR Foundation provides a device-independent
    SDK on top of the device-specific system features provided by Google ARCore, Apple
    ARKit, Microsoft HoloLens, Magic Leap, and others. For further reading and to
    get a good introduction to mobile handheld augmented reality, check out the following
    links:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们使用 Unity 3D 游戏引擎进行开发([https://unity.com/](https://unity.com/))，以及 AR
    Foundation 工具包。AR Foundation 在 Google ARCore、Apple ARKit、Microsoft HoloLens、Magic
    Leap 等提供的特定于设备的系统功能之上提供了一个设备无关的 SDK。有关进一步阅读和了解移动手持增强现实的好介绍，请查看以下链接：
- en: 'ARCore Fundamental Concepts: [https://developers.google.com/ar/discover/concepts](https://developers.google.com/ar/discover/concepts).'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARCore 基本概念：[https://developers.google.com/ar/discover/concepts](https://developers.google.com/ar/discover/concepts)
- en: 'Introducing ARKit: [https://developer.apple.com/augmented-reality/arkit/](https://developer.apple.com/augmented-reality/arkit/).'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 ARKit：[https://developer.apple.com/augmented-reality/arkit/](https://developer.apple.com/augmented-reality/arkit/)
- en: 'Getting Started with AR Development in Unity: [https://developers.google.com/ar/discover/concepts](https://developers.google.com/ar/discover/concepts).'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Unity 中开始 AR 开发：[https://developers.google.com/ar/discover/concepts](https://developers.google.com/ar/discover/concepts)
- en: Let's start developing AR applications with Unity. First, you'll need to install
    Unity on your development computer.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用 Unity 开始开发 AR 应用程序。首先，您需要在您的开发计算机上安装 Unity。
- en: Getting started with Unity
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Unity 开始
- en: To develop AR applications with Unity, you need to install Unity on your development
    machine. In this section, we'll step through the installation process using Unity
    Hub, create a new Unity project, and introduce the basics of using the Unity Editor
    interface.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Unity 开发 AR 应用程序，您需要在您的开发机器上安装 Unity。在本节中，我们将通过使用 Unity Hub 步步讲解安装过程，创建一个新的
    Unity 项目，并介绍使用 Unity 编辑器界面的基础知识。
- en: Installing Unity Hub
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Unity Hub
- en: '**Unity Hub** is a desktop application that serves as a portal to many of the
    resources developers may need to use Unity in their workflows. For now, we''ll
    be using the **Installs** menu to install a version of the Unity Editor. Then,
    we''ll use the **Projects** menu to create and manage our Unity projects. To do
    this, follow these steps:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**Unity Hub** 是一个桌面应用程序，充当开发者使用 Unity 的工作流程中可能需要的许多资源的门户。目前，我们将使用 **安装** 菜单来安装
    Unity 编辑器的一个版本。然后，我们将使用 **项目** 菜单来创建和管理我们的 Unity 项目。为此，请按照以下步骤操作：'
- en: Please download and install the **Unity Hub** program from [https://unity3d.com/get-unity/download](https://unity3d.com/get-unity/download).
    Generally, you'll always want to use Unity Hub to install versions of Unity rather
    than downloading a Unity version installer directly.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请从 [https://unity3d.com/get-unity/download](https://unity3d.com/get-unity/download)
    下载并安装 **Unity Hub** 程序。通常，您总是希望使用 Unity Hub 来安装 Unity 的版本，而不是直接下载 Unity 版本安装程序。
- en: If you haven't already, you may need to activate a Unity **User License**. This
    is free for the *Student* and *Community* plans; you can decide to upgrade to
    *Plus* or *Pro* at a later time. All license plans include the same versions of
    Unity; no features are disabled for free plans. The paid plans add access to professional
    cloud services that are very useful but not necessary for project development.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您还没有激活 Unity **用户许可证**，可能需要这样做。对于 *学生* 和 *社区* 计划，这是免费的；您可以在以后决定升级到 *高级* 或
    *专业* 计划。所有许可证计划都包括相同的 Unity 版本；免费计划不会禁用任何功能。付费计划增加了对专业云服务的访问权限，这些服务非常有用，但对于项目开发并非必需。
- en: Use the **Download Unity Hub** button, as shown in the following screenshot
    (you may need to agree to the *Terms of Service* first):![Figure 1.2 – Installing
    Unity Hub instead of downloading Unity directly
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下截图所示的 **下载 Unity Hub** 按钮（您可能需要首先同意 *服务条款*）：![图 1.2 – 安装 Unity Hub 而不是直接下载
    Unity
- en: '](img/Figure_1.02-download-hub.jpg)'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_1.02-download-hub.jpg)'
- en: Figure 1.2 – Installing Unity Hub instead of downloading Unity directly
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.2 – 安装 Unity Hub 而不是直接下载 Unity
- en: With Unity Hub installed and open, you'll see menus for **Learn** and **Community**.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装并打开 Unity Hub 后，您将看到 **学习** 和 **社区** 菜单。
- en: Clicking **Learn** takes you to *Unity Learn* projects and tutorials (including
    downloads for the various project assets). These can range from 5-minute tutorials
    to projects that take 15 hours to complete!
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点击 **学习** 将您带到 *Unity Learn* 项目和教程（包括各种项目资产的下载）。这些教程可以从 5 分钟的快速教程到需要 15 小时才能完成的项目不等！
- en: The **Community** menu provides links to many other Unity-hosted resources,
    including *Unity Now* conference talks, *Unity Blog*, *Answers*, *Q&As*, and *Forums*.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**社区**菜单提供了许多其他 Unity 托管资源的链接，包括 *Unity Now* 会议演讲、*Unity 博客*、*问答*、*Q&A* 和 *论坛*。'
- en: Now, let's install a version of the Unity Editor.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们安装一个 Unity 编辑器的版本。
- en: Installing a Unity Editor
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Unity 编辑器
- en: 'When starting a new project, I like to use the latest `.README` file of this
    book''s GitHub repository. Install a copy of the Unity Editor now, as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当开始一个新项目时，我喜欢使用这本书 GitHub 仓库的最新 `.README` 文件。现在安装 Unity 编辑器，操作如下：
- en: Select the **Installs** tab, then press **ADD** to open the **Add Unity Version**
    box.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **安装** 选项卡，然后按 **添加** 打开 **添加 Unity 版本** 窗口。
- en: From here, you can select a version of Unity to install.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从这里，您可以选择要安装的 Unity 版本。
- en: Note – Unity Versions
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意 – Unity 版本
- en: In the current Unity version numbering system, the major release number (for
    example, Unity **2020**.x.x) loosely correlates with calendar years. The most
    stable versions are ones designated **LTS**, for **Long-Term Support**; for example,
    *Unity 2020.3.14f1 (LTS)*. LTS versions receive periodic maintenance and security
    updates but no new features. Point releases lower than LTS (for example, *Unity
    2021***.1***.15f1*) are considered technical releases, which are reasonably stable
    while new features and bug fixes are currently in development. For the more adventurous,
    Beta and Alpha prereleases include cutting-edge features but with added risks.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在当前的 Unity 版本编号系统中，主版本号（例如，Unity **2020**.x.x）大致与日历年份相关联。最稳定的版本是标记为 **LTS**
    的版本，即 **长期支持**；例如，*Unity 2020.3.14f1 (LTS)*。LTS 版本会定期接收维护和安全更新，但没有新功能。低于 LTS 的点版本（例如，*Unity
    2021***.1***.15f1*）被认为是技术版本，它们在开发新功能和修复错误时相对稳定。对于更冒险的用户，Beta 和 Alpha 预发布版包括前沿功能，但风险也更高。
- en: Once you've selected the version of Unity you wish to install, click **Next**
    to see the **Add modules to your install** options. Here, you want to know what
    platforms and devices you expect to target with your projects.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您选择了希望安装的 Unity 版本，点击**下一步**以查看**添加模块到您的安装**选项。在这里，您需要知道您期望针对哪些平台和设备进行项目开发。
- en: Module software can be quite large and may take time to install, so only pick
    what you know you will need soon. You can always come back later and add (or remove)
    modules as needed. Specifically, if you are developing your AR project for Android
    and ARCore, choose **Android Build Support**. If you are targeting iOS and ARKit,
    choose **iOS Build Support**. Likewise, if you are targeting other devices such
    as HoloLens or Magic Leap, choose the corresponding modules.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 模块软件可能相当大，安装可能需要时间，因此请只选择您知道您很快就会需要的模块。您总是可以在以后回来并根据需要添加（或删除）模块。具体来说，如果您正在为
    Android 和 ARCore 开发 AR 项目，请选择**Android 构建支持**。如果您针对 iOS 和 ARKit，请选择**iOS 构建支持**。同样，如果您针对其他设备，如
    HoloLens 或 Magic Leap，请选择相应的模块。
- en: Depending on the modules you selected, you may need to press **Next** and accept
    an additional user license agreement. Then, press **Done** to download and install
    the software.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据您选择的模块，您可能需要点击**下一步**并接受额外的用户许可协议。然后，点击**完成**以下载和安装软件。
- en: Tip – Where to Install Unity
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 小贴士 – Unity 的安装位置
- en: Using the **gear** icon in the top-right of the Unity Hub window opens a **Preferences**
    window. Under the **General** preference tab, you can select the folder where
    your **User Editors** are installed on your computer. Since these can take up
    a considerable amount of disk space, you may not want to use the default location.
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 Unity Hub 窗口右上角的**齿轮**图标可以打开**首选项**窗口。在**常规**首选项选项卡下，您可以选择您的**用户编辑器**在计算机上安装的文件夹。由于这些文件可能占用相当大的磁盘空间，您可能不想使用默认位置。
- en: If you have any problems with Unity Hub or otherwise want to join in with discussions,
    visit the relevant section of the Unity community discussion forum at [https://forum.unity.com/forums/unity-hub.142/](https://forum.unity.com/forums/unity-hub.142/).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在 Unity Hub 中遇到任何问题或希望参与讨论，请访问 Unity 社区讨论论坛的相关部分，网址为 [https://forum.unity.com/forums/unity-hub.142/](https://forum.unity.com/forums/unity-hub.142/)。
- en: Now, you're ready to create your first Unity project.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已准备好创建您的第一个 Unity 项目。
- en: Creating and managing Unity projects
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建和管理 Unity 项目
- en: 'You will use Unity Hub to create new Unity projects. Projects are created in
    a specific folder on your system, with a set of subfolders populated with default
    settings and content based on the starting template you choose. Projects are opened
    with a specific version of Unity and continue to be associated with that specific
    version. To start a new project, complete the following steps:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 您将使用 Unity Hub 创建新的 Unity 项目。项目在系统中的特定文件夹中创建，包含基于您选择的起始模板的默认设置和内容的子文件夹。项目使用特定的
    Unity 版本打开，并继续与该特定版本关联。要开始新项目，请完成以下步骤：
- en: Open the Unity Hub, select the **Projects** tab, and then click the **New**
    button. Notice the down arrow of the **New** button, which lets you select a Unity
    version to use for the new project that's different from the one you currently
    have installed.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Unity Hub，选择**项目**选项卡，然后点击**新建**按钮。注意**新建**按钮下方的向下箭头，它允许您选择用于新项目的 Unity 版本，该版本与您当前安装的版本不同。
- en: The `D:\Documens\UnityProjects`:![Figure 1.3 – Creating a new project with the
    URP template in Unity Hub
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`D:\Documens\UnityProjects`:![图 1.3 – 在 Unity Hub 中使用 URP 模板创建新项目'
- en: '](img/Figure_1.03-new-project.jpg)'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.03 新项目](img/Figure_1.03-new-project.jpg)'
- en: Figure 1.3 – Creating a new project with the URP template in Unity Hub
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.3 – 在 Unity Hub 中使用 URP 模板创建新项目
- en: Note – We're Using the Universal Render Pipeline
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意 - 我们正在使用通用渲染管线
- en: Unity offers multiple alternative render pipelines. The legacy "built-in" render
    pipeline sports better support from older third-party assets as it came before
    the newer **Scriptable Render Pipeline** (**SRP**) system ([https://unity.com/srp](https://unity.com/srp)),
    but the newer SRP-based pipelines are more performant and flexible. These include
    the **High Definition Render Pipeline** (**HDRP**) for high-quality rendering
    using high-end graphics hardware. There's also the **Universal Render Pipeline**
    (**URP**), which is very fast, even on mobile devices, while providing excellent
    rendering quality. I recommend starting new AR projects with URP.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Unity 提供了多个替代渲染管线。传统的“内置”渲染管线由于在较新的 **可脚本渲染管线**（**SRP**）系统之前出现，因此对旧版第三方资产的支持更好（[https://unity.com/srp](https://unity.com/srp)），但基于较新
    SRP 的管线性能更优且更灵活。这些包括用于使用高端图形硬件进行高质量渲染的 **高级渲染管线**（**HDRP**），以及非常快速且在移动设备上也能提供优秀渲染质量的
    **通用渲染管线**（**URP**）。我建议使用 URP 开始新的 AR 项目。
- en: Tip – Avoid Spaces in Project Names
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 小贴士 - 避免在项目名称中使用空格
- en: At the time of writing, there's a bug in some ARCore features that require that
    your project pathname contains no spaces, including the project name and all folder
    names up the tree.
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在撰写本文时，某些 ARCore 功能中存在一个错误，要求您的项目路径名称中不包含空格，包括项目名称以及树中的所有文件夹名称。
- en: After pressing **Create**, it may take a few moments for Unity to create your
    new project, import the default assets, and perform other setup steps before opening
    the Unity Editor window.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在按下 **创建** 后，Unity 可能需要一些时间来创建您的新项目、导入默认资产以及执行其他设置步骤，然后才能打开 Unity 编辑器窗口。
- en: Tip – Upgrading Unity Projects
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 小贴士 - 升级 Unity 项目
- en: A great thing about Unity Hub is its ability to manage multiple versions of
    Unity and all your Unity projects. I tend to start new projects with the latest
    official release, though inevitably, new versions of the Unity Editor will be
    released. In general, it's best to stick with the version of Unity you used to
    create your project. If you need to upgrade to a newer version, do so cautiously
    and deliberately.
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Unity Hub 的一个优点是它能够管理多个版本的 Unity 和所有您的 Unity 项目。我倾向于使用最新的官方版本开始新项目，尽管不可避免地，新的
    Unity 编辑器版本将会发布。一般来说，最好坚持使用您创建项目时使用的 Unity 版本。如果您需要升级到新版本，请谨慎且故意地这样做。
- en: Generally, going to a new minor update (for example, Unity 2021.2.**3** to 2021.2.**16**)
    is safe. Going to a point release (for example, Unity 2021.**2.x** to 2021.**3.x**)
    is usually OK but you may encounter unexpected problems. Upgrading to a new major
    release is an unusual event for me in my projects. In any of these cases, be sure
    that your project has been backed up (for example, on GitHub) before opening the
    project in a different version of Unity, and schedule time to resolve unforeseen
    problems.
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通常，升级到新的小版本（例如，从 Unity 2021.2.**3** 升级到 2021.2.**16**）是安全的。升级到点版本（例如，从 Unity
    2021.**2.x** 升级到 2021.**3.x**）通常是可以的，但您可能会遇到意外问题。在我的项目中，升级到新的大版本是一个不寻常的事件。在任何这些情况下，确保在以不同版本的
    Unity 打开项目之前，您的项目已经备份（例如，在 GitHub 上），并安排时间解决意外问题。
- en: Unity includes automated tools to facilitate upgrading a project to a new version
    when it's opened in Unity. Your assets will be reimported. While upgrading to
    newer versions is supported, downgrading to a previous version is not.
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Unity 包含自动化工具，以便在 Unity 中打开项目时将其升级到新版本。您的资产将被重新导入。虽然支持升级到新版本，但不支持降级到旧版本。
- en: When I create a new project in Unity, one of the first things I do is set **Target
    Platform** in **Build Settings** to the first platform that I know I will be using
    to develop and test my project. There are advantages to doing this as early as
    possible, as any new assets you add to the project will be imported and processed
    for your target platform. You are not *required* to do this now, but I do recommend
    that you perform the following steps. We will go into more detail later in this
    chapter (in the platform-specific topic sections).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当我在 Unity 中创建新项目时，我做的第一件事之一是在 **构建设置** 中设置 **目标平台** 为我知道我将要用于开发和测试项目的第一个平台。尽早这样做有优势，因为您添加到项目的任何新资产都将导入并为您目标平台进行处理。您现在**不必须**这样做，但我确实建议您执行以下步骤。我们将在本章后面的平台特定主题部分中详细介绍。
- en: 'With your project opened in Unity, follow these steps:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Unity 中打开您的项目后，请按照以下步骤操作：
- en: Open the **Build Settings** window by going to **File | Build Settings**.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过访问**文件 | 构建设置**来打开**构建设置**窗口。
- en: In the **Platform** selection panel, choose your target platform. For example,
    if you're developing for Android ARCore, select **Android**, while if you're developing
    for Apple ARKit, choose **iOS**.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**平台**选择面板中，选择您的目标平台。例如，如果您为Android ARCore开发，请选择**Android**，如果您为Apple ARKit开发，请选择**iOS**。
- en: If the platform you require is not listed or is disabled, you may have forgotten
    to add the platform build module when you installed this version of Unity. Use
    **Unity Hub** to add the module now.
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您需要的平台未列出或已禁用，您可能忘记在安装此版本的Unity时添加平台构建模块。现在使用**Unity Hub**添加模块。
- en: Tip – You Can Add Target Platform Modules via Unity Hub
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 小贴士 – 您可以通过Unity Hub添加目标平台模块
- en: If you are missing support for a target platform, open **Unity Hub**, click
    **Installs**, and then, for the specific Unity version you're using, click the
    3-dot context menu and choose **Add Modules**. From there, you can use the checkboxes
    to add new modules.
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您缺少对目标平台的支持，请打开**Unity Hub**，点击**安装**，然后，对于您正在使用的特定Unity版本，点击3点上下文菜单并选择**添加模块**。从那里，您可以使用复选框添加新模块。
- en: You don't need to worry about the other build settings right now. Press the
    **Switch Platform** button. It may take a few minutes to reimport your project's
    assets.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在不需要担心其他构建设置。按下**切换平台**按钮。重新导入项目资产可能需要几分钟时间。
- en: At this point, your Unity Editor should have opened a new Unity project, showing
    a default URP **SampleScene**. Feel free to explore the editor windows and scene
    objects. It may look daunting at first, but we'll review the user interface next
    to help you get more comfortable.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您的Unity编辑器应该已经打开了一个新的Unity项目，显示默认的URP**SampleScene**。您可以自由地探索编辑器窗口和场景对象。一开始可能看起来令人畏惧，但我们将回顾用户界面，以帮助您更加熟悉。
- en: Introducing the Unity Editor interface
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍Unity编辑器界面
- en: When you open the Unity Editor for the first time, you will notice that it has
    a lot of separate window panels that contain different content. Let's explore
    these together.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 当您第一次打开Unity编辑器时，您会注意到它有许多不同的窗口面板，包含不同的内容。让我们一起来探索这些。
- en: 'The following screenshot shows **Unity Editor** with the Universal Render Pipeline
    template''s **SampleScene**. The windows are arranged in a default layout. This
    "under construction" scene demonstrates many of the awesome rendering features
    of Unity that may or may not be relevant in an AR project. But let''s focus on
    Unity itself for a moment:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了带有通用渲染管道模板的**Unity编辑器**的**SampleScene**。窗口按照默认布局排列。这个“建设中”的场景展示了Unity许多令人惊叹的渲染功能，这些功能可能在AR项目中相关或不相关。但让我们先专注于Unity本身：
- en: '![Figure 1.4 – Unity Editor with the URP sample scene open'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.4 – 打开URP示例场景的Unity编辑器'
- en: '](img/Figure_1.04-default-layout-numbered.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.04-default-layout-numbered.jpg)'
- en: Figure 1.4 – Unity Editor with the URP sample scene open
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.4 – 打开URP示例场景的Unity编辑器
- en: 'The Unity Editor is arranged in a layout of separate tabbed windows. An **Editor
    window** is a UI panel containing specific types of information and controls.
    More windows can be opened via the **Window** main menu. Let''s review each window
    in the preceding screenshot and introduce some other fundamental terminology since
    you''re getting to know Unity:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Unity编辑器以单独的标签页窗口布局排列。**编辑器窗口**是一个包含特定类型信息和控制的UI面板。可以通过**窗口**主菜单打开更多窗口。让我们回顾先前的截图中的每个窗口，并介绍一些其他基本术语，因为您正在了解Unity：
- en: '**Hierarchy** window (*1*): The tree view of the current scene''s GameObjects.
    Shows the same content as the scene in a hierarchical tree view of parent-child
    objects.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**层次结构**窗口（*1*）：当前场景GameObject的树形视图。以父子对象的层次树视图显示与场景相同的内容。'
- en: You may have noticed in the preceding screenshot that, while examining both
    the **Scene** and **Hierarchy** windows, the **Safety Hat** GameObject is currently
    selected and highlighted. A Unity **GameObject** is an object that is part of
    a scene.
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可能已经注意到，在检查**场景**和**层次结构**窗口时，**安全帽**GameObject当前被选中并突出显示。Unity的**GameObject**是场景中的一部分对象。
- en: '**Scene** view window (*2*): This shows a 3D view of the current scene. Along
    the top of the scene window is an icon toolbar for controlling your working view
    of the scene.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**场景**视图窗口（*2*）：这显示了当前场景的3D视图。在场景窗口的顶部有一个图标工具栏，用于控制场景的工作视图。'
- en: '**Inspector** window (*3*): The components and properties of the selected GameObject.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**检查器**窗口（*3*）：所选GameObject的组件和属性。'
- en: GameObjects have **components** attached that define the runtime behavior of
    a GameObject. Unity includes many built-in components, and you can write your
    own using the C# programming language. Each component may have individual **properties**;
    that is, settings that control the component.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 游戏对象附有**组件**，这些组件定义了游戏对象的运行时行为。Unity包含许多内置组件，您可以使用C#编程语言编写自己的组件。每个组件可能有单独的**属性**；即控制组件的设置。
- en: You can see that the Safety Hat has **Transform** and **Mesh Renderer** components,
    for instance.
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，您可以看到安全帽有**变换**和**网格渲染器**组件。
- en: GameObjects always have one **Transform** component. GameObjects may also have
    a 3D mesh, renderer, and materials that determine how it's rendered in the scene.
    There are many other components you can add that extend an object's behavior,
    physics, and interactions.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 游戏对象始终有一个**变换**组件。游戏对象也可能有一个3D网格、渲染器和材质，这些决定了它在场景中的渲染方式。您还可以添加许多其他组件来扩展对象的行为、物理和交互。
- en: '`Assets/` folder, located under the project''s root directory.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (`Assets/`文件夹，位于项目根目录下）。
- en: '**Assets** include files that may be added to objects in a scene, such as images,
    audio, video, materials, and scripts. Scenes themselves are saved as assets. Complex
    predefined GameObjects can also be saved as assets, called **prefabs**.'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**资产**包括可能添加到场景中对象的文件，例如图像、音频、视频、材质和脚本。场景本身作为资产保存。复杂预定义的游戏对象也可以作为资产保存，称为**预制件**。'
- en: '**Console** window (*4*, hidden behind Project tab): This shows error and information
    messages from your application.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**控制台**窗口（*4*，位于项目标签页之后隐藏）：显示应用程序的错误和信息消息。'
- en: '**Game** view window (*2*, hidden behind Scene tab): This shows the user''s
    view, as rendered by the in-scene camera GameObject.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**游戏**视图窗口（*2*，位于场景标签页之后隐藏）：显示用户视图，由场景中的相机游戏对象渲染。'
- en: '**Main Menu**: At the top of the **Editor** window is a menu where you can
    access many features of Unity. Adding additional packages to your project may
    add more menu items.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主菜单**：位于**编辑器**窗口顶部，是一个可以访问Unity许多功能的菜单。向项目中添加额外的包可能会添加更多的菜单项。'
- en: '**Main Toolbar**: At the top of the **Editor** window and below the **Main**
    menu is an icon toolbar organized into three sections. On the left-hand side,
    there are tools for editing the Scene view (including **Move Tool**, **Rotate
    Tool**, and **Scale Tool**). In the center, there are the play mode controls (including
    **Play** and **Pause**). Finally, on the right, there are additional controls,
    including some that allow you to access your Unity account and cloud services.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主工具栏**：位于**编辑器**窗口顶部和**主菜单**下方，是一个分为三个部分的图标工具栏。在左侧，有用于编辑场景视图的工具（包括**移动工具**、**旋转工具**和**缩放工具**）。在中间，有播放模式控制（包括**播放**和**暂停**）。最后，在右侧，有额外的控制项，包括一些允许您访问您的Unity账户和云服务的控制项。'
- en: 'Take a moment to explore the main menu items:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 花点时间探索主菜单项：
- en: The **File** menu is for creating, saving, and loading scenes and accessing
    your build settings.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件**菜单用于创建、保存和加载场景以及访问您的构建设置。'
- en: The **Edit** menu is for selecting and editing objects in the project, accessing
    project-specific settings and preferences, and other editor-related tools.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编辑**菜单用于在项目中选择和编辑对象，访问项目特定的设置和首选项，以及其他与编辑器相关的工具。'
- en: The `Assets/` folder).
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (`Assets/`文件夹）。
- en: The **GameObject** menu lets you add new objects to the current scene.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**游戏对象**菜单允许您向当前场景添加新对象。'
- en: The **Component** menu provides a categorized list of components that you can
    add to the currently selected GameObject in the scene.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组件**菜单提供了一个分类列表，您可以在场景中当前选定的游戏对象上添加这些组件。'
- en: The **Window** menu is where you can find and open additional windows that provide
    more features. Importing new packages into Unity may add new menu bar items.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**窗口**菜单是您可以找到并打开提供更多功能的额外窗口的地方。将新包导入Unity可能会添加新的菜单栏项。'
- en: Information – Using Play Mode in AR Projects
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 信息 - 在AR项目中使用播放模式
- en: In most Unity projects, you can press the **Play** button (in the main toolbar)
    to go into *play mode* and run your scene in the Editor, running on your desktop
    rather than on the device. This is not so simple with an augmented reality scene
    since it requires an onboarding phase, where the software scans the environment
    for physical world features and then uses the physical device sensors for positional
    tracking. There are several solutions to facilitate your iterative developer workflow,
    all of which we will discuss in [*Chapter 3*](B15145_03_Final_SB_epub.xhtml#_idTextAnchor064)*,
    Improving the Developer Workflow*.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在大多数 Unity 项目中，您可以按 **Play** 按钮（在主工具栏中）进入 *播放模式* 并在编辑器中运行您的场景，在您的桌面上运行而不是在设备上。对于增强现实场景来说，这并不简单，因为它需要一个启动阶段，软件会扫描环境中的物理世界特征，然后使用物理设备的传感器进行位置跟踪。有几种解决方案可以简化您的迭代开发工作流程，我们将在
    [*第 3 章*](B15145_03_Final_SB_epub.xhtml#_idTextAnchor064)*，改进开发工作流程* 中讨论。
- en: You can personalize and rearrange the editor's window layout to suit your needs
    and preferences. Layouts can be saved and loaded using the **Layout** selection
    menu in the top-right corner of the editor. The screenshots in this book use layouts
    that are different from Unity's default layout.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以根据自己的需求和偏好个性化并重新排列编辑器窗口布局。可以使用编辑器右上角的 **Layout** 选择菜单保存和加载布局。本书中的截图使用的是与
    Unity 默认布局不同的布局。
- en: OK, enough talk – this is a hands-on book, so let's get hands-on right away
    and try out the Unity Editor.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，别再说了——这是一本实践手册，所以让我们立刻动手，尝试一下 Unity 编辑器。
- en: Basics of using the Unity Editor
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Unity 编辑器使用基础
- en: 'In this section, we''ll build a trivial scene with a 3D cube that gives us
    more context to explain how to use Unity:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将构建一个包含 3D 立方体的简单场景，以便我们能够更好地解释如何使用 Unity：
- en: Create a new scene from the main menu by selecting **File | New Scene**.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择主菜单中的 **File | New Scene** 创建一个新的场景。
- en: A **New Scene** window will appear (Unity 2020+ only) that lets you select a
    scene template. Choose the one named **Basic (Built-in)**. Then, press **Create**.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将出现一个 **New Scene** 窗口（仅适用于 Unity 2020+），让您选择场景模板。选择名为 **Basic (Built-in)**
    的模板。然后，按 **Create**。
- en: 'You will notice right away that the new scene contains two default GameObjects:
    a Main Camera and a Directional Light.'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您会立即注意到新场景包含两个默认的 GameObject：主摄像机和方向光。
- en: Add a 3D cube to the scene by clicking **GameObject | 3D Object | Cube**. With
    that, the Cube will be added to the scene and be visible in both the **Scene**
    and **Hierarchy** windows.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击 **GameObject | 3D Object | Cube** 将 3D 立方体添加到场景中。这样，立方体就会被添加到场景中，并在 **Scene**
    和 **Hierarchy** 窗口中可见。
- en: Ensure the Cube rests at the origin of our scene; that is, the `(0, 0, 0)` X-Y-Z
    coordinates. With **Cube** selected in the **Hierarchy** window, look in the **Inspector**
    window and set its **Transform** | **Position** | **X**, **Y**, and **Z** values
    to zero.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保立方体位于场景的原点；也就是说，`(0, 0, 0)` X-Y-Z 坐标。在 **Hierarchy** 窗口中选中 **Cube**，在 **Inspector**
    窗口中设置其 **Transform** | **Position** | **X**、**Y** 和 **Z** 的值都为 0。
- en: Let's rotate the Cube. In the same `-20`.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们旋转立方体。在相同的 `-20`。
- en: 'The scene may now look as follows:'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 场景现在可能看起来如下：
- en: '![](img/Figure_1.05-cube-scene.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_1.05-cube-scene.jpg)'
- en: Figure 1.5 – New scene with a 3D cube
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5 – 带有 3D 立方体的新场景
- en: At this point, I encourage you to get familiar with the **Scene** view controls.
    Using a 3-button mouse on Windows, for example, *right-click* in the window to
    pivot the view, *Alt + left-click* to orbit the view around the "center" of the
    view, and *center-click* the mouse to move the view. To move closer or further
    out (zoom), use *Alt + right-click* or use the scroll wheel. Note that the directional
    gizmo in the top right of the **Scene** window indicates the current view showing
    the X, Y, and Z axes. For further information (including one- or two-button mice),
    see [https://docs.unity3d.com/Manual/SceneViewNavigation.html](https://docs.unity3d.com/Manual/SceneViewNavigation.html).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我鼓励您熟悉 **Scene** 视图控制。例如，在 Windows 上使用三按钮鼠标，在窗口中 *右键单击* 来旋转视图，*Alt + 左键单击*
    来围绕视图的“中心”旋转视图，*中心单击* 鼠标来移动视图。要靠近或远离（缩放），请使用 *Alt + 右键单击* 或使用鼠标滚轮。请注意，**Scene**
    窗口右上角的定向 Gizmo 表示当前视图，显示 X、Y 和 Z 轴。有关更多信息（包括单按钮或双按钮鼠标），请参阅 [https://docs.unity3d.com/Manual/SceneViewNavigation.html](https://docs.unity3d.com/Manual/SceneViewNavigation.html)。
- en: Tip – RGB == XYZ
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 提示——RGB == XYZ
- en: It's handy to remember that the red, green, and blue colors in gizmos correspond
    to the X, Y, and Z axes, respectively.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，在 Gizmo 中的红色、绿色和蓝色颜色分别对应 X、Y 和 Z 轴是有用的。
- en: 'We modified the Cube''s transform by editing its numerical values in the **Inspector**
    window. You can also transform an object by directly manipulating it in the **Scene**
    window. For example, in the main toolbar, select **Rotate Tool**. With the Cube
    currently selected, you should now see the rotate gizmo rendered on the object
    in the scene. You can grab one of the gizmo handles (X, Y, or Z) and drag it to
    rotate the object around that axis, as shown in the following screenshot:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过在**检查器**窗口中编辑其数值来修改了立方体的变换。您也可以通过直接在**场景**窗口中操作对象来变换对象。例如，在主工具栏中，选择**旋转工具**。当立方体被选中时，您现在应该看到场景中对象上的旋转控件。您可以抓住控件（X、Y或Z）中的一个并拖动它来绕该轴旋转对象，如下面的截图所示：
- en: '![Figure 1.6 – Rotate tool selected'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.6 – 选择旋转工具'
- en: '](img/Figure_1.06-cube-rotate-tool.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_1.06-cube-rotate-tool.jpg]'
- en: Figure 1.6 – Rotate tool selected
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.6 – 选择旋转工具
- en: For more on transforming objects directly in the **Scene** window, see the Unity
    Manual ([https://docs.unity3d.com/Manual/PositioningGameObjects.html](https://docs.unity3d.com/Manual/PositioningGameObjects.html)).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 有关在**场景**窗口中直接变换对象的更多信息，请参阅Unity手册（[https://docs.unity3d.com/Manual/PositioningGameObjects.html](https://docs.unity3d.com/Manual/PositioningGameObjects.html)）。
- en: 'This was a very brief introduction to get you started. As a matter of habit,
    you should always save your work after accomplishing something. Let''s save the
    scene, as follows:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常简短的介绍，以帮助您开始。作为一个习惯，您应该在完成某事之后总是保存您的作品。让我们按照以下步骤保存场景：
- en: From the main menu, select **File | Save As**, which will open the **Save Scene**
    window.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主菜单中选择**文件 | 另存为**，这将打开**保存场景**窗口。
- en: Navigate to the `Scenes/` subfolder (in your project's `Assets` folder).
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`Scenes/`子文件夹（在您的项目`Assets`文件夹中）。
- en: Give the scene a name, such as `My Cube`, and press **Save**.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给场景起一个名字，例如`My Cube`，然后按**保存**。
- en: Tip – Confused or Overwhelmed? Take it a Step at a Time
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 小贴士 – 感到困惑或不知所措？一次只迈出一小步
- en: As with any professional development and creative application, there's a huge
    assortment of things you can do with Unity, and it provides many tools to help
    you achieve your objectives. If you are confused or overwhelmed, a great strategy
    is to try and focus only on the menu items and windows you need right now and
    ignore the rest. We'll walk you through this with simple step-by-step instructions.
    As you gain experience and confidence, you'll expand your radius of familiarity
    and see how it all fits together. To be honest, I still learn new things about
    Unity each time I work on a project.
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 就像任何专业开发和创意应用一样，Unity提供了大量您可以做的事情，并且它提供了许多工具来帮助您实现目标。如果您感到困惑或不知所措，一个很好的策略是只关注您现在需要的菜单项和窗口，忽略其余部分。我们将通过简单的分步说明向您介绍这个过程。随着您经验的积累和自信的提升，您将扩大您熟悉的范围，并了解它们是如何相互关联的。说实话，每次我在项目上工作时，我都会学到关于Unity的新知识。
- en: Of course, this was just a brief introduction to Unity. If you need to find
    out more, please head over to **Unity Learn**, where there are some excellent
    beginner tutorials (using the [https://unity.com/learn/get-started](https://unity.com/learn/get-started)
    link or the **Learn** tab in **Unity Hub**).
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这只是Unity的简要介绍。如果您需要了解更多信息，请前往**Unity Learn**，那里有一些优秀的入门教程（使用[https://unity.com/learn/get-started](https://unity.com/learn/get-started)链接或**Unity
    Hub**中的**学习**标签）。
- en: Also, take a look at the **Unity Manual** introductory topics ([https://docs.unity3d.com/Manual/UnityOverview.html](https://docs.unity3d.com/Manual/UnityOverview.html)).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还可以查看**Unity手册**的入门主题（[https://docs.unity3d.com/Manual/UnityOverview.html](https://docs.unity3d.com/Manual/UnityOverview.html)）。
- en: Organizing your project assets
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组织您的项目资产
- en: You have access to your project assets in the **Project** window. I like to
    keep the project assets that I create in their own top-level folder, separate
    from other assets I might import from third-party sources such as the Unity Asset
    Store.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在**项目**窗口中访问您的项目资产。我喜欢将我自己创建的项目资产保存在自己的顶级文件夹中，与其他可能从第三方来源（如Unity Asset Store）导入的资产分开。
- en: 'Likewise, Unity''s URP project template includes **SampleScene** and example
    assets. I suggest moving the URP example assets into their own folder to keep
    them separate from your own application assets. You can do this by following these
    steps:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，Unity的URP项目模板包括**SampleScene**和示例资产。我建议将URP示例资产移动到自己的文件夹中，以保持它们与您的应用程序资产分离。您可以通过以下步骤完成此操作：
- en: Create an `Assets` folder named `URP-examples`. In the `URP-examples`.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`URP-examples`的`Assets`文件夹。在`URP-examples`。
- en: Drag each of the example folders into the `URP-examples` one, namely `ExampleAssets`,
    `Materials`, `Scenes`, `Scripts`, `TutorialInfo`, and the `Readme` file.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将每个示例文件夹拖放到`URP-examples`中，即`ExampleAssets`、`Materials`、`Scenes`、`Scripts`、`TutorialInfo`和`Readme`文件。
- en: Leave the `Presets` and `Settings` folders in the root `Assets/` folder.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Presets`和`Settings`文件夹留在根`Assets/`文件夹中。
- en: Create an `Assets` folder named `_App`. I like to prepend an underscore to this
    folder's name so that it remains at the top of the list.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`_App`的`Assets`文件夹。我喜欢在文件夹名称前加上下划线，以便它保持在列表的顶部。
- en: Create child folders inside `_App/` named `Materials`, `Prefabs`, `Scenes`,
    and `Scripts`. These subfolders will remain empty for now, but we'll add to them
    as we work through this book.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`_App/`内部创建名为`Materials`、`Prefabs`、`Scenes`和`Scripts`的子文件夹。这些子文件夹目前将保持为空，但我们在阅读本书的过程中将向它们添加内容。
- en: 'Organizing your assets by file type is a common convention in Unity, but you
    may have your own way of doing things. Unity does not depend on these folder names
    or asset file locations. (That said, there are a few reserved folder names with
    special meanings to Unity; see [https://docs.unity3d.com/Manual/SpecialFolders.html](https://docs.unity3d.com/Manual/SpecialFolders.html)).
    Your **Project** window may now look as follows:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity中，按照文件类型组织您的资产是一种常见的约定，但您可能有自己做事的方式。Unity不依赖于这些文件夹名称或资产文件位置。（尽管如此，Unity有一些具有特殊含义的保留文件夹名称；请参阅[https://docs.unity3d.com/Manual/SpecialFolders.html](https://docs.unity3d.com/Manual/SpecialFolders.html)）。您的**项目**窗口现在可能看起来如下所示：
- en: '![Figure 1.7 – Reorganized Project Assets folders'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.7 – 重新组织项目资产文件夹'
- en: '](img/Figure_1.07-assets-folders.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.07-assets-folders.jpg)'
- en: Figure 1.7 – Reorganized Project Assets folders
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.7 – 重新组织项目资产文件夹
- en: I think we're now ready to move on and continue setting up your system and installing
    the packages you need for AR development. We'll start by adding an AR device plugin
    to your project, and then do the same for the Foundation package.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为我们现在可以继续前进，继续设置您的系统并安装您为AR开发所需的包。我们将首先向您的项目中添加AR设备插件，然后对基础包做同样的操作。
- en: Preparing your project for AR development
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为AR开发准备您的项目
- en: When you develop and build a project for augmented reality, Unity needs to know
    the device and platform you are targeting. This is a multi-step process that includes
    adding the device plugin to your project and setting the target platform in **Build
    Settings**. We'll address the device plugins now and **Build Settings** later
    in this chapter.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 当您开发和构建用于增强现实的项目时，Unity需要知道您要针对的设备和平台。这是一个多步骤的过程，包括将设备插件添加到您的项目中，并在**构建设置**中设置目标平台。我们将在本章中现在讨论设备插件，并在稍后讨论**构建设置**。
- en: 'The following diagram shows the Unity XR technology architecture. As you can
    see, at the bottom of the stack are the various AR (and VR) provider plugins:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图示显示了Unity XR技术架构。如您所见，在堆栈底部是各种AR（和VR）提供程序插件：
- en: '![Figure 1.8 – The Unity XR tech stack'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.8 – Unity XR技术堆栈'
- en: '](img/Figure_1.08-xr-tech-stack.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.08-xr-tech-stack.jpg)'
- en: Figure 1.8 – The Unity XR tech stack
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.8 – Unity XR技术堆栈
- en: At the bottom of the stack is **XR Plugins**, separate provider packages that
    implement a software interface to a specific device. Plugins allow Unity to talk
    with a device by connecting the Unity XR subsystems with an operating system and
    runtime API. Ordinarily, you will not be using a plugin directly but a higher-level
    toolkit instead, such as AR Foundation (which we will install in the next section).
    Some plugins are provided and maintained by Unity Technologies; others are vendor-supported
    third-party plugins.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在堆栈的底部是**XR插件**，这些是独立的提供程序包，它们实现了与特定设备的软件接口。插件允许Unity通过将Unity XR子系统与操作系统和运行时API连接起来与设备通信。通常，您不会直接使用插件，而是使用更高级的工具包，例如AR
    Foundation（我们将在下一节中安装）。一些插件由Unity Technologies提供和维护；其他是由供应商支持的第三方插件。
- en: In the preceding diagram, at the top of the plugins are **XR Subsystems**, which
    form **XR Plugin Framework**. This abstracts sets of features into separate APIs.
    When an application is running, it can query the capabilities of the current runtime
    device and enable or disable sets of features in the app accordingly. Atop **XR
    Subsystems** is the **AR Foundation** toolkit (and **XR Interaction Toolkit**),
    which provides the main AR API for your Unity applications. We will be using AR
    Foundation extensively for the projects in this book.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图中，在插件顶部是**XR 子系统**，它们构成了**XR 插件框架**。这把一系列功能抽象成单独的 API。当应用程序运行时，它可以查询当前运行时设备的性能，并根据需要启用或禁用应用程序中的功能集。在**XR
    子系统**之上是**AR 基础**工具包（以及**XR 交互工具包**），它为你的 Unity 应用程序提供主要的 AR API。我们将在这本书的项目中广泛使用
    AR 基础。
- en: Now, let's install the XR plugin(s) you need for this project.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们安装这个项目所需的 XR 插件。
- en: Installing XR plugins for AR devices
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 AR 设备的 XR 插件
- en: 'To prepare our project for AR development, we''ll install the AR device plugin
    for your target device via the **XR Plug-in Management** window. With your project
    open in Unity, follow these steps:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 为了准备我们的项目进行 AR 开发，我们将通过**XR 插件管理**窗口安装目标设备的 AR 设备插件。在 Unity 中打开你的项目后，按照以下步骤操作：
- en: Open the **Project Settings** window by selecting **Edit | Project Settings**
    from the main menu.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过从主菜单中选择**编辑 | 项目设置**来打开**项目设置**窗口。
- en: In the **Settings** menu on the left, select **XR Plugin Management**.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧的**设置**菜单中，选择**XR 插件管理**。
- en: Click the **Install XR Plugin Management** button. It may take a moment for
    Unity to import and compile the package scripts.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**安装 XR 插件管理**按钮。Unity 导入和编译包脚本可能需要一点时间。
- en: If necessary, click the **XR Plug-in Management** item again to show **Plug-in
    Providers** and other options. Notice that there are tabs for each of the target
    platforms. Select the one you will be targeting first.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要，再次单击**XR 插件管理**项以显示**插件提供者**和其他选项。请注意，每个目标平台都有一个标签页。选择你首先将针对的标签页。
- en: For example, in the **XR Plug-in Management** window, the **Android** tab will
    be only available if you installed the **Android Build Support** module when you
    installed Unity via Unity Hub.
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，在**XR 插件管理**窗口中，只有当你通过 Unity Hub 安装 Unity 时安装了**Android 构建支持**模块，**Android**标签页才会可用。
- en: Check the checkbox for the AR plugin you want to use. For example, for Android,
    select **ARCore**, while for iOS, select **ARKit**.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 勾选你想要使用的 AR 插件的复选框。例如，对于 Android，选择**ARCore**，而对于 iOS，选择**ARKit**。
- en: Tip – Don't Mix VR and AR Plugins in the Same Project
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 小贴士 – 不要在同一个项目中混合 VR 和 AR 插件
- en: You'll see that the **XR Plug-in Management** window lets you choose any combination
    of AR and VR plugins. In our projects, we're only interested in the AR ones. Generally,
    do not include both AR and VR plugins in the same project as the build settings,
    player settings, camera rigs, and many other things can differ significantly between
    AR and VR projects. (Perhaps when you read this, there will be devices that support
    both modes in a single app, but I am not aware of any at this time.)
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你会看到**XR 插件管理**窗口允许你选择任何组合的 AR 和 VR 插件。在我们的项目中，我们只对 AR 插件感兴趣。通常，不要在同一个项目中包含
    AR 和 VR 插件，因为构建设置、玩家设置、相机装置以及许多其他事物在 AR 和 VR 项目之间可能存在显著差异。（也许当你阅读这篇文章时，会有支持两种模式的单一应用程序的设备，但到目前为止，我并不了解任何这样的设备。）
- en: 'In the following screenshot of the **Project Settings** window, I have selected
    the **XR Plug-in Management Settings** menu. In my window, there are three tabs
    for each of the possible target platforms for this project that I have installed:
    Desktop, iOS, and Android (yours may be different). With the **Android** tab selected,
    you can see that I have checked the **ARCore** plugin. You''ll also notice that,
    on the left-hand side, there''s an additional **ARCore** menu item that you can
    click to see options that are specific to that plugin:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下截图的**项目设置**窗口中，我已选择了**XR 插件管理设置**菜单。在我的窗口中，为这个项目可能的目标平台（我已安装的）每个都设置了三个标签页：桌面、iOS
    和 Android（你的可能不同）。当选择**Android**标签页时，你可以看到我已经勾选了**ARCore**插件。你也会注意到，在左侧，还有一个额外的**ARCore**菜单项，你可以点击它来查看该插件特有的选项：
- en: '![Figure 1.9 – XR Plug-in Management window with the ARCore plugin selected'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.9 – 已选择 ARCore 插件的 XR 插件管理窗口'
- en: '](img/Figure_1.09-xr-plugin-mgt-arcore.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.9 – 已选择 ARCore 插件的 XR 插件管理窗口'
- en: Figure 1.9 – XR Plug-in Management window with the ARCore plugin selected
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.9 – 已选择 ARCore 插件的 XR 插件管理窗口
- en: 'Interestingly, **XR Plug-in Manager** is a shortcut to installing the corresponding
    packages in **Package Manager**. You can verify this by opening **Package Manager**
    and reviewing the installed packages by performing the following steps:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，**XR 插件管理器** 是在 **包管理器** 中安装相应包的快捷方式。你可以通过以下步骤打开 **包管理器** 并检查已安装的包来验证这一点：
- en: Open Package Manager from the main menu and choose **Window | Package Manager**.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主菜单打开包管理器，并选择 **窗口 | 包管理器**。
- en: Ensure the filter selection at the top left of the **Package Manager** window
    says **Packages In Project**.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保包管理器窗口左上角的过滤器选择为 **项目中的包**。
- en: You should see your plugin in the list; for example, **ARCore XR Plugin**.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该在列表中看到你的插件；例如，**ARCore XR 插件**。
- en: 'For example, in the following screenshot of **Package Manager**, which shows
    **Packages In Project** (top left of the window), **ARCore XR Plugin** has been
    installed and selected. You can see that this specific version of the plugin has
    been **Verified** for the Unity version being used by this project. It also shows
    a description of the plugin''s features, links to its documentation, and other
    details. Also, I have unfolded the plugin''s **Other Versions** list to show you
    how to review each of the plugin''s versions; this is where you might upgrade
    (or downgrade) a plugin to a different version:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在以下 **包管理器** 的屏幕截图（显示 **项目中的包**，位于窗口的左上角）中，**ARCore XR 插件** 已安装并选中。你可以看到，此特定版本的插件已针对此项目使用的
    Unity 版本进行了 **验证**。它还显示了插件的功能描述、文档链接和其他详细信息。此外，我已经展开插件的 **其他版本** 列表，以向您展示如何查看插件的每个版本；这是您可能升级（或降级）插件到不同版本的地方：
- en: '![Figure 1.10 – Package Manager with the ARCore XR plugin installed in this
    project'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.10 – 包管理器，此项目中已安装 ARCore XR 插件]'
- en: '](img/Figure_1.10-package-manager-arcore.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_1.10-package-manager-arcore.jpg]'
- en: Figure 1.10 – Package Manager with the ARCore XR plugin installed in this project
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.10 – 包管理器，此项目中已安装 ARCore XR 插件
- en: At this point, you could begin developing an augmented reality project, if you
    wanted to write code directly using the XR subsystem's developer-facing C# interface.
    However, it's more likely that you will install a higher-level toolkit that is
    more Unity developer-friendly. Still, you may need to drop down into the plugin
    framework to access the XR subsystems directly. For example, you may wish to scan
    and start a particular subsystem, as shown in the example at [https://docs.unity3d.com/Manual/xrsdk-runtime-discovery.html](https://docs.unity3d.com/Manual/xrsdk-runtime-discovery.html).
    Later in this book, we may need to access the plugin framework's SDK. For the
    most part, we will be using the higher-level **AR Foundation** toolkit.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，如果你想直接使用 XR 子系统的开发者界面 C# 编写代码，你可以开始开发一个增强现实项目。然而，更有可能的是你会安装一个更高级的、对 Unity
    开发者更友好的工具包。尽管如此，你可能需要直接进入插件框架来访问 XR 子系统。例如，你可能希望扫描并启动特定的子系统，如示例所示 [https://docs.unity3d.com/Manual/xrsdk-runtime-discovery.html](https://docs.unity3d.com/Manual/xrsdk-runtime-discovery.html)。在本书的后续部分，我们可能需要访问插件框架的
    SDK。大部分情况下，我们将使用更高级的 **AR 基础** 工具包。
- en: Installing the AR Foundation package
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 AR 基础包
- en: AR Foundation is a package that provides a development layer between your application
    and the underlying device features and plugins. AR Foundation provides components
    and other assets that help you build AR projects once, then deploy for multiple
    mobile and wearable AR devices. Using a "unified workflow," as Unity says, your
    app can support current and future features that may or may not be currently available
    on your end user's specific device at runtime. This helps "future-proof" your
    AR apps. In this section, we'll install and explore AR Foundation.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: AR 基础是一个包，它为你的应用程序和底层设备功能和插件之间提供了一个开发层。AR 基础提供了组件和其他资产，帮助你一次性构建 AR 项目，然后部署到多个移动和可穿戴
    AR 设备。正如 Unity 所说，使用“统一的工作流程”，你的应用程序可以支持当前和未来的功能，这些功能可能在运行时在最终用户的特定设备上可用或不可用。这有助于“为
    AR 应用程序的未来做好准备”。在本节中，我们将安装并探索 AR 基础。
- en: 'The features that are supported by AR Foundation will depend on the current
    capabilities of the target devices and varies between versions of AR Foundation.
    The following chart shows the feature support per platform that AR Foundation
    offers:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: AR 基础支持的功能将取决于目标设备的当前功能，并且在不同版本的 AR 基础之间有所不同。以下图表显示了 AR 基础提供的每个平台的功能支持：
- en: '![Figure 1.11 – AR Foundation 4.1.5 features per platform'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.11 – AR 基础 4.1.5 每个平台的功能]'
- en: '](img/Figure_1.11-arf-supported-features-table-4-1-5.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.11 AR Foundation 4.1.5各平台功能](img/Figure_1.11-arf-supported-features-table-4-1-5.jpg)'
- en: Figure 1.11 – AR Foundation 4.1.5 features per platform
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.11 – AR Foundation 4.1.5各平台功能
- en: See the **Platform Support** section of the AR Foundation documentation page
    ([https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@latest/index.html](mailto:https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@latest/index.html))
    for the most up to date details for the version you are using.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅AR Foundation文档页面的**平台支持**部分([https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@latest/index.html](mailto:https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@latest/index.html))，以获取你使用的版本的最新详细信息。
- en: Unity provides a **Package Manager**, which enables you to expand Unity's core
    functionality by installing additional packages in your project. This way, you
    can choose just the features you need for a particular project. The XR plugins
    we installed in the previous section are packages. Now, we'll use the Package
    Manager to install the **AR Foundation** package.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: Unity提供了一个**包管理器**，它允许你通过在你的项目中安装额外的包来扩展Unity的核心功能。这样，你可以为特定项目选择所需的功能。我们在上一节中安装的XR插件是包。现在，我们将使用包管理器安装**AR
    Foundation**包。
- en: Information – Advantages of Unity Packages
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 信息 - Unity包的优势
- en: With Unity packages come many advantages. Unity can update the core Editor independently
    of other features. Likewise, packages can be updated outside of Unity's core release
    cycle. Decoupling their dependencies reduces the risk of schedule delays and technical
    problems, allowing for more agile development cycles and support for technology
    advances inside and outside the Unity offices. For example, if Apple releases
    an update to ARKit, then Unity can release an update to its ARKit plugin without
    having to wait for the next release of the Unity Editor, nor depending on the
    Unity core development team. If you've ever worked on a large project with multiple
    teams, you can appreciate the benefits of this architecture. Teams can be organized
    so that they focus on the details that their package provides, and then test for
    successful integration with the Unity core product.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: Unity包带来了许多优势。Unity可以独立于其他功能更新核心编辑器。同样，包可以在Unity核心发布周期之外更新。解耦它们的依赖性可以降低进度延误和技术问题的风险，从而实现更敏捷的开发周期，并支持Unity办公室内外技术进步。例如，如果苹果发布了ARKit的更新，那么Unity可以发布其ARKit插件的更新，而无需等待Unity编辑器的下一个版本发布，也不依赖于Unity核心开发团队。如果你曾经与多个团队合作完成过大型项目，你将能够欣赏这种架构的好处。团队可以组织起来，专注于他们包提供的细节，然后测试与Unity核心产品的成功集成。
- en: 'You can install AR Foundation using Package Manager by following these steps:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下步骤使用包管理器安装AR Foundation：
- en: Open the Package Manager from the main menu by going to **Window | Package Manager**.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过主菜单转到**Window | Package Manager**打开包管理器。
- en: Set the package filter in the top left to **Unity Registry** to see a list of
    all the official packages.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将左上角的包过滤器设置为**Unity Registry**，以查看所有官方包的列表。
- en: In the search box, type `ar`. You should now see all the AR-related packages
    in the list.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入`ar`。你现在应该能看到列表中所有与AR相关的包。
- en: It is important to pay attention to the version numbers of the package, and
    whether that particular version has been verified with the Unity version you're
    using in your project.
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意包的版本号很重要，以及该特定版本是否已经与你在项目中使用的Unity版本进行了验证。
- en: Select **AR Foundation**, and then press **Install**. It may take a moment to
    install.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**AR Foundation**，然后按**安装**。安装可能需要一段时间。
- en: Once installed, you may discover that new items have been added to the main
    menu bar, including options under **GameObject | XR**. Don't select any just yet
    – we'll get to that in the next chapter, [*Chapter 2*](B15145_02_Final_SS_epub.xhtml#_idTextAnchor037)*,
    Your First AR Scene*, where we will use the toolkit to create our first AR scene
    with AR Foundation.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，你可能会发现主菜单栏中添加了新的项目，包括**GameObject | XR**下的选项。现在请不要选择任何选项——我们将在下一章，[*第2章*](B15145_02_Final_SS_epub.xhtml#_idTextAnchor037)*，您的第一个AR场景*中详细介绍，我们将使用工具包创建第一个AR场景。
- en: You also need to choose an input handler for your project. We'll look at this
    in the next section.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要为你的项目选择一个输入处理器。我们将在下一节中探讨这个问题。
- en: Choosing an input handler
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择输入处理器
- en: The Unity product is continually improving. One relatively recent advancement
    is the introduction of the new **Input System**, which is replacing the classic
    **Input Manager**. At the time of writing, Unity projects can be configured to
    use either one, or both in the same project. The input handler you choose can
    have a significant impact on your development because their usages are quite different.
    The classic Input Manager mostly uses *polling*, while the new Input System uses
    *events* (see [https://blog.unity.com/technology/introducing-the-new-input-system](https://blog.unity.com/technology/introducing-the-new-input-system)).
    This is a generalization as both software patterns can be implemented using either
    handler, but the new Input System is better designed and more flexible. In the
    interest of advancing the state of the art, the projects in this book will use
    the new Input System.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: Unity产品持续改进。一项相对较新的进步是引入了新的**输入系统**，它正在取代经典的**输入管理器**。在撰写本文时，Unity项目可以配置为使用其中任何一个，或者在同一项目中同时使用两者。您选择的输入处理器可以对您的开发产生重大影响，因为它们的用法相当不同。经典的输入管理器主要使用*轮询*，而新的输入系统使用*事件*（见[https://blog.unity.com/technology/introducing-the-new-input-system](https://blog.unity.com/technology/introducing-the-new-input-system)）。这是一个概括，因为两种软件模式都可以使用任何处理器实现，但新的输入系统设计得更好，更灵活。为了推进技术前沿，本书中的项目将使用新的输入系统。
- en: However, some example scenes that you will be importing into your project, including
    the *AR Foundation Samples* in [*Chapter 2*](B15145_02_Final_SS_epub.xhtml#_idTextAnchor037)*,
    Your First AR Scene*, will use the classic Input Manager, so it's prudent to allow
    your project to support both.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，您将导入到项目中的某些示例场景，包括[*第二章*](B15145_02_Final_SS_epub.xhtml#_idTextAnchor037)*，您的第一个AR场景*中的*AR基础样本*，将使用经典的输入管理器，因此允许您的项目同时支持两者是明智的。
- en: 'To configure your project to use the new Input System, perform the following
    steps:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置项目以使用新的输入系统，请执行以下步骤：
- en: To import the Input System package, open the Packager Manager by going to **Window
    | Package Manager**.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要导入输入系统包，请通过访问**窗口 | 包管理器**打开包管理器。
- en: Select **Unity Registry** from the filter selection in the top left of the window.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从窗口左上角的筛选器选择中，选择**Unity注册表**。
- en: Find `input`), and click **Install**.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到`input`），然后点击**安装**。
- en: You may be prompted to let Unity automatically change your Player Settings to
    use the new Input System. You can say "no" to this. We'll do this manually.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可能会被提示让Unity自动更改您的玩家设置以使用新的输入系统。您可以回答“不”。我们将手动完成此操作。
- en: Open the **Player Settings** window by going to **Edit | Project Settings |
    Player**.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过访问**编辑 | 项目设置 | 玩家**打开**玩家设置**窗口。
- en: Locate **Configuration | Active Input Handling** and select **Both** (or if
    you prefer, select **Input System Package (New)**).
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位到**配置 | 活动输入处理**并选择**两者**（或者如果您愿意，可以选择**输入系统包（新）**）。
- en: We will begin working with input in [*Chapter 2*](B15145_02_Final_SS_epub.xhtml#_idTextAnchor037)*,
    Your First AR Scene*, as well as the subsequent chapters.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从[*第二章*](B15145_02_Final_SS_epub.xhtml#_idTextAnchor037)*，您的第一个AR场景*开始处理输入，以及随后的章节。
- en: You also need to set up the project's render pipeline for AR support. Let's
    learn how to do this.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要设置项目的渲染管道以支持AR。让我们学习如何做到这一点。
- en: Adding support for the Universal Render Pipeline
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加对通用渲染管道的支持
- en: 'Because we created this project using the **Universal Render Pipeline** (**URP**),
    there''s one additional thing you need to do – add AR video background support
    to the graphics forward renderer (see [https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@4.1/manual/ar-camera-background-with-scriptable-render-pipeline.html](mailto:https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@4.1/manual/ar-camera-background-with-scriptable-render-pipeline.html)).
    This feature renders the device''s video feed immediately on the screen before
    the virtual graphics are rendered on top of those pixels. Perform the following
    steps:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们使用**通用渲染管道**（**URP**）创建了此项目，因此您还需要做一件事——向图形前向渲染器添加AR视频背景支持（见[https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@4.1/manual/ar-camera-background-with-scriptable-render-pipeline.html](mailto:https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@4.1/manual/ar-camera-background-with-scriptable-render-pipeline.html)）。此功能在虚拟图形渲染到这些像素之上之前立即在屏幕上渲染设备的视频流。请执行以下步骤：
- en: In the `Assets/Settings/` folder.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Assets/Settings/`文件夹中。
- en: Select the asset named **ForwardRenderer**.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择名为**ForwardRenderer**的资产。
- en: 'In the **Inspector** window, click the **Add Renderer Feature** button and
    select **AR Background Renderer Feature**. The resulting Forward Renderer settings
    are shown in the following screenshot:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **检查器** 窗口中，点击 **添加渲染器功能** 按钮，并选择 **AR 背景渲染器功能**。以下截图显示了生成的 Forward Renderer
    设置：
- en: '![Figure 1.12 – ForwardRenderer data asset with the AR Background Renderer
    Feature added'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.12 – 添加了 AR 背景渲染器功能的 ForwardRenderer 数据资产]'
- en: '](img/Figure_1.12-url-renderer.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.12-url-renderer.jpg)'
- en: Figure 1.12 – ForwardRenderer data asset with the AR Background Renderer Feature
    added
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.12 – 添加了 AR 背景渲染器功能的 ForwardRenderer 数据资产
- en: Furthermore, as a reminder, if you import any assets into your project, you
    may need to convert their materials for the render pipeline. We will do this for
    the sample assets at the end of this chapter.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，作为提醒，如果你将任何资产导入到你的项目中，你可能需要将它们的材质转换为渲染管线。我们将在本章末尾对示例资产进行此操作。
- en: You have now installed Unity using Unity Hub, created and opened a new Unity
    project, installed XR plugins for your AR device, installed the AR Foundation
    package, selected an input handler for your project, and configured the render
    pipeline for AR. The next step is to continue setting up your project for the
    target platform.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已使用 Unity Hub 安装了 Unity，创建并打开了一个新的 Unity 项目，为你的 AR 设备安装了 XR 插件，安装了 AR Foundation
    包，为你的项目选择了输入处理器，并配置了 AR 的渲染管线。下一步是继续为你的目标平台设置项目。
- en: Setting up for mobile development
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置移动开发环境
- en: Depending on the device platform you are targeting with your project, you will
    need to install additional software and development tools, as well as configure
    your Unity project with platform-specific settings.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的项目针对的设备平台，你可能需要安装额外的软件和开发工具，以及配置你的 Unity 项目以使用特定平台的设置。
- en: If you are developing for Android ARCore, go to the *Setting up for Android/ARCore
    Development* section. If you are developing for Apple ARKit, go to the *Setting
    Up for iOS/ARKit Development* section. Finally, if you are developing for wearable
    AR devices, go to the *Developing for wearable AR glasses* section.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在为 Android ARCore 开发，请转到 *设置 Android/ARCore 开发* 部分。如果你正在为 Apple ARKit 开发，请转到
    *设置 iOS/ARKit 开发* 部分。最后，如果你正在为可穿戴 AR 设备开发，请转到 *为可穿戴 AR 眼镜开发* 部分。
- en: Setting up for Android/ARCore development
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 Android/ARCore 开发环境
- en: 'If you want to build and run your project on an Android device, there are a
    few extra steps in setting up your project for Android development and ARCore.
    I''ll summarize the process here but naturally, things can change, and I recommend
    that you look at the documentation for the most current instructions, including
    Google''s ARCore docs, in addition to the Unity Manual. Here is a list of some
    relevant links:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在 Android 设备上构建和运行你的项目，设置 Android 开发和 ARCore 的项目设置会有一些额外的步骤。我将在下面总结这个过程，但自然地，事情可能会变化，我建议你查看最新的说明文档，包括
    Google 的 ARCore 文档，以及 Unity 手册。以下是一些相关的链接：
- en: 'ARCore Supported Devices: [https://developers.google.com/ar/devices](https://developers.google.com/ar/devices)'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'ARCore 支持的设备: [https://developers.google.com/ar/devices](https://developers.google.com/ar/devices)'
- en: 'Unity Manual – Android Environment Setup: [https://docs.unity3d.com/Manual/android-sdksetup.html](https://docs.unity3d.com/Manual/android-sdksetup.html)'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Unity 手册 – 安卓环境设置: [https://docs.unity3d.com/Manual/android-sdksetup.html](https://docs.unity3d.com/Manual/android-sdksetup.html)'
- en: 'ARCore Unity – Overview of Features: [https://developers.google.com/ar/develop/unity](https://developers.google.com/ar/develop/unity)'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'ARCore Unity – 功能概述: [https://developers.google.com/ar/develop/unity](https://developers.google.com/ar/develop/unity)'
- en: 'Unity ARCore Extensions Installation: [https://developers.google.com/ar/develop/unity-arf/enable-arcore](https://developers.google.com/ar/develop/unity-arf/enable-arcore)'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Unity ARCore 扩展安装: [https://developers.google.com/ar/develop/unity-arf/enable-arcore](https://developers.google.com/ar/develop/unity-arf/enable-arcore)'
- en: 'Unity ARCore Plugin: [https://docs.unity3d.com/Packages/com.unity.xr.arcore@4.1/manual/index.html](mailto:https://docs.unity3d.com/Packages/com.unity.xr.arcore@4.1/manual/index.html)
    (find the doc page for the version you are using)'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Unity ARCore 插件: [https://docs.unity3d.com/Packages/com.unity.xr.arcore@4.1/manual/index.html](mailto:https://docs.unity3d.com/Packages/com.unity.xr.arcore@4.1/manual/index.html)（查找你使用的版本的相关文档页面）'
- en: 'You may have already completed the first few steps for setting up for Android
    and ARCore development, but I''ll repeat them here briefly:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经完成了设置 Android 和 ARCore 开发的第一步，但我会在这里简要重复：
- en: '*Build support modules*: In Unity Hub, ensure you have installed the **Android**
    platform build support modules for the specific version of Unity you are using
    with your project.'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*构建支持模块*：在Unity Hub中，请确保您已安装了与您项目使用的Unity特定版本对应的**Android**平台构建支持模块。'
- en: In the Unity Hub **Add Modules** window, there's a **>** icon for unfolding
    **Android Build Support**. Ensure you have checked the checkboxes for both **Android
    SDK & NDK Tools** and **OpenJDK**.
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Unity Hub的**添加模块**窗口中，有一个用于展开**Android构建支持**的**>**图标。请确保您已勾选了**Android SDK
    & NDK工具**和**OpenJDK**的复选框。
- en: Note that if you need to customize the location of either the Android SDK, NDK,
    or JDK libraries, use the **Unity Preferences** window in the Unity Editor, by
    navigating to **Edit | Preferences | External Tools**, and specify the paths for
    Unity to find where you installed these separately.
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，如果您需要自定义Android SDK、NDK或JDK库的位置，请使用Unity编辑器中的**Unity首选项**窗口，通过导航到**编辑 | 首选项
    | 外部工具**，并指定Unity查找这些库分别安装的路径。
- en: '*Target Platform*: In the Unity Editor, open the **Build Settings** window
    by selecting **File | Build Settings**. Within the **Platforms** panel, select
    the **Android** platform from the list. If it is not already selected, please
    click the **Change Platform** button. If it is disabled, go back to *Step 1*.'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*目标平台*：在Unity编辑器中，通过选择**文件 | 构建设置**打开**构建设置**窗口。在**平台**面板中，从列表中选择**Android**平台。如果尚未选择，请点击**更改平台**按钮。如果它被禁用，请返回到*步骤1*。'
- en: '*XR Plugin*: Ensure the **ARCore** plugin is currently installed and selected.
    Select **Edit | Project Settings**, and then select **XR Plug-in Management**
    from the side menu (initializing it if necessary). Click the **Android** icon
    to see the list of Android plugins and check the **ARCore** checkbox if it is
    not already checked.'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*XR插件*：请确保**ARCore**插件已安装并选中。选择**编辑 | 项目设置**，然后从侧菜单中选择**XR插件管理**（如果需要，初始化它）。点击**Android**图标以查看Android插件列表，如果未勾选，请勾选**ARCore**复选框。'
- en: '*USB Debugging*: The next step is to enable USB debugging on your Android device
    (phone or tablet). Open the device''s **Settings > About** window and find the
    **Build Number** item. (Depending on the brand, you may need to drill down another
    level or find the **Build Number** item in a slightly different location.) The
    next thing you must do I think is very funny – perform a magical incantation by
    clicking the **Build Number** item seven times! Then, magically, a **Developer
    Options** menu option will appear. Select that and enable **USB Debugging**.'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*USB调试*：下一步是在您的Android设备（手机或平板）上启用USB调试。打开设备的**设置 > 关于**窗口，找到**构建号**项。（根据品牌，您可能需要再深入一级或在不同位置找到**构建号**项。）接下来，我认为您必须做的下一件事非常有趣——通过点击**构建号**项七次来执行一个神奇的咒语！然后，神奇地，一个**开发者选项**菜单选项会出现。选择它并启用**USB调试**。'
- en: You can now connect your device to your development machine, and it should be
    recognized as an attached peripheral device.
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，您可以将您的设备连接到您的开发机器，并且它应该被识别为附加的外围设备。
- en: 'The next thing to consider is the **Android Player** settings in your project.
    A review of these options can be found here: [https://docs.unity3d.com/Manual/class-PlayerSettingsAndroid.html](https://docs.unity3d.com/Manual/class-PlayerSettingsAndroid.html).
    Specific settings are required for AR projects targeting ARCore. Please double-check
    the current requirements, as can be found in the *Configure Project Settings*
    topic on the *Quickstart ARCore* page ([https://developers.google.com/ar/develop/unity-arf/quickstart-android](https://developers.google.com/ar/develop/unity-arf/quickstart-android)).
    Continuing from the previous steps, I suggest doing the following:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步要考虑的是您项目中的**Android玩家**设置。这些选项的审查可以在以下位置找到：[https://docs.unity3d.com/Manual/class-PlayerSettingsAndroid.html](https://docs.unity3d.com/Manual/class-PlayerSettingsAndroid.html)。针对ARCore的AR项目需要特定的设置。请仔细检查当前的要求，这些要求可以在**Quickstart
    ARCore**页面上的**配置项目设置**主题中找到（[https://developers.google.com/ar/develop/unity-arf/quickstart-android](https://developers.google.com/ar/develop/unity-arf/quickstart-android)）。从之前的步骤继续，我建议执行以下操作：
- en: '*Player Settings*: In Unity, navigate to **Edit | Project Settings | Player**
    to open the **Player Settings** window. It contains many options, including tabs
    at the top to switch between platform-specific settings. Generally, you can keep
    the default settings unless otherwise advised, or when you''re optimizing your
    project builds. Initialize the following settings:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*玩家设置*：在 Unity 中，导航到 **编辑 | 项目设置 | 玩家** 以打开 **玩家设置** 窗口。它包含许多选项，包括顶部的选项卡，用于在平台特定设置之间切换。通常，除非另有建议或您正在优化项目构建，否则您可以保留默认设置。初始化以下设置：'
- en: '**Other Settings | Rendering**: Uncheck **Auto Graphics API**. If Vulkan is
    listed under Graphics APIs, remove it as Vulkan is not yet supported by ARCore.
    To do so, select **Vulcan** and press the **-** (minus) icon in the lower right.
    Also, uncheck **Multithreaded Rendering** as it''s (currently) not compatible
    with ARCore.'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**其他设置 | 渲染**：取消选中 **自动图形 API**。如果图形 API 下列出了 Vulkan，请将其删除，因为 Vulkan 目前不支持
    ARCore。为此，请选择 **Vulkan** 并按右下角的 **-**（减号）图标。此外，取消选中 **多线程渲染**，因为它（目前）与 ARCore
    不兼容。'
- en: '`com.DefaultCompany.MyARProject`.'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`com.DefaultCompany.MyARProject`.'
- en: '**Other Settings | Minimum API Level**: If you are building an **AR Required**
    app, specify **Android 7.0 ''Nougat'' (API Level 24)** or higher. If you are building
    an **AR Optional** app, specify Android **API Level 14** or higher.'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**其他设置 | 最小 API 级别**：如果您正在构建 **AR 需要** 应用，请指定 **Android 7.0 ''Nougat'' (API
    级别 24**) 或更高版本。如果您正在构建 **AR 可选** 应用，请指定 Android **API 级别 14** 或更高版本。'
- en: Information – The Word "player" in Unity
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 信息 – Unity 中的“player”一词
- en: The word "*player*" in Unity carries multiple meanings. The user of your application
    or game may be referred to as the *player*. In a game, the first-person GameObject
    (containing a camera controlled by the user) might also be referred to as the
    *player*. In a non-AR video game, the game controller might be called the *player
    controller*. However, in **Project Settings**, the *player* refers to the result
    of the build process; it is an executable program that is installed on your target
    device (along with other asset files and data) that "*plays*" your application.
    In this case, the word is akin to a *media player*, for example, that plays a
    music or video file. **Player Settings** in Unity configures how Unity is built
    and deployed to your target device.
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Unity 中，“*player*”一词具有多重含义。您的应用程序或游戏用户可能被称为 *player*。在游戏中，第一个由用户控制的 GameObject（包含一个摄像头）也可能被称为
    *player*。在非 AR 视频游戏中，游戏控制器可能被称为 *player controller*。然而，在 **项目设置** 中，*player* 指的是构建过程的结果；它是一个安装在您的目标设备上的可执行程序（以及其他资产文件和数据），用于“播放”您的应用程序。在这种情况下，这个词类似于
    *媒体播放器*，例如播放音乐或视频文件。Unity 中的 **玩家设置** 配置了 Unity 如何构建和部署到您的目标设备。
- en: 'Meanwhile, you also have the option to install additional capabilities provided
    by the **ARCore Extensions** package for Unity. This package extends AR Foundation
    to some more advanced features of ARCore that are currently not supported in AR
    Foundation. To install **ARCore Extensions**, perform the following steps:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，您还有安装由 Unity 的 **ARCore 扩展** 包提供的额外功能的选项。此包扩展了 AR Foundation 以支持 ARCore 的更多高级功能，这些功能目前在
    AR Foundation 中尚不支持。要安装 **ARCore 扩展**，请执行以下步骤：
- en: Download the latest `arcore-unity-extensions-*.tgz` tarball from the GitHub
    releases page at [https://github.com/google-ar/arcore-unity-extensions/releases/](https://github.com/google-ar/arcore-unity-extensions/releases/).
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 GitHub 发布页面下载最新的 `arcore-unity-extensions-*.tgz` tarball，网址为 [https://github.com/google-ar/arcore-unity-extensions/releases/](https://github.com/google-ar/arcore-unity-extensions/releases/)。
- en: Open the Package Manager using **Window | Package Manager**.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 **窗口 | 包管理器** 打开包管理器。
- en: In the top left of the window, click the **+** icon and choose **Add package
    from tarball**, as shown here:![Figure 1.13 – Adding a tarball package
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在窗口的左上角，点击 **+** 图标并选择 **从 tarball 添加包**，如图所示：![Figure 1.13 – Adding a tarball
    package
- en: '](img/Figure_1.13-add-package-from-tarball.jpg)'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![img/Figure_1.13-add-package-from-tarball.jpg]'
- en: Figure 1.13 – Adding a tarball package
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.13 – 添加 tarball 包
- en: Locate the downloaded `arcore-unity-extensions-*.tgz` tarball.
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位下载的 `arcore-unity-extensions-*.tgz` tarball。
- en: Then, click **Open**. It may take a few moments to install the package and any
    dependencies.
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击 **打开**。安装包及其依赖项可能需要几分钟。
- en: Your project is now set up to target Android ARCore with AR Foundation. We'll
    verify your settings in the next chapter, [*Chapter 2*](B15145_02_Final_SS_epub.xhtml#_idTextAnchor037)*,
    Your First AR Scene*, when we create an AR scene, build it, and run it on your
    device.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 您的项目现在已设置好，以针对 Android ARCore 和 AR Foundation。我们将在下一章，[*第 2 章*](B15145_02_Final_SS_epub.xhtml#_idTextAnchor037)*，您的第一个
    AR 场景*中验证您的设置，当我们创建 AR 场景、构建并在您的设备上运行它时。
- en: Setting up for iOS/ARKit development
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为 iOS/ARKit 开发设置
- en: If you want to build and run your project on an Apple iOS device, there are
    a few extra steps in setting up your project for iOS development and ARKit. I'll
    summarize the process here, but naturally, things can change, and I recommend
    that you look at the necessary documentation for the most current instructions.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想在苹果 iOS 设备上构建和运行您的项目，设置 iOS 开发和 ARKit 的项目时需要额外几个步骤。我将在下面总结这个过程，但请注意，事情可能会发生变化，我建议您查看最新的必要文档。
- en: Developing for iOS requires a Mac computer running OSX. Then, you need to install
    the XCode development environment. It is also strongly recommended that you join
    the Apple Developer Program, which currently costs $99 (USD) per year for individuals.
    You can do some limited Unity development for iOS without becoming an Apple Developer
    but it's not practical, especially for AR, where you need to test your app on
    a physical device.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 为 iOS 开发需要一个运行 OSX 的 Mac 计算机。然后，您需要安装 Xcode 开发环境。强烈建议您加入苹果开发者计划，目前个人费用为每年 99
    美元（USD）。您可以在不成为苹果开发者的情况下进行一些有限的 Unity iOS 开发，但这并不实用，尤其是在 AR 方面，您需要在一个物理设备上测试您的应用程序。
- en: 'Here is a list of some relevant links:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些相关的链接列表：
- en: 'Apple Developer Program: [https://developer.apple.com/programs/](https://developer.apple.com/programs/%20%20)'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 苹果开发者计划：[https://developer.apple.com/programs/](https://developer.apple.com/programs/%20%20)
- en: 'Unity Manual – Getting Started with iOS Development: [https://docs.unity3d.com/Manual/iphone-GettingStarted.html](https://docs.unity3d.com/Manual/iphone-GettingStarted.html)'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity 手册 – iOS 开发入门：[https://docs.unity3d.com/Manual/iphone-GettingStarted.html](https://docs.unity3d.com/Manual/iphone-GettingStarted.html)
- en: 'Unity Manual – Building for iOS: [https://docs.unity3d.com/Manual/UnityCloudBuildiOS.html](https://docs.unity3d.com/Manual/UnityCloudBuildiOS.html)'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity 手册 – 为 iOS 构建：[https://docs.unity3d.com/Manual/UnityCloudBuildiOS.html](https://docs.unity3d.com/Manual/UnityCloudBuildiOS.html)
- en: 'Unity ARKit Plugin: [https://docs.unity3d.com/Packages/com.unity.xr.arkit@4.1/manual/index.html](mailto:https://docs.unity3d.com/Packages/com.unity.xr.arkit@4.1/manual/index.html)
    (find the doc page for the version you are using)'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Unity ARKit 插件: [https://docs.unity3d.com/Packages/com.unity.xr.arkit@4.1/manual/index.html](mailto:https://docs.unity3d.com/Packages/com.unity.xr.arkit@4.1/manual/index.html)（查找您所使用版本的文档页面）'
- en: Information – How to Develop for iOS Without a Mac
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 信息 – 如何在没有 Mac 的情况下为 iOS 开发
- en: While iOS development requires a Mac computer running OSX, it's possible to
    work around this using `.ipa` file to your iOS device. This does not lend itself
    to a rapid development cycle! If you're in this situation, my recommendation is
    to buy a used Android phone that supports ARCore. Then, develop your app using
    AR Foundation on your Windows PC targeting Android first, and then periodically
    run iOS/ARKit builds to test and verify it runs on that device. Unity Cloud Builds
    requires a Unity Plus or Pro license or a Unity Teams Advanced subscription.
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 虽然 iOS 开发需要一个运行 OSX 的 Mac 计算机，但您可以使用 `.ipa` 文件在您的 iOS 设备上绕过这一点。这并不适合快速的开发周期！如果您处于这种情况，我的建议是购买一部支持
    ARCore 的二手安卓手机。然后，在您的 Windows PC 上使用 AR Foundation 开发您的应用程序，首先针对安卓进行开发，然后定期运行
    iOS/ARKit 构建，以测试和验证它在该设备上运行。Unity Cloud Builds 需要 Unity Plus 或 Pro 许可证或 Unity
    Teams Advanced 订阅。
- en: 'Developing for iOS and ARKit requires performing the following steps. You may
    have completed some of these steps already:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 为 iOS 和 ARKit 开发需要执行以下步骤。您可能已经完成了一些这些步骤：
- en: '*Apple Developer Program*: This is your admission ticket for developing for
    iOS. Go to [https://developer.apple.com/programs/](https://developer.apple.com/programs/)
    to learn more and enroll.'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*苹果开发者计划*: 这是您为 iOS 开发的入场券。前往 [https://developer.apple.com/programs/](https://developer.apple.com/programs/)
    了解更多信息并注册。'
- en: '*Xcode*: Download and install the current copy of Xcode, the development environment
    required to develop any Apple products. It''s available on the Mac App Store:
    [https://apps.apple.com/us/app/xcode/id497799835](https://apps.apple.com/us/app/xcode/id497799835).'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Xcode*: 下载并安装当前版本的 Xcode，这是开发任何苹果产品所需的开发环境。您可以在 Mac App Store 中找到它：[https://apps.apple.com/us/app/xcode/id497799835](https://apps.apple.com/us/app/xcode/id497799835)。'
- en: '*Build support modules*: In **Unity Hub**, ensure you have installed the **iOS**
    platform build support modules for the specific version of Unity you are using
    with your project.'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*构建支持模块*：在**Unity Hub**中，确保您已为与项目一起使用的Unity特定版本安装了**iOS**平台构建支持模块。'
- en: '*Target Platform*: In the Unity Editor, open the **Build Settings** window
    by selecting **File | Build Settings**. Within the **Platforms** panel, select
    the **iOS** platform from the list. If it is not already selected, please click
    the **Change Platform** button. If it is disabled, go back to *Step 1*.'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*目标平台*：在Unity编辑器中，通过选择**文件 | 构建设置**打开**构建设置**窗口。在**平台**面板中，从列表中选择**iOS**平台。如果尚未选择，请点击**更改平台**按钮。如果按钮不可用，请返回到*步骤1*。'
- en: '*XR Plugin*: Ensure the **ARKit** plugin is currently installed and selected.
    Select **Edit | Project Settings**, and then select **XR Plug-in Management**
    from the side menu (initialize it if necessary). Click the **iOS** tab to see
    the list of iOS plugins, and check the **ARKit** checkbox if it is not already
    checked.'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*XR插件*：确保已安装并选中了**ARKit**插件。选择**编辑 | 项目设置**，然后从侧菜单中选择**XR插件管理**（如有必要，请初始化它）。点击**iOS**选项卡以查看iOS插件列表，如果未选中，请勾选**ARKit**复选框。'
- en: '*Player Settings*: In the `Required for augmented reality support`), setting
    `11`, and **Architecture | ARM64**.'
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*玩家设置*：在`Required for augmented reality support`中设置`11`，以及**架构 | ARM64**。'
- en: 'When Unity builds an iOS project, it does not actually build the app. Instead,
    it constructs an XCode project folder that is then opened in XCode, which, in
    turn, is used to build the app. One of the critical services XCode provides is
    ensuring you are authorized for development by provisioning your app, including
    the following:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 当Unity构建iOS项目时，它实际上并没有构建应用程序。相反，它构建一个XCode项目文件夹，然后在该文件夹中打开XCode，XCode随后用于构建应用程序。XCode提供的一项关键服务是确保您通过配置您的应用程序进行开发授权，包括以下内容：
- en: Installing a **Development Provisioning Profile** for each device where you
    plan to test your app. Follow the instructions at [https://docs.unity3d.com/Manual/UnityCloudBuildiOS.html](https://docs.unity3d.com/Manual/UnityCloudBuildiOS.html),
    under the *Create a Certificate* topic.
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为您计划测试应用程序的每个设备安装**开发配置文件**。按照[https://docs.unity3d.com/Manual/UnityCloudBuildiOS.html](https://docs.unity3d.com/Manual/UnityCloudBuildiOS.html)中**创建证书**主题下的说明进行操作。
- en: Adding your **Apple ID** account to Xcode by going to **Preferences | Accounts**.
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过前往**首选项 | 账户**将您的**Apple ID**账户添加到Xcode中。
- en: 'For more information on using Xcode and Unity, see the *Unity Manual: Structure
    of a Unity Xcode Project* ([https://docs.unity3d.com/Manual/StructureOfXcodeProject.html](https://docs.unity3d.com/Manual/StructureOfXcodeProject.html))
    and other related pages.'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 有关使用Xcode和Unity的更多信息，请参阅*Unity手册：Unity Xcode项目的结构*([https://docs.unity3d.com/Manual/StructureOfXcodeProject.html](https://docs.unity3d.com/Manual/StructureOfXcodeProject.html))和其他相关页面。
- en: 'This process can be confusing. Everyone who develops for iOS goes through a
    similar process, so you''re certainly not alone, and there''s a lot of answers
    to be found on the internet. Remember: "DuckDuckGo is your friend." And fortunately,
    you usually only need to do this once.'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程可能会让人困惑。每个为iOS开发的人都会经历一个类似的过程，所以您绝对不是唯一一个，互联网上有很多答案可以找到。记住：“DuckDuckGo是你的朋友。”幸运的是，您通常只需要做一次。
- en: Note that you can also set your **Signing Team ID** in your Unity Player settings
    by navigating to **Edit | Project Settings | Player | Identification**.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，您也可以通过导航到**编辑 | 项目设置 | 玩家 | 识别**来在您的Unity玩家设置中设置您的**签名团队ID**。
- en: Information – Apple's Own AR Development Tools
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 信息 - 苹果自己的AR开发工具
- en: Upon reviewing the Apple web pages, you will discover that they provide their
    own AR development tools ([https://developer.apple.com/augmented-reality/tools/](https://developer.apple.com/augmented-reality/tools/))
    apart from Unity. Of course, I'm a big fan of Unity and AR Foundation, which give
    you device independence and all the other powerful features of Unity, but it's
    good to be aware of alternatives.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看苹果网页后，您会发现它们除了Unity之外还提供了自己的AR开发工具（[https://developer.apple.com/augmented-reality/tools/](https://developer.apple.com/augmented-reality/tools/))。当然，我是一位Unity和AR
    Foundation的大粉丝，它们为您提供了设备独立性和Unity的所有其他强大功能，但了解替代方案也是好的。
- en: Your project has now been set up to target Apple ARKit with AR Foundation. We'll
    verify your settings in the next chapter, [*Chapter 2*](B15145_02_Final_SS_epub.xhtml#_idTextAnchor037)*,
    Your First AR Scene*, when we create an AR scene, build it, and run it on your
    device.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 您的项目现在已设置为目标为Apple ARKit的AR Foundation。我们将在下一章，[*第2章*](B15145_02_Final_SS_epub.xhtml#_idTextAnchor037)*，您的第一个AR场景*中验证您的设置，当我们创建一个AR场景，构建它并在您的设备上运行时。
- en: Developing for wearable AR glasses
  id: totrans-291
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开发可穿戴AR眼镜
- en: AR Foundation supports not just handheld mobile AR devices using ARCore and
    ARKit, but also wearable AR glasses, including Microsoft HoloLens and Magic Leap.
    Likewise, targeting wearable AR devices may require configuring Unity to target
    a platform other than Android or iOS. Wearable AR glasses remain relatively expensive
    and outside the reach of the typical consumer as they're aimed at corporate or
    industrial applications. While this book can serve as a lovely starting point
    for developing these devices, and the projects can be adapted accordingly, it
    is outside the scope of this book to support wearable AR devices in the subsequent
    chapters.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: AR Foundation不仅支持使用ARCore和ARKit的手持移动AR设备，还支持可穿戴AR眼镜，包括微软HoloLens和Magic Leap。同样，针对可穿戴AR设备可能需要配置Unity以针对除Android或iOS以外的平台。由于它们针对的是企业或工业应用，可穿戴AR眼镜相对较贵，并且超出了典型消费者的购买能力。虽然这本书可以作为开发这些设备的美好起点，并且项目可以根据需要进行调整，但本书的范围不包括在后续章节中支持可穿戴AR设备。
- en: 'For **Microsoft HoloLens**, you must set up Unity to target **Universal Windows
    Platform (UWP)**, beginning with installing the required module via Unity Hub,
    as shown in the following screenshot:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**微软HoloLens**，您必须设置Unity以针对**通用Windows平台（UWP**），从通过Unity Hub安装所需的模块开始，如下面的截图所示：
- en: '![Figure 1.14 – Adding UWP build support for HoloLens'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.14 – 为HoloLens添加UWP构建支持'
- en: '](img/Figure_1.14-hub-modules-uwp.jpg)'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.14-hub-modules-uwp.jpg)'
- en: Figure 1.14 – Adding UWP build support for HoloLens
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.14 – 为HoloLens添加UWP构建支持
- en: 'To set up for HoloLens development, you will need to use **Visual Studio IDE**
    and a compatible version of **Windows 10 SDK**. For additional information, here
    are some useful links:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 要为HoloLens开发设置，您需要使用**Visual Studio IDE**和兼容的**Windows 10 SDK**版本。有关更多信息，以下是一些有用的链接：
- en: 'Unity for Windows Mixed Reality: [https://unity3d.com/partners/microsoft/mixed-reality](https://unity3d.com/partners/microsoft/mixed-reality).'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity for Windows Mixed Reality：[https://unity3d.com/partners/microsoft/mixed-reality](https://unity3d.com/partners/microsoft/mixed-reality)。
- en: 'Microsoft Mixed Reality – Install the Tools: [https://docs.microsoft.com/en-us/windows/mixed-reality/develop/install-the-tools?tabs=unity](https://docs.microsoft.com/en-us/windows/mixed-reality/develop/install-the-tools?tabs=unity)
    (this includes an installation checklist too).'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软混合现实 – 安装工具：[https://docs.microsoft.com/en-us/windows/mixed-reality/develop/install-the-tools?tabs=unity](https://docs.microsoft.com/en-us/windows/mixed-reality/develop/install-the-tools?tabs=unity)（这还包括一个安装清单）。
- en: 'Unity Windows XR Plugin: [https://docs.unity3d.com/Packages/com.unity.xr.windowsmr@5.2/manual/index.html](mailto:https://docs.unity3d.com/Packages/com.unity.xr.windowsmr@5.2/manual/index.html).You
    just have to find the document page for the version you are using. This page also
    includes recommended **Build Settings** and **Player Settings**.'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity Windows XR插件：[https://docs.unity3d.com/Packages/com.unity.xr.windowsmr@5.2/manual/index.html](mailto:https://docs.unity3d.com/Packages/com.unity.xr.windowsmr@5.2/manual/index.html)。您只需找到您所使用版本的文档页面。此页面还包括推荐的**构建设置**和**玩家设置**。
- en: Information – Microsoft Mixed Reality Toolkit (MRTK)
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 信息 – 微软混合现实工具包（MRTK）
- en: 'Note that Microsoft also offers its own open source cross-platform development
    kit, known as the **Mixed Reality Toolkit** (**MRTK**), for Unity, an alternative
    to AR Foundation. I think this framework has a very interesting implementation
    with a versatile architecture that supports a spectrum of devices from AR to VR.
    Learn more here: [https://docs.microsoft.com/en-us/windows/mixed-reality/develop/unity/mrtk-getting-started](https://docs.microsoft.com/en-us/windows/mixed-reality/develop/unity/mrtk-getting-started).'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，微软还为其Unity平台提供自己的开源跨平台开发工具包，称为**混合现实工具包**（**MRTK**），作为AR Foundation的替代品。我认为这个框架有一个非常有趣的实现，具有灵活的架构，支持从AR到VR的一系列设备。了解更多信息请点击此处：[https://docs.microsoft.com/en-us/windows/mixed-reality/develop/unity/mrtk-getting-started](https://docs.microsoft.com/en-us/windows/mixed-reality/develop/unity/mrtk-getting-started)。
- en: 'For the **Magic Leap** wearable AR products, you must set up Unity to target
    **Lumen OS**, beginning with installing the required module via Unity Hub, as
    shown in the following screenshot:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 **Magic Leap** 可穿戴 AR 产品，您必须设置 Unity 以针对 **Lumen OS**，从通过 Unity Hub 安装所需的模块开始，如下截图所示：
- en: '![Figure 1.15 – Adding Lumen OS build support for Magic Leap'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.15 – 为 Magic Leap 添加 Lumen OS 构建支持'
- en: '](img/Figure_1.15-hub-modules-magicleap.jpg)'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.15-hub-modules-magicleap.jpg)'
- en: Figure 1.15 – Adding Lumen OS build support for Magic Leap
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.15 – 为 Magic Leap 添加 Lumen OS 构建支持
- en: 'For additional information, here are some useful links:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更多信息，以下是一些有用的链接：
- en: 'Unity for Magic Leap: [https://unity3d.com/partners/magicleap](https://unity3d.com/partners/magicleap%20)'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity for Magic Leap：[https://unity3d.com/partners/magicleap](https://unity3d.com/partners/magicleap%20)
- en: 'Magic Leap Developer Portal: [https://developer.magicleap.com/en-us/home](https://developer.magicleap.com/en-us/home)'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Magic Leap 开发者门户：[https://developer.magicleap.com/en-us/home](https://developer.magicleap.com/en-us/home)
- en: 'Magic Leap Unity Development: [https://developer.magicleap.com/en-us/learn/guides/unity-overview](https://developer.magicleap.com/en-us/learn/guides/unity-overview)'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Magic Leap Unity 开发：[https://developer.magicleap.com/en-us/learn/guides/unity-overview](https://developer.magicleap.com/en-us/learn/guides/unity-overview)
- en: 'Using Magic Leap with AR Foundation: [https://resources.unity.com/unitenow/onlinesessions/using-magic-leap-with-ar-foundation-in-unity-2020-1](https://resources.unity.com/unitenow/onlinesessions/using-magic-leap-with-ar-foundation-in-unity-2020-1)
    (*Unite Now* presentation)'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 AR Foundation 与 Magic Leap：[https://resources.unity.com/unitenow/onlinesessions/using-magic-leap-with-ar-foundation-in-unity-2020-1](https://resources.unity.com/unitenow/onlinesessions/using-magic-leap-with-ar-foundation-in-unity-2020-1)
    (*Unite Now* 演讲)
- en: Interestingly, Magic Leap provides a **Unity Template** that you can add to
    Unity Hub as a starting point for new projects ([https://github.com/magicleap/UnityTemplate](https://github.com/magicleap/UnityTemplate)).
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，Magic Leap 提供了一个 **Unity 模板**，您可以将它添加到 Unity Hub 中，作为新项目的起点（[https://github.com/magicleap/UnityTemplate](https://github.com/magicleap/UnityTemplate))。
- en: Now that you have a project set up for AR development on your target platform
    and device, let's build a test to make sure things are working so far.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经在您的目标平台和设备上设置了 AR 开发项目，让我们构建一个测试来确保一切按计划进行。
- en: Building and running a test scene
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建 和 运行 测试 场景
- en: 'Before moving on and building an AR project, it is prudent to verify your project
    has been set up properly so far by trying to build and run it on your target device.
    For this, we''ll create a minimal AR scene and verify that it satisfies the following
    checklist:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续构建 AR 项目之前，明智的做法是验证您的项目是否已经正确设置，通过尝试在您的目标设备上构建和运行它。为此，我们将创建一个最小的 AR 场景，并验证它是否满足以下清单：
- en: You can build the project for your target platform.
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以为您的目标平台构建项目。
- en: The app launches on your target device.
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序在您的目标设备上启动。
- en: When the app starts, you see a video feed from its camera on the screen.
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当应用程序启动时，您会在屏幕上看到来自其摄像头的视频流。
- en: The app scans the room and renders depth points on your screen.
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序扫描房间并在您的屏幕上渲染深度点。
- en: 'I''ll walk you through this step by step. Don''t worry if you don''t understand
    everything; we will go through this in more detail together in [*Chapter 2*](B15145_02_Final_SS_epub.xhtml#_idTextAnchor037)*,
    Your First AR Scene*. Please do the following in your current project, which should
    be open in Unity:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 我将一步步地引导您。如果您不理解所有内容，请不要担心；我们将在 [*第 2 章*](B15145_02_Final_SS_epub.xhtml#_idTextAnchor037)*，您的第一个
    AR 场景* 中更详细地一起探讨。请在您的当前项目中执行以下操作，该项目应在 Unity 中打开：
- en: Create a new scene named *BasicTest* by selecting `Scenes` folder, call it `BasicTest`,
    and click **Save**.
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择 `Scenes` 文件夹，命名为 `BasicTest` 并点击 **Save**，创建一个名为 *BasicTest* 的新场景。
- en: In the **Hierarchy** window, delete the default **Main Camera** (*right-click*
    and select **Delete**, or use the *Del* keyboard key).
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **Hierarchy** 窗口中，删除默认的 **Main Camera**（右键单击并选择 **Delete**，或使用 *Del* 键盘键）。
- en: Add an AR Session object by selecting **GameObject | XR | AR Session**.
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择 **GameObject | XR | AR Session** 添加一个 AR 会话对象。
- en: Add an AR Session Origin object by selecting **GameObject | XR | AR Session
    Origin**.
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择 **GameObject | XR | AR Session Origin** 添加一个 AR 会话原点对象。
- en: Add a point cloud manager to the Session Origin object by clicking `ar point`
    in the search field and select **AR Point Cloud Manager**.
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在搜索字段中点击 `ar point` 并选择 **AR Point Cloud Manager**，将点云管理器添加到会话原点对象。
- en: 'You will notice that the Point Cloud Manager has an empty slot for a Point
    Cloud Prefab, which is used for visualizing the detected depth points. A **prefab**
    is a GameObject saved as a project asset that can be added to the scene (*instantiated*)
    at runtime. We''ll create a prefab using a very simple Particle System. Again,
    if this is new to you, don''t worry about it – just follow along:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到点云管理器有一个用于可视化检测到的深度点的空槽位，即点云预制件。**预制件**是一个保存为项目资产的游戏对象，可以在运行时添加到场景（*实例化*）。我们将使用一个非常简单的粒子系统创建一个预制件。再次提醒，如果你对此不熟悉，不要担心，只需跟着做即可：
- en: Create a Particle System by selecting **GameObject | Effects | Particle System**.
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择**GameObject | Effects | Particle System**创建一个粒子系统。
- en: In the `PointParticle`.
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`点粒子`中。
- en: On the **Particle System** component, uncheck the **Looping** checkbox.
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**粒子系统**组件上，取消勾选**循环**复选框。
- en: Set its `0.1`.
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置其`0.1`。
- en: Uncheck the **Play on Awake** checkbox.
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消勾选**唤醒时播放**复选框。
- en: Click `ar point` in the search field, and select **AR Point Cloud**.
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索字段中点击`ar point`，然后选择**AR点云**。
- en: Likewise, click **Add Component** and select **AR Point Cloud Visualizer**.
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，点击**添加组件**并选择**AR点云可视化器**。
- en: Drag the **PointParticle** object from the **Hierarchy** window to the **Prefabs**
    folder in the **Project** window (create the folder first if necessary). This
    makes the GameObject into a prefab.
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**PointParticle**对象从**层次结构**窗口拖到**项目**窗口中的**预制件**文件夹（如果需要，先创建文件夹）。这使得GameObject成为一个预制件。
- en: Delete the **PointParticle** object from the **Hierarchy** window using *right-click*
    **| Delete** or press the *Del* key.
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用*右键单击* **| 删除**或按*Del*键从**层次结构**窗口中删除**PointParticle**对象。
- en: 'The Inspector window of the **PointParticle** object should now look as follows:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '**PointParticle**对象的检查器窗口现在应该如下所示：'
- en: '![Figure 1.16 – Inspector view of our PointParticle prefab with the settings
    we''re using highlighted'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.16 – 使用我们使用的设置突出显示的PointParticle预制件的检查器视图'
- en: '](img/Figure_1.16-pointparticle.jpg)'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.16-pointparticle.jpg)'
- en: Figure 1.16 – Inspector view of our PointParticle prefab with the settings we're
    using highlighted
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.16 – 使用我们使用的设置突出显示的PointParticle预制件的检查器视图
- en: 'We can now apply the PointParticle prefab to the AR Point Cloud Manager, as
    follows:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以将PointParticle预制件应用到AR点云管理器中，如下所示：
- en: In the **Hierarchy** window, select the **AR Session Origin** object.
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**层次结构**窗口中，选择**AR会话起源**对象。
- en: From the **Project** window, drag the **PointParticle** prefab into the **AR
    Point Cloud Manager |** **Point Cloud Prefab** slot. (Alternatively, click the
    "doughnut" icon to the right of the slot to open the **Select GameObject** window,
    select the **Assets** tab, and choose **PointParticle**).
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**项目**窗口，将**PointParticle**预制件拖到**AR点云管理器 |** **点云预制件**槽中。（或者，点击槽右侧的“甜甜圈”图标以打开**选择GameObject**窗口，选择**资产**选项卡，并选择**PointParticle**）。
- en: Save the scene using **File | Save**.
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**文件 | 保存**保存场景。
- en: 'The resulting AR Session Origin should look as follows:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 结果的AR会话起源应该如下所示：
- en: '![Figure 1.17 – Session Origin with a Point Cloud Manager component populated
    with the PointParticle prefab](img/Figure_1.17-pointcloudmanager.jpg)'
  id: totrans-345
  prefs: []
  type: TYPE_IMG
  zh: '![图1.17 – 填充了PointParticle预制件的点云管理器组件的会话起源](img/Figure_1.17-pointcloudmanager.jpg)'
- en: Figure 1.17 – Session Origin with a Point Cloud Manager component populated
    with the PointParticle prefab
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.17 – 填充了PointParticle预制件的点云管理器组件的会话起源
- en: 'Now, we are ready to build and run the scene. Perform the following steps:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经准备好构建和运行场景。执行以下步骤：
- en: Open the **Build Settings** window using **File | Build Settings**.
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**文件 | 构建设置**打开**构建设置**窗口。
- en: Click the **Add Open Scenes** button to add this scene to the build list.
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加打开场景**按钮将此场景添加到构建列表中。
- en: In the **Scenes in Build** list, uncheck all scenes except the **BasicTest**
    one.
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**构建中的场景**列表中，取消勾选除**BasicTest**以外的所有场景。
- en: Ensure your device is connected to your computer via USB cable.
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您的设备通过USB线连接到您的计算机。
- en: Press the `Builds/`. Give it a filename (if required) and press **Save**. It
    may take a while to complete this task.
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按`Builds/`。如果需要，给它一个文件名，然后按**保存**。完成此任务可能需要一些时间。
- en: If all goes well, the project will build, install on your device, and launch.
    You should see a camera video feed on your device's screen. Move the phone slowly
    in different directions. As it scans the environment, feature points will be detected
    and rendered on the screen. The following screen capture shows my office door
    with a point cloud rendered on my phone. As you scan, the particles in the environment
    that are closer to the camera appear larger than the ones further away, contributing
    to the user's perception of depth in the scene.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，项目将构建，安装到你的设备上，并启动。你应该能在你的设备屏幕上看到相机视频流。慢慢地将手机向不同方向移动。当它扫描环境时，特征点将被检测并在屏幕上渲染。下面的屏幕截图显示了我办公室的门，我的手机上渲染了点云。当你扫描时，离相机更近的环境中的粒子看起来比远离相机的大，这有助于用户感知场景中的深度。
- en: '![Figure 1.18 – Point cloud rendered on my phone using the BasicTest scene'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.18 – 使用BasicTest场景在我的手机上渲染的点云'
- en: '](img/Figure_1.18-officedoor.jpg)'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_1.18-officedoor.jpg)'
- en: Figure 1.18 – Point cloud rendered on my phone using the BasicTest scene
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.18 – 使用BasicTest场景在我的手机上渲染的点云
- en: If you encounter errors while building the project, look at the **Console**
    window in the Unity Editor for messages (in the default layout, it's a tab behind
    the **Project** window). Read the messages carefully, generally starting from
    the top. If that doesn't help, then review each of the steps detailed in this
    chapter. If the fix is still not apparent, do an internet search for the message's
    text, as you can be certain you're probably not the first person to have a similar
    question!
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在构建项目时遇到错误，请查看Unity编辑器中的**控制台**窗口中的消息（在默认布局中，它位于**项目**窗口后面的一个标签页）。仔细阅读这些消息，通常从顶部开始。如果这没有帮助，那么请回顾本章中详细说明的每个步骤。如果修复方法仍然不明显，请在互联网上搜索消息的文本，因为你可以确信你很可能不是第一个有类似问题的人！
- en: Tip – Build Early and Build Often
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士 – 提前构建，经常构建
- en: It is important to get builds working as soon as possible in a project. If not
    now, then certainly do so before the end of the next chapter, as it does not make
    a lot of sense to be developing an AR application without having the confidence
    to build, run, and test it on a physical device.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目中尽快使构建工作正常进行是很重要的。如果不是现在，那么至少在下一章结束之前要做到这一点，因为没有在物理设备上构建、运行和测试AR应用程序的信心去开发AR应用程序是没有太多意义的。
- en: With a successful build, you're now ready to build your own AR projects. Congratulations!
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功构建之后，你现在可以开始构建自己的AR项目了。恭喜你！
- en: Summary
  id: totrans-361
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, after a quick introduction to augmented reality, you immediately
    got started on your road to developing your own AR projects. You installed Unity
    via Unity Hub and learned the importance of tracking the different versions of
    Unity, as well as its projects and packages. You got a brief tour of using the
    Unity Editor, including some key concepts that are fundamental to 3D and AR.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，在对增强现实进行简要介绍后，你立即开始了自己AR项目的开发之路。你通过Unity Hub安装了Unity，并学习了跟踪不同版本的Unity、其项目和包的重要性。你对使用Unity编辑器进行了简要的浏览，包括一些对3D和AR基本概念至关重要的关键概念。
- en: You then set up your project and system software for AR development, including
    installing an XR plugin, the AR Foundation package, tools for Android or Xcode,
    and other items necessary to get things set up. Lastly, we created a minimal AR
    scene (including a quick point cloud prefab using a particle system component)
    and built the scene to verify it builds and runs on your target device.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你为AR开发设置了你的项目和系统软件，包括安装XR插件、AR Foundation包、Android或Xcode的工具，以及其他设置所需的项目。最后，我们创建了一个最小的AR场景（包括使用粒子系统组件的快速点云预制体）并构建了场景，以验证它是否可以在你的目标设备上构建和运行。
- en: Setting up your machine may be intricate and painful, but it's your entry ticket
    to Unity development, and everyone has to do it. If you got through this chapter
    with everything running, you are a hero!
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 设置你的机器可能既复杂又痛苦，但这是你进入Unity开发的入场券，每个人都需要这样做。如果你在这一章中一切顺利，那么你就是英雄！
- en: In the next chapter, we'll begin to take a closer look at AR development using
    Unity and AR Foundation by creating a new AR scene, step by step, explaining each
    component as we go.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将开始通过创建一个新的AR场景，一步一步地深入了解使用Unity和AR Foundation进行AR开发，同时解释每个组件。
