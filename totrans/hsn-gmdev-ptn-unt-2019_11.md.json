["```cs\npublic interface ISeekBehaviour\n{\n    void Seek();\n}\n```", "```cs\nusing UnityEngine;\n\npublic class SeekWithGPS : ISeekBehaviour\n{\n    public void Seek()\n    {\n        Debug.Log(\"Seeking target with GPS coordinates.\");\n    }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class SeekWithHeat : ISeekBehaviour\n{\n    public void Seek()\n    {\n        Debug.Log(\"Seeking target with heat signature.\");\n    }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class SeekWithSonar : ISeekBehaviour\n{\n    public void Seek()\n    {\n        Debug.Log(\"Seeking with sonar.\");\n    }\n}\n```", "```cs\nabstract public class Missile\n{\n    protected ISeekBehaviour seekBehavior;\n\n    public void ApplySeek()\n    {\n        seekBehavior.Seek();\n    }\n\n    public void SetSeekBehavior(ISeekBehaviour seekType)\n    {\n        this.seekBehavior = seekType;\n    }\n}\n```", "```cs\npublic class Torpedo : Missile\n{\n    void Awake()\n    {\n        this.seekBehavior = new SeekWithSonar();\n    }\n}\n```", "```cs\npublic class SideWinder : Missile\n{\n    void Awake()\n    {\n        this.seekBehavior = new SeekWithHeat();\n    }\n}\n```", "```cs\npublic class Tomahawk : Missile\n{\n void Awake()\n {\n this.seekBehavior = new SeekWithGPS();\n }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class Client : MonoBehaviour\n{\n    void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.D))\n        {\n            // Applying default seeking behaviour to missiles.\n            Missile sideWinder = ScriptableObject.CreateInstance<SideWinder>();\n            sideWinder.ApplySeek();\n\n            Missile tomahawk = ScriptableObject.CreateInstance<Tomahawk>();\n            tomahawk.ApplySeek();\n\n            Missile torpedo = ScriptableObject.CreateInstance<Torpedo>();\n            torpedo.ApplySeek();\n\n            // Applying custom seeking behaviour to a SideWinder.\n            Missile sideWinderWithSonar = ScriptableObject.CreateInstance<SideWinder>();\n            ISeekBehaviour sonar = new SeekWithSonar();\n            sideWinderWithSonar.SetSeekBehavior(sonar);\n            sideWinderWithSonar.ApplySeek();\n        }\n    }\n}\n```"]