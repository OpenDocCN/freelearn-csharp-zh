- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Getting to Know Your Environment
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解你的环境
- en: Pop culture often markets computer programmers as outsiders, lone wolves, or
    geeky hackers. People possessing extraordinary mental gifts for algorithmic thought,
    little social IQ, and the odd anarchic bent. While this is not the case, there
    is something to the idea that learning to code fundamentally changes the way you
    look at the world. The good news is your naturally curious mind already wants
    to see these kinds of patterns in the world, and you may even come to enjoy this
    new way of thinking.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 流行文化常常将计算机程序员描绘成局外人、孤独的狼或古怪的黑客。这些人拥有非凡的算法思维天赋，社交智商较低，并且有着奇特的无政府主义倾向。虽然情况并非如此，但学习编码从根本上改变你看世界的方式这一观点是有一定道理的。好消息是，你天生的好奇心已经想要在世界中看到这些类型的模式，你甚至可能会喜欢这种新的思维方式。
- en: From the moment your eyes snap open in the morning to the last glimpse of your
    ceiling fan before you go to sleep, you're unconsciously using analytical skills
    that translate to programming—you're just missing the right language and syntax
    to map those life skills into code. You know your age, right? That's a variable.
    When you cross the street, I presume you look down the road in both directions
    before stepping off the curb like the rest of us. That's evaluating different
    conditions, better known as control flow in programming terminology. When you
    look at a can of pop, you instinctively identify that it has certain properties
    like shape, weight, and contents. That's a class object! You get the idea.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 从你早上睁开眼睛的那一刻起，到你睡觉前最后一眼看到你的吊扇，你都在无意识地使用分析技能，这些技能可以转化为编程——你只是缺少正确的语言和语法来将这些生活技能映射到代码中。你知道你的年龄，对吧？那是一个变量。当你过马路时，我猜你在离开人行道之前会像我们其他人一样，在两个方向上看看路。那是在评估不同的条件，在编程术语中被称为控制流。当你看一个汽水瓶时，你会本能地识别出它具有某些属性，如形状、重量和内容。那是一个类对象！你明白了。
- en: With all that real-world experience at your fingertips, you're more than ready
    to cross over into the realm of programming. To kick off your journey, you'll
    need to know how to set up your development environment, work with the applications
    involved, and know exactly where to go when you need help.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的指尖拥有所有这些现实世界的经验后，你已经准备好进入编程领域。为了开始你的旅程，你需要知道如何设置你的开发环境，与相关的应用程序一起工作，并且当你需要帮助时，确切知道去哪里。
- en: 'To those ends, we''re going to begin by delving into the following C# topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 为了达到这些目的，我们将从深入研究以下C#主题开始：
- en: Getting started with Unity 2021
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始使用Unity 2021
- en: Using C# with Unity
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用C#与Unity
- en: Exploring the documentation
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索文档
- en: Let's get started!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Sometimes it's easier to start with what a thing isn't, rather than what it
    is. The goal of this book *isn't* to teach you everything there is to know about
    the Unity game engine or game development. By necessity, we'll cover these topics
    at a basic level at the beginning of our journey, and in more detail in *Chapter
    6*, *Getting Your Hands Dirty with Unity*. However, these topics are included
    to provide a fun, accessible way to learn the C# programming language from the
    ground up.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，从一件事情不是什么，而不是它是什么开始，可能更容易。本书的**目的**不是教你关于Unity游戏引擎或游戏开发的所有知识。根据需要，我们将在旅程的开始阶段对这些主题进行基本介绍，并在**第6章**“用Unity动手实践”中进行更详细的介绍。然而，这些主题的加入是为了提供一种有趣、易于理解的方式来从头学习C#编程语言。
- en: Since this book is aimed at complete beginners to programming, if you have no
    previous experience with either C# or Unity, you're in the right place! If you've
    had some experience with the Unity Editor but not with programming, guess what?
    This is still the place to be. Even if you've dabbled in a bit of C# mixed with
    Unity, but want to explore some more intermediate or advanced topics, the later
    chapters of this book can provide you with what you're looking for.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本书面向编程的初学者，如果你对C#或Unity没有任何先前的经验，那么你就在正确的位置！如果你对Unity编辑器有一些经验，但对编程没有，猜猜看？这个地方仍然是你的选择。即使你在C#和Unity的混合中有所涉猎，但想要探索更多中级或高级主题，本书的后续章节可以为你提供你所寻找的内容。
- en: If you're an experienced programmer in other languages, feel free to skip the
    beginner theory and dive right into the parts you're interested in, or stick around
    and refresh your fundamentals.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是在其他语言中经验丰富的程序员，你可以自由地跳过初学者理论，直接进入你感兴趣的部分，或者留下来巩固你的基础知识。
- en: In addition to running Unity 2021, you'll also be using C# 8.0 and Visual Studio
    to write your game code.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 除了运行Unity 2021之外，你还将使用C# 8.0和Visual Studio来编写你的游戏代码。
- en: Getting started with Unity 2021
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you don''t have Unity installed, or are running an earlier version, follow
    these steps to set up your environment:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Head over to [https://www.unity.com/](https://www.unity.com/).
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **Get started** (shown in the following screenshot):![](img/B17573_01_01.png)
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 1.1: Unity homepage'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This will take you to the Unity store page. Don't feel overwhelmed by this—you
    can get Unity completely for free!
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If the Unity homepage looks different for you than what you can see in *Figure
    1.1*, you can go directly to [https://store.unity.com](https://store.unity.com).
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select the **Personal** option. The other paid options offer more advanced functionality
    and services, but you can check these out on your own:![](img/B17573_01_02.png)
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 1.2: Unity plans and pricing'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: After selecting the **Personal** plan, you'll be asked if you're a first-time
    or returning user. Select **Start here** under **First-time users**:![](img/B17573_01_03.png)
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 1.3: Start creating with the Unity portal'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select **Agree and download** to get your copy of Unity Hub:![](img/B17573_01_04.png)
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 1.4: Unity terms and conditions'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the download is complete, follow these steps:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: Open up the installer (by double-clicking it)
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Accept the user agreement
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Follow the installation instructions
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When you get the green light, go ahead and fire up the Unity Hub application!
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: The newest version of Unity Hub will offer an install wizard when you first
    open the application. If you'd like to follow that, feel free.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: 'The following steps show you how to start a new project without any help from
    the application:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Select **Skip Install Wizard** in the lower left, then confirm **Skip Wizard**:![](img/B17573_01_05.png)
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 1.5: Install wizard'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Switch to the **Installs** tab from the left-hand menu, and select **ADD** to
    choose your Unity version:![](img/B17573_01_06.png)
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 1.6: Unity Hub Installs panel'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select your desired version of Unity, then click **NEXT**. At the time of writing,
    Unity 2021 is still in pre-release, but you should be able to select a 2021 version
    from the **Official Releases** list by the time you're reading this:![](img/B17573_01_07.png)
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 1.7: Add Unity Version pop-up window'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You'll then be given the option to add various modules to your installation.
    Make sure the Visual Studio module is selected and click **NEXT****:**![](img/B17573_01_08.png)
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 1.8: Adding install modules'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: If you want to add any modules later, you can click the **More** button (three-dot
    icon) at the upper right of any version in the **Installs** window.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: 'When the installation is complete, you''ll see a new version in your **Installs**
    panel, as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17573_01_09.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.9: Installs tab with Unity versions'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: You can find additional information and resources about the Unity Hub application
    at [https://docs.unity3d.com/Manual/GettingStartedInstallingHub.html](https://docs.unity3d.com/Manual/GettingStartedInstallingHub.html).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: There's always a chance of something going wrong, so be sure to check the following
    section if you're using macOS Catalina or later, which has been known to throw
    up issues.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 总是有出错的可能性，所以如果你使用的是OS Catalina或更新的macOS，它可能会出现问题，请确保查看以下部分。
- en: Using macOS
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用macOS
- en: 'If you''re working on a Mac with OS Catalina or later, there is a known issue
    when using some versions of Unity Hub to install Unity. If that''s the case for
    you, take a deep breath, go to the **Unity download archive**, and grab the 2021
    version you need ([https://unity3d.com/get-unity/download/archive](https://unity3d.com/get-unity/download/archive)).
    Remember to use the **Downloads (Mac)** option instead of the Unity Hub download:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是OS Catalina或更新的Mac操作系统，使用某些版本的Unity Hub安装Unity时会出现已知问题。如果你遇到这种情况，深呼吸，前往**Unity下载存档**，并获取你需要的2021版本（[https://unity3d.com/get-unity/download/archive](https://unity3d.com/get-unity/download/archive)）。请记住使用**下载（Mac）**选项而不是Unity
    Hub下载：
- en: '![](img/B17573_01_10.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B17573_01_10.png)'
- en: 'Figure 1.10: Unity download archive'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.10：Unity下载存档
- en: If you're working on Windows and run into similar install issues, downloading
    an archived copy of Unity will also work just fine.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用Windows并遇到类似的安装问题，下载Unity的存档副本也会工作得很好。
- en: The download is a normal application installer since it's a `.dmg` file. Open
    it up, follow the instructions, and you'll be ready to go in no time!
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 下载是一个正常的应用程序安装程序，因为它是一个`.dmg`文件。打开它，按照说明操作，你很快就可以开始了！
- en: '![](img/B17573_01_11.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B17573_01_11.png)'
- en: 'Figure 1.11: Successful Unity installation from the download manager'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.11：下载管理器中成功的Unity安装
- en: All of the examples and screenshots for this book were created and captured
    using Unity 2021.1.0b8\. If you're using a newer version, things might look slightly
    different in the Unity Editor, but this shouldn't affect your following along.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的所有示例和截图都是使用Unity 2021.1.0b8创建和捕获的。如果你使用的是更新的版本，Unity编辑器中的某些内容可能会有所不同，但这不应该影响你跟随教程。
- en: Now that Unity Hub and Unity 2021 are installed, it's time to create a new project!
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在Unity Hub和Unity 2021都已安装，是时候创建一个新项目了！
- en: Creating a new project
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建新项目
- en: Launch the Unity Hub application to start a new project. If you have a Unity
    account, go ahead and sign in; if not, you can either create one or hit **Skip**
    at the bottom of the screen.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 启动Unity Hub应用程序以开始新项目。如果你有Unity账户，请继续登录；如果没有，你可以创建一个或点击屏幕底部的**跳过**。
- en: 'Now, let''s set up a new project by selecting the arrow icon next to the **NEW**
    button in the top right corner:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过选择右上角**新建**按钮旁边的箭头图标来设置一个新的项目：
- en: '![](img/B17573_01_12.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B17573_01_12.png)'
- en: 'Figure 1.12: Unity Hub Projects panel'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.12：Unity Hub项目面板
- en: 'Choose your 2021 version and set the following fields:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 选择你的2021版本并设置以下字段：
- en: '**Templates**: The project will default to **3D**'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模板**：项目将默认为**3D**'
- en: '**Project Name**: I''ll be calling mine `Hero Born`'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目名称**：我将我的命名为“英雄降世”'
- en: '**Location**: Wherever you''d like the project to be saved'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**位置**：你希望项目保存的位置'
- en: 'Once the settings have been configured, hit **CREATE**:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置完成，点击**创建**：
- en: '![](img/B17573_01_13.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B17573_01_13.png)'
- en: 'Figure 1.13: Unity Hub with new project configuration popup'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.13：Unity Hub带有新项目配置弹出窗口
- en: With the project created, you're all set to explore the Unity interface! You
    can re-open your project anytime from the **Projects** panel in Unity Hub.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 项目创建完成后，你就可以探索Unity界面了！你可以在Unity Hub的**项目**面板中随时重新打开你的项目。
- en: Navigating the editor
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编辑器导航
- en: 'When the new project finishes initializing, you''ll see the glorious Unity
    Editor! I''ve marked the important tabs (or panels, if you prefer) in the following
    screenshot:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 当新项目初始化完成后，你会看到辉煌的Unity编辑器！我在以下屏幕截图中标记了重要的标签页（或如果你更喜欢，面板）：
- en: '![](img/B17573_01_14.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B17573_01_14.png)'
- en: 'Figure 1.14: Unity interface'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.14：Unity界面
- en: 'This is a lot to take in, so we''ll look at each of these panels in more detail:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要吸收很多信息，所以我们将更详细地查看这些面板：
- en: The **Toolbar** panel is the topmost part of the Unity Editor. From here, you
    can manipulate objects (far-left button group) and play and pause the game (center
    buttons). The rightmost button group contains Unity services, **LayerMasks**,
    and layout scheme features, which we won't be using in this book because they
    don't apply to learning C#.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**工具栏**面板是Unity编辑器的最顶部。从这里，你可以操作对象（最左侧的按钮组）和播放/暂停游戏（中间的按钮）。最右侧的按钮组包含Unity服务、**层遮罩**和布局方案功能，在这本书中我们不会使用它们，因为它们与学习C#无关。'
- en: The **Hierarchy** window shows every item currently in the game **scene**. In
    the starter project, this is just the default camera and directional light, but
    when we create our prototype environment, this window will start to get filled
    in.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**层次结构** 窗口显示了当前游戏中 **场景** 中的每个项目。在入门项目中，这仅仅是默认的摄像机和方向光，但当我们创建我们的原型环境时，这个窗口将开始填充。'
- en: The **Game** and **Scene** windows are the most visual aspects of the editor.
    Think of the **Scene** window as your stage, where you can move and arrange 2D
    and 3D objects. When you hit the **Play** button, the **Game** window will take
    over, rendering the **Scene** view and any programmed interactions.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**游戏** 和 **场景** 窗口是编辑器中最直观的部分。将 **场景** 窗口视为你的舞台，你可以在这里移动和排列 2D 和 3D 对象。当你按下
    **播放** 按钮时，**游戏** 窗口将接管，渲染 **场景** 视图和任何编程交互。'
- en: The **Inspector** window is your one-stop shop for viewing and editing the properties
    of objects in the scene. If you select the **Main Camera** **GameObject** in the
    **Hierarchy**, you'll see several parts (Unity calls them components) are displayed—all
    of which are accessible from here.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**检查器** 窗口是查看和编辑场景中对象属性的单一窗口。如果你在 **层次结构** 中选择 **主摄像机** **游戏对象**，你会看到几个部分（Unity
    称之为组件）被显示出来——所有这些都可以从这里访问。'
- en: The **Project** window holds every asset that's currently in your project. Think
    of this as a representation of your project's folders and files.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**项目** 窗口包含了项目中当前所有的资源。将这视为你项目文件夹和文件的代表。'
- en: The **Console** window is where any output we want our scripts to print will
    show up. From here on out, if we talk about the console or debug output, this
    panel is where it will be displayed.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**控制台** 窗口是我们希望脚本打印输出的地方。从现在开始，如果我们谈论控制台或调试输出，这个面板就是它们将显示的地方。'
- en: If any of these windows get closed by accident, you can re-open them anytime
    from **Unity** | **Window** | **General**. You can find more in-depth breakdowns
    of each window's functionality in the Unity docs at [https://docs.unity3d.com/Manual/UsingTheEditor.html](https://docs.unity3d.com/Manual/UsingTheEditor.html).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不小心关闭了这些窗口中的任何一个，你可以随时从 **Unity** | **窗口** | **通用** 中重新打开它们。你可以在 Unity 文档中找到每个窗口功能的更深入分析，网址为
    [https://docs.unity3d.com/Manual/UsingTheEditor.html](https://docs.unity3d.com/Manual/UsingTheEditor.html)。
- en: 'Before continuing, it''s important that Visual Studio is set up as the script
    editor for your project. Go to the **Unity menu** | **Preferences** | **External
    Tools** and check that **External Script Editor** is set to Visual Studio for
    Mac or Windows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，确保 Visual Studio 已设置为项目的脚本编辑器。转到 **Unity 菜单** | **首选项** | **外部工具**，并确认
    **外部脚本编辑器** 设置为 Visual Studio for Mac 或 Windows：
- en: '![](img/B17573_01_15.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17573_01_15.png)'
- en: 'Figure 1.15: Changing the External Script Editor to Visual Studio'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.15：将外部脚本编辑器更改为 Visual Studio
- en: 'As a final tip, if you want to switch between light and dark modes, go to the
    **Unity menu** | **Preferences** | **General** and change the **Editor Theme**:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最后的提示，如果你想切换亮色和暗色模式，请转到 **Unity 菜单** | **首选项** | **通用** 并更改 **编辑器主题**：
- en: '![](img/B17573_01_16.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17573_01_16.png)'
- en: 'Figure 1.16: Unity general preferences panel'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.16：Unity 通用首选项面板
- en: I know that was a lot to process if you're new to Unity, but rest assured that
    any instructions going forward will always reference the necessary steps. I won't
    leave you wondering what button to push. With that out of the way, let's start
    creating some actual C# scripts.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道如果你是 Unity 新手，这可能会让你感到很多信息需要处理，但请放心，接下来的任何说明都将始终引用必要的步骤。我不会让你困惑于要按哪个按钮。现在我们已经解决了这个问题，让我们开始创建一些实际的
    C# 脚本。
- en: Using C# with Unity
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Unity 中使用 C#
- en: Going forward, it's important to think of Unity and C# as symbiotic entities.
    Unity is the engine where you'll create scripts and game objects, but the actual
    programming takes place in another program called Visual Studio. Don't worry about
    that right now—we'll get to that in a moment.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 今后，将 Unity 和 C# 视为共生实体是很重要的。Unity 是你创建脚本和游戏对象的引擎，但实际的编程是在另一个名为 Visual Studio
    的程序中进行的。现在不用担心这个——我们稍后会提到。
- en: Working with C# scripts
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 C# 脚本
- en: Even though we haven't covered any basic programming concepts yet, they won't
    have a home until we know how to create an actual C# script in Unity. A C# script
    is a special kind of C# file in which you'll write C# code. These scripts can
    be used in Unity to do virtually anything, from responding to player input to
    creating game mechanics.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们还没有介绍任何基本编程概念，但它们在没有学会如何在 Unity 中创建实际的 C# 脚本之前将无处安放。C# 脚本是一种特殊的 C# 文件，在其中您将编写
    C# 代码。这些脚本可以在 Unity 中执行几乎任何操作，从响应玩家输入到创建游戏机制。
- en: 'There are several ways to create C# scripts from the editor:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 从编辑器创建 C# 脚本有几种方法：
- en: Select **Assets** | **Create** | **C# Script**
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择 **Assets** | **创建** | **C# 脚本**
- en: Right under the **Project** tab, select the **+** icon and choose **C# Script**
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 **项目** 选项卡下方，选择 **+** 图标并选择 **C# 脚本**
- en: Right-click on the **Assets** folder in the **Project** tab and select **Create**
    | **C# Script** from the pop-up menu
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 **项目** 选项卡中右键单击 **Assets** 文件夹，并从弹出菜单中选择 **创建** | **C# 脚本**
- en: Select any GameObject in the **Hierarchy** window and click **Add Component**
    | **New Script**
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 **层次结构** 窗口中选择任何 GameObject，然后点击 **添加组件** | **新脚本**
- en: Going forward, whenever you're instructed to create a C# script, please use
    whichever method you prefer.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，每当您被指示创建 C# 脚本时，请使用您喜欢的任何方法。
- en: Resources and objects other than C# scripts can be created in the editor using
    the preceding methods. I'm not going to call out each of these variations every
    time we create something new, so just keep the options in the back of your mind.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 C# 脚本之外，您可以使用前面提到的方法在编辑器中创建资源和对象。我不会每次创建新内容时都指出这些变体，所以只需将这些选项记在心里即可。
- en: 'For the sake of organization, we''re going to store our various assets and
    scripts inside their marked folders. This isn''t just a Unity-related task—it''s
    something you should always do, and your coworkers will thank you (I promise):'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 为了组织起见，我们将把各种资源和脚本存储在各自的标记文件夹中。这不仅仅是一个与 Unity 相关的任务——这是一件您应该始终做的事情，您的同事会感谢您的（我保证）：
- en: From the **Project** tab, select **+** | **Folder** (or whichever method you
    like best—in *Figure 1.17* we've selected **Assets** | **Create** | **Folder**)
    and name it `Scripts`:![](img/B17573_01_17.png)
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **项目** 选项卡，选择 **+** | **文件夹**（或您最喜欢的任何方法——在图 1.17 中我们选择了 **Assets** | **创建**
    | **文件夹**）并将其命名为 `Scripts`：![](img/B17573_01_17.png)
- en: 'Figure 1.17: Creating a C# script'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.17：创建 C# 脚本
- en: Double-click on the **Scripts** folder and create a new C# script. By default,
    the script will be named `NewBehaviourScript`, but you'll see the filename highlighted,
    so you have the option to immediately rename it. Type in `LearningCurve` and hit
    `Enter`:![](img/B17573_01_18.png)
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击 **Scripts** 文件夹，创建一个新的 C# 脚本。默认情况下，脚本将被命名为 `NewBehaviourScript`，但您会看到文件名被突出显示，因此您可以选择立即重命名它。输入
    `LearningCurve` 并按 `Enter` 键：![](img/B17573_01_18.png)
- en: 'Figure 1.18: Project window with the Scripts folder selected'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.18：选择脚本文件夹的项目窗口
- en: You can use the small slider in the bottom right of the **Project** tab to change
    how your files are displayed.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 **项目** 选项卡右下角的小滑块来更改文件显示方式。
- en: So, you've just created a subfolder named `Scripts`, as shown in the preceding
    screenshot. Inside that parent folder, you created a C# script named `LearningCurve.cs`
    (the `.cs` file type stands for C-Sharp, in case you were wondering), which is
    now saved as part of our *Hero Born* project assets. All that's left to do is
    open it up in Visual Studio!
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，您已经创建了一个名为 `Scripts` 的子文件夹，如前面的截图所示。在该父文件夹内部，您创建了一个名为 `LearningCurve.cs`
    的 C# 脚本（`.cs` 文件类型代表 C-Sharp，以防您想知道），现在它作为我们 *Hero Born* 项目资源的一部分保存。接下来要做的就是将其在
    Visual Studio 中打开！
- en: Introducing the Visual Studio editor
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍 Visual Studio 编辑器
- en: While Unity can create and store C# scripts, they need to be edited using Visual
    Studio. A copy of Visual Studio comes pre-packaged with Unity and will open up
    automatically when you double-click any C# script from inside the editor.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Unity 可以创建和存储 C# 脚本，但它们需要使用 Visual Studio 进行编辑。Unity 预装了 Visual Studio 的副本，当您在编辑器中双击任何
    C# 脚本时，它将自动打开。
- en: Opening a C# file
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 打开 C# 文件
- en: Unity will synchronize with Visual Studio the first time you open a file. The
    simplest way to do this is by selecting the script from the **Project** tab.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 当您第一次打开文件时，Unity 将与 Visual Studio 同步。最简单的方法是从 **项目** 选项卡中选择脚本。
- en: 'Double-click on `LearningCurve.cs`, which will open up the C# file in Visual
    Studio:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 双击 `LearningCurve.cs`，这将打开 Visual Studio 中的 C# 文件：
- en: '![](img/B17573_01_19.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17573_01_19.png)'
- en: 'Figure 1.19: LearningCurve C# script in Visual Studio'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.19：Visual Studio 中的 LearningCurve C# 脚本
- en: You can change the Visual Studio tabs at any time from **Visual Studio** | **View**
    | **Layout**. I'll be using the **Design** layout for the rest of the book so
    we can see our project files in the left-hand side of the editor.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以随时从**Visual Studio** | **视图** | **布局**更改Visual Studio选项卡。本书的其余部分我将使用**设计**布局，这样我们就可以在编辑器的左侧看到我们的项目文件。
- en: You'll see a folder structure on the left-hand side of the interface that mirrors
    the one in Unity, which you can access like any other. On the right-hand side
    is the actual code editor where the magic happens. There are far more features
    to the Visual Studio application, but this is all we need to get started.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 你会在界面的左侧看到文件夹结构，它反映了Unity中的结构，你可以像访问任何其他文件夹一样访问它。右侧是实际的代码编辑器，在这里发生魔法。Visual
    Studio应用程序有更多功能，但我们只需要这些来开始。
- en: The Visual Studio interface is different for Windows and Mac environments, but
    the code we'll be using throughout this book will work equally well with both.
    All the screenshots in this book have been taken in a Mac environment, so if things
    look different on your computer, there's no need to worry.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio界面在Windows和Mac环境中不同，但本书中我们将使用的代码在两者上都能同样良好地工作。本书中的所有截图都是在Mac环境中拍摄的，所以如果你的电脑上看起来不同，你不需要担心。
- en: Beware of naming mismatches
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 谨防命名不匹配
- en: 'One common pitfall that trips up new programmers is file naming—more specifically,
    naming mismatches—which we can illustrate using line 5 from *Figure 1.19* of the
    C# file in Visual Studio:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 新程序员常见的陷阱之一是文件命名——更具体地说，是命名不匹配——我们可以使用Visual Studio中C#文件的*图1.19*的第5行来展示这一点：
- en: '[PRE0]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `LearningCurve` class name is the same as the `LearningCurve.cs` filename.
    **This is an essential requirement**. It's OK if you don't know what a class is
    quite yet. The important thing to remember is that, in Unity, the filename and
    the class name need to be the same. If you're using C# outside of Unity, the filename
    and class name don't have to match.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`LearningCurve`类名与`LearningCurve.cs`文件名相同。**这是一个基本要求**。如果你现在还不知道类是什么，没关系。重要的是要记住，在Unity中，文件名和类名需要相同。如果你在Unity之外使用C#，文件名和类名不需要匹配。'
- en: When you create a C# script file in Unity, the filename in the **Project** tab
    is already in **Edit** mode, ready to be renamed. It's a good habit to rename
    it then and there. If you rename the script later, the filename and the class
    name won't match.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在Unity中创建一个C#脚本文件时，**项目**选项卡中的文件名已经处于**编辑**模式，准备好被重命名。立即重命名它是一个好习惯。如果你稍后重命名脚本，文件名和类名将不会匹配。
- en: 'If you were to rename the file at a later point, the filename would change,
    but line 5 would be as follows:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你稍后重命名文件，文件名会改变，但第5行将如下所示：
- en: '[PRE1]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If you accidentally do this, it''s not the end of the world. All you need to
    do is go into Visual Studio and change `NewBehaviourScript` to the name of your
    C# script, as well as the name of the `.meta` file on your desktop. You can find
    the `.meta` file in the project folder under **Assets** | **Scripts**:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你意外地这样做，这并不是世界末日。你只需要进入Visual Studio，将`NewBehaviourScript`更改为你的C#脚本名称，以及你桌面上`.meta`文件的名称。你可以在项目文件夹下的**Assets**
    | **Scripts**中找到`.meta`文件：
- en: '![](img/B17573_01_20.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B17573_01_20.png)'
- en: 'Figure 1.20: Finding the META file'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.20：找到META文件
- en: Syncing C# files
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 同步C#文件
- en: As part of their symbiotic relationship, Unity and Visual Studio communicate
    with each other to synchronize their content. This means that if you add, delete,
    or change a script file in one application, the other application will see the
    changes automatically.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 作为他们共生关系的一部分，Unity和Visual Studio相互通信以同步他们的内容。这意味着如果你在一个应用程序中添加、删除或更改脚本文件，另一个应用程序将自动看到这些更改。
- en: So, what happens when Murphy's Law, which states that "*anything that can go
    wrong will go wrong*," strikes and syncing just doesn't seem to be working correctly?
    If you run into this situation, take a deep breath, select the troublesome script
    in Unity, right-click, and select **Refresh**.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，当墨菲定律，即“*任何可能出错的事情都会出错*”发生，同步似乎根本不起作用时，会发生什么？如果你遇到这种情况，深呼吸，在Unity中选择有问题的脚本，右键单击，并选择**刷新**。
- en: You now have the basics of script creation under your belt, so it's time we
    talk about finding and efficiently using helpful resources.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经掌握了脚本创建的基础，所以是时候讨论如何找到并高效使用有用的资源了。
- en: Exploring the documentation
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索文档
- en: The last topic we'll touch on in this first foray into Unity and C# scripts
    is documentation. Not sexy, I know, but it's important to form good habits early
    when dealing with new programming languages or development environments.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们第一次探索Unity和C#脚本的过程中，我们将讨论的最后一个主题是文档。我知道这可能不是那么吸引人，但处理新的编程语言或开发环境时，早期养成良好的习惯是很重要的。
- en: Accessing Unity's documentation
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问Unity的文档
- en: Once you start writing scripts in earnest, you'll be using Unity's documentation
    quite often, so it's beneficial to know how to access it early on. The *Reference
    Manual* will give you an overview of a component or topic, while specific programming
    examples can be found in the *Scripting Reference*.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你开始认真编写脚本，你将经常使用Unity的文档，因此了解如何早期访问它是有益的。*参考手册*将为你提供一个组件或主题的概述，而具体的编程示例可以在*脚本参考*中找到。
- en: 'Every game object (an item in the **Hierarchy** window) in a scene has a **Transform**
    component that controls its **Position**, **Rotation**, and **Scale**. To keep
    things simple, we''ll just look up the camera''s **Transform** component in the
    Reference Manual:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 场景中的每个游戏对象（**层次结构**窗口中的项目）都有一个**变换**组件，它控制其**位置**、**旋转**和**缩放**。为了保持简单，我们只需在参考手册中查找摄像机的**变换**组件：
- en: In the **Hierarchy** tab, select the **Main Camera** game object
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**层次结构**选项卡中，选择**主摄像机**游戏对象
- en: Move over to the **Inspector** tab and click on the information icon (question
    mark) at the top right of the **Transform** component:![](img/B17573_01_21.png)
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到**检查器**选项卡，点击**变换**组件右上角的信息图标（问号）！![图片](img/B17573_01_21.png)
- en: 'Figure 1.21: Main Camera game object selected in the Inspector'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.21：在检查器中选中的主摄像机游戏对象
- en: 'You''ll see a web browser open on the **Transforms** page of the Reference
    Manual:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在参考手册的**变换**页面打开一个网页浏览器：
- en: '![](img/B17573_01_22.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B17573_01_22.png)'
- en: 'Figure 1.22: Unity Reference Manual'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.22：Unity参考手册
- en: All the components in Unity have this feature, so if you ever want to know more
    about how something works, you know what to do.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Unity中的所有组件都具有此功能，所以如果你想知道某物是如何工作的，你知道该怎么做。
- en: So, we've got the Reference Manual open, but what if we wanted concrete coding
    examples related to the **Transform** component? It's pretty simple—all we need
    to do is ask the Scripting Reference.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经打开了参考手册，但如果我们想找到与**变换**组件相关的具体编码示例怎么办？这很简单——我们只需要询问脚本参考。
- en: 'Click on the **SWITCH TO SCRIPTING** link underneath the component or class
    name (**Transform**, in this case):'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 点击组件或类名下方的**切换到脚本**链接（在本例中为**变换**）：
- en: '![](img/B17573_01_23.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B17573_01_23.png)'
- en: 'Figure 1.23: Unity Reference Manual with the SWITCH TO SCRIPTING button highlighted'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.23：突出显示SWITCH TO SCRIPTING按钮的Unity参考手册
- en: 'By doing so, the Reference Manual automatically switches to the Scripting Reference:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，参考手册将自动切换到脚本参考：
- en: '![](img/B17573_01_24.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B17573_01_24.png)'
- en: 'Figure 1.24: Unity scripting documentation with SWITCH TO MANUAL highlighted'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.24：突出显示SWITCH TO MANUAL的Unity脚本文档
- en: As you can see, as well as coding help, there is also an option to switch back
    to the Reference Manual if necessary.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，除了编码帮助外，如果需要，还可以切换回参考手册。
- en: The Scripting Reference is a large document because it has to be. However, this
    doesn't mean you have to memorize it or even be familiar with all of its information
    to start writing scripts. As the name suggests, it's a reference, not a test.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本参考是一个大文档，因为它是必需的。然而，这并不意味着你必须记住它，甚至不需要熟悉它的所有信息就可以开始编写脚本。正如其名所示，它是一个参考，而不是考试。
- en: 'If you find yourself lost in the documentation, or just out of ideas regarding
    where to look, you can also find solutions within the rich Unity development community
    in the following places:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在文档中迷失方向，或者只是不知道该往哪里看，你还可以在以下Unity丰富的开发社区中找到解决方案：
- en: 'Unity Forum: [https://forum.unity.com/](https://forum.unity.com/)'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity论坛：[https://forum.unity.com/](https://forum.unity.com/)
- en: 'Unity Answers: [https://answers.unity.com/index.html](https://answers.unity.com/index.html)'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity问答：[https://answers.unity.com/index.html](https://answers.unity.com/index.html)
- en: 'Unity Discord: [https://discord.com/invite/unity](https://discord.com/invite/unity)'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity Discord：[https://discord.com/invite/unity](https://discord.com/invite/unity)
- en: On the other side of things, you'll need to know where to find resources on
    any C# question, which we'll cover next.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一方面，你需要知道在哪里找到任何C#问题的资源，我们将在下一节中介绍。
- en: Locating C# resources
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定位C#资源
- en: Now that we've got our Unity resources taken care of, let's take a look at some
    of Microsoft's C# resources. For starters, the Microsoft Learn documentation at
    [https://docs.microsoft.com/en-us/dotnet/csharp](https://docs.microsoft.com/en-us/dotnet/csharp)
    has a ton of great tutorials, quickstart guides, and how-to articles. You can
    also find great overviews of individual C# topics at [https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/index](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/index).
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经处理好了Unity资源，让我们来看看微软的一些C#资源。首先，在[https://docs.microsoft.com/en-us/dotnet/csharp](https://docs.microsoft.com/en-us/dotnet/csharp)的Microsoft
    Learn文档中有大量的优秀教程、快速入门指南和如何操作的文章。你还可以在[https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/index](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/index)找到关于单个C#主题的精彩概述。
- en: However, if you want detailed information on a specific C# language feature,
    the reference guides are the place to go. These reference guides are an important
    resource for any C# programmer, but since they aren't always the easiest to navigate,
    let's take a few minutes to learn how to find what we're looking for.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你想了解特定C#语言特性的详细信息，参考指南是你要去的地方。这些参考指南是任何C#程序员的宝贵资源，但由于它们并不总是容易导航，让我们花几分钟时间学习如何找到我们想要的内容。
- en: 'Let''s load up the programming guide link and look up the C# `String` class.
    Do either of the following:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们加载编程指南链接并查找C#的`String`类。你可以执行以下任一操作：
- en: Enter `Strings` in the search bar in the top-left corner of the web page
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在网页左上角的搜索栏中输入`Strings`
- en: Scroll down to **Language Sections** and click on the **Strings** link directly:![](img/B17573_01_25.png)
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 滚动到**语言部分**并直接点击**字符串**链接！![img/B17573_01_25.png](img/B17573_01_25.png)
- en: 'Figure 1.25: Navigating Microsoft''s C# reference guide'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B17573_01_25.png](img/B17573_01_25.png)'
- en: 'You should see something like the following for the class description page:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会看到以下类似的内容，用于类描述页面：
- en: '![](img/B17573_01_26.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![img/B17573_01_26.png](img/B17573_01_26.png)'
- en: 'Figure 1.26: Microsoft''s Strings (C# Programming Guide) page'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.26：微软的字符串（C#编程指南）页面
- en: Unlike Unity's documentation, the C# reference and scripting information is
    all bundled up into one, but its saving grace is the subtopic list on the right-hand
    side. Use it well! It's extremely important to know where to find help when you're
    stuck or have a question, so be sure to circle back to this section whenever you
    hit a roadblock.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 与Unity的文档不同，C#参考和脚本信息都打包在一起，但它的优点是右侧的子主题列表。好好利用它！当你遇到困难或有问题时，知道在哪里找到帮助非常重要，所以每次遇到障碍时，一定要回到这个部分。
- en: Summary
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'We covered quite a bit of logistical information in this chapter, so I can
    understand if you''re itching to write some code. Starting new projects, creating
    folders and scripts, and accessing documentation are topics that are easily forgotten
    in the excitement of a new adventure. Just remember that this chapter has a lot
    of resources you might need in the coming pages, so don''t be afraid to come back
    and visit. Thinking like a programmer is a muscle: the more you work it, the stronger
    it gets.'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涵盖了大量的后勤信息，所以如果你迫不及待地想写一些代码，我可以理解。开始新项目、创建文件夹和脚本、访问文档都是在新冒险的兴奋中容易忘记的话题。只需记住，本章包含了许多你可能在后续页面中需要的资源，所以不要害怕回来再次访问。像程序员一样思考是一种肌肉：你越锻炼它，它就越强壮。
- en: In the next chapter, we'll start laying out the theory, vocabulary, and main
    concepts you'll need to prime your coding brain. Even though the material is conceptual,
    we'll still be writing our first lines of code in the `LearningCurve` script.
    Get ready!
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将开始介绍你需要为编程大脑预热的理论、词汇和主要概念。尽管材料是概念性的，我们仍然会在`LearningCurve`脚本中写下我们的第一行代码。准备好吧！
- en: Pop quiz – dealing with scripts
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 小测验 - 处理脚本
- en: What type of relationship do Unity and Visual Studio share?
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Unity和Visual Studio之间有什么类型的关系？
- en: The Scripting Reference supplies example code in regards to using a particular
    Unity component or feature. Where can you find more detailed (non-code-related)
    information about Unity components?
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 脚本参考提供了关于使用特定Unity组件或特性的示例代码。你可以在哪里找到更多关于Unity组件的详细（非代码相关）信息？
- en: The Scripting Reference is a large document. How much of it do you have to memorize
    before attempting to write a script?
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 脚本参考是一个大文档。在尝试编写脚本之前，你需要记住其中多少内容？
- en: When is the best time to name a C# script?
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 何时是给C#脚本命名的最佳时机？
- en: JOIN us on Discord!
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的Discord！
- en: Read this book alongside other users, Unity/C# experts, and Harrison Ferrone.
    Ask questions, provide solutions to other readers, chat with the author via *Ask
    Me Anything sessions* and much more.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他用户、Unity/C# 专家以及哈里森·费罗内一起阅读此书。提问、为其他读者提供解决方案、通过*问我任何问题*环节与作者聊天，以及更多。
- en: Join Now!
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 立即加入！
- en: '[https://packt.link/csharpunity2021](https://packt.link/csharpunity2021)'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/csharpunity2021](https://packt.link/csharpunity2021)'
- en: '![](img/QR_Code_9781801813945.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code_9781801813945.png)'
