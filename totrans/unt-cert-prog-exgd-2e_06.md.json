["```cs\n    [SerializeField]\n    GameObject[] visualWeapons;\n    [SerializeField]\n    SOActorModel defaultPlayerShip;\n    GameObject playerShip;\n    GameObject buyButton;\n    GameObject bankObj;\n    int bank = 600;\n    bool purchaseMade = false;\n    ```", "```cs\n    purchaseMade = false;\n    bankObj = GameObject.Find(\"bank\");\n    bankObj.GetComponentInChildren<TextMesh>().text = bank.ToString();\n    buyButton = textBoxPanel.transform.Find(\"BUY ?\").gameObject;\n    TurnOffPlayerShipVisuals();\n    PreparePlayerShipForUpgrade();\n    ```", "```cs\n    if (target.transform.Find(\"itemText\"))\n    ```", "```cs\n    if (target.transform.Find(\"itemText\"))\n     { \n        TurnOffSelectionHighlights();\n        Select();\n        UpdateDescriptionBox();\n     //NOT ALREADY SOLD\n     if (target.transform.Find(\"itemText\").GetComponent<TextMesh>().\n        text != \"SOLD\")\n     {\n        //can afford\n        Affordable();\n        //can not afford\n        LackOfCredits();\n     }\n     else if (target.transform.Find(\"itemText\").GetComponent\n        <TextMesh>().text == \"SOLD\")\n     {\n        SoldOut();\n     }\n    }\n    ```", "```cs\n      void Affordable()\n      {\n        if (bank >=  System.Int32.Parse(target.transform.\n           GetComponent<ShopPiece>().ShopSelection.cost))\n        {\n          Debug.Log(\"CAN BUY\");\n          buyButton.SetActive(true);\n        }\n      }\n    ```", "```cs\n      void SoldOut()\n      {\n        Debug.Log(\"SOLD OUT\");\n      }\n    ```", "```cs\n    void TurnOffPlayerShipVisuals()\n    {\n    }\n    void PreparePlayerShipForUpgrade()\n    {\n    }\n    ```", "```cs\n     void TurnOffPlayerShipVisuals()\n     {\n       for (int i = 0; i < visualWeapons.Length; i++)\n     {\n       visualWeapons[i].gameObject.SetActive(false);\n     }\n    }\n    ```", "```cs\n  void PreparePlayerShipForUpgrade()\n  {\n    playerShip = GameObject.Instantiate(defaultPlayerShip.    actor);\n\n    playerShip.GetComponent<Player>().enabled = false;\n    playerShip.transform.position = new Vector3(0,10000,0);\n    playerShip.GetComponent<IActorTemplate>\n       ().ActorStats(defaultPlayerShip);\n  }\n```", "```cs\n    if (target.transform.Find(\"itemText\"))\n            {\n                //CODE WE HAVE ENTERED...\n                //CODE WE HAVE ENTERED...\n                //CODE WE HAVE ENTERED...\n            }\n                <---- BEGIN CODING \"ELSE IF\" HERE\n    ```", "```cs\n            else if(target.name == \"BUY ?\")\n            {\n              BuyItem();\n            }\n    ```", "```cs\n      void BuyItem()\n      {\n        Debug.Log(\"PURCHASED\");\n        purchaseMade = true;\n        buyButton.SetActive(false);\n        tmpSelection.SetActive(false);\n    ```", "```cs\n    for (int i = 0; i < visualWeapons.Length; i++)\n     {\n       if (visualWeapons[i].name ==\n         tmpSelection.transform.parent.gameObject.\n              GetComponent<ShopPiece>().ShopSelection.iconName)\n          {\n            visualWeapons[i].SetActive(true);\n          }\n     }\n    ```", "```cs\n    UpgradeToShip(tmpSelection.transform.parent.gameObject.GetComponent\n        <ShopPiece>().ShopSelection.iconName);\n      bank = bank - System.Int32.Parse(tmpSelection.transform.parent.\n         GetComponent<ShopPiece>().ShopSelection.cost);\n\n     bankObj.transform.Find(\"bankText\").GetComponent<TextMesh>().text \n         = bank.ToString();\n     tmpSelection.transform.parent.transform.Find(\"itemText\").\n         GetComponent<TextMesh>().text = \"SOLD\";\n    }\n    ```", "```cs\n     void UpgradeToShip(string upgrade)\n     {\n     GameObject shipItem = GameObject.Instantiate(Resources.Load\n        (upgrade)) as GameObject;\n     shipItem.transform.SetParent(playerShip.transform);\n     shipItem.transform.localPosition = Vector3.zero; \n     }\n    ```", "```cs\ntmpSelection.transform.parent.gameObject.GetComponent\n   <ShopPiece>().ShopSelection.iconName\n```", "```cs\n            else if(target.name == \"START\")\n            {\n              StartGame();\n            }\n    ```", "```cs\n      void StartGame()\n      { \n          if (purchaseMade)\n      {\n        playerShip.name = \"UpgradedShip\";\n        if (playerShip.transform.Find(\"energy +1(Clone)\"))\n        {\n           playerShip.GetComponent<Player>().Health = 2;\n        } \n        DontDestroyOnLoad(playerShip);\n       }\n       UnityEngine.SceneManagement.SceneManager.LoadScene(\"testLevel\");\n      }\n    ```", "```cs\n    using UnityEngine.Advertisements;\n    ```", "```cs\npublic class PlayerShipBuild : MonoBehaviour, IUnityAdsListener, IUnityAdsInitializationListener\n```", "```cs\n      [SerializeField] string androidGameId;\n      [SerializeField] string iOSGameId;\n      [SerializeField] bool testMode = true;\n      string adId = null;\n    ```", "```cs\n    void Awake()\n    {\n    CheckPlatform();\n    }\n    ```", "```cs\n      void CheckPlatform()\n      {\n        string gameId = null;\n    ```", "```cs\n        #if UNITY_IOS\n        {\n          gameId = iOSGameId;\n          adId = \"Rewarded_iOS\";\n        }\n    ```", "```cs\n#elif UNITY_ANDROID\n    {\n      gameId = androidGameId;\n      adId = \"Rewarded_Android\";\n    }\n    #endif\n```", "```cs\n        Advertisement.Initialize(gameId, testMode, false, this);\n      }\n    ```", "```cs\n    StartCoroutine(WaitForAd());\n    ```", "```cs\n      IEnumerator WaitForAd()\n      {\n        while (!Advertisement.isInitialized)\n        {\n          yield return null;\n        }\n        LoadAd();\n      }\n    ```", "```cs\n      void LoadAd()\n          {\n        Advertisement.AddListener(this);\n        Advertisement.Load(adId);\n      }\n    ```", "```cs\n            else if (target.name == \"WATCH AD\")\n            {\n              WatchAdvert();\n            }\n    ```", "```cs\n    void WatchAdvert()\n    {\n    Advertisement.Show(adId);\n    }\n    ```", "```cs\n    throw new System.NotImplementedException();\n    ```", "```cs\n    Debug.Log(\"Unity Ads initialization complete.\");\n    ```", "```cs\n    Debug.Log($\"Unity Ads Initialization Failed: {error.ToString()} - {message}\");\n    ```", "```cs\n    if (showResult == ShowResult.Finished)\n      {\n            // REWARD PLAYER\n          }\n      else if (showResult == ShowResult.Skipped)\n      {\n            // DO NOT REWARD PLAYER\n          }\n      else if (showResult == ShowResult.Failed)\n      {\n            Debug.LogWarning (\"The ad did not finish due to an error.\");\n      }\n    ```", "```cs\n    Debug.Log(\"Unity Ads Rewarded Ad Completed\");\n    bank += 300;\n    bankObj.GetComponentInChildren<TextMesh>().text = bank.ToString();\n    ```", "```cs\n    Advertisement.Load(placementId);\n    TurnOffSelectionHighlights();\n    ```", "```cs\n     bool upgradedShip = false;\n    ```", "```cs\n    GetComponentInChildren<Player>().enabled = true;\n    GameManager.Instance.CameraSetup();\n    ```", "```cs\n        //been shopping\n        if(GameObject.Find(\"UpgradedShip\"))\n        {\n            upgradedShip = true;\n        }\n    ```", "```cs\n        //not shopped or died\n        //default ship build\n        if (!upgradedShip || GameManager.Instance.Died)\n        {\n            GameManager.Instance.Died = false;\n            actorModel = Object.Instantiate(Resources.Load\n              (\"Player_Default\")) \n                  as SOActorModel;                                                                                         \n            playerShip = GameObject.Instantiate(actorModel.    actor,\n              this.transform.position, Quaternion.    Euler(270,180,0))\n                as GameObject;\n            playerShip.GetComponent<IActorTemplate>().\n              ActorStats(actorModel);\n        }\n    ```", "```cs\n        //apply the shop upgrades\n        else\n        {\n            playerShip = GameObject.Find(\"UpgradedShip\");\n        }\n    ```", "```cs\n        playerShip.transform.rotation = Quaternion.Euler(0,180,0);\n        playerShip.transform.localScale = new Vector3(60,60,60);\n        playerShip.GetComponentInChildren<ParticleSystem>\n          ().transform.localScale = new Vector3(25,25,25);\n        playerShip.name = \"Player\";\n        playerShip.transform.SetParent(this.transform);\n        playerShip.transform.position = Vector3.zero;\n      GameManager.Instance.CameraSetup();\n      }\n    }\n    ```"]