["```cs\nwinget install microsoft.azureCLI\nwinget install microsoft.azd\n```", "```cs\naz login\n```", "```cs\naz group create -l westeurope -n rg-codebreaker-test\n```", "```cs\naz monitor log-analytics workspace create -g rg-codebreaker-test -n logs-codebreaker-test-westeu\n```", "```cs\naz monitor log-analytics workspace show -g rg-codebreaker-test -n logs-codebreaker-test-westeu --query customerId\n```", "```cs\naz monitor log-analytics workspace get-shared-keys -g rg-codebreaker-test -n logs-codebreaker-test-westeu\n```", "```cs\naz containerapp env create -g rg-codebreaker-test -n cae-codebreaker-test-westeu --logs-workspace-id <customer-id> --logs-workspace-key <logs-key> --location westeurope\n```", "```cs\naz containerapp create -n ca-hello-westeu -g rg-codebreaker-test --environment cae-codebreaker-test-westeu --image mcr.microsoft.com/azuredocs/containerapps-helloworld:latest --ingress external --target-port 80 --min-replicas 0 --max-replicas 2 --cpu 0.5 --memory 1.0Gi\n```", "```cs\naz containerapp show -n ca-hello-westeu -g rg-codebreaker-test --query properties.configuration.ingress.fqdn\n```", "```cs\naz cosmosdb sql database create --account-name <your cosmos account name> -n codebreaker -g rg-codebreaker-test --throughput 400\n```", "```cs\naz cosmosdb sql container create -g rg-codebreaker-test -a <your cosmos account name> -d codebreaker -n GamesV3, --partition-key-path \"/PartitionKey\"\n```", "```cs\naz login\naz acr login -n <the name of your azure container registry>\n```", "```cs\ndocker build -f Codebreaker.GameAPIs\\Dockerfile . -t codebreaker/gamesapi:3.5.1\n```", "```cs\ndocker tag codebreaker/gamesapi:3.5.1 <full DNS name of your ACR>/codebreaker/gamesapi:3.5.1\ndocker tag codebreaker/gamesapi:3.5.1 <full DNS name of your ACR>/codebreaker/gamesapi:latest\n```", "```cs\ndocker push <full DNS name of your ACR>/codebreaker/gamesapi:3.5.1\ndocker push <full DNS name of your ACR>/codebreaker/gamesapi:latest\n```", "```cs\n<PropertyGroup>\n<ContainerRegistry>add your registry\n  </ContainerRegistry>\n  <ContainerRepository>codebreaker/bot\n  </ContainerRepository>\n  <ContainerImageTags>3.5.3;latest</ContainerImageTags>\n</PropertyGroup>\n```", "```cs\ncd Codebreaker.Bot\ndotnet publish --os linux --arch x64 /t:PublishContainer -c Release\n```", "```cs\naz containerapp update -n cae-codebreaker-gamesapi-3 -g rg-codebreaker-test --set-env-vars ConnectionStrings__GamesCosmosConnection=secretref:cosmosconnectionstring\n```", "```cs\nvar builder = DistributedApplication.CreateBuilder(args);\nstring dataStore = builder.Configuration[\"DataStore\"] ?? \"InMemory\";\nvar cosmos = builder.AddAzureCosmosDB(\"codebreakercosmos\")\n .AddDatabase(\"codebreaker\");\n// code removed for brevity\n```", "```cs\n{\n  \"Azure\": {\n    \"SubscriptionId\": \"your subscription id\",\n    \"Location\": \"westeurope\",\n    \"CredentialSource\":\"AzureCli\"\n  }\n}\n```", "```cs\naz account show -–query id\n```", "```cs\nvar builder = DistributedApplication.CreateBuilder(args);\nstring dataStore = builder.Configuration[\"DataStore\"] ?? \"InMemory\";\nvar cosmos = builder.AddAzureCosmosDB(\"codebreakercosmos\")\n  .AddDatabase(\"codebreaker\");\nvar gameAPIs = builder.AddProject<Projects.Codebreaker_GameAPIs>(\"gameapis\")\n.WithExternalHttpEndpoints()\n  .WithReference(cosmos)\n  .WithEnvironment(\"DataStore\", dataStore);\nbuilder.AddProject<Projects.CodeBreaker_Bot>(\"bot\")\n.WithExternalHttpEndpoints()\n  .WithReference(gameAPIs);\nbuilder.AddProject<Projects.Codebreaker_CosmosCreate>(\"cosmoscreate\")\n  .WithReference(cosmos);\nbuilder.Build().Run();\n```", "```cs\nazd init\n```", "```cs\nazd up\n```", "```cs\ndotnet run --project Codebreaker.AppHost/Codebreaker.AppHost.csproj -- --publisher manifest --output-path aspire-manifest.json\n```", "```cs\nazd provision\n```", "```cs\nazd deploy\n```", "```cs\nazd infra synth\n```", "```cs\nazd down\n```"]