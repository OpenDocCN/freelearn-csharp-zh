["```cs\nGET api/employees/{id} \n\n```", "```cs\npublic class Employee\n{\n  public int Id {get; set;}\n  public string FirstName {get; set;}\n  public string LastName {get; set;}\n  public string Department {get; set;}\n}\n```", "```cs\npublic interface IEmployeeRepository\n{\n  void AddEmployee(Employee e);\n  IEnumerable<Employee> GetAllEmployees();\n  Employee GetEmployee(int id);\n  Employee RemoveEmployee(int id);\n  void UpdateEmployee(Employee employee);\n}\n```", "```cs\npublic class EmployeeRepository : IEmployeeRepository\n{\n  private static List<Employee> employees = new List<Employee>();\n\n  public EmployeeRepository()\n  {\n\n    Employee employee1 = new Employee\n    {\n      FirstName = \"Mugil\",\n      LastName = \"Ragu\",\n      Department = \"Finance\",\n      Id = 1\n    };\n\n   Employee employee2 = new Employee\n   {\n      FirstName = \"John\",\n      LastName = \"Skeet\",\n      Department = \"IT\",\n      Id = 2\n   };\n\n  employees.Add(employee1);\n  employees.Add(employee2);\n  }\n\n  public IEnumerable<Employee> GetAllEmployees()\n  {\n    return employees;\n  }\n\n  public void AddEmployee(Employee e)\n  {\n    e.Id = GetNextRandomId();\n    employees.Add(e);\n  }\n\n  public Employee GetEmployee(int id)\n  {\n    return employees.Where(emp => emp.Id == id).FirstOrDefault();\n  }\n\n  public Employee RemoveEmployee(int id)\n  {\n    Employee employee = employees.Where(emp => emp.Id ==   id).FirstOrDefault();\n    if (employee !=null )\n    {\n      employees.Remove(employee);\n    }\n    return employee;\n  }\n\n  public void UpdateEmployee(Employee emp)\n  {\n    Employee employee = employees.Where(e => e.Id ==  emp.Id).FirstOrDefault();\n    if(employee != null)\n    {\n    employee.Department = emp.Department;\n    employee.FirstName = emp.FirstName;\n    employee.LastName = emp.LastName;\n    }\n  }\n\n  private int GetNextRandomId()\n  {\n    int id = -1;\n    bool isIdExists;\n    Random random = new Random();\n    do\n    {\n      id = random.Next();\n      isIdExists = employees.Any(emp => emp.Id == id);\n    } while (isIdExists);\n    return id;\n  }\n}\n```", "```cs\npublic void ConfigureServices(IServiceCollection services)\n{\n  // Add framework services.\n  services.AddApplicationInsightsTelemetry(Configuration);\n  services.AddMvc();\n\n services.AddSingleton<IEmployeeRepository, EmployeeRepository>(); \n\n}\n\n```", "```cs\n\nservices.AddTransient\n\n <IEmployeeRepository, EmployeeRepository>(); \n\nservices.AddScoped  <\n\nIEmployeeRepository, EmployeeRepository>();\n\n```", "```cs\npublic EmployeeController(IEmployeeRepository employeesRepo)\n{\n  employeeRepository = employeesRepo;\n}\nprivate IEmployeeRepository employeeRepository {get; set;}\n```", "```cs\npublic IEnumerable<Employee> GetAll()\n{\n  return employeeRepository.GetAllEmployees();\n}\n\n[HttpGet(\"{id}\",Name =\"GetEmployee\")]\npublic IActionResult GetById(int id)\n{\n  var employee = employeeRepository.GetEmployee(id);\n  if(employee == null)\n  {\n  return NotFound();\n  }\n  return new ObjectResult(employee);\n}\n```", "```cs\n[HttpPost]\npublic IActionResult Add([FromBody] Employee emp)\n{\n  if (emp == null)\n  {\n    return BadRequest();\n  }\n  employeeRepository.AddEmployee(emp);\n  return CreatedAtRoute(\"GetEmployee\", new { id = emp.Id }, emp);\n}\n```", "```cs\n[HttpPut]\npublic IActionResult Update([FromBody] Employee emp)\n{\n  if( emp == null)\n  {\n    return BadRequest();\n  }\n  Employee employee = employeeRepository.GetEmployee(emp.Id);\n  if(employee == null)\n  {\n    return NotFound();\n  }\n  employeeRepository.UpdateEmployee(emp);\n  return new NoContentResult();\n}\n```", "```cs\npublic void UpdateEmployee(Employee emp)\n{\n  Employee employee = employees.Where(e => e.Id == emp.Id).FirstOrDefault();\n  if (employee != null)\n  {\n    employee.Department = emp.Department;\n    employee.FirstName = emp.FirstName;\n    employee.LastName = emp.LastName;\n  }\n}\n```", "```cs\n[HttpDelete(\"{id}\")]\npublic void Delete(int id)\n{\n  employeeRepository.RemoveEmployee(id);\n}\n```", "```cs\npublic Employee RemoveEmployee(int id)\n{\n  Employee employee = employees.Where(emp => emp.Id ==   id).FirstOrDefault();\n  if(employee != null)\n  {\n    employees.Remove(employee);\n  }\n  return employee;\n}\n```"]