- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: The MCSD 70-483 exam is an entry-level Microsoft certification exam for C# developers
    that is widely used to measure their expertise in the field of C# programming.
    This book is a certification guide to prepare you for the skills that are evaluated
    in the certification exam and also promotes building problem-solving acumen with
    C#. Every chapter in the book has been designed as preparation material for the
    Microsoft MCSD 70-483 exam.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: MCSD 70-483考试是针对C#开发者的入门级微软认证考试，广泛用于衡量他们在C#编程领域的专业知识。本书是认证指南，旨在帮助你为认证考试中评估的技能做好准备，并促进使用C#培养解决问题的能力。本书的每一章都设计为微软MCSD
    70-483考试的备考材料。
- en: For those who don't have much experience of working in C#, we have added some
    chapters at the start of the book that will provide basic knowledge about C# programming.
    This knowledge will not only help you to pass the certification but will also
    help you to become a better C# developer.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些在C#方面经验不多的人，我们在本书的开头添加了一些章节，以提供有关C#编程的基本知识。这些知识不仅可以帮助你通过认证，还可以帮助你成为一名更好的C#开发者。
- en: Who this book is for
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向对象
- en: The book is designed for both experienced developers and people new to C# who
    are intending to undertake the 70-483 Programming in C# certification exam in
    the near future. The book provides extensive knowledge of all the topics that
    are evaluated in the exam. To drive better understanding, each chapter in the
    book is accompanied by code examples along with assessment questions.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在为经验丰富的开发者和那些打算在不久的将来参加70-483编程C#认证考试的新手提供帮助。本书提供了考试中所有主题的广泛知识。为了更好地理解，本书的每一章都配有代码示例和评估问题。
- en: To make the path of learning C# easier for beginners, we have also tried to
    address the basics of C# and .NET Framework in the first three chapters of the
    book. To get the most value out of the book, you are expected to have a fair understanding
    of any programming language; for example, C, C++, or C#.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让初学者学习C#的路径更加容易，我们在本书的前三章中也尝试介绍了C#和.NET Framework的基础知识。为了从本书中获得最大价值，你应具备对任何编程语言的合理理解；例如，C、C++或C#。
- en: What this book covers
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[Chapter 1](ccec4122-6067-4279-843b-6123b1eff017.xhtml), *Learning the Basics
    of C#*, focuses on the basics of the C# language. In this chapter, you will learn
    about the underlying .NET Framework architecture and how all the components, such
    as the garbage collector, common language runtime, base libraries, and so on,
    interact with each other. We will analyze the similarities between C# and other
    programming languages such as C++ and C. We will also look at features that make
    C# different than C++ and C. Finally, using a very basic Hello World program,
    you will learn about the different components of a C# program, such as classes,
    namespaces, assemblies, and so on.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](ccec4122-6067-4279-843b-6123b1eff017.xhtml)，*学习C#基础知识*，专注于C#语言的基础。在本章中，你将了解.NET
    Framework的底层架构以及所有组件，如垃圾回收器、公共语言运行时、基本库等是如何相互交互的。我们将分析C#与其他编程语言（如C++和C）之间的相似之处。我们还将探讨使C#不同于C++和C的特性。最后，通过一个非常基础的Hello
    World程序，你将了解C#程序的不同组件，如类、命名空间、程序集等。'
- en: '[Chapter 2](7b49f1ac-89ac-4157-88b5-e6b8cd006733.xhtml), *Understanding Classes,
    Structures, and Interfaces*, expands on the first chapter and covers some more
    basics of a C# application. In this chapter, you will learn about the different
    access modifiers available in a C# program, and also how they can be used to achieve
    code structure and reduced complexity. We will also look at the different primitive
    data types available in C#. While looking at the class and struct variables, we
    will see the difference between a reference type variable and a data type variable.
    We will then look at inheritance, which is an important aspect of C# programming.
    We will cover how inheritance is implemented in C# and how it differs from the
    implementation of an interface.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](7b49f1ac-89ac-4157-88b5-e6b8cd006733.xhtml)，*理解类、结构和接口*，在第一章的基础上进一步介绍了C#应用程序的一些基础知识。在本章中，你将了解C#程序中可用的不同访问修饰符，以及它们如何被用来实现代码结构和降低复杂性。我们还将探讨C#中可用的不同原始数据类型。在查看类和结构变量时，我们将看到引用类型变量和数据类型变量之间的区别。然后，我们将探讨继承，这是C#编程的一个重要方面。我们将介绍C#中继承的实现方式以及它与接口实现的区别。'
- en: '[Chapter 3](8acdf308-13c5-4298-bdba-7bef6e8b087b.xhtml), *Understanding Object-Oriented
    Programming*, focuses on the four pillars of **Object-Oriented Programming** (**OOP**).
    Using examples, you will learn how each of those pillars – encapsulation, polymorphism,
    abstraction, and inheritance—is implemented. While looking at inheritance, we
    will expand on the learning of [Chapter 2](7b49f1ac-89ac-4157-88b5-e6b8cd006733.xhtml),
    *Understanding Classes, Structures, and Interfaces*, and look at some other critical
    aspects, such as method overriding, virtual methods, and sealed and abstract classes.
    While looking at polymorphism, we will learn how we can implement both compile/static
    and runtime polymorphism in C# programs.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](8acdf308-13c5-4298-bdba-7bef6e8b087b.xhtml)，*理解面向对象编程*，专注于面向对象编程的四个支柱（**面向对象编程**，**OOP**）。通过示例，你将学习到每个支柱——封装、多态、抽象和继承——是如何实现的。在探讨继承时，我们将扩展[第2章](7b49f1ac-89ac-4157-88b5-e6b8cd006733.xhtml)，*理解类、结构和接口*，并探讨一些其他关键方面，例如方法重写、虚方法和密封和抽象类。在探讨多态时，我们将学习如何在C#程序中实现编译/静态多态和运行时多态。'
- en: '[Chapter 4](220cab72-e542-4103-9cb3-1245a3ff33eb.xhtml), *Implementing Program
    Flow*, focuses on how a developer can manage program flow in C#. In other words,
    this chapter helps you to understand how to control the program and make decisions
    using the statements available in C#. We will cover various Boolean expressions
    such as `if`/`else` and `switch`, which control the flow of code based upon conditions.
    This chapter also provides an overview of various operators, such as the conditional
    operator and the equality operator (`<`, `>`, and `==`), which govern the flow
    of code. Apart from operators and decision-making statements, this chapter helps
    you gain an understanding of iterating through collections (`for` loop, `while`
    loop, and so on) and explicit jump statements.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](220cab72-e542-4103-9cb3-1245a3ff33eb.xhtml)，*实现程序流程*，专注于开发者如何在C#中管理程序流程。换句话说，本章帮助你理解如何使用C#中可用的语句来控制程序和做出决策。我们将涵盖各种布尔表达式，如`if`/`else`和`switch`，它们根据条件控制代码的流程。本章还概述了各种运算符，如条件运算符和相等运算符（`<`、`>`和`==`），它们控制代码的流程。除了运算符和决策语句之外，本章还帮助你理解遍历集合（`for`循环、`while`循环等）和显式跳转语句。'
- en: '[Chapter 5](66c957f7-4032-461e-91e4-00da1eb6a517.xhtml), *Creating and Implementing
    Events and Callbacks*, focuses on events and callbacks in C#, which are important
    and give more control over the program. You''ll learn about the publish/subscribe
    model using events and callbacks, and focus on delegates. Then, we will move on
    to different ways of initiating delegates and lambda expressions. We will also
    spend some time on a new operator called the lambda operator, which is used in
    Lambda expressions.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](66c957f7-4032-461e-91e4-00da1eb6a517.xhtml)，*创建和实现事件和回调*，专注于C#中的事件和回调，它们非常重要，并提供了对程序的更多控制。你将了解使用事件和回调的发布/订阅模型，并专注于委托。然后，我们将探讨启动委托和lambda表达式的不同方法。我们还将花时间介绍一个名为lambda运算符的新运算符，它在Lambda表达式中使用。'
- en: '[Chapter 6](0e4bc746-9497-4794-bd30-81260431018f.xhtml), *Managing and Implementing
    Multithreading*, focuses on handling responsiveness in long-running programs and
    how we can keep the user notified about their progress. We''ll also look at how
    we can use the multi-core processing power that comes with every computer effectively.
    We will spend time looking at threads, thread properties, and how to use tasks
    and perform multithreaded operations.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](0e4bc746-9497-4794-bd30-81260431018f.xhtml)，*管理和实现多线程*，专注于处理长时间运行程序中的响应性以及我们如何让用户了解他们的进度。我们还将探讨如何有效地使用每台计算机都带有的多核处理能力。我们将花时间研究线程、线程属性以及如何使用任务和执行多线程操作。'
- en: '[Chapter 7](7c2b2a82-6a5c-4c96-a877-04d8a6e26ef0.xhtml), *Implementing Exception
    Handling*, focuses on understanding how to structure your program in a way that
    helps it to run in all scenarios; how we can handle unhandled exceptions; how
    to use the `try`, `catch`, and `finally` keywords and clean up resources once
    execution is completed. After reading this chapter, you will understand exceptions
    and how to use them in your program. You''ll also be able to create custom exceptions.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](7c2b2a82-6a5c-4c96-a877-04d8a6e26ef0.xhtml)，*实现异常处理*，专注于理解如何以有助于程序在各种情况下运行的方式构建你的程序；如何处理未处理的异常；如何在执行完成后使用`try`、`catch`和`finally`关键字并清理资源。阅读本章后，你将理解异常以及如何在你的程序中使用它们。你还将能够创建自定义异常。'
- en: '[Chapter 8](4eff7e9c-efbf-4e0f-9ee5-62f9934451b2.xhtml), *Creating and Using
    Types in C#*, focuses on the different types of variables available in C#. In
    [Chapter 2](7b49f1ac-89ac-4157-88b5-e6b8cd006733.xhtml), *Understanding Classes,
    Structures, and Interfaces*, we introduced users to the reference and data type
    variables available in C#. In this chapter, we will expand on that knowledge and
    learn how both variable types are maintained in memory. We will look at the managed
    heap memory structure, which is used for saving reference type variables. We will
    also look at the use of variable types pointer types in C#. Using pointers, we
    can implement memory-related operations that are otherwise considered unsafe in
    C#. We will also look at some important features in C#, such as properties, named
    arguments, and optional arguments, which are available in C# programming. We will
    look at how we can convert value-type variables to objects using boxing and similarly
    use unboxing to convert the object back to a value-type variable. We will then
    look at the different operations that are possible on a string representation
    in C#. We will also look at how we can use `stringbuilder` to optimize the performance
    of a C# program.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](4eff7e9c-efbf-4e0f-9ee5-62f9934451b2.xhtml)，*在C#中创建和使用类型*，主要关注C#中可用的不同类型的变量。在[第2章](7b49f1ac-89ac-4157-88b5-e6b8cd006733.xhtml)，*理解类、结构和接口*中，我们向用户介绍了C#中可用的引用和数据类型变量。在本章中，我们将在此基础上扩展知识，并学习这两种变量类型如何在内存中维护。我们将探讨用于保存引用类型变量的托管堆内存结构。我们还将探讨在C#中使用变量类型指针类型的使用。使用指针，我们可以实现其他情况下在C#中视为不安全的内存相关操作。我们还将探讨C#中一些重要特性，如属性、命名参数和可选参数，这些特性在C#编程中可用。我们将探讨如何使用装箱将值类型变量转换为对象，并相应地使用拆箱将对象转换回值类型变量。然后，我们将探讨在C#中对字符串表示形式可能执行的不同操作。我们还将探讨如何使用`stringbuilder`来优化C#程序的性能。'
- en: '[Chapter 9](b13c398c-8c38-4c9e-804f-2e0a2eb0ddbe.xhtml), *Managing the Object
    Life Cycle*, focuses on how the garbage collector manages the allocation and release
    of memory in .NET Framework. In this chapter, you will learn the difference between
    managed and unmanaged code in C#. We will look at mark-compact algorithms, used
    by garbage collectors for the allocation and release of memory. We will look at
    the possible ways we can manage the memory allocated to unmanaged code. We will
    also look at how we can implement finalization in a C# application and the performance
    implications of doing so. We will introduce the IDisposable interface and understand
    its differences from a `finalize` block. We will also look at code examples, in
    which we will combine both the IDisposable interface and a `finalize` block to
    achieve the best possible memory management for a C# application. Finally, we
    will look at the use of the `using` block in a C# application.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](b13c398c-8c38-4c9e-804f-2e0a2eb0ddbe.xhtml)，*管理对象生命周期*，主要关注垃圾回收器如何在.NET
    Framework中管理内存的分配和释放。在本章中，你将学习C#中托管代码和非托管代码之间的区别。我们将探讨垃圾回收器用于内存分配和释放的标记-压缩算法。我们还将探讨我们可以管理分配给非托管代码的内存的可行方法。我们还将探讨如何在C#应用程序中实现终结化以及这样做对性能的影响。我们将介绍IDisposable接口并理解它与`finalize`块的差异。我们还将查看代码示例，其中我们将结合使用IDisposable接口和`finalize`块，以实现C#应用程序的最佳内存管理。最后，我们将探讨在C#应用程序中使用`using`块的使用。'
- en: '[Chapter 10](b7bdae98-fc5b-4430-bb0d-b8541ca64f8d.xhtml), *Find, Execute, and
    Create Types at Runtime Using Reflection*, focuses on understanding how .NET Framework
    allows us to read/create metadata and how we can use reflection to read metadata
    and process it during runtime. We will focus on using attributes, creating custom
    attributes, and how we can retrieve attribute information at runtime. We''ll also
    cover how we can use reflection to create types, access properties, and invoke
    methods.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](b7bdae98-fc5b-4430-bb0d-b8541ca64f8d.xhtml)，*使用反射在运行时查找、执行和创建类型*，主要关注理解.NET
    Framework如何允许我们读取/创建元数据，以及我们如何使用反射在运行时读取元数据并对其进行处理。我们将重点关注使用属性、创建自定义属性以及我们如何在运行时检索属性信息。我们还将涵盖如何使用反射来创建类型、访问属性和调用方法。'
- en: '[Chapter 11](a677e3b2-a1ba-43c9-86dd-e3c92198ebc2.xhtml), *Validating Application
    Input*, focuses on validating input from the different kinds of users who''ll
    access your application and how we can avoid the application crashing based on
    user input. The purpose of this chapter is to understand the importance of validating
    input data in your application, the different validation techniques available
    in .NET Framework, and ways to validate JSON data and XML data.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](a677e3b2-a1ba-43c9-86dd-e3c92198ebc2.xhtml)，*验证应用程序输入*，主要关注验证将访问您的应用程序的不同类型用户的输入，以及我们如何避免应用程序根据用户输入崩溃。本章的目的是理解在您的应用程序中验证输入数据的重要性，.NET
    Framework中可用的不同验证技术，以及验证JSON数据和XML数据的方法。'
- en: '[Chapter 12](6c30397b-cc74-49ef-bed8-710f6970cef2.xhtml), *Performing Symmetric
    and Asymmetric Encryption*, focuses on how to keep information secure, what measures
    we can take while transmitting information over the internet, and understanding
    cryptography to encrypt and decrypt plain text. After reading this chapter, you
    will understand how to encrypt and decrypt text and be familiar with the different
    algorithms available in .NET Framework to perform such exercises.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第12章](6c30397b-cc74-49ef-bed8-710f6970cef2.xhtml)，*执行对称和不对称加密*，主要关注如何保持信息的安全，我们在通过互联网传输信息时可以采取的措施，以及理解密码学来加密和解密明文。阅读本章后，您将了解如何加密和解密文本，并熟悉.NET
    Framework中可用于此类练习的不同算法。'
- en: '[Chapter 13](1b843395-d58f-4d0b-b241-210ed50dd02b.xhtml), *Managing Assemblies
    and Debugging Applications*, focuses on how to manage .NET assemblies, debugging
    applications, and how to use tracing. This chapter covers validation techniques
    we have already learned and exception handling for those scenarios, as well as
    monitoring code blocks. We''ll also look at Visual Studio features or tools for
    debugging an application. After that, we''ll look at the versioning of assemblies
    and how we can have the same assembly side by side, as well as how we can distribute
    those assemblies without impacting others.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[第13章](1b843395-d58f-4d0b-b241-210ed50dd02b.xhtml)，*管理程序集和调试应用程序*，主要关注如何管理.NET程序集、调试应用程序以及如何使用跟踪。本章涵盖了我们已经学过的验证技术，以及针对这些场景的异常处理，以及监控代码块。我们还将探讨用于调试应用程序的Visual
    Studio功能或工具。之后，我们将探讨程序集的版本管理以及如何使相同的程序集并排存在，以及如何分发这些程序集而不影响他人。'
- en: '[Chapter 14](ed867897-1e3b-47fe-b646-28484f783f37.xhtml), *Performing I/O Operations*,
    focuses on how I/O operations are performed in a C# application. In this chapter,
    we will look at the different operations possible in C# to access data in I/O
    files as well as operations coming from external web services. Using code examples,
    you will see how we can use the `System.IO` helper class to read/write data from
    a file. We will also look at the helper classes of `File` and `FileInfo` provided
    in C# for performing I/O operations. We will then look at the `WebRequest` and
    `WebResponse` helper classes, which help us to interact with data coming from
    external services/applications. Finally, we will look at how we can execute these
    operations asynchronously in an application.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[第14章](ed867897-1e3b-47fe-b646-28484f783f37.xhtml)，*执行I/O操作*，主要关注如何在C#应用程序中执行I/O操作。在本章中，我们将探讨C#中访问I/O文件的不同操作以及来自外部Web服务的操作。通过代码示例，您将看到我们如何使用`System.IO`辅助类从文件中读取/写入数据。我们还将探讨C#提供的`File`和`FileInfo`辅助类，用于执行I/O操作。然后，我们将探讨`WebRequest`和`WebResponse`辅助类，这些类帮助我们与来自外部服务/应用程序的数据进行交互。最后，我们将探讨如何在应用程序中异步执行这些操作。'
- en: '[Chapter 15](75481977-f6a3-41af-ab1e-e3b112dd9aad.xhtml), *Using LINQ Queries*,
    focuses on how LINQ queries are implemented in C#. In this chapter, you will be
    introduced to the basics of a LINQ query, gaining an understanding of the different
    components and how they are constructed in .NET Framework. We will then look at
    the features in C# that help with the implementation of LINQ queries. Some of
    those features are necessary while some of them help us to get the best outcomes
    from LINQ queries. Using code examples, you will come to understand the implementation
    of implicitly typed variables, object initialization syntax, Lambda expressions,
    extension methods, and anonymous types. We will then look at the different operations
    available in LINQ queries. Using code examples, you will learn about the different
    scenarios in which you can use each of these operators. Finally, we will look
    at how you can use LINQ queries to perform operations on an XML file.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[第15章](75481977-f6a3-41af-ab1e-e3b112dd9aad.xhtml)，*使用LINQ查询*，专注于LINQ查询在C#中的实现。在本章中，您将了解LINQ查询的基础知识，了解不同的组件以及它们如何在.NET
    Framework中构建。然后，我们将探讨C#中帮助实现LINQ查询的功能。其中一些功能是必需的，而另一些则有助于我们从LINQ查询中获得最佳结果。通过代码示例，您将了解隐式类型变量、对象初始化语法、Lambda表达式、扩展方法和匿名类型等的实现。然后，我们将探讨LINQ查询中可用的不同操作。通过代码示例，您将了解可以使用这些运算符的不同场景。最后，我们将探讨如何使用LINQ查询对XML文件执行操作。'
- en: '[Chapter 16](a782bfe4-0a62-44b0-b7ad-9e697a5fed99.xhtml), *Serialization, Deserialization,
    and Collections*, focuses on different serialization and deserialization approaches,
    such as XML serialization, JSON serialization, and binary serialization, available
    in .NET Framework. We will also look at how we can define data contracts in web
    services so that data can be exchanged between different applications. We will
    then look at different collection objects, such as arrays, lists, dictionary,
    queues, and stacks, available in C# and understand how they can be used to store
    and consume data.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[第16章](a782bfe4-0a62-44b0-b7ad-9e697a5fed99.xhtml)，*序列化、反序列化和集合*，专注于.NET Framework中可用的不同序列化和反序列化方法，如XML序列化、JSON序列化和二进制序列化。我们还将探讨如何在Web服务中定义数据合同，以便在不同应用程序之间交换数据。然后，我们将探讨C#中可用的不同集合对象，如数组、列表、字典、队列和栈，并了解它们如何用于存储和消耗数据。'
- en: To get the most out of this book
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: 'To get the best possible outcome from this book, it''s advisable for you to
    have the following:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从本书中获得最佳效果，建议您具备以下条件：
- en: A basic understanding of software development
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对软件开发的基本理解
- en: A basic understanding of any common programming language, such as C, C++, or
    C#
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对任何常见编程语言的基本理解，例如C、C++或C#
- en: 'For the entirety of this book, we will be going through different code examples
    in C# and will be using Visual Studio 2017 Community Edition for the code examples.
    The following hardware requirements are essential for Visual Studio:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的整个内容中，我们将探讨不同的C#代码示例，并使用Visual Studio 2017社区版进行代码示例。以下硬件要求对于Visual Studio是必需的：
- en: 'Operating system:'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统：
- en: Windows 10 or higher
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 10或更高版本
- en: 'Windows Server 2016: Standard and Datacenter'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Server 2016：标准版和数据中心版
- en: Windows 8.1
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 8.1
- en: 'Windows Server 2012 R2: Essential, Standard, and Datacenter'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Server 2012 R2：基础版、标准版和数据中心版
- en: Windows 7 SP1
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 7 SP1
- en: 'Hardware requirements:'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 硬件要求：
- en: Minimum 2 GB of RAM
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少2 GB的RAM
- en: 1.8 GHZ or faster processor
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1.8 GHz或更快的处理器
- en: 'Additional requirements:'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他要求：
- en: Administrative rights of the system
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统管理员权限
- en: .NET Framework 4.5 or higher
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: .NET Framework 4.5或更高版本
- en: 'Visual Studio: All of the code examples in this book have been compiled on
    Visual Studio Community Edition 2017 (you can also use a higher version of Visual
    Studio). It''s available for installation at [https://www.visualstudio.com/downloads/](https://www.visualstudio.com/downloads/).'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visual Studio：本书中的所有代码示例都是在Visual Studio Community Edition 2017上编译的（您也可以使用更高版本的Visual
    Studio）。它可在[https://www.visualstudio.com/downloads/](https://www.visualstudio.com/downloads/)进行安装。
- en: For better understanding, it's advisable that readers go through all the assessments
    at the end of each chapter as well as the mock tests available at the end of the
    book.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解，建议读者阅读每章末尾的所有评估以及本书末尾的模拟测试。
- en: It's also advisable for readers to go through the code examples available for
    each of the chapters and do the self-practice after each chapter.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 建议读者阅读每章提供的代码示例，并在每章之后进行自我练习。
- en: Download the example code files
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](https://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.packt.com](http://www.packt.com)的账户下载本书的示例代码文件。如果您在其他地方购买了这本书，您可以访问[www.packtpub.com/support](https://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: 'You can download the code files by following these steps:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下步骤下载代码文件：
- en: Log in or register at [www.packt.com](http://www.packt.com).
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[www.packt.com](http://www.packt.com)登录或注册。
- en: Select the Support tab.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择支持选项卡。
- en: Click on Code Downloads.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击代码下载。
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入书籍名称，并遵循屏幕上的说明。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 文件下载完成后，请确保您使用最新版本的以下软件解压或提取文件夹：
- en: WinRAR/7-Zip for Windows
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinRAR/7-Zip for Windows
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zipeg/iZip/UnRarX for Mac
- en: 7-Zip/PeaZip for Linux
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7-Zip/PeaZip for Linux
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Programming-in-C-Sharp-Exam-70-483-MCSD-Guide](https://github.com/PacktPublishing/Programming-in-C-Sharp-Exam-70-483-MCSD-Guide).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 本书代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/Programming-in-C-Sharp-Exam-70-483-MCSD-Guide](https://github.com/PacktPublishing/Programming-in-C-Sharp-Exam-70-483-MCSD-Guide)。如果代码有更新，它将在现有的GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他代码包，这些代码包来自我们丰富的书籍和视频目录，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。查看它们吧！
- en: Download the color images
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781789536577_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781789536577_ColorImages.pdf).'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一份包含本书中使用的截图/图表彩色图像的PDF文件。您可以从这里下载：[https://static.packt-cdn.com/downloads/9781789536577_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781789536577_ColorImages.pdf)。
- en: Conventions used
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: 'CodeInText: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "By default, a method by the name of `Main` will also be added
    to the class."'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: CodeInText：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称。以下是一个示例：“默认情况下，名为`Main`的方法也将添加到类中。”
- en: 'A block of code is set as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Bold: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "To create a new project, click on File | New Project and select
    Console App (.NET Framework) as the project type."'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 粗体：表示新术语、重要单词或您在屏幕上看到的单词。例如，菜单或对话框中的单词在文本中显示如下。以下是一个示例：“要创建新项目，请单击文件 | 新项目，并选择控制台应用程序(.NET
    Framework)作为项目类型。”
- en: Warnings or important notes appear like this.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示看起来是这样的。
- en: Tips and tricks appear like this.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士和技巧看起来是这样的。
- en: Get in touch
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: 'General feedback: If you have questions about any aspect of this book, mention
    the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一般反馈：如果您对本书的任何方面有疑问，请在邮件主题中提及书籍标题，并给我们发送电子邮件至`customercare@packtpub.com`。
- en: 'Errata: Although we have taken every care to ensure the accuracy of our content,
    mistakes do happen. If you have found a mistake in this book, we would be grateful
    if you would report this to us. Please visit [www.packtpub.com/support/errata](https://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 错误清单：尽管我们已经尽最大努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，如果您能向我们报告，我们将不胜感激。请访问[www.packtpub.com/support/errata](https://www.packtpub.com/support/errata)，选择您的书籍，点击错误提交表单链接，并输入详细信息。
- en: 'Piracy: If you come across any illegal copies of our works in any form on the
    Internet, we would be grateful if you would provide us with the location address
    or website name. Please contact us at `copyright@packt.com` with a link to the
    material.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 盗版：如果您在互联网上发现任何形式的我们作品的非法副本，如果您能提供位置地址或网站名称，我们将不胜感激。请通过发送链接至 `copyright@packt.com`
    与我们联系。
- en: 'If you are interested in becoming an author: If there is a topic that you have
    expertise in and you are interested in either writing or contributing to a book,
    please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有兴趣成为作者：如果您在某个领域有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问 [authors.packtpub.com](http://authors.packtpub.com/)。
- en: Reviews
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评论
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 请留下评论。一旦您阅读并使用了这本书，为何不在您购买它的网站上留下评论呢？潜在读者可以查看并使用您的客观意见来做出购买决定，我们Packt可以了解您对我们产品的看法，我们的作者也可以看到他们对书籍的反馈。谢谢！
- en: For more information about Packt, please visit [packt.com](http://www.packt.com/).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如需更多关于Packt的信息，请访问 [packt.com](http://www.packt.com/)。
