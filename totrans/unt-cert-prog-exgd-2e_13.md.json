["```cs\n    Vector3 direction;\n    Rigidbody rb;\n    public static bool mobile = false;\n    ```", "```cs\n    mobile = false;\n    #if UNITY_ANDROID && !UNITY_EDITOR\n        mobile = true; \n        InvokeRepeating(\"Attack\",0,0.3f); \n        rb = GetComponent<Rigidbody>();\n        #endif\n    ```", "```cs\n      if (Input.GetButtonDown(\"Fire1\") || mobile)\n    ```", "```cs\n    void Update ()\n     {\n       if(Time.timeScale == 1)\n        {\n          PlayersSpeedWithCamera();        \n          if (mobile)\n           {\n             MobileControls();\n           }\n           else\n           {\n             Movement();\n             Attack(); \n           }\n         }\n      }\n    ```", "```cs\n    if(camTravelSpeed > 1)\n       {\n           transform.position += Vector3.right * Time.                   \n               deltaTime* camTravelSpeed;\n          movingScreen += Time.deltaTime * camTravelSpeed;\n       }\n    ```", "```cs\n        void MobileControls()\n        {\n            if (Input.touchCount > 0)\n            {\n                Touch touch = Input.GetTouch(0);\n                Vector3 touchPosition = Camera.main.                ScreenToWorldPoint(new Vector3(touch.                    position.x,touch.position.y,300));\n                touchPosition.z = 0;\n                direction = (touchPosition - transform                 .position);\n                rb.velocity = new Vector3(direction.x,                 direction.y,0)* 5;\n                direction.x += movingScreen;\n\n                if (touch.phase == TouchPhase.Ended)\n                {\n                    rb.velocity = Vector3.zero;\n                }\n            }\n        }\n    ```", "```cs\n         if (!gameEnding)\n          {\n            gameEndine = true;\n    StartCoroutine(MusicVolume(MusicMode.fadeDown));\n            GameObject player = GameObject.Find(\"Player\");                     // ADD THIS CODE\n            player.GetComponent<Rigidbody>().isKinematic = true;               // ADD THIS CODE\n            Player.mobile = false;                                          // ADD THIS CODE\n            CancelInvoke();                                                 // ADD THIS CODE\n            if (SceneManager.GetActiveScene().name != \"level3\")\n    ```", "```cs\n        // float width;\n        // float height;\n    ```", "```cs\n    GameObject[] screenPoints = new GameObject[2];\n    ```", "```cs\n      // height = 1/(Camera.main.WorldToViewportPoint(new\n            Vector3(1,1,0)).y - .5f);\n      // width = 1/(Camera.main.WorldToViewportPoint(new\n            Vector3(1,1,0)).x - .5f);\n      // movingScreen = width;\n    ```", "```cs\n    CalculateBoundaries();\n    ```", "```cs\n        void CalculateBoundaries()\n        {\n            screenPoints[0] = new GameObject(\"p1\");\n            screenPoints[1] = new GameObject(\"p2\");\n            Vector3 v1 = Camera.main.ViewportToWorldPoint   \n                (new Vector3(0, 1, 300));\n            Vector3 v2 = Camera.main.ViewportToWorldPoint             (new Vector3(1, 0, 300));\n            screenPoints[0].transform.position = v1;\n            screenPoints[1].transform.position = v2;\n            screenPoints[0].transform.SetParent(this.    transform.parent);\n            screenPoints[1].transform.SetParent(this.    transform.parent);\n            movingScreen = screenPoints[1].transform.    position.x;\n        }\n    ```", "```cs\n    //OLD\n    if (transform.localPosition.x < width + width/0.9f)\n    //NEW\n    if (transform.localPosition.x < (screenPoints[1].transform.localPosition.x - screenPoints[1].transform.localPosition.x/30f)+movingScreen)\n    //OLD\n    if (transform.localPosition.x > width + width/6)\n    //NEW\n    if (transform.localPosition.x > (screenPoints[0].transform.localPosition.x + screenPoints[0].transform.localPosition.x/30f)+movingScreen)\n    //OLD\n    if (transform.localPosition.y > -height/3f)\n    //NEW\n    if (transform.localPosition.y > (screenPoints[1].transform.localPosition.y - screenPoints[1].transform.localPosition.y/3f))\n    //OLD\n    if (transform.localPosition.y < height/2.5f)\n    //NEW\n    if (transform.localPosition.y < (screenPoints[0].transform.localPosition.y - screenPoints[0].transform.localPosition.y/5f))\n    ```", "```cs\n        else\n            {\n                movingScreen = 0;\n     }\n    ```", "```cs\n     if (Input.touchCount > 0  &&\n       EventSystem.current.currentSelectedGameObject == null)\n    ```", "```cs\n    using UnityEngine.EventSystems;\n    ```", "```cs\n    GameObject explode =\n       GameObject.Instantiate(Resources.Load(\"explode\")) \n           as GameObject;\n    explode.transform.position = this.gameObject.transform.position;\n    Destroy(this.gameObject);\n    ```", "```cs\n        GameObject explode =\n          GameObject.Instantiate(Resources.Load(\"Prefab/explode\")) \n            as GameObject;\n        explode.transform.position = this.gameObject.transform.position;\n        GameManager.Instance.LifeLost();\n        Destroy(this.gameObject);\n    ```", "```cs\n    StartCoroutine(DelayedLifeLost());\n    ```", "```cs\n      IEnumerator DelayedLifeLost()\n      {\n        yield return new WaitForSeconds(2);\n    // PASTE LIFELOST CONTENT HERE\n      }\n    ```", "```cs\n  void Start() \n  {\n    if (GameManager.playerLives <= 2)\n        GameManager.playerLives = 3;\n  }\n```", "```cs\n     gameTimer = 0;\n    ```"]