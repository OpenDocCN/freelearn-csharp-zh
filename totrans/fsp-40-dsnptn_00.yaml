- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Following design patterns is a well-known approach to writing better programs
    that captures and reuses the high-level abstractions that are common in many applications.
    This book will encourage you to develop an idiomatic F# coding skillset by fully
    embracing the functional-first F# paradigm. It will also help you harness this
    powerful instrument to write succinct, bug-free, and cross-platform code.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循设计模式是编写更好程序的一种众所周知的方法，它捕获并重用了许多应用程序中常见的许多高级抽象。本书将鼓励你通过完全拥抱函数优先的 F# 范式来发展一种地道的
    F# 编码技能集。它还将帮助你利用这个强大的工具来编写简洁、无错误和跨平台的代码。
- en: '*F# 4.0 Design Patterns* will start off by helping you develop a functional
    way of thinking. We will show you how beneficial the functional-first paradigm
    is and how to use it to get the optimum results. The book will help you acquire
    the practical knowledge of the main functional design patterns, relationship of
    which with the traditional “Gang of Four” set is not straightforward.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 《F# 4.0 设计模式》将从帮助你培养一种函数式思维方式开始。我们将向你展示函数优先范式的好处以及如何使用它来获得最佳结果。本书将帮助你掌握主要函数式设计模式的知识，这些模式与传统“四人帮”模式之间的关系并不直接。
- en: We will take you through pattern matching, immutable data types, and sequences
    in F#. We will also uncover advanced functional patterns, look at polymorphic
    functions, see typical data crunching techniques, and learn adjusting code through
    augmentation and generalization. Lastly, we take a look at the advanced techniques
    to equip you with everything you may need to write flawless code. In addition,
    we will explore how the paradigm shift to functional-first affects the design
    principles and patterns of the object-oriented universe and wrap up the book with
    specifics of functional code troubleshooting.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将带你了解 F# 中的模式匹配、不可变数据类型和序列。我们还将揭示高级函数式模式，查看多态函数，查看典型数据处理技术，并学习通过增强和泛化调整代码。最后，我们还将探讨高级技术，以帮助你写出无瑕疵的代码。此外，我们将探讨范式转向函数优先如何影响面向对象宇宙的设计原则和模式，并以函数代码故障排除的具体细节结束本书。
- en: 'By reading this book you will achieve the following goals:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 通过阅读本书，你将实现以下目标：
- en: Acquire the practical knowledge to use the main functional design patterns
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获得使用主要函数式设计模式的知识
- en: Realign some imperative and object-oriented principles under the functional
    approach
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在函数式方法下重新调整一些命令式和面向对象的原则
- en: Develop your confidence in building and combining first-order and higher-order
    functions
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增强你在构建和组合一阶和更高阶函数方面的信心
- en: Learn how to use core language pattern matching effectively
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何有效地使用核心语言的模式匹配
- en: Learn how to use embedded algebraic data types in place of custom types for
    added effectiveness and code succinctness
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何使用嵌入式代数数据类型代替自定义类型，以增加效果和代码简洁性
- en: Navigate and use F# core libraries with ease by seeing patterns behind specific
    library functions
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过观察特定库函数背后的模式，轻松导航和使用 F# 核心库
- en: Recognize and measure the difference in resource consumption between sequences
    and materialized data structures
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别和衡量序列和具体化数据结构之间资源消耗的差异
- en: Master writing generic polymorphic code
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 掌握编写通用多态代码
- en: What this book covers
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](text00015.html#page "Chapter 1. Begin Thinking Functionally") ,
    *Begin Thinking Functionally* , should help you in developing a manner of coding
    usually associated with the functional paradigm. It will equip you with the knowledge,
    the key concepts, and the target list of skills pertinent to the functional-first
    nature of F# programming language.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第一章](text00015.html#page "第一章. 开始函数式思考") ，《开始函数式思考》将帮助你培养一种通常与函数范式相关的编程方式。它将为你提供知识、关键概念以及与
    F# 编程语言函数优先特性相关的技能目标列表。'
- en: '[Chapter 2](text00025.html#ch02 "Chapter 2. Dissecting F# Origins and Design")
    , *Dissecting F# Origins and Design* , will help you to find out the origins of
    F# contemporary design, how F# evolved, and what place it occupies in the .NET
    ecosystem.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第二章](text00025.html#ch02 "第二章. 解构 F# 的起源和设计") ，《解构 F# 的起源和设计》将帮助你了解 F# 当代设计的起源，F#
    的演变过程，以及它在 .NET 生态系统中的地位。'
- en: '[Chapter 3](text00030.html#ch03 "Chapter 3.  Basic Functions") , *Basic Functions*
    , helps you to acquire a firm foundation for idiomatic F# use. It gives you 360-degree
    review of the functional paradigm cornerstone, the notion of the function. You
    will be taught how to represent any solution as a assortment of functions plugged
    together with a handful of combinators. This chapter prepares you to absorb the
    main subject-the patterns of F# idiomatic use.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](text00030.html#ch03 "第3章。基本函数")，*基本函数*，帮助你获得F#惯用用法的基础。它为你提供了对函数范式基石——函数概念——的360度回顾。你将学习如何将任何解决方案表示为一系列通过少量组合子连接起来的函数。本章为你准备吸收主要主题——F#惯用用法的模式。'
- en: '[Chapter 4](text00039.html#page "Chapter 4.  Basic Pattern Matching") , *Basic
    Pattern Matching* , gives you a good grasp of the language mechanism that is put
    into at the core of the language to address any data transformations-F# pattern
    matching. The chapter covers basic pattern matching features leaving data decomposition
    and active patterns for the following chapters.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](text00039.html#page "第4章。基本模式匹配")，*基本模式匹配*，使你对语言机制有一个良好的掌握，该机制被置于语言的核心以处理任何数据转换-F#模式匹配。本章涵盖了基本模式匹配功能，将数据分解和主动模式留到后续章节。'
- en: '[Chapter 5](text00049.html#page "Chapter 5.  Algebraic Data Types") , *Algebraic
    Data Types* , shows you the patterns of using the F# standard algebraic data types
    (tuples, discriminated unions, and records) as a better alternative to developing
    custom types. It covers these types composition, equality, comparison, decomposition,
    and augmentation.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](text00049.html#page "第5章。代数数据类型")，*代数数据类型*，展示了如何使用F#标准代数数据类型（元组、区分联合和记录）作为开发自定义类型的更好替代方案。它涵盖了这些类型的组合、等价性、比较、分解和增强。'
- en: '[Chapter 6](text00053.html#ch06 "Chapter 6.  Sequences - The Core of Data Processing
    Patterns") , *Sequences - The Core of Data Processing Patterns* , acquaints you
    with one of the most essential arrangements of functional programming, the sequences.
    Sequences lay in the foundation of few fundamental functional patterns, such as
    lazy evaluation, sequence generators, and sequences of indefinite lengths. This
    chapter also puts down a blueprint of data transformation patterns taxonomy.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](text00053.html#ch06 "第6章。序列——数据处理模式的核心")，*序列——数据处理模式的核心*，使你熟悉函数编程中最基本的结构之一，即序列。序列是几个基本函数模式的基础，如惰性评估、序列生成器和不确定长度的序列。本章还奠定了数据转换模式分类法的蓝图。'
- en: '[Chapter 7](text00058.html#ch07 "Chapter 7.  Advanced Techniques: Functions
    Revisited") , *Advanced Techniques: Functions Revisited* , builds upon already
    covered patterns of language use in functions, pattern matching, and sequences.
    It introduces readers to such F# patterns as recursion, folding, memoization,
    and continuation passing.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](text00058.html#ch07 "第7章。高级技术：函数回顾")，*高级技术：函数回顾*，基于已经覆盖的函数、模式匹配和序列的语言使用模式。它向读者介绍了F#的递归、折叠、记忆化和传递继续等模式。'
- en: '[Chapter 8](text00065.html#page "Chapter 8. Data Crunching – Data Transformation
    Patterns") , *Data Crunching - Data Transformation Patterns* , continues to dig
    deeper into the data transformation patterns we began uncovering in relation to
    sequences. You are given a full taxonomy of polymorphic data transformation patterns
    captured by the F# 4.0 core library. Now you are fully prepared to blueprinting
    your designs with the help of highly optimized high quality library function compositions,
    mostly avoiding custom implementations.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](text00065.html#page "第8章。数据处理——数据转换模式")，*数据处理——数据转换模式*，继续深入挖掘我们在与序列相关联时开始揭示的数据转换模式。你得到了F#
    4.0核心库捕获的多态数据转换模式的完整分类法。现在你已完全准备好，在高度优化的高质量库函数组合的帮助下，设计蓝图，大多数情况下避免自定义实现。'
- en: '[Chapter 9](text00068.html#ch09 "Chapter 9. More Data Crunching") , *More Data
    Crunching* , adds to the data transformation patterns defined by F# core library
    arrangement data queries with F# query expressions and data parsing with the help
    of type providers.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](text00068.html#ch09 "第9章。更多数据处理")，*更多数据处理*，通过F#查询表达式和类型提供者帮助的数据解析，增加了由F#核心库定义的数据转换模式。'
- en: '[Chapter 10](text00071.html#ch10 "Chapter 10. Type Augmentation and Generic
    Computations") , *Type Augmentation and Generic Computations* , covers two F#
    usage patterns based on opposite type transformations-code generalization and
    code specialization. You will get a demonstration of the benefits that may be
    achieved through the application of these patterns.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](text00071.html#ch10 "第10章. 类型增强和泛型计算")，*类型增强和泛型计算*，涵盖了基于相反类型转换的两种F#使用模式——代码泛化和代码特殊化。你将看到通过应用这些模式可能获得的益处。'
- en: '[Chapter 11](text00074.html#page "Chapter 11. F# Expert Techniques") , *F#
    Expert Techniques* , scratches the surface of really advanced F# patterns. We
    walk through the use of F# type providers, concurrent and reactive programming,
    and wrap up with metaprogramming.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](text00074.html#page "第11章. F# 专家技巧")，*F# 专家技巧*，探讨了真正高级的F#模式。我们将了解F#类型提供者、并发和响应式编程的使用，并以元编程结束。'
- en: '[Chapter 12](text00080.html#ch12 "Chapter 12. F# and OOP Principles/Design
    Patterns") , *F# and OOP Principles/Design Patterns* , correlates the book''s
    vision of design patterns with those of the OOP paradigm. We will see that well-known
    OOP design principles and specific patterns may morph, diminish, or literally
    seize to be in the context of functional-first paradigm.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[第12章](text00080.html#ch12 "第12章. F# 和面向对象原则/设计模式")，*F# 和面向对象原则/设计模式*，将本书对设计模式的理解与面向对象范式的理解联系起来。我们将看到，在以函数优先的范式中，著名的面向对象设计原则和特定模式可能会发生变化、减少，或者实际上在功能优先的范式中不再存在。'
- en: '[Chapter 13](text00083.html#page "Chapter 13. Troubleshooting Functional Code")
    , *Troubleshooting Functional Code* , represents an important addendum to the
    main subject, showing how to develop following the explorative style, how the
    nature of problems with F# code development significantly shifts into compile-time
    from run-time, and how to address some typical issues.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[第13章](text00083.html#page "第13章. 功能代码故障排除")，*功能代码故障排除*，是主要主题的重要补充，展示了如何以探索式风格进行开发，F#代码开发中的问题性质如何从运行时显著转移到编译时，以及如何解决一些典型问题。'
- en: What you need for this book
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书所需条件
- en: The most friendly development platform for the readers of this book is Visual
    Studio 2015 because some material, as the book's title indicate, is specific to
    F# v4.0 or above  versions. If you already have Visual Studio 2015 Professional
    or above editions you are ready to go without any extra effort.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本书的读者来说，最友好的开发平台是Visual Studio 2015，因为书中的一些材料，正如书名所示，是针对F# v4.0或更高版本的。如果你已经拥有Visual
    Studio 2015专业版或更高版本，你无需额外努力即可开始。
- en: Otherwise you may install  free Visual Studio 2015 Community edition from [https://www.visualstudio.com/vs/community/](https://www.visualstudio.com/vs/community/)
    .
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 否则，你可以从[https://www.visualstudio.com/vs/community/](https://www.visualstudio.com/vs/community/)安装免费的Visual
    Studio 2015社区版。
- en: 'For other options available for Windows platform please visit fsharp.org at:
    [http://fsharp.org/use/windows/](http://fsharp.org/use/windows/) .'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows平台上的其他选项，请访问fsharp.org：[http://fsharp.org/use/windows/](http://fsharp.org/use/windows/)。
- en: Somewhat limited set of book's code samples will also work under Linux and Mac.
    For correspondent installations instructions please visit [http://fsharp.org/use/linux/](http://fsharp.org/use/linux/)
    and [http://fsharp.org/use/mac/](http://fsharp.org/use/mac/) .
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的一些代码示例在Linux和Mac上也能有限地运行。有关相应的安装说明，请访问[http://fsharp.org/use/linux/](http://fsharp.org/use/linux/)和[http://fsharp.org/use/mac/](http://fsharp.org/use/mac/)。
- en: Requirements to the hardware are dictated by listed above versions of development
    environments.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对硬件的要求由上述开发环境的版本决定。
- en: Who this book is for
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: This book is for web programmers and .NET developers (C# developers and F# developers).
    So, if you have basic experience in F# programming and developing performance-critical
    applications, then this book is for you. For F# absolute beginners the comprehension
    curve would be rather steep, but preceding the book with one or more beginner
    courses from Learning F# ([http://fsharp.org/learn.html](http://fsharp.org/learn.html)
    ) may make it more palatable.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是为网页程序员和.NET开发者（C#开发者和F#开发者）所写。因此，如果你有基本的F#编程和开发性能关键型应用的经验，那么这本书适合你。对于F#的绝对初学者来说，理解曲线可能会相当陡峭，但通过学习F#（[http://fsharp.org/learn.html](http://fsharp.org/learn.html)）的一个或多个入门课程，可能会使它更容易接受。
- en: Conventions
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 惯例
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，您将找到许多文本样式，用于区分不同类型的信息。以下是一些这些样式的示例及其含义的解释。
- en: 'Elements of code such as language keywords, operators, expressions and value
    names are shown as follows: "In order to define recursive function `let` binding
    can be extended with modifier `rec` ", "Literal `"$42"` is bound to value `total`
    "'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 代码元素，如语言关键字、运算符、表达式和值名称，如下所示：“为了定义递归函数，`let` 绑定可以扩展为 `rec` 修饰符”，“文字`"$42"`绑定到值`total`”。
- en: 'A block of code is set as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望您注意代码块中的特定部分时，相关的行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: URLs are shown as [https://jet.com](https://jet.com) .
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 网址显示为[https://jet.com](https://jet.com)。
- en: Note
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示以如下框中显示。
- en: Tip
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Tips and tricks appear like this.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士和技巧如下所示。
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Clicking the **Next** button moves you to the next screen."'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要词汇**以粗体显示。屏幕上显示的单词，例如在菜单或对话框中，在文本中显示如下：“点击**下一个**按钮将您带到下一屏幕。”'
- en: Reader feedback
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读者反馈
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book-what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of. To send us general
    feedback, simply e-mail feedback@packtpub.com, and mention the book's title in
    the subject of your message. If there is a topic that you have expertise in and
    you are interested in either writing or contributing to a book, see our author
    guide at [www.packtpub.com/authors](http://www.packtpub.com/authors) .
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们欢迎读者的反馈。告诉我们您对这本书的看法——您喜欢或不喜欢什么。读者反馈对我们很重要，因为它帮助我们开发出您真正能从中获得最大价值的标题。要发送一般反馈，请简单地发送电子邮件至
    feedback@packtpub.com，并在邮件主题中提及书籍的标题。如果您在某个主题领域有专业知识，并且您对撰写或为书籍做出贡献感兴趣，请参阅我们的作者指南[www.packtpub.com/authors](http://www.packtpub.com/authors)。
- en: Customer support
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户支持
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已成为 Packt 书籍的骄傲拥有者，我们有一些事情可以帮助您充分利用您的购买。
- en: Downloading the example code
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载示例代码
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com)
    . If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您的账户下载这本书的示例代码文件。[http://www.packtpub.com](http://www.packtpub.com) 。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: 'You can download the code files by following these steps:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下步骤下载代码文件：
- en: Log in or register to our website using your e-mail address and password.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的电子邮件地址和密码登录或注册我们的网站。
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标指针悬停在顶部的**支持**选项卡上。
- en: Click on **Code Downloads & Errata** .
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**代码下载与勘误**。
- en: Enter the name of the book in the **Search** box.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**搜索**框中输入书籍的名称。
- en: Select the book for which you're looking to download the code files.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您想要下载代码文件的书籍。
- en: Choose from the drop-down menu where you purchased this book from.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择您购买这本书的地方。
- en: Click on **Code Download** .
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**代码下载**。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 文件下载完成后，请确保您使用最新版本的软件解压缩或提取文件夹。
- en: WinRAR / 7-Zip for Windows
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinRAR / 7-Zip for Windows
- en: Zipeg / iZip / UnRarX for Mac
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zipeg / iZip / UnRarX for Mac
- en: 7-Zip / PeaZip for Linux
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7-Zip / PeaZip for Linux
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Fsharp-4.0-Design-Patterns](https://github.com/PacktPublishing/Fsharp-4.0-Design-Patterns)
    . We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)
    . Check them out!
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 该书的代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/Fsharp-4.0-Design-Patterns](https://github.com/PacktPublishing/Fsharp-4.0-Design-Patterns)。我们还有其他来自我们丰富图书和视频目录的代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。请查看它们！
- en: Errata
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 勘误
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books-maybe a mistake in the text
    or the code-we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)
    , selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the **Errata** section of that title.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已经尽一切努力确保我们内容的准确性，但错误仍然可能发生。如果您在我们的书中发现错误——可能是文本或代码中的错误——如果您能向我们报告，我们将不胜感激。这样做可以节省其他读者的挫败感，并帮助我们改进本书的后续版本。如果您发现任何勘误，请通过访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击**勘误提交表单**链接，并输入您的勘误详情来报告它们。一旦您的勘误得到验证，您的提交将被接受，勘误将被上传到我们的网站或添加到该标题下**勘误**部分的现有勘误列表中。
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看之前提交的勘误表，请访问[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)，并在搜索字段中输入书籍名称。所需信息将在**勘误**部分显示。
- en: Piracy
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 侵权
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在互联网上，版权材料侵权是一个跨所有媒体的持续问题。在Packt，我们非常重视我们版权和许可证的保护。如果您在互联网上发现我们作品的任何非法副本，请立即提供位置地址或网站名称，以便我们可以寻求补救措施。
- en: Please contact us at copyright@packtpub.com with a link to the suspected pirated
    material.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 请通过版权@packtpub.com与我们联系，并提供疑似侵权材料的链接。
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢您在保护我们作者和我们为您提供有价值内容的能力方面的帮助。
- en: Questions
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 询问
- en: If you have a problem with any aspect of this book, you can contact us at questions@packtpub.com,
    and we will do our best to address the problem.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在这本书的任何方面遇到问题，您可以通过questions@packtpub.com联系我们，我们将尽力解决问题。
