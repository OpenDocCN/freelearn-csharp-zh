- en: To the HoloLens and Beyond
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will look into how we can work with HoloLens to understand
    how to make **Mixed Reality** games and apps. The main focus will be to code with
    the HoloLens device in mind but be able to use the simulator for both the HoloLens
    and the Mixed Reality viewer. This will allow us to be able to test and view what
    is happening, regardless of whether we have the actual HoloLens device.
  prefs: []
  type: TYPE_NORMAL
- en: 'The learning objectives of this chapter are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Learning what Mixed Reality is
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding how Mixed Reality works
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing a basic Mixed Reality prototype
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is Mixed Reality, and how does it work?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Mixed Reality** is known as **MR** or **XR** (**extended reality**) and can
    refer to Augmented Reality, Virtual Reality, a combination of AR and VR into a
    single application or game, or it can be a reference to the game world being driven
    and modified by the real world. There are many ways to incorporate aspects of
    both **Augmented Reality** (**AR**) and **Virtual Reality** (**VR**) and by extension
    XR into a single application or a game.'
  prefs: []
  type: TYPE_NORMAL
- en: It should be noted that Microsoft exclusively uses the MR for Mixed Reality;
    however, the terms XR and MR can be used interchangeably, with people being able
    to understand what you are referencing.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take a look of a few notable examples of Mixed Reality games by Gbanga
    Millform Inc and dissect why they are Mixed Reality instead of just AR or VR games.
    Two games that I feel are very notable are Smart Urban Golf ([https://gbanga.com/gameography/smart-urban-golf/](https://gbanga.com/gameography/smart-urban-golf/))
    and Urban Hunt ([https://gbanga.com/gameography/gross-stadt-jagd/](https://gbanga.com/gameography/gross-stadt-jagd/)).
  prefs: []
  type: TYPE_NORMAL
- en: Urban Hunt
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Urban Hunt is an iOS and Android platform real-time game where players have
    to run and escape from a car that is hunting them throughout the city of Zurich.
    The game lasts anywhere from 90 minutes (one-and-a-half hours) to 150 minutes
    (two-and-a-half hours). The winner receives a Mercedes-Benz CLA Shooting Brake
    car in real life. Look at this screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ba4bde75-0d42-405a-bc52-992af80df57c.png)'
  prefs: []
  type: TYPE_IMG
- en: The text in this image is not important. It's an image of Urban Hunt in use
  prefs: []
  type: TYPE_NORMAL
- en: The game incorporates GPS and location-based data to build the game world. The
    game is built to be played by everyone in the city of Zurich. The game has an
    AI that you the player have to run away from in real time.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s break down what is AR, VR, and MR about this game.
  prefs: []
  type: TYPE_NORMAL
- en: Right away, we can see that there are no elements of VR added to this game at
    all. So, we don’t have to worry about that aspect of MR. It utilizes GPS, location
    data, and the city map of Zurich in the game. This means the game has some aspects
    of AR built into it by design. Moving on, it has MMO elements; this is neither
    AR or VR specific, but rather just massively multiplayer-online-game specific.
    Finally, the AI is what you the player have to run away from. This is where XR
    or MR comes into play. The reason for this is you don’t control the character
    with button prompts; you are the character, and it is based on your real-life
    walking and running movements. This is the aspect of augmenting the game world
    with real-world interactions or, conversely, augmenting the real world with a
    game world.
  prefs: []
  type: TYPE_NORMAL
- en: Now, you might be thinking, *that last sentence is the literal definition of
    AR*, but let’s break it down further. The game is not projecting into the real
    world, nor is the real world being fully projected into the game. The AI solely
    lives in the game world and you (the player) are simultaneously in the game world
    and the real world. You still have to pay full attention to the rules and the
    AI of the game world, in addition to the rules and struggles of real life. This
    is how it is Mixed Reality, instead of just Augmented Reality.
  prefs: []
  type: TYPE_NORMAL
- en: Smart Urban Golf
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Smart Urban Golf is a game where you play golf using your cell phone as the
    club, and you hit golf balls in the game world. You can practice by playing the
    driving-range mode, which makes the game generate random courses based on your
    current position, or you can play in a live tournament mode where you compete
    with others for the highest score on the online leaderboards.
  prefs: []
  type: TYPE_NORMAL
- en: 'Look at this screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/47e38d68-021d-47cd-907f-083c2b9c59d0.png)'
  prefs: []
  type: TYPE_IMG
- en: Smart Urban Golf
  prefs: []
  type: TYPE_NORMAL
- en: Breaking down the elements of the game, we can see that the golf club being
    the phone automatically places AR as one of the technologies being utilized. The
    location-based random courses means that Geolocation and GPS are being heavily
    utilized, which is mainly found in AR applications. Competing with others is a
    standard game mechanics. The ball is living in the game world only but is affected
    by the golf club (your cell phone), so the game is XR or MR.
  prefs: []
  type: TYPE_NORMAL
- en: XR applications in media
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'With these two example games being showcased, we should have a better idea
    of what XR or MR is. But I think we can go a bit further—what about using VR and
    AR together? There are certain people on YouTube who utilize the mixture of AR
    and VR together so the viewer can see what they see in the game as well as their
    body positions at the same time as using VR applications. Take a look at this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4b489827-8477-4fb0-b8a9-4cdbc1a7c880.png)'
  prefs: []
  type: TYPE_IMG
- en: Jazza
  prefs: []
  type: TYPE_NORMAL
- en: Here we see Jazza from Draw with Jazza is sculpting a model in a VR application
    with Oculus Rift. We can see what he is sculpting along with him working from
    outside the application. This is an example of utilizing XR to enhance the viewing
    experience of a third party.
  prefs: []
  type: TYPE_NORMAL
- en: 'But let’s also take a look at an XR video for gaming as well. Take a look at
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/56dce9f5-5000-4be7-b426-a4dc1ca4cf12.png)'
  prefs: []
  type: TYPE_IMG
- en: Brometheus
  prefs: []
  type: TYPE_NORMAL
- en: Brometheus is playing a game called Nevrosa Prelude with the HTC Vive, and it
    is also a VR game but has AR projected to enhance the viewing experience of a
    third party.
  prefs: []
  type: TYPE_NORMAL
- en: XR with HoloLens
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This is all well and good, but let’s take one more look with a HoloLens example
    this time around. Take a look at this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/01869e28-2a69-4f3c-ba42-5c86882f605a.png)'
  prefs: []
  type: TYPE_IMG
- en: Minecraft
  prefs: []
  type: TYPE_NORMAL
- en: During the E3 demo of the HoloLens and Minecraft in 2015, we saw an AR projection
    of the game in the real world along with the person using the HoloLens in VR mode.
  prefs: []
  type: TYPE_NORMAL
- en: 'One last example with the HoloLens and **Windows Mixed Reality** (**WMR**)
    should suffice, as I think all of these examples combined into one really exemplify
    the MR or XR full experience. Let''s take a look at this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/307eef3e-3c95-4963-8698-b6be27149fc3.png)'
  prefs: []
  type: TYPE_IMG
- en: The text in this image is not important. It gives you an example of Mixed Reality
    with fragments
  prefs: []
  type: TYPE_NORMAL
- en: The game in this screenshot is called *Fragments*, which is an adventure-style
    detective game. What makes this MR or XR over pure VR is that the game will scan
    where you are and allow the objects and characters in the game interact with it
    seamlessly. As you can see from the screenshot, the character is sitting on the
    player’s sofa.
  prefs: []
  type: TYPE_NORMAL
- en: What we have learned in this section is that XR or MR is essentially taking
    VR and AR elements and incorporating them into real-world environments and situations
    with seamless integration. This is the backbone of how we can take AR or VR to
    the next level for a proper Mixed Reality integration.
  prefs: []
  type: TYPE_NORMAL
- en: Getting Mixed Reality ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The HoloLens requires your computer to meet a couple of requirements; this
    includes the requirements for supporting Hyper-V and being VR-ready. This is also
    true for utilizing the HoloLens emulator. So, what requirements do we need to
    meet? Take a look at the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 64-bit Windows 10 Pro, Enterprise or Education editions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are using Windows 10 Home edition, it does not support Hyper-V or the
    HoloLens emulator.
  prefs: []
  type: TYPE_NORMAL
- en: 64-bit CPU
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CPU with four or more cores, or multiple CPUs with a minimum total of four cores
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 8 GB of RAM or more
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GPU with support for DirectX 11.0 or later
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GPU with **WDDM** (**Windows Display Driver Model**), 1.2 driver or later
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We also need a bios that supports the following features, and have them enabled:'
  prefs: []
  type: TYPE_NORMAL
- en: Hardware-assisted virtualization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Second-Level Address Translation** (**SLAT**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Hardware-Based Data Execution Prevention** (**DEP**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Microsoft has a handy list of specifications to meet, for both laptop and desktop
    computers, for minimum and recommended settings. Alternatively, you can use software
    on the Microsoft Store to run a PC check for compatibility ([https://www.microsoft.com/en-us/p/windows-mixed-reality-pc-check/9nzvl19n7cnc](https://www.microsoft.com/en-us/p/windows-mixed-reality-pc-check/9nzvl19n7cnc)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6c571ecb-da50-43cd-9243-f2cc11b59c0d.png)'
  prefs: []
  type: TYPE_IMG
- en: Microsoft specs
  prefs: []
  type: TYPE_NORMAL
- en: 'Hyper-V must be enabled on your system. Let''s follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To enable Hyper-V, go to the Control Panel:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a96a09e4-85ae-4021-83d1-faf28ff1d198.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Select Programs:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/51f2ca6d-c686-4ebb-b69f-9daf1460198d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Select Programs and Features:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/638216f3-e320-4434-8a59-7c32d57ed449.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Select Turn Windows features on or off:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/54e55d46-de14-4993-b3b4-a9c1efd64ae3.png)'
  prefs: []
  type: TYPE_IMG
- en: Windows features
  prefs: []
  type: TYPE_NORMAL
- en: 'Select all Hyper-V features by putting a check mark in and clicking the OK
    button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ee11d3dd-21a7-40cb-b420-2605df3e9290.png)'
  prefs: []
  type: TYPE_IMG
- en: Enable Hyper-V
  prefs: []
  type: TYPE_NORMAL
- en: 'Next up, we need to be absolutely certain that we have Visual Studio set up
    in the proper manner. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open Visual Studio Installer from your Start menu. If you have the Visual Studio
    Community edition, it will work too:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5fef6643-debe-4f46-8609-d8acae896255.png)'
  prefs: []
  type: TYPE_IMG
- en: VS Installer
  prefs: []
  type: TYPE_NORMAL
- en: We need to make certain that we have the most up-to-date version of Visual Studio.
    So, if it tells you to update instead of modify, do the update first.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we need to click on Modify and, then, once things are ready, click on Individual
    components:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8c4f30b9-be4a-4409-8b31-1ecc49810a92.png)'
  prefs: []
  type: TYPE_IMG
- en: Individual components
  prefs: []
  type: TYPE_NORMAL
- en: 'Scroll down until you see the list of Windows 10 SDKs. We need the latest one,
    which is 10.0.17134.0, and also the Windows 10 SDK for UWP C#, which is version
    10.0.16299.0:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3e7a163c-ef58-42f5-ad16-b26bb692dccf.png)'
  prefs: []
  type: TYPE_IMG
- en: Windows 10 SDK
  prefs: []
  type: TYPE_NORMAL
- en: 'The last thing we need to do, if you haven''t followed any other chapter in
    this book, is to make sure your minimum version of Unity is 2017, although we
    will be using the latest version of Unity, which is 2018.1.6f1\. If you don''t
    have it, make sure to update using the Unity Hub:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/282c0bd9-ae6f-41b4-8a38-404f129abe69.png)'
  prefs: []
  type: TYPE_IMG
- en: Latest Version of Unity
  prefs: []
  type: TYPE_NORMAL
- en: 'We also need to make sure we have the Windows Store .NET Scripting Backend,
    Windows Store IL2CPP Scripting Backend, and Windows IL2CPP Scripting Backend,
    to make sure we can translate from Unity specific code over to Windows code effectively:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c0332c6a-84ab-4627-97bf-da7713cdddbb.png)'
  prefs: []
  type: TYPE_IMG
- en: Unity Components
  prefs: []
  type: TYPE_NORMAL
- en: It will require a total of 8.8 GB in size on your hard disk.
  prefs: []
  type: TYPE_NORMAL
- en: Project overview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This project will be a basic prototype that will make sure that we can simulate
    a basic model can be displayed when viewed in HoloLens.
  prefs: []
  type: TYPE_NORMAL
- en: Playing with Mixed Reality
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s begin by first downloading the model we will be using with this project.
    Once again, let''s follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to [turbosquid.com](https://www.turbosquid.com/) and type `scifi` as the
    search parameters:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/60d4f2eb-7586-4742-ba83-3644d6058a84.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, change the pricing to Free:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/52d23d85-b72b-431c-a149-ffb8fde0dcd0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Find one you like. I like robots and I use FBX format, as I find it easy to
    use with multiple projects and game engines. So, I will select this one:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0c53ad8d-7426-4fc8-9d30-947797deec65.png)'
  prefs: []
  type: TYPE_IMG
- en: 'It will take you to a download page, so make sure you select the correct file
    you want and if it has a `textures` folder, download that as well:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2548532d-71b2-451a-b10e-bf12ff5a4aa6.png)'
  prefs: []
  type: TYPE_IMG
- en: Download robot
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to the folder where you downloaded the zip file and extract it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/47368b09-2bbe-4223-84a5-07f36a50a110.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we can jump into Unity. Create a new project and I will call this one `Chapter8`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0a0e4659-14d5-4ec5-9774-f61679e73f6b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Create a new folder called `Models`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Import the model into the project:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7bd6693e-bece-4321-9af8-614e2bec6db8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We now need to go through the steps to install the HoloLens Emulator. I should
    note that this will only work for Visual Studio, 2015 edition. If you have Visual
    Studio 2017 or later, you can use the Mixed Reality simulator that is built into
    the Windows 10 SDK. Let''s follow the steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to[ http://go.microsoft.com/fwlink/?LinkID=823018](http://go.microsoft.com/fwlink/?LinkID=823018)
    to download the simulator.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the installer to begin the installation process:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9337b245-63a0-4cec-90fc-3e46cceecc92.png)'
  prefs: []
  type: TYPE_IMG
- en: 'It will ask you if you want agree to using the CEIP program; choose your answer
    and click Next:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b41355a0-25b1-4410-b7c4-6e76480eaf1f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next up will be the standard Microsoft License Agreement; I would suggest reading
    it to know what you are agreeing to, and then click Accept afterward:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/addd7e66-0b76-4940-aa03-46ac9651fe93.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Select the features you want to install; I would suggest getting both the emulator
    and the templates for future reference. Click Install:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1bc44e86-dec4-47ce-8b41-8d2cca50c6ba.png)'
  prefs: []
  type: TYPE_IMG
- en: Now we can begin to set up the remaining portions of the project.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the camera
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since we or the user are using the HoloLens, we will be the first-person camera;
    it is important to remember that our starting position should always default to
    the Vector 3 values of x being `0`, y being `0`, and z being `0`. Everything else
    should always be offset according to that knowledge.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, the first thing to do will be to click on the camera in the Hierarchy pane:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5751fd9c-3f27-4f36-9fc4-04e96c0b2d78.png)'
  prefs: []
  type: TYPE_IMG
- en: Camera selected
  prefs: []
  type: TYPE_NORMAL
- en: 'The default values for the camera are set to X being `0`, Y being `1`, and
    Z being `-10`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/934d58ea-9737-40ad-acb1-ed9e490d3ca3.png)'
  prefs: []
  type: TYPE_IMG
- en: Default camera values
  prefs: []
  type: TYPE_NORMAL
- en: 'We need to change this to X being `0`, Y being `0`, and Z being `0`. Look at
    this screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d3cb2d03-228d-488a-b9b5-d471ab04c3fc.png)'
  prefs: []
  type: TYPE_IMG
- en: Modified camera values
  prefs: []
  type: TYPE_NORMAL
- en: With this being made for HoloLens, we don't need a Skybox texture; we want everything
    the camera renders. To do this, we need to change the Clear Flags from the default
    values.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The default values for the Clear Flags is Skybox:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e9839111-f31b-44df-85d6-2829176ddfe3.png)'
  prefs: []
  type: TYPE_IMG
- en: Default Clear Flags
  prefs: []
  type: TYPE_NORMAL
- en: 'We are going to change it to Solid Color:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/679193f3-4e60-4176-baa6-cd45dd05b658.png)'
  prefs: []
  type: TYPE_IMG
- en: Clear Flags modified
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we need to click on the background option underneath Clear Flags, which
    will open a color-picker window and change the RGBA values set to this: `0`,`0`,`0`,`0`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b543ab2b-4d9b-4ca6-87c6-4cd51c59bfae.png)'
  prefs: []
  type: TYPE_IMG
- en: Background Color
  prefs: []
  type: TYPE_NORMAL
- en: If you are going for Mixed Reality applications targeted to immersive headsets,
    you can keep the default settings that the Unity camera provides for the Skybox
    being used.
  prefs: []
  type: TYPE_NORMAL
- en: Performance and quality control
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As with any other game or application, performance is a very important thing
    to keep in mind. We need to maintain a high frame rate for Mixed Reality headsets
    and the HoloLens. As these headsets don't have many years of being on the market
    and aren't upgradable like PCs, Android phones, iOS devices, or consoles yet,
    it is best to keep the Quality Settings set to the lowest values possible.
  prefs: []
  type: TYPE_NORMAL
- en: 'To do this, click on Edit and look for Project Settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7497bce2-d175-465e-ac0e-063dc044ff3d.png)'
  prefs: []
  type: TYPE_IMG
- en: Project Settings
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on QualitySettings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/dfbb357c-4b9a-4566-9fa5-e348ccf69f9e.png)'
  prefs: []
  type: TYPE_IMG
- en: QualitySettings Defaults
  prefs: []
  type: TYPE_NORMAL
- en: 'Change the QualitySettings from Ultra or whatever your default values are to
    Very Low:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ba0db44a-4419-4e33-b0b9-a469b7195340.png)'
  prefs: []
  type: TYPE_IMG
- en: QualitySettings
  prefs: []
  type: TYPE_NORMAL
- en: 'The last thing to do is click on the arrows next to QualitySettings and set
    those defaults to be Very Low as well. Look at this screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5040c62a-a626-4de0-9d46-2bf0b57561ac.png)'
  prefs: []
  type: TYPE_IMG
- en: Set QualitySettings
  prefs: []
  type: TYPE_NORMAL
- en: Targeting the Windows 10 SDK
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The next step is to make sure we set the target we need for building, in this
    case, the Windows 10 SDK. First things first, we need to change the scripting
    backend. Let''s follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To do this, open the Build Settings menu:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c2496ae1-175d-46af-83fb-a84e28a9cd7e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now change the target from PC, Mac & Linux to Universal Windows Platform:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/244f5ebe-dfc6-455f-b618-f1f93e5b890e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on Player Settings and look for Configurations. Your Scripting Runtime
    Version should be set to .NET 4.x Equivalent, Scripting Backend should be set
    to .NET, and API Compatibility Level should be set to .NET 4.x:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d628d2c8-6c62-443d-8b80-d502e63eac6d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now scroll down and select XR Settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b3a00cd0-3241-45dd-b21f-2e1a1d899c60.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on the box to put a check mark into the Virtual Reality Supported box
    to enable it; Windows Mixed Reality should automatically be there with Stereo
    Rendering Method defaulting to Multi Pass:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/357e2741-9400-4b3b-a2a6-b3c1e4d65e6c.png)'
  prefs: []
  type: TYPE_IMG
- en: Do the robot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We are getting down to the final steps of this prototype project. So, let''s
    add and configure our robot into the scene to get going into the home stretch.
    You know what to do—follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We need to add the robot to the scene:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6380415b-c9bd-41f9-ada1-e12508e9b2cf.png)'
  prefs: []
  type: TYPE_IMG
- en: Add robot
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a few values we need to change, the first of which will be the position
    from the Inspector pane, then the rotation, and finally the scale. The default
    values place it to be at the origin of the player and is too big to be of any
    use currently:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3cbfa98e-fb81-4d07-b034-8d059f94b6b4.png)'
  prefs: []
  type: TYPE_IMG
- en: Robot Inspector
  prefs: []
  type: TYPE_NORMAL
- en: 'The X position should be set to `0.26`, to account for the slight offset that
    we have from the groupings. The Y position should be set to `0`, and the Z position
    should be set to `2`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c0fe1e1f-79b6-4810-ae4b-331e205ae825.png)'
  prefs: []
  type: TYPE_IMG
- en: Position
  prefs: []
  type: TYPE_NORMAL
- en: 'Next up is the rotation; we will set the X rotation to be `45`, the Y rotation
    to be `45`, and the Z rotation to be `45`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b4ea2e56-3af1-4562-8ba8-fded09a56259.png)'
  prefs: []
  type: TYPE_IMG
- en: rotation
  prefs: []
  type: TYPE_NORMAL
- en: 'Last, but certainly not least, is the scale. The X scale will be set to `0.6`,
    the Y scale set to be `0.6`, and the Z scale to be `0.6`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e50fd8c9-2fac-4e4c-83f1-9c609381fb11.png)'
  prefs: []
  type: TYPE_IMG
- en: scale
  prefs: []
  type: TYPE_NORMAL
- en: Now we are ready to build and finish this off.
  prefs: []
  type: TYPE_NORMAL
- en: Building and deploying from Visual Studio
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'OK, this is the last bit, so follow these final steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on Build Settings in Unity:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1bd2dc66-37a7-4a80-90c4-dde7868a15ca.png)'
  prefs: []
  type: TYPE_IMG
- en: Build Settings
  prefs: []
  type: TYPE_NORMAL
- en: 'Make sure that Unity C# Projects has a check mark in it; everything else should
    have everything pre-setup appropriately:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cb030843-c93a-446c-a2ed-e4ee2b7cebdd.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on Build:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c6eaf9f0-0a84-482d-95f4-58c2724bc471.png)'
  prefs: []
  type: TYPE_IMG
- en: Build
  prefs: []
  type: TYPE_NORMAL
- en: 'It will ask you for the folder you want to build to; create a new folder called
    `App`, and select it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/45385c0d-2535-4f1b-adb0-9e93dda41181.png)'
  prefs: []
  type: TYPE_IMG
- en: create folder
  prefs: []
  type: TYPE_NORMAL
- en: 'It will take a quite a few minutes to finish building, so be prepared for a
    wait:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c4f044d7-1f72-4bed-a1a8-a135b46543db.png)'
  prefs: []
  type: TYPE_IMG
- en: Building
  prefs: []
  type: TYPE_NORMAL
- en: 'Once complete, the folder should auto open; select the `App` folder, to have
    a look at it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b1dcc4ce-85ae-44f3-b28e-5a2969936d4f.png)'
  prefs: []
  type: TYPE_IMG
- en: App Folder
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the `Chapter8.sln` file to open it in Visual Studio:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/df9795cb-b70e-4ce3-a6e5-4ad5c30aefd8.png)'
  prefs: []
  type: TYPE_IMG
- en: Visual Studio
  prefs: []
  type: TYPE_NORMAL
- en: 'Change from Debug to Release:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a86816fc-cb8e-40a7-a9aa-6ea31b926906.png)'
  prefs: []
  type: TYPE_IMG
- en: Debug
  prefs: []
  type: TYPE_NORMAL
- en: 'Change from ARM architecture to x64:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2dac3faa-6f03-478b-9055-6281ae367949.png)'
  prefs: []
  type: TYPE_IMG
- en: 64 bit
  prefs: []
  type: TYPE_NORMAL
- en: 'Change from Device to the HoloLens Emulator:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2f64ea28-59d5-4d7a-ab28-6ac60a30f859.png)'
  prefs: []
  type: TYPE_IMG
- en: HoloLens
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on Debug, and Start without Debugging:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cdc884ad-b1f8-4c23-a987-d86c5e75eca8.png)'
  prefs: []
  type: TYPE_IMG
- en: No Debugging
  prefs: []
  type: TYPE_NORMAL
- en: It will display in the simulator now. You have made your first prototype of
    a Mixed Reality program.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We learned about how Mixed Reality works and a few different techniques we can
    apply from the theory to practical use. We looked at some examples of Mixed Reality
    and set up our computers to build for Mixed Reality, using the HoloLens Simulator.
  prefs: []
  type: TYPE_NORMAL
- en: Moving beyond this book, I would suggest going more into the VR side of things
    or perhaps looking into what Microsoft has done for the HoloLens, as most of its
    applications and games are open source and on GitHub. There are many fascinating
    things to learn and incorporate into AR and XR applications; it is still a brand-new
    aspect of game and application development, so experiment and test out new ideas.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'HoloLens requires Windows 8 SDK:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A.) True
  prefs: []
  type: TYPE_NORMAL
- en: B.) False
  prefs: []
  type: TYPE_NORMAL
- en: Mixed Reality is separate from VR and AR.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A.) True
  prefs: []
  type: TYPE_NORMAL
- en: B.) False
  prefs: []
  type: TYPE_NORMAL
- en: Unity can be set to regular PC building to build for Mixed Reality.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A.) True
  prefs: []
  type: TYPE_NORMAL
- en: B.) False
  prefs: []
  type: TYPE_NORMAL
- en: Installing HoloLens Simulator can be done via the Unity Editor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A.) True
  prefs: []
  type: TYPE_NORMAL
- en: B.) False
  prefs: []
  type: TYPE_NORMAL
- en: HoloLens requires Windows 10 SDK.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A.) True
  prefs: []
  type: TYPE_NORMAL
- en: B.) False
  prefs: []
  type: TYPE_NORMAL
- en: Mixed Reality is only possible on iOS.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A.) True
  prefs: []
  type: TYPE_NORMAL
- en: B.) False
  prefs: []
  type: TYPE_NORMAL
- en: Augmented Reality extends the real world to the digital world.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A.) True
  prefs: []
  type: TYPE_NORMAL
- en: B.) False
  prefs: []
  type: TYPE_NORMAL
- en: Android Devices are AR devices.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A.) True
  prefs: []
  type: TYPE_NORMAL
- en: B.) False
  prefs: []
  type: TYPE_NORMAL
- en: HoloLens requires ARKit to run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A.) True
  prefs: []
  type: TYPE_NORMAL
- en: B.) False
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Microsoft has a fantastic collection of projects for you to go through that
    allow for you to build Mixed Reality projects. Check out this link: [https://docs.microsoft.com/en-us/windows/mixed-reality/holograms-101e](https://docs.microsoft.com/en-us/windows/mixed-reality/holograms-101e).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Microsoft also has a walk-through on how to go about installing the tools and
    SDKs you need for building directly in Visual Studio. Check out this link: [https://docs.microsoft.com/en-us/windows/mixed-reality/install-the-tools](https://docs.microsoft.com/en-us/windows/mixed-reality/install-the-tools).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
