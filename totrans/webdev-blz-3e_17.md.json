["```cs\n<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles> \n```", "```cs\n<CompilerGeneratedFilesOutputPath>THEPATH</CompilerGeneratedFilesOutputPath> \n```", "```cs\npublic class SampleService\n{\n    public double Multiply(double x, double y)\n    {\n        return x * y;\n    }\n    public int NiceNumber => 42;\n} \n```", "```cs\n[GenerateAutoInterface]\npublic class SampleService: ISampleService\nâ€¦ \n```", "```cs\nusing Microsoft.CodeAnalysis;\nnamespace SourceGenerator;\n[Generator]\npublic class HelloSourceGenerator : ISourceGenerator\n{\n    public void Execute(GeneratorExecutionContext context)\n    {\n        // Code generation goes here\n    }\n    public void Initialize(GeneratorInitializationContext context)\n    {\n        // No initialization required for this one\n    }\n} \n```", "```cs\n // Build up the source code\n        string source = \"\"\"\nnamespace BlazorWebAssemblyApp;\npublic class GeneratedService\n    {\n        public string GetHello()\n        {\n            return \"Hello from generated code\";\n        }\n    }\n\"\"\";\n        // Add the source code to the compilation\n        context.AddSource($\"GeneratedService.g.cs\", source); \n```", "```cs\n <ItemGroup>\n    <ProjectReference \n        Include=\"..\\SourceGenerator\\SourceGenerator.csproj\" \n        OutputItemType=\"Analyzer\"\n        ReferenceOutputAssembly=\"false\"/>\n  </ItemGroup> \n```", "```cs\n@page \"/\"\n@inject GeneratedService service\n<h1>@service.GetHello()</h1> \n```", "```cs\nbuilder.Services.AddScoped<GeneratedService>(); \n```"]