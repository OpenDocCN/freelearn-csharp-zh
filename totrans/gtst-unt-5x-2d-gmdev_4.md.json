["```cs\noverride public void OnStateEnter(Animator Animator, AnimatorStateInfo stateInfo, int layerIndex) \n\n```", "```cs\nusing System.Collections; \nusing System.Collections.Generic; \nusing UnityEngine; \n\npublic class StateMachineBehaviour_DestroyOnExit : StateMachineBehaviour { \n\n} \n\n```", "```cs\n    override public void OnStateExit(Animator Animator, AnimatorStateInfo stateInfo, int layerIndex) { \n       * //Destroy the gameobject where the Animator is attached to* \n        Destroy(Animator.gameObject); \n    } \n\n```", "```cs\n *//Public variables that express the characteristic of the Panda* \n    public float speed;     //The movement speed \n    public float health;    //The amount of health \n\n```", "```cs\n *//Private variable to store the Animator for handling animations* \n    private Animator Animator; \n\n```", "```cs\n*//Hash representations of the Triggers of the Animator controller of the Panda* \nprivate int AnimDieTriggerHash = Animator.StringToHash(\"DieTrigger\"); \nprivate int AnimHitTriggerHash = Animator.StringToHash(\"HitTrigger\"); \nprivate int AnimEatTriggerHash = Animator.StringToHash(\"EatTrigger\"); \n\n```", "```cs\n    void Start () { \n       * //Get the reference to the Animator* \n        Animator = GetComponent<Animator>(); \n  } \n\n```", "```cs\n *//Function that based on the speed of the Panda makes it moving towards the destination point, specified as Vector3* \n    private void MoveTowards(Vector3 destination) { \n       * //Create a step and then move in towards destination of one step* \n        float step = speed * Time.deltaTime; \n        transform.position = Vector3.MoveTowards(transform.position, destination, step); \n    } \n\n```", "```cs\n *//Function that takes as input the damage that Panda received when hit by a sprinkle.*\n*//After have detracted the damage to the amount of health of the Panda checks if the Panda*\n *//is still alive, and so play the Hit animation, or if the health goes below zero the Die animation* \n    private void Hit(float damage) { \n           *//Subtract the damage to the health of the Panda* \n        health -= damage; \n           *//Then it triggers the Die or the Hit animations based if the Panda is still alive *        \n if(health <= 0) { \n            Animator.SetTrigger(AnimDieTriggerHash); \n        } \n        else { \n            Animator.SetTrigger(AnimHitTriggerHash); \n        } \n    } \n\n```", "```cs\n *//function that triggers the Eat animation* \n    private void Eat() { \n        Animator.SetTrigger(AnimEatTriggerHash); \n    } \n\n```"]