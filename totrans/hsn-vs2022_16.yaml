- en: 'Chapter 13: Working with Extensions in Visual Studio'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We cannot deny that Visual Studio’s native functionality for performing tasks,
    as we have seen so far, is phenomenal. However, there may be times when you want
    to extend the capabilities of the IDE with simple features, such as applying a
    new theme with custom colors, or complex functionality, such as code-refactoring
    tools.
  prefs: []
  type: TYPE_NORMAL
- en: It is in these cases where Visual Studio extensions are of great help, which
    is why we will dedicate an entire chapter to an analysis of their use.
  prefs: []
  type: TYPE_NORMAL
- en: 'The main topics we will see are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Working with the extensions tool
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Searching for and installing extensions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reviewing Visual Studio Marketplace
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up extensions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a new theme as an extension
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s start our tour through the extensibility of Visual Studio, thanks to extensions.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To follow this chapter, you must have installed Visual Studio with the web development
    workload, as shown in [*Chapter 1*](B17873_01_ePub.xhtml#_idTextAnchor013), *Getting
    Started with Visual Studio 2022*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, to create a theme as an extension, as shown in the *Creating
    a new theme as an extension* section, you must install the **Visual Studio extension
    development** workload, as shown in *Figure 13.1*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.1 – Installing the Visual Studio extension development workload'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.1_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.1 – Installing the Visual Studio extension development workload
  prefs: []
  type: TYPE_NORMAL
- en: You can install it before you start reading the *Creating a new theme as an
    extension* section or while creating the extension, as shown in the same section.
  prefs: []
  type: TYPE_NORMAL
- en: As the chapter focuses on showing the use of extensions in Visual Studio, a
    code repository is not required.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see how to work with the extensions tool from Visual Studio.
  prefs: []
  type: TYPE_NORMAL
- en: Working with the extensions tool
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The main purpose of extensions in Visual Studio is that you can improve your
    day-to-day productivity with features that may be somewhat specific to particular
    tasks, such as providing suggestions for best practices in code, performing code
    cleanup, highlighting messages in the output window, adding visual features in
    code files, or interacting with SQLite databases. Allowing developers to create
    new features for Visual Studio and share them with the rest of the world is an
    excellent move on the part of the Microsoft team.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: In this section, I will show you simple extensions to familiarize you with the
    concept of extensions. In [*Chapter 14*](B17873_14_ePub.xhtml#_idTextAnchor157),
    *Using Popular Extensions*, you will learn about the most widely used and preferred
    extensions by developers and how to work with them.
  prefs: []
  type: TYPE_NORMAL
- en: 'But how can we access these extensions? The most direct answer is through the
    extensions tool, which you can find through the **Extensions** | **Manage Extensions**
    menu, as shown in *Figure 13.2*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.2 – The extensions tool'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.02_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.2 – The extensions tool
  prefs: []
  type: TYPE_NORMAL
- en: 'On the left side, we find the following categories, which allow us to filter
    the extensions:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Installed**: These are the extensions that we have previously installed in
    the Visual Studio instance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Online**: In this category, you will find the extensions available to be
    added to Visual Studio. In the upper part, we have a filter with the **Sort by**
    legend, which allows us to filter the extensions in different ways.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Updates**: This category shows the extensions that have pending updates,
    either with bug fixes or extension improvements.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Roaming Extensions Manager**: This category allows you to view extensions
    previously installed in an instance of Visual Studio that are associated with
    a Microsoft account, so they can be installed in the current instance of Visual
    Studio. This means that if you are logged in on a different computer and you install
    an extension, you will be able to see it in this list, so you do not have to remember
    the name of the extension and can install it easily.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, let’s see how we can search and install extensions, thanks to this tool.
  prefs: []
  type: TYPE_NORMAL
- en: Searching for and installing extensions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The extensions tool, which is shown in *Figure 13.3*, has a search box located
    at the top right, where we can enter a search term to find extensions referring
    to some technology or tool. It is important to note that the search will be performed
    in the selected category, which we discussed in the *Working with the extensions
    tools* section.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to perform a search among all the extensions, the best thing to
    do is to go to the `javascript`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.3 – A list of results in the extensions tool'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.03_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.3 – A list of results in the extensions tool
  prefs: []
  type: TYPE_NORMAL
- en: The order of the list of extensions will appear according to the drop-down item
    at the top, which by default appears as sorting by **Relevance**, but we can also
    select other options, such as displaying by **Most Downloads**, **Most Recent**,
    **Trending**, or **Highest Rating**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s do another test, this time to install an extension. Let’s look for extensions
    related to `css`, and in the list, you will see an extension called **Color Preview**.
    To install an extension, just click on the **Download** button, which will start
    the download process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.4 – Searching for and installing an extension'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.04_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.4 – Searching for and installing an extension
  prefs: []
  type: TYPE_NORMAL
- en: Once the extension download is complete, a message will appear at the bottom
    of the window, stating **Your changes will be scheduled. The modifications will
    begin when all Microsoft Visual Studio windows are closed**. The message is very
    descriptive, so we will proceed to restart Visual Studio to perform the installation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once we close Visual Studio, the installation process will start, which will
    show you (as shown in *Figure 13.5*) the extension that will be installed on the
    Visual Studio instance, as well as additional information, such as the **Digital
    Signature** and **License** types:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.5 – The extension installation window'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.05_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.5 – The extension installation window
  prefs: []
  type: TYPE_NORMAL
- en: If we agree with the displayed information, as shown in *Figure 13.5*, we must
    click on the **Modify** button, which will start the installation process in the
    IDE.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the installation process is complete, you must reopen an instance of Visual
    Studio. Although at first glance it seems that nothing has changed, this extension
    has added the ability to show us the selected color applied in the properties
    of a `css` file to the IDE, as demonstrated in *Figure 13.6*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.6 – The feature added by the Color Preview extension'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.06_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.6 – The feature added by the Color Preview extension
  prefs: []
  type: TYPE_NORMAL
- en: You can compare the preceding screenshot with those shown in the *Working with
    CSS styling tools* section of [*Chapter 9*](B17873_09_ePub.xhtml#_idTextAnchor108)*,*
    *Styling and Cleanup Tools*.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to uninstall an extension, just open the extensions tool again
    and look for the extension in the **Installed** section. Then, click on the **Uninstall**
    button, as shown in *Figure 13.7*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.7 – Uninstalling an extension'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.07_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.7 – Uninstalling an extension
  prefs: []
  type: TYPE_NORMAL
- en: In the preceding screenshot, you can see a second button called **Disable**,
    which allows you to temporarily disable an extension until you decide to reactivate
    it.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have seen how to install extensions from the extensions tool, let’s
    take a look at Visual Studio Marketplace.
  prefs: []
  type: TYPE_NORMAL
- en: Reviewing Visual Studio Marketplace
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Visual Studio Marketplace is the online place to find and install extensions
    for Visual Studio 2022\. In this marketplace, you can also find extensions for
    other products of the Visual Studio family, such as Visual Studio Code and Azure
    DevOps. You can access the marketplace through the site: [https://marketplace.visualstudio.com/vs](https://marketplace.visualstudio.com/vs).'
  prefs: []
  type: TYPE_NORMAL
- en: Once you enter the portal, you will have a very different user interface to
    the extensions tool, but the core operation is the same. In the main portal, you
    will be able to see the different extensions sorted by **Featured**, **Trending**,
    **Most Popular**, and **Highest Rated**.
  prefs: []
  type: TYPE_NORMAL
- en: 'To test the marketplace, let’s search for the term `icons` and see the list
    of results. Although the list currently yields 49 results, not all extensions
    are compatible with the most modern version of Visual Studio. Therefore, it is
    recommended to apply the filter for **Visual Studio 2022**, as shown in *Figure
    13.8*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.8 – Filtering Visual Studio versions in the marketplace'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.8_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.8 – Filtering Visual Studio versions in the marketplace
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the filter has been applied, find the **Visual Studio Iconizer** extension
    and click on it to go to the extension page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.9 – Searching for extensions in the marketplace'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.09_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.9 – Searching for extensions in the marketplace
  prefs: []
  type: TYPE_NORMAL
- en: 'On the extension page, you will be able to find information that will give
    you a general idea about the extension, such as the number of installations, the
    number of reviews, ratings, the change log, and the project page, among other
    data. If the description of the extension describes that it can help you solve
    a problem, you can click on the green **Download** button, as shown next:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.10 – The button to download an extension'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.10_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.10 – The button to download an extension
  prefs: []
  type: TYPE_NORMAL
- en: This will start the process of downloading a file with a `vsix` extension –
    in this particular case, the name is `VSIconizer.vsix`. To install the extension
    in Visual Studio, you must first make sure you have closed all instances of the
    IDE and then run the downloaded file, which will start the same installation process
    that we saw in the *Searching for and installing extensions* section.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the installation process is finished and an instance of Visual Studio
    2022 is opened, we can see how the appearance of the IDE tabs has changed, illustrated
    in *Figure 13.11*, with the text being replaced by icons:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.11 – The appearance of the IDE tabs modified by the Iconizer extension'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.11_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.11 – The appearance of the IDE tabs modified by the Iconizer extension
  prefs: []
  type: TYPE_NORMAL
- en: Whether you opt for an installation with the extensions tool or by downloading
    the extensions from the marketplace, the installation process is extremely simple.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s see how to configure the extensions we install.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up extensions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Unfortunately, there is no standardized way to configure a Visual Studio extension,
    as each extension is unique and serves specific purposes. What is true is that
    most extensions will add configuration options for the extension, either through
    a special window, or from the configuration options.
  prefs: []
  type: TYPE_NORMAL
- en: 'The best way to know these configuration options is through the extension page
    itself. For example, in the case of the **Visual Studio Iconizer** extension,
    which we installed in the *Reviewing Visual Studio Marketplace* section, the initial
    behavior is to show only the icons on the tabs. The extension page tells us that
    this behavior can be changed to show the text of the tab next to the icon added
    by the extension. This can be done through the option that has been added through
    the **Tools** | **Options** | **Environment** | **Iconizer** menu, as shown in
    *Figure 13.12*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.12 – The Iconizer extension options'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.12_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.12 – The Iconizer extension options
  prefs: []
  type: TYPE_NORMAL
- en: Most extensions create a section, as shown in the preceding figure, and the
    more complex ones even provide a special new menu for the tool, which we will
    discuss in [*Chapter 14*](B17873_14_ePub.xhtml#_idTextAnchor157), *Using Popular
    Extensions*.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s look at a way to create a new theme for Visual Studio and export
    it as an extension so that more users can apply it to their Visual Studio instances.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a new theme as an extension
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you want to carry out an even more customized color configuration for your
    IDE, it is possible to do so, thanks to the extension called **Visual Studio Color
    Theme Designer**. You can search and download this extension within Visual Studio
    Marketplace, as we saw in the *Reviewing Visual Studio Marketplace* section.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have installed the extension, you will need to start Visual Studio
    and select the **Create a new project** option, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.13 – Creating a new project'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.13_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.13 – Creating a new project
  prefs: []
  type: TYPE_NORMAL
- en: 'In the window that is opened, you must select the project from the list called
    **VSTheme Project**, which has been installed, thanks to the previously added
    extension. If you do not find it at first glance, you can search for it in the
    search box at the top, as shown in *Figure 13.14*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.14 – Searching for the VSTheme project'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.14_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.14 – Searching for the VSTheme project
  prefs: []
  type: TYPE_NORMAL
- en: 'In the new project configuration window, as shown in *Figure 13.15*, you can
    enter a project name that refers to the theme you are creating. For this example,
    I will name it `CustomTheme`. You can leave the other parameters as the default
    values. Proceed to create the new project by clicking on **Create**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.15 – Project configuration'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.15_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.15 – Project configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are shown a window indicating that you must install the **Visual Studio
    extension development** workload, click on **Install**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.16 – Installing the Visual Studio extension development workload'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.16_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.16 – Installing the Visual Studio extension development workload
  prefs: []
  type: TYPE_NORMAL
- en: This will enable the environment to be able to develop extensions for the IDE.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: If, after installing the workload shown in *Figure 13.16*, you get a solution
    without files, you must recreate the project, which will solve the problem.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the IDE has installed the extension, the new project will be created with
    different elements. To configure your new theme, double-click on the file with
    the `vstheme` extension, inside the **Solution Explorer** window, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.17 – Opening the theme configuration file'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.17_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.17 – Opening the theme configuration file
  prefs: []
  type: TYPE_NORMAL
- en: 'This will start a wizard, which will allow you to create your new theme quickly.
    You will start in a tab called **Quick start**, where you will be able to select
    a base theme from the installed ones in order to make modifications to the new
    theme:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.18 – Setting up a new theme'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.18_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.18 – Setting up a new theme
  prefs: []
  type: TYPE_NORMAL
- en: 'In *Figure 13.18*, the **Dark** theme has been selected for the demonstration.
    From here, you can click on any of the three main colors, tagged as **Primary**,
    **Accent**, and **Secondary**, to select a different color and apply it by clicking
    the **OK** button, highlighted in red in *Figure 13.19*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.19 – Changing a color'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.19_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.19 – Changing a color
  prefs: []
  type: TYPE_NORMAL
- en: If you want more detailed customization, you can do it by following the same
    procedure, both in the **Common elements** and **All elements** tabs, as shown
    in *Figure 13.18*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, to use the theme, you have a **Preview** button at the bottom of the
    window to preview how the changes would look with your new configuration, and
    a button with the legend **Apply** to apply the changes to the IDE:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.20 – The buttons to preview and apply theme changes'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.20_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.20 – The buttons to preview and apply theme changes
  prefs: []
  type: TYPE_NORMAL
- en: 'To obtain the installable extension file, you must compile the project. One
    of the ways to compile the project is shown in *Figure 13.21*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.21 – Building the project'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.21_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.21 – Building the project
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the project has been successfully compiled, we must go to the compilation
    directory by right-clicking on the project and selecting the **Open Folder in
    File Explorer** option:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.22 – The option to open the project folder in Windows Explorer'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_13.22_B17873.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 13.22 – The option to open the project folder in Windows Explorer
  prefs: []
  type: TYPE_NORMAL
- en: This will open the Windows file explorer at the project location. In this path,
    we will proceed to find the file located in the `bin` | `Debug` | `CustomTheme.vsix`
    path. The name of the file will be taken from the name of the project. In our
    example, the name of the project is `CustomTheme`, as shown in *Figure 13.15*,
    so if you have used another name for the creation of the project, you will find
    the file with that name. This is the file that you can distribute to share the
    theme, or you can upload it to Visual Studio Marketplace.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: It is also possible to set the output mode to **Release**, as discussed in [*Chapter
    5*](B17873_05_ePub.xhtml#_idTextAnchor060), *Debugging and Compiling Your Projects*.
    This will generate a smaller file that will run faster.
  prefs: []
  type: TYPE_NORMAL
- en: As we have seen, creating a new theme, thanks to Visual Studio extensions, is
    extremely easy.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have seen that extensions are a way in which we can extend
    the functionality of Visual Studio, always with the aim of improving our user
    experience and optimizing development time. We have tested a few extensions that
    have completely changed some of the IDE’s functionality, such as previewing colors
    in `css` files, changing tabs to icons, and creating themes for distribution.
  prefs: []
  type: TYPE_NORMAL
- en: Also, we have reviewed how to search for and install extensions, both from the
    extensions tool and Visual Studio Marketplace. We analyzed how extensions are
    regularly configured, and finally, we created a new custom theme that can be shared
    with others, thanks to the use of an extension.
  prefs: []
  type: TYPE_NORMAL
- en: In [*Chapter 14*](B17873_14_ePub.xhtml#_idTextAnchor157), *Using Popular Extensions*,
    we will delve even deeper into the topic of extensions, analyzing which ones are
    the most popular because of their usefulness in web development.
  prefs: []
  type: TYPE_NORMAL
