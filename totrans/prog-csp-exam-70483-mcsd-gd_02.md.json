["```cs\nenum Day {Sat = 1, Sun, Mon, Tues, Wed, Thurs, Fri}\n```", "```cs\nenum Day : short {Sat = 1, Sun, Mon, Tues, Wed, Thurs, Fri}\n```", "```cs\n dynamic typeVariable = 100;\n Console.WriteLine(typeVariable + \" \" + typeVariable.GetType().ToString());// Output 100 System.Int32\n typeVariable = \"Hello\";\n Console.WriteLine(typeVariable + \" \" + typeVariable.GetType().ToString());// Output Hello System.String\n typeVariable = true;\n Console.WriteLine(typeVariable + \" \" + typeVariable.GetType().ToString());// Output True System.Boolean\n Console.ReadLine();\n```", "```cs\nclass CoordinatePoint\n{\n    public float xCoordinate;\n    public float yCoordinate;\n    public CoordinatePoint()\n    {\n    }\n    public CoordinatePoint(float x, float y)\n    {\n         this.xCoordinate = x; \n         this.yCoordinate = y;\n    }\n}\n```", "```cs\nstruct CoordinatePointStruct\n{\n     public float xCoordinate;\n     public float yCoordinate;\n     public CoordinatePointStruct()\n     {         \n        // This default constructor will give an error. \n     }\n     public CoordinatePointStruct(float x, float y)\n     {\n         this.xCoordinate = x;\n         this.yCoordinate = y;\n     }\n }\n```", "```cs\nstruct CoordinatePointStruct\n{\n     public float xCoordinate;\n     public float yCoordinate;\n     public CoordinatePointStruct(float x, float y)\n     {\n         this.xCoordinate = x;\n         this.yCoordinate = y;\n     }\n }\n```", "```cs\nstatic void ChangeValuesClass(CoordinatePoint obj)\n{\n     obj.xCoordinate = .5F;\n     obj.yCoordinate = .5F;\n}\nstatic void ChangeValuesStruct(CoordinatePointStruct obj)\n{\n     obj.xCoordinate = .5F;\n     obj.yCoordinate = .5F;\n}\n```", "```cs\nConsole.WriteLine(\"Hello World\");\nCoordinatePoint classCoordinate = new CoordinatePoint(.82F, .34F);\nCoordinatePointStruct structCoordinate = new CoordinatePointStruct(.82F, .34F);\nConsole.WriteLine(\"Initial Coordinates for Class are :\" + classCoordinate.xCoordinate.ToString() + \" \" + classCoordinate.yCoordinate.ToString());\nConsole.WriteLine(\"Initial Coordinates for Struct are :\" + structCoordinate.xCoordinate.ToString() + \" \" + structCoordinate.yCoordinate.ToString()); \n```", "```cs\nChangeValuesClass(classCoordinate);\nChangeValuesStruct(structCoordinate);\nConsole.WriteLine(\"Initial Coordinates for Class are :\" + classCoordinate.xCoordinate.ToString() + \" \" + classCoordinate.yCoordinate.ToString());\nConsole.WriteLine(\"Initial Coordinates for Struct are :\" + structCoordinate.xCoordinate.ToString() + \" \" + structCoordinate.yCoordinate.ToString()); \n```", "```cs\npublic class CarA\n{\n     public DateTime manufacturingDate;\n     public string bodyType;\n     public float fuelCapacity;\n     public void ImplementBrake()\n     {\n         Console.WriteLine(\"Inside Base Class Implement Brake\");\n     }\n     public void ImplementAccelerator()\n     {\n         Console.WriteLine(\"Inside Base Class Implement Accelerator\");\n     }\n     public void FoldableSeat()\n     {\n         Console.WriteLine(\"Inside Base Class Implement Accelerator\");\n     }\n }\n```", "```cs\npublic class CarB\n{\n    public DateTime manufacturingDate;\n    public string bodyType;\n    public float fuelCapacity;\n    public void ImplementBrake()\n    {\n        Console.WriteLine(\"Inside Base Class Implement Brake\");\n    }\n    public void ImplementAccelerator()\n    {\n        Console.WriteLine(\"Inside Base Class Implement Accelerator\");\n    }\n    public void RoofTopExtendable()\n    {\n         Console.WriteLine(\"Inside Car B Foldable Seat\");\n    }\n }\n```", "```cs\npublic class Car\n{\n    public DateTime manufacturingDate;\n    public string bodyType;\n    public float fuelCapacity;\n    public void ImplementBrake()\n    {\n        Console.WriteLine(\"Inside Base Class Implement Brake\");\n    }\n    public void ImplementAccelerator()\n    {\n        Console.WriteLine(\"Inside Base Class Implement Accelerator\");\n    }\n}\n```", "```cs\npublic class CarA : Car\n{\n    public CarA()\n    {\n        this.bodyType = string.Empty;\n        this.manufacturingDate = DateTime.MinValue;\n        this.fuelCapacity = 0.0F;\n    }\n    public CarA(DateTime manufacturingDate, string bodyType, float fuelCapacity)\n    {\n        this.bodyType = bodyType;\n        this.manufacturingDate = manufacturingDate;\n        this.fuelCapacity = fuelCapacity;\n        Console.WriteLine(\"Inside Car A Constructor\"); \n    }\n    public void FoldableSeat()\n    {\n        Console.WriteLine(\"Inside Car A Foldable Seat\");\n    }\n}\n```", "```cs\npublic class CarA : Car\n{\n     string bodyType;\n     public CarA()\n     {\n         this.bodyType = string.Empty;\n         base.bodyType = string.Empty;\n         this.manufacturingDate = DateTime.MinValue;\n         this.fuelCapacity = 0.0F;\n     }\n```", "```cs\nclass CarB : Car\n{\n    public CarB()\n    {\n        this.bodyType = string.Empty;\n        this.manufacturingDate = DateTime.MinValue;\n        this.fuelCapacity = 0.0F;\n    }\n    public CarB(DateTime manufacturingDate, string bodyType, float fuelCapacity)\n    {\n        this.bodyType = bodyType;\n        this.manufacturingDate = manufacturingDate;\n        this.fuelCapacity = fuelCapacity;\n        Console.WriteLine(\"Inside Car B Constructor\");\n    }\n    public void RoofTopExtendable()\n    {\n        Console.WriteLine(\"Inside Car B Foldable Seat\");\n    }\n}\n```", "```cs\nCarA carA = new CarA();\ncarA.ImplementAccelerator();\ncarA.ImplementBrake();\ncarA.FoldableSeat();\n\nCarB carB = new CarB();\ncarB.ImplementAccelerator();\ncarB.ImplementBrake();\ncarB.RoofTopExtendable();\nConsole.ReadLine();\n```", "```cs\npublic class Product\n{\n    public void ImplementBrand()\n    {\n        Console.WriteLine(\"Inside Base Class Implement Brake\");\n    }\n    public void ImplementColor()\n    {\n        Console.WriteLine(\"Inside Base Class Implement Accelerator\");\n    }\n}\n```", "```cs\npublic interface ICar\n{\n     void ImplementBrake(); \n     void ImplementAccelerator();\n     void ImplementBrand();\n     void ImplementColor();\n }\n```"]