["```cs\nmakecert -sky exchange -r -n \"CN=wabstest\" -pe -a sha1 -len 2048 -ss \nMy \"%HOMEPATH%\\documents\\wabstest.cer\"\n\n```", "```cs\n    if (oSession.HostnameIs(\"management.core.windows.net\")) {\n       oSession[\"https-Client-Certificate\"] = \"C:\\\\Users\\\\<username>\\\\Documents\\\\wabstest.cer\";\n    }\n    ```", "```cs\nstatic void Main()\n  {\n    Task t = new Task(Run);\n    t.Start();\n    Console.ReadLine();\n  }\n```", "```cs\nstatic void Run()\n{\n  string subscriptionId = \"<SubscriptionID>\";\n  string operationName = \"cloudservices\";\n  string serviceName = \"<servicename>\";\n  string resourceName = \"<resourcename>\";\n  Uri requestUri = new Uri(\"https://management.core.windows.net/\"\n                                    + subscriptionId\n                                    + \"/cloudservices/\"+ serviceName\n                                    + \"/resources/biztalkservices/~/biztalk/\"\n                                    + resourceName\n                                    + \"/?comp=backup\");\nMakeRequest(requestUri);\n}\n```", "```cs\nSystem.Net.Http\nSystem.net.Http.Request\n```", "```cs\nstatic async void MakeRequest(Uri requestUri) {\n   string payload =\n\"{\\\"BackupName\\\":\\\"<backupname>\\\",\\\"BackupStoreConnectionString\\\":\\\"AccountName=<storageaccountname>;AccountKey=<storageaccountkey>;DefaultEndpointsProtocol=https\\\"}\";\n\n   HttpContent content = new StringContent(payload);\n   content.Headers.ContentType.MediaType = \"application/json\";\n   content.Headers.Add(\"x-ms-version\", \"2010-10-28\");\n   using (var client = new HttpClient())\n   {\n      var response = await client.PostAsync(requestUri, content);\n      response.EnsureSuccessStatusCode();\n      Console.WriteLine(\"Backup started\");\n   }\n}\n```", "```cs\nvar certHandler = new WebRequestHandler();\nstring certThumbprint = \"<your thumbprint>\";\nX509Store certStore = new X509Store(StoreName.My,     \n                                    StoreLocation.CurrentUser);\ncertStore.Open(OpenFlags.ReadOnly);\nX509Certificate2Collection certCollection = certStore.Certificates.Find(X509FindType.FindByThumbprint, certThumbprint, false);\ncertStore.Close();\nX509Certificate2 certificate = certCollection[0];\ncertHandler.ClientCertificates.Add(certificate);You also need to change the using statement as shown below to pass in the certificate from:\nusing (var client = new HttpClient())\nTo:\nusing (var client = new HttpClient(certHandler))\n```", "```cs\nimport-module <pathtosource>/Microsoft.WindowsAzure.Management.BizTalkService.dll\n\n```", "```cs\n$sub = '<subscription ID>'\n$thumbprint = '<certificate thumbprint>'\n$cert = Get-Item cert:\\\\LocalMachine\\My\\$thumbprint\nSet-AzureSubscription -SubscriptionName \"Test\" -SubscriptionId $sub -Certificate $cert\nselect-azuresubscription –SubscriptionName \"Test\"\n\n```", "```cs\nGet-AzureBizTalkService -resourcename <service name>\n\n```", "```cs\nNew-AzureBizTalkService -ResourceName MyNewBizTalk -Location \"West Europe\" –ConfigurationFile \"c: \\ create_new.xml\"\n\n```", "```cs\nimport-module \"C:\\Program Files\\Windows Azure BizTalk Services Tools\\Microsoft.BizTalk.Services.Powershell.dll\"\n\n```", "```cs\nStop-AzureBizTalkBridgeSource –AcsNamespace <namespace> –IssuerName owner –IssuerKey <key> –BridgePath MyBridge\n\n```"]