["```cs\ndotnet sdk check \n```", "```cs\n.NET SDKs:\nVersion            Status\n-------------------------------------------------------\n8.0.400            Patch 8.0.401 is available.\n9.0.100            Up to date. \n```", "```cs\n    <Project Sdk=\"Microsoft.NET.Sdk\">\n      <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>net9.0</TargetFramework>\n        <Nullable>enable</Nullable>\n        <ImplicitUsings>enable</ImplicitUsings>\n      </PropertyGroup>\n    </Project> \n    ```", "```cs\n    <ItemGroup Label=\"To simplify use of Console methods.\">\n      <Using Include=\"System.Console\" Static=\"true\" />\n    </ItemGroup> \n    ```", "```cs\n<PropertyGroup>\n<OutputType>Exe</OutputType>\n<TargetFramework>net9.0</TargetFramework>\n<ImplicitUsings>enable</ImplicitUsings>\n<Nullable>enable</Nullable>\n<RootNamespace>Packt.Shared</RootNamespace>\n</PropertyGroup> \n```", "```cs\n<ItemGroup Label=\"Additional files to include during build.\">\n  <Compile Include=\"Utils.cs\" />\n  <None Include=\"readme.txt\" />\n</ItemGroup>\n<ItemGroup Label=\"NuGet packages for this project.\">\n  <PackageReference Include=\"Newtonsoft.Json\" Version=\"13.0.3\" />\n</ItemGroup> \n```", "```cs\n<PropertyGroup Condition=\"'$(CompileConfig)' == 'DEBUG'\" >\n  <Optimization>false</Optimization>\n  <Obfuscate>false</Obfuscate>\n  <OutputPath>$(OutputPath)\\debug</OutputPath>\n</PropertyGroup> \n```", "```cs\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <add key=\"nuget.org\"\n         value=\"https://api.nuget.org/v3/index.json\" />\n    <add key=\"MyCustomSource\"\n         value=\"https://mycustomsource.com/nuget\" />\n  </packageSources>\n</configuration> \n```", "```cs\n    XDocument doc = new(); \n    ```", "```cs\n    CS0246 The type or namespace name 'XDocument' could not be found (are you missing a using directive or an assembly reference?) \n    ```", "```cs\nusing System.Xml.Linq; // To use XDocument. \n```", "```cs\n    string s1 = \"Hello\";\n    String s2 = \"World\";\n    WriteLine($\"{s1} {s2}\"); \n    ```", "```cs\n    <ItemGroup>\n      <Using Remove=\"System\" />\n    </ItemGroup> \n    ```", "```cs\n    CS0246 The type or namespace name 'String' could not be found (are you missing a using directive or an assembly reference?) \n    ```", "```cs\n    using System; // To use String. \n    ```", "```cs\nWriteLine($\"Environment.Is64BitProcess = {Environment.Is64BitProcess}\");\nWriteLine($\"int.MaxValue = {int.MaxValue:N0}\");\nWriteLine($\"nint.MaxValue = {nint.MaxValue:N0}\"); \n```", "```cs\nEnvironment.Is64BitProcess = True\nint.MaxValue = 2,147,483,647\nnint.MaxValue = 9,223,372,036,854,775,807 \n```", "```cs\n    #region Assembly System.Runtime, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\n    // C:\\Program Files\\dotnet\\packs\\Microsoft.NETCore.App.Ref\\9.0.0\\ref\\net9.0\\System.Runtime.dll\n    #endregion \n    ```", "```cs\n        dotnet new classlib -f netstandard2.0 \n        ```", "```cs\n    dotnet --list-sdks \n    ```", "```cs\n    **8.0.400** [C:\\Program Files\\dotnet\\sdk]\n    **9.0.100** [C:\\Program Files\\dotnet\\sdk] \n    ```", "```cs\n    dotnet new globaljson --sdk-version 8.0.400 \n    ```", "```cs\n    The template \"global.json file\" was created successfully. \n    ```", "```cs\n    {\n      \"sdk\": {\n        \"version\": \"8.0.400\"\n      }\n    } \n    ```", "```cs\n    dotnet new classlib \n    ```", "```cs\n    Could not execute because the application was not found or a compatible .NET SDK is not installed. \n    ```", "```cs\n    <Project Sdk=\"Microsoft.NET.Sdk\">\n      <PropertyGroup>\n        **<TargetFramework>net8****.0****</TargetFramework>**\n        <ImplicitUsings>enable</ImplicitUsings>\n        <Nullable>enable</Nullable>\n      </PropertyGroup>\n    </Project> \n    ```", "```cs\n    WriteLine(\"I can run everywhere!\");\n    WriteLine($\"OS Version is {Environment.OSVersion}.\");\n    if (OperatingSystem.IsMacOS())\n    {\n      WriteLine(\"I am macOS.\");\n    }\n    else if (OperatingSystem.IsWindowsVersionAtLeast(\n      major: 10, build: 22000))\n    {\n      WriteLine(\"I am Windows 11.\");\n    }\n    else if (OperatingSystem.IsWindowsVersionAtLeast(major: 10))\n    {\n      WriteLine(\"I am Windows 10.\");\n    }\n    else\n    {\n      WriteLine(\"I am some other mysterious OS.\");\n    }\n    WriteLine(\"Press any key to stop me.\");\n    ReadKey(intercept: true); // Do not output the key that was pressed. \n    ```", "```cs\n    I can run everywhere!\n    OS Version is Microsoft Windows NT 10.0.22000.0.\n    I am Windows 11.\n    Press any key to stop me. \n    ```", "```cs\n    <Project Sdk=\"Microsoft.NET.Sdk\">\n      <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>net9.0</TargetFramework>\n        <Nullable>enable</Nullable>\n        <ImplicitUsings>enable</ImplicitUsings>\n     **<RuntimeIdentifiers>**\n     **win-x64;osx-arm64;linux-x64**\n     **</RuntimeIdentifiers>**\n      </PropertyGroup>\n    </Project> \n    ```", "```cs\ndotnet --info \n```", "```cs\n.NET SDK:\n Version:   9.0.100\n Commit:    81a714c6d3\n Workload version:  9.0.100-manifests.bbb3781c\n MSBuild version:   17.12.0\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.26100\n OS Platform: Windows\n RID:         win-arm64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.100\\\n.NET workloads installed:\nConfigured to use loose manifests when installing new manifests.\n [aspire]\n   Installation Source: VS 17.12.35309.182, VS 17.11.35303.130\n   Manifest Version:    9.0.0/0.0.100\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\9.0.100\\microsoft.net.sdk.aspire\\9.0.0\\WorkloadManifest.json\n   Install Type:        FileBased\nHost (useful for support):\n  Version: 9.0.0\n  Architecture: arm64\n  Commit:  static\n.NET SDKs installed:\n  8.0.400 [C:\\Program Files\\dotnet\\sdk]\n  9.0.100 [C:\\Program Files\\dotnet\\sdk]\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 8.0.8 [...\\dotnet\\shared\\Microsoft.AspNetCore.App]\n... \n```", "```cs\n    dotnet publish -c Release -r win-x64 --self-contained \n    ```", "```cs\n    MSBuild version 17.11.0+14c24b2d3 for .NET\n      Determining projects to restore...\n      All projects are up-to-date for restore.\n      DotNetEverywhere -> C:\\cs13net9\\Chapter07\\DotNetEverywhere\\bin\\Release\\net9.0\\win-x64\\DotNetEverywhere.dll\n      DotNetEverywhere -> C:\\cs13net9\\Chapter07\\DotNetEverywhere\\bin\\Release\\net9.0\\win-x64\\publish\\ \n    ```", "```cs\n    dotnet publish -c Release -r osx-arm64 --self-contained\n    dotnet publish -c Release -r linux-x64 --self-contained \n    ```", "```cs\n    I can run everywhere!\n    OS Version is Microsoft Windows NT 10.0.26100.0.\n    I am Windows 11.\n    Press any key to stop me. \n    ```", "```cs\nI can run everywhere!\nOS Version is Unix 13.5.2\nI am macOS.\nPress any key to stop me. \n```", "```cs\ndotnet publish -r win-x64 -c Release --no-self-contained\n/p:PublishSingleFile=true \n```", "```cs\n<PropertyGroup>\n<OutputType>Exe</OutputType>\n<TargetFramework>net9.0</TargetFramework>\n<Nullable>enable</Nullable>\n<ImplicitUsings>enable</ImplicitUsings>\n<RuntimeIdentifiers>\nwin-x64;osx-arm64;linux-x64\n</RuntimeIdentifiers>\n**<****DebugType****>****embedded****</****DebugType****>**\n</PropertyGroup> \n```", "```cs\n    dotnet publish -c Release -r win-x64 --self-contained /p:PublishSingleFile=true \n    ```", "```cs\n<PublishTrimmed>true</PublishTrimmed> <!--Enable trimming.--> \n```", "```cs\ndotnet publish ... **-p:PublishTrimmed=True** \n```", "```cs\n<PublishTrimmed>true</PublishTrimmed> <!--Enable trimming.-->\n<TrimMode>partial</TrimMode> <!--Set assembly-level trimming.--> \n```", "```cs\ndotnet publish ... **-p:PublishTrimmed=True -p:TrimMode=partial** \n```", "```cs\n    dotnet new buildprops --use-artifacts \n    ```", "```cs\n    The template \"MSBuild Directory.Build.props file\" was created successfully. \n    ```", "```cs\n    <Project>\n    <!-- See https://aka.ms/dotnet/msbuild/customize for more details on\n    customizing your build -->\n    <PropertyGroup>\n        <ArtifactsPath>$(MSBuildThisFileDirectory)artifacts</ArtifactsPath>\n    </PropertyGroup>\n    </Project> \n    ```", "```cs\n <PropertyGroup>\n    <TargetFramework>net9.0</TargetFramework>\n **<PublishAot>****true****</PublishAot>** \n```", "```cs\n    <Project Sdk=\"Microsoft.NET.Sdk.Web\">\n      <PropertyGroup>\n        <TargetFramework>net9.0</TargetFramework>\n        <Nullable>enable</Nullable>\n        <ImplicitUsings>enable</ImplicitUsings>\n     **<PublishAot>****true****</PublishAot>**\n     **<InvariantGlobalization>****true****</InvariantGlobalization>**\n      </PropertyGroup>\n    </Project> \n    ```", "```cs\n    using System.Globalization; // To use CultureInfo.\n    WriteLine(\"This is an ahead-of-time (AOT) compiled console app.\");\n    WriteLine(\"Current culture: {0}\", CultureInfo.CurrentCulture.DisplayName);\n    WriteLine(\"OS version: {0}\", Environment.OSVersion);\n    Write(\"Press any key to exit.\");\n    ReadKey(intercept: true); // Do not output the key that was pressed. \n    ```", "```cs\n    This is an ahead-of-time (AOT) compiled console app.\n    Current culture: Invariant Language (Invariant Country)\n    OS version: Microsoft Windows NT 10.0.22621.0 \n    ```", "```cs\n    dotnet publish \n    ```", "```cs\n    MSBuild version 17.8.0+4ce2ff1f8 for .NET\n      Determining projects to restore...\n      Restored C:\\cs13net9\\Chapter07\\AotConsole\\AotConsole.csproj (in 173 ms).\n      AotConsole -> C:\\cs13net9\\Chapter07\\AotConsole\\bin\\Release\\net9.0\\win-x64\\AotConsole.dll\n      Generating native code\n      AotConsole -> C:\\cs13net9\\Chapter07\\AotConsole\\bin\\Release\\net9.0\\win-x64\\publish\\ \n    ```", "```cs\n    using System.Reflection; // To use AssemblyName.\n    using System.Reflection.Emit; // To use AssemblyBuilder. \n    ```", "```cs\n    AssemblyBuilder ab = AssemblyBuilder.DefineDynamicAssembly(\n      new AssemblyName(\"MyAssembly\"), AssemblyBuilderAccess.Run); \n    ```", "```cs\n    dotnet publish \n    ```", "```cs\n    C:\\cs13net9\\Chapter07\\AotConsole\\Program.cs(9,22): warning IL3050: Using member 'System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)' which has 'RequiresDynamicCodeAttribute' can break functionality when AOT compiling. Defining a dynamic assembly requires dynamic code. [C:\\cs13net9\\Chapter07\\AotConsole\\AotConsole.csproj] \n    ```", "```cs\n    <ItemGroup>\n      <PackageReference Include=\"Newtonsoft.Json\"\n                        Version=\"13.0.3\" />\n    </ItemGroup> \n    ```", "```cs\n<Project Sdk=\"Microsoft.NET.Sdk\">\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <Nullable>enable</Nullable>\n    <ImplicitUsings>enable</ImplicitUsings>\n  </PropertyGroup>\n  <ItemGroup>\n    <PackageReference Version=\"9.0.0\"\n      Include=\"Microsoft.EntityFrameworkCore.Sqlite\" />\n  </ItemGroup>\n</Project> \n```", "```cs\n<PackageReference Version=\"9.0.0-preview.*\"\n  Include=\"Microsoft.EntityFrameworkCore.Sqlite\" /> \n```", "```cs\n<PackageReference Version=\"9.0-*\"\n  Include=\"Microsoft.EntityFrameworkCore.Sqlite\" /> \n```", "```cs\n<PackageReference Include=\"System.Net.Http\" Version=\"4.1.0-*\" />\n<PackageReference Include=\"Newtonsoft.Json\" Version=\"13.0.2-beta1\" /> \n```", "```cs\n    <Project Sdk=\"Microsoft.NET.Sdk\">\n      <PropertyGroup>\n        <TargetFramework>netstandard2.0</TargetFramework>\n        <LangVersion>12</LangVersion>\n      </PropertyGroup>\n    </Project> \n    ```", "```cs\n    using System.Text.RegularExpressions; // To use Regex.\n    namespace Packt.Shared;\n    public static class StringExtensions\n    {\n      public static bool IsValidXmlTag(this string input)\n      {\n        return Regex.IsMatch(input,\n          @\"^<([a-z]+)([^<]+)*(?:>(.*)<\\/\\1>|\\s+\\/>)$\");\n      }\n      public static bool IsValidPassword(this string input)\n      {\n        // Minimum of eight valid characters.\n        return Regex.IsMatch(input, \"^[a-zA-Z0-9_-]{8,}$\");\n      }\n      public static bool IsValidHex(this string input)\n      {\n        // Three or six valid hex number characters.\n        return Regex.IsMatch(input,\n          \"^#?([a-fA-F0-9]{3}|[a-fA-F0-9]{6})$\");\n      }\n    } \n    ```", "```cs\n        <Project Sdk=\"Microsoft.NET.Sdk\">\n          <PropertyGroup>\n            <TargetFramework>netstandard2.0</TargetFramework>\n            <LangVersion>12</LangVersion>\n            **<****GeneratePackageOnBuild****>****true****</****GeneratePackageOnBuild****>**\n        **<****PackageId****>****Packt.CSdotnet.SharedLibrary****</****PackageId****>**\n        **<****PackageVersion****>****9.0.0.0****</****PackageVersion****>**\n        **<****Title****>****C# 13 and .NET 9 Shared Library****</****Title****>**\n        **<****Authors****>****Mark J Price****</****Authors****>**\n        **<****PackageLicenseExpression****>**\n         **MS-PL**\n        **</****PackageLicenseExpression****>**\n        **<****PackageProjectUrl****>**\n         **https://github.com/markjprice/cs13net9**\n        **</****PackageProjectUrl****>**\n        **<****PackageReadmeFile****>****readme.md****</****PackageReadmeFile****>**\n        **<****PackageIcon****>****packt-csdotnet-sharedlibrary.png****</****PackageIcon****>**\n            **<****PackageRequireLicenseAcceptance****>****true****</****PackageRequireLicenseAcceptance****>**\n        **<****PackageReleaseNotes****>**\n         **Example shared library packaged for NuGet.**\n        **</****PackageReleaseNotes****>**\n        **<****Description****>**\n         **Three extension methods to validate a string value.**\n        **</****Description****>**\n        **<****Copyright****>**\n         **Copyright © 2016-2023 Packt Publishing Limited**\n        **</****Copyright****>**\n        **<****PackageTags****>****string extensions packt csharp dotnet****</****PackageTags****>**\n          </PropertyGroup>\n        **<****ItemGroup****>**\n        **<****None****Include****=****\"packt-csdotnet-sharedlibrary.png\"**\n        **PackagePath****=****\"\\\"****Pack****=****\"true\"** **/>**\n        **<****None****Include****=****\"readme.md\"**\n        **PackagePath****=****\"\\\"****Pack****=****\"true\"** **/>**\n        **</****ItemGroup****>**\n        </Project> \n        ```", "```cs\n    # README for C# 13 and .NET 9 Shared Library\n    This is a shared library that readers build in the book,\n    *C# 13 and .NET 9 - Modern Cross-Platform Development Fundamentals*. \n    ```", "```cs\n    <ItemGroup>\n      <PackageReference Include=\"Newtonsoft.Json\" Version=\"13.0.3\" />\n     **<PackageReference Include=****\"Packt.CSdotnet.SharedLibrary\"**\n     **Version=****\"9.0.0\"** **/>**\n    </ItemGroup> \n    ```", "```cs\n    Write(\"Enter a color value in hex: \");\n    string? hex = ReadLine();\n    WriteLine(\"Is {0} a valid color value? {1}\",\n      arg0: hex, arg1: hex.IsValidHex());\n    Write(\"Enter a XML element: \");\n    string? xmlTag = ReadLine();\n    WriteLine(\"Is {0} a valid XML element? {1}\",\n      arg0: xmlTag, arg1: xmlTag.IsValidXmlTag());\n    Write(\"Enter a password: \");\n    string? password = ReadLine();\n    WriteLine(\"Is {0} a valid password? {1}\",\n      arg0: password, arg1: password.IsValidPassword()); \n    ```", "```cs\n    Enter a color value in hex: 00ffc8\n    Is 00ffc8 a valid color value? True\n    Enter an XML element: <h1 class=\"<\" />\n    Is <h1 class=\"<\" /> a valid XML element? False\n    Enter a password: secretsauce\n    Is secretsauce a valid password? True \n    ```", "```cs\n<Project Sdk=\"Microsoft.NET.Sdk\">\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n **<TargetFramework>net9****.0****</TargetFramework>**\n **<LangVersion>****14****</LangVersion> <!--Requires .NET** **10** **SDK GA-->**\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n</Project> \n```", "```cs\n<Project Sdk=\"Microsoft.NET.Sdk\">\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <Nullable>enable</Nullable>\n    <ImplicitUsings>enable</ImplicitUsings>\n**<****EnablePreviewFeatures****>****true****</****EnablePreviewFeatures****>**\n**<****LangVersion****>****preview****</****LangVersion****>**\n  </PropertyGroup>\n</Project> \n```"]