- en: Chapter 2. Unity's and Playmaker's User Interface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章 Unity和Playmaker的用户界面
- en: In the previous chapter, we looked at the process of downloading and installing
    Unity, Playmaker, and setting up the project for work with this book. You have
    learned how to move the panels around within the Unity window in order to organize
    your workflow and how to change some of the project settings.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们探讨了下载和安装Unity、Playmaker以及为使用本书设置项目的过程。你已经学会了如何在Unity窗口内移动面板以组织你的工作流程，以及如何更改一些项目设置。
- en: In this chapter, we will take a closer look at each Unity panel and interface
    element you have encountered so far, as well as some of those you have not seen,
    including the Playmaker's **Actions** panel and the **Finite State Machine** (**FSM**)
    view. You will also learn how to create simple game objects and modify their properties,
    such as position, location, and scale.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将更详细地查看你迄今为止遇到的所有Unity面板和界面元素，以及一些你尚未见过的元素，包括Playmaker的 **动作** 面板和 **有限状态机**
    （**FSM**） 视图。你还将学习如何创建简单的游戏对象并修改它们的属性，如位置、位置和缩放。
- en: Interface overview and main menu
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 界面概述和主菜单
- en: 'Unity''s interface is modular: this means that you can drag its elements around,
    attach them to different parts of the Editor window or even detach them completely
    and put them on another screen for convenience. Editor is everything you see when
    you open Unity: panels, views, controls, and so on. *Editor* is how Unity itself
    is called within Unity. Let us take a look at the main interface elements.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Unity的界面是模块化的：这意味着你可以拖动其元素，将它们附加到编辑器窗口的不同部分，甚至完全分离并将它们放在另一个屏幕上以方便使用。当你打开Unity时，你看到的一切都是编辑器：面板、视图、控件等。*编辑器*
    是Unity在Unity内部的自称。让我们看看主要界面元素。
- en: 'There is the main menu on the top of the screen. Yours should include **File**,
    **Edit**, **Assets**, **GameObject**, **Component**, **PlayMaker**, **Window**,
    and **Help** submenus. They will help you create game objects (for example, primitives,
    lights, and cameras), attach components, and open new panels and views. The submenus
    can be explained as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕顶部有主菜单。你的菜单应该包括 **文件**、**编辑**、**资产**、**游戏对象**、**组件**、**Playmaker**、**窗口**
    和 **帮助** 子菜单。它们将帮助你创建游戏对象（例如，原语、灯光和相机）、附加组件，并打开新的面板和视图。子菜单可以解释如下：
- en: '| Submenus | Description |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| 子菜单 | 描述 |'
- en: '| --- | --- |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| **File** | This submenu contains all the commands about building, saving,
    and opening projects and scenes. There are three commands here that you will use
    quite often, so it is a good idea to remember hotkeys for them: *command* + *S*
    (*Ctrl* + *S* in Windows) to save the current scene, *command* + *N* (*Ctrl* +
    *N* in Windows) to create a new scene, and *command* + *Shift* + *B* (*Ctrl* +
    *Shift* + *B* in Windows) to open the **Build Settings** window. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| **文件** | 此子菜单包含有关构建、保存和打开项目和场景的所有命令。这里有三个你将非常常用的命令，因此记住它们的快捷键是个好主意：*command*
    + *S* (*Ctrl* + *S* 在Windows中) 保存当前场景，*command* + *N* (*Ctrl* + *N* 在Windows中)
    创建新场景，以及 *command* + *Shift* + *B* (*Ctrl* + *Shift* + *B* 在Windows中) 打开 **构建设置**
    窗口。 |'
- en: '| **Edit** | This submenu lets you perform various operations on files and
    game objects, such as copying (*command* + *C* or *Ctrl* + *C* in Windows), pasting
    (*command* + *V* or *Ctrl* + *V* in Windows), duplicating (*command* + *D* or
    *Ctrl* + *D* in Windows), and deleting (*command* +*Delete* or just *Delete* in
    Windows). There are also undo (*command* + *Z* or *Ctrl* + *Z* in Windows) and
    redo (*command* + *Shift* + *Z* or *Ctrl* + *Shift* + *Z* in Windows) commands
    under it. These are all standard commands that are the same across your operating
    system, so you should just assume that they work the same as they do in Finder
    (Windows Explorer) or TextEdit (Windows Notepad). |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| **编辑** | 此子菜单允许你对文件和游戏对象执行各种操作，例如复制（*command* + *C* 或 Windows中的 *Ctrl* +
    *C*）、粘贴（*command* + *V* 或 Windows中的 *Ctrl* + *V*）、复制（*command* + *D* 或 Windows中的
    *Ctrl* + *D*）和删除（*command* +*Delete* 或 Windows中的直接 *Delete*）。在此之下还有撤销（*command*
    + *Z* 或 Windows中的 *Ctrl* + *Z*）和重做（*command* + *Shift* + *Z* 或 Windows中的 *Ctrl*
    + *Shift* + *Z*）命令。这些都是跨操作系统的标准命令，因此你应该假设它们在Finder（Windows资源管理器）或TextEdit（Windows记事本）中的工作方式相同。
    |'
- en: '| **Assets** | This submenu lets you create, import, and export files, also
    known as assets using the game development term. These can be scripts, animations,
    shaders, materials, and so on. The list of assets that are currently in your project
    can be seen in the **Project** panel. You will use commands available through
    this submenu later on in this chapter. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| **Assets** | 此子菜单允许您创建、导入和导出文件，在游戏开发术语中称为资产。这些可以是脚本、动画、着色器、材质等等。您项目中的资产列表可以在**Project**面板中查看。您将在本章后面使用此子菜单中可用的命令。
    |'
- en: '| **GameObject** | This submenu lets you create new game objects. Not unlike
    the way the **Assets** submenu is linked to the **Project** panel, the **GameObject**
    submenu is linked to the **Hierarchy** panel. You will learn more about different
    types of game objects later when we talk about the panels and views in Unity.
    For now just remember that you can create a new empty game object by pressing
    *command* + *Shift* + *N* (*Ctrl* + *Shift* + *N* in Windows). This is something
    you will be doing a lot while working in Unity. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| **GameObject** | 此子菜单允许您创建新的游戏对象。与**Assets**子菜单链接到**Project**面板的方式类似，**GameObject**子菜单链接到**Hierarchy**面板。当我们在Unity中讨论面板和视图时，您将了解更多关于不同类型游戏对象的信息。现在只需记住，您可以通过按*command*
    + *Shift* + *N*（在Windows上为*Ctrl* + *Shift* + *N*）来创建一个新的空游戏对象。这是在Unity中工作时您将经常要做的事情。
    |'
- en: '| **Component** | This submenu lets you add new components to your game objects.
    This is very important, because an empty game object does not do anything, and
    it is invisible. By adding components to it, you can change its appearance and
    behavior. We will talk about components in more detail in the next chapter. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| **Component** | 此子菜单允许您向您的游戏对象添加新的组件。这非常重要，因为空的游戏对象什么也不做，并且是不可见的。通过向其添加组件，您可以改变其外观和行为。我们将在下一章中更详细地讨论组件。
    |'
- en: '| **PlayMaker** | This submenu is not a default Unity submenu; it was added
    to the main menu by the Playmaker plugin that you imported from the Asset Store.
    This Playmaker-dedicated submenu lets you access Playmaker components and panels,
    such as the FSM view and its panel that allow you to choose new actions and transitions
    for your objects. We will look at Playmaker later on in this and the following
    chapters. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| **PlayMaker** | 此子菜单不是默认的Unity子菜单；它是通过从Asset Store导入的Playmaker插件添加到主菜单的。这个专门针对Playmaker的子菜单允许您访问Playmaker组件和面板，例如FSM视图及其面板，允许您为您的对象选择新的动作和转换。我们将在本章节和下一章节中稍后讨论Playmaker。
    |'
- en: '| **Window** | This submenu lets you open new panels and views, such as **Asset
    Store**, **Hierarchy**, and **Scene**. This submenu is useful if you have lost
    or accidentally closed one of your panels or views and want to find or open it
    again. It doesn''t allow you to open multiple instances of the same interface
    elements, so you will always find the existing panel if it is open already. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| **Window** | 此子菜单允许您打开新的面板和视图，例如**Asset Store**、**Hierarchy**和**Scene**。如果您不小心关闭了某个面板或视图，此子菜单非常有用，可以帮助您找到或重新打开它。它不允许您打开相同界面元素的多个实例，因此如果已打开现有面板，您将始终找到它。
    |'
- en: '| **Help** | This submenu allows you to access useful Unity reference resources,
    such as Unity Manual, Reference Material, and Scripting Reference. There are copies
    of these available on the web, but it is always a good idea to use the ones provided
    with your installation: this way you are making sure that the documentation you
    are using is consistent with your version of Unity, plus the local copy of the
    documentation always works faster. The **Help** submenu also provides shortcuts
    to Unity''s community sites, such as forum, answers, and feedback, and lets you
    report bugs and check for updates. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| **Help** | 此子菜单允许您访问有用的Unity参考资源，例如Unity手册、参考材料和脚本参考。这些资源在网上有副本，但始终使用与您的安装一致的副本是一个好主意：这样您可以确保您使用的文档与您的Unity版本一致，并且本地文档副本始终运行得更快。**Help**子菜单还提供Unity社区网站的快捷方式，例如论坛、答案和反馈，并允许您报告错误和检查更新。
    |'
- en: Now, below the main menu is the toolbar that includes (left to right) main controls
    for the **Scene** view, game execution controls, and drop-down boxes of layer
    filter and layout selection.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在主菜单下方是工具栏，包括（从左到右）**Scene**视图的主要控制、游戏执行控制和层过滤器及布局选择下拉框。 |
- en: '![Interface overview and main menu](img/8108OT_02_01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![界面概述和主菜单](img/8108OT_02_01.jpg)'
- en: Under the toolbar you will see the panel and the view tabs. We will look at
    them closer later in this chapter, but for now you just need to know that there
    is a distinction between views that include **Scene** and **Game** and panels
    that include **Hierarchy**, **Console**, **Project**, and **Inspector**. Panels
    and views can all be manipulated, resized, detached, and attached in the same
    way, but the difference between them is that views (as the name suggests) let
    you see your game scene in one way or another, while panels provide additional
    information and tools for game objects, the scene, or the project as a whole.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在工具栏下方，你会看到面板和视图标签。我们将在本章稍后更详细地介绍它们，但就目前而言，你需要知道的是，视图（如名称所示）以某种方式让你看到你的游戏场景，而面板则提供有关游戏对象、场景或整个项目的额外信息和工具。
- en: Tip
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Keep in mind that the distinction between views and panels is merely a helpful
    convention and by no means limits the functionality of a tab. This is especially
    true of custom tabs added by various plugins or, indeed, by yourself. In this
    book this distinction is made for convenience.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，视图和面板之间的区别仅仅是一个有用的约定，绝对不限制标签页的功能。这尤其适用于由各种插件或你自己添加的自定义标签页。在这本书中，这种区别是为了方便。
- en: The following figure shows what your Editor window is supposed to look like
    if you haven't moved any tabs around since [Chapter 1](ch01.html "Chapter 1. Getting
    Started with Unity and Playmaker"), *Getting Started with Unity and Playmaker*.
    We will be referring to this layout throughout this chapter, so if your layout
    differs, I suggest you change it to match the image. You can always go back to
    it later.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图显示了如果你从[第1章](ch01.html "第1章. 使用Unity和Playmaker入门")以来没有移动任何标签页，你的编辑器窗口应该看起来像什么。我们将在本章中参考这个布局，所以如果你的布局不同，我建议你将其更改为与图片匹配。你总是可以在以后回到它。
- en: '![Interface overview and main menu](img/8108OT_02_02.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![界面概述和主菜单](img/8108OT_02_02.jpg)'
- en: 'On the very bottom of the Unity Editor window there is a long empty gray line.
    This is the status bar: it shows the last thing displayed in the **Console** panel,
    and clicking on it reveals the **Console**, highlighting the last log message
    in it. The status bar, the main menu, and the toolbar are all permanent interface
    elements in Unity and, unlike the tabs, cannot be closed, detached, or resized
    without manipulating the Editor window itself.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity编辑器窗口的底部，有一条长长的空灰色线条。这是状态栏：它显示了**控制台**面板中最后显示的内容，点击它将显示**控制台**，突出显示其中的最后一条日志消息。状态栏、主菜单和工具栏都是Unity中的永久界面元素，与标签页不同，不能关闭、分离或调整大小，除非操作编辑器窗口本身。
- en: Hierarchy panel
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 层次结构面板
- en: A panel in Unity is a tab that provides information about or gives you additional
    control over a game object, a scene, or the project as a whole. Panels can be
    added, closed, detached, and attached at will. You can drag them around as you
    see fit in order to optimize your workflow. If you followed the instructions in
    [Chapter 1](ch01.html "Chapter 1. Getting Started with Unity and Playmaker"),
    *Getting Started with Unity and Playmaker*, your current layout should match that
    of the last screenshot in the previous section of this chapter.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity中，面板是一个提供有关游戏对象、场景或整个项目信息的标签页，或者为你提供额外的控制。面板可以随意添加、关闭、分离和连接。你可以根据需要拖动它们以优化你的工作流程。如果你遵循了[第1章](ch01.html
    "第1章. 使用Unity和Playmaker入门")中的说明，“使用Unity和Playmaker入门”，你的当前布局应该与本章前一部分的最后一张截图相匹配。
- en: To begin, let us look at the Hierarchy panel (you should have it attached on
    the left of the Editor window).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看层次结构面板（你应该在编辑器窗口的左侧将其连接上）。
- en: 'The place where you see the word **Hierarchy** written is the tab''s header.
    You can drag any tab by its header, be it a view or a panel. Any number of panels
    can be present in any position in the Editor, so sometimes you will have a situation
    when you have multiple tabs attached to the same area of the screen (as on the
    following figure):'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你看到写着**层次结构**这个词的地方是标签页的标题。你可以通过标题拖动任何标签页，无论是视图还是面板。编辑器中可以存在任意数量的面板，位于任意位置，所以有时你可能会遇到多个标签页附着在屏幕的同一区域（如下面的图所示）：
- en: '![Hierarchy panel](img/8108OT_02_03.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![层次结构面板](img/8108OT_02_03.jpg)'
- en: 'Let us try to reproduce this situation. Click the **Options** (![Hierarchy
    panel](img/8108OT_02_04.jpg)) button in the top-right corner of the Hierarchy
    panel. Then hover the **Add Tab** option from the drop-down list and, finally,
    click on **Hierarchy**. Now you should have two **Hierarchy** panels attached
    to the same side of the screen. Their headers should be next to each other: one
    of them active, and the other one inactive. The active panel is the one that has
    a lighter color.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试重现这种情况。点击层次结构面板右上角的**选项**按钮（![层次结构面板](img/8108OT_02_04.jpg)）。然后从下拉列表中悬停在**添加标签**选项上，最后点击**层次结构**。现在你应该有两个**层次结构**面板附着在屏幕的同一侧。它们的标题应该相邻：一个处于活动状态，另一个处于非活动状态。活动面板是颜色较浅的那个。
- en: The following figure shows the menu that allows you to add new tabs to a certain
    area of the screen; in this case it is on the right, in the same place where the
    **Hierarchy** panel is. Use it to add another **Hierarchy** panel.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了允许你向屏幕的某个区域添加新标签的菜单；在这种情况下，它位于右侧，与**层次结构**面板相同的地点。使用它来添加另一个**层次结构**面板。
- en: '![Hierarchy panel](img/8108OT_02_05.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![层次结构面板](img/8108OT_02_05.jpg)'
- en: 'Click on the inactive panel''s header to see its contents. At this point you
    should see that both panels look exactly the same: the only thing inside both
    is **Main Camera**. This is because both panels show the contents of the same
    scene. You can have as many **Hierarchy** panels as you want, but they will all
    show exactly the same thing. We don''t need two of them, so let us close one:
    right click on one of the Hierarchy tabs'' headers and choose **Close Tab** from
    the contextual menu that appears. Note that this is the same menu that appears
    when you click on the **Options** button in the top-right corner of the panel.
    This is just another way of doing the same thing.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 点击非活动面板的标题以查看其内容。此时你应该看到两个面板看起来完全相同：两个面板中唯一的内容是**主摄像机**。这是因为两个面板都显示了相同场景的内容。你可以有任意多的**层次结构**面板，但它们都会显示完全相同的内容。我们不需要两个，所以让我们关闭一个：在层次结构标签页的标题上右键单击，并从出现的上下文菜单中选择**关闭标签**。请注意，这与你在面板右上角点击**选项**按钮时出现的菜单相同。这只是做同样事情的一种方式。
- en: I have just mentioned something called scene and a scene's contents—but what
    does it mean? A project in Unity is composed of scenes; think of them as level
    files if you like, except apart from the actual game levels, scenes can contain
    things like intro cinematics, loading screens, game menus, or anything. This is
    just a convenient way of dividing your game into manageable chunks, and the **Hierarchy**
    panel reveals everything that is inside of the currently open scene. You can have
    only one scene open at any given moment, which is why no matter how many **Hierarchy**
    panels you open, they will all show the same exact thing. We will talk about scenes
    in more detail in the next chapter.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我刚刚提到了一个叫做场景和场景内容的东西——但这究竟是什么意思？Unity中的项目由场景组成；如果你喜欢，可以将其视为关卡文件，除了实际的游戏关卡之外，场景还可以包含如开场动画、加载界面、游戏菜单或任何内容。这只是将你的游戏划分为可管理的块的一种方便方式，而**层次结构**面板揭示了当前打开场景中的所有内容。在任何给定时刻，你只能打开一个场景，这就是为什么无论你打开多少**层次结构**面板，它们都会显示完全相同的内容。我们将在下一章中更详细地讨论场景。
- en: Another thing that you should notice is the **Create** button in the top-left
    corner of the panel just below the header. Click on it, and you will see the same
    menu that you would see if you navigated to **GameObject** | **Other** from the
    main menu. This menu allows you to create game objects that are added to the current
    scene when you click on their names in the list.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 另一件你应该注意的事情是面板顶部左角的**创建**按钮，它位于标题下方。点击它，你会看到与从主菜单导航到**游戏对象** | **其他**时相同的菜单。这个菜单允许你在列表中点击它们的名称时创建添加到当前场景的游戏对象。
- en: 'A game object in Unity is kind of a shell, a container that can be anything:
    a cube, a light, a camera, or a character. Go ahead and create a cube, a quad,
    and a directional light. We will use these in the following chapters to create
    a game.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unity中，游戏对象有点像是一个外壳，一个可以包含任何内容的容器：一个立方体、一盏灯、一个摄像机或一个角色。现在就创建一个立方体、一个四边形和一个方向性光源。我们将在接下来的章节中使用这些来创建一个游戏。
- en: Now that we have all these game objects, we want to position them in a certain
    way in the scene. To do this, we are going to use the Inspector panel, among other
    things.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了所有这些游戏对象，我们想在场景中以某种方式定位它们。为此，我们将使用检查器面板，以及其他一些工具。
- en: Inspector panel
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查器面板
- en: 'The main purpose of the **Inspector** panel is performing various actions on
    game objects, including changing their properties, such as appearance, behavior,
    position, size, and rotation. Select the **Cube** game object in the **Hierarchy**
    panel by clicking on it once. The appearance of the **Inspector** panel should
    now change to include a number of things displayed in the following screenshot:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**检查器**面板的主要目的是对游戏对象执行各种操作，包括更改它们的属性，例如外观、行为、位置、大小和旋转。在**层次结构**面板中通过单击一次选择**立方体**游戏对象。此时，**检查器**面板的外观应改变，以包含以下截图显示的多个项目：'
- en: '![Inspector panel](img/8108OT_02_07.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![检查器面板](img/8108OT_02_07.jpg)'
- en: The first thing that you should notice is the small padlock (![Inspector panel](img/8108OT_02_08.jpg))
    icon in the top-right corner of the panel next to the **Options** button. Unlike
    the **Hierarchy** panel, **Inspector** shows properties of an object rather than
    a scene, and, since you can have any number of game objects in your currently
    active scene at the same time, you can assign different inspectors to always focus
    on specific objects. Open a new **Inspector** tab by right-clicking the **Inspector**
    header and selecting **Add Tab** | **Inspector**. Both inspectors will be focused
    on the cube that you selected in **Hierarchy**. Click on the padlock icon in one
    of the inspectors. This will make this **Inspector** always display the properties
    of **Cube**, so, if you select **Quad** in **Hierarchy**, the locked (![Inspector
    panel](img/8108OT_02_09.jpg)) Inspector will continue showing the Cube's properties,
    while the other one will show **Quad**. You can verify this by clicking on the
    headers of the two **Inspector** panels that you have opened.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你首先应该注意到的是面板右上角靠近**选项**按钮的小锁图标 (![检查器面板](img/8108OT_02_08.jpg))。与**层次结构**面板不同，**检查器**显示的是对象的属性而不是场景，由于你可以在当前活动场景中同时拥有任意数量的游戏对象，因此你可以为不同的检查器分配不同的对象以始终关注特定的对象。通过右键单击**检查器**标题并选择**添加标签**
    | **检查器**来打开一个新的**检查器**标签。两个检查器都将聚焦于你在**层次结构**中选择的立方体。点击其中一个检查器中的锁图标。这将使此**检查器**始终显示**立方体**的属性，因此，如果你在**层次结构**中选择**四边形**，锁定的
    ![检查器面板](img/8108OT_02_09.jpg) **检查器**将继续显示立方体的属性，而另一个将显示**四边形**。你可以通过点击你打开的两个**检查器**面板的标题来验证这一点。
- en: Tip
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you want to expose the properties of two objects at the same time without
    having to click on the headers, you can detach one of the **Inspector** panels
    by clicking and dragging its header wherever you want that panel to be. This can
    be helpful if you want to copy components or properties from one object to another
    or if you want to keep one important object always on display.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在不需要点击标题的情况下同时暴露两个对象的属性，你可以通过点击并拖动其标题将其中的一个**检查器**面板分离到任何你想要放置该面板的位置。如果你想要从一个对象复制组件或属性到另一个对象，或者如果你想始终显示一个重要的对象，这可能会很有帮助。
- en: Make sure you are comfortable with the idea of having multiple inspectors and
    the fact that they correspond to the selected game object. Also note that an **Inspector**
    panel can expose properties of multiple game objects at the same time. You can
    select multiple game objects in the **Hierarchy** panel by pressing and holding
    *command* (*Ctrl* in Windows). You can also press *Shift* and select a range of
    game objects. These operations are similar to those you would perform in Finder
    (or Windows Explorer). Try doing this a few times until you are comfortable performing
    these actions in the **Hierarchy** panel and always take note of how the contents
    of the unlocked **Inspector** panel change based on the game objects that you
    select. Once you feel like you have experimented enough, close the locked **Inspector**
    by right-clicking its header and selecting **Close Tab** from the contextual menu.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你对拥有多个检查器以及它们与所选游戏对象相对应的概念感到舒适。此外，请注意，**检查器**面板可以同时暴露多个游戏对象的属性。你可以在**层次结构**面板中通过按住*command*
    (*Ctrl* 在 Windows 中)来选择多个游戏对象。你也可以按住*Shift*并选择一系列游戏对象。这些操作与你在Finder（或Windows资源管理器）中执行的操作类似。尝试多次这样做，直到你能够在**层次结构**面板中舒适地执行这些操作，并始终注意未锁定**检查器**面板的内容如何根据你选择的游戏对象而变化。一旦你觉得你已经试验得足够多了，可以通过右键单击其标题并从上下文菜单中选择**关闭标签**来关闭锁定的检查器。
- en: Just below the header in the **Inspector** panel is the name of the selected
    game object. You can change it however you want. For now, let us rename our **Cube**
    `Wall`. Make sure that you have **Cube** selected in **Hierarchy** and that its
    properties are displayed in the **Inspector** panel. Click within the text field
    where you see **Cube** written at the moment, delete everything, and type `Wall`,
    then press *return* (*Enter*). You will notice that the name has changed in the
    **Hierarchy** panel as well.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在**检查器**面板的标题下方是所选游戏对象的名字。你可以随意更改它。现在，让我们将我们的**立方体**重命名为`Wall`。确保你在**层次结构**面板中选中了**立方体**，并且其属性显示在**检查器**面板中。点击当前显示为**立方体**的文本字段，删除所有内容，输入`Wall`，然后按*回车*（*Enter*）。你会注意到**层次结构**面板中的名字也发生了变化。
- en: Below the name field there is a long section with various components separated
    by black horizontal lines. A default cube (now called **Wall**) has **Transform**,
    **Mesh Filter**, **Box Collider,** and **Mesh Renderer** components. We will closely
    examine the components in the next chapter. For now you should focus on the Transform
    component (shown in the following image along with the **Inspector** panel header),
    which is the only component that every game object in Unity has.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在名称字段下方是一个长条部分，其中包含各种组件，由黑色水平线分隔。默认的立方体（现在称为**Wall**）具有**变换**、**网格过滤器**、**盒子碰撞器**和**网格渲染器**组件。我们将在下一章中详细检查这些组件。现在你应该专注于变换组件（如下图中所示，包括**检查器**面板的标题），这是Unity中每个游戏对象都拥有的唯一组件。
- en: '![Inspector panel](img/8108OT_02_10.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![检查器面板](img/8108OT_02_10.jpg)'
- en: 'Transform defines position, rotation, and scale of a game object in 3D space.
    These are all its properties. Set the position of **Wall** to (`0`, `0.5`, `0`)
    by clicking in the **X**, **Y**, and **Z** fields, deleting everything in there,
    entering the value you want instead, and pressing *return* (*Enter*) on your keyboard.
    You have just changed the position property of the **Transform** component of
    the **Wall** game object. The next chapter will examine properties and components
    more closely. For now just set the positions and rotations of the game objects
    you have in the scene to the following values:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 变换定义了游戏对象在3D空间中的位置、旋转和缩放。这些都是它的属性。通过点击**X**、**Y**和**Z**字段，删除其中的所有内容，输入你想要的值，然后在键盘上按*回车*（*Enter*）来设置**Wall**的位置为（`0`，`0.5`，`0`）。你刚刚改变了**Wall**游戏对象的变换组件的位置属性。下一章将更详细地检查属性和组件。现在只需将场景中游戏对象的位置和旋转设置为以下值：
- en: '| Name | Position | Rotation |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 位置 | 旋转 |'
- en: '| --- | --- | --- |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Directional light | 0, 0, 0 | 50, -30, 0 |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 方向光 | 0, 0, 0 | 50, -30, 0 |'
- en: '| Main Camera | 0, 10, 0 | 90, 0, 0 |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| 主相机 | 0, 10, 0 | 90, 0, 0 |'
- en: '| Quad | 0, 0, 0 | 90, 0, 0 |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 四元数 | 0, 0, 0 | 90, 0, 0 |'
- en: '| Wall | 0, 0.5, 0 | 0, 0, 0 |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| Wall | 0, 0.5, 0 | 0, 0, 0 |'
- en: For now, we will leave the **Scale** property of all the objects at its default
    value (`1`, `1`, `1`).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们将所有对象的**缩放**属性保留为其默认值（`1`，`1`，`1`）。
- en: Now that you have modified your scene, you might want to save it. Press *command*
    + *S* (*Ctrl* + *S* in Windows). A dialog window should appear asking you where
    you would like to save your scene. By default it should offer to save it in the
    `Assets` folder. Name your scene `Scene1` and click on **Save**. The following
    screenshot shows the path where the scene file should be saved. Note that you
    cannot save the scene outside of the `Assets` folder. If you try, an error message
    will pop-up warning you about it.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经修改了场景，你可能想保存它。按*command* + *S*（在Windows中为*Ctrl* + *S*）。应该会出现一个对话框窗口，询问你想要将场景保存到何处。默认情况下，它应该建议在`Assets`文件夹中保存。将场景命名为`Scene1`并点击**保存**。以下截图显示了场景文件应该保存的路径。请注意，你不能在`Assets`文件夹之外保存场景。如果你尝试这样做，将会弹出一个错误消息警告你。
- en: '![Inspector panel](img/8108OT_02_11.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![检查器面板](img/8108OT_02_11.jpg)'
- en: Project panel
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目面板
- en: 'Have a look at the **Project** panel: you should have four folders and a file
    called `Scene1` displayed there. The **Project** panel is your project''s file
    browser, similar to Mac OSX Finder or Windows Explorer, but it only shows files
    and folders that are situated inside the `Assets` folder of your project.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 看一下**项目**面板：你应该看到四个文件夹和一个名为`Scene1`的文件。**项目**面板是你的项目文件浏览器，类似于Mac OSX Finder或Windows资源管理器，但它只显示位于项目`Assets`文件夹中的文件和文件夹。
- en: Unlike **Hierarchy** and **Inspector**, **Project** (see the following screenshot)
    always displays the same thing as long as you have the same Unity project open.
    All of the scene files, scripts, and art assets are shown and can be manipulated
    from here. Using the icons to the right of the search field, you can filter the
    things displayed in the **Project** panel either by tag or by type.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 与**层次结构**和**检查员**不同，**项目**（见以下截图）只要您打开了相同的Unity项目，就始终显示相同的内容。所有场景文件、脚本和艺术资产都会显示出来，并且可以从这里进行操作。使用搜索框右侧的图标，您可以通过标签或类型对**项目**面板中显示的内容进行筛选。
- en: '![Project panel](img/8108OT_02_12.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![项目面板](img/8108OT_02_12.jpg)'
- en: It is generally a good practice to keep your project's file structure well-organized,
    as it helps to increase productivity and save time looking for files. To organize
    your assets, you can put things inside folders with clear names, such as `Artwork`,
    `Scripts`, or `Music`. To begin with, let us try to organize what we have in our
    **Project** panel already.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 通常来说，保持项目文件结构井然有序是一个好习惯，因为它有助于提高生产力和节省查找文件的时间。为了组织您的资产，您可以将事物放入具有清晰名称的文件夹中，例如`Artwork`、`Scripts`或`Music`。首先，让我们尝试整理一下**项目**面板中已有的内容。
- en: Click on the **Create** button in the top-left corner of the panel; this should
    reveal a menu that allows you to create different types of assets. This is the
    same menu you get by going to **Assets** | **Create** in the main menu.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 点击面板左上角的**创建**按钮；这将显示一个菜单，允许您创建不同类型的资产。这是您在主菜单中转到**资产** | **创建**时得到的相同菜单。
- en: Tip
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The third way to access the **Assets** menu is right-clicking anywhere in the
    empty area below the list of files in the **Project** panel and clicking on **Create**
    in the contextual menu that appears.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 访问**资产**菜单的第三种方式是在**项目**面板文件列表下方的空白区域右键单击，然后在出现的上下文菜单中点击**创建**。
- en: Create a folder called `Scenes`. In order to rename a folder if you forgot to
    enter a name when the folder was just created, press *return* (or *F2* if you
    are using Windows). Once you have it named appropriately, click and drag the `Scene1`
    file and drop it into the `Scenes` folder. From now on, we will save all of the
    scenes into that folder instead of the `Assets` root. This way, they will be easier
    to find when we want to open a specific scene.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为`Scenes`的文件夹。如果您在创建文件夹时忘记输入名称，可以按*return*（或在Windows中使用*F2*）。一旦您给它起了合适的名字，点击并拖动`Scene1`文件，将其放入`Scenes`文件夹中。从现在起，我们将把所有场景保存到该文件夹中，而不是`Assets`根目录。这样，当我们想要打开特定场景时，它们将更容易找到。
- en: Views
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 视图
- en: 'Now that the Project panel is well-organized and your objects are positioned
    in the scene, it is time to have a look at the view tabs: **Game** and **Scene**.
    The former shows the output of all the cameras, while the latter is your main
    workspace in Unity. This is where the level design is done. The **Game** view
    becomes interactive when you click on the play button in the toolbar (![Views](img/8108OT_02_13.jpg))
    or use the hotkey *command* + *P* (or *Ctrl* + *P* in Windows), provided there
    is some kind of input defined in Playmaker or other components. You can also pause
    (![Views](img/8108OT_02_14.jpg)) the game by pressing *command* + *Shift* + *P*
    (*Ctrl* + *Shift* + *P* in Windows). This is how you will test your game later.
    Right now there are no interactions yet, but we will get to that soon enough.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在项目面板已经井然有序，并且您的对象已经在场景中定位，是时候看看视图选项卡了：**游戏**和**场景**。前者显示所有摄像机的输出，而后者是Unity中的主要工作区。这是进行关卡设计的地方。当您在工具栏中点击播放按钮（![视图](img/8108OT_02_13.jpg)）或使用快捷键*command*
    + *P*（或在Windows中为*Ctrl* + *P*）时，**游戏**视图会变得交互式，前提是在Playmaker或其他组件中定义了某种类型的输入。您还可以通过按*command*
    + *Shift* + *P*（在Windows中为*Ctrl* + *Shift* + *P*）来暂停游戏。这就是您稍后测试游戏的方式。目前还没有交互，但我们很快就会达到那个阶段。
- en: Activate the **Scene** view by clicking on its header if it is not active right
    now. In the **Hierarchy** panel, select **Wall** and press *F*. This will focus
    the **Scene** view on **Wall**. You should be seeing the cube that you created,
    with a **Quad** and **Directional light** gizmo below it (it looks like a little
    sun). A **gizmo** is generally a 2D element in 3D space that lets you select and/or
    manipulate objects even if they are not represented in any other way in the scene.
    A gizmo can also be non-interactive, such as a simple line or a wire cube. These
    are generally used to reveal position or direction of something otherwise invisible.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果当前没有激活，请点击**场景**视图的标题来激活它。在**层次**面板中，选择**墙**并按*F*。这将使**场景**视图聚焦于**墙**。你应该能看到你创建的立方体，其下方有一个**四边形**和**方向光**工具（看起来像一个小太阳）。**工具**通常是3D空间中的一个2D元素，允许你选择和/或操作对象，即使它们在场景中未以其他方式表示。工具也可以是非交互式的，例如一条简单的线或一个线框立方体。这些通常用于揭示某些不可见事物的位置或方向。
- en: '![Views](img/8108OT_02_15.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![视图](img/8108OT_02_15.jpg)'
- en: Selecting an object and pressing *F* is one way to navigate the 3D space. Another
    way is using your mouse. You can select different objects directly in the **Scene**
    view by clicking on their meshes (3D models) or gizmos. To look around, press
    and hold the right mouse button while moving your mouse in the **Scene** view.
    Zoom in and out by using your scroll wheel. Use middle click to drag the view
    around. You can also rotate around a point by pressing and holding *Alt* and clicking
    the left mouse button and moving your mouse around.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 选择一个对象并按*F*是导航3D空间的一种方法。另一种方法是使用鼠标。你可以在**场景**视图中直接通过点击它们的网格（3D模型）或工具来选择不同的对象。要环顾四周，请按住鼠标右键并在**场景**视图中移动鼠标。使用滚轮进行缩放。使用中间点击来拖动视图。你还可以通过按住*Alt*并点击左鼠标按钮并移动鼠标来围绕一个点旋转。
- en: 'Click on the **Directional light** gizmo and press *W* or ![Views](img/8108OT_02_16.jpg)
    in the toolbar. You should see three arrows appear: red, green, and blue. These
    arrows correspond to the X, Y, and Z axes in 3D space, respectively. Clicking
    and dragging one of the arrows will move the object in space. Move **Directional
    light** anywhere you want: its position does not matter. What does matter, however,
    is its rotation.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**方向光**工具并按*W*或工具栏中的![视图](img/8108OT_02_16.jpg)。你应该会看到三个箭头出现：红色、绿色和蓝色。这些箭头分别对应于3D空间中的X、Y和Z轴。点击并拖动其中一个箭头将移动对象在空间中的位置。将**方向光**移动到任何你想要的位置：其位置并不重要。然而，重要的是它的旋转。
- en: 'Press *E* or ![Views](img/8108OT_02_17.jpg) in the toolbar. A sphere with colored
    and white circles will appear around the object. Each colored circle is responsible
    for the object''s rotation around one axis. Once again: red for X, green for Y
    and blue for Z. When you select your light, you should also see yellow rays coming
    out of it. This is a gizmo that shows in what direction your **Directional light**
    is lighting the scene. Rotate **Directional light** in such a way that **Wall**
    and **Quad** appear well-lit, almost white in the **Game** view. Do not forget
    that you can switch between the **Game** and **Scene** views at any moment to
    see a preview of what you will see in the game.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在工具栏中按*E*或![视图](img/8108OT_02_17.jpg)。一个带有彩色和白色圆圈的球体将出现在对象周围。每个彩色圆圈负责对象围绕一个轴的旋转。再次强调：红色对应X轴，绿色对应Y轴，蓝色对应Z轴。当你选择你的光源时，你也应该看到从它发出的黄色光线。这是一个工具，显示了你的**方向光**在场景中照明的方向。将**方向光**旋转，使**墙**和**四边形**在**游戏**视图中看起来被很好地照亮，几乎呈白色。不要忘记，你可以在任何时刻在**游戏**视图和**场景**视图之间切换，以查看游戏中的预览。
- en: 'You can also switch between the ways your rotation, position, and scale gizmos
    appear by clicking the **Global**/**Local** toggle button in the toolbar. The
    **Pivot**/**Center** toggle button determines where it appears: in the pivot point
    of the object or in its geometric center.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过点击工具栏中的**全局**/**局部**切换按钮在旋转、位置和缩放工具的显示方式之间切换。**枢轴**/**中心**切换按钮确定其出现的位置：在对象的枢轴点或其几何中心。
- en: 'Once you are happy with the light, select the **Quad** object and press *R*
    or ![Views](img/8108OT_02_18.jpg) in the toolbar. This is the scale manipulation
    mode. If you press *F* to focus on **Quad**, you will see a gizmo similar to that
    of the movement manipulator, but with little colored cubes instead of arrows on
    the ends of each line. As before, colors correspond to axes: red for X, green
    for Y, and blue for Z. There is also a white cube in the middle, which is the
    uniform scale manipulator that allows you to change scale on all three axes at
    the same time.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你对灯光满意，选择 **Quad** 对象并按 *R* 或 ![视图](img/8108OT_02_18.jpg) 在工具栏中。这是缩放操作模式。如果你按
    *F* 来聚焦于 **Quad**，你会看到一个类似运动操作器的 Gizmo，但每条线的末端是彩色的小方块而不是箭头。和之前一样，颜色对应于轴：红色代表 X
    轴，绿色代表 Y 轴，蓝色代表 Z 轴。中间还有一个白色的方块，这是统一缩放操作器，允许你同时改变三个轴的缩放。
- en: Using this gizmo, scale **Quad** to be about `100` on the X and Y axes. Its
    Z scale should stay the same. You can check the current values of position, rotation,
    and scale in the **Transform** component in the **Inspector** panel when you have
    an object selected.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个 Gizmo，将 **Quad** 在 X 和 Y 轴上的缩放调整为大约 `100`。它的 Z 轴缩放应保持不变。当你选择一个对象时，你可以在
    **Inspector** 面板的 **Transform** 组件中检查位置、旋转和缩放当前值。
- en: Save your scene by pressing *command* + *S* (*Ctrl* + *S* in Windows).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 通过按 *command* + *S* （在 Windows 中为 *Ctrl* + *S*）保存你的场景。
- en: Playmaker interface
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Playmaker 界面
- en: It is time to finally take a look at Playmaker. In the main menu, go to **PlayMaker**
    | **PlayMaker Editor**. A welcome window with different Playmaker options and
    a **playMaker** panel should appear. Close the welcome window, then attach the
    **playMaker** panel to the same region of the Editor where you have your **Console**
    panel as shown in the following screenshot (this should be just below the **Scene**
    and **Game** views if you haven't changed anything since [Chapter 1](ch01.html
    "Chapter 1. Getting Started with Unity and Playmaker"), *Getting Started with
    Unity and Playmaker*).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候最终看看 Playmaker 了。在主菜单中，转到 **PlayMaker** | **PlayMaker 编辑器**。应该会出现一个带有不同 Playmaker
    选项和 **playMaker** 面板的欢迎窗口。关闭欢迎窗口，然后将 **playMaker** 面板附加到与你的 **Console** 面板相同的区域，如以下截图所示（如果你自
    [第 1 章](ch01.html "第 1 章. 使用 Unity 和 Playmaker 入门") 以来没有更改任何内容，这应该在 **Scene**
    和 **Game** 视图下方）。
- en: '![Playmaker interface](img/8108OT_02_19.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![Playmaker 界面](img/8108OT_02_19.jpg)'
- en: The darker area on the left is the FSM view.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧较暗的区域是 FSM 视图。
- en: Tip
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Keep in mind that the FSM view is called Playmaker Editor in the official Playmaker
    documentation. In this book we will use a clearer name, *FSM view*, to distinguish
    between different areas of the **playMaker** panel.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，FSM 视图在官方 Playmaker 文档中被称为 Playmaker 编辑器。在这本书中，我们将使用一个更清晰的名字，*FSM 视图*，来区分
    **playMaker** 面板的不同区域。
- en: 'It is here that you will edit your finite state machines and create state nodes
    and transitions between them, which we will talk about in more detail in the next
    chapter. For now, follow the instructions given in the lower-right corner of the
    FSM view:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这里你可以编辑你的有限状态机并创建状态节点以及它们之间的转换，我们将在下一章中更详细地讨论。现在，请按照 FSM 视图右下角的说明操作：
- en: Select the **Wall** game object in the **Hierarchy** panel or in the **Scene**
    view by clicking on it.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **Hierarchy** 面板或 **Scene** 视图中通过点击来选择 **Wall** 游戏对象。
- en: Right-click anywhere in the FSM view and select **Add FSM** from the contextual
    menu that appears to add a finite state machine to the **Wall** game object. When
    you do that, note the red icon that appears next to **Wall** in the **Hierarchy**
    panel. This icon means that the object has a Playmaker FSM component. Also note
    the Playmaker FSM component that appeared in the **Inspector** panel.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 FSM 视图的任何位置右键单击，并从出现的上下文菜单中选择 **Add FSM** 以将有限状态机添加到 **Wall** 游戏对象。当你这样做时，注意
    **Hierarchy** 面板中 **Wall** 旁边出现的红色图标。这个图标表示该对象具有 Playmaker FSM 组件。还要注意在 **Inspector**
    面板中出现的 Playmaker FSM 组件。
- en: Now you can manipulate FSM to assign various behaviors to **Wall**. Read all
    the tips displayed in the **playMaker** panel carefully.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以操作 FSM 来为 **Wall** 分配各种行为。仔细阅读 **playMaker** 面板中显示的所有提示。
- en: Tip
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: To take a better look at any one of the tabs, including the **playMaker** panel,
    press the *Space* key with your mouse cursor hovering over the tab. Then press
    space again to minimize. You can do this with any view or panel in the Unity Editor.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 要更好地查看任何选项卡，包括 **playMaker** 面板，请将鼠标光标悬停在选项卡上并按 *Space* 键。然后再次按空格键以最小化。你可以在
    Unity 编辑器的任何视图或面板中这样做。
- en: On the right side of the **playMaker** panel, there are tabs that display and
    let you modify different information types, including the FSM as a whole, as well
    as its states, events, and variables. Click on each tab and examine the tips in
    grey rectangles explaining the contents of each tab. Once you are done with the
    tips, you can press the **Hint** toggle button on the bottom of the panel to disable
    them. You can also do this by pressing *F1*. Before you do that, click on the
    **Preferences** button next to it and read the tips there. We will examine the
    necessary changes to the Playmaker preferences in the next chapter.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在**playMaker**面板的右侧，有一些标签页，用于显示和修改不同类型的信息，包括整个FSM以及其状态、事件和变量。点击每个标签页，检查灰色矩形中的提示，解释每个标签页的内容。完成提示后，你可以按面板底部的**提示**切换按钮来禁用它们。你也可以通过按*F1*来实现这一点。在这样做之前，点击旁边的**首选项**按钮并阅读那里的提示。我们将在下一章中检查对Playmaker首选项的必要更改。
- en: Under the FSM view you should see controls similar to pause/play in the toolbar.
    These are, in fact, the same buttons, and are there just to make it more convenient
    for you to control the game when you are working with Playmaker.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在FSM视图中，你应该看到与工具栏中的暂停/播放类似的控件。实际上，这些是相同的按钮，它们的存在只是为了在你使用Playmaker时，使控制游戏更加方便。
- en: 'The second most important Playmaker-related panel is the **Action Browser**.
    You can open it by selecting **PlayMaker** | **Editor Window** | **Action Browser**
    from the main menu. A part of the **Actions** panel is shown in the following
    screenshot:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个最重要的与Playmaker相关的面板是**动作浏览器**。你可以通过从主菜单中选择**Playmaker** | **编辑器窗口** | **动作浏览器**来打开它。以下截图显示了**动作**面板的一部分：
- en: '![Playmaker interface](img/8108OT_02_20.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![Playmaker界面](img/8108OT_02_20.jpg)'
- en: Drag it by its header to the right side of the Editor until it snaps into the
    same area of the screen as **Inspector**. This panel shows categories of actions
    that you have in your Playmaker library. Clicking on one of the categories, for
    example, **Camera,** will reveal the actions. There is also a search bar near
    the top of the panel that allows you to access the actions you need faster. When
    you select an action, for example, **Camera** | **Screen To World Point**, a preview
    of its parameters appears on the bottom of the panel. It shows what the selected
    action will look like in the **State** tab of the **playMaker** panel. If you
    have a Playmaker-enabled object and a state in the FSM view selected, you can
    add an action to it by clicking the **Add Action To State** button in the bottom-right
    corner of the **Actions** panel.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 通过其标题将其拖动到编辑器的右侧，直到它与**检查器**的同一区域对齐。此面板显示了你在Playmaker库中的动作类别。点击其中一个类别，例如，**相机**，将显示相应的动作。面板顶部附近还有一个搜索栏，允许你更快地访问所需的动作。当你选择一个动作，例如，**相机**
    | **屏幕到世界点**，其参数的预览将出现在面板底部。它显示了所选动作在**playMaker**面板的**状态**选项卡中的外观。如果你有一个启用了Playmaker的对象，并在FSM视图中选择了状态，你可以通过点击**动作**面板右下角的**添加动作到状态**按钮，向其添加动作。
- en: You can press the play button (or use the shortcut *command* + *P* or *Ctrl*
    + *P* Windows) to see that there are no errors and everything is working properly.
    When you are done, press play again and save the scene.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以按播放按钮（或使用快捷键*command* + *P*或*Ctrl* + *P* Windows）来查看是否存在错误，并且一切是否正常工作。完成后，再次按播放并保存场景。
- en: Summary
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you examined some of the main interface elements in Unity and
    Playmaker, added some objects to the scene and manipulated those objects. You
    also looked at game objects and components and learned about properties of components.
    These subjects will be examined in more detail in the next chapter. The scene
    that you created in this chapter lays a foundation for creating a game, and all
    objects that you have created and manipulated so far are going to be used in the
    final game.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你检查了Unity和Playmaker的一些主要界面元素，向场景中添加了一些对象，并操作了这些对象。你还查看了游戏对象和组件，并学习了组件的属性。这些主题将在下一章中更详细地探讨。本章中创建的场景为创建游戏奠定了基础，你迄今为止创建并操作的所有对象都将在最终游戏中使用。
