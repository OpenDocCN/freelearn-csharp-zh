- en: Virtual Reality and Extra Features
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 虚拟现实和额外功能
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Saving screenshots from the game
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从游戏中保存截图
- en: Saving and loading player data – using static properties
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用静态属性保存和加载玩家数据
- en: Saving and loading player data – using PlayerPrefs
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用PlayerPrefs保存和加载玩家数据
- en: Loading game data from a text file map
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从文本文件地图加载游戏数据
- en: UI Slider to change game quality settings
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UI滑块更改游戏质量设置
- en: Pausing the game
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 暂停游戏
- en: Implementing slow motion
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现慢动作
- en: Gizmo to show the currently selected object in the scene panel
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gizmo显示场景面板中当前选定的对象
- en: Editor snap-to grid drawn by Gizmo
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gizmo绘制的编辑器网格对齐
- en: Creating a VR project
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建VR项目
- en: Adding 360-degree videos to a VR project
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将360度视频添加到VR项目中
- en: Editing VR content inside a VR environment – the XR Editor
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在VR环境中编辑VR内容 – XR编辑器
- en: Introduction
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: There are too many features in Unity 2018 to all be covered in a single book.
    In this chapter, we will present a set of recipes illustrating VR game development
    in Unity, plus a range of additional Unity features that we wanted to include.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 2018的功能太多，无法在单本书中全部涵盖。在本章中，我们将展示一系列食谱，展示Unity中的VR游戏开发，以及我们希望包含的一系列其他Unity功能。
- en: The Big picture
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 整体概念
- en: Apart from plain text, there are three sections below will give you an idea
    of what this chapter is about.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 除了纯文本外，以下三个部分将为您提供一个关于本章内容的想法。
- en: Virtual reality
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 虚拟现实
- en: VR is about presenting to the player an immersive audio-visual experience, engaging
    enough for them to lose themselves in exploring and interacting with the game
    world that has been created.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: VR是向玩家呈现沉浸式的视听体验，足够吸引他们沉浸于探索和与创建的游戏世界互动。
- en: From one point of view, VR simply requires two cameras in order to generate
    the images for each eye to give that 3D effect. But effective VR needs content,
    UI controls, and tools to help create them. In this chapter, we will explore recipes
    that work with 360-degree videos, and Unity's XR Editor toolset.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个角度来看，VR只需要两个摄像头来为每只眼睛生成图像，以产生3D效果。但有效的VR需要内容、UI控件和工具来帮助创建它们。在本章中，我们将探讨与360度视频和Unity的XR编辑器工具集一起工作的食谱。
- en: Gizmos
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Gizmos
- en: Gizmos are another kind of Unity editor customization. Gizmos are visual aids
    for game designers that are provided in the scene panel. They can be useful as
    setup aids (to help us know what we are doing), or for debugging (understanding
    why objects aren't behaving as expected).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Gizmos是另一种Unity编辑器自定义。Gizmos是游戏设计师在场景面板中提供的视觉辅助工具。它们可以用作设置辅助（帮助我们了解我们在做什么），或者用于调试（理解为什么对象没有按预期表现）。
- en: 'Gizmos are not drawn through Editor scripts, but as part of Monobehaviours,
    so they only work for GameObjects in the current scene. Gizmo drawing is usually
    performed in two methods:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Gizmos不是通过编辑器脚本绘制的，而是作为Monobehaviours的一部分，因此它们仅适用于当前场景中的GameObject。Gizmo绘制通常通过两种方法进行：
- en: '`OnDrawGizmos()`: This is executed every frame, for every GameObject in the
    hierarchy'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OnDrawGizmos()`: 这在每个帧上执行，针对层次结构中的每个GameObject'
- en: '`OnDrawGizmosSelect()`: This is executed every frame, for just the/those GameObject(s)
    that are currently selected in the hierarchy'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OnDrawGizmosSelect()`: 这在每个帧上执行，仅针对当前在层次结构中选定的GameObject'
- en: Gizmo graphical drawing makes it simple to draw lines, cubes, and spheres. More
    complex shapes can also be drawn with meshes, and you can also display 2D image
    icons (located in the Project folder: `Assets` | `Gizmos`).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Gizmo图形绘制使得绘制线条、立方体和球体变得简单。更复杂的形状也可以使用网格绘制，您还可以显示位于项目文件夹中的2D图像图标（位于：`Assets`
    | `Gizmos`）。
- en: Several recipes in this chapter illustrate how Gizmos can be useful. Often,
    new GameObjects created from Editor Extensions will have helpful Gizmos associated
    with them.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的一些食谱展示了Gizmos如何有用。通常，从编辑器扩展创建的新GameObject将关联有有用的Gizmos。
- en: Saving/Loading data at runtime
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行时保存/加载数据
- en: When loading/saving data either locally, it is important to keep in mind the
    data types that can be used. When writing C# code, our variables can be of any
    type permitted by the language, but when communicated by the web interface, or
    to a local storage using Unity's **PlayerPrefs** class, we are restricted in the
    types of data that we can work with. When using the **PlayerPrefs** class, we
    are limited to saving and loading integers, floats, and strings. We provide several
    recipes illustrating ways to save and load data at Run-Time, including the use
    of static variables, PlayerPrefs, and a public TextAsset containing text-format
    data for a 2D game level.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Saving screenshots from the game
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we will learn how to take in-game snapshots, and save them in
    an external file. Better yet, we will make it possible to choose between three
    different methods.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: 'This technique only works in the Unity Editor, or when you build to a **standalone** Windows
    or Mac executable (it will not work for Web Player builds, for example):'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c7a5b736-647a-4670-b147-d9761244cf2e.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
- en: Getting ready
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To follow this recipe, please import the screenshots package, which is available
    in the `16_01` folder, to your project. The package includes a main camera, cube,
    and sphere—something to be able to recognize when the screenshot is taken!
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To save the screenshots from your game, follow these steps:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: Create a new 3D project.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Import the screenshots package by choosing the following menu: `**Assets | Import
    Package | Custom Package**...`
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the scene provided in the screenshots package.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a C# `CaptureScreenshot` script class and add an instance object as
    a component to the Main Camera:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: With the Main Camera selected in the Hierarchy, in the Inspector access the CaptureScreenshot
    (Scripted) component. Set Capture Method as `SCREENSHOT_PNG`. Change Screenshot
    Scale to `2`.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you want your image file''s name to start with something other than the
    word Screenshot, then change it in the Prefix field:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c6583298-da92-4e8c-8f3c-f324ec43468d.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
- en: Play the scene. A new screenshot with twice the original size will be saved
    in your project folder every time you press *P*.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For each frame the `Update()` methods tests whether the *P* key has been pressed.
    If pressed, the `TakeShot()` method is invoked.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: Method `TakeShot()` captures an image of the screen is and stores the image
    as a file in the main Unity project directory (that is, alongside the Assets and Library directories,
    and so on). The public settings of the CaptureScreenshot (Scripted) of MainCamera determine
    the properties of the image file created by the project.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: 'The three types of screenshot image are defined as an enumerated type:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '`SCREENSHOT_PNG`: built-in Unity function `CaptureScreenshot()`. This is capable
    of scaling the original screen size, which can be set by our Capture Scale public
    property.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`READ_PIXELS_PNG`: `ReadPixels()` function used, encoded to PNG.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`READ_PIXELS_JPG`: `ReadPixels()` function used, encoded to JPG.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`READ_PIXELS_JPG`：使用`ReadPixels()`函数，编码为JPG。'
- en: The image data captured by the ReadPixels function is written to file by the
    built-in Unity function `WriteAllBytes()` in our `WriteBytesToFile(...)` method.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 通过内置的Unity函数`WriteAllBytes()`在`WriteBytesToFile(...)`方法中将ReadPixels函数捕获的图像数据写入文件。
- en: In all cases, the file created will have the appropriate *.png* or *.jpg* file
    extension, to match its image file format.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有情况下，创建的文件都将具有适当的`*.png`或`*.jpg`文件扩展名，以匹配其图像文件格式。
- en: There's more...
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多内容...
- en: We have included the options using the `ReadPixel` function as a demonstration
    of how to save your images to a disk without using Unity's `CaptureScreenshot()` function.
    One advantage of this method is that it can be adapted to capture and save only
    a portion of the screen—if a different-sized rectangle is defined.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`ReadPixel`函数展示了如何在不使用Unity的`CaptureScreenshot()`函数的情况下将图像保存到磁盘。这种方法的一个优点是它可以适应只捕获和保存屏幕的一部分——如果定义了一个不同大小的矩形。
- en: Saving and loading player data – using static properties
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存和加载玩家数据——使用静态属性
- en: Keeping track of the player's progress and user settings during a game is vital
    to give your game a greater feeling of depth and content. In this recipe, we will
    learn how to make our game remember the player's score between the different levels
    (scenes).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在游戏中跟踪玩家的进度和用户设置对于给游戏带来更深的感受和内容至关重要。在这个食谱中，我们将学习如何使我们的游戏记住玩家在不同级别（场景）之间的得分。
- en: Getting ready
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: We have included a complete project in a Unity package named game_HigherOrLower in
    the `16_02` folder. To follow this recipe, we will import this package as the
    starting point.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在`16_02`文件夹中包含了一个名为`game_HigherOrLower`的完整Unity项目包。为了遵循这个食谱，我们将导入这个包作为起点。
- en: How to do it...
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To save and load player data, follow these steps:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 要保存和加载玩家数据，请按照以下步骤操作：
- en: Create a new 2D project and import the game_HigherOrLower package.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的2D项目并导入`game_HigherOrLower`包。
- en: Add each of the scenes to the build in the sequence (scene0_mainMenu, then scene1_gamePlaying,
    and so on).
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将每个场景按顺序添加到构建中（scene0_mainMenu，然后scene1_gamePlaying，依此类推）。
- en: Make yourself familiar with the game by playing it a few times and examining
    the content of the scenes. The game starts on the scene0_mainMenu scene, inside
    the `Scenes` folder.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过玩几次游戏并检查场景内容来熟悉游戏。游戏从`scene0_mainMenu`场景开始，位于`Scenes`文件夹内。
- en: 'Let''s create a class to store the number of correct and incorrect guesses
    made by the user. Create a new C# script called `Player` with the following code:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个类来存储用户做出的正确和错误猜测的数量。创建一个名为`Player`的新C#脚本，代码如下：
- en: '[PRE1]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the lower-left corner of the scene0_mainMenu scene, create a UI Text GameObject named Text -
    score, containing the placeholder text Score: 99 / 99:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在场景`scene0_mainMenu`的左下角，创建一个名为`Text - score`的UI Text GameObject，包含占位文本`Score:
    99 / 99`：'
- en: '![](img/d166200b-9a58-4460-9fd0-4050c3345e43.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d166200b-9a58-4460-9fd0-4050c3345e43.png)'
- en: 'Next, attach the following C# script to the UI GameObject Text—score:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将以下C#脚本附加到UI GameObject Text—score上：
- en: '[PRE2]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In the `scene2_gameWon` scene, attach the following C# script to the Main Camera:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`scene2_gameWon`场景中，将以下C#脚本附加到主摄像机上：
- en: '[PRE3]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In the `scene3_gameLost` scene, attach the following C# script to the Main
    Camera:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`scene3_gameLost`场景中，将以下C#脚本附加到主摄像机上：
- en: '[PRE4]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Save your scripts, and play the game. As you progress from level (scene) to
    level, you will find that the score and the player's name are remembered, until
    you quit the application.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存你的脚本，并玩游戏。当你从级别（场景）进步到下一个级别时，你会发现得分和玩家的名字被记住，直到你退出应用程序。
- en: How it works...
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The Player class uses static (class) properties `scoreCorrect` and `scoreIncorrect` to
    store the current total number of correct and incorrect guesses. Since these are
    public static properties, any object from any scene can access (set or get) these
    values, since the static properties are remembered from scene to scene. This class
    also provides the public static method called `ZeroTotals()` that resets both
    the values to zero.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`Player`类使用静态（类）属性`scoreCorrect`和`scoreIncorrect`来存储当前正确和错误猜测的总数。由于这些是公共静态属性，任何场景中的任何对象都可以访问（设置或获取）这些值，因为静态属性在场景之间是记忆的。此类还提供了一个名为`ZeroTotals()`的公共静态方法，可以将这两个值重置为零。'
- en: When the scene0_mainMenu scene is loaded, all the `GameObjects` with scripts
    will have their `Start()` methods executed. The UI Text GameObject called Text-score has
    an instance of the `UpdateScoreText` class as s script component, so that the
    scripts `Start()` method will be executed, which retrieves the correct and incorrect
    totals from the Player class, creates the `scoreMessage` string about the current
    score, and updates the text property so that the user sees the current score.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `scene0_mainMenu` 场景被加载时，所有带有脚本的 `GameObjects` 将执行它们的 `Start()` 方法。名为 `Text-score` 的UI
    Text GameObject有一个 `UpdateScoreText` 类的脚本组件实例，因此脚本 `Start()` 方法将被执行，从 `Player` 类中检索正确和错误的总计，创建关于当前分数的 `scoreMessage` 字符串，并更新文本属性，以便用户看到当前分数。
- en: When the game is running and the user guesses correctly (higher), then the scene2_gameWon scene
    is loaded. So, the `Start()` method, of the `IncrementCorrectScore` script component,
    of the Main Camera in this scene is executed, which adds 1 to the `scoreCorrect` variable
    of the `Player` class.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当游戏运行且用户猜对（更高）时，则加载 `scene2_gameWon` 场景。因此，在这个场景中，主摄像机的 `IncrementCorrectScore` 脚本组件的 `Start()` 方法被执行，将1加到 `Player` 类的 `scoreCorrect` 变量上。
- en: When the game is running and the user guesses wrongly (lower), then the scene scene3_gameLost is
    loaded. So, the `Start()` method, of the `IncrementIncorrectScore` script component,
    of the Main Camera in this scene is executed, which adds 1 to the `scoreIncorrect` variable
    of the `Player` class.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当游戏运行且用户猜错（更低）时，则加载 `scene3_gameLost` 场景。因此，在这个场景中，主摄像机的 `IncrementIncorrectScore` 脚本组件的 `Start()` 方法被执行，将1加到 `Player` 类的 `scoreIncorrect` 变量上。
- en: The next time the user visits the main menu scene, the new values of the correct
    and incorrect totals will be read from the `Player` class, and the UI Text on
    the screen will inform the user of their updated total score for the game.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 下次用户访问主菜单场景时，将从 `Player` 类中读取正确和错误的总计新值，并且屏幕上的UI Text将通知用户他们的游戏更新总分。
- en: There's more...
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多内容...
- en: There are some details that you don't want to miss.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些细节你不应该错过。
- en: Hiding the score before the first attempt is completed
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在第一次尝试完成之前隐藏分数
- en: 'Showing a score of zero out of zero isn''t very professional. Let''s add some
    logic so that the score is only displayed (a non-empty string) if the total number
    of attempts is greater than zero:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 显示零分并不专业。让我们添加一些逻辑，以便只有在总尝试次数大于零时才显示分数：
- en: '[PRE5]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: See also
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 相关内容
- en: 'Refer to the following recipe in this chapter for more information:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 参考本章中的以下配方以获取更多信息：
- en: Saving and loading player data - using PlayerPrefs
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存和加载玩家数据 - 使用PlayerPrefs
- en: Saving and loading player data – using PlayerPrefs
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存和加载玩家数据 – 使用PlayerPrefs
- en: 'While the previous recipe illustrates how the static properties allow a game
    to remember values between different scenes, these values are forgotten once the
    game application has quit. Unity provides the `PlayerPrefs` feature to allow a
    game to store and retrieve data, between the different game-playing sessions:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然之前的配方说明了静态属性如何允许游戏在不同场景之间记住值，但这些值一旦游戏应用程序退出就会被遗忘。Unity提供了 `PlayerPrefs` 功能，允许游戏在不同游戏会话之间存储和检索数据：
- en: '![](img/44b8a09b-8c00-466a-9589-7b93c8fe6902.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](img/44b8a09b-8c00-466a-9589-7b93c8fe6902.png)'
- en: Getting ready
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe builds upon the previous recipe, so make a copy of that project
    and work on the copy.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方基于之前的配方，所以请复制那个项目并在此基础上工作。
- en: How to do it...
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To save and load the player data using `PlayerPrefs`, follow these steps:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 `PlayerPrefs` 保存和加载玩家数据，请按照以下步骤操作：
- en: Delete the C# script called `Player`.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除名为 `Player` 的C#脚本。
- en: 'Edit the C# script called `UpdateScoreText` by replacing the `Start()` method      with the following:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑名为 `UpdateScoreText` 的C#脚本，将其 `Start()` 方法替换为以下内容：
- en: '[PRE6]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now edit the C# script called `IncrementCorrectScore` by replacing the `Start()` method
    with the following code:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在编辑名为 `IncrementCorrectScore` 的C#脚本，将其 `Start()` 方法替换为以下代码：
- en: '[PRE7]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now edit the C# script called `IncrementIncorrectScore` by replacing the `Start()` method
    with the following code:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在编辑名为 `IncrementIncorrectScore` 的C#脚本，将其 `Start()` 方法替换为以下代码：
- en: '[PRE8]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Save your scripts and play the game. Quit from Unity and then restart the application.
    You will find that the player's name, level, and score are now kept between the
    game sessions.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存你的脚本并玩游戏。退出Unity然后重新启动应用程序。你会发现玩家的名字、等级和分数现在在游戏会话之间被保留。
- en: How it works...
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: We had no need for the Player class, since this recipe uses the built-in runtime
    class called `PlayerPrefs`, provided by Unity.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个配方使用的是Unity提供的内置运行时类`PlayerPrefs`，因此我们不需要Player类。
- en: Unity's `PlayerPrefs` runtime class is capable of storing and accessing information
    (the string, int, and float variables) in the user's machine. Values are stored
    in a plist file (Mac) or the registry (Windows), in a similar way to web browser
    cookies, and, therefore, remembered between game application sessions.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Unity的`PlayerPrefs`运行时类能够在用户的机器上存储和访问信息（字符串、int和float变量）。值存储在plist文件（Mac）或注册表（Windows）中，类似于网络浏览器的cookies，因此可以在游戏应用会话之间记住。
- en: Values for the total correct and incorrect scores are stored by the `Start()` methods
    in the `IncrementCorrectScore` and `IncrementIncorrectScore` classes. These methods
    use the `PlayerPrefs.GetInt("")` method to retrieve the old total, add 1 to it,
    and then store the incremented total using the `PlayerPrefs.SetInt("")` method.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 总正确和错误得分的值由`IncrementCorrectScore`和`IncrementIncorrectScore`类中的`Start()`方法存储。这些方法使用`PlayerPrefs.GetInt("")`方法检索旧的总分，将其加1，然后使用`PlayerPrefs.SetInt("")`方法存储增加后的总分。
- en: These correct and incorrect totals are then read each time the scene0_mainMenu scene
    is loaded, and the score totals are displayed via the UI Text object on the screen.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这些正确和错误的总数在每次加载`scene0_mainMenu`场景时都会被读取，并且通过屏幕上的UI Text对象显示得分总数。
- en: For more information on `PlayerPrefs`, see Unity's online documentation at [http://docs.unity3d.com/ScriptReference/PlayerPrefs.html](http://docs.unity3d.com/ScriptReference/PlayerPrefs.html).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 有关`PlayerPrefs`的更多信息，请参阅Unity在线文档[http://docs.unity3d.com/ScriptReference/PlayerPrefs.html](http://docs.unity3d.com/ScriptReference/PlayerPrefs.html)。
- en: See also
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考信息
- en: 'Refer to the following recipe in this chapter for more information:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅本章中的以下配方：
- en: Saving and loading player data - using static properties
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存和加载玩家数据 - 使用静态属性
- en: Loading game data from a text file map
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从文本文件地图加载游戏数据
- en: Rather than, for every level of a game, having to create and place every GameObject on
    the screen by hand, a better approach can be to create the text files of rows,
    and columns of characters, where each character corresponds to the type of GameObject that
    is to be created in the corresponding location.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是为每个游戏级别手动创建和放置每个`GameObject`，一个更好的方法是可以创建包含行和列字符的文本文件，其中每个字符对应于要在相应位置创建的`GameObject`的类型。
- en: 'In this recipe, we''ll use a text file and set of prefab sprites to display
    a graphical version of a text data file for a screen from the classic game, *NetHack*:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将使用文本文件和一组预制精灵来显示经典游戏*NetHack*屏幕的文本数据文件的图形版本：
- en: '![](img/1ff4de70-894c-4bcf-a779-42270d17972e.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1ff4de70-894c-4bcf-a779-42270d17972e.png)'
- en: Getting ready
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备中
- en: 'In the `16_04` folder, we have provided the following two files for this recipe:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在`16_04`文件夹中，我们为这个配方提供了以下两个文件：
- en: '`level1.txt` (a text file, representing a level)'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`level1.txt`（一个文本文件，表示一个关卡）'
- en: '`absurd128.png` (a 128 x 128 sprite sheet for NetHack).'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`absurd128.png`（一个128 x 128的精灵图，用于NetHack）。'
- en: 'The level data came from the NetHack Wikipedia page, and the sprite sheet came
    from SourceForge:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 关卡数据来自NetHack维基百科页面，精灵图来自SourceForge：
- en: '[http://en.wikipedia.org/wiki/NetHack](http://en.wikipedia.org/wiki/NetHack)'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://en.wikipedia.org/wiki/NetHack](http://en.wikipedia.org/wiki/NetHack)'
- en: '[http://sourceforge.net/projects/noegnud/files/tilesets_nethack-3.4.1/absurd%20128x128/](http://sourceforge.net/projects/noegnud/files/tilesets_nethack-3.4.1/absurd%20128x128/)'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://sourceforge.net/projects/noegnud/files/tilesets_nethack-3.4.1/absurd%20128x128/](http://sourceforge.net/projects/noegnud/files/tilesets_nethack-3.4.1/absurd%20128x128/)'
- en: Note that we also included a Unity package with all the prefabs set up, since
    this can be a laborious task.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们还包含了一个包含所有预制件设置的Unity包，因为这可能是一个费时的任务。
- en: How to do it...
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To load game data from a text file map, do the following:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 要从文本文件地图加载游戏数据，请执行以下操作：
- en: Import text file `level1.txt`, and image file `absurd128.png`.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入文本文件`level1.txt`和图像文件`absurd128.png`。
- en: Select `absurd128.png` in the Inspector, and set Texture Type to Sprite (2D/uGUI), and Sprite
    Mode to Multiple.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在检查器中选择`absurd128.png`，并将纹理类型设置为Sprite (2D/uGUI)，并将Sprite模式设置为Multiple。
- en: 'Edit this sprite in the Sprite Editor, choosing Type as Grid and Pixel Size as 128
    x 128, and apply these settings:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在精灵编辑器中编辑此精灵，选择类型为Grid，并将像素大小设置为128 x 128，并应用以下设置：
- en: '![](img/66dfa1d5-50ee-4d6d-b1d3-1c1929b60936.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/66dfa1d5-50ee-4d6d-b1d3-1c1929b60936.png)'
- en: 'In the Project panel, click on the right-facing white triangle to explode the
    icon, to show all the sprites in this sprite sheet individually:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“项目”面板中，点击指向右侧的白三角图标以展开图标，以单独显示此精灵图集中的所有精灵：
- en: '![](img/2ded1048-60a8-4cf8-8995-c97902e90837.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2ded1048-60a8-4cf8-8995-c97902e90837.png)'
- en: Drag the Sprite called absurd128_175 on to the scene.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将名为 absurd128_175 的精灵拖放到场景中。
- en: Create a new Prefab named `corpse_175` in the Project panel, and drag onto this
    blank prefab Sprite `absurd128_175` from the scene. Now delete the sprite instance
    from the scene. You have now created a prefab containing the `Sprite 175`.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“项目”面板中创建一个新的预制件 `corpse_175`，并将其从场景中的空白预制件精灵 absurd128_175 拖放到此。现在从场景中删除精灵实例。你现在创建了一个包含
    `Sprite 175` 的预制件。
- en: 'Repeat this process for the following sprites (that is, create prefabs for
    each one):'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对以下精灵重复此过程（即为每个精灵创建预制件）：
- en: '`– floor_848`'
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`– floor_848`'
- en: '`– corridor_849`'
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`– corridor_849`'
- en: '`– horiz_1034`'
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`– horiz_1034`'
- en: '`– vert_1025`'
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`– vert_1025`'
- en: '`– door_844`'
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`– door_844`'
- en: '`– potion_675`'
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`– potion_675`'
- en: '`– chest_586`'
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`– chest_586`'
- en: '`– alter_583`'
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`– alter_583`'
- en: '`– stairs_up_994`'
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`– stairs_up_994`'
- en: '`– stairs_down_993`'
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`– stairs_down_993`'
- en: '`– wizard_287`'
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`– wizard_287`'
- en: Select the Main Camera in the Inspector, and ensure that it is set to an Orthographic camera,
    sized 20, with Clear Flags as Solid Color and Background as Black.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“检查器”中选择主相机，并确保它设置为大小为 20 的正交相机，清除标志为纯色，背景为黑色。
- en: 'Attach the following C# code to the Main Camera as the script class called `LoadMapFromTextfile`:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 C# 代码附加到主相机上，作为名为 `LoadMapFromTextfile` 的脚本类：
- en: '[PRE9]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: With the Main Camera selected, drag the appropriate prefabs on to the prefabs
    slots in the Inspector, for the `LoadMapFromTextfile` Script component.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择主相机，将适当的预制件拖放到“检查器”中 `LoadMapFromTextfile` 脚本组件的预制件槽中。
- en: When you run the scene, you will see that a sprite-based Nethack map will appear,
    using your prefabs.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你运行场景时，你会看到基于精灵的 Nethack 地图出现，使用你的预制件。
- en: How it works...
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The Sprite sheet was automatically sliced up into hundreds of 128 x 128 pixel Sprite squares.
    We created the prefab objects from some of these sprites so that the copies can
    be created at runtime when needed.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 精灵图集被自动切割成数百个 128 x 128 像素的精灵方块。我们从这些精灵中创建了一些预制件对象，以便在需要时在运行时创建副本。
- en: The text file called `level1.txt` contains the lines of text characters. Each
    non-space character represents where a sprite prefab should be instantiated (column
    = *x*; row = y). A C# dictionary variable named *dictionary* is declared and initialized
    in the `Start()` method to associate the specific prefab GameObjects with some
    particular characters in the text file.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名为 `level1.txt` 的文本文件包含文本字符的行。每个非空格字符表示精灵预制件应该实例化的位置（列 = *x*；行 = y）。在 `Start()`
    方法中声明并初始化了一个名为 `dictionary` 的 C# 字典变量，以将特定的预制件 GameObject 与文本文件中的某些特定字符关联起来。
- en: 'The `Awake()` method splits the string into an array using the newline character
    as a separator. So, now, we have `stringArray` with an entry for each row of the
    text data.      The `BuildMaze(...)` method is called with the `stringArray`.'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '`Awake()` 方法使用换行符作为分隔符将字符串拆分为数组。因此，现在我们有了 `stringArray`，其中包含文本数据的每一行的条目。`BuildMaze(...)`
    方法使用 `stringArray` 被调用。'
- en: The `BuildMaze(...)` method interrogates the array to find its length (the number
    of rows of data for this level), and sets `yOffSet` to half this value. This is
    done to allow the placing of the prefabs half above *y* = 0, and half below, so
    (0,0,0) is the center of the level map. A for-loop is used to read each row's
    string from the array. It passes it to the `CreateRow(...)` method along with
    the *y*-value corresponding to the current row.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`BuildMaze(...)` 方法查询数组以找到其长度（此级别的数据行数），并将 `yOffSet` 设置为该值的一半。这样做是为了允许将预制件放置在
    *y* = 0 的一半以上和一半以下，因此 (0,0,0) 是级别地图的中心。使用 for 循环读取数组中的每一行的字符串。它将字符串传递给 `CreateRow(...)`
    方法，并附带对应于当前行的 *y* 值。'
- en: The `CreateRow(...)` method extracts the length of the string, and sets `xOffSet` to
    half this value. This is done to allow the placing of the prefabs half to the
    left of *x* = 0 and half to the right, so (0,0,0) is the center of the level map.
    A for-loop is used to read each character from the current row's string, and (if
    there is an entry in our dictionary for that character) then the `CreatePrefabInstance
    (...)` method is called, passing the prefab reference in the dictionary for that
    character, and the *x* and *y* value.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`CreateRow(...)`方法提取字符串的长度，并将`xOffSet`设置为该值的一半。这样做是为了允许将预制件放置在*x* = 0的左侧和右侧的一半，因此(0,0,0)是地图中心的水平面。使用for循环从当前行的字符串中读取每个字符，并且（如果我们的字典中有该字符的条目）则调用`CreatePrefabInstance
    (...)`方法，传递字典中该字符的预制件引用以及*x*和*y*值。'
- en: The CreatePrefabInstance(...) method instantiates the given prefab at a position
    of *x, y, z,* where *z* is always zero, and there is no rotation (`Quarternion.identity`).
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '`CreatePrefabInstance(...)`方法在位置*x, y, z*处实例化给定的预制件，其中*z*始终为零，并且没有旋转（`Quarternion.identity`）。'
- en: UI Slider to change game quality settings
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: UI滑块更改游戏质量设置
- en: 'In this recipe, we will show you how the player can control the quality settings
    by providing a UI Slider for the player. From this, they can choose from an array
    of possible quality settings for the current project:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在本菜谱中，我们将向您展示玩家如何通过提供UI滑块来控制质量设置。从这，他们可以从当前项目的可能质量设置数组中进行选择：
- en: '![](img/7317d68b-1e05-4c46-bc2d-ad9db6ded1df.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7317d68b-1e05-4c46-bc2d-ad9db6ded1df.png)'
- en: Getting ready
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we have prepared a package named `BallGame` containing two
    scenes. The package is in the `16_05` folder.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个菜谱，我们准备了一个名为`BallGame`的包，包含两个场景。该包位于`16_05`文件夹中。
- en: How to do it...
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To create a player UI to change the game''s quality settings, do the following:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个玩家UI来更改游戏的质量设置，请执行以下操作：
- en: Create a new 3D project and import the `BallGame` package.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的3D项目并导入`BallGame`包。
- en: Open the scene named `scene0_ballCourt`.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开名为`scene0_ballCourt`的场景。
- en: 'In the scene, create a new UI Panel named `Panel-quality` by choosing menu:
    Create | UI | Panel.'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在场景中，通过选择菜单：创建 | UI | 面板创建一个新的UI面板名为`Panel-quality`。
- en: 'With the GameObject Panel-quality selected in the Hierarchy, create a new UI
    Slider named Slider-quality by choosing menu: Create | UI | Slider. This GameObject
    should be childed to Panel-quality.'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在层次结构中选择Panel-quality游戏对象后，通过选择菜单：创建 | UI | 滑块创建一个新的UI滑块名为Slider-quality。此游戏对象应该是Panel-quality的子对象。
- en: 'With Panel-quality selected in the Hierarchy, create a new UI Text GameObject
    named Text-quality by choosing menu: Create | UI | Text. This GameObject should
    be childed to GameObject Panel-quality. In the **Inspector**, set its Transform
    Position Y value to -25.'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在层次结构中选择Panel-quality后，通过选择菜单：创建 | UI | 文本创建一个新的UI文本游戏对象名为Text-quality。此游戏对象应该是GameObject
    Panel-quality的子对象。在**检查器**中，将其Transform Position Y值设置为-25。
- en: 'Create a new C# script class named `QualityChooser`, and attach an instance
    object as a component to the First Person Controller:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的C#脚本类名为`QualityChooser`，并将实例对象作为组件附加到第一人称控制器：
- en: '[PRE10]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In the **Hierarchy,** select the First Person Controller. Then, from the **Inspector**,
    access the Quality Chooser component, and populate the panelGo, Slide, and Text
    Label public fields with the UI GameObjects Panel-quality, Slider, and Text:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**层次结构**中，选择第一人称控制器。然后，从**检查器**中访问质量选择器组件，并将面板Go、滑块和文本标签公共字段填充为UI游戏对象面板-quality、滑块和文本：
- en: '![](img/877bda8e-a671-4a58-be55-82c660062529.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/877bda8e-a671-4a58-be55-82c660062529.png)'
- en: From the **Hierarchy** panel, select Slider. Then, from the **Inspector,** for
    the Slider component, find the list named On Value Changed (Single), and click
    on the + sign to add a command.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**层次结构**面板中选择滑块。然后，从**检查器**中，对于滑块组件，找到名为On Value Changed (Single)的列表，并单击加号以添加命令。
- en: 'Drag the First Person Controller from the **Hierarchy** into the **Game Object**
    field of the new command. Then, use the function selector to find the UpdateQuality
    function in the Dynamic float section (No Function | QualityChooser | Dynamic
    float | UpdateQuality):'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**第一人称控制器**从**层次结构**拖入新命令的**游戏对象**字段。然后，使用功能选择器在动态浮点部分（无功能 | 质量选择器 | 动态浮点 |
    UpdateQuality）中找到UpdateQuality函数：
- en: '![](img/37dddf3e-3e1c-497d-afea-7eb3bf15d05c.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/37dddf3e-3e1c-497d-afea-7eb3bf15d05c.png)'
- en: When you play the scene, you should be able to drag the quality slider to change
    the quality settings.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您播放场景时，您应该能够拖动质量滑块来更改质量设置。
- en: How it works...
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: You created a panel containing a UI Slider and a UI Text object.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 你创建了一个包含UI滑块和UI文本对象的面板。
- en: The `SetQualitySliderActive(...)` method receives a true/false value, and uses
    this to show/hide the mouse cursor and the UI Panel.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '`SetQualitySliderActive(...)`方法接收一个true/false值，并使用这个值来显示/隐藏鼠标光标和UI面板。'
- en: The `UpdateQuality(...)` method receives a float value from the Slider `OnChange`
    event. This value is converted to an integer, which is to be the index of the
    selected quality setting. This index is used both to select the project quality
    setting, and also to update the UI Text label with the name of the currently selected
    quality setting.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`UpdateQuality(...)`方法从滑块的`OnChange`事件接收一个浮点值。此值被转换为整数，该整数是要选择的当前质量设置的索引。此索引既用于选择项目质量设置，也用于更新UI文本标签，显示当前所选质量设置的名称。'
- en: When the Scene begins, in the `Awake()` method, the UI Slider has its maximum
    value set to 1 less then the number of project quality items (for example, if
    there are five items, the slider will be from 0 to 4). Also, the UI Slider is
    moved to the position corresponding to the current quality level, and the `SetQualitySliderActive(...)` method
    is invoked with the true value in order to display both the mouse pointer and
    the UI Panel showing the slide and text label.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 当场景开始时，在`Awake()`方法中，UI滑块的最大值设置为项目质量项数减1（例如，如果有五个项目，滑块将从0到4）。此外，UI滑块移动到对应当前质量级别的位置，并使用true值调用`SetQualitySliderActive(...)`方法，以显示鼠标指针和显示滑块和文本标签的UI面板。
- en: There's more...
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Here are some ways to go further with this recipe.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些方法可以进一步使用这个菜谱。
- en: Seeing/editing the list of quality settings
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看/编辑质量设置列表
- en: 'You can view and modify the quality settings available for a project by choosing
    menu: Edit | Project Settings | Quality:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过选择菜单：编辑 | 项目设置 | 质量，来查看和修改项目可用的质量设置。
- en: '![](img/211f0b70-908b-4097-a20d-db4b63cd639c.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](img/211f0b70-908b-4097-a20d-db4b63cd639c.png)'
- en: Pausing the game
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 暂停游戏
- en: As compelling as your next game will be, you should always let players pause
    it for a short break. Sometimes, a game pause is used to let the player rest,
    but another reason might be to change some game setting such as volume or graphics
    quality.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管你的下一款游戏将非常吸引人，但你应该始终允许玩家暂停它以短暂休息。有时，游戏暂停用于让玩家休息，但另一个原因可能是更改一些游戏设置，如音量或图形质量。
- en: Pausing the game usually involves a combination of freezing a game action, and
    also hiding or revealing UI items, to display a message to the player and provide
    UI controls to change settings.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 暂停游戏通常涉及冻结游戏动作和隐藏或显示UI项目，以向玩家显示消息并提供UI控件来更改设置。
- en: In this recipe, we will implement a simple and effective pause screen that hides
    the previous recipe's quality settings slide when the game is being played, and
    reveals it when the game has been paused.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将实现一个简单而有效的暂停屏幕，当游戏正在播放时隐藏之前菜谱的质量设置滑块，当游戏暂停时显示它。
- en: Getting ready
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe builds on the previous one, so make a copy of that and use that
    copy.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 这个菜谱基于之前的菜谱，所以请复制那个菜谱并使用副本。
- en: How to do it...
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To pause your game upon pressing the *Esc* key, follow these steps:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 要在按下*Esc*键时暂停游戏，请按照以下步骤操作：
- en: 'Select the First Person Controller, and in the Inspector, enable the following
    components:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择第一人称控制器，并在检查器中启用以下组件：
- en: Character Controller
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 角色控制器
- en: Mouse Look (Script)
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 鼠标瞄准（脚本）
- en: Character Motor (Script)
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 角色引擎（脚本）
- en: FPS Input Controller (Script)
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: FPS输入控制器（脚本）
- en: Shooter (Script)
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 射击（脚本）
- en: 'Add the following C# script called `PauseGame` to First Person Controller:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下名为`PauseGame`的C#脚本添加到第一人称控制器：
- en: '[PRE11]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Edit the `QualityController` script class, and, in the `Awake()` method, change
    the last line to pass false (not true) to the `SetQualitySliderActive(...)` method:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`QualityController`脚本类，并在`Awake()`方法中，将最后一行修改为将false（而不是true）传递给`SetQualitySliderActive(...)`方法：
- en: '[PRE12]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: When you play the Scene, you should be able to pause/resume the game by pressing
    the *Esc* key, which will also display/hide the slider that controls the game's
    quality settings.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你播放场景时，你应该能够通过按下*Esc*键暂停/恢复游戏，这将同时显示/隐藏控制游戏质量设置的滑块。
- en: How it works...
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'To pause a Unity game with a script, we need to set the game''s Time Scale
    to 0 (and set it back to 1 to resume). The `SetPause()` method does these actions
    according to the value of the `isPaused` variable:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用脚本暂停Unity游戏，我们需要将游戏的时间缩放设置为0（并在恢复时将其设置为1）。`SetPause()`方法根据`isPaused`变量的值执行这些操作：
- en: '`isPause`= `true`: Time Scale 0 (pause the game), disable `MouseLook` component,
    and activate the quality slider and mouse cursor'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isPause` = `true`：时间缩放 0（暂停游戏），禁用`MouseLook`组件，并激活质量滑块和鼠标光标'
- en: '`isPause` = `false`: Time Scale 1 (resume the game), enable `MouseLook` component,
    and deactivate the quality slider and mouse cursor:'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isPause` = `false`：时间缩放 1（恢复游戏），启用`MouseLook`组件，并停用质量滑块和鼠标光标：'
- en: '![](img/9cf70e8d-e179-416b-812e-8f205e312650.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9cf70e8d-e179-416b-812e-8f205e312650.png)'
- en: In the `Update()` method, a test is made for each frame, whether or not the
    *Esc* key has been pressed. If pressed, the value of `isPaused` is toggled, and
    the `SetPause()` method is invoked.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Update()`方法中，对每一帧进行测试，检查是否按下了*Esc*键。如果按下，则切换`isPaused`的值，并调用`SetPause()`方法。
- en: There's more...
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多内容...
- en: Here are some ways to go further with this recipe.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些方法可以进一步改进这个食谱。
- en: Learning more about quality settings
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解更多关于质量设置的信息
- en: Our code for changing quality settings is a modification of an example given
    by Unity's documentation. If you want to learn more about this subject, check
    out the following link: [http://docs.unity3d.com/ScriptReference/QualitySettings.html](http://docs.unity3d.com/ScriptReference/QualitySettings.html).
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 我们更改质量设置的代码是对Unity文档中给出的示例的修改。如果您想了解更多关于这个主题的信息，请查看以下链接：[http://docs.unity3d.com/ScriptReference/QualitySettings.html](http://docs.unity3d.com/ScriptReference/QualitySettings.html)。
- en: Offering the user further game settings
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提供更多游戏设置给用户
- en: You could add more UI panels to be activated when the game is paused, for example,
    for sound volume controls, save/load buttons, and so on.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以添加更多UI面板，在游戏暂停时激活，例如，用于音量控制、保存/加载按钮等。
- en: Implementing slow motion
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现慢动作
- en: Since Remedy Entertainment's *Max Payne* video game, slow motion, or bullet
    time, has become a popular feature in games. For example, Criterion's *Burnout*
    series has successfully explored the slow motion effect in the racing genre. In
    this recipe, we will implement a slow motion effect that is triggered by pressing
    the mouse's right button.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 自从Remedy Entertainment的*Max Payne*视频游戏以来，慢动作或子弹时间已经成为游戏中的一个流行功能。例如， Criterion的*Burnout*系列成功探索了赛车类别中的慢动作效果。在这个食谱中，我们将实现一个通过按下鼠标右键触发的慢动作效果。
- en: Getting ready
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we will use the same package as the previous recipes, `BallGame`,
    which is in the `16_07` folder.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个食谱，我们将使用与之前食谱相同的包，即`BallGame`，它位于`16_07`文件夹中。
- en: How to do it...
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To implement slow motion, follow these steps:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现慢动作，请按照以下步骤操作：
- en: Import the `BallGame` package into your project and, from the Project panel,
    open the level named `scene1_ballGame.`
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`BallGame`包导入到您的项目中，并从项目面板中打开名为`scene1_ballGame`的场景。
- en: 'Create a C# script class called `BulletTime,` and add an instance object as
    a component to the First Person Controller GameObject:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`BulletTime`的C#脚本类，并将其作为组件添加到第一人称控制器GameObject实例中：
- en: '[PRE13]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Add a UI Slider to the scene named Slider-energy by choosing menu: Create |
    UI | Slider. Please note that it will be created as a child of the existing Canvas
    object.'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择菜单：创建 | UI | 滑块，在场景中添加一个名为`Slider-energy`的UI滑块。请注意，它将作为现有Canvas对象的子对象创建。
- en: 'Select Slider-energy and, from the Rect Transform component in the Inspector,
    set its Anchors as follows:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择滑块-能量，并在检查器中的矩形变换组件中设置其锚点如下：
- en: 'Min X: 0, Y: 1'
  id: totrans-235
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '最小 X: 0，Y: 1'
- en: 'Max X: 0.5, Y: 1'
  id: totrans-236
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '最大 X: 0.5，Y: 1'
- en: 'Pivot X: 0, Y: 1'
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '轴心 X: 0，Y: 1'
- en: 'Select Slider-energy and, from the Rect Transform component in the Inspector,
    set its Position as follows:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择滑块-能量，并在检查器中的矩形变换组件中设置其位置如下：
- en: 'Left: 0'
  id: totrans-239
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '左: 0'
- en: 'Pos Y: 0'
  id: totrans-240
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Y轴位置: 0'
- en: 'Pos Z: 0'
  id: totrans-241
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Z轴位置: 0'
- en: 'Right: 0'
  id: totrans-242
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '右: 0'
- en: 'Height: 50:'
  id: totrans-243
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高度：50：
- en: '![](img/1b621a49-cd9e-4080-9a33-cfc487c413be.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1b621a49-cd9e-4080-9a33-cfc487c413be.png)'
- en: 'In the Inspector, set the slider''s child **GameObject** Handle Slide Area
    as inactive:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在检查器中，将滑块的子**GameObject**滑块区域设置为不活动：
- en: '![](img/b52387fa-64fc-4b45-84f7-942d5b95f989.png)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b52387fa-64fc-4b45-84f7-942d5b95f989.png)'
- en: Finally, select the First Person Controller from the Hierarchy. Then, find the
    Bullet Time component, and drag the GameObject Slider-energy from the Hierarchy
    into its Energy Bar slot.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，从层次结构中选择第一人称控制器。然后，找到子弹时间组件，并将层次结构中的GameObject滑块-能量拖动到其能量条槽中。
- en: Play your game. You should be able to activate slow motion by holding down the
    right mouse button (or whatever alternative you have set for the Input axis Fire2).
    The slider will act as a progress bar that slowly shrinks, indicating the remaining
    bullet time you have.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 播放你的游戏。你应该能够通过按住右鼠标按钮（或你为输入轴设置的任何替代选项）来激活慢动作。滑块将充当进度条，缓慢缩小，指示你剩余的子弹时间。
- en: How it works...
  id: totrans-249
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Basically, all we need to do to have the slow motion effect is decrease the
    `Time.timeScale` variable. In our script, we do that by using the `slowSpeed`
    variable. Please note that we also need to adjust the `Time.fixedDeltaTime` variable,
    updating the physics simulation of our game.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，要实现慢动作效果，我们只需要减小`Time.timeScale`变量。在我们的脚本中，我们通过使用`slowSpeed`变量来实现这一点。请注意，我们还需要调整`Time.fixedDeltaTime`变量，更新我们游戏的物理模拟。
- en: In order to make the experience more challenging, we have also implemented a
    sort of energy bar to indicate how much bullet time the player has left (the initial
    value is given, in seconds, by the `totalTime` variable). Whenever the player
    is not using bullet time, he/she has his/her quota filled according to the `recoveryRate`
    variable.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使体验更具挑战性，我们还实现了一种能量条，以指示玩家剩余的子弹时间（初始值由`totalTime`变量给出，以秒为单位）。当玩家不使用子弹时间时，他/她的配额将根据`recoveryRate`变量填充。
- en: Regarding the UI Slider, we have used the Rect Transform settings to place it
    on the top-left corner and set its dimensions to half of the screen's width and
    50 pixels tall. Also, we have hidden the handle slide area to make it similar
    to a traditional energy bar. Finally, instead of allowing direct interaction from
    the player with the slider, we have used the `BulletTime` script to change the
    slider's value.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 关于UI滑块，我们使用了Rect Transform设置将其放置在左上角，并设置其尺寸为屏幕宽度的一半和50像素高。此外，我们已隐藏了手柄滑动区域，使其类似于传统的能量条。最后，我们不是允许玩家直接与滑块交互，而是使用`BulletTime`脚本更改滑块的值。
- en: There's more...
  id: totrans-253
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Some suggestions on how you can improve your slow motion effect even further
    are described in the following subsections.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下子节中描述了一些如何进一步改进你的慢动作效果的建议。
- en: Customizing the slider
  id: totrans-255
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 个性化滑块
- en: Don't forget that you can personalize the slider's appearance by creating your
    own sprites, or even by changing the slider's fill color based on the slider's
    value.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记，你可以通过创建自己的精灵或根据滑块的值更改滑块的填充颜色来个性化滑块的外观。
- en: 'Try adding the following lines of code to the end of the `Update` function:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试将以下代码行添加到`Update`函数的末尾：
- en: '[PRE15]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Adding Motion Blur
  id: totrans-259
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加运动模糊
- en: 'Motion Blur is an image effect that''s frequently identified with slow motion.
    Once attached to the camera, it can be enabled or disabled depending on the speed
    float value. For more information on the Motion Blur post-processing image effect,
    refer to the following links:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 运动模糊是一种与慢动作频繁相关的图像效果。一旦附加到相机上，它可以根据速度浮点值启用或禁用。有关运动模糊后处理图像效果的更多信息，请参阅以下链接：
- en: '[https://github.com/Unity-Technologies/PostProcessing/wiki/Motion-Blur](https://github.com/Unity-Technologies/PostProcessing/wiki/Motion-Blur)'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/Unity-Technologies/PostProcessing/wiki/Motion-Blur](https://github.com/Unity-Technologies/PostProcessing/wiki/Motion-Blur)'
- en: '[https://docs.unity3d.com/Packages/com.unity.postprocessing@2.0/manual/Motion-Blur.html](https://docs.unity3d.com/Packages/com.unity.postprocessing@2.0/manual/Motion-Blur.html)'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.unity3d.com/Packages/com.unity.postprocessing@2.0/manual/Motion-Blur.html](https://docs.unity3d.com/Packages/com.unity.postprocessing@2.0/manual/Motion-Blur.html)'
- en: '[https://docs.unity3d.com/Packages/com.unity.postprocessing@2.0/manual/Manipulating-the-Stack.html](https://docs.unity3d.com/Packages/com.unity.postprocessing@2.0/manual/Manipulating-the-Stack.html)'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.unity3d.com/Packages/com.unity.postprocessing@2.0/manual/Manipulating-the-Stack.html](https://docs.unity3d.com/Packages/com.unity.postprocessing@2.0/manual/Manipulating-the-Stack.html)'
- en: Creating sonic ambience
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建音效氛围
- en: '*Max Payne* famously used a strong, heavy heartbeat sound as sonic ambience.
    You could also try lowering the sound effects volume to convey the character''s
    focus when in slow motion. Plus, using audio filters on the camera could be an
    interesting option.'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '*Max Payne* 闻名于使用强烈的、沉重的心跳声作为音效氛围。你也可以尝试降低音效音量，以传达角色在慢动作时的专注。此外，使用相机上的音频过滤器可能是一个有趣的选择。'
- en: Using Gizmo to show the currently selected object in a scene panel
  id: totrans-266
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Gizmo在场景面板中显示当前选定的对象
- en: 'Gizmos are visual aids that are provided to game designers in the scene panel.
    In this recipe, we''ll highlight the **GameObject** that is currently selected
    in the **Hierarchy** in the Scene panel:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c7f152c1-9628-4647-9481-676bbfc23ce3.png)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
- en: How to do it...
  id: totrans-269
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To create a Gizmo to show the selected object in the Scene panel, follow these
    steps:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: Create a new 3D project.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a 3D cube by choosing menu: Create | 3D Object | Cube.'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a C# script class called `GizmoHighlightSelected`, and add an instance
    object as a component to the **3D Cube**:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Make lots of duplicates of the 3D Cube, distributing them randomly around the
    scene.
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When you select one cube in the Hierarchy, you should see three colored wireframe
    spheres drawn around the selected **GameObject** in the Scene panel.
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  id: totrans-277
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When an object is selected in a scene, if it contains a scripted component that
    includes the `OnDrawGizmosSelected()` method, then that method is invoked. Our
    method draws three concentric wireframe spheres in three different colors around
    the selected object.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: You can learn more from the Gizmos Unity manual entry at [https://docs.unity3d.com/Manual/GizmosMenu.html](https://docs.unity3d.com/Manual/GizmosMenu.html).
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: Editor snap-to grid drawn by Gizmo
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If the positioning of objects needs to be restricted to specific increments,
    it is useful to have a grid drawn in the scene panel to help ensure that new objects
    are positioned based on those values, and also code to snap objects to that grid.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: 'In this recipe, we''ll use Gizmos to draw a grid with a customizable grid size,
    color, number of lines, and line length. The result of following this recipe will
    be as follows:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ca48e620-10dd-4f23-8869-30f6b9ec56b5.png)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
- en: How to do it...
  id: totrans-284
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To create a Gizmo to show the selected object in the Scene panel, follow these
    steps:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: Create a new 3D project.
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For the Scene panel, turn off the Skybox view (or simply toggle off all the
    visual settings) so that you have a plain background for your grid work:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/edc2955b-cb99-479a-9bd6-36a6262e21bf.png)'
  id: totrans-288
  prefs: []
  type: TYPE_IMG
- en: 'The display, and updating the child objects, will be performed by a script
    class called `GridGizmo.` Create a new C# script class called `GridGizmo` which
    contains the following:'
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Let''s use an Editor script to add a new menu item to the **GameObject** menu.
    Create a folder named `Editor`, and in that folder, create a new C# script class
    called `EditorGridGizmoMenuItem,` which contains the following:'
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Now, let''s add another **Editor** script for a custom Inspector display (and
    updater) for the `GridGizmo` components. Also, in your **Editor** folder, create
    a new C# script class called `EditorGridGizmo,` which contains the following:'
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Add a new `GizmoGrid` GameObject to the scene by choosing menu: GameObject
    | Create New Snapgrid. A new GameObject named ___snap-to-grid___ should be added
    to the Hierarchy:'
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/513c2646-a955-4770-9b14-51dedb35c136.png)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
- en: 'Select GameObject ___snap-to-grid___, and modify some of its properties in
    the Inspector. You can change the grid size, the color of the grid lines, the
    number of lines, and their length:'
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择GameObject ___snap-to-grid___，并在检查器中修改其一些属性。您可以更改网格大小、网格线的颜色、线条数量及其长度：
- en: '![](img/5a2e5b99-a671-492f-bb5f-dfd780a2b2f9.png)'
  id: totrans-298
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5a2e5b99-a671-492f-bb5f-dfd780a2b2f9.png)'
- en: 'Create a **3D Cube** by choosing menu: Create | 3D Object | Cube. Now, drag
    the **3D Cube** into the Hierarchy and child it to GameObject ___snap-to-grid___.'
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择菜单：创建 | 3D对象 | 立方体来创建一个**3D立方体**。现在，将**3D立方体**拖动到层次结构中，并将其作为GameObject ___snap-to-grid___的子对象。
- en: 'We now need a small script class so that, each time the GameObject is moved
    (in Editor mode), it asks for its position to be snapped by the parent scripted
    component `SnapToGizmoGrid.` Create a C# script class called `SnapToGizmoGrid` and
    add an instance object as a component to the **3D Cube**:'
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在需要一个小的脚本类，以便每次GameObject在编辑器模式中移动时，它都会请求其位置通过父脚本组件`SnapToGizmoGrid`进行自动对齐。创建一个名为`SnapToGizmoGrid`的C#脚本类，并将其作为组件添加到**3D立方体**：
- en: '[PRE20]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Make lots of duplicates of the 3D cube, distributing them randomly around the
    scene—you'll find that they snap to the grid.
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在场景中随机分布大量3D立方体的副本——你会发现它们会自动对齐到网格。
- en: Select GameObject ___snap-to-grid___ again, and modify some of its properties
    in the Inspector. You'll see that the changes are instantly visible in the scene,
    and that all child objects that have a scripted component of `SnapToGizmoGrid`
    are snapped to any new grid size changes.
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次选择GameObject ___snap-to-grid___，并在检查器中修改其一些属性。您会看到更改立即在场景中可见，并且所有具有`SnapToGizmoGrid`脚本组件的子对象都会自动对齐到任何新的网格大小更改。
- en: How it works...
  id: totrans-304
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `EditorGridGizmoMenuItem` script class adds a new item to the GameObject
    menu. When selected, a new GameObject is added to the Hierarchy named ___snap-to-grid___,
    positioned at (0, 0, 0), and containing an instance object component of the `GridGizmo`
    script class.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '`EditorGridGizmoMenuItem`脚本类向GameObject菜单添加一个新项目。当选择时，会在层次结构中添加一个新的GameObject，命名为___snap-to-grid___，位置在(0,
    0, 0)，并包含`GridGizmo`脚本类的实例对象组件。'
- en: '`GridGizmo` draws a 2D grid based on public properties for grid size, color,
    number of lines, and line length. Regarding the `SetGrid(...)` method, as well
    as updating the integer grid size variable grid, it also invokes the `SnapAllChildren()`
    method, so that each time the grid size is changed, all child GameObjects are
    snapped into the new grid positions.'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '`GridGizmo`根据公共属性（网格大小、颜色、线条数量和线条长度）绘制2D网格。关于`SetGrid(...)`方法，以及更新整数网格大小变量grid，它还会调用`SnapAllChildren()`方法，因此每次更改网格大小，所有子GameObject都会自动对齐到新的网格位置。'
- en: 'The `SnapToGridGizmo` script class includes an Editor attribute `[ExecuteInEditMode]` so
    that it will receive `Update()` messages when its properties are changed at design
    time in the Editor. Each time `Update()` is invoked, it calls the `SnapPositionToGrid(...)` method
    in its parent `GridGizmo` instance object so that its position is snapped based
    on the current settings of the grid. To ensure this logic and code is not compiled
    into any final build of the game, the contents of `Update()` are wrapped in an
    #if UNITY_EDITOR compiler test. Such content is removed before a build is compiled
    for the final game.'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '`SnapToGridGizmo`脚本类包含一个`Editor`属性`[ExecuteInEditMode]`，这样当在编辑器中设计时更改其属性时，它将接收到`Update()`消息。每次调用`Update()`时，它都会在其父`GridGizmo`实例对象中调用`SnapPositionToGrid(...)`方法，以便其位置根据当前网格设置自动对齐。为了确保此逻辑和代码不会编译到任何最终游戏构建中，`Update()`的内容被包裹在`#if
    UNITY_EDITOR`编译器测试中。在为最终游戏编译构建之前，此类内容会被移除。'
- en: The `EditorGridGizmo` script class is a custom Editor Inspector component. This
    allows for both control of which properties are displayed in the Inspector, how
    they are displayed, and it allows actions to be performed when any values are
    changed. So, for example, after changes have been saved, the `sceneView.RepaintAll()`
    statement ensures that the grid is re-displayed, since it results in an `OnDrawGizmos()`
    message being sent.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '`EditorGridGizmo`脚本类是一个自定义编辑器检查器组件。这允许控制哪些属性在检查器中显示，如何显示，并且允许在更改任何值时执行操作。例如，在更改保存后，`sceneView.RepaintAll()`语句确保网格被重新显示，因为它会导致发送`OnDrawGizmos()`消息。'
- en: Creating a VR project
  id: totrans-309
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建VR项目
- en: In this recipe, we will go through the steps for setting up a basic VR scene
    in Unity, using the Vive VR headset on a Windows computer.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将通过在Unity中设置基本VR场景的步骤，使用Windows计算机上的Vive VR头戴设备。
- en: Getting ready
  id: totrans-311
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'You need Steam VR with the Standing Only or Room-scale set up. If you have
    not done so yet, then follow these steps to set up your Vive headset so that it''s
    ready for Unity game development:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要设置站立模式或房间规模的Steam VR。如果你还没有这样做，请按照以下步骤设置你的Vive头戴式设备，以便它为Unity游戏开发做好准备：
- en: Install Steam
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Steam
- en: Install Steam VR
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Steam VR
- en: Plug in your Vive headset
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接你的Vive头戴式设备
- en: 'From the Steam application window, run Steam VR (click VR at top right of the
    Steam app window):'
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Steam应用程序窗口中运行Steam VR（点击Steam应用窗口右上角的VR）：
- en: '![](img/c968814d-26da-4034-ad69-7ea398d8950a.png)'
  id: totrans-317
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c968814d-26da-4034-ad69-7ea398d8950a.png)'
- en: 'Steam VR should run. Then, choose the Run Room Setup menu item:'
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Steam VR应该运行。然后，选择运行房间设置菜单项：
- en: '![](img/336bc099-aeed-459a-9ea2-844b3b60c6be.png)'
  id: totrans-319
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/336bc099-aeed-459a-9ea2-844b3b60c6be.png)'
- en: Position your **Light Houses** to cover the space in the room that you want
    to use.
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的**灯塔**放置在你想使用的房间空间内。
- en: 'From the Room Setup screen, choose your room setup: Standing Only or Room-Scale:'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从房间设置屏幕中选择你的房间设置：站立模式或房间规模：
- en: 'Standing Only:'
  id: totrans-322
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 站立模式：
- en: Use the headset to set the center
  id: totrans-323
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用头戴式设备设置中心
- en: Use the headset to locate the floor
  id: totrans-324
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用头戴式设备定位地板
- en: 'Room-Scale:'
  id: totrans-325
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 房间规模：
- en: Position your Light Houses to cover the space you want to use
  id: totrans-326
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将你的灯塔放置在你想使用的空间内
- en: Calibrate the floor by putting hand controllers on the floor
  id: totrans-327
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将手控制器放在地板上来校准地板
- en: Walk around room, using hand controllers with the trigger to trace the space
    you can safely move around
  id: totrans-328
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在房间内走动，使用带有扳机的手控制器绘制你可以安全移动的空间
- en: You can now explore Steam VR Home.
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在可以探索Steam VR主界面。
- en: How to do it...
  id: totrans-330
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'To create a basic VR Unity project, follow these steps:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个基本的VR Unity项目，请按照以下步骤操作：
- en: Start a new 3D project.
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始一个新的3D项目。
- en: Either work with a new 3D Unity project, or make a backup of any project to
    which you are about to add VR features to, since you will be adding a package
    that makes changes to many settings, and it could mess up settings in an existing
    project.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 要么使用一个新的3D Unity项目，要么备份你即将添加VR功能的任何项目，因为你将添加一个会更改许多设置的包，这可能会破坏现有项目的设置。
- en: Delete the Main Camera from the Scene.
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从场景中删除主相机。
- en: 'Display the Unity Player settings in the Inspector by choosing menu: Edit |
    Project Settings | Player.'
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择菜单：编辑 | 项目设置 | 玩家来显示Unity Player设置：
- en: 'Check the Virtual Reality Supported option near the bottom of the Inspector:'
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在检查器中检查虚拟现实支持选项：
- en: '![](img/4a3109a7-9e28-4f96-b4f8-59339bf45b32.png)'
  id: totrans-337
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4a3109a7-9e28-4f96-b4f8-59339bf45b32.png)'
- en: Ensure that you are logged into your Unity Account (before accessing the **Asset
    Store**).
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你已经登录到你的Unity账户（在访问**资产商店**之前）。
- en: 'Visit the **Asset Store** and search for Steam VR from the Valve Corporation:'
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问**资产商店**并从Valve公司搜索Steam VR：
- en: '![](img/b1c09bc6-95bd-47ba-aff2-7269daf0fa41.png)'
  id: totrans-340
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b1c09bc6-95bd-47ba-aff2-7269daf0fa41.png)'
- en: Download and import the package (you'll be warned about having made a backup
    before importing...).
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并导入包（导入前会警告你备份...）。
- en: 'Choose your preferred options from any pop-up about builds:'
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从任何弹出窗口中选择你喜欢的选项：
- en: '![](img/c9c88ce1-ab59-4890-bb43-55cefc8b9fbc.png)'
  id: totrans-343
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c9c88ce1-ab59-4890-bb43-55cefc8b9fbc.png)'
- en: 'Drag into the Scene a clone of the [CameraRig] prefab from folder: Project
    | SteamVR | Prefabs. You''ll see a 3D space representing your room setup (our
    examples show the rectangular-based space from the Standing only room setup):'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将从文件夹：项目 | SteamVR | 预制件中的[CameraRig]预制件的副本拖入场景。你会看到一个代表你的房间设置的3D空间（我们的示例显示了站立模式房间设置的基于矩形的空間）：
- en: '![](img/4248b37c-4498-47d4-8677-b47024033440.png)'
  id: totrans-345
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4248b37c-4498-47d4-8677-b47024033440.png)'
- en: Run the Scene, put on your VR headset, and pick up your hand controllers. You
    should see 3D representations of the position, trigger settings, and so on of
    your hand controllers in the virtual space.
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行场景，戴上你的VR头戴式设备，拿起你的手控制器。你应该在虚拟空间中看到你的手控制器位置、扳机设置等的3D表示。
- en: Import/create 3D Objects in your scene - for example, add a **3D Cube** to the
    scene inside the room space of the CameraRig.
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的场景中导入/创建3D对象 - 例如，将**3D立方体**添加到CameraRig房间空间内的场景中。
- en: 'Run the Scene, and try moving a virtual hand controller to collide with your
    3D cube:'
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行场景，尝试移动虚拟手控制器与3D立方体碰撞：
- en: '![](img/e831433d-d831-4f4e-985c-20d6afba9e68.png)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e831433d-d831-4f4e-985c-20d6afba9e68.png)'
- en: Test the physics by adding a Rigid Body component to the 3D Cube (and turn off
    gravity), adding/making the Box Collider to the GameObject Controller (right)
    smaller.
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过向3D立方体（并关闭重力）添加刚体组件来测试物理，将Box Collider添加到GameObject Controller（右侧）并缩小。
- en: Run the scene - you should be able to push the **3D Cube** with the virtual
    hand controller.
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行场景 - 您应该能够使用虚拟手控制器推动**3D立方体**。
- en: How it works...
  id: totrans-352
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: You've learned to set up Vive and locate and install the Steam VR package.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经学会了设置Vive并定位和安装Steam VR软件包。
- en: This package contains prefabs so that the headset and handset work in the standing/room
    space you set up.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 此软件包包含预制件，以便头戴设备和手持设备在您设置的站立/房间空间中工作。
- en: You created a Unity project with the Vive prefabs. You then added a 3D Cube
    to the scene and interacted with it by adding colliders to the cube and a hand
    controller GameObject.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 您创建了一个包含Vive预制件的Unity项目。然后您向场景中添加了一个3D立方体，并通过向立方体添加碰撞器和手控制器GameObject与之交互。
- en: This was tested with Unity 2017.4.9 LTS, since it wasn't fully working with
    a 2018 version at the time of writing.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在Unity 2017.4.9 LTS上测试的，因为当时它无法与2018版本完全兼容。
- en: There's more...
  id: totrans-357
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Here are some suggestions for taking this recipe further.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些进一步改进此菜谱的建议。
- en: Exploring free VR/XR samples/tutorials
  id: totrans-359
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索免费的VR/XR样本/教程
- en: 'Some good sources of free sample VR projects to explore include the following:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 一些优秀的免费样本VR项目资源包括以下：
- en: 'Unity Technologies VR Samples: [https://assetstore.unity.com/packages/essentials/tutorial-projects/vr-samples-51519](https://assetstore.unity.com/packages/essentials/tutorial-projects/vr-samples-51519):'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity Technologies VR样本：[https://assetstore.unity.com/packages/essentials/tutorial-projects/vr-samples-51519](https://assetstore.unity.com/packages/essentials/tutorial-projects/vr-samples-51519)
- en: '![](img/85037417-68e6-4b71-97c0-9dcd3bf12294.png)'
  id: totrans-362
  prefs: []
  type: TYPE_IMG
  zh: '![](img/85037417-68e6-4b71-97c0-9dcd3bf12294.png)'
- en: 'A good tutorial on Vive and Unity from **Ray Wenderlick**: [https://www.raywenderlich.com/792-htc-vive-tutorial-for-unity](https://www.raywenderlich.com/792-htc-vive-tutorial-for-unity)'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自**雷·温德利克**的关于Vive和Unity的优秀教程：[https://www.raywenderlich.com/792-htc-vive-tutorial-for-unity](https://www.raywenderlich.com/792-htc-vive-tutorial-for-unity)
- en: 'Valve Lab Renderer on the Unity **Asset Store**: [https://assetstore.unity.com/packages/tools/the-lab-renderer-63141](https://assetstore.unity.com/packages/tools/the-lab-renderer-63141)'
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Valve Lab Renderer在Unity **Asset Store** 上的链接：[https://assetstore.unity.com/packages/tools/the-lab-renderer-63141](https://assetstore.unity.com/packages/tools/the-lab-renderer-63141)
- en: 'Vive input utility on the Unity **Asset Store**: [https://assetstore.unity.com/packages/tools/integration/vive-input-utility-64219](https://assetstore.unity.com/packages/tools/integration/vive-input-utility-64219)'
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Unity **Asset Store** 上启用Vive输入实用工具：[https://assetstore.unity.com/packages/tools/integration/vive-input-utility-64219](https://assetstore.unity.com/packages/tools/integration/vive-input-utility-64219)
- en: Setup with Oculus Rift
  id: totrans-366
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Oculus Rift进行设置
- en: 'The Oculus Rift setup is similar to that with the Vive, although it actually
    integrates a little better with Unity. You need to do the following:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: Oculus Rift的设置与Vive类似，尽管它实际上与Unity的集成更好。您需要执行以下操作：
- en: Install the Oculus runtime.
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Oculus运行时。
- en: Setup for room/standing for the Infrared Cameras.
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置红外摄像头所需的房间/站立模式。
- en: There is no need download any package, and no need to remove the Main Camera.
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 无需下载任何包，也无需删除主相机。
- en: You can learn more about this at the Oculus Rift Unity documentation site: [https://developer.oculus.com/documentation/unity/latest/concepts/book-unity-gsg/](https://developer.oculus.com/documentation/unity/latest/concepts/book-unity-gsg/).
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在Oculus Rift Unity文档网站上了解更多信息：[https://developer.oculus.com/documentation/unity/latest/concepts/book-unity-gsg/](https://developer.oculus.com/documentation/unity/latest/concepts/book-unity-gsg/)
- en: Using a Single Pass if working with the Lightweight Rendering Pipeline
  id: totrans-372
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果使用轻量级渲染管线，则使用单次遍历
- en: 'If you''re using the **Lightweight Rendering Scripted Pipeline**, then you
    need to choose Single Pass for the Stereo `RenderingMethod*` property when setting
    up XR in the settings, having chosen menu: Edit | Project Settings | Player:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是**轻量级渲染脚本管线**，则在设置XR时，在设置中为**RenderingMethod***属性选择单次遍历，在菜单中选择：编辑 | 项目设置
    | 玩家：
- en: '![](img/83728dea-ec7e-42df-b271-f7baaf42f31f.png)'
  id: totrans-374
  prefs: []
  type: TYPE_IMG
  zh: '![](img/83728dea-ec7e-42df-b271-f7baaf42f31f.png)'
- en: Adding 360-degree videos to a VR project
  id: totrans-375
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将360度视频添加到VR项目中
- en: 'Google Earth VR is great fun! This screenshot from a live VR session shows
    the virtual hand controller, and a virtual screen menu showing photos and text
    about 6 suggested locations to visit:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: Google Earth VR非常有趣！这张截图来自一个实时VR会话，显示了虚拟手控制器和一个虚拟屏幕菜单，显示有关6个建议访问地点的照片和文本：
- en: '![](img/bc4d85ec-70eb-4248-b0ae-d1a5d2d2a560.png)'
  id: totrans-377
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bc4d85ec-70eb-4248-b0ae-d1a5d2d2a560.png)'
- en: 'Affordable, 360-degree cameras means that it''s easy to create your own, or
    find free online 360-degree images and video clips. In this recipe, we''ll learn
    how to add a 360-degree video clip as a Skybox in a VR project. You will also
    learn how the 360-degree video clips can be played on the surface of 3D objects,
    including the inside of a sphere—a bit like **Google Earth** **VR** mode when
    you raise the sphere to your head to view its 360-degree image contents:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/75d955a8-4647-4f29-a940-7c7caf872ba1.png)'
  id: totrans-379
  prefs: []
  type: TYPE_IMG
- en: Getting ready
  id: totrans-380
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this recipe, we have provided a short `Snowboarding_Polar.mp4` video in
    the `16_07` folder. This project builds on the previous one (a basic VR project),
    so make a copy of that and work on the copy.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
- en: Special thanks to Kris Szczurowski for permission to use his snowboarding 360-degree
    video clip, and for his help with these VR project recipes. Good luck with the
    PhD!
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-383
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To add 360-degree videos to a VR project, follow these steps:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
- en: Import your 360-degree polar format video clip into your Unity project (in our
    example, this is `Snowboarding_Polar.mp4`).
  id: totrans-385
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the video asset in the Project panel, and in the Inspector, make a note
    of its resolution (we''ll need this later), for example, 2,560 x 1,280:'
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ff1ec98d-08af-4b97-84cd-72fa612bff4b.png)'
  id: totrans-387
  prefs: []
  type: TYPE_IMG
- en: 'Create a new empty GameObject named video-player by choosing menu: Create |
    Empty.'
  id: totrans-388
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select video-player in the Hierarchy, and in the Inspector, add a component
    **Video Player** component by choosing: Add Component | Video | Video Player.'
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the Project panel, drag your video asset file, for example, `Snowboarding_Polar`,
    into the Video Clip property of the Video Player component.
  id: totrans-390
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new Render Texture asset file named `VideoRenderTexture` by choosing
    menu: Create | Render Texture.'
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Set the Resolution of the `VideoRenderTexture` to match the video asset resolution,
    for example, 2,560 x 1,280:'
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c7c5b0c4-f7d1-474c-98cf-3673af46ca4e.png)'
  id: totrans-393
  prefs: []
  type: TYPE_IMG
- en: In the Hierarchy, select GameObject video-player, and for the Video Player component,
    set the target texture to be `VideoRenderTexture.`
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new Material named `video_m` by choosing menu: Create | Material.'
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'With `video_m` selected in the Project panel, change its **Shader** to Skybox
    | Panoramic:'
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ebada947-0ba7-4ab0-9554-1767103f2731.png)'
  id: totrans-397
  prefs: []
  type: TYPE_IMG
- en: In the Inspector, for the Spherical HDR property, click the Select button and
    choose Texture `VideoRenderTexture:`
  id: totrans-398
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c47c37b3-eadc-4341-93da-4e2ff85c51c1.png)'
  id: totrans-399
  prefs: []
  type: TYPE_IMG
- en: 'Open the Lighting Settings panel, choose menu: Window | Rendering | Lighting
    Settings. In the Inspector, set the Skybox Material to `video_m:`'
  id: totrans-400
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/abb53f02-7924-4d3f-919c-8aacc58207b6.png)'
  id: totrans-401
  prefs: []
  type: TYPE_IMG
- en: Play the Scene, put on your VR headset, and you should see the 360-degree video
    playing all around you.
  id: totrans-402
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  id: totrans-403
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You have created a GameObject with a Video Player component, and made it play
    your 360-degree video. You made this component render to a Render Texture of the
    same dimensions as your video.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
- en: You created a Skybox-panomaric **Material,** and selected your Render Texture
    as the Texture for this **Material**. You then set this **Material** as the Skybox
    for the Lighting Settings.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 您创建了一个Skybox-panomaric **材料**，并将您的渲染纹理作为此**材料**的纹理。然后，您将此**材料**设置为光照设置的Skybox。
- en: This was tested with Unity 2017.4.9 LTS, since it wasn't fully working with
    a 2018 version at the time of writing.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在Unity 2017.4.9 LTS上测试的，因为当时它还没有完全与2018版本兼容。
- en: There's more...
  id: totrans-407
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Here are some suggestions for taking this recipe further.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些进一步改进这个菜谱的建议。
- en: Playing 360-degree videos on the surface of a 3D object
  id: totrans-409
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在3D对象表面上播放360度视频
- en: 'To play 360-degree videos on the surface of a 3D object, perform the aforementioned
    steps, but do not set the Skybox to `video_m`. Instead, set the Material of the
    Mesh Renderer component of your 3D object to `video_m`:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 要在3D对象表面上播放360度视频，执行上述步骤，但不要将Skybox设置为`video_m`。相反，将您的3D对象的Mesh Renderer组件的材料设置为`video_m`：
- en: '![](img/f0d10053-1637-4007-a206-ffdc5c7c0a2a.png)'
  id: totrans-411
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f0d10053-1637-4007-a206-ffdc5c7c0a2a.png)'
- en: This works for 3D objects with inverted normals, for example, a hollow 3D Sphere
    that you can look at from the inside.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 这适用于具有反转法线的3D对象，例如，一个可以从内部观看的空心3D球体。
- en: Working with VR content inside a VR environment – the XR Editor
  id: totrans-413
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在VR环境中处理VR内容——XR编辑器
- en: 'An exciting project from Unity is the XR-Editor, which is a VR environment
    that allows you to edit a scene in VR. The project provides great examples of
    VR UI elements, including 3D menus and laser pointer selectors. It allows you
    to see Console reports in the environment and interact with the Hierarchy of GameObjects:
    In this screenshot we can see the main Workspace menu displayed on the virtual
    left hand controller, and the virtual right hand controller is being presented
    as a rotary menu for actions that can be performed on the currently selected GameObject.'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: Unity的一个令人兴奋的项目是XR-Editor，这是一个VR环境，允许您在VR中编辑场景。该项目提供了VR UI元素的优秀示例，包括3D菜单和激光指针选择器。它允许您在环境中查看控制台报告并与GameObject的层次结构交互：在这个屏幕截图中，我们可以看到主工作区菜单显示在虚拟左手控制器上，而虚拟右手控制器被展示为一个旋转菜单，用于执行可以对当前选定的GameObject执行的操作。
- en: 'The ''Select Parent'' option is currently selected in this rotary menu:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个旋转菜单中当前选中了“选择父项”选项：
- en: '![](img/72c28544-4eea-466e-9f79-189bf674f627.png)'
  id: totrans-416
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/72c28544-4eea-466e-9f79-189bf674f627.png)'
- en: In this recipe, we will set up the XR-Editor for use in a Unity project.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将设置XR-Editor以在Unity项目中使用。
- en: Getting ready
  id: totrans-418
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Start this recipe with a copy of the Basic VR project created in the recipe
    before the previous one.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 从上一个菜谱中创建的基本VR项目的副本开始这个菜谱。
- en: How to do it ...
  id: totrans-420
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'To work with VR content inside a VR environment in the XR Editor, do the following:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 在XR编辑器中，要在VR环境中处理VR内容，请按照以下步骤操作：
- en: 'Install the TextMeshPro package, choosing menu: Window | Package Manager, and
    selecting Text Mesh Pro.'
  id: totrans-422
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择菜单：窗口 | 包管理器，安装TextMeshPro包，并选择Text Mesh Pro。
- en: 'Download the Editor XR package from the links on the Unity blog page:'
  id: totrans-423
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Unity博客页面上的链接下载Editor XR包：
- en: '[http://rebrand.ly/EditorVR-package](http://rebrand.ly/EditorVR-package)'
  id: totrans-424
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://rebrand.ly/EditorVR-package](http://rebrand.ly/EditorVR-package)'
- en: '[https://blogs.unity3d.com/2016/12/15/editorvr-experimental-build-available-today/](https://blogs.unity3d.com/2016/12/15/editorvr-experimental-build-available-today/)'
  id: totrans-425
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://blogs.unity3d.com/2016/12/15/editorvr-experimental-build-available-today/](https://blogs.unity3d.com/2016/12/15/editorvr-experimental-build-available-today/)'
- en: Import the EditorXR-package package into your project.
  id: totrans-426
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将EditorXR-package包导入到您的项目中。
- en: 'Agree to the prompt on-screen about patching the Input Manager settings:'
  id: totrans-427
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同意屏幕上的提示以修补输入管理器设置：
- en: '![](img/f65fe051-8584-4922-9545-ae429c19dfc1.png)'
  id: totrans-428
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f65fe051-8584-4922-9545-ae429c19dfc1.png)'
- en: 'There should be a new item on the Window Menu, Window | EditorXR. Choose this
    menu item:'
  id: totrans-429
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应该在窗口菜单中有一个新的项目，窗口 | EditorXR。选择此菜单项：
- en: '![](img/25a2b73d-bd37-400e-a1f5-570d17506e68.png)'
  id: totrans-430
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/25a2b73d-bd37-400e-a1f5-570d17506e68.png)'
- en: 'A new, floating EditorXR application window should now be created:'
  id: totrans-431
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在应该创建了一个新的、浮动的EditorXR应用程序窗口：
- en: '![](img/41b2e007-5428-42a2-845a-a9d6dae982d3.png)'
  id: totrans-432
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/41b2e007-5428-42a2-845a-a9d6dae982d3.png)'
- en: Put on your VR headset and start creating. Do NOT run the scene—Editor XR works
    at **Design Time**, not **Run-Time**, so do NOT play the **Scene**.
  id: totrans-433
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 穿上您的VR头盔并开始创作。**不要运行场景**——Editor XR在**设计时间**工作，而不是**运行时间**，所以**不要播放**场景。
- en: 'You display the main menu by directing the laser pointer of one virtual hand
    controller onto the menu bar on the other hand controller:'
  id: totrans-434
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过将一个虚拟手控制器上的激光指针指向另一个手控制器上的菜单栏来显示主菜单：
- en: '![](img/694c1e4c-c9b3-4614-9c5e-b6b7ef75dbd6.png)'
  id: totrans-435
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/694c1e4c-c9b3-4614-9c5e-b6b7ef75dbd6.png)'
- en: 'You''ll then get a cube-like, multi-sided, rotatable main menu, from which
    you can choose items with the laser pointer. For example on the Workspaces side
    of the menu object there are options to display the **Console**, **Hierarchy**,
    **Inspector**, **Locked Objects**, **MiniWorld** and **Profiler** panels:'
  id: totrans-436
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将获得一个类似立方体、多面且可旋转的主菜单，你可以用激光指针选择其中的项目。例如，在菜单对象的“工作空间”部分，有显示**控制台**、**层次结构**、**检查器**、**锁定对象**、**迷你世界**和**性能分析器**面板的选项：
- en: '![](img/252da0f6-8be2-4779-95f9-c480a27e1848.png)'
  id: totrans-437
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/252da0f6-8be2-4779-95f9-c480a27e1848.png)'
- en: 'You can choose the Primatives menu where you can create new 3D objects:'
  id: totrans-438
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以选择“原语”菜单，在那里你可以创建新的3D对象：
- en: '![](img/9d1278e2-8370-40c3-aeff-9a1b50d9d616.png)'
  id: totrans-439
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9d1278e2-8370-40c3-aeff-9a1b50d9d616.png)'
- en: 'With a GameObject selected, a wheel-menu offers actions, such as deleting or
    selecting the parent, and so on:'
  id: totrans-440
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当选择一个GameObject时，一个轮式菜单提供了一系列操作，例如删除或选择父对象，等等：
- en: '![](img/daf5e253-5abc-4994-a196-e00930081c13.png)'
  id: totrans-441
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/daf5e253-5abc-4994-a196-e00930081c13.png)'
- en: How it works...
  id: totrans-442
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, you learned how to install and start interacting with Unity's
    Editor-XR.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，你学习了如何安装并开始与Unity的Editor-XR交互。
- en: This was tested with Unity 2017.4.9 LTS, since it wasn't fully working with
    a 2018 version at the time of writing.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在Unity 2017.4.9 LTS版本上测试的，因为在写作时它还不能完全与2018版本兼容。
- en: You can learn more about Editor XR/VR at the Unity blog at [https://blogs.unity3d.com/2016/12/15/editorvr-experimental-build-available-today/](https://blogs.unity3d.com/2016/12/15/editorvr-experimental-build-available-today/)[.](https://blogs.unity3d.com/2016/12/15/editorvr-experimental-build-available-today/)
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在Unity博客上了解更多关于Editor XR/VR的信息：[https://blogs.unity3d.com/2016/12/15/editorvr-experimental-build-available-today/](https://blogs.unity3d.com/2016/12/15/editorvr-experimental-build-available-today/)[.](https://blogs.unity3d.com/2016/12/15/editorvr-experimental-build-available-today/)
