["```cs\naccessModifier class UniqueName\n{\n    Variables \n    Constructors\n    Methods\n} \n```", "```cs\n    using System.Collections;\n    using System.Collections.Generic;\n    using UnityEngine;\n\n    public class Character\n    { \n    } \n    ```", "```cs\nCharacter hero = new Character(); \n```", "```cs\nvar hero = new Character(); \n```", "```cs\n    public class Character\n    {\n        public string name;\n        public int exp = 0; \n    } \n    ```", "```cs\n    Character hero = new Character(); \n    Debug.LogFormat(\"Hero: {0} - {1} EXP\", hero.name, hero.exp); \n    ```", "```cs\npublic string name;\npublic int exp = 0;\n**public****Character****()**\n**{**\n **name =** **\"Not assigned\"****;**\n**}** \n```", "```cs\n    public Character(string name)\n    {\n        this.name = name;\n    } \n    ```", "```cs\n    Character heroine = new Character(\"Agatha\");\n    Debug.LogFormat(\"Hero: {0} - {1} EXP\", heroine.name,\n            heroine.exp); \n    ```", "```cs\n    public void PrintStatsInfo()\n    {\n          Debug.LogFormat(\"Hero: {0} - {1} EXP\", name, exp);\n    } \n    ```", "```cs\n     Character hero = new Character();\n     **hero.PrintStatsInfo();**\n     Character heroine = new Character(\"Agatha\");\n     **heroine.PrintStatsInfo();** \n    ```", "```cs\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class Character\n{\n    public string name;\n    public int exp = 0;\n\n    public Character()\n    {\n        name = \"Not assigned\";\n    }\n\n    public Character(string name)\n    {\n        this.name = name;\n    }\n\n    public void PrintStatsInfo()\n    {\n        Debug.LogFormat(\"Hero: {0} - {1} EXP\", name, exp);\n    }\n} \n```", "```cs\naccessModifier struct UniqueName \n{\n    Variables\n    Constructors\n    Methods\n} \n```", "```cs\n    public struct Weapon\n    {\n        public string name;\n        public int damage;\n    } \n    ```", "```cs\n    public Weapon(string name, int damage)\n    {\n        this.name = name;\n        this.damage = damage;\n    } \n    ```", "```cs\n    public void PrintWeaponStats()\n    {\n        Debug.LogFormat(\"Weapon: {0} - {1} DMG\", name, damage);\n    } \n    ```", "```cs\n    Weapon huntingBow = new Weapon(\"Hunting Bow\", 105); \n    ```", "```cs\n    Character hero = new Character();\n    **Character hero2 = hero;**\n\n    hero.PrintStatsInfo();\n    **hero2.PrintStatsInfo();** \n    ```", "```cs\n    Character hero2 = hero;\n    **hero2.name =** **\"Sir Krane the Brave\"****;** \n    ```", "```cs\n    Weapon huntingBow = new Weapon(\"Hunting Bow\", 105);\n    **Weapon warBow = huntingBow;** \n    ```", "```cs\n    **huntingBow.PrintWeaponStats();**\n    **warBow.PrintWeaponStats();** \n    ```", "```cs\n     Weapon warBow = huntingBow;\n     **warBow.name =** **\"War Bow\"****;**\n     **warBow.damage =** **155****;** \n    ```", "```cs\n    private void Reset()\n    {\n        this.name = \"Not assigned\";\n        this.exp = 0;\n    } \n    ```", "```cs\npublic Character()\n{\n    Reset();\n} \n```", "```cs\npublic class Paladin: Character\n{\n} \n```", "```cs\npublic class ChildClass: ParentClass\n{\n    public ChildClass(): **base****()**\n    {\n    }\n} \n```", "```cs\n    public class Paladin: Character\n    {\n    **public****Paladin****(****string** **name****):** **base****(****name****)**\n     **{**\n\n     **}**\n    } \n    ```", "```cs\n    Paladin knight = new Paladin(\"Sir Arthur\");\n    knight.PrintStatsInfo(); \n    ```", "```cs\npublic class Paladin: Character\n{\n   **public** **Weapon weapon;**\n\n    public Paladin(string name, **Weapon weapon**): base(name)\n    {\n        **this****.weapon = weapon;**\n    }\n} \n```", "```cs\nPaladin knight = new Paladin(\"Sir Arthur\", **huntingBow**); \n```", "```cs\n    public **virtual** void PrintStatsInfo()\n    {\n        Debug.LogFormat(\"Hero: {0} - {1} EXP\", name, exp);\n    } \n    ```", "```cs\n    public override void PrintStatsInfo()\n    {\n        Debug.LogFormat(\"Hail {0} - take up your {1}!\", name, \n                 weapon.name);\n    } \n    ```", "```cs\nGameObject.GetComponent<ComponentType>(); \n```", "```cs\n    public Transform CamTransform; \n    ```", "```cs\n    void Start()\n    {\n        CamTransform = this.GetComponent<Transform>();\n        Debug.Log(CamTransform.localPosition); \n    } \n    ```", "```cs\n    public GameObject DirectionLight;\n    public Transform LightTransform; \n    ```", "```cs\n    void Start()\n    {\n        DirectionLight = GameObject.Find(\"Directional Light\"); \n    } \n    ```", "```cs\n    LightTransform = DirectionLight.GetComponent<Transform>();\n    Debug.Log(LightTransform.localPosition); \n    ```", "```cs\n    GameObject.Find(\"Directional Light\").GetComponent<Transform>(); \n    ```", "```cs\n    //DirectionLight = GameObject.Find(\"Directional Light\"); \n    ```"]