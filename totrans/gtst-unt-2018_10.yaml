- en: Scripting Our Points System
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写我们的积分系统脚本
- en: In the last chapter, we designed, developed, and incorporated a **Heads-Up Display**
    (**HUD**) in our game. We used a canvas game object to create text and graphics
    that provide visual indicators of points, health, and additional information to
    help the player maintain situational awareness during game play. In addition,
    we wrote scripts to update key components of the HUD. We also implemented a mini-map
    using a second camera in our game scene.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们设计、开发和整合了游戏中的 **抬头显示** (**HUD**)。我们使用画布 GameObject 创建文本和图形，提供关于积分、健康和额外信息的视觉指示，以帮助玩家在游戏过程中保持态势感知。此外，我们还编写了脚本以更新
    HUD 的关键组件。我们还在游戏场景中使用第二个摄像头实现了迷你地图。
- en: In this chapter, we will design, script, and implement our game's point system.
    This will include providing frame-by-frame updates to key on-screen components
    of the game's HUD.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将设计、编写脚本并实现游戏积分系统。这包括提供游戏 HUD 关键屏幕组件的逐帧更新。
- en: 'Specifically, we will write scripts for the following in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将编写以下脚本的脚本：
- en: Collecting cherries from trees
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从树上收集樱桃
- en: Adding the cherry-throwing capability
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加樱桃投掷功能
- en: Adding points based on cherry collection and combat hits
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据樱桃收集和战斗击中次数添加积分
- en: Collecting cherries from trees
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从树上收集樱桃
- en: 'In this section, we will make the necessary adjustments to our game objects
    and script functionality that enable the collection of cherries from cherry trees.
    More specifically, we will create the following gameplay:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将对游戏对象和脚本功能进行必要的调整，以启用从樱桃树收集樱桃。更具体地说，我们将创建以下游戏玩法：
- en: Detect collisions of Cucumber Man and cherry trees
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测黄瓜人与樱桃树的碰撞
- en: Simulate collection of cherries
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模拟樱桃收集
- en: Update inventory and HUD with cherry count
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新库存和 HUD 中的樱桃计数
- en: Before we get started, you should open your Unity game project. Alternatively,
    you can download the Starting-Chapter-10 Unity project available from the publisher's
    companion site.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，你应该打开你的 Unity 游戏项目。或者，你也可以从出版商的配套网站上下载 Starting-Chapter-10 Unity 项目。
- en: Detecting collisions of Cucumber Man and cherry trees
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测黄瓜人与樱桃树的碰撞
- en: 'In this section, we will enable and test collisions between the Cucumber Man
    and cherry trees. Our first step is to ensure the cherry trees in our sandbox
    area all have the `CherryTree` tag. We previously created the tag name, so we
    only need to apply it to the trees in our sandbox. Here are the steps:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将启用并测试黄瓜人与樱桃树之间的碰撞。我们的第一步是确保沙盒区域中的樱桃树都具有 `CherryTree` 标签。我们之前创建了标签名称，所以我们只需要将其应用到沙盒中的树上。以下是步骤：
- en: In the Hierarchy panel, select a Cherry Tree that is inside your sandbox area
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在层次结构面板中，选择沙盒区域内的一个樱桃树
- en: In the Inspector panel, click the drop-down box to the left of the Tag label
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在检查器面板中，点击标签标签左侧的下拉框
- en: Select the CherryTree tag
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择樱桃树标签
- en: Repeat steps 1 through 3 for each Cherry Tree GameObject in your sandbox area
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于沙盒区域中的每个樱桃树 GameObject，重复步骤 1 到 3
- en: Optionally, repeat steps 1 through 3 for all the Cherry Tree GameObjects in
    the Hierarchy view, not just the ones in your sandbox area
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可选地，对于层次结构视图中的所有樱桃树 GameObject，重复步骤 1 到 3，而不仅仅是你的沙盒区域中的那些
- en: 'Next, we will create a `CucumberManManager` script to handle the collisions
    with the cherry trees. Here are the steps to create that script:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建一个 `CucumberManManager` 脚本来处理与樱桃树的碰撞。以下是创建该脚本的步骤：
- en: In the Hierarchy panel, select the CumcuberMan player character
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在层次结构面板中，选择 CumcuberMan 玩家角色
- en: In the Inspector panel, scroll to the bottom and click the Add Component button
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在检查器面板中，滚动到最底部并点击添加组件按钮
- en: Select New Script
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择新建脚本
- en: Name the script `CucumberManManager`
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将脚本命名为 `CucumberManManager`
- en: Click the Create and Add button
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击创建和添加按钮
- en: In the Project panel, click Favorites | All Scripts
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目面板中，点击收藏 | 所有脚本
- en: Drag the `CucumberManManager` script to the `Assets` | `Custom Scripts` folder
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `CucumberManManager` 脚本拖到 `Assets` | `Custom Scripts` 文件夹
- en: Double-click the `CucumberManManager` script to open it in an editor
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击 `CucumberManManager` 脚本来在编辑器中打开它
- en: 'Edit the script so that it matches the code provided here:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑脚本以匹配此处提供的代码：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The preceding script is a C# script with an `OnTriggerEnter()` method. As you
    can see, we check the tag of what the Cucumber Man collided with to see if that
    game object has a tag of `CherryTree`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的脚本是一个 C# 脚本，包含一个 `OnTriggerEnter()` 方法。正如你所见，我们检查了与黄瓜人碰撞的对象的标签，以查看该游戏对象是否具有
    `CherryTree` 标签。
- en: Next, we need to do something when that collision is detected. We will handle
    that in the next section.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要在检测到碰撞时执行某些操作。我们将在下一节中处理这个问题。
- en: Simulating the collection of cherries
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模拟樱桃的收集
- en: In this section, we will continue working on the `CucumberManManager` script
    to simulate the collection of cherries.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将继续在`CucumberManManager`脚本上工作，以模拟樱桃的收集。
- en: If you do not already have the script open, open it now in an editor. We will
    review the updated code in five sequential sections.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尚未打开脚本，现在在编辑器中打开它。我们将按顺序审查更新的代码的五个部分。
- en: Our first section, shown here, imports the three necessary namespaces.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如下所示，我们的第一部分导入了三个必要的命名空间。
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The fourth line of code is the class declaration statement. The last three
    lines of code in this section are the class variables. Here is a brief description
    of each:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的第四行是类声明语句。本节最后三行代码是该类的变量。以下是每个变量的简要描述：
- en: '`currentCherryCount`: Keep the current number of cherries in the Cucumber Man''s
    inventory'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`currentCherryCount`: 保持黄瓜人库存中的当前樱桃数量'
- en: '`tempCurrentCherryCount`: Used to limit cherry collection to one per second'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tempCurrentCherryCount`: 用于限制樱桃收集每秒最多一个'
- en: '`collectingCherries`: Used to determine whether the inventory counter should
    be active'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`collectingCherries`: 用于确定库存计数器是否应该激活'
- en: 'Our second section, shown as follows, features the `Awake()` method. This method
    is used to initialize our variables at the start of the game:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如下所示，我们的第二部分包含`Awake()`方法。此方法用于在游戏开始时初始化我们的变量：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Our third section, shown here, features the `Update()` method. This method is
    executed once per frame. We have an if/else statement nested in an outer if statement.
    This outer statement checks to see whether the `collectingCherries` Boolean value
    is true. If it is, the inner if/else statement block is evaluated.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如下所示，我们的第三部分包含`Update()`方法。此方法每帧执行一次。我们在外层if语句中嵌套了一个if/else语句。外层语句检查`collectingCherries`布尔值是否为真。如果是，则评估内层if/else语句块。
- en: 'The inner if/else block checks to see whether the `tempCurrentCherryCount`
    variable''s value is greater than or equal to `60`. If it is, then the `currentCherryCount`
    value is incremented by one; otherwise, the `tempCurrentCherryCount` value is
    incremented by one. The `Update()` method is called once per frame and frame rates
    can vary. So, we are essentially adding one cherry to the Cucumber Man''s inventory
    every 60 frames:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 内层if/else块检查`tempCurrentCherryCount`变量的值是否大于或等于`60`。如果是，则将`currentCherryCount`值增加一；否则，将`tempCurrentCherryCount`值增加一。`Update()`方法每帧调用一次，帧率可能不同。因此，我们实际上每60帧向黄瓜人的库存中添加一个樱桃：
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Our fourth section, shown in the following code block, contains the `OnTriggerEnter()`
    method we started in the last section. We edited this method to include an if
    statement that checks to see whether the Cucumber Man has entered a collision
    with a cherry tree. If so, the `collectingCherries` Boolean variable is set to
    `true` and one cherry is added to the inventory:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如下所示代码块中的第四部分包含我们在上一节中开始的`OnTriggerEnter()`方法。我们编辑了此方法，包括一个if语句，检查黄瓜人是否进入与樱桃树的碰撞。如果是，则将`collectingCherries`布尔变量设置为`true`，并将一个樱桃添加到库存中：
- en: '[PRE4]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Our fifth section, shown as follows, has the `OnTriggerExit()` method. This
    event is fired when the Cucumber Man stops colliding with the cherry trees. When
    this occurs, we set the `collectingCherries` Boolean value to `false`:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如下所示，我们的第五部分包含`OnTriggerExit()`方法。当黄瓜人停止与樱桃树碰撞时，将触发此事件。当发生这种情况时，我们将`collectingCherries`布尔值设置为`false`：
- en: '[PRE5]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Updating the inventory and HUD with cherry count
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新库存和HUD上的樱桃计数
- en: We now have a system in place for adding cherries to the Cucumber Man's inventory
    based on his collision with cherry trees. Next, we need to update the appropriate
    UI text component with the current inventory amount. We will take care of this
    important task in this section.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经建立了一个系统，可以根据黄瓜人与樱桃树的碰撞向黄瓜人的库存中添加樱桃。接下来，我们需要更新适当的UI文本组件以显示当前库存量。我们将在这个部分处理这个重要任务。
- en: 'Here are the steps to create that script:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是创建该脚本的步骤：
- en: In the Hierarchy panel, select the `HUD_Canvas` | `Cherries_Count` UI text component
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在层次结构面板中，选择`HUD_Canvas` | `Cherries_Count` UI文本组件
- en: In the Inspector panel, scroll to the bottom and click the Add Component button
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在检查器面板中，滚动到最底部并点击“添加组件”按钮
- en: Select New Script
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“新建脚本”
- en: Name the script `CherryManager`
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将脚本命名为`CherryManager`
- en: Click the Create and Add button
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建并添加”按钮
- en: In the Project panel, click Favorites | All Scripts
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目面板中，单击收藏夹 | 所有脚本
- en: Drag the `CherryManager` script to the `Assets` | `Custom Scripts` folder
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `CherryManager` 脚本拖到 `Assets` | `Custom Scripts` 文件夹
- en: Double-click the `CherryManager` script to open it in an editor
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击 `CherryManager` 脚本以在编辑器中打开它
- en: Edit the script so that it matches the code provided here
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑脚本，使其与这里提供的代码匹配
- en: 'An explanation of this code is provided immediately following the code block:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块后面的代码提供了对此代码的解释：
- en: '[PRE6]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The first four lines of code import the appropriate namespaces.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的前四行导入适当的命名空间。
- en: 'The next line of code is the class declaration: `public class CherryManager
    : MonoBehaviour {`.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '下一行代码是类声明：`public class CherryManager : MonoBehaviour {`。'
- en: Next is the single class variable, a `text` object named `Cherries_Count`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是单个类变量，一个名为 `Cherries_Count` 的 `text` 对象。
- en: The first method in the class is the `Awake()` method. We use this method to
    create a reference to the `Cherries_Count` UI text component.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 类中的第一个方法是 `Awake()` 方法。我们使用此方法创建对 `Cherries_Count` UI 文本组件的引用。
- en: The last section of our `CherryManager` class is the `Update()` method. That
    method has a single statement used to convert the `currentCherryCount` from an
    `int` to a string and update the HUD.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们 `CherryManager` 类的最后一部分是 `Update()` 方法。该方法有一个用于将 `currentCherryCount` 从 `int`
    转换为字符串并更新 HUD 的单个语句。
- en: You can play-test the game to validate the functionality. Simply navigate the
    Cucumber Man to a cherry tree and watch the inventory of cherries increase. It
    is important for us to have a method of collecting cherries because the player
    can press the *E* key on the keyboard to throw a cherry. We will program that
    functionality in the next section.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以玩测试游戏以验证功能。只需将黄瓜人导航到樱桃树旁，并观察樱桃库存增加。对我们来说，有一个收集樱桃的方法很重要，因为玩家可以按键盘上的 *E* 键扔出樱桃。我们将在下一节中编写该功能。
- en: Now is a great time to save your scene and project.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是保存您的场景和项目的绝佳时机。
- en: Adding the cherry-throwing capability
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加樱桃投掷功能
- en: In [Chapter 7](6a3fb463-b0c2-4145-9096-bc52d55cf905.xhtml), *Implementing our
    Player Character*, we demonstrated the Cucumber Man's throw animation using the
    *E* keyboard key. In this section, we will make the necessary changes to instantiate
    a cherry in the Cucumber Man's right hand when the *E* keyboard key is pressed
    and then allow it to be launched. We will check to ensure the Cucumber Man has
    at least one cherry in his inventory so we know whether a cherry should be instantiated
    or not. Okay, let's get started.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第 7 章](6a3fb463-b0c2-4145-9096-bc52d55cf905.xhtml)，*实现我们的玩家角色*中，我们展示了使用 *E*
    键盘键的黄瓜人投掷动画。在本节中，我们将进行必要的更改，以便在按下 *E* 键盘键时在黄瓜人右手内部实例化一个樱桃，并允许它被发射。我们将检查黄瓜人是否至少有一个樱桃在库存中，这样我们就可以知道是否应该实例化樱桃。好的，让我们开始吧。
- en: Creating a spot for the cherry
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建樱桃的位置
- en: The following steps demonstrate how to create a spot for the cherry on the Cucumber
    Man's right hand.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤演示了如何在黄瓜人右手创建樱桃的位置。
- en: In the Hierarchy panel, expand the `CucumberMan` object until you see `Character1_RightHand`.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在层次结构面板中，展开 `CucumberMan` 对象，直到看到 `Character1_RightHand`。
- en: Right-click `Character1_RightHand` and select Create Empty.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击 `Character1_RightHand` 并选择创建空对象。
- en: Rename the new GameObject to `cherrySpot`. This will be the spot where we render
    the cherry.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新游戏对象重命名为 `cherrySpot`。这将是我们渲染樱桃的位置。
- en: 'Your `CucumberMan` object''s hierarchy should look as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 您的 `CucumberMan` 对象的层次结构应如下所示：
- en: '![](img/86af7308-f77d-4295-b9a5-b8bdd514e8b3.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/86af7308-f77d-4295-b9a5-b8bdd514e8b3.png)'
- en: 'Using the transform tools, move the `cherrySpot` GameObject so that it is inside
    the Cucumber Man''s right hand. Your placement should be similar to what is displayed
    here:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用变换工具，将 `cherrySpot` 游戏对象移动到黄瓜人右手内部。您的放置应类似于以下显示：
- en: '![](img/138608f2-0cc2-439e-b244-d9f329a84c23.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/138608f2-0cc2-439e-b244-d9f329a84c23.png)'
- en: We will need to add a `Rigidbody` to the `Cherry` prefab so we can instantiate
    and throw it during runtime.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要将 `Rigidbody` 添加到 `Cherry` 预制件中，以便在运行时实例化和投掷它。
- en: In the Project panel, select Assets | Cherry | `Cherry.Prefab`
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目面板中，选择资产 | 樱桃 | `Cherry.Prefab`
- en: In the Inspector panel, click the Add Component button
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在检查器面板中，单击添加组件按钮
- en: Select Physics | Rigidbody
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择物理 | 刚体
- en: Uncheck the Use Gravity option
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消选中使用重力选项
- en: Expand the Constraints section of the Rigidbody component
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 展开刚体组件的约束部分
- en: Check all Freeze Position and Freeze Rotation boxes
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择所有冻结位置和冻结旋转框
- en: Next, we will add the `Cherry` prefab to our scene.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将把樱桃预制件添加到我们的场景中。
- en: Drag the Cherry prefab from the Project panel to the Hierarchy panel, making
    it subordinate to the cherrySpot game object.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将樱桃预制件从项目面板拖动到层次结构面板，使其成为cherrySpot游戏对象的子对象。
- en: 'In Scene view, zoom in and adjust the location of the cherrySpot so the cherry
    looks as if the Cucumber Man is holding it. A suggested placement is shown here:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在场景视图中，放大并调整cherrySpot的位置，使樱桃看起来像黄瓜人拿着它。建议的位置如下：
- en: '![](img/f2146f28-d1c8-4e6c-b615-06a5b2d39e9c.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f2146f28-d1c8-4e6c-b615-06a5b2d39e9c.png)'
- en: Writing a CherryControl script
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写CherryControl脚本
- en: Next, we will add a script to the cherry prefab to support the creation and
    release of the cherry with respect to the Cucumber Man's hand.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将为樱桃预制件添加一个脚本，以支持根据黄瓜人手的位置创建和释放樱桃。
- en: In the Project panel, select Assets | Cherry | `Cherry.Prefab`
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目面板中，选择资产 | 樱桃 | `Cherry.Prefab`
- en: In the Inspector panel, click the Add Component button
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在检查器面板中，点击添加组件按钮
- en: Select New Script and name the script CherryControl
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择新建脚本并命名为CherryControl
- en: Click the Create and Add button
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击创建并添加按钮
- en: In the Project panel, drag the new script into the `Assets` | `Custom Scripts`
    folder
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目面板中，将新脚本拖动到`Assets` | `Custom Scripts`文件夹
- en: Edit the script so that it matches what is provided in the following code block
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑脚本以匹配以下代码块
- en: 'The first part of the script consists of the namespace import statements and
    the class declaration:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本的第一部分由命名空间导入语句和类声明组成：
- en: '[PRE7]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The next section contains the class variables. We have one `Rigidbody`, two
    floats, and a `GameObject`:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个部分包含类变量。我们有一个`Rigidbody`，两个浮点数和一个`GameObject`：
- en: '[PRE8]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The `Update()` method, shown here, checks to see whether the *E* keyboard key
    is pressed and whether the Cucumber Man has at least one cherry:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这里显示的`Update()`方法检查是否按下了*E*键，以及黄瓜人是否至少有一个樱桃：
- en: '[PRE9]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The last section of the code is the `ThrowACherry()` method. As you can see,
    we clone the cherry at the Cucumber Man''s hand, turn gravity on, release the
    constraints, and push it forward using the `AddForce()` method. Next, we use the
    `Destroy()` method to destroy the cloned cherry in four seconds. The last statement
    decrements the Cucumber Man''s cherry inventory:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的最后部分是`ThrowACherry()`方法。如您所见，我们在黄瓜人手中克隆了樱桃，打开重力，释放约束，并使用`AddForce()`方法将其向前推。接下来，我们使用`Destroy()`方法在四秒后销毁克隆的樱桃。最后一条语句减少黄瓜人的樱桃库存：
- en: '[PRE10]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Adding points based on cherry collection and combat hits
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 根据樱桃收集和战斗击中添加积分
- en: 'In this section, we will edit the appropriate scripts so that the Cucumber
    Man can earn points, related to cherries, based on the following criteria:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将编辑适当的脚本，以便黄瓜人可以根据以下标准获得与樱桃收集和战斗击中相关的积分：
- en: '| **In-game event** | **Points** |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| **游戏内事件** | **积分** |'
- en: '| Cucumber Man picks cherry | + 5 |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| 黄瓜人捡起樱桃 | + 5 |'
- en: '| Cucumber Man hits beetle with cherry | + 10 |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| 黄瓜人用樱桃击中甲虫 | + 10 |'
- en: Creating a points manager script
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建积分管理器脚本
- en: 'In this section, we will create and edit a script to manage our points and
    to display them on our game''s HUD. Here are the steps:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将创建和编辑一个脚本以管理我们的积分并在游戏HUD上显示它们。以下是步骤：
- en: In the Hierarchy panel, select the HUD_Canvas | Score_Value
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在层次结构面板中，选择HUD_Canvas | Score_Value
- en: In the Inspector panel, click the Add Component button
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在检查器面板中，点击添加组件按钮
- en: Select New Script and name the script `PointsManager`
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择新建脚本并命名为`PointsManager`
- en: In the Project panel, click Favorites | All Scripts
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目面板中，点击收藏 | 所有脚本
- en: Drag the PointsManager script to the Assets | `Custom Scripts` folder
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将PointsManager脚本拖动到`Assets` | `Custom Scripts`文件夹
- en: Double-click the PointsManager script to open it in an editor
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击PointsManager脚本以在编辑器中打开它
- en: Edit the script so that it matches the following code
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑脚本以匹配以下代码
- en: 'The first section of the code contains the namespace import statements and
    the `PointsManager` class declaration:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的第一部分包含命名空间导入语句和`PointsManager`类声明：
- en: '[PRE11]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The next section of the script declares two class variables; one for the current
    score and the other is a reference to the `Text` UI component that displays the
    score during game play:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本的下一部分声明了两个类变量；一个用于当前分数，另一个是显示游戏过程中分数的`Text` UI组件的引用：
- en: '[PRE12]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The first method in our class is the `Awake()` method. We use this method to
    initialize our variables:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们类中的第一个方法是`Awake()`方法。我们使用此方法来初始化我们的变量：
- en: '[PRE13]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The last section of our class is the `Update()` method. Here, we have a single
    statement that converts the current score to a string and then updates the HUD:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们类中的最后一部分是`Update()`方法。在这里，我们有一个将当前分数转换为字符串并更新HUD的单一语句：
- en: '[PRE14]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Adding points for each cherry picked
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为每次摘取的樱桃增加分数
- en: 'In this section, we will edit the appropriate script to add five points for
    each cherry picked. Here are the steps:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将编辑适当的脚本，为每次摘取的樱桃增加5分。以下是步骤：
- en: In the Project panel, select the Custom Scripts | CucumberManManager
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目面板中，选择自定义脚本 | CucumberManManager
- en: Edit the script
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑脚本
- en: 'Add the following class variable: public `PointsManager _ptsManager;`'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下类变量：public `PointsManager _ptsManager;`
- en: 'Add the following lines of code inside the nested if statement in the `Update()`
    method:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Update()`方法中的嵌套if语句内添加以下代码行：
- en: '[PRE15]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The two lines of preceding code create a reference to the `PointsManager` script
    and, on the second line, increments the `currentScore` by 5.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 前两行代码创建了对`PointsManager`脚本的引用，并在第二行将`currentScore`增加了5分。
- en: 'The updated `CucumberManManager` script should be as follows:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 更新后的`CucumberManManager`脚本应如下所示：
- en: '[PRE16]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Adding points for hitting a beetle with a cherry
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为用樱桃击中甲虫增加分数
- en: 'Our last points-related task is to update the BeetleNPC script so that appropriate
    points are added when a cherry hits a cucumber beetle. Here are the steps:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最后一个与分数相关任务是更新BeetleNPC脚本，以便当樱桃击中黄瓜甲虫时添加适当的分数。以下是步骤：
- en: In the Project panel, select the Custom Scripts | BeetleNPC
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目面板中，选择自定义脚本 | BeetleNPC
- en: Edit the script
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑脚本
- en: Add the following class variable:  `public PointsManager _ptsManager;`
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下类变量：`public PointsManager _ptsManager;`
- en: 'Add the following lines of code inside the nested else if statement in the
    `OnTriggerEnter()` method:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`OnTriggerEnter()`方法中的嵌套else if语句内添加以下代码行：
- en: '[PRE17]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The two preceding lines of code create a reference to the `PointsManager` script
    and, on the second line, increment the `currentScore` by `10`.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 前两行代码创建了对`PointsManager`脚本的引用，并在第二行将`currentScore`增加了10分。
- en: 'The updated `BeetleNPC` script''s `OnTriggerEnter()` method should be as follows:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 更新后的`BeetleNPC`脚本的`OnTriggerEnter()`方法应如下所示：
- en: '[PRE18]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Summary
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we designed, scripted, and implemented our game's point system.
    This included providing frame-by-frame updates to key on-screen components of
    the game's HUD. Our scripts enabled the collection of cherries from cherry trees,
    adding the cherry-throwing capability for our Cucumber Man. We also added points
    based on the collection of cherries and combat hits.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们设计、编写和实现了游戏分数系统。这包括为游戏HUD的关键屏幕组件提供逐帧更新。我们的脚本使收集樱桃树上的樱桃成为可能，为我们的Cucumber
    Man添加了樱桃投掷功能。我们还根据樱桃的收集和战斗击中添加了分数。
- en: In [Chapter 11](7098e2ac-1871-4cb2-98ba-36f3acdb0515.xhtml), *Scripting Victory
    and Defeat*, we will design and script our game's victory and defeat conditions.
    This will include managing the Cucumber Man's health, lives remaining, and respawning
    the player character.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第11章](7098e2ac-1871-4cb2-98ba-36f3acdb0515.xhtml)，*脚本编写胜利与失败*中，我们将设计和编写游戏胜利和失败条件的脚本。这包括管理Cucumber
    Man的生命值、剩余生命和玩家角色的重生。
