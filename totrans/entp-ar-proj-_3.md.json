["```cs\n<uses-permission android:name=\"android.permission.CAMERA\" />\n<uses-feature android:name=\"android.hardware.camera.ar\" /> \n```", "```cs\n<application\n    ...\n    <meta-data android:name=\"com.google.ar.core\" android:value=\"required\" />\n</application>\n```", "```cs\nallprojects {\n    repositories {\n        google()\n```", "```cs\ndependencies {\n    ...\n    implementation 'com.google.ar:core:1.13.0'\n    ...\n}\n```", "```cs\nandroid {\n    ...\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n}\n```", "```cs\ndependencies {\n    ...\n    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.13.0'\n    ...\n}\n```", "```cs\n<fragment android:name=\"com.google.ar.sceneform.ux.ArFragment\"\n    android:id=\"@+id/ux_fragment\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" />\n```", "```cs\nsceneform.asset('sampledata/engine/engine.obj',\n        'default',\n        'sampledata/engine/engine.sfa',\n        'src/main/assets/engine')\n```", "```cs\nimport android.net.Uri;\nimport android.view.Gravity;\nimport android.view.MotionEvent;\nimport android.widget.Toast;\nimport com.google.ar.core.Anchor;\nimport com.google.ar.core.HitResult;\nimport com.google.ar.core.Plane;\nimport com.google.ar.sceneform.AnchorNode;\nimport com.google.ar.sceneform.rendering.ModelRenderable;\nimport com.google.ar.sceneform.ux.ArFragment;\nimport com.google.ar.sceneform.ux.TransformableNode;\n```", "```cs\nprivate ArFragment arFragment;\nprivate ModelRenderable modelRenderable;\n```", "```cs\nprotected void onCreate(Bundle savedInstanceState) {\n    ...\n    arFragment = (ArFragment) getSupportFragmentManager().findFragmentById(R.id.ux_fragment);\n```", "```cs\nModelRenderable.builder()\n        .setSource(this, Uri.parse(\"engine.sfb\"))\n        .build()\n        .thenAccept(renderable -> modelRenderable = renderable)\n        .exceptionally(\n                throwable -> {\n                    Toast toast = Toast.makeText(this, \"Unable to \n                    load the model\", Toast.LENGTH_LONG);\n                    toast.setGravity(Gravity.CENTER, 0, 0);\n                    toast.show();\n                    return null;\n                });\n```", "```cs\narFragment.setOnTapArPlaneListener(\n (HitResult hitResult, Plane plane, MotionEvent motionEvent) -> {\n if (modelRenderable == null) \n return;\n\n Anchor anchor = hitResult.createAnchor();\n AnchorNode anchorNode = new AnchorNode(anchor);\n anchorNode.setParent(arFragment.getArSceneView().getScene());\n\n TransformableNode model = new TransformableNode(arFragment.getTransformationSystem());\n model.setParent(anchorNode);\n model.setRenderable(modelRenderable);\n model.select();\n });\n```", "```cs\n<activity android:name=\".MainActivity\" android:screenOrientation=\"portrait\">\n```", "```cs\n<activity android:name=\".MainActivity\" android:screenOrientation=\"landscape\">\n```", "```cs\nprivate Anchor anchor;\nprivate AnchorNode anchorNode;\nprivate TransformableNode model;\n```", "```cs\nprotected void onCreate(Bundle savedInstanceState) {\n    ...\n    arFragment.setOnTapArPlaneListener(\n            (HitResult hitResult, Plane plane, MotionEvent motionEvent) -> {\n                if (modelRenderable == null)\n                    return;\n\n                //Remove previous anchor\n                if (anchor != null)\n                {\n                    arFragment.getArSceneView().getScene().removeChild(anchorNode);\n                    anchor.detach();\n                    anchorNode.setParent(null);\n                    anchorNode = null;\n                }\n```", "```cs\nanchor = hitResult.createAnchor();\nanchorNode = new AnchorNode(anchor);\n...\nmodel = new TransformableNode(arFragment.getTransformationSystem());\n```", "```cs\nimport com.google.ar.sceneform.math.Quaternion;\nimport com.google.ar.sceneform.math.Vector3;\n```", "```cs\nmodel.setLocalScale(new Vector3(0.55f, 0.55f, 0.55f));\nmodel.setLocalRotation(Quaternion.eulerAngles(new Vector3(-90,45,0)));\n```", "```cs\n<LinearLayout\n    android:orientation=\"horizontal\"\n    android:paddingLeft=\"4dp\"\n    android:paddingTop=\"15dp\"\n    android:paddingRight=\"4dp\"\n    android:paddingBottom=\"1dp\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    app:layout_constraintBottom_toBottomOf=\"@+id/ux_fragment\">\n```", "```cs\n<LinearLayout\n    android:orientation=\"vertical\"\n    ...\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"match_parent\"\n    app:layout_constraintRight_toRightOf=\"@+id/ux_fragment\">\n```", "```cs\n<ImageButton\n    android:id=\"@+id/engine1_button\"\n    android:layout_width=\"wrap_content\"\n android:layout_height=\"wrap_content\"\n android:layout_margin=\"10dp\"\n    android:src=\"img/engine1\"\n    android:background=\"#7cc53a\"\n    android:layout_weight=\"1.0\"/>\n\n<ImageButton\n    android:id=\"@+id/engine2_button\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_margin=\"10dp\"\n    android:src=\"img/engine2\"\n    android:background=\"#40000000\"\n    android:layout_weight=\"1.0\" />\n\n<ImageButton\n    android:id=\"@+id/engine3_button\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_margin=\"10dp\"\n    android:src=\"img/engine3\"\n    android:background=\"#40000000\"\n    android:layout_weight=\"1.0\" />\n```", "```cs\n</LinearLayout>\n```", "```cs\nimport android.widget.ImageButton;\nimport android.view.View;\n```", "```cs\nprivate ModelRenderable modelRenderable2;\nprivate ModelRenderable modelRenderable3;\nprivate ModelRenderable currentRenderable;\n```", "```cs\nprivate ImageButton button1;\nprivate ImageButton button2;\nprivate ImageButton button3;\n```", "```cs\nModelRenderable.builder()\n        .setSource(this, Uri.parse(\"engine2.sfb\"))\n        .build()\n        .thenAccept(renderable -> modelRenderable2 = renderable)\n        .exceptionally(\n                throwable -> {\n                    Toast toast = Toast.makeText(this, \"Unable to load andy renderable\", Toast.LENGTH_LONG);\n                    toast.setGravity(Gravity.CENTER, 0, 0);\n                    toast.show();\n                    return null;\n                });\n\nModelRenderable.builder()\n        .setSource(this, Uri.parse(\"engine3.sfb\"))\n        .build()\n        .thenAccept(renderable -> modelRenderable3 = renderable)\n        .exceptionally(\n                throwable -> {\n                    Toast toast = Toast.makeText(this, \"Unable to load andy renderable\", Toast.LENGTH_LONG);\n                    toast.setGravity(Gravity.CENTER, 0, 0);\n                    toast.show();\n                    return null;\n                });\n```", "```cs\n.thenAccept(renderable -> currentRenderable = modelRenderable = renderable)\n```", "```cs\nif (currentRenderable == null)\n    return;\n...\nmodel.setRenderable(currentRenderable);\n```", "```cs\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener\n```", "```cs\nbutton1 = findViewById(R.id.engine1_button);\nbutton2 = findViewById(R.id.engine2_button);\nbutton3 = findViewById(R.id.engine3_button);\n\nbutton1.setOnClickListener(this);\nbutton2.setOnClickListener(this);\nbutton3.setOnClickListener(this);\n```", "```cs\n@Override\npublic void onClick(View view)\n{\n    switch (view.getId()) {\n        case R.id.engine1_button:\n            currentRenderable = modelRenderable;\n            button1.setBackgroundColor(0xFFA4FF50);\n            button2.setBackgroundColor(0x40000000);\n            button3.setBackgroundColor(0x40000000);\n            break;\n        case R.id.engine2_button:\n            currentRenderable = modelRenderable2;\n            button1.setBackgroundColor(0x40000000);\n            button2.setBackgroundColor(0xFFA4FF50);\n            button3.setBackgroundColor(0x40000000);\n            break;\n        case R.id.engine3_button:\n            currentRenderable = modelRenderable3;\n            button1.setBackgroundColor(0x40000000);\n            button2.setBackgroundColor(0x40000000);\n            button3.setBackgroundColor(0xFFA4FF50);\n            break;\n    }\n    model.setRenderable(currentRenderable);\n}\n```"]