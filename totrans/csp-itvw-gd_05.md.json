["```cs\npublic class Program\n{\n    public static void Main(string[] args)\n    {\n        // program code\n    }\n}\n```", "```cs\npublic class Vector\n{\n    public int X { get; set; }\n    public int Y { get; set; }\n    public Vector(int x, int y)\n    {\n        X = x;\n        Y = y;\n    }\n    // Overload + operator\n    public static Vector operator +(Vector v1, Vector v2)\n    {\n        return new Vector(v1.X + v2.X, v1.Y + v2.Y);\n    }\n}\n// Usage:\nVector vector1 = new Vector(1, 2);\nVector vector2 = new Vector(2, 3);\nVector result = vector1 + vector2;  // This will call the overloaded + operator\n```", "```cs\nfor (int i = 0; i < 3; i++)\n{\n    for (int j = 0; j < 3; j++)\n    {\n        Console.WriteLine($\"i = {i}, j = {j}\");\n    }\n}\n```", "```cs\nfor(;;)\n{\n// loop code\n}\n```", "```cs\n    public class Book\n    ```", "```cs\n    {\n    ```", "```cs\n        public string Title { get; set; }\n    ```", "```cs\n    }\n    ```", "```cs\n    public class Library\n    ```", "```cs\n    {\n    ```", "```cs\n        public List<Book> Books { get; set; }\n    ```", "```cs\n        public Library()\n    ```", "```cs\n        {\n    ```", "```cs\n            Books = new List<Book>();\n    ```", "```cs\n        }\n    ```", "```cs\n    }\n    ```", "```cs\n    public class Engine\n    ```", "```cs\n    {\n    ```", "```cs\n        public string Model { get; set; }\n    ```", "```cs\n    }\n    ```", "```cs\n    public class Car\n    ```", "```cs\n    {\n    ```", "```cs\n        public Engine CarEngine { get; set; }\n    ```", "```cs\n        public Car(Engine engine)\n    ```", "```cs\n        {\n    ```", "```cs\n            CarEngine = engine;\n    ```", "```cs\n        }\n    ```", "```cs\n    }\n    ```"]