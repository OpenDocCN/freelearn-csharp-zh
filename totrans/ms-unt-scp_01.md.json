["```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class MyNewScript : MonoBehaviour \n05 {\n06     public string PlayerName = \"\";\n07     public int PlayerHealth = 100;\n08     public Vector3 Position = Vector3.zero;\n09 \n10     // Use this for initialization\n11     void Start () {\n12 \n13     }\n14 \n15     // Update is called once per frame\n16     void Update () {\n17 \n18     }\n19 }\n```", "```cs\nPlayerName = \"NewName\";\n```", "```cs\n//Variable will result to 50, because: 100 x 0.5 = 50\nPlayerHealth = 100 * 0.5;\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class MyScriptFile : MonoBehaviour \n05 {\n06     public string PlayerName = \"\";\n07     public int PlayerHealth = 100;\n08     public Vector3 Position = Vector3.zero;\n09 \n10     // Use this for initialization\n11     void Start () {\n12     }\n13 \n14     // Update is called once per frame\n15     void Update () \n16     {\n17         //Check player health - the braces symbol {} are option for one-line if-statements\n18         if(PlayerHealth == 100)\n19         {\n20         Debug.Log (\"Player has full health\");\n21         }\n22     }\n23 }\n```", "```cs\nif(PlayerHealth >= 0 && PlayerHealth <= 100 && PlayerHealth !=50)\n{\nDebug.Log (\"Player has full health\");\n}\n```", "```cs\nif(MyCondition)\n{\n//X - perform my code if MyCondition is true\n}\nelse\n{\n//Y â€“ perform my code if MyCondition is false\n}\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class MyScriptFile : MonoBehaviour \n05 {\n06     //Define possible states for enemy using an enum\n07     public enum EnemyState {CHASE, FLEE, FIGHT, HIDE};\n08 \n09     //The current state of enemy\n10     public EnemyState ActiveState = EnemyState.CHASE;\n11 \n12     // Use this for initialization\n13     void Start () {\n14     }\n15 \n16     // Update is called once per frame\n17     void Update () \n18     {\n19          //Check the ActiveState variable\n20          switch(ActiveState)\n21          {\n22          case EnemyState.FIGHT:\n23          {\n24                //Perform fight code here\n25                Debug.Log (\"Entered fight state\");\n26          }\n27                break;\n28 \n29 \n30          case EnemyState.FLEE:\n31          case EnemyState.HIDE:\n32          {\n33               //Flee and hide performs the same behaviour\n34               Debug.Log (\"Entered flee or hide state\");\n35          }\n36               break;\n37 \n38          default:\n39          {\n40               //Default case when all other states fail\n41               //This is used for the chase state\n42               Debug.Log (\"Entered chase state\");\n43           }\n44               break;\n45           }\n46     }\n47 }\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class MyScriptFile : MonoBehaviour \n05 {\n06     //Array of game objects in the scene\n07     public GameObject[] MyObjects;\n08 \n09      // Use this for initialization\n10      void Start ()\n11      {\n12       }\n13 \n14       // Update is called once per frame\n15       void Update () \n16       {\n17       }\n18 }\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class MyScriptFile : MonoBehaviour \n05 {\n06     //Array of game objects in the scene\n07     public GameObject[] MyObjects;\n08 \n09     // Use this for initialization\n10     void Start ()\n11     {\n12          //Build the array manually in code\n13          MyObjects = new GameObject[3];\n14          //Scene must have a camera tagged as MainCamera\n15          MyObjects[0] = Camera.main.gameObject; \n\n16       //Use GameObject.Find function to\n17       //find objects in scene by name\n18       MyObjects[1] = GameObject.Find(\"Cube\"); \n19       MyObjects[2] = GameObject.Find(\"Cylinder\"); \n20     }\n21 \n22     // Update is called once per frame\n23     void Update ()\n24     {\n25     }\n26 }\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class MyScriptFile : MonoBehaviour \n05 {\n06     //Array of game objects in the scene\n07     public GameObject[] MyObjects;\n08 \n09     // Use this for initialization\n10     void Start ()\n11     {\n12          //Repeat code for all objects in array, one by one\n13          foreach(GameObject Obj in MyObjects)\n14          {\n15              //Destroy object\n16              Destroy (Obj);\n17          }\n18    }\n19 \n20    // Update is called once per frame\n21    void Update () \n22    {\n23    }\n24 }\n```", "```cs\n//Repeat code backwards for all objects in array, one by one\nfor(int i = MyObjects.Length-1; i >= 0; i--)\n{\n   //Destroy object\n   DestroyMyObjects[i]);\n}\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class MyScriptFile : MonoBehaviour \n05 {\n06     // Use this for initialization\n07     void Start ()\n08    {\n09         //Will count how many messages have been printed\n10         int NumberOfMessages = 0;\n11 \n12         //Loop until 5 messages have been printed to the console\n13         while(NumberOfMessages < 5) \n14         {\n15              //Print message\n\n16              Debug.Log (\"This is Message: \" + NumberOfMessages.ToString());\n\n17 \n18              //Increment counter\n19              ++NumberOfMessages;\n20         }\n21    }\n22 \n23    // Update is called once per frame\n24    void Update () \n25    {\n26    }\n27 }\n```", "```cs\n//Loop forever\nwhile(true)\n{\n}\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class MyScriptFile : MonoBehaviour \n05 {\n06     //Private variable for score\n07     //Accessible only within this class\n08     private int Score = 0;\n09 \n10     // Use this for initialization\n11     void Start ()\n12    {\n13       //Call update score\n14       UpdateScore(5, false); //Add five points\n15       UpdateScore (10, false); //Add ten points\n\n16       int CurrentScore = UpdateScore (15, false); //Add fifteen points and store result\n\n17 \n18       //Now double score\n19        UpdateScore(CurrentScore);\n20     }\n21 \n22     // Update is called once per frame\n23     void Update () \n24     {\n25     }\n26 \n27     //Update game score\n\n28     public int UpdateScore (int AmountToAdd, bool PrintToConsole = true)\n\n29     {\n30       //Add points to score\n31       Score += AmountToAdd;\n32 \n33       //Should we print to console?\n\n34       if(PrintToConsole){Debug.Log (\"Score is: \" + Score.ToString());}\n\n35 \n36       //Output current score and exit function\n37       return Score;\n38     }\n39 }\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class MyScriptFile : MonoBehaviour \n05 {\n06     // Use this for initialization\n07     void Start ()\n08     {\n09     }\n10 \n11     // Update is called once per frame\n12     void Update () \n13     {\n14       //Rotate object by 2 degrees per frame around the Y axis\n15       transform.Rotate(new Vector3(0.0f, 2.0f, 0.0f));\n16     }\n17 }\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class Orc : MonoBehaviour \n05 {\n06 //Reference to the transform component of orc (position, rotation, scale)\n07 private Transform ThisTransform = null;\n08 \n09 //Enum for states of orc\n10 public enum OrcStates {NEUTRAL, ATTACK_MELEE, ATTACK_RANGE};\n11 \n12 //Current state of orc\n13 public OrcStates CurrentState = OrcStates.NEUTRAL;\n14 \n15 //Movement speed of orc in meters per second\n16 \tpublic float OrcSpeed = 10.0f;\n17 \n18 //Is orc friendly to player\n19 public bool isFriendly = false;\n20 \n21 //--------------------------------------------------\n22 // Use this for initialization\n23 void Start ()\n24 {\n25       //Get transform of orc\n26       ThisTransform = transform;\n27 }\n28 //--------------------------------------------------\n29 // Update is called once per frame\n30 void Update ()\n31 {\n32 }\n33 //--------------------------------------------------\n34 //State actions for orc\n35 public void AttackMelee()\n36 {\n37        //Do melee attack here\n38 }\n39 //--------------------------------------------------\n40 public void AttackRange()\n41 {\n42        //Do range attack here\n43 }\n44 //--------------------------------------------------\n45 }\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class NewScript : MonoBehaviour \n05 {\n06 //--------------------------------------------------\n07    // Use this for initialization\n08    void Start ()\n09    {\n10       name = \"NewObject\";\n11 }\n12    //--------------------------------------------------\n13    // Update is called once per frame\n14    void Update ()\n15    {\n16    }\n17 }\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class MyCharacter\n05 {\n06 public string CharName = \"\";\n07 public int Health = 100;\n08 public int Strength = 100;\n09 public float Speed = 10.0f;\n10 public bool isAwake = true;\n11 \n12     //Offer greeting to the player when entering conversation\n13     public virtual void SayGreeting()\n14     {\n15         Debug.Log (\"Hello, my friend\");\n16     }\n17 }\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 //-------------------------------------------\n04 public class MyCharacter\n05    {\n06    public string CharName = \"\";\n07    public int Health = 100;\n08 public int Strength = 100;\n09 public float Speed = 10.0f;\n10 public bool isAwake = true;\n11 \n12 //Offer greeting to the player when entering conversation\n13 public virtual void SayGreeting()\n14 {\n15        Debug.Log (\"Hello, my friend\");\n16 \t}\n17 }\n18 //-------------------------------------------\n19 public class ManCharacter: MyCharacter\n20 {\n21 public override void SayGreeting()\n22 {\n23        Debug.Log (\"Hello, I'm a man\");\n24 }\n25 }\n26 //-------------------------------------------\n27 public class WomanCharacter: MyCharacter\n28 {\n29 public override void SayGreeting()\n30 {\n31        Debug.Log (\"Hello, I'm a woman\");\n32 }\n33 }\n34 //-------------------------------------------\n35 public class OrcCharacter: MyCharacter\n36 {\n37 public override void SayGreeting()\n38 {\n39        Debug.Log (\"Hello, I'm an Orc\");\n40 }\n41 }\n42 //-------------------------------------------\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class Tavern : MonoBehaviour \n05 {\n06 //Array of NPCs in tavern\n07 public MyCharacter[] Characters = null;\n08 //-------------------------------------------------------\n09 // Use this for initialization\n10 void Start () {\n11 \n12       //New array - 5 NPCs in tavern\n13       Characters = new MyCharacter[5];\n14 \n15        //Add characters of different types to array MyCharacter\n16        Characters[0] = new ManCharacter();\n17        Characters[1] = new WomanCharacter();\n18        Characters[2] = new OrcCharacter();\n19        Characters[3] = new ManCharacter();\n20        Characters[4] = new WomanCharacter();\n21 \n22        //Now run enter tavern functionality\n23        EnterTavern();\n24 }\n25 //-------------------------------------------------------\n26 //Function when player enters Tavern\n27 public void EnterTavern()\n28 {\n29       //Everybody say greeting\n30       foreach(MyCharacter C in Characters)\n31       {\n32              //call SayGreeting in derived class\n33              //Derived class is accessible via base class\n34             C.SayGreeting();\n35       }\n36 }\n37 //-------------------------------------------------------\n38 }\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 //------------------------------------------------------\n04 //Sample class - can be attached to object as a component\n05 public class Database : MonoBehaviour \n06 {\n07 //------------------------------------------------------\n08 //Public property for private variable iMyNumber\n09 //This is a public property to the variable iMyNumber\n10 public int MyNumber\n11 {\n12        //Called when retrieving value\n13        get\n14       {\n15               return iMyNumber; //Output iMyNumber\n16       }\n17 \n18         //Called when setting value\n19        set\n20       {\n21              //If value is within 1-10, set number else ignore\n22             if(value >= 1 && value <= 10)\n23             {\n24                    //Update private variable\n25                    iMyNumber = value;\n26 \n27                    //Call event\n28                    NumberChanged();\n29             }\n30        }\n31 }\n32 //------------------------------------------------------\n33 //Internal reference a number between 1-10\n34 private int iMyNumber = 0;\n35 //------------------------------------------------------\n36 // Use this for initialization\n37 void Start () \n38 {\n39        //Set MyNumber\n40        MyNumber = 11; //Will fail because number is > 10\n41 \n42        //Set MyNumber\n43         MyNumber = 7; //Will succeed because number is between 1-10\n44 }\n45 //------------------------------------------------------\n46 //Event called when iMyNumber is changed\n47 void NumberChanged()\n48 {\n\n49        Debug.Log(\"Variable iMyNumber changed to : \" + iMyNumber.ToString());\n\n50 }\n51 //------------------------------------------------------\n52 }\n53 //------------------------------------------------------\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class MyClass : MonoBehaviour \n05 {\n06 //Will always show\n07 public int PublicVar1;\n08 \n09 //Will always show\n10 [SerializeField]\n11 private int PrivateVar1;\n12 \n13 //Will show only in Debug Mode\n14 private int PrivateVar2;\n15 \n16 //Will show only in Debug Mode\n17 private int PrivateVar3;\n18 }\n```", "```cs\n//If condition is true then do expression 1, else do expression 2\n(condition) ? expression_1 : expression_2;\n```", "```cs\n//We should hide this object if its Y position is above 100 units\nbool ShouldHideObject = (transform.position.y > 100) ? true : false;\n\n//Update object visibility\ngameObject.SetActive(!ShouldHideObject);\n```", "```cs\n01 using UnityEngine;\n02 using System.Collections;\n03 \n04 public class MyClass : MonoBehaviour \n05 {\n06 void start()\n07 {\n08        //Will invoke MyFunction on ALL components/scripts attached to this object (where the function is present)\n\n09         SendMessage(\"MyFunction\", SendMessageOptions.DontRequireReceiver);\n\n10 }\n11 \n12 //Runs when SendMessage is called\n13 void MyFunction()\n14 {\n15        Debug.Log (\"hello\");\n16 }\n17 }\n```"]