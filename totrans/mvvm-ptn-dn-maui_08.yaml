- en: '8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Navigation in MVVM
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'So far in our journey of building the *Recipes!* app, we have laid a robust
    foundation using the MVVM design pattern. Now, there’s one important part missing:
    navigation – that is, moving between different pages of the app. This chapter
    will focus on the practical side of navigation within .NET MAUI. We’ll break down
    our discussion into four key areas:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: About .NET MAUI Shell
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up navigation in a .NET MAUI Shell app
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up navigation without .NET MAUI Shell
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing results back
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MVVM largely focuses on the separation of concerns, decoupling the logic from
    the presentation layer. When we integrate navigation within the MVVM architecture,
    we’re essentially extending the principle of “separation of concerns” to the navigation
    logic. To implement this effectively, it’s essential to grasp key principles of
    navigation.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this chapter, you’ll have a solid grasp of .NET MAUI’s navigation
    capabilities. Whether you opt to utilize .NET MAUI Shell or stick with traditional
    navigation methods, you’ll be equipped to make your app’s navigation seamless
    and user-friendly. It’s time to dive in!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will continue to add functionality to the *Recipes!* app throughout this
    chapter. As always, everything can be found on GitHub at [https://github.com/PacktPublishing/MVVM-pattern-.NET-MAUI/tree/main/Chapter08](https://github.com/PacktPublishing/MVVM-pattern-.NET-MAUI/tree/main/Chapter08).
    You can start from the code provided in the `Start` folder to follow along with
    this chapter. The `Finish` folder contains the completed code, which you can consult
    for reference.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: About .NET MAUI Shell
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: .NET MAUI Shell is an opinionated way to create the structure of a .NET MAUI
    app. It introduces a more simplified approach to building mobile applications,
    which can be quite complex when it comes to structuring and navigation. Shell
    streamlines these aspects by providing a unified, declarative syntax for expressing
    the structure and navigation pattern of an application.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: 'Being opinionated, .NET MAUI Shell has specific guidelines and conventions
    it expects developers to follow, with the benefit of reducing boilerplate code
    and effort. It brings a variety of features to the table, aiming to reduce the
    complexity of mobile application development:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: '**URI-based navigation**: Shell supports a URI-based navigation scheme, similar
    to web development models. Developers can define a **route** to a particular page.
    These routes allow for easy and loosely coupled navigation around the app, making
    the navigation code more straightforward and less error-prone.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Simplifying complex app structures**: Shell offers out-of-the-box support
    for common UI elements such as flyout menus, tabs, and navigation bars, and all
    of them combined. Developers can easily add these structures to their apps and
    have Shell manage the rendering on different platforms.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Performance**: Shell also aims to improve performance by handling the life
    cycle of its components more efficiently, offering faster rendering times.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能**：Shell还旨在通过更有效地处理其组件的生命周期来提高性能，提供更快的渲染时间。'
- en: However, the opinionated nature of Shell means it might not be suitable for
    every application scenario or developer. It provides a predefined structure and
    expects developers to adhere to it, which can be beneficial for simpler apps but
    might limit flexibility for more complex scenarios.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Shell的固执己见性质意味着它可能不适合每个应用程序场景或开发者。它提供了一个预定义的结构，并期望开发者遵守它，这对简单的应用程序可能有益，但可能会限制更复杂场景的灵活性。
- en: .NET MAUI Shell
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: .NET MAUI Shell
- en: .NET MAUI Shell is a powerful tool in any mobile developer’s toolbox. It provides
    a high level of abstraction to simplify app development, but developers should
    evaluate whether its opinionated approach aligns with their project requirements
    and constraints.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: .NET MAUI Shell是任何移动开发者工具箱中的强大工具。它提供了一个高级别的抽象，以简化应用程序开发，但开发者应该评估其固执己见的方法是否与项目需求和限制相一致。
- en: Let’s have a look at how to leverage Shell in a .NET MAUI app.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何在.NET MAUI应用程序中利用Shell。
- en: Setting up Shell
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置Shell
- en: 'By default, when creating a new .NET MAUI app, `Shell` is already wired up
    automatically. An `AppShell` class, which inherits from `Microsoft.Maui.Controls.Shell`,
    is generated and an instance of this `AppShell` class is assigned to the `MainPage`
    property of the `App` class:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，当创建一个新的.NET MAUI应用程序时，`Shell`已经自动连接。一个继承自`Microsoft.Maui.Controls.Shell`的`AppShell`类被生成，并且这个`AppShell`类的实例被分配给`App`类的`MainPage`属性：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The value of the `MainPage` property specifies the first page that will be displayed
    when the application is launched. In other words, it’s the entry point into your
    application’s UI. This can be a single content page, a navigation page, a tabbed
    page, or even a master-detail page. Or, as shown here, when leveraging `Shell`,
    it can also be a `Shell` object. `Shell` acts as a container for your application’s
    structure and navigation, defining the initial layout and flow of your application.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`MainPage`属性的值指定了当应用程序启动时将显示的第一个页面。换句话说，它是进入应用程序UI的入口点。这可以是一个单独的内容页面、一个导航页面、一个标签页，甚至是一个主详情页面。或者，如这里所示，当利用`Shell`时，它也可以是一个`Shell`对象。`Shell`充当应用程序结构和导航的容器，定义了应用程序的初始布局和流程。'
- en: Though `MainPage` is the initial page that’s displayed, it is technically possible
    to change it at any point in the app’s life cycle to accommodate the needs of
    your application. For instance, you may initially set `MainPage` to `LoginPage`,
    and once the user successfully logs in, you could then change `MainPage` to your
    `AppShell`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然`MainPage`是显示的初始页面，但从技术上讲，在应用程序的生命周期中的任何时刻都可以更改它，以适应应用程序的需求。例如，你最初可以将`MainPage`设置为`LoginPage`，一旦用户成功登录，你就可以将`MainPage`更改为你的`AppShell`。
- en: 'Within the `AppShell` class, you define the major structural elements of your
    application. For instance, if your app includes a flyout menu and several tabbed
    pages, you can define these elements in your `AppShell`. Here’s a basic example
    of what that might look like:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在`AppShell`类中，你定义了应用程序的主要结构元素。例如，如果你的应用程序包含一个飞出菜单和几个标签页，你可以在你的`AppShell`中定义这些元素。以下是一个基本示例，展示了这可能看起来像什么：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The code shown here will render a shell containing a flyout menu with two items:
    `FlyoutItem` represents a distinct section of the app. The `Quotes` section is
    defined to contain two tabs, each with its title. The content of each tab is defined
    by a `ShellContent` object that references the page to be displayed when the tab
    is selected. The `Settings` section only contains a `ShellContent` item, which
    refers to `SettingsPage`. Without .NET MAUI Shell, creating a complex layout with
    a flyout menu, tabs, and separate sections, while managing the navigation between
    them, could be quite complex and require a lot of boilerplate code. But with Shell,
    you can define this structure in a simple, declarative way right in your `AppShell`,
    making it easier to manage and update. *Figure 8**.1* shows what the layout shown
    here, defined in XAML using Shell, looks like:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这里显示的代码将渲染一个包含飞出菜单的两个项目的 Shell：`FlyoutItem` 代表应用的独立部分。`Quotes` 部分被定义为包含两个标签页，每个标签页都有自己的标题。每个标签页的内容由一个
    `ShellContent` 对象定义，该对象引用在标签页被选中时显示的页面。`Settings` 部分只包含一个 `ShellContent` 项目，它引用
    `SettingsPage`。没有 .NET MAUI Shell，创建一个包含飞出菜单、标签页和独立部分的复杂布局，同时管理它们之间的导航，可能相当复杂且需要大量的样板代码。但有了
    Shell，你可以在 `AppShell` 中以简单、声明性的方式定义这种结构，使其更容易管理和更新。*图 8.1* 显示了这里定义的布局，使用 Shell
    在 XAML 中定义的外观：
- en: '![Figure 8.1: Flyout items and tabs when using Shell](img/B20941_08_01.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.1：使用 Shell 时的飞出项和标签页](img/B20941_08_01.jpg)'
- en: 'Figure 8.1: Flyout items and tabs when using Shell'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.1：使用 Shell 时的飞出项和标签页
- en: Not only does Shell allow us to define the main structure of our app, but it
    also gives us the ability to define routes. Let’s have a look at that.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Shell 不仅允许我们定义应用的主要结构，还允许我们定义路由。让我们看看这一点。
- en: Routing
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 路由
- en: .NET MAUI Shell’s routing system is based on the concept of named routes, which
    are essentially unique identifiers, or routes, for pages within your application.
    This simplifies the process of navigating among pages and introduces a way to
    loosely couple your navigation logic from your page types. Rather than directly
    referencing page types, you navigate to registered routes. This enables a level
    of abstraction as you’re navigating to “a page” registered with a specific name,
    not directly to a specific page. This allows your concrete page associated with
    a particular route to be changed without requiring changes in your navigation
    logic.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: .NET MAUI Shell 的路由系统基于命名路由的概念，这实际上是应用内页面的唯一标识符或路由。这简化了在页面之间导航的过程，并引入了一种将导航逻辑与页面类型松散耦合的方法。而不是直接引用页面类型，你导航到已注册的路由。这在你导航到特定名称注册的“页面”时提供了一种抽象级别，而不是直接导航到特定的页面。这允许与特定路由关联的实体页面发生变化，而无需修改你的导航逻辑。
- en: 'We can register a route using the `RegisterRoute` method on the static `Microsoft.Maui.Controls.Routing`
    class. Often, routes are registered in the `AppShell` class’s constructor, but
    it can be done anywhere in the app, so long as it happens early on in the application’s
    life cycle. So, the `CreateMauiApp` method in the `MauiProgram` class is also
    a good candidate. In the *Quote Of The Day* app, the registration of routes is
    done in the latter. Whatever location you choose to register your app’s routes,
    here’s how it’s done:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用静态 `Microsoft.Maui.Controls.Routing` 类上的 `RegisterRoute` 方法来注册路由。通常，路由在
    `AppShell` 类的构造函数中注册，但可以在应用的任何位置进行，只要它在应用的生命周期早期完成。因此，`MauiProgram` 类中的 `CreateMauiApp`
    方法也是一个不错的选择。在 *每日名言* 应用中，路由的注册是在后者中完成的。无论你选择在哪个位置注册你的应用路由，以下是完成方式：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once registered, you can navigate to the route like so:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 注册后，你可以像这样导航到路由：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In addition, Shell supports both absolute and relative navigation. An absolute
    URI, starting with a slash (`/`), resets the navigation stack before navigation,
    whereas a relative URI, not starting with a slash, pushes the navigation operation
    onto the navigation stack. For clarity, the navigation stack is essentially a
    history of pages the user has navigated through, allowing for forward and backward
    navigation in the app.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Shell 支持绝对和相对导航。一个以斜杠（`/`）开头的绝对 URI 在导航之前重置导航堆栈，而一个不以斜杠开头的相对 URI 将导航操作推送到导航堆栈上。为了清晰起见，导航堆栈实际上是用户已导航过的页面历史记录，允许在应用中进行前后导航。
- en: 'This named-route-based navigation also supports passing parameters between
    pages:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这种基于命名路由的导航还支持在页面之间传递参数：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: await Shell.Current.GoToAsync("about",
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: await Shell.Current.GoToAsync("about",
- en: new Dictionary<string, object>()
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: new Dictionary<string, object>()
- en: '{'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '{"foo", "bar" }'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '{"foo", "bar" }'
- en: '});'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'public partial class AboutPage : ContentPage,'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: IQueryAttributable
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '...'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: public void ApplyQueryAttributes(
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: IDictionary<string, object> query)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: lblParameter.Text = $"Parameter {query
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '.First().Key}: {query.First().Value}";'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: public AboutPage(AboutPageViewModel vm)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: InitializeComponent();
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: BindingContext = vm;
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Routing.RegisterRoute("about", typeof(AboutPage));
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: builder.Services.AddTransient<AboutPage>();
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: builder.Services.AddTransient<AboutPageViewModel>();
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: builder.Services.AddTransientWithShellRoute<AboutPage,
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: AboutPageViewModel>("about");
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: public interface INavigationService
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Task GoToRecipeDetail(string recipeId);
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Task GoToRecipeRatingDetail(RecipeDetailDto
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: recipe);
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Task GoBack();
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'public class NavigationService : INavigationService'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: private async Task Navigate(string pageName,
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Dictionary<string, object> parameters)
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await Shell.Current.GoToAsync(pageName);
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: public Task GoToRecipeDetail(string recipeId)
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: => Navigate("RecipeDetail",
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: new () { { "id", recipeId } });
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public Task GoToRecipeRatingDetail(RecipeDetailDto
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: recipe)
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: =>  Navigate("RecipeRating",
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: new () { { "recipe", recipe } });
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public Task GoBack()
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: =>  Shell.Current.GoToAsync("..");
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: builder.Services.AddSingleton<INavigationService,
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: NavigationService>();
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'public class RecipesOverviewViewModel :'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ObservableObject
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: private readonly INavigationService
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: navigationService;
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public RecipesOverviewViewModel(
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: IRecipeService recipeService,
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: IFavoritesService favoritesService,
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: INavigationService navigationService)
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: this.navigationService = navigationService;
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: private async Task NavigateToSelectedDetail()
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (SelectedRecipe is not null)
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await navigationService.GoToRecipeDetail
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: (SelectedRecipe.Id);
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: SelectedRecipe = null;
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: SelectionChanged="CollectionView_SelectionChanged"
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'public partial class RecipeDetailViewModel :'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ObservableObject
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: private readonly INavigationService
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: navigationService;
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public RecipeDetailViewModel(
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: IRecipeService recipeService,
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: IFavoritesService favoritesService,
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: IRatingsService ratingsService,
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: INavigationService navigationService)
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: this.navigationService = navigationService;
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: private Task NavigateToRatings()
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: => navigationService
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: .GoToRecipeRatingDetail(recipeDto);
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: <HorizontalStackLayout.GestureRecognizers>
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <TapGestureRecognizer Command="{Binding
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: NavigateToRatingsCommand}" />
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </HorizontalStackLayout.GestureRecognizers>
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '...'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: builder.Services.AddTransient<RecipesOverviewPage>();
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: builder.Services.AddTransient<RecipesOverviewViewModel>();
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: builder.Services.AddTransient<RecipeDetailPage>();
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: builder.Services.AddTransient<RecipeDetailViewModel>();
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: builder.Services.AddTransient<RecipeRatingsDetailPage>();
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: builder.Services.AddTransient<RecipeRatingsDetailViewModel>
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: ();
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: builder.Services.AddTransient<SettingsPage>();
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: builder.Services.AddTransient<SettingsViewModel>();
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: Routing.RegisterRoute("MainPage",
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: typeof (RecipesOverviewPage));
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: Routing.RegisterRoute("RecipeDetail",
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: typeof (RecipeDetailPage));
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: Routing.RegisterRoute("RecipeRating",
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: typeof (RecipeRatingsDetailPage));
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: public interface INavigationParameterReceiver
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Task OnNavigatedTo(Dictionary<string, object>
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: parameters);
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: private async Task Navigate(string pageName,
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Dictionary<string, object> parameters)
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await Shell.Current.GoToAsync(pageName);
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (Shell.Current.CurrentPage.BindingContext
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: is INavigationParameterReceiver receiver)
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await receiver.OnNavigatedTo(parameters);
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'public partial class RecipeDetailViewModel :'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ObservableObject, INavigationParameterReceiver
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public Task OnNavigatedTo(
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Dictionary<string, object> parameters)
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: => LoadRecipe(parameters["id"].ToString());
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: OnNavigatedTo method is called, the id parameter is retrieved from the dictionary
    and passed to the LoadRecipe method.
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'public class RecipeRatingsDetailViewModel :'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ObservableObject, INavigationParameterReceiver
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public Task OnNavigatedTo(
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Dictionary<string, object> parameters)
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: => LoadData(parameters["recipe"]
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: as RecipeDetailDto);
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: public interface INavigatedFrom
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: Task OnNavigatedFrom(NavigationType navigationType);
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: public interface INavigatedTo
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: Task OnNavigatedTo(NavigationType navigationType);
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: public enum NavigationType
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: Unknown,
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: Forward,
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: Back,
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: SectionChange,
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: protected override async void OnNavigated
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: (ShellNavigatedEventArgs args)
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: var navigationType =
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: GetNavigationType(args.Source);
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: base.OnNavigated(args);
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: private NavigationType GetNavigationType
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: (ShellNavigationSource source) =>
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: source switch
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ShellNavigationSource.Push or
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ShellNavigationSource.Insert
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: => NavigationType.Forward,
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ShellNavigationSource.Pop or
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ShellNavigationSource.PopToRoot or
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ShellNavigationSource.Remove
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: => NavigationType.Back,
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ShellNavigationSource.ShellItemChanged or
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ShellNavigationSource.ShellSectionChanged or
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ShellNavigationSource.ShellContentChanged
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: => NavigationType.SectionChange,
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: _ => NavigationType.Unknown
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '};'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: public interface INavigationInterceptor
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Task OnNavigatedTo(object bindingContext,
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: NavigationType navigationType);
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'public partial class AppShell : Shell'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: readonly INavigationInterceptor interceptor;
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public AppShell(INavigationInterceptor
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: interceptor)
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: this.interceptor = interceptor;
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: InitializeComponent();
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: protected override async void OnNavigated
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: (ShellNavigatedEventArgs args)
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: var navigationType =
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: GetNavigationType(args.Source);
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: base.OnNavigated(args);
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await interceptor.OnNavigatedTo(
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: CurrentPage?.BindingContext,
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: navigationType);
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: public App(INavigationInterceptor interceptor)
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: MainPage = new AppShell(interceptor);
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Public class NavigationService : INavigationService,'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: INavigationInterceptor
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: WeakReference<INavigatedFrom> previousFrom;
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public async Task OnNavigatedTo(object
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: bindingContext, NavigationType navigationType)
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if(previousFrom is not null && previousFrom
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: .TryGetTarget(out INavigatedFrom from))
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await from.OnNavigatedFrom
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: (navigationType);
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (bindingContext
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: is INavigatedTo to)
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await to.OnNavigatedTo(navigationType);
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if(bindingContext is INavigatedFrom
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: navigatedFrom)
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: previousFrom = new (navigatedFrom);
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: else
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: previousFrom = null;
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: builder.Services.AddSingleton<NavigationService>();
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: builder.Services.AddSingleton<INavigationService>(
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c => c.GetRequiredService<NavigationService>());
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: builder.Services.AddSingleton<INavigationInterceptor>(
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c => c.GetRequiredService<NavigationService>());
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: public static class Routes
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: static Dictionary<string, Type> routes
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: = new Dictionary<string, Type>();
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public static void Register<T>(string key)
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'where T : Page'
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: => routes.Add(key, typeof(T));
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public static Type GetType(string key)
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: => routes[key];
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Routes.Register<RecipesOverviewPage>("MainPage");
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Routes.Register<RecipeDetailPage>("RecipeDetail");
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Routes.Register<RecipeRatingsDetailPage>
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ("RecipeRating");
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Task GoToOverview();
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: public App(INavigationService navigationService)
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Application.Current.UserAppTheme = AppTheme.Light;
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: InitializeComponent();
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: MainPage = new NavigationPage();
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: navigationService.GoToOverview();
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'public class NonShellNavigationService :'
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: INavigationService
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: protected INavigation Navigation
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: get
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: INavigation? navigation =
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Application.Current?.MainPage?.Navigation;
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (navigation is not null)
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: return navigation;
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: else
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: throw new Exception();
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: private async Task Navigate(string key,
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Dictionary<string, object> parameters)
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: var type = Routes.GetType(key);
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: var page = ServiceProvider.Current
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: .GetService(type) as Page;
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: page.NavigatedFrom += Page_NavigatedFrom;
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await Navigation.PushAsync(page);
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (page.BindingContext
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: is INavigationParameterReceiver receiver)
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await receiver.OnNavigatedTo(parameters);
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (Navigation.NavigationStack.Count == 1)
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (page.BindingContext
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: is INavigatedTo to)
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await to.OnNavigatedTo(NavigationType
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: .SectionChange);
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: private async void Page_NavigatedFrom(object sender,
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: NavigatedFromEventArgs e)
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: bool isForwardNavigation =
  id: totrans-391
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Navigation.NavigationStack.Count > 1
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '&& Navigation.NavigationStack[^2] == sender;'
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (sender is Page page)
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-395
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (!isForwardNavigation)
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-397
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: page.NavigatedFrom -= Page_NavigatedFrom;
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-399
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await OnNavigatedTo(Navigation.NavigationStack
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: .Last().BindingContext,
  id: totrans-401
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: isForwardNavigation ? NavigationType
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '.Forward : NavigationType.Back);'
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: WeakReference<INavigatedFrom> previousFrom;
  id: totrans-407
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: private async Task OnNavigatedTo(object
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: bindingContext,
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: NavigationType navigationType)
  id: totrans-410
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-411
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (previousFrom is not null && previousFrom
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: .TryGetTarget(out INavigatedFrom from))
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await from.OnNavigatedFrom(navigationType);
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (bindingContext
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: is INavigatedTo to)
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await to.OnNavigatedTo(navigationType);
  id: totrans-420
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (bindingContext is INavigatedFrom
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: navigatedFrom)
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: previousFrom = new(navigatedFrom);
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: else
  id: totrans-425
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: previousFrom = null;
  id: totrans-426
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-428
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: public Task GoBack()
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: => Navigation.PopAsync();
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public Task GoToRecipeDetail(string recipeId)
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: => Navigate("RecipeDetail",
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: new() { { "id", recipeId } });
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public Task GoToRecipeRatingDetail(RecipeDetailDto
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: recipe)
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: => Navigate("RecipeRating",
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: new() { { "recipe", recipe } });
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public Task GoToOverview()
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: => Navigate("Overview", null);
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: builder.Services.AddSingleton<INavigationService ,
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: NonShellNavigationService>();
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Task GoBackAndReturn(Dictionary<string, object>
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: parameters);
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE46]'
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: public async Task GoBackAndReturn(
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Dictionary<string, object> parameters)
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await GoBack();
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if (Shell.Current.CurrentPage.BindingContext
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: is INavigationParameterReceiver receiver)
  id: totrans-452
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await receiver.OnNavigatedTo(parameters);
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-455
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: public async Task GoBackAndReturn(
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Dictionary<string, object> parameters)
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await GoBack();
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if(Navigation.NavigationStack.Last()
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: .BindingContext
  id: totrans-463
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: is INavigationParameterReceiver receiver)
  id: totrans-464
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-465
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await receiver.OnNavigatedTo(parameters);
  id: totrans-466
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-468
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE48]'
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Task GoToChooseLanguage(string currentLanguage);
  id: totrans-470
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: public Task GoToChooseLanguage(string currentLanguage)
  id: totrans-472
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: => Navigate("PickLanguagePage",
  id: totrans-473
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: new() { { "language", currentLanguage } });
  id: totrans-474
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE50]'
  id: totrans-475
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '...'
  id: totrans-476
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: builder.Services.AddTransient<PickLanguagePage>();
  id: totrans-477
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: builder.Services.AddTransient<PickLanguageViewModel>
  id: totrans-478
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ();
  id: totrans-479
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-480
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Routing.RegisterRoute("PickLanguagePage",
  id: totrans-481
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: typeof (PickLanguagePage));
  id: totrans-482
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-483
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: //Non-Shell
  id: totrans-484
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: //Routes.Register<PickLanguagePage>
  id: totrans-485
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: //("PickLanguagePage");
  id: totrans-486
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: //Non-Shell
  id: totrans-487
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-488
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE51]'
  id: totrans-489
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'public class PickLanguageViewModel : ObservableObject,'
  id: totrans-490
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: INavigationParameterReceiver
  id: totrans-491
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-492
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: readonly INavigationService _navigationService;
  id: totrans-493
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-494
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public PickLanguageViewModel(I
  id: totrans-495
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: NavigationService navigationService)
  id: totrans-496
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-497
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: _navigationService = navigationService;
  id: totrans-498
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-499
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public async Task OnNavigatedTo(
  id: totrans-500
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Dictionary<string, object> parameters)
  id: totrans-501
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-502
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: _selectedLanguage =
  id: totrans-503
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: parameters["language"] as string;
  id: totrans-504
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: OnPropertyChanged(nameof(SelectedLanguage));
  id: totrans-505
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-506
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-507
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE52]'
  id: totrans-508
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: private Task LanguagePicked()
  id: totrans-509
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-510
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: return _navigationService.GoBackAndReturn(
  id: totrans-511
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: new Dictionary<string, object> {
  id: totrans-512
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{ "SelectedLanguage", SelectedLanguage }'
  id: totrans-513
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '});'
  id: totrans-514
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-515
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE53]'
  id: totrans-516
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'public class SettingsViewModel :'
  id: totrans-517
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ObservableObject, INavigationParameterReceiver
  id: totrans-518
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE54]'
  id: totrans-519
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: public Task OnNavigatedTo(
  id: totrans-520
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Dictionary<string, object> parameters)
  id: totrans-521
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-522
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: if(parameters is not null &&
  id: totrans-523
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: parameters.ContainsKey("SelectedLanguage"))
  id: totrans-524
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-525
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: CurrentLanguage =
  id: totrans-526
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: parameters["SelectedLanguage"] as string;
  id: totrans-527
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-528
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: return Task.CompletedTask;
  id: totrans-529
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-530
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE55]'
  id: totrans-531
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Readonly INavigationService _navigationService;
  id: totrans-532
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-533
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: public SettingsViewModel(INavigationService service)
  id: totrans-534
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-535
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: _navigationService = service;
  id: totrans-536
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '...'
  id: totrans-537
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-538
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE56]'
  id: totrans-539
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: private async Task ChooseLanguage()
  id: totrans-540
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{'
  id: totrans-541
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: await _navigationService
  id: totrans-542
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: .GoToChooseLanguage(CurrentLanguage);
  id: totrans-543
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  id: totrans-544
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE57]'
  id: totrans-545
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
