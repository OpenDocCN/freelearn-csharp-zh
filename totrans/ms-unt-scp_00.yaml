- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Mastering Unity Scripting* is a concise and dedicated exploration of some
    advanced, unconventional, and powerful ways to script games with C# in Unity.
    This makes the book very important right now because, although plenty of "beginner"
    literature and tutorials exist for Unity, comparatively little has been said of
    more advanced subjects in a dedicated and structured form. The book assumes you''re
    already familiar with the Unity basics, such as asset importing, level designing,
    light-mapping, and basic scripting in either C# or JavaScript. From the very beginning,
    it looks at practical case studies and examples of how scripting can be applied
    creatively to achieve more complex ends, which include subjects such as Debugging,
    Artificial Intelligence, Customized Rendering, Editor Extending, Animation and
    Motion, and lots more. The central purpose is not to demonstrate abstract principles
    and tips at the level of theory, but to show how theory can be put into practice
    in real-world examples, helping you get the most from your programming knowledge
    to build solid games that don''t just work but work optimally. To get the most
    out of this book, read each chapter in sequence, from start to finish, and when
    reading, use a general and abstract mindset. That is, see each chapter as being
    simply a particular example and demonstration of more general principles that
    persist across time and spaces; ones that you can remove from the specific context
    in which I''ve used them and redeploy elsewhere to serve your needs. In short,
    see the knowledge here not just as related to the specific examples and case studies
    I''ve chosen, but as being highly relevant for your own projects. So, let''s get
    started.'
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Unity C# Refresher"), *Unity C# Refresher*,
    summarizes in very brief terms the basics of C# and scripting in Unity. It''s
    not intended as a complete or comprehensive guide to the basics. Rather, it''s
    intended as a refresher course for those who''ve previously studied the basics,
    but perhaps haven''t scripted for a while and who''d appreciate a quick recap
    before getting started with the later chapters. If you''re comfortable with the
    basics of scripting (such as classes, inheritance, properties, and polymorphism),
    then you can probably skip this chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Debugging"), *Debugging*, explores debugging
    in depth. Being able to write solid and effective code depends partially on your
    ability to find and successfully fix errors as and when they occur. This makes
    debugging is critical skill. This chapter will not only look at the basics, but
    will go deeper into debugging through the MonoDevelop interface, as well as establish
    a useful error-logging system.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Singletons, Statics, GameObjects, and the
    World"), *Singletons, Statics, GameObjects, and the World*, explores a wide range
    of features for accessing, changing, and managing game objects. Specifically,
    we''ll see the singleton design pattern for building global and persistent objects,
    as well as many other techniques for searching, listing, sorting, and arranging
    objects. Scripting in Unity relies on manipulating objects in a unified game world,
    or coordinate space to achieve believable results.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Event-driven Programming"), *Event-driven
    Programming*, considers event-driven programming as an important route to re-conceiving
    the architecture of your game for optimization. By transferring heavy workloads
    from update and frequent events into an event-driven system, we''ll free up lots
    of valuable processing time for achieving other tasks.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Cameras, Rendering, and Scenes"), *Cameras,
    Rendering, and Scenes*, dives deep into seeing how cameras work, not just superficially,
    but how we can dig into their architecture and customize their rendered output.
    We''ll explore frustum testing, culling issues, line of sight, orthographic projection,
    depth and layers, postprocess effects, and more.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Working with Mono"), *Working with Mono*,
    surveys the vast Mono library and some of its most useful classes, from dictionaries,
    lists, and stacks, to other features and concepts, such as strings, regular expressions
    and Linq. By the end of this chapter, you''ll be better positioned to work with
    large quantities of data quickly and effectively.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Artificial Intelligence"), *Artificial Intelligence*,
    manages to apply pretty much everything covered previously in one single example
    project that considers Artificial Intelligence: creating a clever enemy that performs
    a range of behaviors, from wandering, chasing, patrolling, attacking, fleeing
    and searching for health-power ups. In creating this character, we''ll cover line-of-sight
    issues, proximity detection, and pathfinding.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Customizing the Unity Editor"), *Customizing
    the Unity Editor*, focuses on the Unity Editor, which is feature filled in many
    respects, but sometimes you need or want it to do more. This chapter examines
    how to create editor classes for customizing the editor itself, to behave differently
    and work better. We''ll create customized inspector properties, and even a fully
    functional localization system for switching your game seamlessly across multiple
    languages.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Working with Textures, Models, and 2D"),
    *Working with Textures, Models, and 2D*, explores many things you can do with
    2D elements, such as sprites, textures, and GUI elements. Even for 3D games, 2D
    elements play an important role, and here we''ll look at a range of 2D problems
    and also explore effective and powerful solutions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10. Source Control and Other Tips"), *Source
    Control and Other Tips*, closes the book on a general note. It considers a wide
    range of miscellaneous tips and tricks (useful concepts and applications) that
    don''t fit into any specific category but are critically important when taken
    as a whole. We''ll see good coding practices, tips for writing clear code, data
    serialization, source and version control integration, and more.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is a Unity-focused title, which means you only need a copy of Unity.
    Unity comes with everything you need to follow along with the book, including
    a code editor. Unity can be downloaded from [http://unity3d.com/](http://unity3d.com/).
    Unity is a single application that supports two main licenses, free and pro. The
    free license restricts access to certain features, but nonetheless still gives
    you access to a powerful feature set. In general, most chapters and examples in
    this book are compliant with the free version, meaning that you can usually follow
    along with the free version. Some chapters and examples will, however, require
    the professional version.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is an advanced book intended for students, educators, and professionals
    familiar with Unity basics as well as the basics of scripting. Whether you've
    been using Unity for a short time, or are an experienced user, this book has something
    important and valuable to offer to help you improve your game development workflow.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "Once
    created, a new script file will be generated inside the `Project` folder with
    a `.cs` file extension."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "One way is to go to **Assets** | **Create** | **C# Script** from the application
    menu."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the color images of this book
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We also provide you with a PDF file that has color images of the screenshots/diagrams
    used in this book. The color images will help you better understand the changes
    in the output. You can download this file from: [https://www.packtpub.com/sites/default/files/downloads/0655OT_ColoredImages.pdf](https://www.packtpub.com/sites/default/files/downloads/0655OT_ColoredImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata** **Submission** **Form** link,
    and entering the details of your errata. Once your errata are verified, your submission
    will be accepted and the errata will be uploaded to our website or added to any
    list of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
