["```cs\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityStandardAssets.CrossPlatformInput;\n\n[RequireComponent(typeof(Rigidbody))]\npublic class PlayerMotor : MonoBehaviour {\n\n  float horizontal, vertical;\n  Rigidbody m_Rigidbody;\n\n  public float JumpPower;\n  public float MoveSpeed, RunSpeed;\n\n  private float currentJumpPower = 0;\n  private float currentMoveSpeed = 0;\n\n  // Use this for initialization\n  void Start () \n  {\n    m_Rigidbody = GetComponent<Rigidbody>();\n    currentMoveSpeed = MoveSpeed;\n  // m_Cam = Camera.main.transform;\n    m_Animator = GetComponent<Animator>(); \n}\n. . .\n```", "```cs\n. . . \nAnimator m_Animator;\n[SerializeField] float m_MoveSpeedMultiplier = 1f;\npublic void OnAnimatorMove()\n{\n   // we implement this function to override the default root motion.\n   // this allows us to modify the positional speed before it's applied.\n  if (m_IsGrounded && Time.deltaTime > 0)\n  {\n     Vector3 v = (m_Animator.deltaPosition * m_MoveSpeedMultiplier) / Time.deltaTime;\n\n     // we preserve the existing y part of the current velocity.\n     v.y = m_Rigidbody.velocity.y;\n     m_Rigidbody.velocity = v;\n  }\n}\n. . . \n```", "```cs\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerController : MonoBehaviour {\n\n  public string RunState, WalkState, IdleState, JumpState, DieState, ThrowState;\n  bool isWalking, isRunning, isJumping, isIdle, isDie, forward,left,right,back;\n  Animator mAnim;\n  // Use this for initialization\n  void Start () {\n    mAnim = GetComponent<Animator>();\n    isIdle = true;\n   }\n```", "```cs\n. . . \nvoid Update () {\n  //Down states\n  if( Input.GetKeyDown(KeyCode.W))\n  {\n    if( !isRunning )\n    {\n      isWalking = true;\n      isIdle = false;\n      forward = true;\n      mAnim.SetBool(WalkState, true);\n      mAnim.SetBool(IdleState, false);\n      }\n   }\n   if( Input.GetKeyDown(KeyCode.A))\n   {\n      . . . \n   }\n   if( Input.GetKeyDown(KeyCode.S))\n   {\n      . . . \n   }\n   if( Input.GetKeyDown(KeyCode.D))\n   {\n      . . .\n   }\n. . . \n```", "```cs\n. . . \nif( Input.GetKeyDown(KeyCode.LeftShift))\n{\n  if( isWalking )\n  {\n    isRunning = true;\n    mAnim.SetBool(RunState, true);\n    mAnim.SetBool(WalkState, false);\n  }\n}\n. . . \n```", "```cs\n. . . \nif( Input.GetKeyDown(KeyCode.Space))\n{\n  Jump();\n}\n\nif( Input.GetKeyDown(KeyCode.E))\n{\n  Throw();\n}\n. . . \n```"]