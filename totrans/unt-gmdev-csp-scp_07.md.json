["```cs\nusing UnityEngine;\nusing UnityEngine.UI;\npublic class Player : MonoBehaviour\n{\n    [SerializeField] private Button equipButton;\n    void Start()\n    {\n        if (equipButton != null)\n        {\n            equipButton.onClick.AddListener(EquipSword);\n        }\n    }\n    private void EquipSword()\n    {\n        Debug.Log(\"Sword equipped!\");\n        // Add logic for equipping the sword\n    }\n}\n```", "```cs\nusing UnityEngine;\npublic class PlayerController : MonoBehaviour\n{\n    public float speed = 5.0f;\n    void Update()\n    {\n        float moveHorizontal = Input.GetAxis(\"Horizontal\");\n        float moveVertical = Input.GetAxis(\"Vertical\");\n        Vector3 movement = new Vector3(moveHorizontal, 0.0f,\n             moveVertical);\n        transform.Translate(movement * speed * Time.deltaTime);\n    }\n}\n```", "```cs\nusing UnityEngine;\nusing UnityEngine.SceneManagement;\npublic class MainMenu : MonoBehaviour\n{\n    public void StartGame()\n    {\n        // Load the game scene\n        SceneManager.LoadScene(\"GameScene\");\n    }\n    public void QuitGame()\n    {\n        // Exit the game\n        Application.Quit();\n    }\n}\n```", "```cs\nusing UnityEngine;\nusing UnityEngine.UI; // Include the UI namespace\npublic class SettingsMenu : MonoBehaviour\n{\n    public Slider volumeSlider; // Reference to the volume slider\n    void Start()\n    {\n        // Initialize the slider's value to the current game volume\n        volumeSlider.value = AudioListener.volume;\n    }\n    public void SetVolume(float volume)\n    {\n        // Adjust the game's volume based on the slider's value\n        AudioListener.volume = volume;\n    }\n}\n```", "```cs\n    public class RotateSymbol : MonoBehaviour\n    {\n        public void Rotate(float angle)\n        {\n            transform.Rotate(0, 0, angle);\n        }\n    }\n    ```", "```cs\n    public class NarrativeController : MonoBehaviour\n    {\n        public void MakeChoice(int choice)\n        {\n            switch (choice)\n            {\n                case 1:\n                    // Trigger one storyline\n                    break;\n                case 2:\n                    // Trigger an alternative storyline\n                    break;\n            }\n        }\n    }\n    ```", "```cs\n    public class CombatController : MonoBehaviour\n    {\n        private int comboSequence = 0;\n        public void Attack()\n        {\n            comboSequence++;\n            if (comboSequence == 3)\n            {\n                // Perform special attack\n                comboSequence = 0;\n            }\n        }\n    }\n    ```"]