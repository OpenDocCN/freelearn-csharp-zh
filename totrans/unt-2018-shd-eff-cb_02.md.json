["```cs\nShader \"CookbookShaders/StandardDiffuse\" {\n  Properties {\n    _Color (\"Color\", Color) = (1,1,1,1)\n    _MainTex (\"Albedo (RGB)\", 2D) = \"white\" {}\n    _Glossiness (\"Smoothness\", Range(0,1)) = 0.5\n    _Metallic (\"Metallic\", Range(0,1)) = 0.0\n  }\n  SubShader {\n    Tags { \"RenderType\"=\"Opaque\" }\n    LOD 200\n\n    CGPROGRAM\n    // Physically based Standard lighting model, and enable shadows on all light types\n    #pragma surface surf Standard fullforwardshadows\n\n    // Use shader model 3.0 target, to get nicer looking lighting\n    #pragma target 3.0\n\n    sampler2D _MainTex;\n\n    struct Input {\n      float2 uv_MainTex;\n    };\n\n    half _Glossiness;\n    half _Metallic;\n    fixed4 _Color;\n\n    // Add instancing support for this shader. You need to check 'Enable Instancing' on materials that use the shader.\n    // See https://docs.unity3d.com/Manual/GPUInstancing.html for more information about instancing.\n    // #pragma instancing_options assumeuniformscaling\n    UNITY_INSTANCING_BUFFER_START(Props)\n      // put more per-instance properties here\n    UNITY_INSTANCING_BUFFER_END(Props)\n\n    void surf (Input IN, inout SurfaceOutputStandard o) {\n      // Albedo comes from a texture tinted by color\n      fixed4 c = tex2D (_MainTex, IN.uv_MainTex) * _Color;\n      o.Albedo = c.rgb;\n      // Metallic and smoothness come from slider variables\n      o.Metallic = _Metallic;\n      o.Smoothness = _Glossiness;\n      o.Alpha = c.a;\n    }\n    ENDCG\n  }\n  FallBack \"Diffuse\"\n}\n```", "```cs\nShader \"CookbookShaders/Chapter 02/StandardColor\" {\n```", "```cs\n_MainTex (\"Albedo (RGB)\", 2D) = \"white\" {} \n```", "```cs\nsampler2D _MainTex; \n```", "```cs\nfixed4 c = _Color; \n```", "```cs\n_AmbientColor (\"Ambient Color\", Color) = (1,1,1,1) \n```", "```cs\n_MySliderValue (\"This is a Slider\", Range(0,10)) = 2.5 \n```", "```cs\n// Inside the Properties block\n_MainTex (\"Albedo (RGB)\", 2D) = \"white\" {} \n\n// Below the CGPROGRAM line\nsampler2D _MainTex; \n\n// Inside of the surf function\nfixed4 c = tex2D (_MainTex, IN.uv_MainTex) * _Color; \n```", "```cs\nProperties {\n  _Color (\"Color\", Color) = (1,1,1,1)\n _AmbientColor (\"Ambient Color\", Color) = (1,1,1,1) \n _MySliderValue (\"This is a Slider\", Range(0,10)) = 2.5 \n\n  _Glossiness (\"Smoothness\", Range(0,1)) = 0.5\n  _Metallic (\"Metallic\", Range(0,1)) = 0.0\n}\n```", "```cs\nfloat4 _AmbientColor; \nfloat _MySliderValue; \n```", "```cs\nvoid surf (Input IN, inout SurfaceOutputStandard o) {\n      // We can then use the properties values in our shader \n      fixed4 c = pow((_Color + _AmbientColor), _MySliderValue); \n\n      // Albedo comes from property values given from slider and colors\n      o.Albedo = c.rgb;\n\n      // Metallic and smoothness come from slider variables\n      o.Metallic = _Metallic;\n      o.Smoothness = _Glossiness;\n      o.Alpha = c.a;\n    }\n    ENDCG\n```", "```cs\nShader \"CookbookShaders/Chapter02/ParameterExample\" {\n  // We define Properties in the properties block \n  Properties {\n    _Color (\"Color\", Color) = (1,1,1,1)\n    _Glossiness (\"Smoothness\", Range(0,1)) = 0.5\n    _Metallic (\"Metallic\", Range(0,1)) = 0.0\n  }\n  SubShader {\n    Tags { \"RenderType\"=\"Opaque\" }\n    LOD 200\n\n    // We need to declare the properties variable type inside of the\n    // CGPROGRAM so we can access its value from the properties block.\n\n    CGPROGRAM\n    // Physically based Standard lighting model, and enable shadows on all light types\n    #pragma surface surf Standard fullforwardshadows\n\n    // Use shader model 3.0 target, to get nicer looking lighting\n    #pragma target 3.0\n\n    float4 _AmbientColor; \n    float _MySliderValue; \n\n    struct Input {\n      float2 uv_MainTex;\n    };\n\n    half _Glossiness;\n    half _Metallic;\n    fixed4 _Color;\n\n    // Add instancing support for this shader. You need to check 'Enable Instancing' on materials that use the shader.\n    // See https://docs.unity3d.com/Manual/GPUInstancing.html for more information about instancing.\n    // #pragma instancing_options assumeuniformscaling\n    UNITY_INSTANCING_BUFFER_START(Props)\n      // put more per-instance properties here\n    UNITY_INSTANCING_BUFFER_END(Props)\n\n    void surf (Input IN, inout SurfaceOutputStandard o) {\n      // We can then use the properties values in our shader \n      fixed4 c = pow((_Color + _AmbientColor), _MySliderValue); \n\n      // Albedo comes from property values given from slider and colors\n      o.Albedo = c.rgb;\n\n      // Metallic and smoothness come from slider variables\n      o.Metallic = _Metallic;\n      o.Smoothness = _Glossiness;\n      o.Alpha = c.a;\n    }\n    ENDCG\n  }\n  FallBack \"Diffuse\"\n}\n```"]