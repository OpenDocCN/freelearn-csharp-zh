["```cs\nusing UnityEngine.UI; \n```", "```cs\nplayerRoot = FindObjectOfType<MyvariThirdPersonMovement>().transform.parent; \n```", "```cs\nSetPlayerEnabled(false); \n```", "```cs\nvoid SetPlayerEnabled(bool enable)\n    {\n        CinemachineVirtualCamera[] cams = playerRoot.GetComponentsInChildren<CinemachineVirtualCamera>(true);\n        foreach (CinemachineVirtualCamera cam in cams)\n        {\n            cam.gameObject.SetActive(enable);\n        }\n        playerRoot.GetComponentInChildren<MyvariThirdPersonMovement>().enabled = enable;\n    } \n```", "```cs\nstartGameButton.onClick.AddListener(OnStartGameButtonPressed);\nquitButton.onClick.AddListener(OnQuitButtonPressed); \n```", "```cs\nvoid OnStartGameButtonPressed()\n    {\n        SetPlayerEnabled(true);\n        Cursor.lockState = CursorLockMode.Locked;\n        Cursor.visible = false;\n        this.gameObject.SetActive(false);\n    } \n```", "```cs\nApplication.Quit(); \n```", "```cs\nvoid Awake()\n    {\n        highlightIndicator = GameObject.FindGameObjectWithTag(\"InteractionHighlight\");\n        if (highlightIndicator == null)\n        {\n            Debug.LogError(\"Highlight indicator not found in scene\");\n        }\n        highlightIndicatorRenderer = highlightIndicator.GetComponent<MeshRenderer>();\n    } \n```", "```cs\nvoid FixedUpdate()\n    {\n        Ray ray = new Ray(transform.position, transform.forward);\n        if (Physics.Raycast(ray, out RaycastHit hit, maxDistance, rayMask, QueryTriggerInteraction.Collide))\n        {\n            highlightIndicator.transform.position = hit.transform.position + new Vector3(0f, height, 0f);\n            if (!highlightIndicatorRenderer.enable\nd)\n            {\n                highlightIndicatorRenderer.enabled = true;\n            }\n        }\n        else\n        {\n            if (highlightIndicatorRenderer.enabled)\n            {\n                highlightIndicatorRenderer.enabled = false;\n            }\n        }\n    } \n```"]