["```cs\nnamespace Pattern.Visitor\n{\n    public interface IVisitor\n    { \n        void Visit(BikeShield bikeShield);\n        void Visit(BikeEngine bikeEngine);\n        void Visit(BikeWeapon bikeWeapon);\n    }\n}\n```", "```cs\nnamespace Pattern.Visitor\n{\n    public interface IBikeElement\n    { \n        void Accept(IVisitor visitor);\n    }\n}\n```", "```cs\nusing UnityEngine;\n\nnamespace Pattern.Visitor\n{\n    [CreateAssetMenu(fileName = \"PowerUp\", menuName = \"PowerUp\")]\n    public class PowerUp : ScriptableObject, IVisitor\n    {\n        public string powerupName;\n        public GameObject powerupPrefab;\n        public string powerupDescription;\n\n        [Tooltip(\"Fully heal shield\")]\n        public bool healShield;\n\n        [Range(0.0f, 50f)]\n        [Tooltip(\n            \"Boost turbo settings up to increments of 50/mph\")]\n        public float turboBoost;\n\n        [Range(0.0f, 25)]\n        [Tooltip(\n            \"Boost weapon range in increments of up to 25 units\")]\n        public int weaponRange;\n\n        [Range(0.0f, 50f)]\n        [Tooltip(\n            \"Boost weapon strength in increments of up to 50%\")]\n        public float weaponStrength;\n\n```", "```cs\n        public void Visit(BikeShield bikeShield) \n        {\n            if (healShield) \n                bikeShield.health = 100.0f;\n        } \n\n        public void Visit(BikeWeapon bikeWeapon) \n        {\n            int range = bikeWeapon.range += weaponRange;\n\n            if (range >= bikeWeapon.maxRange)\n                bikeWeapon.range = bikeWeapon.maxRange;\n            else\n                bikeWeapon.range = range;\n\n            float strength = \n                bikeWeapon.strength += \n                    Mathf.Round(\n                        bikeWeapon.strength \n                        * weaponStrength / 100);\n\n            if (strength >= bikeWeapon.maxStrength)\n                bikeWeapon.strength = bikeWeapon.maxStrength;\n            else\n                bikeWeapon.strength = strength;\n        }\n\n        public void Visit(BikeEngine bikeEngine)\n        {\n            float boost = bikeEngine.turboBoost += turboBoost;\n\n            if (boost < 0.0f)\n                bikeEngine.turboBoost = 0.0f;\n\n            if (boost >= bikeEngine.maxTurboBoost)\n                bikeEngine.turboBoost = bikeEngine.maxTurboBoost;\n        }\n    }\n}\n```", "```cs\nusing UnityEngine;\nusing System.Collections.Generic;\n\nnamespace Pattern.Visitor\n{\n    public class BikeController : MonoBehaviour, IBikeElement\n    {\n        private List<IBikeElement> _bikeElements = \n            new List<IBikeElement>();\n\n        void Start()\n        {\n            _bikeElements.Add(\n                gameObject.AddComponent<BikeShield>());\n\n            _bikeElements.Add(\n                gameObject.AddComponent<BikeWeapon>());\n\n            _bikeElements.Add(\n                gameObject.AddComponent<BikeEngine>());\n        }\n\n        public void Accept(IVisitor visitor)\n        {\n            foreach (IBikeElement element in _bikeElements)\n            {\n                element.Accept(visitor);\n            }\n        }\n    }\n}\n```", "```cs\nusing UnityEngine;\n\nnamespace Pattern.Visitor\n{\n    public class BikeWeapon : MonoBehaviour, IBikeElement\n    {\n        [Header(\"Range\")]\n        public int range = 5; \n        public int maxRange = 25;\n\n        [Header(\"Strength\")]\n        public float strength = 25.0f;\n        public float maxStrength = 50.0f;\n\n        public void Fire()\n        {\n            Debug.Log(\"Weapon fired!\");\n        }\n\n        public void Accept(IVisitor visitor)\n        {\n            visitor.Visit(this);\n        }\n\n        void OnGUI() \n        {\n            GUI.color = Color.green;\n\n            GUI.Label(\n                new Rect(125, 40, 200, 20), \n                \"Weapon Range: \" + range);\n\n            GUI.Label(\n                new Rect(125, 60, 200, 20), \n                \"Weapon Strength: \" + strength);\n        }\n    }\n}\n```", "```cs\nusing UnityEngine;\n\nnamespace Pattern.Visitor\n{\n    public class BikeEngine : MonoBehaviour, IBikeElement\n    {\n        public float turboBoost = 25.0f; // mph\n        public float maxTurboBoost = 200.0f;\n\n        private bool _isTurboOn;\n        private float _defaultSpeed = 300.0f; // mph\n\n        public float CurrentSpeed\n        {\n            get\n            {\n                if (_isTurboOn) \n                    return _defaultSpeed + turboBoost;\n                return _defaultSpeed;\n            }\n        }\n\n        public void ToggleTurbo()\n        {\n            _isTurboOn = !_isTurboOn;\n        }\n\n        public void Accept(IVisitor visitor)\n        {\n            visitor.Visit(this);\n        }\n\n        void OnGUI() \n        {\n            GUI.color = Color.green;\n\n            GUI.Label(\n                new Rect(125, 20, 200, 20), \n                \"Turbo Boost: \" + turboBoost);\n        }\n    }\n}\n```", "```cs\nusing UnityEngine;\n\nnamespace Pattern.Visitor\n{\n    public class BikeShield : MonoBehaviour, IBikeElement\n    { \n        public float health = 50.0f; // Percentage\n\n        public float Damage(float damage)\n        {\n            health -= damage;\n            return health;\n        }\n\n        public void Accept(IVisitor visitor)\n        {\n            visitor.Visit(this);\n        }\n\n        void OnGUI() \n        {\n            GUI.color = Color.green;\n\n            GUI.Label(\n                new Rect(125, 0, 200, 20), \n                \"Shield Health: \" + health);\n        }\n    }\n}\n```", "```cs\nusing UnityEngine;\n\nnamespace Pattern.Visitor\n{\n    public class ClientVisitor : MonoBehaviour\n    {\n        public PowerUp enginePowerUp;\n        public PowerUp shieldPowerUp;\n        public PowerUp weaponPowerUp;\n\n        private BikeController _bikeController;\n\n        void Start()\n        {\n            _bikeController = \n                gameObject.\n                    AddComponent<BikeController>();\n        }\n\n        void OnGUI()\n        {\n            if (GUILayout.Button(\"PowerUp Shield\"))\n                _bikeController.Accept(shieldPowerUp);\n\n            if (GUILayout.Button(\"PowerUp Engine\"))\n                _bikeController.Accept(enginePowerUp);\n\n            if (GUILayout.Button(\"PowerUp Weapon\"))\n                _bikeController.Accept(weaponPowerUp);\n        }\n    }\n}\n```", "```cs\nusing System;\nusing UnityEngine;\n\npublic class Pickup : MonoBehaviour\n{\n    public PowerUp powerup;\n\n    private void OnTriggerEnter(Collider other)\n    {\n        if (other.GetComponent<BikeController>())\n        {\n            other.GetComponent<BikeController>().Accept(powerup);\n            Destroy(gameObject);\n        }\n    }\n}\n```"]