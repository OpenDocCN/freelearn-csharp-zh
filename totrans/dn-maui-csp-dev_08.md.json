["```cs\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage\n    Title=\"User Preferences\"\n    x:Class=\"ForgetMeNotDemo.View.UserPreferencesPage\"\n    xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\">\n    <VerticalStackLayout>\n        <Grid\n            ColumnDefinitions=\"*,*\"\n            RowDefinitions=\"*,*,*,*\">\n            <Label\n                Grid.Column=\"0\"\n                Grid.Row=\"0\"\n                Text=\"Display Name\" />\n            <Entry\n                Grid.Column=\"1\"\n                Grid.Row=\"0\"\n                Placeholder=\"Your name as you want it\n                   displayed\"\n                Text=\"{Binding DisplayName}\" />\n```", "```cs\n            <Label\n                Grid.Column=\"0\"\n                Grid.Row=\"1\"\n                Text=\"Theme\" />\n            <HorizontalStackLayout\n                Grid.Column=\"1\"\n                Grid.Row=\"1\"\n                RadioButtonGroup.GroupName=\"{Binding\n                    ThemeGroupName}\" [1]\n                RadioButtonGroup.SelectedValue=\"{Binding\n                    ThemeSelection}\"> [2]\n                <RadioButton Content=\"Dark\" />\n                <RadioButton\n                    Content=\"Light\"\n                    IsChecked=\"True\" /> [3]\n            </HorizontalStackLayout>\n```", "```cs\n            <Label\n                Grid.Column=\"0\"\n                Grid.Row=\"2\"\n                Text=\"Wifi Only?\" />\n            <Switch                  [4]\n                Grid.Column=\"1\"\n                Grid.Row=\"2\"\n                HorizontalOptions=\"Start\"\n                IsToggled=\"{Binding WifiOnly}\"\n                OnColor=\"Green\"\n                ThumbColor=\"Blue\" />\n            <Button\n                Command=\"{Binding SavePreferencesCommand}\"\n                Grid.Column=\"0\"\n           Grid.ColumnSpan=\"2\"\n                Grid.Row=\"3\"\n                HorizontalOptions=\"Center\"\n                Text=\"Save\" />\n        </Grid>\n    </VerticalStackLayout>\n</ContentPage>\n```", "```cs\n[ObservableObject]\npublic partial class UserPreferencesViewModel\n{\n  [ObservableProperty] private string displayName;\n  [ObservableProperty] private string themeSelection;\n  [ObservableProperty] private bool wifiOnly;\n  public string ThemeGroupName => \"Theme\";\n```", "```cs\n[RelayCommand]\npublic async Task SavePreferences()\n{\n  Preferences.Default.Set(\"DisplayName\", displayName);\n  Preferences.Default.Set(\"ThemeSelection\",\n    themeSelection);\n  Preferences.Default.Set(\"WifiOnly\", wifiOnly);\n}\n```", "```cs\n<Button\n    Command=\"{Binding OpenPreferencesCommand}\"\n    Text=\"Preferences\"\n    WidthRequest=\"150\"\n    Margin=\"10,50,10,0\"/>\n```", "```cs\n[RelayCommand]\npublic async Task OpenPreferences()\n{\n  await Shell.Current.GoToAsync(\"userpreferences\");\n}\n```", "```cs\npublic UserPreferencesViewModel()\n{\n  displayName = Preferences.Default.Get(\"DisplayName\",\n    \"Unknown\");\n  themeSelection = Preferences.Default.Get\n    (\"ThemeSelection\", \"Light\");\n  wifiOnly = Preferences.Default.Get(\"WifiOnly\", false);\n}\n```", "```cs\nnamespace ForgetMeNotDemo.Database;\npublic static class Constants\n{\n  public const string DatabaseFilename =\n    \"ForgetMeNotDemo.db3\"; [1]\n  public const SQLite.SQLiteOpenFlags Flags = [2]\n    SQLite.SQLiteOpenFlags.ReadWrite |\n    SQLite.SQLiteOpenFlags.Create |\n    SQLite.SQLiteOpenFlags.SharedCache;\n  public static string DatabasePath =>\n    Path.Combine(FileSystem.AppDataDirectory,\n      DatabaseFilename); [3]\n}\n```", "```cs\nusing ForgetMeNotDemo.Database;\nusing ForgetMeNotDemo.Model;\nusing SQLite;\nnamespace ForetMeNotDemoDatabase;\npublic class ForgetMeNotDemoDatabase\n{\n    private SQLiteAsyncConnection Database;  [1]\n    private async Task Init()\n    {\n        if (Database is not null)  [2]\n            return;\n        Database = new SQLiteAsyncConnection(  [3]\n              Constants.DatabasePath,\n              Constants.Flags);\n        await Database.CreateTableAsync<Preference>(); [4]\n    }\n}\n```", "```cs\n[ObservableObject]\npublic partial class Preference\n{\n    [ObservableProperty] private int id;\n    [ObservableProperty] private string preferencePrompt;\n    [ObservableProperty] private string preferenceValue;\n}\n```", "```cs\npublic async Task<int> SavePreference(Preference\n    preference) [1]\n{\n    await Init();  [2]\n    if (preference.Id != 0) [3]\n    {\n        return await Database.UpdateAsync(preference);\n    }\n    else\n    {\n        return await Database.InsertAsync(preference);\n    }\n}\n```", "```cs\npublic async Task<List<Preference>> GetPreferences()\n{\n    await Init();\n    return await Database.Table<Preference>();\n}\n```"]