["```cs\ngit tf clone http://myserver:8080/tfs $/TeamProjectA/Main\n\n```", "```cs\ngit tf pull --rebase\n\n```", "```cs\ngit tf checkin --associate=123,124 â€“-message=\"Additional items for Task 123\"\n\n```", "```cs\npublic class Setup : MvxAndroidSetup\n{\n    public Setup(Context applicationContext) : base(applicationContext)\n    {\n        Insights.Initialize(\"<API Key>\", applicationContext);\n\n        // Identifying the specific user, and follow the usage pattern in the rest of the execution\n        var traits = new Dictionary<string, string> {\n            {Insights.Traits.Email, \"john.smith@contoso.com\"},\n            {Insights.Traits.Name, \"John Smith\"}\n        };\n        Insights.Identify(\"john.smith@contoso.com \", traits);\n    }\n}\n```", "```cs\nvar telemetryClient = new TelemetryClient();\n\n // User Action Event\n telemetryClient.TrackEvent(\"Calculation Completed\");\n\n // Send a metric:\n telemetryClient.TrackMetric(\"Calculation Range\", (ordinal2 - ordinal1));\n\n // Nominal values by which you can filter events:\n var nominalValues = new Dictionary<string,string> { {\"calculation\", \"rangeCalculation\"}};\n\n // Metrics associated with an event:\n var metrics = new Dictionary<string,int> \n         {\n             {\"ordinal1\", ordinal1},\n              {\"ordinal2\", ordinal2}\n          };\n\n telemetryClient.TrackEvent(\"Calculation Completed\", nominalValues, metrics);\n```"]