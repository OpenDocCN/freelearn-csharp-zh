["```cs\n    // Unity Csharp code\n     string key = \"harrypotter\"\n     string gameId = 21;\n     string gameCode = Utility.Md5Sum(key + gameId); \n```", "```cs\n    // PHP - security code\n     $key = \"harrypotter\"\n     $game_id =  $_GET['game_id'];\n     $provided_game_code =  $_GET['game_code'];\n     $server_game_code = md5($key.$game_id);\n\n     if( $server_game_code == $provided_game_code ) {\n       // codes match - do processing here\n     } \n```", "```cs\n $ git remote -v\n origin  https://github.com/dr-matt-smith/my-unity-github-demo.git (fetch)\n origin  https://github.com/dr-matt-smith/my-unity-github-demo.git (push) \n```", "```cs\n         [Ll]ibrary/\n     [Tt]emp/\n     [Oo]bj/\n     [Bb]uild/\n     [Bb]uilds/\n     Assets/AssetStoreTools*\n\n     # Visual Studio cache directory\n     .vs/\n\n     # Autogenerated VS/MD/Consulo solution and project files\n     ExportedObj/\n     .consulo/\n     *.csproj\n     *.unityproj\n     *.sln\n     *.suo\n     *.tmp\n     *.user\n     *.userprefs\n     *.pidb\n     *.booproj\n     *.svd\n     *.pdb\n     *.opendb\n\n     # Unity3D generated meta files\n     *.pidb.meta\n     *.pdb.meta\n\n     # Unity3D Generated File On Crash Reports\n     sysinfo.txt\n\n     # Builds\n     *.apk\n     *.unitypackage  \n```", "```cs\n     /Assets\n     /Plugins (if this folder exists - it may not)\n     /ProjectSettings    \n     /Packages \n```", "```cs\n matt$ git commit -m \"files added to project\"\n\n [master 1f415a3] files added to project\n 23 files changed, 1932 insertions(+)\n create mode 100644 Assets/Scenes.meta\n create mode 100644 Assets/Scenes/SampleScene.unity\n      ...         \n```", "```cs\n matt$ git push origin master\n\n Counting objects: 29, done.\n Delta compression using up to 4 threads.\n Compressing objects: 100% (27/27), done.\n Writing objects: 100% (29/29), 15.37 KiB | 0 bytes/s, done.\n Total 29 (delta 0), reused 0 (delta 0)\n To https://github.com/dr-matt-smith/my-unity-github-demo.git\n 1b27686..1f415a3  master -> master\n matt$ \n```", "```cs\n    using UnityEngine;\n     using System.Collections;\n     using UnityEngine.UI;\n     using UnityEngine.SceneManagement;\n\n     public class BlockAccess : MonoBehaviour {\n         public Text textUI;\n         public string warning;\n         public bool fullURL = true;\n         public string[] domainList;\n\n         private void Start() {\n             Text scoreText = GetComponent<Text>();\n             if (Application.platform == RuntimePlatform.WebGLPlayer)\n             {\n                 string url = Application.absoluteURL;\n                 if (LegalCopy(url))\n                     LoadNextScene();\n                 else\n                     textUI.text = warning;\n             }\n         }\n\n         private bool LegalCopy(string Url) {\n            if (Application.isEditor)\n             return true;\n\n             for (int i = 0; i < domainList.Length; i++){\n                 if (Application.absoluteURL == domainList[i])\n                     return true;\n\n                 if (Application.absoluteURL.Contains(domainList[i]) && !fullURL)\n                     return true;\n             }\n\n             return false;\n         }\n\n         private void LoadNextScene() {\n             int currentSceneIndex = SceneManager.GetActiveScene().buildIndex;\n             int nextSceneIndex = currentSceneIndex + 1;\n             SceneManager.LoadScene(nextSceneIndex);\n         }\n    }\n```"]