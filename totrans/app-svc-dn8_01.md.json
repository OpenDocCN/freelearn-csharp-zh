["```cs\n<Project Sdk=\"Microsoft.NET.Sdk\">\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n **<TreatWarningsAsErrors>****true****</TreatWarningsAsErrors>**\n  </PropertyGroup> \n```", "```cs\npublic class person\n{\n} \n```", "```cs\n#region Designer generated code\nusing pb = global::Google.Protobuf; \n```", "```cs\nError CS8981 The type name 'pb' only contains lower-cased ascii characters. Such names may become reserved for the language. Northwind.Grpc.Service C:\\apps-services-net8\\Chapter14\\Northwind.Grpc.Service\\obj\\Debug\\net8.0\\Protos\\Greet.cs \n```", "```cs\n<WarningsNotAsErrors>0219,CS8981</WarningsNotAsErrors> \n```", "```cs\ncode --install-extension ms-dotnettools.csdevkit \n```", "```cs\n    dotnet new list \n    ```", "```cs\n    dotnet new --install \"Vue.Simple.Template\"\n    dotnet new simplevue \n    ```", "```cs\n    using static System.Console;\n    WriteLine(\"Top-level functions example\");\n    WhatsMyNamespace(); // Call the function.\n    void WhatsMyNamespace() // Define a local function.\n    {\n      WriteLine(\"Namespace of Program class: {0}\", \n        arg0: typeof(Program).Namespace ?? \"null\");\n    } \n    ```", "```cs\n    Top-level functions example\n    Namespace of Program class: null \n    ```", "```cs\nusing static System.Console;\n**partial****class****Program**\n**{**\n**static****void** **<Main>$(String[] args)**\n **{**\n    WriteLine(\"Top-level functions example\");\n **<<Main>$>g__WhatsMyNamespace|****0****_0();** **// Call the function.**\n**void** **<<Main>$>g__WhatsMyNamespace|****0****_0()** **// Define a local function.**\n    {\n      WriteLine(\"Namespace of Program class: {0}\", \n        arg0: typeof(Program).Namespace ?? \"null\");\n    }\n **}**\n**}** \n```", "```cs\n    **using****static** **System.Console;**\n    **// Do not define a namespace so this class goes in the default empty namespace**\n    **// just like the auto-generated partial Program class.**\n    **partial****class****Program**\n    **{**\n      **static** void WhatsMyNamespace() // Define a **static** function.\n      {\n        WriteLine(\"Namespace of Program class: {0}\",\n          arg0: typeof(Program).Namespace ?? \"null\");\n      }\n    **}** \n    ```", "```cs\n    using static System.Console;\n    WriteLine(\"Top-level functions example\");\n    WhatsMyNamespace(); // Call the function. \n    ```", "```cs\nusing static System.Console;\npartial class Program\n{\n  static void <Main>$(String[] args)\n  {\n    WriteLine(\"Top-level functions example\");\n    WhatsMyNamespace(); // Call the function.\n  }\n  static void WhatsMyNamespace() // Define a static function.\n  {\n    WriteLine(\"Namespace of Program class: {0}\",\n      arg0: typeof(Program).Namespace ?? \"null\");\n  }\n} \n```", "```cs\ndotnet help <command> \n```", "```cs\ndotnet <command> -?|-h|--help \n```", "```cs\n    dotnet help build \n    ```", "```cs\n    dotnet build -? \n    ```", "```cs\n    Description:\n      .NET Builder\n    Usage:\n      dotnet build [<PROJECT | SOLUTION>...] [options]\n    Arguments:\n      <PROJECT | SOLUTION>  The project or solution file to operate on. If a file is not specified, the command will search the current directory for one.\n    Options:\n      --ucr, --use-current-runtime         Use current runtime as the target runtime.\n      -f, --framework <FRAMEWORK>          The target framework to build for. The target framework must also be specified in the project file.\n    ...\n      -?, -h, --help                       Show command-line help. \n    ```", "```cs\nYou are an expert .NET solution architect with experience advising global enterprises. What are the top three most common mistakes when designing a microservice architecture that are serious enough to cause a project to be abandoned? \n```", "```cs\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors> \n    ```"]