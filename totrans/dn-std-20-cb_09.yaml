- en: To Android with Xamarin
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Xamarin进入Android
- en: 'In this chapter, we will be looking at these recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下食谱：
- en: Hello Android – creating a Xamarin Android app
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hello Android – 创建Xamarin Android应用程序
- en: Adding a .NET Standard 2.0 library to the Xamarin project
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将.NET Standard 2.0库添加到Xamarin项目
- en: Putting things together and testing the application
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将事物组合在一起并测试应用程序
- en: Technical requirements
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Readers should have a basic knowledge of C#. They should also have a basic knowledge
    of using Visual Studio, installing packages using NuGet, and referencing libraries
    within projects from other projects.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 读者应具备C#的基本知识。他们还应具备使用Visual Studio、使用NuGet安装包以及在其他项目中引用库的基本知识。
- en: 'The code files for this chapter can be found on GitHub:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码文件可以在GitHub上找到：
- en: '[https://github.com/PacktPublishing/DotNET-Standard-2-Cookbook/tree/master/Chapter09/Chapter9.Xamarin](https://github.com/PacktPublishing/DotNET-Standard-2-Cookbook/tree/master/Chapter09/Chapter9.Xamarin)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/DotNET-Standard-2-Cookbook/tree/master/Chapter09/Chapter9.Xamarin](https://github.com/PacktPublishing/DotNET-Standard-2-Cookbook/tree/master/Chapter09/Chapter9.Xamarin)'
- en: 'Check out the following video to see the code in action:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频以查看代码的实际操作：
- en: '[https://goo.gl/dMi9PZ](https://goo.gl/dMi9PZ)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://goo.gl/dMi9PZ](https://goo.gl/dMi9PZ)'
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In this chapter, we will be looking at building an Android application using
    Visual Studio for Mac. We will also be building a .NET Standard 2.0 class library
    that the Android application will use. Visual Studio for Mac allows you to build
    Xamarin-based applications for iOS, Android, and Windows using your favorite C#
    programming language. It also has F# support by default. In the previous chapter,
    [Chapter 8](03c5bbfe-3780-4928-9256-c9f13a856479.xhtml), *To iOS with Xamarin*,
    we talked about how to install Visual Studio for Mac.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨使用Visual Studio for Mac构建Android应用程序。我们还将构建一个Android应用程序将使用的.NET Standard
    2.0类库。Visual Studio for Mac允许您使用您喜欢的C#编程语言构建基于Xamarin的应用程序，用于iOS、Android和Windows。它还默认支持F#。在前一章[第8章](03c5bbfe-3780-4928-9256-c9f13a856479.xhtml)“使用Xamarin进入iOS”中，我们讨论了如何安装Visual
    Studio for Mac。
- en: Hello Android – Creating a Xamarin Android app
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hello Android – 创建Xamarin Android应用程序
- en: In this recipe, we will be looking at support for Android-based applications
    in Visual Studio for Mac. We will be looking at an Android project, setting up
    a solution for it, and checking for all the bits and pieces required.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将探讨Visual Studio for Mac对基于Android的应用程序的支持。我们将查看一个Android项目，为其设置解决方案，并检查所需的所有组件。
- en: Getting ready
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have installed Visual Studio for Mac for your macOS system. If
    not, follow the *Installing Visual Studio for Mac* *and preparation* recipe, which
    shows you how to install it.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您已为macOS系统安装了Visual Studio for Mac。如果没有，请遵循“安装Visual Studio for Mac”和“准备”食谱，该食谱展示了如何安装它。
- en: How to do it...
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Open Finder.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Finder。
- en: Click Applications in the left-hand pane.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧窗格中单击“应用程序”。
- en: 'Now, double-click on the Visual Studio icon:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，双击Visual Studio图标：
- en: '![](img/cb7fc017-56bb-4707-987a-0051a40a7a8f.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/cb7fc017-56bb-4707-987a-0051a40a7a8f.png)'
- en: Visual Studio
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio
- en: Click on the New Project button.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“新建项目”按钮。
- en: In the **Choose a template for your project** dialog box, scroll down till you
    reach the other section.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“**为您的项目选择模板**”对话框中，向下滚动直到到达其他部分。
- en: 'Select Miscellaneous and, under Generic, select Blank Solution:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“杂项”，然后在“通用”下选择“空白解决方案”：
- en: '**![](img/d8e26056-1cb2-459b-b291-b2c21fe3be6c.png)**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**![图片](img/d8e26056-1cb2-459b-b291-b2c21fe3be6c.png)**'
- en: Now, click the Next button.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，单击“下一步”按钮。
- en: 'In the Solution Name: textbox, type `Chapter9.Xamarin`. Also make sure you
    have selected a proper location:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“解决方案名称：”文本框中键入`Chapter9.Xamarin`。同时确保您已选择合适的位置：
- en: '![](img/8558734e-9654-4c68-8f1a-80676d65d8f4.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8558734e-9654-4c68-8f1a-80676d65d8f4.png)'
- en: Now, click Create.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，单击“创建”。
- en: 'Now, the Solution Explorer should look like this:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，解决方案资源管理器应如下所示：
- en: '![](img/fbbc0780-56c8-4cb7-b095-403901d42121.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fbbc0780-56c8-4cb7-b095-403901d42121.png)'
- en: Now, *control (^)* + click on the `Chapter9.Xamarin` label and select Add  |
    New Project.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在“Chapter9.Xamarin”标签上*control (^)*+单击，然后选择“添加”|“新建项目”。
- en: Select App under the Android section in the left-hand pane. Select Android App
    in the right-hand pane.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧窗格的Android部分下选择“应用程序”。在右侧窗格中选择“Android应用程序”。
- en: 'Make sure C# is selected as the programming language:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保已选择C#作为编程语言：
- en: '![](img/9d9b22e5-da20-44a3-9139-0ade2dc577e2.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9d9b22e5-da20-44a3-9139-0ade2dc577e2.png)'
- en: Click Next.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“下一步”。
- en: 'Now, in the App Name: textbox, type `Chapter9.Xamarin.AndroidApp` and, in the
    Organization Identifier: textbox, type `com.chapter9`. Leave the rest as it is:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在“应用程序名称：”文本框中，键入 `Chapter9.Xamarin.AndroidApp`，在“组织标识符：”文本框中，键入 `com.chapter9`。其余的保持不变：
- en: '![](img/e6e6e42e-a50a-4dbf-a4f1-91d10faf0d85.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e6e6e42e-a50a-4dbf-a4f1-91d10faf0d85.png)'
- en: Click Next.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击下一步。
- en: 'Leave everything as it is and click Create:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持一切不变并单击创建：
- en: '![](img/f69931e1-9595-47c9-ab54-60e087df3f76.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f69931e1-9595-47c9-ab54-60e087df3f76.png)'
- en: 'Now, the Solution Explorer should look like this:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，解决方案资源管理器应该看起来像这样：
- en: '![](img/77aa9e2a-8760-4252-8115-09f1894dbeb4.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/77aa9e2a-8760-4252-8115-09f1894dbeb4.png)'
- en: Now, you should see that the default template already has a working application.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你应该看到默认模板已经有一个工作中的应用程序。
- en: Press the *command* + *return* keys to debug the application.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下 *command* + *return* 键来调试应用程序。
- en: 'Now, you should see the default `HelloWorld` application running in the emulator:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你应该在模拟器中看到默认的 `HelloWorld` 应用程序正在运行：
- en: '![](img/e9ae392d-a6dc-496b-897e-505a8cc41361.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e9ae392d-a6dc-496b-897e-505a8cc41361.png)'
- en: Click on the button to see it in action. Press *shift* + *command* + *return*
    to stop debugging.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击按钮以查看其动作。按 *shift* + *command* + *return* 停止调试。
- en: '![](img/6c451a43-fee9-4a35-ac9a-684cfa2b3fee.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6c451a43-fee9-4a35-ac9a-684cfa2b3fee.png)'
- en: How it works...
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In steps 1 to 10, we created a blank solution and gave it a proper name. In
    step 10, we added an Android App project to that solution. The Android App project
    is a default template created by Visual Studio for Mac. It's a working prototype
    application for testing that everything is intact.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 1 到 10 中，我们创建了一个空白解决方案并给它起了个合适的名字。在步骤 10 中，我们向该解决方案添加了一个 Android App 项目。Android
    App 项目是由 Visual Studio for Mac 创建的默认模板。这是一个用于测试所有内容是否完整的原型应用程序。
- en: 'If you look at the Solution Explorer and click on the `MainActivity.cs` file,
    you will see all the action. Inside the `OnCreate()` method, the code looks like
    this:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看解决方案资源管理器并单击 `MainActivity.cs` 文件，你会看到所有的动作。在 `OnCreate()` 方法中，代码看起来像这样：
- en: '[PRE0]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can see a simple button. When you click on the button, its increments are
    counted and it updates the button label. `FindViewById` will locate the button
    and create a `Button` class. Finally, the `button.Click` event triggers the process
    of counting and storing it in the button caption.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到一个简单的按钮。当你点击按钮时，它的增量会被计数，并且更新按钮标签。`FindViewById` 会定位按钮并创建一个 `Button` 类。最后，`button.Click`
    事件触发计数过程并将其存储在按钮标题中。
- en: Adding a .NET Standard 2.0 library to the Xamarin project
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 .NET Standard 2.0 库添加到 Xamarin 项目
- en: In this recipe, we will be looking at creating a .NET Standard 2.0 library and
    moving the default count code into the library. The counting code was created
    by Visual Studio for Mac as a default template for the Android app.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将查看创建一个 .NET Standard 2.0 库并将默认的计数代码移动到库中。计数代码是由 Visual Studio for
    Mac 为 Android 应用程序创建的默认模板。
- en: Getting ready
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have completed the previous recipe that creates a default Android
    Application. If you have already completed it, let's open up that solution and
    get started.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你已经完成了创建默认Android应用程序的上一道菜谱。如果你已经完成了，让我们打开那个解决方案并开始吧。
- en: How to do it...
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Open Finder.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Finder。
- en: Click Applications in the left-hand pane.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧窗格中单击“应用程序”。
- en: Now, double-click on the Visual Studio icon.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，双击 Visual Studio 图标。
- en: Click on Open, locate the `Chapter9.Xamarin` solution, and open it.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“打开”，定位 `Chapter9.Xamarin` 解决方案，并打开它。
- en: 'The Solution Explorer should look like this:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解决方案资源管理器应该看起来像这样：
- en: '![](img/b827d7b7-a14b-43dd-ab9b-7d448b888351.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b827d7b7-a14b-43dd-ab9b-7d448b888351.png)'
- en: Now, *control (^)* + click on the `Chapter9.Xamarin` label and select Add |
    New Project.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，按住 *control (^)* + 点击 `Chapter9.Xamarin` 标签并选择添加 | 新项目。
- en: In the New Project dialog box, scroll down the left-hand pane until you see
    the Multi Platform section.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“新建项目”对话框中，将左侧窗格向下滚动，直到看到“多平台”部分。
- en: 'Click on Library and select .NET Standard Library under General in the right-hand
    pane. Also make sure C# is selected:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“库”并在右侧窗格的“常规”下选择 .NET Standard 库。同时确保已选择 C#：
- en: '![](img/e6d85d77-8e2f-41d5-b5e9-408eae258321.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e6d85d77-8e2f-41d5-b5e9-408eae258321.png)'
- en: Click Next.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击下一步。
- en: 'Select Target Framework: as .NET Standard 2.0 and click Next:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择目标框架：为 .NET Standard 2.0 并单击下一步：
- en: '![](img/88ec6e88-0f48-4b86-bb6d-3f74fc5913a4.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/88ec6e88-0f48-4b86-bb6d-3f74fc5913a4.png)'
- en: 'In the Project Name: textbox, type `Chapter9.Xamarin.AndroidLib` as the name
    and leave the rest:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“项目名称：”文本框中，键入 `Chapter9.Xamarin.AndroidLib` 作为名称，其余的保持不变：
- en: '![](img/aa651d87-9342-4f19-922c-38d43b850822.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/aa651d87-9342-4f19-922c-38d43b850822.png)'
- en: Click Create.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击创建。
- en: 'Now, the Solution Explorer should look like this:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，解决方案资源管理器应该看起来像这样：
- en: '![](img/76eed9d2-5c0f-47a4-8d95-4f1a29e93241.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/76eed9d2-5c0f-47a4-8d95-4f1a29e93241.png)'
- en: Now, select the `Class1.cs` label and press *command* + *R* to rename.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，选择`Class1.cs`标签并按 *command* + *R* 来重命名。
- en: Rename it `CounterLib.cs`.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其重命名为`CounterLib.cs`。
- en: Make sure you change the class name as well from `Class1` to `CounterLib`.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您还将类名从`Class1`更改为`CounterLib`。
- en: 'Now, inside the `CounterLib` class, add the following code:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在`CounterLib`类内部添加以下代码：
- en: '[PRE1]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Click Build | Build All to check that all syntax is correct.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击构建 | 构建全部以检查所有语法是否正确。
- en: How it works...
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'In steps 1 to 4, we opened the solution created in the previous recipe. In
    steps 6 to 12, we added a .NET Standard 2.0 library to the solution. Now, the
    solution has two projects: an Android project and a .NET Standard 2.0 library
    project. In steps 14 to 16, we renamed the class created in Visual Studio. We
    also renamed the actual class name to match the filename.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤1到4中，我们打开了之前菜谱中创建的解决方案。在步骤6到12中，我们将.NET Standard 2.0库添加到解决方案中。现在，解决方案有两个项目：一个Android项目和.NET
    Standard 2.0库项目。在步骤14到16中，我们重命名了在Visual Studio中创建的类。我们还重命名了实际的类名以匹配文件名。
- en: In step 17, we added a public method that took an `integer` parameter and returned
    an integer value with one added to the value supplied. Finally, we performed a
    quick build to check for the correct syntax.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤17中，我们添加了一个公共方法，该方法接受一个`整数`参数，并返回一个比提供的值增加1的整数值。最后，我们进行了快速构建以检查语法是否正确。
- en: Putting things together and testing the application
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将事物组合在一起并测试应用程序
- en: In this recipe, we will be putting everything together and testing the final
    application. We will be referencing the .NET Standard 2.0 library from the Android
    application and using the library from the Android application.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将把所有东西组合在一起并测试最终的应用程序。我们将从Android应用程序中引用.NET Standard 2.0库并使用Android应用程序中的库。
- en: Getting ready
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have completed the previous recipe that builds the .NET Standard
    2.0 library. If you have, open up the solution and get started on this application.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您已经完成了构建.NET Standard 2.0库的先前菜谱。如果您已经完成，请打开解决方案并开始此应用程序。
- en: How to do it...
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: Open Finder.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Finder。
- en: Click Applications in the left-hand pane.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧窗格中点击“应用程序”。
- en: Now, double-click on the Visual Studio icon.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，双击Visual Studio图标。
- en: Click on Open, locate the `Chapter9.Xamarin` solution, and open it.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“打开”，定位到`Chapter9.Xamarin`解决方案，并打开它。
- en: 'The Solution Explorer should look like this:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解决方案资源管理器应该看起来像这样：
- en: '![](img/fae6e9e0-535b-4e74-8aae-285f623e5026.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fae6e9e0-535b-4e74-8aae-285f623e5026.png)'
- en: Now, expand the `Chapter9.Xamarin.AndroidApp` project node.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，展开`Chapter9.Xamarin.AndroidApp`项目节点。
- en: In the Solution Explorer, *control (^)* + click on the References label and
    select Edit References.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在解决方案资源管理器中，*控制 (^)* + 点击“引用”标签并选择“编辑引用”。
- en: In the Edit References dialog box, click on the Projects tab.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“编辑引用”对话框中，点击“项目”选项卡。
- en: 'Check `Chapter9.Xamarin.AndroidLib` in the list and click OK:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在列表中检查`Chapter9.Xamarin.AndroidLib`并点击“确定”：
- en: '![](img/61d4c365-7274-44c5-b64d-907ec553a677.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/61d4c365-7274-44c5-b64d-907ec553a677.png)'
- en: 'Scroll up until you reach the `using` directives and add the following `using`
    directive to access the library:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向上滚动直到到达`using`指令，并添加以下`using`指令以访问库：
- en: '[PRE2]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now, double-click on the MainActivity.cs file to open its code.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，双击MainActivity.cs文件以打开其代码。
- en: 'Under the `MainActivity` class, find this code:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`MainActivity`类下，找到以下代码：
- en: '[PRE3]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Replace the previous code with the following:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 用以下代码替换之前的代码：
- en: '[PRE4]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now, scroll down until you reach the `OnCreate()` method.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，向下滚动直到你到达`OnCreate()`方法。
- en: 'Add the following code next to the `base.OnCreate()` line:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`base.OnCreate()`行旁边添加以下代码：
- en: '[PRE5]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now, replace the default button click code with the following:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将默认按钮点击代码替换为以下代码：
- en: '[PRE6]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Press *command* + *return* to debug the application.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *command* + *return* 来调试应用程序。
- en: 'Click the button a few times and you should see the following output:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击按钮几次，你应该会看到以下输出：
- en: '![](img/72e458ec-2708-4eb2-9246-cf21a3b9ac5c.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/72e458ec-2708-4eb2-9246-cf21a3b9ac5c.png)'
- en: Press *shift* + c*ommand* + *return* to stop debugging.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *shift* + c*ommand* + *return* 来停止调试。
- en: How it works...
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In steps 1 to 6, we opened the existing solution we created in previous recipes.
    In step 9, we added a reference to the library from the Android application. In
    step 10, we added the code-level reference to the library. This will allow us
    to grab all the available methods from the library. In step 12, we changed the
    existing code. In step 14, we created an instance of `CounterLib()` and stored
    it in a variable.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤1到6中，我们打开了之前在先前的菜谱中创建的现有解决方案。在步骤9中，我们从Android应用程序中添加了对库的引用。在步骤10中，我们添加了对库的代码级别引用。这将使我们能够获取库中所有可用的方法。在步骤12中，我们修改了现有的代码。在步骤14中，我们创建了一个`CounterLib()`实例并将其存储在一个变量中。
- en: In step 15, again, we made a small change to the button's existing click code
    to use the `IncrementByOne()` method from the class library. Finally, in steps
    16, 17, and 18, we tested our new code.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤15中，我们又对按钮现有的点击代码进行了一小改动，以使用类库中的`IncrementByOne()`方法。最后，在步骤16、17和18中，我们测试了我们的新代码。
