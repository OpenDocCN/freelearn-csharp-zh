- en: Chapter 7. Tracking and Troubleshooting
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章 跟踪和故障排除
- en: In the last few chapters, we looked at the artifacts used in building a BizTalk
    Services solution. By now, you must be wondering how to track the message flow
    or, still better, how to troubleshoot if things didn't go as expected. In this
    chapter, we will look at the tools and common patterns to troubleshoot issues
    in BizTalk Services.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后几章中，我们探讨了构建BizTalk服务解决方案所使用的工件。到现在，你可能想知道如何跟踪消息流，或者更好的是，如果事情没有按预期进行，如何进行故障排除。在本章中，我们将探讨用于在BizTalk服务中故障排除的工具和常见模式。
- en: 'Specifically, we will focus on troubleshooting the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，我们将重点关注以下主题的故障排除：
- en: Sources and destinations
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源和目标
- en: Schemas and transforms
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 架构和转换
- en: EAI bridges with custom code
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带有自定义代码的EAI桥
- en: B2B agreements
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: B2B协议
- en: Hybrid connectivity
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混合连接
- en: Messages and errors
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 消息和错误
- en: First, let's quickly summarize the basics. Bridges are message channels that
    don't persist messages. This means any failure in the message processing will
    be returned as an HTTP error to the caller in the case of EAI bridges, and the
    message will be pushed to the suspend endpoint in the case of B2B bridges. The
    suspend endpoint is important in the case of B2B as the error in configuration
    or message structure cannot be sent back to the business partner, but is meant
    for consumption by the IT operator. This means in both EAI and B2B scenarios,
    all retries and resubmissions of messages post failures have to be done outside
    the bridge.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们快速总结一下基础知识。桥是消息通道，不会持久化消息。这意味着在EAI桥的情况下，任何消息处理失败都将返回给调用者的HTTP错误，而在B2B桥的情况下，消息将被推送到挂起端点。在B2B的情况下，挂起端点很重要，因为配置或消息结构中的错误不能发送回业务伙伴，而是供IT操作员消费。这意味着在EAI和B2B场景中，所有失败后的消息重试和重新提交都必须在桥外完成。
- en: 'Errors can occur in any of the following three scenarios:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下三种场景中可能发生错误：
- en: '**Errors during deployment time**: This scenario includes all the errors associated
    with provisioning of the BizTalk Service deployment. In most cases, the error
    is self-explanatory and is shown in the Windows Azure Management Portal or sent
    back via the RDFE API. It is important to note that a BizTalk Service deployment
    name is unique. Custom domain merely serves to wrap a DNS name around the BizTalk
    Service deployment URL. The certificate of the domain needs to be uploaded in
    the Trusted Root Certification Authorities certificate store on the machine accessing
    the deployment. The storage and the Azure SQL Database used for tracking and archiving
    cannot be reused or deleted while the deployment is active.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署时错误**：此场景包括与BizTalk服务部署配置相关的所有错误。在大多数情况下，错误是自解释的，并在Windows Azure管理门户中显示或通过RDFE
    API发送回。需要注意的是，BizTalk服务部署名称是唯一的。自定义域仅用于将DNS名称包装在BizTalk服务部署URL周围。该域的证书需要上传到访问部署的机器上的受信任根证书颁发机构证书存储中。在部署活动期间，用于跟踪和归档的存储和Azure
    SQL数据库不能重用或删除。'
- en: '**Errors during design time**: This scenario includes all the errors during
    adding/updating/deleting a bridge, deploying a VS project, or adding/updating/deleting
    an agreement from the BizTalk Services Portal. These errors surface in the **Output**
    window or the **Error List** window in Visual Studio for the EAI scenarios and
    in the status bar of the BizTalk Services Portal for the B2B scenarios, respectively.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设计时错误**：此场景包括在BizTalk服务门户中添加/更新/删除桥、部署VS项目或添加/更新/删除协议时出现的所有错误。这些错误在EAI场景中出现在**输出**窗口或**错误列表**窗口中，而在B2B场景中分别出现在BizTalk服务门户的状态栏中。'
- en: '**Errors during runtime**: This scenario includes all the errors during the
    actual flow of messages between two applications or partners. This scenario can
    be further broken down into four subcategories:'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行时错误**：此场景包括两个应用程序或合作伙伴之间实际消息流中的所有错误。此场景可以进一步细分为四个子类别：'
- en: Errors when the message is sent to an endpoint external to BizTalk Services
    is faulty.
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当消息发送到BizTalk服务外部端点时出现的错误。
- en: Errors when the message is expected to be received from an endpoint external
    to BizTalk Services is faulty.
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当预期从BizTalk服务外部端点接收消息时出现的错误。
- en: Errors when the message is malformed and does not conform to the schemas configured
    in the bridge.
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当消息格式不正确且不符合桥中配置的架构时出现的错误。
- en: Errors when components such as the bridge, transform, source, or hybrid destination
    in BizTalk Services do not function as expected. This usually classifies a bug
    in the product.
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 BizTalk 服务中，当桥接器、变压器、源或混合目的地等组件无法按预期工作时会出错。这通常将产品中的错误分类为缺陷。
- en: We will focus on runtime errors and the first three subcategories in particular.
    If tracking is enabled, tracking records are logged in the Windows Azure SQL Database.
    Tracking enables us to store interesting properties related to the message—from
    the header, body, or through lookup from another data source. Archiving persists
    the message data in a raw form in the case of EDI scenarios. For the EAI scenarios,
    archiving is possible by adding custom code as outlined in [Chapter 4](ch04.html
    "Chapter 4. Enterprise Application Integration"), *Enterprise Application Integration*.
    Data written into the Tracking and Archiving stores is carried out on a *best
    effort* basis, that is, if there is an error during the write operation to these
    stores, tracking and archiving will be skipped and message processing will continue
    in the bridge. The exception to this case is when the archiving of the AS2 messages
    is enabled with the **Enable NRR** option turned on in the AS2 agreement **General
    Settings** page. In these cases, the message processing fails if tracking/archiving
    cannot be completed successfully.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将重点关注运行时错误和前三个子类别。如果启用了跟踪，跟踪记录将记录在 Windows Azure SQL 数据库中。跟踪使我们能够存储与消息相关的有趣属性——从标题、正文或通过从其他数据源查找。在
    EDI 场景中，存档以原始形式持久化消息数据。对于 EAI 场景，可以通过在[第 4 章](ch04.html "第 4 章。企业应用集成")中概述的方式添加自定义代码来实现存档，该章讨论了*企业应用集成*。写入跟踪和存档存储的数据是在**尽力而为**的基础上进行的，也就是说，如果在写入这些存储的操作中出现错误，跟踪和存档将被跳过，并且消息处理将在桥接器中继续。此情况的例外是，当
    AS2 消息的存档通过在 AS2 协议的**常规设置**页面中启用**启用 NRR**选项时。在这些情况下，如果跟踪/存档无法成功完成，则消息处理将失败。
- en: Data for troubleshooting
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 故障排除数据
- en: In this section, we'll explore the different kinds of data available to troubleshoot
    issues.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨可用于故障排除问题的不同类型的数据。
- en: Tracking
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 跟踪
- en: Every message that flows through the bridge is associated with a promoted property
    known as the **Request ID**, which is a GUID value on each incoming message. If
    the message is split into submessages, each submessage gets its own tracking ID,
    which is also a GUID. If the Request ID is the same as the tracking ID, the message
    flows without debatching. The bridge endpoint URI and timestamp should point to
    the bridge and timing of the message. Tracking can be enabled from the bridge
    properties in VS and from an agreement's **General Settings** page in the BizTalk
    Services Portal.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 流经桥接器的每条消息都与一个称为**请求 ID**的已提升属性相关联，该属性是每条传入消息上的 GUID 值。如果消息被拆分为子消息，则每个子消息都会获得自己的跟踪
    ID，该 ID 也是一个 GUID。如果请求 ID 与跟踪 ID 相同，则消息将不进行去批处理。桥接器端点 URI 和时间戳应指向消息的桥接器和时间。跟踪可以从
    VS 中的桥接器属性以及 BizTalk 服务门户中的协议**常规设置**页面启用。
- en: 'The BizTalk Services Portal exposes the tracking data in a user-friendly way.
    There are three tabs that reflect the messages processed in the deployment. They
    are explained as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk 服务门户以用户友好的方式公开跟踪数据。有三个选项卡反映了部署中处理的消息。以下是它们的解释：
- en: '**MESSAGES**: This tab contains all the messages from sources, bridges, and
    agreements with errors or information-type entries. Each tracking entry details
    the message''s incoming URL, its Request ID and tracking ID, whether the processing
    was an error or a success, the stage where the track record was emitted, and the
    date and time when it occurred. Use this view for tracking all the EAI and B2B
    messages passing through bridges and agreements.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**消息**：此选项卡包含所有来自源、桥接器和协议的错误或信息类型条目。每个跟踪条目详细说明了消息的传入 URL、其请求 ID 和跟踪 ID、处理是否出错或成功、跟踪记录被发射的阶段以及发生的时间和日期。使用此视图跟踪通过桥接器和协议传递的所有
    EAI 和 B2B 消息。'
- en: '**PROTOCOL**: This tab lists the track records for B2B interactions. The view
    is also categorized into the EDI and AS2 protocol levels. EDI calls out a message
    status for X12 and EDIFACT records with sender, receiver, message type (such as
    PO), acknowledgments such as technical acknowledgment and functional acknowledgment,
    Request ID, ID of the interchanged envelope to correlate with the track records
    of batching, and the date and time when this record was written. The AS2 records
    contain similar information, except that the acknowledgment reflects the **Message
    Disposition Notification** (**MDN**) status. Use this view to track all the B2B
    protocol stage-specific tracking entries.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协议**：此标签页列出B2B交互的跟踪记录。视图也被分为EDI和AS2协议级别。EDI针对X12和EDIFACT记录的消息状态进行调用，包括发送者、接收者、消息类型（如PO）、确认（如技术确认和功能确认）、请求ID、交换信封的ID以关联批处理跟踪记录，以及记录写入的日期和时间。AS2记录包含类似信息，但确认反映了**消息处置通知**（**MDN**）状态。使用此视图跟踪所有B2B协议阶段特定的跟踪条目。'
- en: '**BATCHING**: Finally, the **BATCHING** tab tracks the list of ongoing and
    completed batches along with the individual message information. The view tracks
    the batch name, the agreement for which the batch is configured, and the sender
    and receiver of the batching transaction. The entry also shows the size, count,
    and time when the transaction was received using which the customer can relate
    to the expected release criteria of the batch. Use this view to track all the
    messages in a batch.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**批处理**：最后，**批处理**标签页跟踪正在进行和完成的批次列表以及单个消息信息。视图跟踪批次名称、为该批次配置的协议以及批处理事务的发送者和接收者。条目还显示了事务接收时的大小、计数和时间，客户可以使用这些信息关联到批次的预期发布标准。使用此视图跟踪批次中的所有消息。'
- en: Each of the tabs also has a **Search** option, which can help filter the result
    by date range, message type, status, sender, or receiver.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 每个标签页都有一个**搜索**选项，可以帮助通过日期范围、消息类型、状态、发送者或接收者来过滤结果。
- en: Note
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Without searching for any option, the search option displays all the track records
    sorted by the latest date. This can also be used to refresh the page during testing.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 不需要搜索任何选项，搜索选项会显示所有按最新日期排序的跟踪记录。这也可以在测试期间刷新页面。
- en: 'The **Tracking** view is shown in the following screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**跟踪**视图如下截图所示：'
- en: '![Tracking](img/7401EN_07_01.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![跟踪](img/7401EN_07_01.jpg)'
- en: Tracking view in the BizTalk Services Portal
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: BizTalk服务门户中的跟踪视图
- en: 'In some cases, it is required that you access the data directly from the Azure
    SQL Database tables. A common use case might be to build a notification system
    based on tracking events. The Azure SQL Database tracking tables used in tracking
    are as follows (note that none of these tables are supported or documented from
    Microsoft for issuing direct T-SQL queries):'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，您可能需要直接从Azure SQL数据库表中访问数据。一个常见的用例可能是基于跟踪事件构建一个通知系统。在跟踪中使用的Azure SQL数据库跟踪表如下（请注意，Microsoft不提供或记录这些表以执行直接T-SQL查询）：
- en: '| Table | Data |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| 表 | 数据 |'
- en: '| --- | --- |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| [dbo].[PipelineTrackRecords] | Bridges tracking records |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [dbo].[PipelineTrackRecords] | 桥接跟踪记录 |'
- en: '| [dbo].[SourceTrackRecords] | Sources tracking records |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [dbo].[SourceTrackRecords] | 源跟踪记录 |'
- en: '| [dbo].[EndpointAddressMap] | Stores the URL of a bridge or a source and maps
    the address to the Pipeline and Source track records using a foreign key reference,
    EndpointAddressID |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [dbo].[EndpointAddressMap] | 存储桥接器或源的URL，并使用外键引用EndpointAddressID将地址映射到管道和源跟踪记录
    |'
- en: '| [dbo].[TrackRecordMessageProperties] | Name and value pair of promoted properties
    of the message |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [dbo].[TrackRecordMessageProperties] | 消息提升属性的名称和值对 |'
- en: '| [dbo].AS2*, [dbo].Batch*, [dbo].Functional*, [dbo].Interchange*, [dbo].TransactionSet*
    records | EDI tracking records for AS2, MDN, batching, Interchange, Group, Transaction
    set records, and functional or technical acknowledgments |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [dbo].AS2*, [dbo].Batch*, [dbo].Functional*, [dbo].Interchange*, [dbo].TransactionSet*记录
    | AS2、MDN、批处理、交互、组、事务集记录以及功能或技术确认的EDI跟踪记录 |'
- en: Traces and logfiles
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 跟踪和日志文件
- en: Besides tracking, trace statements are also recorded in the Azure tables as
    a message flows through a bridge. Traces are useful to look for exceptions when
    the time period of the message failure is known. The information from tracing
    can supplement the tracking information from the BizTalk Services Portal. These
    traces are similar to the **Event Trace Log** (**ETL**) traces, except that the
    BizTalk Services traces are text based and stored in the Azure tables.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 除了跟踪之外，当消息通过网桥流动时，跟踪语句也会记录在Azure表中。当知道消息失败的时间段时，跟踪对于查找异常非常有用。跟踪信息可以补充来自BizTalk服务门户的跟踪信息。这些跟踪与**事件跟踪日志**（**ETL**）跟踪类似，但BizTalk服务跟踪是基于文本的，并存储在Azure表中。
- en: For each deployment, traces are logged on the Azure table named **WADLogsTable**
    created in the storage account specified while provisioning the BizTalk Services
    deployment. You can use a tool such as **Azure Storage Explorer** from [azurestorageexplorer.codeplex.com](http://azurestorageexplorer.codeplex.com)
    or one of the commercial tools such as CloudBerry to connect to that Azure storage
    account and view the data in the table.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个部署，跟踪都会记录在创建BizTalk服务部署时指定的存储账户中名为**WADLogsTable**的Azure表中。您可以使用来自[azurestorageexplorer.codeplex.com](http://azurestorageexplorer.codeplex.com)的工具，如**Azure存储资源管理器**，或使用商业工具，如CloudBerry，连接到该Azure存储账户并查看表中的数据。
- en: 'The following three fields in WADLogsTable are interesting:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: WADLogsTable中的以下三个字段很有趣：
- en: '**Timestamp**: The date and time when the traces were logged.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间戳**：跟踪记录的日期和时间。'
- en: '**Message**: Information, exception, or error message with a component or activity
    information.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**消息**：包含组件或活动信息的消息、异常或错误信息。'
- en: '**Level**: Trace level varying among Fatal (1), Errors (2), Warnings (3), and
    Informational (4). The errors in level 2 are accompanied by the exception stack
    trace.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**级别**：从致命（1）、错误（2）、警告（3）和信息（4）变化的跟踪级别。级别2的错误伴随着异常堆栈跟踪。'
- en: 'Traces are extremely useful when troubleshooting custom code configured with
    bridges. As there can be hundreds of entries in a few minutes, you can filter
    the data in the table using one of the following commands in the **Azure Storage
    Explorer** tool:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用网桥配置自定义代码进行故障排除时，跟踪信息非常有用。由于几分钟内可能有数百条条目，您可以使用以下命令之一在**Azure存储资源管理器**工具中过滤表中的数据：
- en: '`Timestamp gt datetime''2013-12-07T16:00:00''`'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`时间戳大于datetime''2013-12-07T16:00:00''`'
- en: '`Level = 2`'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`级别 = 2`'
- en: Note that the spacing as well as the casing is important in filtering the data.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在过滤数据时，空格以及大小写都很重要。
- en: In the case of the BizTalk Adapter Service, logfiles can be written by adding
    log interceptors in the service `.config` file. To troubleshoot the hybrid connectivity
    runtime, edit `web.config` in `C:\Program Files\Microsoft BizTalk Adapter Service\BAServiceRuntime`.
    The exact entries that must be added to generate logfiles are outlined in the
    *Troubleshooting hybrid connectivity* section.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在BizTalk适配器服务的情况下，可以通过在服务的`.config`文件中添加日志拦截器来写入日志文件。要故障排除混合连接运行时，请编辑`C:\Program
    Files\Microsoft BizTalk Adapter Service\BAServiceRuntime`中的`web.config`。必须添加的精确条目在*故障排除混合连接*部分中概述。
- en: Performance counters
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 性能计数器
- en: 'You can use performance counters to assess the health of the system. Performance
    counters pertaining to the BizTalk Services deployment are stored in the storage
    account of the deployment and can be viewed from the Azure Management Portal''s
    **MONITOR** tab as shown in the following screenshot:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用性能计数器来评估系统的健康状态。与BizTalk服务部署相关的性能计数器存储在部署的存储账户中，并可以从Azure管理门户的**监控**选项卡中查看，如下面的截图所示：
- en: '![Performance counters](img/7401EN_07_02.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![性能计数器](img/7401EN_07_02.jpg)'
- en: Performance counters in monitoring view of Azure Management Portal
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Azure管理门户的监控视图中的性能计数器
- en: 'The following performance counters are available for each deployment:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 每个部署都提供了以下性能计数器：
- en: '| Performance counter name | Unit | Description |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| 性能计数器名称 | 单位 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| **CPU Usage** | % | Average CPU usage of all instances servicing the runtime
    messages |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| **CPU使用率** | % | 所有实例服务运行时消息的平均CPU使用率 |'
- en: '| **Failures at Source** | count | Count of messages that failed in the sources
    |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| **源失败** | count | 源中失败的消息数量 |'
- en: '| **Failures in Process** | count | Count of messages that failed during pipeline
    processing |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| **处理中的失败** | count | 在管道处理过程中失败的消息数量 |'
- en: '| **Messages in Process** | count | Count of messages currently in process
    by the deployment |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| **处理中的消息** | count | 当前处理中的消息数量 |'
- en: '| **Messages Processed** | count | Count of messages successfully processed
    by the deployment |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| **处理的消息** | 数量 | 部署成功处理的消息数量 |'
- en: '| **Messages Received** | count | Count of messages received by the pipelines
    |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| **接收到的消息** | 数量 | 管道接收到的消息数量 |'
- en: '| **Messages Sent** | count | Count of messages sent or routed from each pipeline
    |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| **发送的消息** | 数量 | 从每个管道发送或路由的消息数量 |'
- en: '| **Processing Latency** | milliseconds | Average time taken to process a message
    from the validate stage to route for one-way bridges |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| **处理延迟** | 毫秒 | 从验证阶段到路由单向桥的平均消息处理时间 |'
- en: '| **Round Trip Latency** | milliseconds | Average time taken to process a message
    round trip in two-way bridges |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| **往返延迟** | 毫秒 | 双向桥中处理消息往返的平均时间 |'
- en: These counters can be useful to make configuration changes to the deployment.
    For example, if **Messages Received** is trending higher and this correlates with
    an increase in **Failures in Process** and a corresponding increase in **Processing
    Latency**, then the system may not be scaling up with the incoming rate. The IT
    administrator could plan scaling the deployment and look for changes in the performance
    counters.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这些计数器可用于对部署进行配置更改。例如，如果**接收到的消息**趋势较高，并且这与**处理失败**的增加和相应的**处理延迟**增加相关联，那么系统可能没有随着传入速率进行扩展。IT管理员可以计划扩展部署并查找性能计数器的变化。
- en: Troubleshooting sources and destinations
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 故障排除源和目标
- en: 'Sources can be one of the following: HTTP, FTP(s), SFTP, or Service Bus Queue
    and Topic. If the source endpoint is HTTP, it is common to see HTTP error codes
    on the client side sending the message, as shown in the following table:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 源可以是以下之一：HTTP、FTP(s)、SFTP或服务总线队列和主题。如果源端点是HTTP，客户端发送消息时通常会在客户端看到HTTP错误代码，如下表所示：
- en: '| Error scenario | HTTP error code | Description |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| 错误场景 | HTTP错误代码 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Message to a nonexistent endpoint or wrong URL | 400, 500 | Bad Request,
    Internal Server Error, or Namespace cannot be resolved |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 消息发送到不存在的端点或错误的URL | 400, 500 | 错误请求、内部服务器错误或命名空间无法解析 |'
- en: '| Endpoint with malformed message headers | 401 | Authentication failed or
    Unauthorized request |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 消息头格式错误的端点 | 401 | 认证失败或未经授权的请求 |'
- en: '| Endpoint with malformed message body | 500 | Internal Server Error; see tracking
    or trace entries for more information |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 消息体格式错误的端点 | 500 | 内部服务器错误；请参阅跟踪或跟踪条目以获取更多信息 |'
- en: '| Destination endpoint down | 500 | Internal Server Error |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 目标端点故障 | 500 | 内部服务器错误 |'
- en: '| Destination with incorrect credentials | 500 | Internal Server Error |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| 凭据错误的目标 | 500 | 内部服务器错误 |'
- en: '| Bridge destination is configured for HTTP relay but receiver is listening
    on HTTPS | 500 | Internal Server Error |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 桥接目标配置为HTTP中继但接收器正在监听HTTPS | 500 | 内部服务器错误 |'
- en: In the case of FTP as source, if there are errors during the processing or at
    the destination, the message will not be deleted from the source. The polling
    interval would increase and the system would autoretry the submission of the message.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在FTP作为源的情况下，如果在处理过程中或目标处出现错误，消息将不会从源中删除。轮询间隔会增加，系统将自动重试消息的提交。
- en: The following screenshots show the increase in the **NewPollInterval** field
    as seen in the **PORTAL TRACKING** view for the source name, **Poll Error**. Note
    that the poll interval increases by 1.5 times the current poll value for each
    new iteration. The next set of poll intervals would be around 227, 341, 512, and
    768 seconds.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了在**PORTAL TRACKING**视图中看到的**Poll Error**源名称的**NewPollInterval**字段的增加。请注意，轮询间隔增加为当前轮询值的1.5倍。下一组轮询间隔将约为227、341、512和768秒。
- en: '![Troubleshooting sources and destinations](img/7401EN_07_03.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![故障排除源和目标](img/7401EN_07_03.jpg)'
- en: Tracking entries indicating exponential poll over an FTP source
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪条目指示对FTP源的指数轮询
- en: 'Some error scenarios while using FTP are as shown in the following table:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 使用FTP时可能出现的某些错误场景如下表所示：
- en: '| Error scenario | HTTP error code | Description |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 错误场景 | HTTP错误代码 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Wrong FTP URL or incorrect username or password | 503 | Failed to connect
    to FTP server and/or not logged in |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 错误的FTP URL或错误的用户名或密码 | 503 | 无法连接到FTP服务器和/或未登录 |'
- en: '| Redeploy FTP while the existing service is active | 400 | One or more resources
    are in the started state; you can stop the source using `PSCmdlet` |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 在现有服务活动时重新部署FTP | 400 | 一个或多个资源处于启动状态；您可以使用`PSCmdlet`停止源 |'
- en: 'You can fix the issue based on the error message and use `PSCmdlet` `Stop-AzureBizTalkBridgeSource`
    and `Start-AzureBizTalkBridgeSource` to stop and start the source respectively.
    The following screenshot shows the execution of `Get-AzureBizTalkBridgeSource`
    to check the status of a source endpoint:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以根据错误消息修复问题，并使用 `PSCmdlet` 的 `Stop-AzureBizTalkBridgeSource` 和 `Start-AzureBizTalkBridgeSource`
    停止和启动源。以下截图显示了 `Get-AzureBizTalkBridgeSource` 的执行，以检查源端点的状态：
- en: '![Troubleshooting sources and destinations](img/7401EN_07_04.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![故障排除源和目标](img/7401EN_07_04.jpg)'
- en: Getting source status using PSCmdlet
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 PSCmdlet 获取源状态
- en: Troubleshooting schemas and transforms
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 故障排除模式和转换
- en: Issues in schemas surface when a message fails validation against a schema.
    If the validation fails, say due to extra tags, then a tracking record is added
    for the XML validation stage, thus reporting an error.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 当消息对模式进行验证失败时，模式中会暴露出问题。如果验证失败，例如由于额外的标签，则会在 XML 验证阶段添加跟踪记录，从而报告错误。
- en: 'If the tracking entry indicates a schema validation error, the easiest way
    to test the schema is to generate a test message. For EAI/B2B schemas, Visual
    Studio provides a handy utility to generate an instance of the schema. After the
    schema is added to the project, right-click on the schema and choose **Generate
    Instance** of the file. From the **Properties** window of the schema, you can
    generate an instance in native (for flat file) or the XML format, as shown in
    the following screenshot:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果跟踪条目指示模式验证错误，测试模式的最简单方法是生成一个测试消息。对于 EAI/B2B 模式，Visual Studio 提供了一个方便的实用工具来生成模式的实例。将模式添加到项目后，右键单击模式并选择文件的**生成实例**。从模式的**属性**窗口中，您可以生成本机（对于平面文件）或
    XML 格式的实例，如图下截图所示：
- en: '![Troubleshooting schemas and transforms](img/7401EN_07_05.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![故障排除模式和转换](img/7401EN_07_05.jpg)'
- en: Generating an instance of a schema from Visual Studio
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Visual Studio 生成模式的实例
- en: Similar to schemas, transforms can generate erroneous output due to incorrect
    mapping, or one of the functoids can fault against a particular input. Transforms
    also support testing with sample data in Visual Studio. Maps can be tested by
    right-clicking on the map and choosing **Test Map**, as shown in the following
    screenshot. Any errors during testing are indicated as transform runtime exceptions
    in the VS **Error List** window. If there are no errors, the output from the transform
    is indicated in the **Output** tab. If there are errors after the map is deployed
    during runtime, error tracking records with `xmlTransform` can be seen in the
    **Tracking** view.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 与模式类似，转换可能会由于映射不正确或某个 functoid 对特定输入出现故障而产生错误输出。转换还支持在 Visual Studio 中使用样本数据进行测试。可以通过右键单击映射并选择**测试映射**来测试映射，如图下截图所示。测试期间出现的任何错误都会在
    VS **错误列表**窗口中指示为转换运行时异常。如果没有错误，转换的输出将在**输出**选项卡中指示。如果在映射部署后运行时出现错误，可以在**跟踪**视图中看到带有
    `xmlTransform` 的错误跟踪记录。
- en: '![Troubleshooting schemas and transforms](img/7401EN_07_06.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![故障排除模式和转换](img/7401EN_07_06.jpg)'
- en: Test Map functionality from Visual Studio
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Visual Studio 测试映射功能
- en: Troubleshooting bridges
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 故障排除桥接
- en: Earlier, we saw how to troubleshoot two stages of bridges, namely the schema
    validation stage and the transform stage. While using custom code inside a bridge,
    things can get difficult if the message processing runs into errors. It is recommended
    that you use `IMessageInspectorContext.Tracer` to log the `System.Diagnostics.TraceEventType`
    error as part of the custom code. These statements would be surfaced in the WADLogsTable
    mentioned earlier.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，我们看到了如何故障排除桥接的两个阶段，即模式验证阶段和转换阶段。在使用桥接内部的自定义代码时，如果消息处理遇到错误，事情可能会变得困难。建议您使用
    `IMessageInspectorContext.Tracer` 将 `System.Diagnostics.TraceEventType` 错误作为自定义代码的一部分进行记录。这些语句会在之前提到的
    WADLogsTable 中显示出来。
- en: Troubleshooting agreements
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 故障排除协议
- en: Agreements can either be a transport-level agreement, such as AS2, or a protocol-level
    agreement, such as X12 or EDIFACT. In B2B scenarios with X12 and EDIFACT agreements,
    it can happen that the transport status returned to the client sending the message
    is an HTTP 200 OK, but the message landed in the suspend endpoint. This can happen
    if there are protocol-level errors. Such errors would be indicated by the acknowledgment
    message.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 协议可以是传输层协议，例如 AS2，或者协议层协议，例如 X12 或 EDIFACT。在具有 X12 和 EDIFACT 协议的 B2B 场景中，返回给发送消息的客户端的传输状态可能是
    HTTP 200 OK，但消息最终落在挂起端点。这可能是因为存在协议层错误。此类错误将由确认消息指示。
- en: 'Some sample scenarios are shown in the following table:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了某些示例场景：
- en: '| Configuration | Scenario | Outcome |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| 配置 | 场景 | 结果 |'
- en: '| --- | --- | --- |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| AS2 standalone receive with sync MDN | Incorrect configuration, for example,
    certificate incorrect | HTTP 400 with error MDN |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| AS2 独立接收与同步MDN | 配置错误，例如证书错误 | 带有错误MDN的HTTP 400 |'
- en: '| AS2 standalone receive with async MDN | Incorrect configuration, for example,
    certificate incorrect | HTTP 200 OK for async and MDN with error |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| AS2 独立接收与异步MDN | 配置错误，例如证书错误 | 异步和MDN的错误，HTTP 200 OK |'
- en: '| AS2 standalone send | Incorrect configuration, for example, certificate incorrect
    | HTTP 500, AS2 Message Sender Activity error |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| AS2 独立发送 | 配置错误，例如证书错误 | HTTP 500，AS2 消息发送活动错误 |'
- en: '| X12 or EDIFACT standalone receive | Identities mismatch in the incoming message
    | HTTP 200 for a client may indicate success, but see the **Tracking** view if
    the message has ended up in the suspend destination with the error, NACK, to be
    sent back if configured |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| X12或EDIFACT独立接收 | 入站消息中的标识不匹配 | 对于客户端，HTTP 200可能表示成功，但如果消息已配置为发送错误、NACK并最终发送到挂起目标，请查看**跟踪**视图
    |'
- en: '| X12 or EDIFACT standalone send | Schema not found | HTTP 200 for a client
    may indicate success, but see the **Tracking** view if the message has ended up
    in the suspend destination with the error, NACK, to be sent back if configured
    |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| X12或EDIFACT独立发送 | 模式未找到 | 对于客户端，HTTP 200可能表示成功，但如果消息已配置为发送错误、NACK并最终发送到挂起目标，请查看**跟踪**视图
    |'
- en: Troubleshooting hybrid connectivity
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 故障排除混合连接
- en: Finally, we wrap up our discussion by looking at troubleshooting hybrid connectivity.
    Primarily, this involves looking at the BizTalk Adapter Service, which was introduced
    in [Chapter 4](ch04.html "Chapter 4. Enterprise Application Integration"), *Enterprise
    Application Integration*.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们通过探讨故障排除混合连接来结束我们的讨论。主要涉及查看在[第4章](ch04.html "第4章。企业应用集成")中引入的BizTalk适配器服务，*企业应用集成*。
- en: 'To troubleshoot the hybrid connectivity runtime, add the following snippet
    to `web.config` in `C:\Program Files\Microsoft BizTalk Adapter Service\BAServiceRuntime`
    with administrator access:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 要故障排除混合连接的运行时，请使用管理员权限将以下片段添加到`C:\Program Files\Microsoft BizTalk Adapter Service\BAServiceRuntime`中的`web.config`：
- en: '[PRE0]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The listener configures the traces to be output to an XML file in the user's
    folder specified in the configuration. Post messaging, we can look at the trace
    log file to check for errors with the Line of Business access or service configuration
    issues.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 监听器配置将跟踪输出到配置中指定的用户文件夹中的XML文件。消息后，我们可以查看跟踪日志文件以检查业务访问或服务配置问题。
- en: Summary
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have looked at the ways to collect data to troubleshoot
    BizTalk Services. This helps in maintaining the health of the service. We also
    looked at the error scenarios of the key components in BizTalk Services and ways
    to troubleshoot them.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了收集数据以故障排除BizTalk服务的各种方法。这有助于维护服务的健康。我们还探讨了BizTalk服务中关键组件的错误场景以及解决这些问题的方法。
- en: Troubleshooting is as much an art as it is a science and usually involves a
    methodical approach to identify and fix a problem. In the next and final chapter,
    we will look at migration and also capabilities that could be added in the Integration
    platform.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 故障排除既是一门艺术也是一门科学，通常涉及一种系统的方法来识别和解决问题。在下一章和最后一章中，我们将探讨迁移以及可能添加到集成平台的功能。
