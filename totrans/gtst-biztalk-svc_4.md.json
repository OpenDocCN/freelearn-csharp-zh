["```cs\npublic interface IMessageInspector\n{\nTask Execute(IMessage message, IMessageInspectorContext context);\n}\n```", "```cs\npublic interface ITracer\n{\nvoid TraceEvent(TraceEventType eventType, string format, params object[] args);\n}\n```", "```cs\n    xsd InvoiceSchema.xsd /classes\n    ```", "```cs\n    string bodystr = GetMessageBody(message);\n    Order order = DeserializeMessageToOrder(bodystr);\n    ```", "```cs\n    Stream stream = System.Reflection.Assembly.GetExecutingAssembly().GetManifestResourceStream(\"layout.xml\");\n    byte[] bytes = new byte[(int)stream.Length];\n    stream.Read(bytes, 0, bytes.Length);\n    File.WriteAllBytes(System.IO.Path.GetTempPath(), bytes);\n    ```", "```cs\n    PDFTemplateItextSharp pdfgen = new PDFTemplateItextSharp(xmlToPdfTemplateFilePath);\n    pdfgen.Draw(GetHeaderData(order), GetLoopData(order), GetBodyData(), GetFooterData());\n    ```", "```cs\n    message.Data = new System.IO.MemoryStream(pdfdata);\n    message.ContentType = new System.Net.Mime.ContentType(\"text/plain\");\n    ```", "```cs\n    PDFGenerator.PDFGeneratorUtil, PDFGenerator, Version=1.0.0.0, Culture=neutral, PublicKeyToken=xxxxxxxxxx\n    ```"]