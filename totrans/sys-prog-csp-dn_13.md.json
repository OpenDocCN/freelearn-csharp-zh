["```cs\ndotnet publish\n```", "```cs\ndotnet publish\n  -o d:\\temp\\publish\n  --self-contained\n  -f net8.0\n  -r win-x64\n  -c Release\n  -p:PublishSingleFile=true\n  -p:PublishReadyToRun=true\n  -p:PublishTrimmed=true\n```", "```cs\nGET https://myfileconverterfunctionapp.azurewebsites.net/api/Function1\nContent-Type: application/json\n{\n     \"name\": \"dennis\"\n}\n###\n```", "```cs\nHTTP/1.1 200 OK\nConnection: close\nContent-Type: text/plain; charset=utf-8\nDate: Mon, 17 Jun 2024 07:07:01 GMT\nContent-Encoding: gzip\nTransfer-Encoding: chunked\nVary: Accept-Encoding\nThis HTTP triggered function executed successfully.\n```", "```cs\n[RunInstaller(true)]\npublic partial class SecretsInstaller : Installer\n{\n     public override void Install(IDictionary stateSaver)\n     {\n           base.Install(stateSaver);\n           var secret = Guid.NewGuid().ToString();\n           var targetDir =\n                 Context.Parameters[\"targetdir\"];\n           var appSettingsPath =\n                 Path.Combine(targetDir, \"appsettings.json\");\n           if (File.Exists(appSettingsPath))\n           {\n                 var appSettingsContent =\n                       File.ReadAllText(appSettingsPath);\n                 appSettingsContent =\n                       appSettingsContent.Replace(\n                             \"SECRET_PLACEHOLDER\",\n                             secret);\n                 File.WriteAllText(\n                       appSettingsPath,\n                       appSettingsContent);\n           }\n     }\n}\n```", "```cs\n[RunInstaller(true)]\npublic partial class ProjectInstaller : Installer\n{\n     public ProjectInstaller()\n     {\n           InitializeComponent();\n           var secretsInstaller = new SecretsInstaller();\n           Installers.Add(secretsInstaller);\n     }\n}\n```", "```cs\n/targetdir=\"[TARGETDIR]\\ \"\n```", "```cs\ndocker run --rm --entrypoint htpasswd httpd:2 -Bbn yourusername yourpassword > C:\\auth\\htpasswd\n```", "```cs\ndocker run -d -p 5000:5000\n  --name registry\n  -v c:\\auth:/auth\n  -e \"REGISTRY_AUTH=htpasswd\"\n  -e \"REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm\"\n  -e \"REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd\"               registry:2\n```", "```cs\ndocker login localhost:5000\n```", "```cs\ndocker tag image13workerfordocker:dev localhost:5000/image13workerfordocker:dev\n```", "```cs\ndocker push localhost:5000/image13workerfordocker:dev\n```", "```cs\ndocker pull localhost:5000/imagework13fordocker:dev\n```"]