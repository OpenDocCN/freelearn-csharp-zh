- en: '1'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Getting Started
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s start by making sure you’re in the right place. This is a book about creating
    **Application Programming Interfaces** ( **APIs** ) using .NET. Along the way,
    we will look at a very simple backend (database) and frontend (user interface)
    and the tools we use to create and test APIs.
  prefs: []
  type: TYPE_NORMAL
- en: The core responsibility of an API is to decouple an application (web, mobile,
    and so on) from the backend (database, another API, and more). The API sits between
    the frontend (the user interface to your application) and the backend (for our
    purposes, a database).
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: What software you will need
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to obtain the software you need
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Visual Studio
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To proceed through this book, you will need a computer running Windows (10 or
    11) and an internet connection. It is best if your computer has at least 16 GB
    of memory, and, of course, you’ll need room on your disk for the software and
    for the code you will write.
  prefs: []
  type: TYPE_NORMAL
- en: You can create APIs on any platform (e.g., Linux) and use any development environment
    (e.g., Visual Studio Code instead of Visual Studio). This book, however, will
    focus on Visual Studio and Windows as they are the most popular and arguably the
    most powerful way to create . NET APIs.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code files for this book are available in the book’s GitHub repository:
    [https://github.com/PacktPublishing/Programming-APIs-with-C-Sharp-and-.NET](https://github.com/PacktPublishing/Programming-APIs-with-C-Sharp-and-.NET)
    .'
  prefs: []
  type: TYPE_NORMAL
- en: Where does the API fit in?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When you are creating a decoupled application, your principal parts are:'
  prefs: []
  type: TYPE_NORMAL
- en: The front end
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The back end
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The middleware
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A typical front end might be a web application, a mobile application, or other
    ways of displaying data.
  prefs: []
  type: TYPE_NORMAL
- en: A typical backend might be a database or another service.
  prefs: []
  type: TYPE_NORMAL
- en: The middleware sits between the front end and the back end. The most important
    middleware is the API. The job of the API is to ensure that the front end and
    back end are decoupled – that is, you can modify one without affecting the other.
    This is simply good programming practice and will save you hours (or months) of
    rewriting should either of these change (which they will!).
  prefs: []
  type: TYPE_NORMAL
- en: The players
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Typically, the backend and the frontend are created by different teams, though,
    of course, you can have one developer creating it all. We’re also going to restrict
    our backend to a simple database, though any source of data can be a backend.
    Finally, we’re not going to build a full frontend (that would be a distraction
    from the point of this book) but, rather, we’re going to use a tool, **Postman**
    , to mimic a frontend. There will be more on Postman throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: Getting set up
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can create your backend, API, and frontend on any operating system you like.
    For this book, we’ll be creating all three on Windows, using **Visual Studio 2022**
    , the latest Postman, and **Dapper** as a simple **Object Relational Mapper**
    ( **ORM** ) to make our lives easier. There are a few other simple tools we’ll
    be using, so let’s get you set up.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the free software you need
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To get started, if you don’t have Visual Studio installed, go to [https://visualstudio.com](https://visualstudio.com)
    and click on **Downloads** (this site changes frequently but the basic steps remain
    the same). You have three choices of which version to download: **Community**
    , **Professional** , and **Enterprise** . The Community version is free and will
    provide all you need to follow along in this book.'
  prefs: []
  type: TYPE_NORMAL
- en: When you click on your choice, Visual Studio Setup will download to your **downloads**
    directory. Double-click on it and click on **Yes** at the security prompt. The
    installer will update itself and then will begin the installation. This can take
    a little while, but don’t go away as you have some selections to make.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you have Visual Studio installed but for some reason want to install the
    Community Edition as well, that is no problem as they can run side by side.
  prefs: []
  type: TYPE_NORMAL
- en: A menu will appear similar to *Figure 1* *.1* (if it does not, click **Modify**
    ).
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.1 – Setting up Visual Studio: please note that this screenshot intends
    to show the layout, so text readability is not essential](img/B21988_01_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.1 – Setting up Visual Studio: please note that this screenshot intends
    to show the layout, so text readability is not essential'
  prefs: []
  type: TYPE_NORMAL
- en: Be sure that **ASP.NET and web development** is checked. Scroll down and check
    **Data storage and processing** (if you are short on disk space, skip this one).
    Once you are satisfied, click on **Install while downloading** and then click
    on **Modify** .
  prefs: []
  type: TYPE_NORMAL
- en: SQL Server will be installed for you, as will **SQL Server Management Studio**
    ( **SSMS** ). You will typically interact with SQL Server through SSMS. We will
    look at how to work with this tool, and all the others, as we go.
  prefs: []
  type: TYPE_NORMAL
- en: Your next tool is Dapper. This is a small, lightweight ORM (often called a micro-ORM)
    that does one important part of the work of the much bigger SQL platform, Entity
    Framework, but with much less overhead. Specifically, Dapper will map queries
    to objects.
  prefs: []
  type: TYPE_NORMAL
- en: 'Since our needs will be minimal, Dapper will be more than enough. You can read
    more about Dapper here: [https://www.learndapper.com/](https://www.learndapper.com/)
    .'
  prefs: []
  type: TYPE_NORMAL
- en: We will mimic our user interface with Postman, which we will also use for end-to-end
    testing. You can get the latest version of Postman at [https://postman.com/downloads](https://postman.com/downloads)
    . You can also access Postman through your browser, but we’ll be using the downloaded
    version.
  prefs: []
  type: TYPE_NORMAL
- en: Postman is surprisingly powerful, and we will review how we will use it as we
    go along. That said, we will only scratch the surface of what you can do with
    this tool, so at some point, you may want to read the documentation.
  prefs: []
  type: TYPE_NORMAL
- en: We will be using Swagger for documentation (see [*Chapter 4*](B21998_04.xhtml#_idTextAnchor056)
    ), and the built-in logger functionality for (surprise!) logging errors and issues
    that will not be surfaced to the user, but which will be useful for you as the
    programmer.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you saw what software you will need, how to download it, and
    how to install it. All of the software we’ll be using in this book is free. In
    the next chapter, we will see the example application that we’ll build to illustrate
    a meaningful use of an API.
  prefs: []
  type: TYPE_NORMAL
- en: You try it
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Be sure to download and install all of the software described if you want to
    follow along as we create the API.
  prefs: []
  type: TYPE_NORMAL
