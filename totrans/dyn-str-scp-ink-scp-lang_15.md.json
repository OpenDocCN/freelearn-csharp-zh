["```cs\n{shuffle:\n    - <- encounter.animal\n    - <- encounter.machine\n    - <- encounter.person\n}\n```", "```cs\n{shuffle:\n    - <- encounter.animal\n    - <- encounter.machine\n    - <- encounter.person\n}\n== encounter\n= animal\nYou hear a soft thud and then see a face peering at you. The sound starts as if it is a meow and then turns into language the longer you listen. \"Meee-Hello. Sorry. I'm not used to talking to people.\n-> DONE\n= machine\nThe small machine buzzes to life in front of you. \"Hi, there! I'm Ge8at10, but you can call me 'Great!'\"\n-> DONE\n= person\nYou look around and see a man standing awkwardly against a tree. He waves and then looks away before speaking. \"Uh. Yeah. Over here. Hi.\"\n-> DONE\n```", "```cs\nVAR percentage = 0\n~ percentage = RANDOM(1,10)\n{\n    - percentage <= 3: \n        <- encounter.brown_wizard\n    - else:\n        <- encounter.travel\n}\n== encounter\n= brown_wizard\nAs you move through the forest, you encounter a strange man on a sled driven by large rabbits. You talk for a moment before the man moves away from you and deeper into the forest.\n-> DONE\n= travel\nThey travel through the forest.\n-> DONE\n```", "```cs\nVAR percentage = 0\nA vast forest stretches out before you and alongside the forest is a winding river.\n* (travel_forest) [Enter the forest]\n* (travel_river) [Travel by river]\n-\n~ percentage = RANDOM(1,10)\n{\n    - percentage <= 3 && travel_forest == 1: \n        <- encounter.brown_wizard\n    - percentage > 3 && travel_forest == 1:\n        <- encounter.travel\n    - travel_river == 1:\n        <- encounter.river\n}\n== encounter\n= brown_wizard\nAs you move through the forest, you encounter a strange man on a sled driven by large rabbits. You talk for a moment before the man moves away from you and deeper into the forest.\n-> DONE\n= travel\nThey travel through the forest.\n-> DONE\n= river\nYou travel down the river safely.\n-> DONE\n```", "```cs\nFirst, we saw the {getLocation()}. Next, we visited the \n  {getMarker()}.\n== function getLocation() ==\n~ return \"{~tower|ruin|temple}\"\n== function getMarker() ==\n~ return \"{~grave|farmstead|ancient tree}\"\n```", "```cs\n location -> marker -> DONE\n== location\nFirst, we saw the <>\n{shuffle:\n    - tower\n    - ruin\n    - temple\n}<>.\n->->\n== marker\nNext, we saw the <>\n{shuffle:\n    - grave\n    - farmstead\n    - ancient tree\n}<>.\n->->\n```", "```cs\nVAR location_pick = 0\n-> location -> marker -> DONE\n== location\nFirst, we saw the <>\n{shuffle:\n    - tower\n        ~ location_pick = \"tower\"\n    - ruin\n        ~ location_pick = \"ruin\"\n    - temple\n        ~ location_pick = \"temple\"\n}<>.\n->->\n== marker\nNext, we saw the <>\n{\n    - location_pick == \"tower\":\n       {shuffle:\n            - grave\n            - memorial stone\n        }\n    - else:\n        {shuffle:\n            - farmstead\n            - ancient tree\n        }\n}<>.\n->->\n```", "```cs\nvoid GetFiles()\n{\n     string inkPath = Application.dataPath + \"/Ink/\";\n     foreach (string file in Directory.GetFiles(inkPath,\n       \"*.json\"))\n     {\n           string contents = File.ReadAllText(file);\n           Stories.Add(new Story(contents));\n     }\n}\n```", "```cs\nvoid PickRandomStory()\n{\n      if (Stories.Count > 0)\n     {\n           System.Random rand = new System.Random();\n           int index = rand.Next(Stories.Count);\n           Story entry = Stories[index];\n           Stories.RemoveAt(index);\n           UpdateContent(entry);\n     }\n     else\n     {\n           SceneDescription.text = \"(There are no more\n             stories.)\";\n     }\n}\n```", "```cs\nvoid Start()\n{\n     Stories = new List<Story>();\n     UpdateStatistics();\n     GetFiles();\n     PickRandomStory();\n}\n```", "```cs\npublic void ObserveVariables(Story.VariableObserver\n  callback)\n{\n      InkStory.ObserveVariables(new List<string>() {\n        \"violence\", \"peace\" }, callback);\n}\npublic void UpdateVariable(string name, object value)\n{\n      if(InkStory.variablesState.\n        GlobalVariableExistsWithName(name))\n      {\n          if (!InkStory.variablesState[name].Equals(value))\n          {\n                 InkStory.variablesState[name] = value;\n          }\n      }\n}\n```", "```cs\npublic bool Available()\n{\n     bool result = false;\n     if(InkStory.HasFunction(\"check\"))\n     {\n           result = (bool)\n              InkStory.EvaluateFunction(\"check\");\n     }\n     return result;\n}\n```", "```cs\nList<ConditionalStory> selection = Stories.FindAll(e => \n  e.Available());\nif (selection.Count > 0)\n{\n      System.Random rand = new System.Random();\n      int index = rand.Next(selection.Count);\n      ConditionalStory entry = selection[index];\n      Stories.Remove(entry);\n      UpdateContent(entry);\n}\n```"]