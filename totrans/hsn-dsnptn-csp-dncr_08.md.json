["```cs\npublic class Product\n{\n   public Guid Id { get; set; }\n   public string Name { get; set; }\n   public string Description { get; set; }\n   public string Image { get; set; }\n   public decimal Price { get; set; }\n   public Guid CategoryId { get; set; }\n   public virtual Category Category { get; set; }\n}\n```", "```cs\npublic class Category\n{\n    public Category()\n    {\n        Products = new List<Product>();\n    }\n\n    public Guid Id { get; set; }\n    public string Name { get; set; }\n    public string Description { get; set; }\n    public virtual IEnumerable<Product> Products { get; set; }\n}\n```", "```cs\npublic class ProductViewModel\n{\n    public Guid ProductId { get; set; }\n    public string ProductName { get; set; }\n    public string ProductDescription { get; set; }\n    public string ProductImage { get; set; }\n    public decimal ProductPrice { get; set; }\n    public Guid CategoryId { get; set; }\n    public string CategoryName { get; set; }\n    public string CategoryDescription { get; set; }\n}\n```", "```cs\npublic class ProductController : Controller\n{\n    private readonly IInventoryRepositry _repositry;\n    public ProductController(IInventoryRepositry inventoryRepositry) => _repositry = inventoryRepositry;\n\n...\n}\n```", "```cs\n   public IActionResult Index() => View(_repositry.GetProducts().ToProductvm());\n   public IActionResult Details(Guid id) => View(_repositry.GetProduct(id).ToProductvm());\n```", "```cs\npublic IActionResult Create() => View();\n[HttpPost]\n[ValidateAntiForgeryToken]\npublic IActionResult Create([FromBody] Product product)\n{\n    try\n    {\n        _repositry.AddProduct(product);\n        return RedirectToAction(nameof(Index));\n    }\n    catch\n    {\n        return View();\n    }\n}\n```", "```cs\npublic IActionResult Edit(Guid id) => View(_repositry.GetProduct(id));\n\n[HttpPost]\n[ValidateAntiForgeryToken]\npublic IActionResult Edit(Guid id, [FromBody] Product product)\n{\n    try\n    {\n        _repositry.UpdateProduct(product);\n        return RedirectToAction(nameof(Index));\n    }\n    catch\n    {\n        return View();\n    }\n}\n```", "```cs\npublic IActionResult Delete(Guid id) => View(_repositry.GetProduct(id));\n\n[HttpPost]\n[ValidateAntiForgeryToken]\npublic IActionResult Delete(Guid id, [FromBody] Product product)\n{\n    try\n    {\n        _repositry.RemoveProduct(product);\n        return RedirectToAction(nameof(Index));\n    }\n    catch\n    {\n        return View();\n    }\n}\n```", "```cs\npublic class CategoryController: Controller\n{\n  private readonly IInventoryRepositry _inventoryRepositry;\n  public CategoryController(IInventoryRepositry inventoryRepositry) => _inventoryRepositry = inventoryRepositry;\n //code omitted\n}\n```", "```cs\npublic IActionResult Index() => View(_inventoryRepositry.GetCategories());\npublic IActionResult Details(Guid id) => View(_inventoryRepositry.GetCategory(id));\n```", "```cs\npublic IActionResult Create() => View();\n    [HttpPost]\n    [ValidateAntiForgeryToken]\n    public IActionResult Create([FromBody] Category category)\n    {\n        try\n        {\n            _inventoryRepositry.AddCategory(category);\n\n            return RedirectToAction(nameof(Index));\n        }\n        catch\n        {\n            return View();\n        }\n    }\n```", "```cs\npublic IActionResult Edit(Guid id) => View(_inventoryRepositry.GetCategory(id));\n    [HttpPost]\n    [ValidateAntiForgeryToken]\n    public IActionResult Edit(Guid id, [FromBody]Category category)\n    {\n        try\n        {\n            _inventoryRepositry.UpdateCategory(category);\n\n            return RedirectToAction(nameof(Index));\n        }\n        catch\n        {\n            return View();\n        }\n    }\n```", "```cs\npublic IActionResult Delete(Guid id) => View(_inventoryRepositry.GetCategory(id));\n\n    [HttpPost]\n    [ValidateAntiForgeryToken]\n    public IActionResult Delete(Guid id, [FromBody] Category category)\n    {\n        try\n        {\n            _inventoryRepositry.RemoveCategory(category);\n\n            return RedirectToAction(nameof(Index));\n        }\n        catch\n        {\n            return View();\n        }\n    }\n```", "```cs\npublic class InventoryContext : DbContext\n{\n    public InventoryContext(DbContextOptions<InventoryContext> options)\n        : base(options)\n    {\n    }\n\n    public InventoryContext()\n    {\n    }\n\n    public DbSet<Product> Products { get; set; }\n    public DbSet<Category> Categories { get; set; }\n}\n```"]