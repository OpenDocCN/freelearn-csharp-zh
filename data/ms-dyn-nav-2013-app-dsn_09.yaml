- en: Chapter 9. Interfacing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。接口
- en: When the first version of Microsoft Dynamics NAV for Windows was released in
    1995, the system was very closed. It was possible to import and export data using
    flat text files and that was basically it. These flat text files were placed on
    a floppy disk and sent by postal mail. Internet and e-mail were just coming, large
    USB sticks were a dream, and when the previous version of this book was released
    in 2009, OneDrive and Azure where being invented.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当1995年发布第一个Windows版本的Microsoft Dynamics NAV时，系统非常封闭。可以使用平面文本文件导入和导出数据，这基本上就是全部。这些平面文本文件被放在软盘上，通过邮政邮件发送。互联网和电子邮件刚刚兴起，大容量U盘还是一个梦想，而在这本书的前一个版本2009年发布时，OneDrive和Azure正在被发明。
- en: Since then, the world has changed tremendously. Internet, e-mail, SQL Server,
    .NET, and Azure changed the way we think about interfacing with applications and
    we are still changing. Today Microsoft Dynamics NAV 2013 has a completely open
    database and supports a wide range of interfacing possibilities, which we will
    learn in this chapter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 从那时起，世界发生了巨大的变化。互联网、电子邮件、SQL Server、.NET和Azure改变了我们思考与应用程序接口的方式，我们仍在不断变化。今天，Microsoft
    Dynamics NAV 2013拥有一个完全开放的数据库，支持广泛的接口可能性，我们将在本章中学习这些。
- en: Version 1.0 of Navision ran on Windows 95, which later became an industry standard
    and for more than a decade, Windows was the only serious platform. Today, business
    people use iPads and Android tablets. Microsoft Dynamics NAV 2013 is one of few
    ERP platforms that can run cross-platform on all devices, even supporting login
    using Google or Facebook credentials.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Navision的1.0版本在Windows 95上运行，后来成为行业标准，超过十年，Windows是唯一严肃的平台。今天，商业人士使用iPad和Android平板电脑。Microsoft
    Dynamics NAV 2013是少数几个可以在所有设备上跨平台运行的ERP平台之一，甚至支持使用Google或Facebook凭证登录。
- en: In this chapter, we will first discuss the available interfacing technologies
    and the interfaces available in the standard product. Then we will talk about
    interfacing methodology and how to create reliable interfaces.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先将讨论可用的接口技术和标准产品中的接口。然后我们将讨论接口方法以及如何创建可靠的接口。
- en: At the end of the chapter, we will create some sample interfaces and see how
    the future will further improve interfacing.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，我们将创建一些示例界面，并看看未来将如何进一步改进界面。
- en: After reading this chapter, you will have a good understanding of what interfaces
    the product supports out of the box, what interfacing technologies to use, and
    how to design a solid business to business interface.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读本章后，您将很好地理解产品默认支持哪些接口，应使用哪些接口技术，以及如何设计一个稳固的B2B接口。
- en: Interface types
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 界面类型
- en: 'When discussing an interface, we usually start with the technology, but before
    that, some other basic questions need answering, such as the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论接口时，我们通常从技术开始，但在那之前，需要回答一些其他基本问题，例如以下问题：
- en: Does it need to import, export, or both?
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否需要导入、导出或两者都要？
- en: Is it started manually or automatically?
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是手动启动还是自动启动？
- en: Is the interface timer or event driven?
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接口是定时器驱动还是事件驱动？
- en: Let's discuss these questions.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来讨论这些问题。
- en: Import and export
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入和导出
- en: The first question is whether the interface should only export data from Microsoft
    Dynamics NAV or whether it would also import data to the system that then needs
    to be processed.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个问题是要不要只从Microsoft Dynamics NAV导出数据，还是它也会导入需要处理的数据到系统中。
- en: When importing and exporting, the data process can be started manually by an
    end user using data pulling or data pushing. The interface can also be event-
    (real time) or timer-driven (asynchronous).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在导入和导出过程中，数据处理可以通过终端用户手动启动，使用数据拉取或数据推送。界面也可以是事件驱动（实时）或定时器驱动（异步）。
- en: '![Import and export](img/0365EN_09_01.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![导入和导出](img/0365EN_09_01.jpg)'
- en: Manual
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 手动
- en: When an interface is manual, the first application has an export process and
    another application has an import process. The end user first manually starts
    the export process and then manually starts the import process in another application,
    usually saving the data to a flat file. This is a classic approach to interfacing.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当接口是手动时，第一个应用程序有一个导出过程，另一个应用程序有一个导入过程。终端用户首先手动启动导出过程，然后在另一个应用程序中手动启动导入过程，通常将数据保存到平面文件中。这是一种经典的接口方法。
- en: An example of manual interfacing is exporting telebanking information from Microsoft
    Dynamics NAV or sending XBRL files to your accountant.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 手动接口的一个例子是从Microsoft Dynamics NAV导出网上银行信息或将XBRL文件发送给您的会计师。
- en: Data pulling
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据拉取
- en: When using data pulling to export data, the interface is started from an external
    application. This application will read the data from the database and process
    it.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用数据拉取导出数据时，接口从外部应用程序启动。该应用程序将从数据库中读取数据并进行处理。
- en: When using data pulling to import data, the interface is started from the application,
    which reads and processes data from another application.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用数据拉取导入数据时，接口从应用程序启动，该应用程序从另一个应用程序读取并处理数据。
- en: Data pushing
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据推送
- en: If an interface uses data pushing, the exporting application writes the data
    to the other data source. This method is used when the data in the other application
    does not need further processing. A typical example is exporting data from Microsoft
    Dynamics NAV to Microsoft Office applications such as Word or Excel.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果接口使用数据推送，导出应用程序将数据写入其他数据源。当其他应用程序中的数据不需要进一步处理时，使用此方法。一个典型的例子是将 Microsoft Dynamics
    NAV 中的数据导出到 Microsoft Office 应用程序，如 Word 或 Excel。
- en: Event-driven versus timer-driven
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 事件驱动与定时器驱动
- en: When data pushing or data pulling is combined with the use of events or timers,
    there is no longer a need for end user interference. The interface will then run
    automatically.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据推送或数据拉取与事件或定时器的使用结合时，不再需要最终用户干预。此时，接口将自动运行。
- en: We will discuss these methods in detail later in this chapter when we discuss
    interface methodologies.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章后面讨论接口方法时详细讨论这些方法。
- en: Interfacing technologies
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接口技术
- en: In Microsoft Dynamics NAV, there are a wide range of methods to interface. Each
    method is useful for certain types of interfacing and less useful for other types.
    We will discuss all available methods in the C/SIDE development platform.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Microsoft Dynamics NAV 中，有广泛的方法用于接口。每种方法对某些类型的接口很有用，而对其他类型的接口则不太有用。我们将在 C/SIDE
    开发平台中讨论所有可用的方法。
- en: File
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件
- en: Flat files and XML files are both supported by Microsoft Dynamics NAV. Flat
    files have been available since the introduction of the product in 1995 using
    data ports for the classic clients.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 平面文件和 XML 文件都受 Microsoft Dynamics NAV 支持。自 1995 年产品推出以来，平面文件一直可用，使用数据端口为经典客户端提供服务。
- en: XML support was introduced in Version 3.60 as an extra option for data ports.
    Version 4.0 introduced the `XMLPort` object that replaced the data port for importing
    and exporting XML files.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在版本 3.60 中引入了 XML 支持，作为数据端口的额外选项。版本 4.0 引入了 `XMLPort` 对象，用于替换导入和导出 XML 文件的端口。
- en: Currently in Microsoft Dynamics NAV 2013, `XMLPort` objects are used both for
    XML and flat files. Additionally, C/AL has a `FILE` object that can be used to
    access files directly without using `XMLPort` objects.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 目前在 Microsoft Dynamics NAV 2013 中，`XMLPort` 对象用于 XML 和平面文件。此外，C/AL 有一个 `FILE`
    对象，可以用来直接访问文件，而无需使用 `XMLPort` 对象。
- en: Automation control
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化控制
- en: The implementation for Microsoft COM and ActiveX in Microsoft Dynamics NAV is
    referred to as automation control.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Microsoft Dynamics NAV 中，Microsoft COM 和 ActiveX 的实现被称为自动化控制。
- en: Automation control or ActiveX allows software applications to be reused as an
    embedded part of another application. Most Microsoft applications support being
    used in such a way. Examples are Microsoft Office, Windows Scripting Host, and
    **ActiveX Data Objects** (**ADO**).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化控制或 ActiveX 允许软件应用程序作为另一个应用程序的嵌入部分被重用。大多数 Microsoft 应用程序都支持以这种方式使用。例如，Microsoft
    Office、Windows 脚本宿主和 **ActiveX 数据对象** (**ADO**)。
- en: Microsoft Dynamics NAV has support for automation control. Consuming automation
    control is done using interfaces exposing methods and properties.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Dynamics NAV 支持自动化控制。消费自动化控制是通过暴露方法和属性的接口来完成的。
- en: The most commonly used and generic interface is iUnknown. This is also the only
    automation control interface supported by Microsoft Dynamics NAV. If the automation
    control uses other interfaces, a wrapper should be created in Visual Studio transforming
    the interface to iUnknown. We should also create a wrapper when the automation
    control needs to be embedded using a form control.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 最常用且通用的接口是 iUnknown。这也是 Microsoft Dynamics NAV 支持的唯一自动化控制接口。如果自动化控制使用其他接口，应在
    Visual Studio 中创建一个包装器，将接口转换为 iUnknown。当自动化控制需要通过表单控件嵌入时，也应创建包装器。
- en: Note
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: More information about the iUnknown interface and COM technology can be found
    at [http://en.wikipedia.org/wiki/IUnknown](http://en.wikipedia.org/wiki/IUnknown).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 iUnknown 接口和 COM 技术的更多信息可以在 [http://en.wikipedia.org/wiki/IUnknown](http://en.wikipedia.org/wiki/IUnknown)
    找到。
- en: Events
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事件
- en: Most automation controls allow data to be pushed. Using events for automation
    control, it is also possible to start business logic in Microsoft Dynamics NAV
    when something happens in the other application.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数自动化控制允许数据推送。使用自动化控制的触发事件，当其他应用程序发生某些事件时，也可以在 Microsoft Dynamics NAV 中启动业务逻辑。
- en: Limitations
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 局限性
- en: In Microsoft Dynamics NAV 2013, automation control can only be used from the
    client side. All code that runs on the server side cannot use automation control
    objects.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Microsoft Dynamics NAV 2013 中，自动化控制只能从客户端使用。在服务器端运行的任何代码都不能使用自动化控制对象。
- en: DotNet interoperability
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DotNet 互操作性
- en: The support of .NET was introduced as a replacement for automation control.
    It is possible to use a wide range of .NET objects directly in C/AL programming
    language. They can be used in both server side and client side.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: .NET 的支持被引入作为自动化控制的替代品。在 C/AL 编程语言中，可以直接使用大量 .NET 对象。它们可以在服务器端和客户端中使用。
- en: Within the standard application, most automation interfaces are replaced with
    .NET interfaces such as the Excel interface, which we will discuss later in this
    chapter.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在标准应用程序中，大多数自动化接口都被 .NET 接口所取代，例如 Excel 接口，我们将在本章后面讨论。
- en: There are limitations using .NET in Microsoft Dynamics NAV, which are typically
    solved by creating wrapper DLL objects in C#. The Excel interface is an example
    of that too.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Microsoft Dynamics NAV 中使用 .NET 存在局限性，通常通过在 C# 中创建包装 DLL 对象来解决。Excel 接口也是这样的例子。
- en: Note
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A good place to start learning about .NET in C/AL is [www.vjeko.com](http://www.vjeko.com).
    The limitations are discussed at [http://vjeko.com/blog/top-10-things-i-miss-in-net-interoperability-in-nav-2013](http://vjeko.com/blog/top-10-things-i-miss-in-net-interoperability-in-nav-2013).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在 C/AL 中学习 .NET 的一个好地方是[www.vjeko.com](http://www.vjeko.com)。局限性在[http://vjeko.com/blog/top-10-things-i-miss-in-net-interoperability-in-nav-2013](http://vjeko.com/blog/top-10-things-i-miss-in-net-interoperability-in-nav-2013)中讨论。
- en: Client extensibility
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 客户端可扩展性
- en: Using the page objects, the level of allowed creativity in the user interface
    is very limited since the page objects do not provide WYSIWYG capabilities or
    allow the developer to determine control positions. Each client determines how
    the UI is rendered and the developer has no control. This is solved using client
    extensibility. This technology allows using all UI capabilities that Visual Studio
    and .NET offer, however, when developing for cross-platform, JavaScript should
    be used.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 使用页面对象，由于页面对象不提供所见即所得（WYSIWYG）功能或允许开发者确定控件位置，用户界面的允许创造性非常有限。每个客户端都决定如何渲染 UI，开发者无法控制。这可以通过客户端可扩展性来解决。这项技术允许使用
    Visual Studio 和 .NET 提供的所有 UI 功能，然而，在开发跨平台应用时，应使用 JavaScript。
- en: Note
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Refer to [https://www.youtube.com/watch?v=WErBd1mlZFM](https://www.youtube.com/watch?v=WErBd1mlZFM)
    to learn how to get started with JavaScript add-ins for Microsoft Dynamics NAV.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考[https://www.youtube.com/watch?v=WErBd1mlZFM](https://www.youtube.com/watch?v=WErBd1mlZFM)了解如何开始使用
    Microsoft Dynamics NAV 的 JavaScript 插件。
- en: Open Database Connectivity (ODBC)/ADO
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Open Database Connectivity (ODBC)/ADO
- en: '**Open Database Connectivity** (**ODBC**) was developed in 1992 with the goal
    of allowing all types of databases to exchange data in a unified way. ADO is the
    successor of ODBC and was developed in 1996.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**开放数据库连接**（**ODBC**）于 1992 年开发，旨在允许所有类型的数据库以统一的方式交换数据。ADO 是 ODBC 的继任者，于 1996
    年开发。'
- en: ADO and ODBC for Microsoft Dynamics NAV allows both reading and writing in the
    application database as well as reading and writing to other databases.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Dynamics NAV 的 ADO 和 ODBC 允许在应用程序数据库中读取和写入，以及读取和写入其他数据库。
- en: Note
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Using ADO and ODBC more advanced requires basic knowledge of T-SQL Statements.
    Refer to [http://www.differencebetween.com/difference-between-odbc-and-vs-ado/](http://www.differencebetween.com/difference-between-odbc-and-vs-ado/)
    for the differences between ADO and ODBC.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 ADO 和 ODBC 更高级的功能需要基本的 T-SQL 语句知识。有关 ADO 和 ODBC 之间的区别，请参阅[http://www.differencebetween.com/difference-between-odbc-and-vs-ado/](http://www.differencebetween.com/difference-between-odbc-and-vs-ado/)。
- en: Reading from Microsoft Dynamics NAV
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从 Microsoft Dynamics NAV 读取
- en: To read data from the database, you only need to have a valid ODBC driver installed
    on the Windows machine that you are using and credentials to log in to the database.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要从数据库中读取数据，您只需在您使用的 Windows 机器上安装有效的 ODBC 驱动程序，并拥有登录到数据库的凭据。
- en: Let's create an example to import data from Microsoft Dynamics NAV using Excel.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个示例来展示如何使用 Excel 从 Microsoft Dynamics NAV 导入数据。
- en: Open Microsoft Excel and select **Data** and then select **From SQL Server**
    form **From Other Sources**, as shown in the following screenshot:![Reading from
    Microsoft Dynamics NAV](img/0365EN_09_02.jpg)
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Microsoft Excel，选择**数据**，然后从**其他来源**中选择**从SQL Server**，如图所示：![从Microsoft Dynamics
    NAV读取](img/0365EN_09_02.jpg)
- en: From SQL Server
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从SQL Server
- en: Select a **Server name** and valid **Credentials**:![Reading from Microsoft
    Dynamics NAV](img/0365EN_09_03.jpg)
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个**服务器名称**和有效的**凭据**：![从Microsoft Dynamics NAV读取](img/0365EN_09_03.jpg)
- en: Select a database and the table that you want to view. In our example, we will
    select the **Customer** table. Then select **Finish** and **OK**.![Reading from
    Microsoft Dynamics NAV](img/0365EN_09_04.jpg)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个数据库和您想要查看的表。在我们的示例中，我们将选择**客户**表。然后选择**完成**和**确定**。![从Microsoft Dynamics
    NAV读取](img/0365EN_09_04.jpg)
- en: We now have the Microsoft Dynamics NAV Data in Excel.![Reading from Microsoft
    Dynamics NAV](img/0365EN_09_05.jpg)
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经将Microsoft Dynamics NAV数据导入Excel中。![从Microsoft Dynamics NAV读取](img/0365EN_09_05.jpg)
- en: Note
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Since flow fields are not actual fields in the SQL Server database, we cannot
    use them in ODBC/ADO.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于流字段不是SQL Server数据库中的实际字段，我们无法在ODBC/ADO中使用它们。
- en: Writing to Microsoft Dynamics NAV
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 向Microsoft Dynamics NAV写入
- en: Directly writing data to the Microsoft Dynamics NAV database using ODBC is not
    recommended as best practice. The reason for this is the missing business logic
    at this interface level.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 建议不要使用ODBC直接将数据写入Microsoft Dynamics NAV数据库，因为这不符合最佳实践。原因在于此接口级别缺少业务逻辑。
- en: When writing via ODBC, we directly address SQL Server without allowing the C/AL
    business logic to validate the data we create. The C/AL data normally ensures
    data integrity for the business rules we develop. The same applies when using
    the C/ODBC driver for the native database.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当通过ODBC写入时，我们直接针对SQL Server，而不允许C/AL业务逻辑验证我们创建的数据。C/AL数据通常确保我们开发业务规则的数据完整性。使用C/ODBC驱动程序对本地数据库也是如此。
- en: Note
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To work around this issue, the data can be saved in a special interface buffer
    table and processed by a C/AL transaction using an application server or started
    from the user interface.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，数据可以保存在一个特殊的接口缓冲表，并通过应用程序服务器或从用户界面启动的C/AL事务进行处理。
- en: Talking to other databases
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与其他数据库通信
- en: To use ODBC to read and write data from Microsoft Dynamics NAV to other databases,
    it is recommended to use **ActiveX Data Objects** (**ADO**). ADO is a Microsoft
    technology that allows using an ActiveX interface to connect using ODBC. Using
    ADO allows us to both read and write to the database on the other end.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用ODBC从Microsoft Dynamics NAV读取和写入其他数据库中的数据，建议使用**ActiveX数据对象**（**ADO**）。ADO是Microsoft技术，允许使用ActiveX接口通过ODBC进行连接。使用ADO允许我们读取和写入另一端的数据库。
- en: We could even use ADO to connect to the Microsoft Dynamics NAV SQL Server database
    and run SQL Statements from C/AL code.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以使用ADO连接到Microsoft Dynamics NAV SQL Server数据库，并从C/AL代码中运行SQL语句。
- en: Note
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We will use ADO in the interface methodology section of this chapter.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章的接口方法部分使用ADO。
- en: SQL Server interfacing
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SQL Server接口
- en: 'Since Microsoft Dynamics NAV runs on top of a SQL Server database, we can use
    all available technologies in SQL Server to get data in and out. This offers a
    wide range of options that go beyond the scope of this book, but let''s briefly
    discuss some of them:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Microsoft Dynamics NAV运行在SQL Server数据库之上，我们可以使用SQL Server中所有可用的技术来获取数据。这提供了超出本书范围的大量选项，但让我们简要讨论其中的一些：
- en: '**Linked Servers**: In SQL Server, it is possible to set up linked servers.
    This allows us to send queries to other databases such as other SQL Servers, MS
    Access, or Oracle and create views based on this data.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**链接服务器**：在SQL Server中，可以设置链接服务器。这允许我们将查询发送到其他数据库，如其他SQL Server、MS Access或Oracle，并基于这些数据创建视图。'
- en: '**Views**: A view in SQL Server is a saved query with a fixed result set that
    can be interpreted as a table. In C/Side, we can use a view as a data source for
    a table using the Linked Object property and create a page or report based on
    this data source.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视图**：SQL Server中的视图是一个具有固定结果集的保存查询，可以将其视为一个表。在C/Side中，我们可以使用视图作为表的源数据，通过Linked
    Object属性创建页面或报告。'
- en: '**SQL Server Integration Services**: This replaces DTS Packages as the primary
    component for SQL Server to integrate with other databases. Using SSIS requires
    good knowledge and skills of both SQL Server and Microsoft Dynamics NAV.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQL Server Integration Services**：这是SQL Server与其他数据库集成的首选组件，取代了DTS包。使用SSIS需要具备良好的SQL
    Server和Microsoft Dynamics NAV的知识和技能。'
- en: '**Reporting Services**: This is a server-based reporting platform that can
    be integrated with SharePoint allowing users to design RDL reports based on T-SQL
    queries.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**报表服务**：这是一个基于服务器的报表平台，可以与 SharePoint 集成，允许用户根据 T-SQL 查询设计 RDL 报表。'
- en: '**Analysis Services**: This is Microsoft''s answer to the OLAP, BI, and data
    mining requirements of their customers.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分析服务**：这是微软对其客户 OLAP、BI 和数据挖掘需求的回应。'
- en: Tip
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Another SQL Server component we can use is the SQL Server Agent. This component
    allows us to schedule interface tasks that run directly on the database.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另一个我们可以使用的 SQL Server 组件是 SQL Server Agent。该组件允许我们安排直接在数据库上运行的接口任务。
- en: Microsoft Message Queue
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Microsoft 消息队列
- en: '**Microsoft Message Queue** (**MSMQ**) allows applications to integrate that
    run asynchronously with an unreliable connection. This interfacing technology
    is very popular for websites that use information from Microsoft Dynamics NAV
    and send information back to the database.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**Microsoft 消息队列** (**MSMQ**) 允许应用程序集成那些运行在不可靠连接上的异步应用程序。这种接口技术在需要从 Microsoft
    Dynamics NAV 获取信息并将信息发送回数据库的网站上非常受欢迎。'
- en: The introduction of .NET Interoperability made using MSMQ in combination with
    Microsoft Dynamics NAV much easier. Using `System.Messaging.MessageQueue` only
    a few lines of C/AL code are required to post a message on a queue.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: .NET 互操作性的引入使得在 Microsoft Dynamics NAV 中使用 MSMQ 变得更加容易。使用 `System.Messaging.MessageQueue`
    只需要几行 C/AL 代码就可以在队列上发布消息。
- en: Application server
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用程序服务器
- en: MSMQ is always combined with using an application server to handle the requests
    sent back by the website.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: MSMQ 总是与使用应用程序服务器结合使用，以处理网站发送回的请求。
- en: '![Application server](img/0365EN_09_07.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![应用程序服务器](img/0365EN_09_07.jpg)'
- en: The web users can be employees from the company using a web solution for timesheet
    registration or a PDA or customers using a web shop.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Web 用户可以是使用 Web 解决方案进行工时登记的员工、PDA 或使用 Web 商店的客户。
- en: Note
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This blog entry at [http://mibuso.com/blogs/ara3n/2011/01/10/using-ado-on-rtc-in-nav/](http://mibuso.com/blogs/ara3n/2011/01/10/using-ado-on-rtc-in-nav/)
    explains how to get started with MSMQ using .NET.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [http://mibuso.com/blogs/ara3n/2011/01/10/using-ado-on-rtc-in-nav/](http://mibuso.com/blogs/ara3n/2011/01/10/using-ado-on-rtc-in-nav/)
    的这篇博客文章中解释了如何使用 .NET 开始使用 MSMQ。
- en: Web services
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Web 服务
- en: When it comes to real-time interfacing, web services is the first technology
    of choice. Web services allows you to use function libraries from applications
    inside other applications.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到实时接口时，Web 服务是首选的技术。Web 服务允许您使用来自其他应用程序的应用程序功能库。
- en: Microsoft Dynamics NAV 2013 allows you to expose all C/AL code as a web service
    using SOAP and OData protocols.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Dynamics NAV 2013 允许您使用 SOAP 和 OData 协议将所有 C/AL 代码暴露为 Web 服务。
- en: Consuming web services is a lot more difficult than exposing one. There is no
    standard framework of doing so. The two most commonly used solutions are consuming
    using XMLDOM .NET interop objects or wrapping the web service inside a Visual
    Studio `.dll` using service references.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 消费 Web 服务比暴露 Web 服务要困难得多。没有标准框架来做这件事。最常用的两种解决方案是使用 XMLDOM .NET 互操作对象进行消费，或者使用
    Visual Studio `.dll` 中的服务引用将 Web 服务包装起来。
- en: Exposing a NAV web service
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 暴露 NAV Web 服务
- en: In Microsoft Dynamics NAV 2013, every `Page` object and most codeunits can be
    exposed as a web service. This can be done using the **Web Service Table (2000000076)**.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Microsoft Dynamics NAV 2013 中，每个 `页面` 对象和大多数代码单元都可以暴露为 Web 服务。这可以通过使用 **Web
    服务表 (2000000076)** 来实现。
- en: '![Exposing a NAV web service](img/0365EN_09_08.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![暴露 NAV Web 服务](img/0365EN_09_08.jpg)'
- en: To publish a web service, select the object type and object ID and find a unique
    service name. Then select the **Published** checkmark.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 要发布 Web 服务，选择对象类型和对象 ID，找到一个唯一的服务名称。然后选择 **已发布** 复选框。
- en: When publishing a web service, the URL is displayed making it easier to find
    it.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 当发布 Web 服务时，URL 会显示出来，这使得查找它变得更加容易。
- en: Consuming a Microsoft Dynamics NAV web service
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 消费 Microsoft Dynamics NAV Web 服务
- en: To consume the web service, an address, `http://<Server>:<WebServicePort>/<ServerInstance>/WS/<CompanyName>/`,
    is generated that is called from the other application.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 要消费 Web 服务，生成一个地址，`http://<Server>:<WebServicePort>/<ServerInstance>/WS/<CompanyName>/`，这个地址从其他应用程序中调用。
- en: '![Consuming a Microsoft Dynamics NAV web service](img/0365EN_09_09.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![消费 Microsoft Dynamics NAV Web 服务](img/0365EN_09_09.jpg)'
- en: Note
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `SystemService` web service is always available and returns a list of available
    company names.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '`SystemService` Web 服务始终可用，并返回可用公司名称的列表。'
- en: Standard application interfaces
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标准应用程序接口
- en: We discussed all the available interface technologies for Microsoft Dynamics
    NAV. Let's have a look at how this has been implemented in the standard product.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了Microsoft Dynamics NAV所有可用的界面技术。让我们看看这些是如何在标准产品中实现的。
- en: In this book, we will not explore each interface in depth since that would almost
    require another book. We will just briefly discuss where to find all technologies
    we discussed in the standard application and indicate where a white paper or website
    can be found.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们不会深入探讨每个界面，因为这几乎需要另一本书。我们只会简要讨论在标准应用程序中找到所有讨论的技术的地方，并指出可以找到白皮书或网站的地方。
- en: An example of flat file is Exporting Contacts. Microsoft Dynamics NAV allows
    us to export our contacts using an **XMLPort**.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 平文件的一个例子是导出联系人。Microsoft Dynamics NAV允许我们使用**XMLPort**导出我们的联系人。
- en: 'The **XMLPort** for this functionality has number (5050) and uses the Format
    Variable Text. Other options are **Xml** and **Fixed Text**, as shown in the following
    screenshot:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能的**XMLPort**编号为（5050），使用格式变量文本。其他选项有**Xml**和**Fixed Text**，如以下截图所示：
- en: '![Standard application interfaces](img/0365EN_09_11.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![标准应用程序界面](img/0365EN_09_11.jpg)'
- en: '**XMLPorts** have a node structure like pages. The **XMLPort** starts with
    integer table as the first data type followed by the **Contact table** fields.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**XMLPorts**具有类似于页面的节点结构。**XMLPort**以整数表作为第一个数据类型开始，后面跟着**联系人表**字段。'
- en: Note
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: More information about programming **XMLPorts** can be found in *Programming
    Dynamics NAV 2013*, *David A. Studebaker*, *Christopher D. Studebaker*, *Packt
    Publishing*.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于编程**XMLPorts**的信息可以在*Programming Dynamics NAV 2013*，*David A. Studebaker*，*Christopher
    D. Studebaker*，*Packt Publishing*中找到。
- en: Office integration
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Office集成
- en: Microsoft Dynamics NAV and Microsoft Office are integrated to use with Word,
    Excel, and Outlook. We will first discuss the standard Word and Excel integration
    and discuss alternatives later. Lastly, we will briefly discuss the possibilities
    for Outlook integration.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Dynamics NAV和Microsoft Office集成，以便与Word、Excel和Outlook一起使用。我们首先将讨论标准的Word和Excel集成，稍后讨论替代方案。最后，我们将简要讨论Outlook集成的可能性。
- en: Word and Excel integration
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Word和Excel集成
- en: In Microsoft Dynamics NAV, each form or page can be exported to Word and Excel.
    This built-in technology is automatically provided by the user interface and requires
    no effort from developers.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在Microsoft Dynamics NAV中，每个表单或页面都可以导出到Word和Excel。这项内置技术由用户界面自动提供，无需开发者付出任何努力。
- en: '![Word and Excel integration](img/0365EN_09_12.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![Word和Excel集成](img/0365EN_09_12.jpg)'
- en: Default presence of Excel and Word
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Excel和Word的默认存在
- en: Style sheet tool
  id: totrans-127
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 样式表工具
- en: To be more flexible in the layout, Microsoft has released a style sheet tool
    for Microsoft Dynamics NAV and Word. This tool allows users to easily generate
    style sheets.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在布局上更加灵活，Microsoft为Microsoft Dynamics NAV和Word发布了一个样式表工具。此工具允许用户轻松生成样式表。
- en: Note
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The style sheet tool Version 3.0 can be downloaded from [http://www.mibuso.com/dlinfo.asp?FileID=1543](http://www.mibuso.com/dlinfo.asp?FileID=1543).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 样式表工具版本3.0可以从[http://www.mibuso.com/dlinfo.asp?FileID=1543](http://www.mibuso.com/dlinfo.asp?FileID=1543)下载。
- en: '![Style sheet tool](img/0365EN_09_13.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![样式表工具](img/0365EN_09_13.jpg)'
- en: The manual provided with the style sheet tool gives a good description about
    how to create the style sheets.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 样式表工具提供的说明书对如何创建样式表有很好的描述。
- en: '![Style sheet tool](img/0365EN_09_14.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![样式表工具](img/0365EN_09_14.jpg)'
- en: 'Add the action to the action designer (under the appropriate group) with the
    following properties:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 将操作添加到操作设计器（在适当的组下）并设置以下属性：
- en: '[PRE0]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `OnAction` trigger should contain the following line:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`OnAction`触发器应包含以下行：'
- en: '[PRE1]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here, `StyleSheetDataMgt` is a variable of type codeunit, 682 (Style Sheet Data
    Management).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`StyleSheetDataMgt`是类型为codeunit，682（样式表数据管理）的变量。
- en: Note
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: When this action is done for one page, it can be easily copied and pasted to
    other pages. Make sure you change the page name.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 当这个操作在一个页面上完成时，可以轻松地复制并粘贴到其他页面上。确保你更改页面名称。
- en: Advanced Excel integration
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高级Excel集成
- en: When exporting information to Excel that needs to be combined from different
    parts of the application, using style sheets is not the ideal way.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 当需要将来自应用程序不同部分的信息导出到Excel进行合并时，使用样式表并不是理想的方法。
- en: To support this, the **Excel Buffer** table (370) can be used. This table can
    be populated with data and then sent to Excel using a simple C/AL command.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 为了支持这一点，可以使用**Excel Buffer**表（370）。此表可以填充数据，然后使用简单的C/AL命令将其发送到Excel。
- en: This is used in several parts of the application, for example, to import and
    export the budgets we discussed in [Chapter 3](ch03.html "Chapter 3. Financial
    Management"), *Financial Management*.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这在应用程序的几个部分中使用，例如，导入和导出我们在 [第 3 章](ch03.html "第 3 章。财务管理") 中讨论的预算，*财务管理*。
- en: 'Let''s create a sample codeunit that exports data to Excel using the Excel
    Buffer table:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个示例代码单元，该代码单元使用 Excel 缓冲区表导出数据：
- en: Create a new codeunit and define a global variable of type record Excel buffer.
    This needs to be a temporary variable. Also, define the other variables as displayed
    in the following screenshot:![Advanced Excel integration](img/0365EN_09_15.jpg)
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的代码单元，并定义一个类型为记录 Excel 缓冲区的全局变量。这需要一个临时变量。同时，定义其他变量，如以下截图所示：![高级 Excel
    集成](img/0365EN_09_15.jpg)
- en: Note
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Temporary record variables are not stored in the database; they're stored in
    the client memory. This allows multiple users to create the same records without
    blocking each other. It is also faster since all handling is done without the
    network and database.
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 临时记录变量不存储在数据库中；它们存储在客户端内存中。这允许多个用户创建相同的记录而不会互相阻塞。由于所有处理都在没有网络和数据库的情况下完成，因此这也更快。
- en: Create a new `EnterCell` function with the parameters displayed in the following
    screenshot:![Advanced Excel integration](img/0365EN_09_16.jpg)
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 `EnterCell` 函数，参数如以下截图所示：![高级 Excel 集成](img/0365EN_09_16.jpg)
- en: 'Put the C/AL code in place that will handle the interface:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 放置将处理接口的 C/AL 代码：
- en: '[PRE2]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This C/AL code will browse the customers in the database and format the addresses
    using the Address Format (365) codeunit.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 此 C/AL 代码将浏览数据库中的客户，并使用地址格式（365）代码单元格式化地址。
- en: The **Customer No.** field and the result array `Addr[]` are saved in the Excel
    buffer table. Lastly, we start the C/AL functions to generate the Excel spreadsheet
    based on the data.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '**客户编号** 字段和结果数组 `Addr[]` 被保存在 Excel 缓冲区表中。最后，我们启动 C/AL 函数，根据数据生成 Excel 工作表。'
- en: '![Advanced Excel integration](img/0365EN_09_17.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![高级 Excel 集成](img/0365EN_09_17.jpg)'
- en: C/AL functions result
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: C/AL 函数结果
- en: Outlook integration
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Outlook 集成
- en: 'Microsoft Dynamics NAV 2013 allows different levels of interfacing with Microsoft
    Outlook:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Dynamics NAV 2013 允许与 Microsoft Outlook 进行不同级别的接口：
- en: The Outlook part on the Role Center.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 角色中心上的 Outlook 部分。
- en: Sending e-mails from pages using the `ExtendedDatatype` property.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `ExtendedDatatype` 属性从页面发送电子邮件。
- en: Using the Mail (397) or SMTP Mail (400) codeunits to send e-mails.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用邮件（397）或 SMTP 邮件（400）代码单元发送电子邮件。
- en: Synchronize contacts and to-do's using the Outlook integration web service.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Outlook 集成 Web 服务同步联系人和待办事项。
- en: Reading e-mail from exchange using the **E-Ma****il – Logging** functionality.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 **电子邮件 - 记录** 功能从 Exchange 读取电子邮件。
- en: Microsoft Dynamics NAV 2013 R2 can be connected to Office 365.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Microsoft Dynamics NAV 2013 R2 可以连接到 Office 365。
- en: Outlook part
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Outlook 部分
- en: On a Role Center it is possible to activate the Outlook System Part. This allows
    users to see their e-mail, agenda, and tasks directly on the Role Center.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在角色中心中，可以激活 Outlook 系统组件。这允许用户直接在角色中心查看他们的电子邮件、日程安排和任务。
- en: '![Outlook part](img/0365EN_09_18.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![Outlook 部分](img/0365EN_09_18.jpg)'
- en: This functionality is built in the Windows client and cannot be changed using
    C/AL Code.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能是 Windows 客户端内置的，不能使用 C/AL 代码来更改。
- en: ExtendedDatatype property
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 扩展数据类型属性
- en: When a **Text** field in a table uses the `ExtendedDatatype` property, **E-Mail**
    the Windows client will automatically allow the users to directly send an e-mail
    to the address specified in the field.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个表中的 **文本** 字段使用 `ExtendedDatatype` 属性时，Windows 客户端将自动允许用户直接将电子邮件发送到字段中指定的地址。
- en: '![ExtendedDatatype property](img/0365EN_09_19.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![扩展数据类型属性](img/0365EN_09_19.jpg)'
- en: This is also built-in functionality in the Windows client that cannot be influenced
    by C/AL code.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是 Windows 客户端内置的功能，不能通过 C/AL 代码来影响。
- en: '![ExtendedDatatype property](img/0365EN_09_20.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![扩展数据类型属性](img/0365EN_09_20.jpg)'
- en: Mail and SMTP mail codeunits
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 邮件和 SMTP 邮件代码单元
- en: Before the introduction of the `ExtendedDatatype` property, the e-mails from
    Microsoft Dynamics NAV were sent using an Automation Control wrapper DLL to Microsoft
    Outlook. This is handled in codeunit 397 and can still be used to send e-mails
    directly From C/AL code.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在引入 `ExtendedDatatype` 属性之前，Microsoft Dynamics NAV 的电子邮件是通过 Automation Control
    包装器 DLL 发送到 Microsoft Outlook 的。这在代码单元 397 中处理，并且仍然可以直接从 C/AL 代码发送电子邮件。
- en: Codeunit SMTP Mail (400) allows us to send e-mails directly to an SMTP server.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 代码单元 SMTP 邮件（400）允许我们直接发送电子邮件到 SMTP 服务器。
- en: Outlook synchronization
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Outlook 同步
- en: Microsoft Outlook can be used as an offline client for Microsoft Dynamics NAV.
    Every table can be synchronized to Microsoft Outlook when a connection with both
    systems is available. Using the Offline functionality in Outlook, users can view
    the data when they are on the road and even change the information or create new
    data.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Outlook可以用作Microsoft Dynamics NAV的离线客户端。当两个系统都可用连接时，每个表都可以同步到Microsoft
    Outlook。使用Outlook的离线功能，用户可以在路上查看数据，甚至更改信息或创建新数据。
- en: This is done using the Outlook Synchronization web service that we discussed
    earlier this chapter.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过本章前面讨论的Outlook同步Web服务完成的。
- en: '![Outlook synchronization](img/0365EN_09_21.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![Outlook同步](img/0365EN_09_21.jpg)'
- en: The functionality is well documented by Microsoft.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 微软对这一功能进行了很好的文档记录。
- en: Exchange integration
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Exchange集成
- en: To read incoming e-mails, Microsoft Dynamics NAV offers integration with Exchange
    Public folders. Information in these mailboxes can be read and used in Microsoft
    Dynamics NAV.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 为了读取传入的电子邮件，Microsoft Dynamics NAV提供了与Exchange公共文件夹的集成。这些邮箱中的信息可以在Microsoft
    Dynamics NAV中读取和使用。
- en: The handling of the interface is done using the Job Queue and the Application
    Server (NAS).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 接口处理是通过作业队列和应用服务器（NAS）完成的。
- en: In the **Marketing Setup**, which we discussed in [Chapter 4](ch04.html "Chapter 4. Relationship
    Management"), *Relationship Management*, we can set up the parameters for the
    exchange integration.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们之前在第4章[关系管理](ch04.html "第4章。关系管理")中讨论的**营销设置**中，我们可以设置交换集成的参数。
- en: '![Exchange integration](img/0365EN_09_22.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![Exchange集成](img/0365EN_09_22.jpg)'
- en: Interaction log entries
  id: totrans-186
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 交互日志条目
- en: Each e-mail read from Microsoft Exchange is displayed in Microsoft Dynamics
    NAV as an interaction log entry.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 从Microsoft Exchange读取的每封电子邮件都显示在Microsoft Dynamics NAV中的交互日志条目中。
- en: Office 365
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Office 365
- en: Starting from version 2013 R2, Microsoft Dynamics NAV can be integrated into
    Office 365\. This is a cosmetic integration, which means from an end-user perspective
    the applications are one and the same; however, the applications do not share
    data.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本2013 R2开始，Microsoft Dynamics NAV可以集成到Office 365中。这是一个外观上的集成，这意味着从最终用户的角度来看，应用程序是相同的；然而，应用程序不共享数据。
- en: Microsoft Dynamics NAV can be set up to accept the Office 365 credentials, which
    makes it very easy for users to log in only once and use both platforms.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Dynamics NAV可以配置为接受Office 365凭据，这使得用户只需登录一次就可以使用两个平台变得非常容易。
- en: '![Office 365](img/0365EN_09_23.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![Office 365](img/0365EN_09_23.jpg)'
- en: Login with the Office 365 credentials
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Office 365凭据登录
- en: SharePoint
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SharePoint
- en: Microsoft Dynamics NAV 2013 RTM was shipped with a special SharePoint client.
    However, since this was directly discontinued in R2 we will not discuss this.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Dynamics NAV 2013 RTM附带了一个特殊的SharePoint客户端。然而，由于在R2中直接停止了这项服务，我们不会讨论它。
- en: In Microsoft Dynamics NAV 2013 R2, the web client is SharePoint-compliant. To
    use Microsoft Dynamics NAV 2013 R2 in combination with SharePoint, it is possible
    to add web parts that connect to the web client.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在Microsoft Dynamics NAV 2013 R2中，Web客户端符合SharePoint规范。要结合使用SharePoint和Microsoft
    Dynamics NAV 2013 R2，可以添加连接到Web客户端的Web部件。
- en: It is possible to connect to both the on premise version of SharePoint and SharePoint
    Online.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 可以连接到SharePoint的本地版本和SharePoint Online。
- en: Client add-ins
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 客户端插件
- en: Microsoft Dynamics NAV 2013 ships with one client add-in for Microsoft Connect.
    An example page object that uses the Connect control is Connect (9175).
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Dynamics NAV 2013附带一个用于Microsoft Connect的客户端插件。使用Connect控件的一个示例页面对象是Connect
    (9175)。
- en: '![Client add-ins](img/0365EN_09_25.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![客户端插件](img/0365EN_09_25.jpg)'
- en: Let's have a look at how this done.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这是如何完成的。
- en: '![Client add-ins](img/0365EN_09_26.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![客户端插件](img/0365EN_09_26.jpg)'
- en: The page type of this page is **CardPart** and it has no source table. The only
    control on the page is **Parameters**, which is a function with a Text (350) return
    value.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 此页面的页面类型是**CardPart**，它没有源表。页面上唯一的控件是**参数**，这是一个返回Text (350)类型值的函数。
- en: The `ControlAddIn` property points to the add-in that will be used when this
    page is started. This add-in will replace the original control on the page.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '`ControlAddIn`属性指向在启动此页面时将使用的插件。此插件将替换页面上的原始控件。'
- en: 'In the `Parameters` function, a string is created to feed information into
    the connect add-in enabling it to show information that is interesting for the
    current role. This is done using a combination of other C/AL functions:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Parameters`函数中，创建了一个字符串，将信息输入到连接插件中，使其能够显示对当前角色有趣的信息。这是通过组合其他C/AL函数来完成的：
- en: '[PRE3]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In [Chapter 7](ch07.html "Chapter 7. Storage and Logistics"), *Storage and Logistics*,
    Client Extensibility and Bing Maps are used to show the stops of a route on a
    map.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第 7 章](ch07.html "第 7 章。存储和物流") 中的 *存储和物流*，客户端扩展性和 Bing Maps 用于在地图上显示路线的停靠点。
- en: The available libraries are stored in the client add-in table (2000000069).
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的库存储在客户端插件表中（2000000069）。
- en: Interface methodologies
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接口方法
- en: So now we have discussed interface types, interface technologies, and the built-in
    interfaces in Microsoft Dynamics NAV.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们现在已经讨论了 Microsoft Dynamics NAV 中的接口类型、接口技术和内置接口。
- en: Let's design and develop a new business to business interface. We will use the
    objects from [Chapter 7](ch07.html "Chapter 7. Storage and Logistics"), *Storage
    and Logistics*, to create the interface.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们设计和开发一个新的企业对企业接口。我们将使用 [第 7 章](ch07.html "第 7 章。存储和物流") 中的对象，*存储和物流*，来创建接口。
- en: The scenario
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 场景
- en: One of our customers wants to e-mail the shipments from now on instead of faxing.
    The e-mail will contain an Excel file in a predefined format.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的一位客户现在希望通过电子邮件发送发货，而不是通过传真。电子邮件将包含一个预定义格式的 Excel 文件。
- en: The design
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计
- en: Let's bring back the data model we designed for the logistics part of the solution
    in [Chapter 7](ch07.html "Chapter 7. Storage and Logistics"), *Storage and Logistics*.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下在 [第 7 章](ch07.html "第 7 章。存储和物流") 中的解决方案物流部分所设计的数据库模型，*存储和物流*。
- en: '![The design](img/0365EN_09_27.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![设计图](img/0365EN_09_27.jpg)'
- en: The process starts in the registration table. From a registration, we generate
    shipments and shipments are combined into a Route with stops.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 该过程从注册表开始。从一个注册项中，我们生成发货，发货被组合成一个带有停靠点的路线。
- en: So we need to move the data from the Excel sheet to the registration table.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们需要将数据从 Excel 表格移动到注册表中。
- en: The mapping
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 映射
- en: When a customer delivers us an Excel sheet with information, it seldom happens
    that they exactly use the same fields as our table. Therefore, we need to create
    a mapping. Each field in the Excel sheet needs to be mapped to a field and missing
    fields need to be identified and discussed.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 当客户向我们提供一个包含信息的 Excel 表格时，他们很少会使用与我们的表格完全相同的字段。因此，我们需要创建一个映射。Excel 表格中的每个字段都需要映射到一个字段，并且需要识别和讨论缺失的字段。
- en: 'The Excel Sheet we get from the customer looks like this:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从客户那里得到的 Excel 表格看起来像这样：
- en: '![The mapping](img/0365EN_09_28.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![映射图](img/0365EN_09_28.jpg)'
- en: 'Let''s try to map this information to our Logistics Registration Worksheet
    table, as follows:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试将此信息映射到我们的物流注册工作表表中，如下所示：
- en: '| Field number | Field name | Data type | Length | Mapped field |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| 字段编号 | 字段名称 | 数据类型 | 长度 | 映射字段 |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| 1 | Registration Batch | Code | 10 | - |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 注册批次 | 代码 | 10 | - |'
- en: '| 2 | Line No. | Integer |   | - |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 行号 | 整数 |   | - |'
- en: '| 6 | Shipment Date | Date |   | Date |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 发货日期 | 日期 |   | 日期 |'
- en: '| 8 | Product No. | Code | 20 | Goods Code |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| 8 | 产品编号 | 代码 | 20 | 商品代码 |'
- en: '| 10 | Description | Text | 50 | Description |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| 10 | 描述 | 文本 | 50 | 描述 |'
- en: '| 12 | Unit of Measure | Text | 10 | - |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| 12 | 单位 | 文本 | 10 | - |'
- en: '| 16 | Quantity | Decimal |   | Pallets |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| 16 | 数量 | 小数 |   | 托盘数 |'
- en: '| 20 | Length | Decimal |   | Length |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| 20 | 长度 | 小数 |   | 长度 |'
- en: '| 21 | Width | Decimal |   | Width |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| 21 | 宽度 | 小数 |   | 宽度 |'
- en: '| 22 | Height | Decimal |   | Height |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| 22 | 高度 | 小数 |   | 高度 |'
- en: '| 31 | Gross Weight | Decimal |   | - |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| 31 | 总重量 | 小数 |   | - |'
- en: '| 32 | Net Weight | Decimal |   | Weight |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| 32 | 净重 | 小数 |   | 重量 |'
- en: '| 36 | Units per Parcel | Decimal |   | - |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| 36 | 每包裹单位数 | 小数 |   | - |'
- en: '| 37 | Unit Volume | Decimal |   | - |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| 37 | 单位体积 | 小数 |   | - |'
- en: '| 53 | Ship-to Name | Text | 50 | Delivery At |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| 53 | 目的地名称 | 文本 | 50 | 交货地点 |'
- en: '| 55 | Ship-to Address | Text | 50 | Address |'
  id: totrans-240
  prefs: []
  type: TYPE_TB
  zh: '| 55 | 目的地地址 | 文本 | 50 | 地址 |'
- en: '| 57 | Ship-to City | Text | 30 | City |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| 57 | 目的地市 | 文本 | 30 | 城市 |'
- en: '| 58 | Ship-to Contact | Text | 50 | - |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| 58 | 目的地联系人 | 文本 | 50 | - |'
- en: '| 59 | Ship-to Post Code | Code | 20 | Postal Code |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| 59 | 目的地邮政编码 | 代码 | 20 | 邮政编码 |'
- en: '| 60 | Ship-to County | Text | 30 | - |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| 60 | 目的地县 | 文本 | 30 | - |'
- en: '| 61 | Ship-to Country/Region Code | Code | 10 | - |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| 61 | 目的地国家/地区代码 | 代码 | 10 | - |'
- en: Most of the fields in the Excel sheet can be mapped to a field in our table.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: Excel 表格中的大多数字段都可以映射到我们表中的一个字段。
- en: The gaps
  id: totrans-247
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 空缺
- en: Some fields that are needed in NAV are not populated by the Excel sheet. For
    some fields this is okay, for example, the **Registration Batch** and **Line No.**
    fields are determined by the import.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在 NAV 中需要的某些字段没有由 Excel 表格填充。对于某些字段来说，这是可以接受的，例如，**注册批次**和**行号**字段由导入决定。
- en: Some other fields are more difficult. **Unit of Measure**, **Gross Weight**,
    **Units per Parcel**, and **Unit Volume** are left blank in the Excel sheet, but
    they are all needed in NAV.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 一些其他字段更难。**计量单位**、**毛重**、**每包裹单位数**和**单位体积**在Excel表中留空，但它们都在NAV中需要。
- en: 'For these fields, we need to come to an agreement with the customer. They need
    to either specify these fields or tell us whether they have default values. Let''s
    look at our gaps and fill them in:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这些字段，我们需要与客户达成一致。他们需要指定这些字段，或者告诉我们它们是否有默认值。让我们看看我们的差距并填补它们：
- en: '**Unit of Measure**: For this customer it is always "PALLET"'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计量单位**：对于这个客户来说，始终是“托盘”'
- en: '**Volume**: This can be calculated using `Length x Width x Height`'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**体积**：这可以通过`长度 x 宽度 x 高度`来计算'
- en: '**Gross Weight**: We agree that this is equal to net weight'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**毛重**：我们同意这等于净重'
- en: '**Units per Parcel**: This is always 1'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每包裹单位数**：这始终是1'
- en: What if it does not work
  id: totrans-255
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如果它不起作用怎么办
- en: Reading the external data into the database is just one step in creating a reliable
    interface.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 将外部数据读取到数据库中只是创建可靠界面的一个步骤。
- en: But what happens if the customer contacts us and says, "We sent you a file with
    10 lines and the shipment document shows 9 lines". When we check our database
    the shipment does show 9 lines, but there is no way to check whether we imported
    the original 10 lines. At this stage, the imported Registration lines are deleted
    and the shipments are generated.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果客户联系我们并说，“我们发送了包含10行的文件，而装运文件显示9行”。当我们检查我们的数据库时，装运确实显示了9行，但没有办法检查我们是否导入了原始的10行。在这个阶段，导入的登记行被删除，并生成了装运。
- en: If this happens, we need traceability. In a well-designed interface, we should
    always create a table that exactly matches the imported data. This allows us to
    first check whether everything matches.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发生这种情况，我们需要可追溯性。在设计良好的界面中，我们应该始终创建一个与导入数据完全匹配的表。这允许我们首先检查是否一切匹配。
- en: The data from this table can be processed but should not be deleted from the
    database and periodically cleaned up. This allows us to check whether things go
    wrong.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个表中的数据可以进行处理，但不应该从数据库中删除，并定期清理。这允许我们检查是否有错误发生。
- en: We will demonstrate this in a more advanced example.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在一个更高级的示例中演示这一点。
- en: The scenario
  id: totrans-261
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 场景
- en: The implementation of our storage and logistics add-on requires a real-time
    interface with a Radio Frequency application. The RF scanners are used for the
    pick process. The RF application uses its own database system with tables we should
    populate and read afterwards.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 我们存储和物流附加功能的实现需要一个与射频应用实时接口。射频扫描仪用于拣选过程。射频应用使用自己的数据库系统，其中包含我们应该填充和之后读取的表。
- en: '![The scenario](img/0365EN_09_29.jpg)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![场景](img/0365EN_09_29.jpg)'
- en: The RF application has three tables. Our interface needs to export data to the
    **Pick Lines** table, and it needs to import data from the two remaining tables,
    **Finished Picks** and **Exceptions**.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 射频应用有三个表。我们的界面需要将数据导出到**拣选行**表，并且需要从剩下的两个表导入数据，**已完成拣选**和**异常**。
- en: The interface type
  id: totrans-265
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 界面类型
- en: This is an import and export interface that will use data pushing for the Pick
    Lines and data pulling for the Finished Picks and Exceptions. The interface will
    be timer-driven. Every minute we will poll for new data.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个导入导出界面，将使用拣选行的数据推送和已完成拣选及异常的数据拉取。界面将由定时器驱动。每分钟我们将轮询新数据。
- en: The interface technology
  id: totrans-267
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 界面技术
- en: For this interface, we will use a combination of technologies that we discussed
    in this chapter. The main technology is DotNet interoperability.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个界面，我们将使用本章讨论的多种技术的组合。主要技术是DotNet互操作性。
- en: Active data objects
  id: totrans-269
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 活动数据对象
- en: The Picking database runs on SQL Server so we will use ADO to connect to the
    database and send T-SQL Statements to read and write data.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 拣选数据库在SQL Server上运行，因此我们将使用ADO连接到数据库并发送T-SQL语句来读取和写入数据。
- en: Logging
  id: totrans-271
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 日志记录
- en: In this interface, we will enable two types of logging. The first log will be
    to duplicate the RF tables in Microsoft Dynamics NAV and use them as a buffer.
    A second log will be maintained where we will save a copy of all T-SQL statements
    we generate. This will enable us to see what we generated if something goes wrong.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个界面中，我们将启用两种类型的日志记录。第一种日志将是在Microsoft Dynamics NAV中复制RF表并用作缓冲区。第二种日志将维护一个记录，我们将保存我们生成的所有T-SQL语句的副本。这将使我们能够在出现问题时查看我们生成了什么。
- en: The design pattern
  id: totrans-273
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设计模式
- en: 'Let''s look at the design of the interface we will be developing for this project:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们将为这个项目开发接口的设计：
- en: '![The design pattern](img/0365EN_09_30.jpg)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![设计模式](img/0365EN_09_30.jpg)'
- en: The interface will be controlled from an **Application Server**. Each minute
    it will execute a codeunit that checks whether there are new **Storage Lines**
    that need to be exported. These lines will first be moved to the **RF Pick Lines**
    buffer table and then moved to the RF database using ADO and T-SQL. **New Finished
    Picks** and **Exceptions** from the RF database will be moved to Microsoft Dynamics
    NAV using the same technology and can then be processed.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 接口将由一个 **应用服务器** 控制。每分钟它将执行一个代码单元，检查是否有新的 **存储行** 需要导出。这些行将首先移动到 **RF 拣选行**
    缓冲表，然后使用 ADO 和 T-SQL 移动到 RF 数据库。来自 RF 数据库的 **新完成的拣选** 和 **异常** 将使用相同的技术移动到 Microsoft
    Dynamics NAV，然后可以进行处理。
- en: The solution
  id: totrans-277
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: To run the interface, we have created three codeunits and a table. The SQL Statement
    table is used to log each interface session.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 为了运行接口，我们创建了三个代码单元和一个表。SQL 语句表用于记录每个接口会话。
- en: '![The solution](img/0365EN_09_31.jpg)'
  id: totrans-279
  prefs: []
  type: TYPE_IMG
  zh: '![解决方案](img/0365EN_09_31.jpg)'
- en: The **RF NAS Timer (123.456.730)** codeunit is started from the `NASHandler`
    function in codeunit `ApplicationManagement`. It uses an indefinite loop.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '**RF NAS 定时器 (123.456.730)** 代码单元是从代码单元 `ApplicationManagement` 中的 `NASHandler`
    函数启动的。它使用一个无限循环。'
- en: '![The solution](img/0365EN_09_32.jpg)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![解决方案](img/0365EN_09_32.jpg)'
- en: 'Let''s look at the C/AL code that is required to make this work:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看实现这一功能的所需 C/AL 代码：
- en: '[PRE4]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `SLEEP` function is used to make sure the interface only runs each minute.
    By breaking the `SLEEP` function into smaller intervals it is possible to stop
    the Windows Service that executes this C/AL code in between the `SLEEP` command.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '`SLEEP` 函数被用来确保接口每分钟只运行一次。通过将 `SLEEP` 函数分解成更小的间隔，可以在 `SLEEP` 命令之间停止执行这个 C/AL
    代码的 Windows 服务。'
- en: Tip
  id: totrans-285
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '`GETLASTERRORTEXT` is a C/AL function that returns the last error message that
    was generated by the system. It can be used in combination with `IF CODEUNIT.RUN`
    syntax to catch runtime errors.'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '`GETLASTERRORTEXT` 是一个 C/AL 函数，它返回系统生成的最后一个错误消息。它可以与 `IF CODEUNIT.RUN` 语法结合使用来捕获运行时错误。'
- en: The RF Helper (123.456.732) codeunit is a wrapper codeunit that is used for
    error catching and maintaining readability.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: RF 辅助器 (123.456.732) 代码单元是一个包装代码单元，用于错误捕获和保持可读性。
- en: 'During each run of the interface we create a new SQL Statement ID, which we
    can filter on to trace any errors:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 在接口的每次运行中，我们创建一个新的 SQL 语句 ID，我们可以根据它来追踪任何错误：
- en: '[PRE5]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Then the three interface functions are triggered to synchronize the three required
    tables.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 然后触发三个接口函数以同步所需的三个表。
- en: COMMIT
  id: totrans-291
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: COMMIT
- en: After each command we execute the `COMMIT` statement. This will make sure that
    everything in the database is stored up to that point. This is necessary since
    the ADO statements we create are outside our transaction. If our interface run
    rolls back, it might synchronize data that is already synchronized.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行每个命令后，我们执行 `COMMIT` 语句。这将确保数据库中所有内容都存储到那个点。这是必要的，因为我们所创建的 ADO 语句都在我们的事务之外。如果我们的接口运行回滚，它可能会同步已经同步的数据。
- en: 'The **RF Interface (123.456.731)**. Here, the actual ADO synchronization is
    done in this codeunit. This codeunit is `SingleInstance`. This will keep the ADO
    connection alive during the NAS session:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '**RF 接口 (123.456.731)**。在这里，实际的 ADO 同步是在这个代码单元中完成的。这个代码单元是 `SingleInstance`。这将保持
    ADO 连接在 NAS 会话期间保持活跃：'
- en: '[PRE6]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: For the interface we use three DotNet variables.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 对于接口，我们使用了三个 DotNet 变量。
- en: '![COMMIT](img/0365EN_09_33.jpg)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
  zh: '![COMMIT](img/0365EN_09_33.jpg)'
- en: 'Let''s have a look at the three DotNet variables in more detail:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地看看三个 DotNet 变量：
- en: '`SQLConnection`: This is used for the connection with the database and to execute
    the T-SQL statements'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SQLConnection`: 这用于与数据库建立连接并执行 T-SQL 语句'
- en: '`SQLCommand`: The result sets of a `SELECT` statement can be read using this'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SQLCommand`: 可以使用这个来读取 `SELECT` 语句的结果集'
- en: '`SQLReader`: The reader is used to read the data and convert data types between
    ADO and C/Side'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SQLReader`: 读取器用于读取数据，并在 ADO 和 C/Side 之间转换数据类型'
- en: Writing data
  id: totrans-301
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 写入数据
- en: The RF application needs data from the Storage Line table. We first create a
    mapping to the RF application as we did with the Excel interface earlier in this
    chapter.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: RF 应用需要从存储行表中获取数据。我们首先创建了一个映射到 RF 应用的映射，就像我们在本章前面使用 Excel 接口所做的那样。
- en: 'This mapping is saved in a buffer table for traceability:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 这个映射被保存在一个缓冲表中以供追踪：
- en: '[PRE7]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The actual data is moved to the RF database using an `INSERT` command.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 实际数据是通过 `INSERT` 命令移动到 RF 数据库的。
- en: Note
  id: totrans-306
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To avoid exporting the same data twice we need to keep track of what we exported.
    The simplest way to do this is to create a new field called Exported. Making this
    field a DateTime also enables the traceability of the application.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免两次导出相同的数据，我们需要跟踪我们导出了什么。最简单的方法是创建一个名为 Exported 的新字段。将此字段设置为 DateTime 也使得应用程序的可追溯性成为可能。
- en: Reading data
  id: totrans-308
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 读取数据
- en: When reading data from the RF database, we also send a T-SQL SELECT query for
    the data. We use the `SQLReader.Read` to browse through the records that are in
    the result set.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 当从射频数据库读取数据时，我们也会为数据发送一个 T-SQL SELECT 查询。我们使用 `SQLReader.Read` 来浏览结果集中的记录。
- en: For each record in the result set, we create a record in our buffer table, which
    we then can use to update the information in the Storage Lines.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 对于结果集中的每条记录，我们在缓冲表中创建一条记录，然后我们可以使用它来更新存储行中的信息。
- en: 'When reading data we do not want to import the same data twice. To avoid this,
    we need to store a unique identifier in a table that enables us to remember where
    we left in the last run:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 当读取数据时，我们不希望两次导入相同的数据。为了避免这种情况，我们需要在表中存储一个唯一标识符，这样我们就可以记住上次运行时我们停在了哪里：
- en: '[PRE8]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In our example, this unique identifier is `Reference Entry No`.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，这个唯一标识符是 `参考条目号`。
- en: Log, log, and log more
  id: totrans-314
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 记录，记录，再记录
- en: Although much of the logging is done using the buffer tables, we also want to
    store the general process of the interface each time it runs. This is done using
    the SQL Statement table. Both the SQL Statements as well as the other events are
    stored there.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管大部分日志记录是通过缓冲表完成的，但我们还希望存储每次接口运行时的一般过程。这是通过 SQL 语句表来完成的。SQL 语句以及其他事件都存储在那里。
- en: By using the `COMMIT` functionality, we can exactly see where it stopped by
    looking at the last record in this table. We can solve the problem that caused
    the interface to stop and restart the interface without losing data.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 `COMMIT` 功能，我们可以通过查看此表中的最后一条记录来确切地看到它停止的位置。我们可以解决导致接口停止的问题，并重新启动接口而不会丢失数据。
- en: Note
  id: totrans-317
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Never use the `COMMIT` statement unless there is a very good reason for it.
    C/SIDE will normally handle the transactions for you, enabling a full role back
    when things go wrong. Creating a `COMMIT` statement in a normal C/SIDE transaction
    will prevent C/SIDE from rolling back.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 除非有非常好的理由，否则永远不要使用 `COMMIT` 语句。C/SIDE 通常会为您处理事务，当事情出错时可以完全回滚。在正常的 C/SIDE 事务中创建
    `COMMIT` 语句将阻止 C/SIDE 回滚。
- en: Testing
  id: totrans-319
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试
- en: Let's test the interface we have just designed and developed. In order to do
    this, we need to have records in the Storage Line table and the RF database needs
    to exist somewhere.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们测试我们刚刚设计和开发的接口。为了做到这一点，我们需要在存储行表中记录，RF 数据库需要存在于某个地方。
- en: The RF database
  id: totrans-321
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: RF 数据库
- en: To test the objects we have created for this solution, the RF database should
    exist on your system. This database can be created using a T-SQL script and should
    be executed on a Microsoft SQL Server machine.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试我们为该解决方案创建的对象，RF 数据库应该存在于您的系统上。此数据库可以使用 T-SQL 脚本创建，并且应在 Microsoft SQL Server
    机器上执行。
- en: Note
  id: totrans-323
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The script RF `database.sql` is part of the object files downloaded for this
    book.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: RF `database.sql` 脚本是为此本书下载的对象文件的一部分。
- en: Open the script in SQL Server Management Studio and click on **Execute**.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SQL Server Management Studio 中打开脚本，然后单击 **执行**。
- en: '![The RF database](img/0365EN_09_34.jpg)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
  zh: '![RF 数据库](img/0365EN_09_34.jpg)'
- en: The test
  id: totrans-327
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 测试
- en: Even though the C/AL code can run in the Windows client, we will run the test
    in the classic client. The reason for this is that the interface will run in the
    NAS, which will execute the C/AL code the same way as the classic client. Another
    reason to use the classic client is that this is the interface for the DBA to
    perform all their tasks.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 即使 C/AL 代码可以在 Windows 客户端运行，我们也会在经典客户端运行测试。这样做的原因是接口将在 NAS 上运行，它将以与经典客户端相同的方式执行
    C/AL 代码。使用经典客户端的另一个原因是，这是 DBA 执行所有任务的接口。
- en: To start a test run, open page **RF Interface Setup** (123.456.780) from the
    Object Designer.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始测试运行，从对象设计器打开页面 **RF 接口设置**（123.456.780）。
- en: Make sure that the Database and Server are correct. The server should be the
    SQL Server instance where the SQL Script was executed.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 确保数据库和服务器是正确的。服务器应该是执行 SQL 脚本的 SQL Server 实例。
- en: Note
  id: totrans-331
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The ADO connection uses the Windows Account NT `AUTHORITY\NETWORK SERVICE` with
    Trusted connection. This user should have enough rights to insert and read data
    from the RF database.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: ADO连接使用Windows账户NT `AUTHORITY\NETWORK SERVICE`和受信任连接。此用户应有权从RF数据库中插入和读取数据。
- en: '![The test](img/0365EN_09_35.jpg)'
  id: totrans-333
  prefs: []
  type: TYPE_IMG
  zh: '![测试](img/0365EN_09_35.jpg)'
- en: To start a test run, click on the **Test** button.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始测试运行，请点击**测试**按钮。
- en: Viewing the results
  id: totrans-335
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查看结果
- en: If everything went well, the results should show both in the log and in the
    buffer tables and the RF database. Let's check them all.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，结果应该会在日志和缓冲表以及RF数据库中显示。让我们检查一下所有这些。
- en: SQL Statements
  id: totrans-337
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: SQL语句
- en: The SQL Statement log can be opened by either pushing the **Log** button on
    the **RF Interface Setup** form or opening the **SQL Statements** (123.456.781)
    form from the Object Designer.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在**RF接口设置**表单上点击**日志**按钮或从对象设计器打开**SQL语句**（123.456.781）表单来打开SQL语句日志。
- en: '![SQL Statements](img/0365EN_09_36.jpg)'
  id: totrans-339
  prefs: []
  type: TYPE_IMG
  zh: '![SQL语句](img/0365EN_09_36.jpg)'
- en: SQL statements
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: SQL语句
- en: The information on the form shows us exactly what the interface did during this
    run.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 表单上的信息显示接口在此运行期间所执行的操作。
- en: The buffer tables
  id: totrans-342
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 缓冲表
- en: When we open the buffer tables from the Object Designer, we can see that the
    interface moved the data from the Storage Line table into the RF Pick Lines table.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们从对象设计器打开缓冲表时，我们可以看到接口已将数据从存储行表移动到RF拣选行表。
- en: '![The buffer tables](img/0365EN_09_37.jpg)'
  id: totrans-344
  prefs: []
  type: TYPE_IMG
  zh: '![缓冲表](img/0365EN_09_37.jpg)'
- en: The **RF Finished Pick** and **RF Exceptions** are also populated with the records
    from the RF database.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '**RF完成拣选**和**RF异常**也填充了来自RF数据库的记录。'
- en: The RF database
  id: totrans-346
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: RF数据库
- en: The last thing to check is the data in the RF database. The data in both databases
    should now be exactly the same.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 最后要检查的是RF数据库中的数据。现在两个数据库中的数据应该完全相同。
- en: '![The RF database](img/0365EN_09_38.jpg)'
  id: totrans-348
  prefs: []
  type: TYPE_IMG
  zh: '![RF数据库](img/0365EN_09_38.jpg)'
- en: This can be checked from the SQL Server Management Studio.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以从SQL Server Management Studio进行检查。
- en: Interfacing into the future
  id: totrans-350
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接口面向未来
- en: Interfacing will become more and more important in the future as technology
    evolves. Newer technologies and faster Internet connections will allow us to integrate
    our applications better but will also make it more accessible for end users.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 随着技术的不断发展，接口将变得越来越重要。新技术和更快的互联网连接将使我们能够更好地集成我们的应用程序，但也将使最终用户更容易访问。
- en: Cloud-enabled Microsoft Dynamics NAV
  id: totrans-352
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 云支持的Microsoft Dynamics NAV
- en: With the release of version 2013 R2, Microsoft Dynamics NAV is now cloud-enabled.
    This means that the product is officially supported to run on the Microsoft Azure
    platform.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 随着版本2013 R2的发布，Microsoft Dynamics NAV现在已支持云。这意味着该产品正式支持在Microsoft Azure平台上运行。
- en: Summary
  id: totrans-354
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we looked at how Microsoft Dynamics NAV can interface with
    other applications.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了Microsoft Dynamics NAV如何与其他应用程序接口。
- en: We discussed the basics of interfacing, import versus export, and data pulling
    versus data pushing. An interface can be executed manually or by a timer or event.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了接口的基础知识、导入与导出、数据拉取与数据推送。接口可以手动执行或由定时器或事件执行。
- en: Microsoft Dynamics NAV supports a wide range of interfacing technologies, such
    as files, automation control, .NET, ODBC, ADO, and web services.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Dynamics NAV支持广泛的接口技术，如文件、自动化控制、.NET、ODBC、ADO和Web服务。
- en: It is also possible to integrate using SQL Server technologies. The Application
    Server (NAS) is often used for interfacing with other systems, for example, using
    Microsoft **Message Queuing** or **Active Data Objects** (**ADO**).
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 也可能使用SQL Server技术进行集成。应用程序服务器（NAS）通常用于与其他系统接口，例如，使用Microsoft **消息队列**或**活动数据对象**（**ADO**）。
- en: The wide range of interfaces that come with the product have been discussed
    including all interfaces with Microsoft Office, Exchange, and SharePoint.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 产品附带的各种接口已被讨论，包括所有与Microsoft Office、Exchange和SharePoint的接口。
- en: We designed and developed two business-to-business interfaces; one to import
    data manually from Microsoft Excel and the other to automatically import and export
    data to another database using ADO and a timer.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设计和开发了两个业务对业务接口；一个是从Microsoft Excel手动导入数据，另一个是使用ADO和定时器自动导入和导出数据到另一个数据库。
- en: When designing an interface, reliability and traceability are the key elements.
    In the next chapter, we will talk about application design methodologies and principles.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计接口时，可靠性和可追溯性是关键要素。在下一章中，我们将讨论应用程序设计方法和原则。
