["```cs\npublic class CustomAttribute : Attribute\n{\n}\n```", "```cs\n[Custom]\npublic class MyClass\n{\n}\n```", "```cs\npublic class CustomAttribute : Attribute\n{\n    public CustomAttribute(SomeType instance)\n    {\n    }\n}\n```", "```cs\n[Custom(new SomeType())] // Will give you a compiler error\npublic class MyClass\n{\n}\n```", "```cs\npublic class CustomAttribute : Attribute\n{\n    public CustomAttribute(string information)\n    {\n    }\n}\n```", "```cs\n[Custom(\"I'm a valid parameter\")]\npublic class MyClass\n{\n}\n```", "```cs\n[AttributeUsage(AttributeTargets.Class)]\npublic class CustomAttribute : Attribute\n{\n}\n```", "```cs\npublic class MyClass\n{\n    [Custom] // Compiler error\n    public void SomeMethod()\n    {\n    }\n}\n```", "```cs\n[AttributeUsage(\n    AttributeTargets.Class |\n    AttributeTargets.Method |\n    AttributeTargets.Property)]\npublic class CustomAttribute : Attribute\n{\n}\n```", "```cs\n[Custom]\n[Custom] // Compiler error\npublic class MyClass\n{\n}\n```", "```cs\n[AttributeUsage(AttributeTargets.Class, AllowMultiple =\n  true)]\npublic class CustomAttribute : Attribute\n{\n}\n```", "```cs\n[AttributeUsage(AttributeTargets.Class, Inherited = false)]\npublic class CustomAttribute : Attribute\n{\n}\n```", "```cs\n[Custom]\npublic class MyClass\n{\n}\n```", "```cs\npublic class MyOtherClass : MyClass\n{\n}\n```", "```cs\npublic sealed class CustomAttribute : Attribute\n{\n}\n```", "```cs\n[Custom]\npublic class MyClass\n{\n}\n```", "```cs\nforeach( var attr in typeof(MyClass).GetCustomAttributes() )\n{\n    // Do something based on the attribute\n}\n```", "```cs\n[AttributeUsage(AttributeTargets.Class |\n  AttributeTargets.Property | AttributeTargets.Parameter,\n    AllowMultiple = false, Inherited = true)]\npublic class PersonalIdentifiableInformationAttribute :\n  Attribute\n{\n    public PersonalIdentifiableInformationAttribute(string\n      reasonForCollecting = \"\")\n    {\n        ReasonForCollecting = reasonForCollecting;\n    }\n    public string ReasonForCollecting { get; }\n}\n```", "```cs\ndotnet new console\n```", "```cs\ndotnet add reference ../Fundamentals/Fundamentals.csproj\n```", "```cs\npublic class Employee\n{\n    public string FirstName { get; set; } = string.Empty;\n    public string LastName { get; set; } = string.Empty;\n    public string SocialSecurityNumber { get; set; } =\n      string.Empty;\n}\n```", "```cs\nusing Fundamentals.Compliance.GDPR;\npublic class Employee\n{\n    [PersonalIdentifiableInformation(\"Employment records\")]\n    public string FirstName { get; set; } = string.Empty;\n    [PersonalIdentifiableInformation(\"Employment records\")]\n    public string LastName { get; set; } = string.Empty;\n    [PersonalIdentifiableInformation(\"Uniquely identifies\n      the employee\")]\n    public string SocialSecurityNumber { get; set; } =\n      string.Empty;\n}\n```", "```cs\npublic static class MemberInfoExtensions\n{\n    public static bool HasAttribute<TAttribute>(this\n      MemberInfo memberInfo) where TAttribute : Attribute\n        => memberInfo.GetCustomAttributes<TAttribute>()\n          .Any();\n}\n```", "```cs\nusing Fundamentals;\nvar types = new Types();\nvar piiTypes = types.All.Where(_ => _\n                    .GetMembers()\n                    .Any(m => m.HasAttribute<Personal\n                      IdentifiableInformation\n                        Attribute>()));\nvar typeNames = string.Join(\"\\n\", piiTypes.Select(_ =>\n  _.FullName));\nConsole.WriteLine(typeNames);\n```", "```cs\nusing System.Reflection;\nusing Fundamentals;\nvar types = new Types();\nConsole.WriteLine(\"\\n\\nGDPR Report\");\nvar typesWithPII = types.All\n                        .SelectMany(_ =>\n                            _.GetProperties()\n                                .Where(p => p.HasAttribute\n                                 <PersonalIdentifiable\n                                  InformationAttribute>()))\n                        .GroupBy(_ => _.DeclaringType);\nforeach (var typeWithPII in typesWithPII)\n{\n    Console.WriteLine($\"Type: {typeWithPII.Key!\n      .FullName}\");\n    foreach (var property in typeWithPII)\n    {\n        var pii = property.GetCustomAttribute<\n          PersonalIdentifiableInformationAttribute>();\n        Console.WriteLine($\"  Property : {property.Name}\");\n        Console.WriteLine($\"    Reason :\n          {pii.ReasonForCollecting}\");\n    }\n}\n```", "```cs\nGDPR Report\nType: Main.Employee\n  Property : FirstName\n    Reason : Employment records\n  Property : LastName\n    Reason : Employment records\n  Property : SocialSecurityNumber\n    Reason : Uniquely identifies the employee\n```", "```cs\npublic class CustomAttribute : Attribute\n{\n    public CustomAttribute(Type theType)\n}\n```", "```cs\n[Custom(typeof(string))]\npublic class MyClass\n{\n}\n```", "```cs\npublic class CustomAttribute<T> : Attribute\n{\n}\n```", "```cs\n[Custom<string>]\npublic class MyClass\n{\n}\n```", "```cs\n[AttributeUsage(AttributeTargets.Class, AllowMultiple =\n  true)]\npublic class CustomAttribute<T> : Attribute\n{\n    public CustomAttribute(T someParameter)\n    {\n        SomeParameter = someParameter;\n    }\n    public T SomeParameter { get; }\n}\n```", "```cs\n[Custom<int>(42)]\n[Custom<string>(\"Forty two)]\npublic class MyClass\n{\n}\n```"]