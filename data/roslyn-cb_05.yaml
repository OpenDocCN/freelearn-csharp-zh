- en: Catch Security Vulnerabilities and Performance Issues in C# Code
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在C#代码中识别安全漏洞和性能问题
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下食谱：
- en: Identifying configuration-related security vulnerabilities in web applications
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别Web应用程序中的配置相关安全漏洞
- en: Identifying cross-site scripting vulnerabilities in view markup files (`.cshtml`,
    .`aspx` files) in web applications
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别Web应用程序中视图标记文件（`.cshtml`、`.aspx`文件）中的跨站脚本漏洞
- en: Identifying insecure method calls that can lead to SQL and LDAP injection attacks
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别可能导致SQL和LDAP注入攻击的不安全方法调用
- en: Identifying weak password protection and management in web applications
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别Web应用程序中的弱密码保护和管理工作
- en: Identifying weak validation of data from external components to prevent attacks
    such as cross-site request forgery and path tampering
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别外部组件数据弱验证以防止跨站请求伪造和路径篡改等攻击
- en: Identifying performance improvements to source code using FxCop analyzers
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用FxCop分析器识别源代码的性能改进
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: 'In this chapter, we will cover two very important and popular category of Roslyn
    analyzers: security and performance analyzers.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖两个非常重要且流行的Roslyn分析器类别：安全和性能分析器。
- en: '**Security**: Given the extremely large domain of .NET applications, each of
    them with very domain-specific security vulnerabilities, it is critical that we
    have a domain-specific tools/extensions to catch these vulnerabilities. Roslyn-based
    security analyzers, such as **PUMA** scan analyzers, catch these vulnerabilities
    at compile time and report diagnostics. PUMA scan analyzer rules are classified
    into the following broad categories:'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全**: 考虑到.NET应用程序的领域极其庞大，每个应用程序都有非常特定的安全漏洞，因此我们拥有特定领域的工具/扩展来捕获这些漏洞至关重要。基于Roslyn的安全分析器，如**PUMA**扫描分析器，在编译时捕获这些漏洞并报告诊断。PUMA扫描分析器规则分为以下广泛类别：'
- en: 'Configuration ([https://www.pumascan.com/rules.html#overview](https://www.pumascan.com/rules.html#configuration)):
    Rules to catch vulnerabilities in ASP.NET Web configuration files'
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '配置 ([https://www.pumascan.com/rules.html#overview](https://www.pumascan.com/rules.html#configuration)):
    捕获ASP.NET Web配置文件中的漏洞的规则'
- en: 'Cross-site Scripting ([https://www.pumascan.com/rules.html#cross-site-scripting](https://www.pumascan.com/rules.html#cross-site-scripting)):
    Rules to catch cross-site scripting (XSS) vulnerabilities'
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '跨站脚本 ([https://www.pumascan.com/rules.html#cross-site-scripting](https://www.pumascan.com/rules.html#cross-site-scripting)):
    捕获跨站脚本（XSS）漏洞的规则'
- en: 'Injection ([https://www.pumascan.com/rules.html#injection](https://www.pumascan.com/rules.html#injection)):
    Rules to catch calls to insecure method calls to external components that can
    cause SQL injection attacks'
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '注入 ([https://www.pumascan.com/rules.html#injection](https://www.pumascan.com/rules.html#injection)):
    捕获对可能导致SQL注入攻击的不安全外部组件方法调用的规则'
- en: '**Password Management** ([https://www.pumascan.com/rules.html#password-management](https://www.pumascan.com/rules.html#password-management)):
    Rules to catch vulnerabilities in password management components'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码管理** ([https://www.pumascan.com/rules.html#password-management](https://www.pumascan.com/rules.html#password-management)):
    捕获密码管理组件中的漏洞的规则'
- en: '**Validation** ([https://www.pumascan.com/rules.html#validation](https://www.pumascan.com/rules.html#validation)):
    Rules to catch weak validation and authentication of external requests, which
    can lead to malicious attacks to other users'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**验证** ([https://www.pumascan.com/rules.html#validation](https://www.pumascan.com/rules.html#validation)):
    捕获外部请求的弱验证和身份验证规则，可能导致对其他用户的恶意攻击'
- en: '**Performance**: Runtime performance is important for all applications, and
    there are many different aspects to it. One of the important performance criteria
    for .NET applications is the quality of MSIL or CIL ([https://en.wikipedia.org/wiki/Common_Intermediate_Language](https://en.wikipedia.org/wiki/Common_Intermediate_Language))
    generated by the .NET compilers. The quality of MSIL is governed by both the quality
    of the user code and the compiler that produces MSIL. In this chapter, we will
    walk you through the performance rules in FxCop analyzers, which are the Microsoft
    code analysis rules (*CAXXXX*) written for identifying performance improvements
    in .NET applications to generate more efficient MSIL. These rules have been ported
    to the Roslyn analyzer framework and open sourced at [https://github.com/dotnet/roslyn-analyzers](https://github.com/dotnet/roslyn-analyzers).'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能**：对于所有应用程序来说，运行时性能都很重要，并且有许多不同的方面。.NET 应用程序的一个重要性能标准是 .NET 编译器生成的 MSIL
    或 CIL ([https://en.wikipedia.org/wiki/Common_Intermediate_Language](https://en.wikipedia.org/wiki/Common_Intermediate_Language))
    的质量。MSIL 的质量受用户代码的质量和生成 MSIL 的编译器的质量共同影响。在本章中，我们将向您介绍 FxCop 分析器中的性能规则，这些规则是微软为识别
    .NET 应用程序中的性能改进而编写的代码分析规则 (*CAXXXX*)，以生成更有效的 MSIL。这些规则已被移植到 Roslyn 分析器框架，并在 [https://github.com/dotnet/roslyn-analyzers](https://github.com/dotnet/roslyn-analyzers)
    上开源。'
- en: Identifying configuration-related security vulnerabilities in web applications
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别 Web 应用程序中的配置相关安全漏洞
- en: ASP.NET enables you to specify configuration settings that affect all Web applications
    on a server, that affect only a single application, that affect individual pages,
    or that affect individual folders in a Web application. You can make configuration
    settings for features, such as compiler options, debugging, user authentication,
    error-message display, connection strings, and more. Configuration data is stored
    in XML files that are named Web.config.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: ASP.NET 允许您指定影响服务器上所有 Web 应用程序、仅影响单个应用程序、影响单个页面或影响 Web 应用程序中的单个文件夹的配置设置。您可以针对功能（如编译器选项、调试、用户身份验证、错误信息显示、连接字符串等）进行配置设置。配置数据存储在名为
    Web.config 的 XML 文件中。
- en: You can read more details about different kind of configuration settings in
    the Web.config files at [https://msdn.microsoft.com/en-us/library/ff400235.aspx](https://msdn.microsoft.com/en-us/library/ff400235.aspx).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 [https://msdn.microsoft.com/en-us/library/ff400235.aspx](https://msdn.microsoft.com/en-us/library/ff400235.aspx)
    上阅读有关 Web.config 文件中不同类型配置设置的更多详细信息。
- en: In this section, we will walk you through the rules in PUMA scan analyzers to
    catch security vulnerabilities in web configuration in an ASP.NET Web Forms project.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将向您介绍 PUMA 扫描分析器中的规则，以在 ASP.NET Web Forms 项目中捕获 Web 配置中的安全漏洞。
- en: Note that Roslyn analyzers are fully supported on both .NET framework projects
    and .NET core projects, so the PUMA scan analyzers covered here work fine on both
    ASP.NET and ASP.Net core web projects.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，Roslyn 分析器在 .NET 框架项目和 .NET Core 项目上都得到完全支持，因此本章中提到的 PUMA 扫描分析器在 ASP.NET
    和 ASP.Net Core Web 项目上都能正常工作。
- en: Getting ready
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need to have Visual Studio 2017 installed on your machine to execute
    the recipes in this chapter. You can install a free community version of Visual
    Studio 2017 from [https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15](https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在您的机器上安装 Visual Studio 2017 以执行本章中的食谱。您可以从 [https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15](https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15)
    安装 Visual Studio 2017 的免费社区版本。
- en: How to do it...
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Start Visual Studio and click on File | New| Project... and create a new Visual
    C# | Web | ASP.NET Web Application with the Web Forms template, say `WebApplication`:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Visual Studio，然后单击文件 | 新建 | 项目... 并使用 Web Forms 模板创建一个新的 Visual C# | Web
    | ASP.NET Web 应用程序，例如 `WebApplication`：
- en: '![](img/ad226c58-fa64-4869-b81d-39419887b541.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ad226c58-fa64-4869-b81d-39419887b541.png)'
- en: Install the `Puma.Security.Rules` analyzers NuGet package (at the time of writing,
    the latest stable version is *1.0.4*). For guidance on how to search and install
    analyzer NuGet package to a project, refer to the recipe, *Searching and installing
    analyzers through the NuGet package manager*, in [Chapter 2](8e0229af-657f-4306-96b5-40511d1fe7b2.xhtml),
    *Consuming Diagnostic Analyzers in .NET Projects*.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 `Puma.Security.Rules` 分析器 NuGet 包（在撰写本文时，最新稳定版本为 *1.0.4*）。有关如何在项目中搜索和安装分析器
    NuGet 包的指导，请参阅第 2 章，*通过 NuGet 包管理器搜索和安装分析器*的食谱，*在 .NET 项目中消费诊断分析器*。
- en: 'Select Web.config in the solution explorer and change its build action from
    Content to AdditionalFiles using the Properties window and save the project:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在解决方案资源管理器中选择Web.config，并使用属性窗口将其构建操作从内容更改为AdditionalFiles，然后保存项目：
- en: '![](img/9af8e7bd-1151-4fe8-9558-64f746c36a04.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9af8e7bd-1151-4fe8-9558-64f746c36a04.png)'
- en: Open Web.config in the editor and replace existing `system.web` XML element
    with the following XML. You can read more about `system.web` XML element at [https://msdn.microsoft.com/en-us/library/dayb112d(v=vs.100).aspx](https://msdn.microsoft.com/en-us/library/dayb112d(v=vs.100).aspx).
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在编辑器中打开Web.config，并用以下XML替换现有的`system.web` XML元素。您可以在[https://msdn.microsoft.com/en-us/library/dayb112d(v=vs.100).aspx](https://msdn.microsoft.com/en-us/library/dayb112d(v=vs.100).aspx)上阅读更多关于`system.web`
    XML元素的信息。
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Build the project in Visual Studio or command line and verify that you get
    following *SECXXXX* warnings from the PUMA scan analyzer:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Visual Studio或命令行中构建项目，并验证您是否从PUMA扫描分析器获得了以下*SECXXXX*警告：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Replace the `system.web` XML element in the `Web.config` file with the following
    contents (changes are highlighted in bold):'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Web.config`文件中的`system.web` XML元素替换为以下内容（更改以粗体突出显示）：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Build the project again and verify it compiles without any security warnings.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次构建项目并验证它是否编译且没有任何安全警告。
- en: How it works...
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: PUMA scan analyzers catch security vulnerabilities in the web configuration
    files in C# ASP.NET web projects. In the preceding recipe, we showed you different
    kinds of security vulnerabilities that are caught by the PUMA scan analyzers,
    such as insecure forms authentication, http cookies configuration, header settings,
    and so on. You can read detailed description of all web configuration-related
    security vulnerabilities identified by the PUMA scan analyzers at [https://www.pumascan.com/rules.html#configuration](https://www.pumascan.com/rules.html#configuration).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: PUMA扫描分析器能够捕捉到C# ASP.NET网络项目中的网络配置文件中的安全漏洞。在前面的菜谱中，我们向您展示了PUMA扫描分析器捕捉到的不同类型的网络安全漏洞，例如不安全的表单身份验证、http
    cookies配置、头部设置等。您可以在[https://www.pumascan.com/rules.html#configuration](https://www.pumascan.com/rules.html#configuration)上阅读PUMA扫描分析器识别的所有网络配置相关安全漏洞的详细描述。
- en: These security analyzers are written as additional file analyzers that analyze
    non-source files in the project that have been marked as `AdditionalFiles` item
    type. Users must mark the `web.config` file as an additional file in their project
    to trigger security analysis during build. You can read more about how to write
    and consume additional file analyzers at [https://github.com/dotnet/roslyn/blob/master/docs/analyzers/Using%20Additional%20Files.md](https://github.com/dotnet/roslyn/blob/master/docs/analyzers/Using%20Additional%20Files.md).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这些安全分析器被编写为附加文件分析器，用于分析项目中标记为`AdditionalFiles`项目类型的非源文件。用户必须在他们的项目中将`web.config`文件标记为附加文件，以在构建期间触发安全分析。您可以在[https://github.com/dotnet/roslyn/blob/master/docs/analyzers/Using%20Additional%20Files.md](https://github.com/dotnet/roslyn/blob/master/docs/analyzers/Using%20Additional%20Files.md)上阅读更多关于如何编写和消费附加文件分析器的信息。
- en: Identifying cross-site scripting vulnerabilities in view markup files (.cshtml,
    .aspx files) in web applications
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在网络应用程序的视图标记文件（.cshtml, .aspx文件）中识别跨站脚本漏洞
- en: '**Cross-site scripting** (**XSS**) is a type of computer security vulnerability
    typically found in web applications. XSS enables attackers to inject client-side
    scripts into web pages viewed by other users. A cross-site scripting vulnerability
    may be used by attackers to bypass access controls such as the same-origin policy.
    Cross-site scripting carried out on websites accounted for roughly 84% of all
    security vulnerabilities documented by Symantec as of 2007\. Their effect may
    range from a petty nuisance to a significant security risk, depending on the sensitivity
    of the data handled by the vulnerable site and the nature of any security mitigation
    implemented by the site''s owner.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**跨站脚本**（**XSS**）是一种通常在Web应用程序中发现的计算机安全漏洞。XSS允许攻击者向其他用户查看的网页中注入客户端脚本。跨站脚本漏洞可能被攻击者用来绕过如同源策略这样的访问控制。截至2007年，Symantec记录的所有安全漏洞中，大约有84%是由网站上的跨站脚本造成的。其影响可能从微不足道的麻烦到重大的安全风险不等，这取决于受影响网站处理的数据的敏感性以及网站所有者实施的安全缓解措施的性质。'
- en: You can read more details about cross-site scripting at [https://en.wikipedia.org/wiki/Cross-site_scripting](https://en.wikipedia.org/wiki/Cross-site_scripting).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://en.wikipedia.org/wiki/Cross-site_scripting](https://en.wikipedia.org/wiki/Cross-site_scripting)上阅读更多关于跨站脚本的信息。
- en: In this section, we will walk you through the rules in PUMA scan analyzers to
    catch security vulnerabilities that can lead to cross-site scripting attacks in
    an ASP.NET web project.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将向您介绍 PUMA 扫描分析器中的规则，以捕获可能导致 ASP.NET Web 项目中跨站脚本攻击的安全漏洞。
- en: Getting ready
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need to have Visual Studio 2017 installed on your machine to execute
    the recipes in this chapter. You can install a free community version of Visual
    Studio 2017 from [https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15](https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在您的机器上安装 Visual Studio 2017 以执行本章中的配方。您可以从 [https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15](https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15)
    安装 Visual Studio 2017 的免费社区版本。
- en: How to do it...
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Start Visual Studio and click on File | New| Project... and create a new Visual
    C# | Web | ASP.NET Web Application with the MVC template, say `WebApplication`:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Visual Studio，点击“文件”|“新建”|“项目...”并创建一个新的 Visual C# | Web | ASP.NET Web 应用程序，使用
    MVC 模板，例如 `WebApplication`：
- en: '![](img/66e98811-4b2c-4298-9ca3-338328939f7a.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/66e98811-4b2c-4298-9ca3-338328939f7a.png)'
- en: Install the `Puma.Security.Rules` analyzers NuGet package (at the time of writing,
    the latest stable version is *1.0.4*). For guidance on how to search and install
    analyzer NuGet package to a project, refer to the recipe *Searching and installing
    analyzers through the NuGet package manager* in [Chapter 2](8e0229af-657f-4306-96b5-40511d1fe7b2.xhtml),
    *Consuming Diagnostic Analyzers in .NET Projects*.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 `Puma.Security.Rules` 分析器 NuGet 包（在撰写本文时，最新稳定版本为 *1.0.4*）。有关如何在项目中搜索和安装分析器
    NuGet 包的指导，请参阅第 2 章 *通过 NuGet 包管理器搜索和安装分析器* 中的配方，*在 .NET 项目中消费诊断分析器*。
- en: 'Open Views | _ViewStart.cshtml file and add the following text at the end of
    the file:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开“视图”| `_ViewStart.cshtml` 文件，并在文件末尾添加以下文本：
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Select `_ViewStart.cshtml` in the solution explorer and change its Build Action
    from Content to AdditionalFiles using the Properties window below and save the
    project.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在解决方案资源管理器中选择 `_ViewStart.cshtml`，并使用下面的属性窗口将其构建操作从内容更改为 AdditionalFiles，然后保存项目。
- en: 'Add a new Web Form to the project, say `WebForm.aspx`, and the following HTML
    heading with a raw inline expression to the form:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向项目中添加一个新的 Web 表单，例如 `WebForm.aspx`，并将以下带有原始内联表达式的 HTML 标题添加到表单中：
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Select `WebForm.aspx` in the solution explorer and change its Build Action from
    Content to AdditionalFiles using the Properties window below and save the project.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在解决方案资源管理器中选择 `WebForm.aspx`，并使用下面的属性窗口将其构建操作从内容更改为 AdditionalFiles，然后保存项目。
- en: 'Build the project in Visual Studio or command line and verify you get following
    *SECXXXX* warnings from the PUMA scan analyzer:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Visual Studio 或命令行中构建项目，并验证您是否收到来自 PUMA 扫描分析器的以下 *SECXXXX* 警告：
- en: '![](img/607af216-65fc-49d7-8f54-48ace4b2e2d6.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/607af216-65fc-49d7-8f54-48ace4b2e2d6.png)'
- en: 'Replace the HTML division element added to `_ViewStart.cshtml` in step 3 with
    the following:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将步骤3中添加到 `_ViewStart.cshtml` 的 HTML 分区元素替换为以下内容：
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Replace the HTML division element added to `WebForm.aspx` in step 5 with the
    following:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将步骤5中添加到 `WebForm.aspx` 的 HTML 分区元素替换为以下内容：
- en: '[PRE6]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Build the project again and verify it compiles without any security warnings.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次构建项目，并验证它是否编译且没有任何安全警告。
- en: How it works...
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: PUMA scan analyzers catch cross-site scripting security vulnerabilities in the
    view markup files (`.cshtml`, `.aspx`, `.ascx`) in C# ASP.NET web projects. In
    the preceding recipe, we showed you different kinds of security vulnerabilities
    that are caught by the PUMA scan analyzers, such as data from untrusted data source
    written to the body of an HTML document using raw inline and binding expressions,
    raw razor helper, and raw `WriteLiteral` method, and so on. It is recommended
    that such data is HTML encoded before being written to the browser. You can read
    detailed description of all cross-site scripting related security vulnerabilities
    identified by the PUMA scan analyzers at [https://www.pumascan.com/rules.html#cross-site-scripting](https://www.pumascan.com/rules.html#cross-site-scripting).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: PUMA 扫描分析器在 C# ASP.NET Web 项目的视图标记文件（`.cshtml`、`.aspx`、`.ascx`）中捕获跨站脚本安全漏洞。在前面的配方中，我们向您展示了
    PUMA 扫描分析器捕获的不同类型的安全漏洞，例如使用原始内联和绑定表达式、原始 razor 辅助程序和原始 `WriteLiteral` 方法将不受信任的数据源写入
    HTML 文档的主体，等等。建议在将此类数据写入浏览器之前对其进行 HTML 编码。您可以在 [https://www.pumascan.com/rules.html#cross-site-scripting](https://www.pumascan.com/rules.html#cross-site-scripting)
    读取 PUMA 扫描分析器识别的所有跨站脚本相关安全漏洞的详细描述。
- en: These security analyzers are written as additional file analyzers that analyze
    non-source files in the project that have been marked as `AdditionalFiles` item
    type. Users must mark the view markup files as additional files in their project
    to trigger security analysis during build. You can read more about how to write
    and consume additional file analyzers at [https://github.com/dotnet/roslyn/blob/master/docs/analyzers/Using%20Additional%20Files.md](https://github.com/dotnet/roslyn/blob/master/docs/analyzers/Using%20Additional%20Files.md).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这些安全分析器被编写为额外的文件分析器，用于分析项目中标记为`AdditionalFiles`项类型的不源文件。用户必须在他们的项目中将视图标记文件标记为额外文件，以在构建期间触发安全分析。您可以在[https://github.com/dotnet/roslyn/blob/master/docs/analyzers/Using%20Additional%20Files.md](https://github.com/dotnet/roslyn/blob/master/docs/analyzers/Using%20Additional%20Files.md)中了解更多关于如何编写和消费额外文件分析器的信息。
- en: Identifying insecure method calls that can lead to SQL and LDAP injection attacks
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别可能导致SQL和LDAP注入攻击的不安全方法调用
- en: SQL injection is a code injection technique, used to attack data-driven applications,
    in which nefarious SQL statements are inserted into an entry field for execution
    (for example, to dump the database contents to the attacker). SQL injection attacks
    allow attackers to spoof identity, tamper with existing data, cause repudiation
    issues such as voiding transactions or changing balances, allow the complete disclosure
    of all data on the system, destroy the data or make it otherwise unavailable,
    and become administrators of the database server.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: SQL注入是一种代码注入技术，用于攻击数据驱动的应用程序，其中恶意SQL语句被插入到输入字段中以执行（例如，将数据库内容导出到攻击者）。SQL注入攻击允许攻击者伪造身份、篡改现有数据、引发诸如取消交易或更改余额的拒绝问题、允许完全披露系统上的所有数据、破坏数据或使其不可用，并成为数据库服务器的管理员。
- en: LDAP injection is a code injection technique used to exploit web applications,
    which could reveal sensitive user information or modify information represented
    in the **Lightweight Directory Access Protocol** (**LDAP**) data stores. LDAP
    injection exploits a security vulnerability in an application by manipulating
    input parameters passed to internal search, add, or modify functions.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: LDAP注入是一种用于利用Web应用的代码注入技术，可能会泄露敏感用户信息或修改表示在**轻量级目录访问协议**（**LDAP**）数据存储中的信息。LDAP注入通过操纵传递给内部搜索、添加或修改函数的输入参数来利用应用程序中的安全漏洞。
- en: You can read more details about SQL injection at ([https://en.wikipedia.org/wiki/SQL_injection](https://en.wikipedia.org/wiki/SQL_injection))
    and LDAP injection at [https://en.wikipedia.org/wiki/LDAP_injection](https://en.wikipedia.org/wiki/LDAP_injection).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://en.wikipedia.org/wiki/SQL_injection](https://en.wikipedia.org/wiki/SQL_injection)了解更多关于SQL注入的详细信息，以及[https://en.wikipedia.org/wiki/LDAP_injection](https://en.wikipedia.org/wiki/LDAP_injection)了解更多关于LDAP注入的详细信息。
- en: In this section, we will walk you through the rules in PUMA scan analyzers to
    catch security vulnerabilities that can lead to SQL injection and LDAP injection
    attacks in data driven .NET projects.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将向您介绍PUMA扫描分析器中的规则，以捕获可能导致数据驱动.NET项目中SQL注入和LDAP注入攻击的安全漏洞。
- en: Getting ready
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need to have Visual Studio 2017 installed on your machine to execute
    the recipes in this chapter. You can install a free community version of Visual
    Studio 2017 from [https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15](https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在您的机器上安装Visual Studio 2017才能执行本章中的配方。您可以从[https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15](https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15)安装Visual
    Studio 2017的免费社区版本。
- en: How to do it...
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Start Visual Studio and click File | New | Project... and create a new Visual
    C# | Class Library, say `ClassLibrary`.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Visual Studio，点击文件 | 新建 | 项目...并创建一个新的Visual C# | 类库，例如`ClassLibrary`。
- en: Install the `Puma.Security.Rules` analyzers NuGet package (at the time of writing,
    the latest stable version is *1.0.4*). For guidance on how to search and install
    analyzer NuGet package to a project, refer to the recipe, *Searching and installing
    analyzers through the NuGet package manager* in [Chapter 2](8e0229af-657f-4306-96b5-40511d1fe7b2.xhtml),
    *Consuming Diagnostic Analyzers in .NET Projects*.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`Puma.Security.Rules`分析器NuGet包（在撰写本文时，最新稳定版本为*1.0.4*）。有关如何在项目中搜索和安装分析器NuGet包的指导，请参阅第2章中关于*通过NuGet包管理器搜索和安装分析器*的配方，*在.NET项目中消费诊断分析器*。
- en: 'Add assembly references to the following framework assemblies: <q>System.Data.Linq.dll</q>
    and `System.DirectoryServices.dll`.'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下框架程序集的引用添加到程序集中：`<q>System.Data.Linq.dll</q>` 和 `System.DirectoryServices.dll`。
- en: 'Replace the default `Class1` implementation in `Class1.cs` with the following
    code:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `Class1.cs` 中的默认 `Class1` 实现替换为以下代码：
- en: '[PRE7]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Verify you get following *SECXXX* diagnostics from PUMA scan analyzers in the
    error list and squiggles in the editor while editing code and also when invoking
    an explicit build.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在编辑代码以及调用显式构建时，验证您在错误列表和编辑器中的波浪线中是否获得了以下 *SECXXX* 诊断信息。
- en: '![](img/48965768-bfdc-4d65-9262-24e9f988ba8a.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/48965768-bfdc-4d65-9262-24e9f988ba8a.png)'
- en: 'Fix *SEC0106* reported on `context.ExecuteCommand` in method `SQL_Injection`
    by passing *id* as the second argument to the invocation: `context.ExecuteCommand("SELECT
    * FROM Items WHERE ID = {0}", id);`'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将 `id` 作为调用 `context.ExecuteCommand` 方法的第二个参数传递来修复在 `SQL_Injection` 方法中报告的
    *SEC0106*：`context.ExecuteCommand("SELECT * FROM Items WHERE ID = {0}", id);`
- en: 'Fix *SEC0107* by parameterizing the query passed to *new* `SqlCommand(...)`
    with a `*SqlParameter*`:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过使用 `*SqlParameter*` 参数化传递给 `*new*` `SqlCommand(...)` 的查询来修复 *SEC0107*：
- en: '[PRE8]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Fix *SEC0114* diagnostics by encoding the domain and `userName` arguments using
    the Web Protection Library (also known as AntiXSS) LDAP encoding methods.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过使用 Web 保护库（也称为 AntiXSS）的 LDAP 编码方法对域和 `userName` 参数进行编码来修复 *SEC0114* 诊断。
- en: Add NuGet package reference to AntiXSS library
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 NuGet 包引用添加到 AntiXSS 库
- en: Replace the domain argument passed to new `DirectoryEntry(...)` with `Microsoft.Security.Application.Encoder.LdapDistinguishedNameEncode(domain)`
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将传递给新 `DirectoryEntry(...)` 的域参数替换为 `Microsoft.Security.Application.Encoder.LdapDistinguishedNameEncode(domain)`
- en: Replace the `userName` argument passed to `string.Format` invocation in the
    initializer for filter with `Microsoft.Security.Application.Encoder.LdapFilterEncode(userName)`
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将初始化器中用于筛选器的 `string.Format` 调用传递给 `userName` 参数替换为 `Microsoft.Security.Application.Encoder.LdapFilterEncode(userName)`
- en: Verify there are no diagnostics in the error list and the project builds without
    any errors or warnings.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证错误列表中没有诊断信息，并且项目构建时没有错误或警告。
- en: How it works...
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何工作...
- en: PUMA scan analyzers catch SQL injection and LDAP injection security vulnerabilities
    in the source code of data-driven applications. In the preceding recipe, we showed
    you couple of different kinds of security vulnerabilities that are caught by these
    analyzers, such as concatenating untrusted data with SQL query strings, Sql command,
    LDAP directory entry path and filter format.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: PUMA 扫描分析器可以捕捉数据驱动应用程序源代码中的 SQL 注入和 LDAP 注入安全漏洞。在前面的配方中，我们向您展示了这些分析器捕捉到的不同类型的漏洞，例如将不受信任的数据与
    SQL 查询字符串、SQL 命令、LDAP 目录条目路径和筛选器格式连接起来。
- en: SQL injection attacks can be prevented by using parameterized queries where
    the untrusted data is passed as an explicit format argument.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用参数化查询（其中不受信任的数据作为显式格式参数传递）可以防止 SQL 注入攻击。
- en: LDAP injection attacks can be prevented by using LDAP encoding methods to encode
    the untrusted data. You can read detailed description of all SQL and LDAP injection
    security vulnerabilities identified by the PUMA scan analyzers at [https://www.pumascan.com/rules.html#injection](https://www.pumascan.com/rules.html#injection).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 LDAP 编码方法对不受信任的数据进行编码可以防止 LDAP 注入攻击。您可以在 [https://www.pumascan.com/rules.html#injection](https://www.pumascan.com/rules.html#injection)
    阅读PUMA 扫描分析器识别的所有 SQL 和 LDAP 注入安全漏洞的详细描述。
- en: Identifying weak password protection and management in web applications
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别网络应用中的弱密码保护和管理工作
- en: Applications responsible for password management inherit a tremendous amount
    of risk and responsibility. User passwords must be created with sufficient length/complexity,
    stored securely, and protected from brute force and cracking attempts.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 负责密码管理应用程序承担着巨大的风险和责任。用户密码必须具有足够长度/复杂性，安全存储，并保护免受暴力破解和破解尝试。
- en: 'In this section, we will walk you through the rules in PUMA scan analyzers
    to catch vulnerabilities related to weak password management vulnerabilities in
    ASP.NET web projects. The following password management rules are currently supported
    in PUMA scan analyzers:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将向您介绍 PUMA 扫描分析器中的规则，以捕捉与 ASP.NET 网络项目中弱密码管理相关的漏洞。PUMA 扫描分析器目前支持以下密码管理规则：
- en: ASP.NET Identity Weak Password Complexity
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ASP.NET Identity 弱密码复杂性
- en: ASP.NET Identity Missing Password Lockout
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ASP.NET Identity 缺失密码锁定
- en: You can read more details about these rules at [https://www.pumascan.com/rules.html#password-management](https://www.pumascan.com/rules.html#password-management).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 [https://www.pumascan.com/rules.html#password-management](https://www.pumascan.com/rules.html#password-management)
    上阅读有关这些规则的更多详细信息。
- en: Getting ready
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need to have Visual Studio 2017 installed on your machine to execute
    the recipes in this chapter. You can install a free community version of Visual
    Studio 2017 from [https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15](https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在您的机器上安装 Visual Studio 2017 才能执行本章中的配方。您可以从 [https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15](https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15)
    安装 Visual Studio 2017 的免费社区版本。
- en: How to do it...
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Start Visual Studio and click on File | New | Project and create a new Visual
    C# | Web | ASP.NET Web Application with the Web Forms template, say `WebApplication`.
    Click on Change Authentication button and change the authentication to Individual
    User Accounts:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Visual Studio 并点击 File | New | Project 创建一个新的 Visual C# | Web | ASP.NET Web
    Application，使用 Web Forms 模板，例如命名为 `WebApplication`。点击 Change Authentication 按钮并将身份验证更改为
    Individual User Accounts：
- en: '![](img/aa3dfea3-0f77-443c-a301-51dcd7a732b6.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aa3dfea3-0f77-443c-a301-51dcd7a732b6.png)'
- en: Install the `Puma.Security.Rules` analyzers NuGet package (at the time ofwriting,
    the latest stable version is *1.0.4*). For guidance on how to search and install
    analyzer NuGet package to a project, refer to the recipe, *Searching and installing
    analyzers through the NuGet package manager* in [Chapter 2](8e0229af-657f-4306-96b5-40511d1fe7b2.xhtml),
    *Consuming Diagnostic Analyzers in .NET Projects*.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 `Puma.Security.Rules` 分析器 NuGet 包（在撰写本文时，最新稳定版本为 *1.0.4*）。有关如何在项目中搜索和安装分析器
    NuGet 包的指导，请参阅配方，*通过 NuGet 包管理器搜索和安装分析器*，位于 [第 2 章](8e0229af-657f-4306-96b5-40511d1fe7b2.xhtml)，*在
    .NET 项目中消费诊断分析器*。
- en: 'Build the project and verify that you get a bunch of *SECXXXX* diagnostics
    from the PUMA scan analyzers, including a couple of password protection related
    diagnostics (*SEC0017* and *SEC0018*):'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建项目并验证是否从 PUMA 扫描分析器中获得了一堆 *SECXXXX* 诊断，包括一些与密码保护相关的诊断（*SEC0017* 和 *SEC0018*）：
- en: '[PRE9]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Open `WebApplicationApp_StartIdentityConfig.cs` and change the required minimum
    password length to be `12`:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `WebApplicationApp_StartIdentityConfig.cs` 并将所需的最小密码长度更改为 `12`：
- en: '[PRE10]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Open `WebApplicationAccountLogin.aspx.cs` and change the `shouldLockout` argument
    to `PasswordSignIn` invocation to be true:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `WebApplicationAccountLogin.aspx.cs` 并将 `shouldLockout` 参数更改为 `PasswordSignIn`
    调用为 true：
- en: '[PRE11]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Build the project and verify there are no *SEC0017* and *SEC0018* diagnostics.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建项目并验证没有出现 *SEC0017* 和 *SEC0018* 诊断。
- en: Identifying weak validation of data from external components to prevent attacks
    such as cross-site request forgery and path tampering
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别来自外部组件的数据弱验证以防止跨站请求伪造和路径篡改等攻击
- en: 'In this section, we will walk you through the rules in PUMA scan analyzers
    to catch security vulnerabilities that can lead to following types of security
    attacks due to insufficient validation of input:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将向您介绍 PUMA 扫描分析器中的规则，以捕获由于输入验证不足可能导致以下类型安全攻击的安全漏洞：
- en: '**Cross-Site request forgery** ([https://en.wikipedia.org/wiki/Cross-site_request_forgery](https://en.wikipedia.org/wiki/Cross-site_request_forgery)):
    Cross-site request forgery, also known as one-click attack or session riding and
    abbreviated as CSRF or XSRF, is a type of malicious exploit of a website where
    unauthorized commands are transmitted from a user that the web application trusts.
    Unlike cross-site scripting (XSS), which exploits the trust a user has for a particular
    site, CSRF exploits the trust that a site has in a user''s browser'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**跨站请求伪造** ([https://en.wikipedia.org/wiki/Cross-site_request_forgery](https://en.wikipedia.org/wiki/Cross-site_request_forgery)):
    跨站请求伪造，也称为一键攻击或会话劫持，缩写为 CSRF 或 XSRF，是一种恶意利用网站的攻击方式，其中未经授权的命令从应用程序信任的用户那里传输。与利用用户对特定网站的信任的跨站脚本（XSS）不同，CSRF
    利用网站对用户浏览器的信任。'
- en: '**Path tampering** ([https://en.wikipedia.org/wiki/Directory_traversal_attack](https://en.wikipedia.org/wiki/Directory_traversal_attack)):
    A directory traversal (or path traversal) consists in exploiting insufficient
    security validation/sanitization of user-supplied input filenames, so that characters
    representing traverse to parent directory are passed through to the file APIs.
    The goal of this attack is to use an affected application to gain unauthorized
    access to the filesystem'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**路径篡改** ([https://en.wikipedia.org/wiki/Directory_traversal_attack](https://en.wikipedia.org/wiki/Directory_traversal_attack)):
    目录遍历（或路径遍历）是通过利用对用户提供的输入文件名的不充分安全验证/清理，使得表示遍历到父目录的字符能够通过文件API。此攻击的目的是使用受影响的应用程序来获取对文件系统的未授权访问'
- en: '**Unvalidated redirect** ([https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet](https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet)):
    Unvalidated redirects and forwards are possible when a web application accepts
    untrusted input that could cause the web application to redirect the request to
    a URL contained within untrusted input. By modifying untrusted URL input to a
    malicious site, an attacker may successfully launch a phishing scam and steal
    user credentials'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**未经验证的跳转** ([https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet](https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet)):
    当一个网络应用程序接受可能导致应用程序将请求重定向到包含在不受信任输入中的URL的不受信任输入时，可能发生未经验证的跳转和转发。通过将不受信任的URL输入修改为恶意网站，攻击者可能成功发起钓鱼诈骗并窃取用户凭据'
- en: Getting ready
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need to have Visual Studio 2017 installed on your machine to execute
    the recipes in this chapter. You can install a free community version of Visual
    Studio 2017 from [https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15](https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在您的机器上安装Visual Studio 2017以执行本章中的配方。您可以从[https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15](https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15)安装Visual
    Studio 2017的免费社区版本。
- en: How to do it...
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Start Visual Studio and click File | New | Project... and create a new Visual
    C# | Web | ASP.NET Web Application with the MVC template, say `WebApplication`.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Visual Studio，点击文件 | 新建 | 项目...并使用MVC模板创建一个新的Visual C# | Web | ASP.NET Web应用程序，例如`WebApplication`。
- en: Install the `Puma.Security.Rules` analyzers NuGet package (at the time of writing,
    the latest stable version is *1.0.4*). For guidance on how to search and install
    analyzer NuGet package to a project, refer to the recipe, *Searching and installing
    analyzers through the NuGet package manager*, in [Chapter 2](8e0229af-657f-4306-96b5-40511d1fe7b2.xhtml),
    *Consuming Diagnostic Analyzers in .NET Projects*.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`Puma.Security.Rules`分析器NuGet包（在撰写本文时，最新稳定版本为*1.0.4*）。有关如何在项目中搜索和安装分析器NuGet包的指导，请参阅[第2章](8e0229af-657f-4306-96b5-40511d1fe7b2.xhtml)，*在.NET项目中使用诊断分析器*中的配方，*通过NuGet包管理器搜索和安装分析器*。
- en: 'Add a new class `Class1` to the project and replace the file contents with
    the following code:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新类`Class1`添加到项目中，并用以下代码替换文件内容：
- en: '[PRE12]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Verify you get following ***SECXXX*** diagnostics from PUMA scan analyzers
    in the error list and squiggles in the editor while editing code and also when
    invoking an explicit build:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在编辑代码和调用显式构建时，验证错误列表和编辑器中的波浪线，以获取以下***SECXXX***诊断信息。
- en: '![](img/f3b71eb8-5d9b-4ad0-a35e-4f530a1c744b.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f3b71eb8-5d9b-4ad0-a35e-4f530a1c744b.png)'
- en: Fix the first two *SEC0019* diagnostics by applying the `[ValidateAntiForgeryToken]`
    attribute to methods `Missing_AntiForgeryToken` and `Path_Tampering`.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将`[ValidateAntiForgeryToken]`属性应用于`Missing_AntiForgeryToken`和`Path_Tampering`方法来修复前两个*SEC0019*诊断。
- en: Fix *SEC0022* by deleting the `[AllowHtml]` attribute on `AllowHtmlProperty`*.*
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过删除`AllowHtmlProperty`上的`[AllowHtml]`属性来修复*SEC0022*错误。
- en: Fix *SEC0023* by deleting the `[ValidateInput(false)]` attribute on `Missing_AntiForgeryToken`*.*
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过删除`Missing_AntiForgeryToken`上的`[ValidateInput(false)]`属性来修复*SEC0023*错误。
- en: Fix *SEC01111* by adding the following `ValidatedFileResult` type and replacing
    `return new FilePathResult(...)` with `return new ValidatedFileResult(...)` in
    `Path_Tampering` method.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在`Path_Tampering`方法中将`return new FilePathResult(...)`替换为`return new ValidatedFileResult(...)`来修复*SEC01111*错误，并添加以下`ValidatedFileResult`类型。
- en: '[PRE13]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Fix *SEC0113* by deleting the line `handler.ServerCertificateValidationCallback
    += (sender, cert, chain, sslPolicyErrors) => true;`.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过删除行`handler.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors)
    => true;`来修复*SEC0113*错误。
- en: Build the project again and verify it compiles without any security warnings.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次构建项目并验证它是否编译且没有任何安全警告。
- en: You can read further details about PUMA scan validation rules at [https://www.pumascan.com/rules.html#validation](https://www.pumascan.com/rules.html#validation).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://www.pumascan.com/rules.html#validation](https://www.pumascan.com/rules.html#validation)上阅读有关PUMA扫描验证规则的更多详细信息。
- en: Identifying performance improvements to source code using FxCop analyzers
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用FxCop分析器识别源代码的性能改进
- en: In this section, we will introduce you to a popular third-party analyzer package
    for C# projects, FxCop analyzers.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将向您介绍一个流行的第三方分析器包，用于C#项目，即FxCop分析器。
- en: We will walk through how to install the FxCop analyzers NuGet package and give
    examples violations for different performance rules and show you how to automatically
    fix some of these issues with the code fixes that come along with the analyzers
    in the NuGet package.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将向您展示如何安装FxCop分析器NuGet包，并给出不同性能规则的违规示例，并展示如何使用NuGet包中分析器附带代码修复自动修复这些问题。
- en: Getting ready
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need to have Visual Studio 2017 installed on your machine to execute
    the recipes in this chapter. You can install a free community version of Visual
    Studio 2017 from [https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15](https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在您的机器上安装Visual Studio 2017才能执行本章中的配方。您可以从[https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15](https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=Community&rel=15)安装Visual
    Studio 2017的免费社区版本。
- en: How to do it...
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Start Visual Studio and click File | New | Project... and create a new C# class
    library project and replace the code in `Class1.cs` with code from the code sample
    at `ClassLibrary\Class1.cs`.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Visual Studio，点击文件 | 新建 | 项目... 创建一个新的C#类库项目，并将`Class1.cs`中的代码替换为`ClassLibrary\Class1.cs`中的代码样本。
- en: Install the `Microsoft.CodeAnalysis.FxCopAnalyzers` NuGet package (the latest
    prerelease version at the time of writing is *1.2.0-beta2)*. For guidance on how
    to search and install analyzer NuGet package to a project, refer to the recipe,
    *Searching and installing analyzers through the NuGet package manager*, in [Chapter
    2](8e0229af-657f-4306-96b5-40511d1fe7b2.xhtml), *Consuming Diagnostic Analyzers
    in .NET Projects*.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`Microsoft.CodeAnalysis.FxCopAnalyzers` NuGet包（写作时的最新预发布版本是*1.2.0-beta2*)。有关如何在项目中搜索和安装分析器NuGet包的指导，请参阅[第2章](8e0229af-657f-4306-96b5-40511d1fe7b2.xhtml)，*在.NET项目中使用诊断分析器*中的配方，*通过NuGet包管理器搜索和安装分析器*。
- en: Unload the project file by right-clicking on `ClassLibrary1` in the solution
    explorer and then open the project file for editing in Visual Studio by right
    clicking on the unloaded project in the solution explorer.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在解决方案资源管理器中右键单击`ClassLibrary1`来卸载项目文件，然后通过在解决方案资源管理器中右键单击未加载的项目来在Visual Studio中打开项目文件进行编辑。
- en: 'Add the following `PropertyGroup` to the project to enable the new Roslyn `IOperation`
    feature used by the FxCop analyzers:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下`PropertyGroup`添加到项目中以启用FxCop分析器使用的新的Roslyn `IOperation`功能：
- en: '[PRE14]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Reload the project and verify the following FxCop diagnostics show up in the
    error list:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新加载项目并验证以下FxCop诊断显示在错误列表中：
- en: '![](img/5da129c7-005b-4a2f-80b6-6727dc741eaf.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5da129c7-005b-4a2f-80b6-6727dc741eaf.png)'
- en: Build the project from the command line or top level Build menu in Visual Studio
    and verify these diagnostics are also reported from build.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令行或Visual Studio的顶级构建菜单中构建项目，并验证这些诊断是否也来自构建。
- en: 'Double click on the warning *CA1815* (ValueType should override Equals) and
    verify lightbulb is offered in the editor to implement the overrides for equals,
    `GetHashCode` and `==` and `!=` operator methods:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击警告*CA1815*（ValueType应该重写Equals）并验证编辑器中是否提供了灯泡以实现equals、`GetHashCode`和`==`以及`!=`运算符方法的重写：
- en: '![](img/f4f32f5a-4088-4a2d-97b4-a096ef87d070.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f4f32f5a-4088-4a2d-97b4-a096ef87d070.png)'
- en: Verify that applying the code fix by hitting the *Enter* key fixes *CA1815*
    diagnostics. Note that this introduces new *CAXXXX* diagnostics due to the default
    implementation of the overrides.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按*Enter*键应用代码修复来验证是否修复了*CA1815*诊断。请注意，这引入了新的*CAXXXX*诊断，这是由于重写默认实现。
- en: 'Replace the content of `Class1.cs` with following code and verify all *CAXXXX*
    diagnostics are fixed:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Class1.cs`的内容替换为以下代码并验证所有*CAXXXX*诊断都已修复：
- en: '[PRE15]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: How it works...
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: FxCop analyzers are a port of the most important Microsoft code analysis rules
    (CAXXXX), which were implemented as an MSIL-based binary analysis. Compared to
    the post-build binary analysis, the FxCop analyzers have added advantage of live
    analysis and diagnostics while editing code, as well as rich code fixes to fix
    these issues.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: FxCop 分析器是将最重要的 Microsoft 代码分析规则（CAXXXX）移植而来，这些规则是以 MSIL 为基础的二进制分析。与构建后二进制分析相比，FxCop
    分析器在编辑代码时增加了实时分析和诊断的优势，以及丰富的代码修复功能来解决这些问题。
- en: 'FxCop contains rules in various different categories such as performance, security,
    code style, API design, maintainability, and so on. In the example covered in
    this section, we focused on the following performance rules:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: FxCop 包含各种不同类别的规则，例如性能、安全、代码风格、API 设计、可维护性等。在本节所涵盖的示例中，我们关注以下性能规则：
- en: '*CA1801* (Review unused parameters) ([https://msdn.microsoft.com/en-us/library/ms182268.aspx](https://msdn.microsoft.com/en-us/library/ms182268.aspx)):
    A method signature includes a parameter that is not used in the method body.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*CA1801*（审查未使用参数）([https://msdn.microsoft.com/en-us/library/ms182268.aspx](https://msdn.microsoft.com/en-us/library/ms182268.aspx))：方法签名中包含一个在方法体中未使用的参数。'
- en: '*CA1810* (Initialize reference type static fields inline) ([https://msdn.microsoft.com/en-us/library/ms182275.aspx](https://msdn.microsoft.com/en-us/library/ms182275.aspx)):
    When a type declares an explicit static constructor, the just-in-time (JIT) compiler
    adds a check to each static method and instance constructor of the type to make
    sure that the static constructor was previously called. Static constructor checks
    can decrease performance.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*CA1810*（内联初始化引用类型静态字段）([https://msdn.microsoft.com/en-us/library/ms182275.aspx](https://msdn.microsoft.com/en-us/library/ms182275.aspx))：当一个类型声明了显式的静态构造函数时，即时编译器（JIT）会对类型的每个静态方法和实例构造函数添加检查，以确保静态构造函数之前已被调用。静态构造函数检查可能会降低性能。'
- en: '*CA1814* (Prefer jagged arrays over multidimensional) ([https://msdn.microsoft.com/en-us/library/ms182277.aspx](https://msdn.microsoft.com/en-us/library/ms182277.aspx)):
    A jagged array is an array whose elements are arrays. The arrays that make up
    the elements can be of different sizes, which can result in less wasted space
    for some sets of data.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*CA1814*（优先使用交错数组而非多维数组）([https://msdn.microsoft.com/en-us/library/ms182277.aspx](https://msdn.microsoft.com/en-us/library/ms182277.aspx))：交错数组是一个元素为数组的数组。组成元素的数组可以有不同的大小，这可能导致某些数据集的浪费空间更少。'
- en: '*CA1815* (Override equals and operator equals on value types) ([https://msdn.microsoft.com/en-us/library/ms182276.aspx](https://msdn.microsoft.com/en-us/library/ms182276.aspx)):
    For value types, the inherited implementation of equals uses the Reflection library
    and compares the contents of all fields. Reflection is computationally expensive,
    and comparing every field for equality might be unnecessary. If you expect users
    to compare or sort instances, or to use instances as hash table keys, your value
    type should implement equals.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*CA1815*（在值类型上重写等于和运算符等于）([https://msdn.microsoft.com/en-us/library/ms182276.aspx](https://msdn.microsoft.com/en-us/library/ms182276.aspx))：对于值类型，继承的等于实现使用反射库并比较所有字段的值。反射计算成本高昂，并且比较每个字段以检查相等性可能是不必要的。如果你期望用户比较或排序实例，或者将实例用作哈希表键，则你的值类型应该实现等于。'
- en: '*CA1816* (Call `GC.SuppressFinalize` correctly) ([https://msdn.microsoft.com/en-us/library/ms182269.aspx](https://msdn.microsoft.com/en-us/library/ms182269.aspx)):
    A method that is an implementation of `Dispose` does not call `GC.SuppressFinalize`,
    or a method that is not an implementation of `Dispose` calls `GC.SuppressFinalize`,
    or a method calls `GC.SuppressFinalize` and passes something other than this.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*CA1816*（正确调用 `GC.SuppressFinalize`）([https://msdn.microsoft.com/en-us/library/ms182269.aspx](https://msdn.microsoft.com/en-us/library/ms182269.aspx))：实现
    `Dispose` 的方法没有调用 `GC.SuppressFinalize`，或者不是 `Dispose` 实现的方法调用了 `GC.SuppressFinalize`，或者方法调用了
    `GC.SuppressFinalize` 但传递了其他内容。'
- en: '*CA1821* (Remove empty finalizers) ([https://msdn.microsoft.com/en-us/library/bb264476.aspx](https://msdn.microsoft.com/en-us/library/bb264476.aspx)):
    Whenever you can, avoid finalizers because of the additional performance overhead
    that is involved in tracking object lifetime. An empty finalizer incurs added
    overhead without any benefit.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*CA1821*（移除空终结器）([https://msdn.microsoft.com/en-us/library/bb264476.aspx](https://msdn.microsoft.com/en-us/library/bb264476.aspx))：在可能的情况下，避免使用终结器，因为跟踪对象生命周期的额外性能开销。空终结器会带来额外的开销，但没有任何好处。'
- en: You can read detailed documentation about all the FxCop performance rules at
    [https://msdn.microsoft.com/en-us/library/ms182260(v=vs.140).aspx](https://msdn.microsoft.com/en-us/library/ms182260(v=vs.140).aspx).
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 [https://msdn.microsoft.com/en-us/library/ms182260(v=vs.140).aspx](https://msdn.microsoft.com/en-us/library/ms182260(v=vs.140).aspx)
    阅读有关所有 FxCop 性能规则的详细文档。
- en: Note that even though majority of Microsoft Code Analysis performance rules
    have been ported to FxCop analyzers package, not all rules are enabled by default
    in the NuGet package. You can view and configure the suppression state and severity
    of each FxCop rule by using the ruleset editor. For further guidance on using
    the ruleset editor, refer to recipe *Using ruleset file and ruleset editor to
    configure analyzers*, in [Chapter 2](8e0229af-657f-4306-96b5-40511d1fe7b2.xhtml),
    *Consuming Diagnostic Analyzers in .NET Projects.*
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，尽管大多数 Microsoft 代码分析性能规则已移植到 FxCop 分析器包中，但并非所有规则在 NuGet 包中默认启用。您可以通过规则集编辑器查看和配置每个
    FxCop 规则的抑制状态和严重性。有关使用规则集编辑器的进一步指导，请参阅第 2 章 *在 .NET 项目中消费诊断分析器* 中的配方 *使用规则集文件和规则集编辑器配置分析器*，[第
    2 章](8e0229af-657f-4306-96b5-40511d1fe7b2.xhtml)。
