["```cs\nExpanded    Type    SubType    Name                Caption\n0           Action             <Action680>         Style Sheets\n```", "```cs\nStyleSheetDataMgt.LoadStylesheetDataRTC(GETPOSITION,\n  CURRENTKEY,PAGE::\"<<PageName>>\");\n```", "```cs\n    OnRun()\n    ExcelBufTemp.CreateBook(Cust.TABLECAPTION);\n\n    Cust.FIND('-');\n    REPEAT\n      RowNo := RowNo + 1;\n      EnterCell(RowNo, 1, Cust.\"No.\", FALSE, FALSE, '');\n\n      FormAddr.Customer(Addr, Cust);\n      EnterCell(RowNo, 2, Addr[1], FALSE, FALSE, '');\n      EnterCell(RowNo, 3, Addr[2], FALSE, FALSE, '');\n      EnterCell(RowNo, 4, Addr[3], FALSE, FALSE, '');\n      EnterCell(RowNo, 5, Addr[4], FALSE, FALSE, '');\n      EnterCell(RowNo, 6, Addr[5], FALSE, FALSE, '');\n      EnterCell(RowNo, 7, Addr[6], FALSE, FALSE, '');\n      EnterCell(RowNo, 8, Addr[7], FALSE, FALSE, '');\n      EnterCell(RowNo, 9, Addr[8], FALSE, FALSE, '');\n\n    UNTIL Cust.NEXT = 0;\n\n    ExcelBufTemp.WriteSheet(Cust.TABLECAPTION,COMPANYNAME,USERID);\n    ExcelBufTemp.CloseBook;\n    ExcelBufTemp.OpenExcel;\n    ExcelBufTemp.GiveUserControl;\n    EnterCell()\n    ExcelBufTemp.INIT;\n    ExcelBufTemp.VALIDATE(\"Row No.\",RowNo);\n    ExcelBufTemp.VALIDATE(\"Column No.\",ColumnNo);\n    ExcelBufTemp.\"Cell Value as Text\" := CellValue;\n    ExcelBufTemp.Formula := '';\n    ExcelBufTemp.Bold := Bold;\n    ExcelBufTemp.Underline := UnderLine;\n    ExcelBufTemp.NumberFormat := NumberFormat;\n    ExcelBufTemp.INSERT;\n    ```", "```cs\nParameters()\nInitCurrentRoleValues;\n\nEXIT(Add(Version) + Add(Locale) + Add(Role) + Add(RoleID) + \n  Add(Serial));\n\nAdd()\nEXIT(Parameter + Separator);\n\nVersion()\nEXIT('version=' + FORMAT(ApplicationManagement.ApplicationVersion + ':' + \n  ApplicationManagement.ApplicationBuild,0,XMLFormat));\n\nLocale()\n// Windows Language ID\nEXIT('locale=' + FORMAT(CurrentLanguageID,0,XMLFormat));\n\nRole()\n// Profile ID (Any text entered in Profile ID)\nEXIT('role=' + FORMAT(DELCHR(CurrentRole,'=',Separator),0,\n  XMLFormat));\n\nRoleID()\n// Role Center ID (Page ID)\nEXIT('roleid=' + FORMAT(CurrentRoleID,0,XMLFormat));\n\nSerial()\n// License ID\nEXIT('serial=' + FORMAT(SERIALNUMBER,0,XMLFormat));\n\nSeparator()\nEXIT(';');\n\nXMLFormat()\nEXIT(9);\n\nInitCurrentRoleValues()\nCurrentLanguageID := GLOBALLANGUAGE;\nCurrentRoleID := ApplicationManagement.DefaultRoleCenter;\nCurrentRole := FORMAT(CurrentRoleID);\n...\n```", "```cs\nOnRun()\n\nRFInt.CreateConnectionString;\nRFLoop(600000);\n\nRFLoop(MilisecondsBetweenPolls : Integer)\nWHILE TRUE DO BEGIN\n  IF NOT CODEUNIT.RUN(CODEUNIT::\"RF Helper\") THEN\n    ParseError;\n  COMMIT;\n  MaxMilisecondsSleep := 10000;\n  FOR Count := 1 TO MilisecondsBetweenPolls DIV MaxMilisecondsSleep DO\n    SLEEP(MaxMilisecondsSleep);\n  SLEEP(MilisecondsBetweenPolls MOD MaxMilisecondsSleep);\nEND;\n\nParseError()\nSELECTLATESTVERSION;\nRFIntSetup.GET;\nSynchID := RFIntSetup.\"Synchronization ID\";\n\nSQLStat.INIT;\nSQLStat.\"SQL Statement 1\" := 'ERROR : ' + GETLASTERRORTEXT;\n\nSQLStat.Bold := TRUE;\nSQLStat.SessionID := SynchID;\nSQLStat.Type := SQLStat.Type::Error;\nSQLStat.INSERT(TRUE);\nCOMMIT;\n```", "```cs\nOnRun()\nSELECTLATESTVERSION;\nRFIntSetup.GET;\nRFIntSetup.\"Synchronisation ID\" := RFIntSetup.\"Synchronisation ID\" + 1;\nRFIntSetup.MODIFY;\nSynchID := RFIntSetup.\"Synchronisation ID\";\n\nSQLStat.INIT;\nSQLStat.\"SQL Statement 1\" := \n  '-SYNCHRONISATION STARTED- ID = ' + FORMAT(SynchID) + ' -';\nSQLStat.Bold := TRUE;\nSQLStat.SessionID := SynchID;\nSQLStat.Type := SQLStat.Type::StartStop;\nSQLStat.INSERT(TRUE);\n\nCOMMIT;\n\nCLEAR(RFInterface);\nRFInterface.SetSynchID(SynchID);\n\nStorageLn.LOCKTABLE;\nIF StorageLn.FINDSET THEN REPEAT\n  RFInterface.CreatePickLines(StorageLn);\nUNTIL StorageLn.NEXT = 0;\n\nCOMMIT;\n\nCLEAR(RFInterface);\nRFInterface.SetSynchID(SynchID);\nRFInterface.ReadFinishedPicks;\n\nCOMMIT;\n\nCLEAR(RFInterface);\nRFInterface.SetSynchID(SynchID);\nRFInterface.ReadExceptions;\n\nCOMMIT;\n\nSQLStat.INIT;\nSQLStat.\"SQL Statement 1\" := \n  '-SYNCHRONISATION STOPPED- ID = ' + FORMAT(SynchID) + ' -';\nSQLStat.Bold := TRUE;\nSQLStat.SessionID := SynchID;\nSQLStat.Type := SQLStat.Type::StartStop;\nSQLStat.INSERT(TRUE);\n\nCOMMIT;\n```", "```cs\nCreateConnectionString()\nIF ConnActive THEN EXIT;\n\nRFIntSetup.GET;\nDatabase := RFIntSetup.\"Database Name\";\nServer := RFIntSetup.\"Server Name\";\n\nConnString := 'Data Source=' + Server + ';' + 'Initial Catalog=' + Database + ';Trusted_Connection=True;';\n\nSaveReadSQL('Connection ' + ConnString + ' opened on ' + FORMAT(CURRENTDATETIME),TRUE,0,0,0, '');\n\nSQLCon := SQLCon.SqlConnection(ConnString);\n\nSQLCon.Open;\nConnActive := TRUE;\n\nCloseConnectionString()\nSQLCon.Close;\n\nSaveReadSQL('Connection closed on ' + FORMAT(CURRENTDATETIME),TRUE,0,0,1, '');\n\nCLEAR(SQLReader);\nCLEAR(SQLCommand);\nCLEAR(SQLCon);\nConnActive := FALSE;\n```", "```cs\nCreatePickLines()\nCreateConnectionString;\n\nSaveReadSQL('CreatePickLines',TRUE, 1, 8388608, 3, '');\n\nPickID := COPYSTR(StorageLn.\"Document No.\" + FORMAT(StorageLn.\"Line No.\"), 1, 20);\n\nSaveReadSQL('Pick Document : '+PickID,TRUE,3,16711680,7,'');\n\nWITH RFPickLines DO BEGIN\n  \"Pick Code\" := PickID;\n  Quantity := StorageLn.Quantity;\n  \"Terminal ID\" := 1;\n  \"Display 1\" := StorageLn.Description;\n  \"Display 2\" := 'Warehouse ' + StorageLn.\"Warehouse Code\";\n  \"Display 3\" := 'Region ' + StorageLn.\"Region Code\";\n  \"Display 4\" := 'Shelf ' + StorageLn.\"Shelf No.\";\n  INSERT;\n  SQLStatement := 'INSERT INTO [RF Pick Lines]' +\n                  '([Pick Code],'+\n                   '[Quantity],'+\n                   '[Terminal ID],'+\n                   '[Display 1],'+\n                   '[Display 2],'+\n                   '[Display 3],'+\n                   '[Display 4])'+\n                   'VALUES('+\n                   Quote + PickID + Quote      +','+\n                   FORMAT(Quantity)            +','+\n                   '1'                         +','+\n                   Quote + \"Display 1\" + Quote +','+\n                   Quote + \"Display 2\" + Quote +','+\n                   Quote + \"Display 3\" + Quote +','+\n                   Quote + \"Display 4\" + Quote + ')';\nEND;\n\nExecuteSQL(SQLStatement);\n\nStorageLn.Exported := CURRENTDATETIME;\nStorageLn.MODIFY;\n```", "```cs\nReadFinishedPicks()\nCreateConnectionString;\n\nSaveReadSQL('ReadFinishedPicks',TRUE, 1, 8388608, 3, '');\n\nRFIntSetup.GET;\nLastSync := RFIntSetup.\"Last Finished Pick\";\n\nSQLCommand := SQLCon.CreateCommand();\nSQLCommand.CommandText := SaveReadSQL('SELECT ' +\n              '[Reference Entry No],' +\n              '[Terminal ID],' +\n              '[Duration],' +\n              '[Ready Date Time]' +\n    ' FROM [RF Finished Pick] WHERE [Reference Entry No] > ' + \n      LastSync,FALSE,2,0,2, ''));\n\nWHILE SQLReader.Read() DO BEGIN\n  RFFinishedPick.INIT;\n  RFFinishedPick.\"Reference Entry No.\" := \n    ReadInteger('Reference Entry No');\n  RFFinishedPick.\"Terminal ID\" := ReadInteger('Terminal ID');\n  RFFinishedPick.Duration := ReadInteger('Duration');\n  RFFinishedPick.\"Ready Date Time\" := \n    ReadDateTime('Ready Date Time');\n  RFFinishedPick.INSERT;\nEND;\n\nRFIntSetup.\"Last Finished Pick\" := Quote + FORMAT(RFFinishedPick.\"Reference Entry No.\") + Quote;\nRFIntSetup.MODIFY;\n\nAdoRecordSet.Close;\n```"]