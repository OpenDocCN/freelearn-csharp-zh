["```cs\nLIST stages = (one), (two), (three)\nVAR stage = one\nVAR end = false\n```", "```cs\nYou meet an old man by the side of a dusty road with a wide hat set out in front of him. \"Got any change?\"\n* [Sure]\n    -> quest\n* [Not today]\n    -> quest.stop\n```", "```cs\n== quest\n{step:\n    - one: -> first\n    - two: -> second\n    - three: -> third\n}\n-> DONE\n```", "```cs\n= first\nYou empty some coins from your pocket and the old man nods. \"Thanks, stranger! May the gods bless you!\"\n-> DONE\n```", "```cs\n== progress\n~ steps -= LIST_MIN(steps)\n~ step = LIST_MIN(steps)\n-> quest\n```", "```cs\npublic void Progress()\n{\n     InkStory.ChoosePathString(\"progress\");\n     FlipProgress();\n    UpdateContent();\n}\n```", "```cs\nvoid FlipProgress() {\nProgressButton.gameObject.SetActive(!ProgressButton.gameObject.activeSelf);\n}\n```", "```cs\nvoid UpdateContent()\n{\n     DestroyChildren(OptionsPanel.transform);\n     DialogueText.text = InkStory.ContinueMaximally();\n     foreach (Choice in InkStory.currentChoices)\n     {\n          Button choiceButton = Instantiate(ButtonPrefab,\n             OptionsPanel.transform);\n           choiceButton.onClick.AddListener(delegate\n           {\n                InkStory.ChooseChoiceIndex(choice.index);\n                FlipProgress();\n                UpdateContent();\n           });\n             Text choiceText =\n             choiceButton.GetComponentInChildren<Text>();\n           choiceText.text = choice.text;\n      }\n}\n```", "```cs\nLIST steps = (one), (two), (three)\nVAR step = one\nVAR end = false\nVAR name = \"Old Man's Change\"\n```", "```cs\nInkStory = new Story(text);\nName = (string)InkStory.variablesState[\"name\"];\nEnd = (bool)InkStory.variablesState[\"end\"];\nInkStory.ObserveVariable(\"end\", delegate\n{\n      End = (bool)InkStory.variablesState[\"end\"];\n});\n```", "```cs\nusing Ink.Runtime;\npublic class Quest\n{\n    public Story InkStory;\n    public string Name;\n    public string Description;\n    public bool End;\n    public Quest(string text)\n    {\n        InkStory = new Story(text);\n        Name = (string)InkStory.variablesState[\"name\"];\n        End = (bool)InkStory.variablesState[\"end\"];\n        InkStory.ObserveVariable(\"end\", delegate\n        {\n            End = (bool)InkStory.variablesState[\"end\"];\n        });\n    }\n    public void Progress()\n    {\n        InkStory.ChoosePathString(\"progress\");\n    }\n}\n```", "```cs\npublic void UpdateContent()\n{\n     DestroyChildren();\n\n     if(quest.InkStory.canContinue)\n     {\n           DialogueText.text =\n             quest.InkStory.ContinueMaximally();\n           lastDialogue = DialogueText.text;\n      }\n      else\n     {\n            DialogueText.text = lastDialogue;\n     }\n```", "```cs\nvoid GetFiles()\n{\n     string inkPath = Application.dataPath + \"/Ink/\";\n     foreach(string file in Directory.GetFiles(inkPath,\n       \"*.json\"))\n     {\n           string contents = File.ReadAllText(file);\n           quests.Add(new Quest(contents));\n     }  \n}\n```", "```cs\nvoid CreateQuestToggles()\n{\n      foreach(Quest q in quests)\n      {\n     Toggle questToggle = Instantiate(QuestTogglePrefab, \n       QuestPanel.transform);\n     questToggle.group =QuestPanel.GetComponent\n       <ToggleGroup>();\n\n     Text questToggleText = questToggle\n       .GetComponentInChildren<Text>();\n     questToggleText.text = q.Name;\n     }\n}\n```", "```cs\nToggleScript ts = questToggle.GetComponent<ToggleScript>();\nts.quest = q;\nts.DialogueText = DialogueText;\nts.ButtonPrefab = ButtonPrefab;\nts.OptionsPanel = OptionsPanel;\nts.ProgressPanel = ProgressPanel;\nts.ProgressButtonPrefab = ProgressButtonPrefab;\n```", "```cs\ndialogue = gameObject.AddComponent<Dialogue>();\ndialogue.quest = quest;\ndialogue.DialogueText = DialogueText;\ndialogue.ButtonPrefab = ButtonPrefab;\ndialogue.OptionsPanel = OptionsPanel;\n```", "```cs\npublic Story InkStory;\npublic string Name;\npublic string Description;\npublic bool End;\npublic List<string> excludeVariables = new List<string>(){ \"step\", \"steps\", \"name\", \"end\" };\n```", "```cs\npublic void ObserveVariables(Story.VariableObserver callback)\n{\n      List<string> variables = new List<string>();\n      foreach(string n in InkStory.variablesState)\n     {\n           if(!excludeVariables.Contains(n))\n           {\n                variables.Add(n);\n           }\n     }\n     InkStory.ObserveVariables(variables, callback);\n}\n```", "```cs\npublic void UpdateVariable(string name, object value)\n{\n        if(InkStory.variablesState.GlobalVariableExistsWith\n          Name(name))\n     {\n          if (!InkStory.variablesState[name].Equals(value))\n           {\n                InkStory.variablesState[name] = value;\n           }\n     }\n}\n```", "```cs\nforeach(Quest q in quests)\n{\n     q.ObserveVariables((name, value) =>\n     {\n          UpdateAllQuests(name, value);\n     });\n}\n```", "```cs\nvoid UpdateAllQuests(string name, object value)\n{\n     foreach (Quest q in quests)\n     {\n            q.UpdateVariable(name, value);\n     }\n}\n```", "```cs\npublic GameObject QuestPanel;\npublic Toggle QuestTogglePrefab;\npublic Text DialogueText;\npublic Button ButtonPrefab;\npublic GameObject OptionsPanel;\npublic GameObject ProgressPanel;\npublic Button ProgressButtonPrefab;\npublic static GameObject StatisticsText;\nstatic List<Quest> quests;\n```", "```cs\npublic static void ShowStatistics()\n{\n     StatisticsText = \n       GameObject.Find(\"/Canvas/Right/StatisticsText\");\n     Dictionary<string, object> vars = new\n       Dictionary<string, object>();\n     foreach (Quest q in quests)\n     {\n           foreach(string s in q.InkStory.variablesState)\n           {\n                if(!vars.ContainsKey(s) &&\n                  !q.excludeVariables.Contains(s))\n                {\n                      vars.Add(s,\n                        q.InkStory.variablesState[s]);\n                }\n           }\n     }\n     Text stats = StatisticsText.GetComponent<Text>();\n     stats.text = \"\";\n      foreach (KeyValuePair<string, object> entry in vars)\n      {\n           stats.text += entry.Key + \": \" + entry.Value +\n             \"\\n\";\n      }\n}\n```", "```cs\nforeach (Choice in quest.InkStory.currentChoices)\n{\n     Button choiceButton = Instantiate(ButtonPrefab,\n       OptionsPanel.transform);\n     choiceButton.onClick.AddListener(delegate\n     {\n           quest.InkStory.ChooseChoiceIndex(choice.index);\n           UpdateContent();\n     });\n     Text choiceText =       choiceButton.GetComponentInChildren<Text>();\n       choiceText.text = choice.text;\n}\nInkStoryScript.ShowStatistics();\n```"]