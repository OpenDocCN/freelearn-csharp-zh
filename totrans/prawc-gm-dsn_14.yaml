- en: The Final 10%
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的10%
- en: Have you ever heard of the 80/20 rule?
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你听说过80/20法则吗？
- en: It states that 80% of most effects are caused by just 20% of the possible causes.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 它表明，大多数效果中的80%是由仅20%的可能原因造成的。
- en: It is known as the Pareto Principle, named after Vilfredo Pareto, an Italian
    scientist who postulated a mathematical distribution to describe many social and
    natural phenomena.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这被称为帕累托法则，以意大利科学家维弗雷多·帕累托的名字命名，他提出了一个数学分布来描述许多社会和自然现象。
- en: 'Some examples:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一些例子：
- en: 20% of the clients of a company account for 80% of its revenues
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一家公司的20%的客户占其80%的收入
- en: 80% of a company's sales come from 20% of its products
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一家公司的80%的销售额来自其20%的产品
- en: 80% of global world wealth is owned by 20% of the population
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全球80%的财富掌握在20%的人口手中
- en: 80% of crimes are committed by 20% of criminals
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 80%的犯罪是由20%的罪犯犯下的
- en: 20% of the posts on social networks generate 80% of traffic
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社交网络上20%的帖子产生了80%的流量
- en: It is obviously a rule of thumb, but you'd be surprised how accurate it can
    be!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这显然是一个经验法则，但你会惊讶于它的准确性！
- en: 'In fact, we can safely state that:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，我们可以安全地说：
- en: '"80% of a game is made in the final 20% of the time"'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '"80%的游戏是在最后的20%的时间内完成的"'
- en: I know, the chapter is called The Final 10%. Based on what we've just said,
    it should have been called The Final 80%. But that wouldn't really help with the
    point we're trying to make here.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道，这一章叫做《最后的10%》。根据我们刚才所说的，它应该被称为《最后的80%》。但那并不会真正帮助我们在这里想要表达的观点。
- en: The problem with the so-called final 10% is that it often takes much longer
    than the final 10% of budgeted development time. When the game finally comes together,
    not only will bugs and technical problems with the software inevitably emerge,
    but some of the systems might prove to be not working as expected. Some design
    flaws might lie hidden in the game and become evident only at this stage.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 所说的最后10%的问题在于，它通常比预算的开发时间的最后10%要长得多。当游戏最终完成时，不仅软件中的错误和技术问题不可避免地会出现，而且一些系统可能证明并没有按预期工作。一些设计缺陷可能隐藏在游戏中，只有在这一阶段才会变得明显。
- en: This is the reason why so many games' release dates are delayed and so many
    budgets are burned before the project is done. This is why the dreaded crunch
    time practice exists in our industry.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么许多游戏的发布日期会推迟，为什么在项目完成之前会有如此多的预算被烧掉。这就是为什么我们行业中有那么可怕的加班时间实践存在。
- en: 'It is also the reason why so many games projects fail:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是许多游戏项目失败的原因：
- en: '![](img/00086.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00086.jpg)'
- en: The Wrap-Up, Test and Polishing phase usually takes much longer than what was
    originally planned, causing great delays in the final release. The purpose of
    this diagram is to give you an idea of what could go wrong in the game development
    process
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 收尾、测试和抛光阶段通常比最初计划的时间长得多，导致最终发布出现重大延误。这个图表的目的就是给你一个关于游戏开发过程中可能出错的想法。
- en: In this chapter, we are going to discuss the activities and issues that make
    that final 10% so challenging, focusing on those that put the game designer at
    the center of the action.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论那些使最后的10%如此具有挑战性的活动和问题，重点关注那些将游戏设计师置于行动中心的活动。
- en: This is not a book for project managers or producers (although they would certainly
    benefit from some game design knowledge), therefore this chapter won't be focused
    around how to avoid crunch time or meet deadlines.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书不是为项目经理或制作人写的（尽管他们当然会从一些游戏设计知识中受益），因此本章不会专注于如何避免加班时间或满足截止日期。
- en: This chapter is about the activities that must be done in that last 10%. As
    a designer is your duty to know them and enter the final stage of production confident
    and ready for the final push before release!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本章是关于在最后10%必须完成的活动。作为设计师，你的责任是了解它们，并在发布前的最后阶段自信地进入，准备好最后的冲刺！
- en: It is important to keep in mind that, in the real world, no project schedule
    contemplates assigning 80% of the time available to just the final part. The ability
    and the challenge for the producers and project managers are to make sure that
    the final stage can be wrapped up in a reasonable amount of time, which is always
    going to be shorter than the production time.
  id: totrans-22
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 需要记住的是，在现实世界中，没有任何项目进度表会考虑将80%的时间仅分配给最后阶段。制作人项目经理的能力和挑战是确保最后阶段可以在合理的时间内完成，这通常会比生产时间短。
- en: This is one of the biggest challenges of producing a game, but as a game designer,
    you should stay focused on doing your part and making sure everything you have
    to do is done in time. We don't live in an ideal world, so be prepared to confront
    the final 10% with no more than just 10% of the time...or less!
  id: totrans-23
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这是在制作游戏时面临的最大挑战之一，但作为游戏设计师，你应该专注于做好你的部分，并确保你必须完成的每一件事都能按时完成。我们并不生活在一个理想的世界里，所以要做好准备，用不超过10%的时间来应对最后的10%……或者更少！
- en: 'Usually, the final stage of the production begins with the Alpha release. Here
    follows a list of the activities commonly associated with this final stage:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，生产的最后阶段始于Alpha版本发布。以下是与此最终阶段通常相关的一系列活动列表：
- en: Putting the pieces together
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将碎片拼凑在一起
- en: Polishing
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 精炼
- en: Quality Assurance
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 质量保证
- en: Putting the pieces together
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 将碎片拼凑在一起
- en: It's very unlikely that a game would take its final shape by linearly expanding
    from its narrative beginning to its ultimate ending. During the development, some
    pieces of the game are developed as modules and all these modules are put together
    when a playable of some sort is required. But maybe after the Alpha is out, some
    extra iteration is required to sort out problems and those pieces need to be re-shuffled
    for the Beta or the next version. Again, it is possible that this task would come
    at the last moment.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏不可能通过线性地从叙事开始到最终结局扩展而最终成型。在开发过程中，游戏的一些部分作为模块开发，所有这些模块在需要某种可玩性时被整合在一起。但也许在Alpha版本发布后，还需要进行一些额外的迭代来解决问题，这些碎片需要为Beta版本或下一个版本重新排序。再次强调，这项任务可能是在最后一刻才出现。
- en: Depending on the size of the project, the designer might have a big responsibility
    in putting everything together. Usually, the designers are in charge of setting
    up the whole game content. Maybe the beta version included only a single level
    or mission, and that one was put together as best as possible for the Beta phase.
    Now it is time to create and introduce the rest of those missions, quest, dialogs,
    characters, and levels.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 根据项目的大小，设计师在整合所有内容时可能承担着很大的责任。通常，设计师负责设置整个游戏内容。也许测试版只包含一个关卡或任务，而这个关卡或任务在Beta阶段被尽可能好地整合在一起。现在，是时候创建和引入剩余的这些任务、任务、对话、角色和关卡了。
- en: Feature creep
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 功能蔓延
- en: Once the game is finished, or almost finished, it's really easy to see what
    might be missing. The team, with a clearer picture of a semi-finished product,
    might come up with fresh new ideas, different solutions, or new content. The feeling
    is that, with these kinds of additions, it would be a much better game. And you
    and the team are almost there if only there was a bit more time. Or maybe, while
    putting the pieces together, it starts to feel like it is not enough. It is not
    as fun as you thought it would be.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦游戏完成或几乎完成，很容易看出可能缺少什么。团队对半成品有一个更清晰的了解，可能会提出新的想法、不同的解决方案或新内容。感觉是，有了这些补充，游戏会更好。而且，如果你和团队再有点时间，几乎就能完成。或者，在拼凑碎片的过程中，可能会觉得这还不够。它没有你想象中那么有趣。
- en: 'This is the moment where a project might face a dangerous problem: feature
    creep, the constant addition of features and functionality to a product. Instead
    of putting together what''s already been developed in the best way possible and
    focusing on increasing its quality, the team makes the collective mistake to think
    that more new features would make a better game.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是项目面临的一个危险问题：功能蔓延，即不断向产品中添加功能和特性。团队不是以最佳方式将已经开发的内容整合在一起并专注于提高其质量，而是集体错误地认为更多的全新功能会使游戏变得更好。
- en: An interesting example of deliberate feature creep is the practice of promising
    stretch goals that we have seen in recent years on Kickstarter. Kickstarter is
    a crowd-funding platform where creators can pitch their projects directly to the
    final user, and ask them for money to make those projects come to life. The idea
    behind stretch-goals is to promise users more stuff upon reaching extra funding
    goals after the initial goal is achieved.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 功能蔓延的一个有趣例子是近年来在Kickstarter上看到的承诺扩展目标的做法。Kickstarter是一个众筹平台，创作者可以直接向最终用户推销他们的项目，并请求他们为使这些项目成为现实提供资金。扩展目标背后的想法是在实现初始目标后，达到额外的资金目标时向用户提供更多内容。
- en: So, an original idea is pitched, people love it and back it with their money.
    The funding goal is achieved and now the developers start adding (promise to add)
    features to an original design that was already great. There is a great opportunity
    to make a bigger and better game (and also to raise more money)...but there's
    also a huge risk of drifting away from the original idea by adding the unnecessary.
    Of course, the good news for these Kickstarter projects is that feature creep
    in the design and concept phase of a project is not as bad as coming up with new
    things when a game is almost completed.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，一个原始的想法被提出，人们喜欢它，并用他们的钱支持它。资金目标实现了，现在开发者开始向一个已经非常出色的原始设计添加（承诺添加）功能。有一个很大的机会制作一个更大更好的游戏（并且还能筹集更多资金）...但是，添加不必要的功能可能会使游戏偏离原始想法的风险也非常大。当然，对于这些Kickstarter项目来说，好消息是项目设计和概念阶段的功能蔓延并不像在游戏几乎完成时想出新事物那样糟糕。
- en: A classic real-life example is adding a multiplayer mode to a single player
    game. Many game development teams have been almost destroyed by a sudden change
    in the original plans. To make the game more appealing, a multiplayer mode is
    announced. Maybe during a big conference or convention. The game is almost finished,
    and the multiplayer feature is used to increase the hype or attract further investments.
    Or maybe the team itself think that, now that the game is completed, a multiplayer
    mode can really be the icing on the cake. When something like this happens and
    it wasn't planned since the beginning, only bad things can happen.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一个经典的现实生活例子是在单人游戏中添加多人模式。许多游戏开发团队几乎被突然改变的原计划摧毁。为了使游戏更具吸引力，宣布了多人模式。也许在一个大型会议或展览会上。游戏几乎完成，多人功能被用来增加炒作或吸引更多投资。或者也许团队本身认为，现在游戏已经完成，多人模式真的可以是点睛之笔。当这种情况发生，而且从一开始就没有计划时，只会发生不好的事情。
- en: 'What a game designer can do to avoid this danger is to find what can be cut,
    instead of adding more: Less is more.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏设计师可以做什么来避免这种危险呢？那就是找到可以删除的内容，而不是添加更多：少即是多。
- en: We already discussed this when we spoke about the initial design of a game,
    now we're going to use it again in the final stage.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在讨论游戏初始设计时已经讨论过这个问题了，现在我们将在最终阶段再次使用它。
- en: Less is more
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 少即是多
- en: 'You should always be on the lookout for features that could be cut from your
    game. There are three main properties you can look for in features that might
    make them good candidates for removal from a game:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该始终留意那些可以从你的游戏中删除的功能。你可以从以下三个主要属性中寻找可能适合从游戏中删除的功能：
- en: 'Unintuitive mechanics: Unintuitive mechanics are always a warning. If players
    struggle to understand why or how a mechanic works, it might be a good idea to
    remove it altogether or to strip it down to a much simpler version.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不直观的机制：不直观的机制始终是一个警告。如果玩家难以理解为什么或如何一个机制工作，可能最好完全移除它，或者将其简化到一个更简单的版本。
- en: 'Mechanics that don''t really appeal to the audience: Mechanics that don''t
    appeal your audience are a common mistake. A complex crafting system in a casual
    match-3 game might not be a great idea. Make sure that every mechanic will reinforce
    and support your design pillars.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不吸引受众的机制：不吸引受众的机制是一个常见的错误。在休闲匹配3游戏中，一个复杂的制作系统可能不是一个好主意。确保每个机制都将加强并支持你的设计支柱。
- en: 'Unnecessary features: What might have sounded like a great idea on paper may
    turn out to be unnecessarily complex in the final game. Maybe you designed multiple
    different upgrade paths for the character and, during playtesting, some of them
    simply turned out to be not meaningful enough to be engaging and compelling.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不必要的功能：在纸上听起来可能是个好主意，但在最终游戏中可能变得不必要地复杂。也许你为角色设计了多个不同的升级路径，但在游戏测试中，其中一些路径简单地证明不足以吸引玩家和激发兴趣。
- en: Polish
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 精炼
- en: What is polish?
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是精炼？
- en: This is another concept that many developers have tried to nail with a formal
    definition. As you know by now, we don't like formal definitions, so be warned
    that the notion of what polish is might vary from developer to developer, but
    most importantly from game to game! To polish a game, basically, means to raise
    the standard of its quality.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是许多开发者试图用正式定义来解决的问题。正如你所知，我们不喜欢正式的定义，所以请警告，关于精炼的概念可能因开发者而异，但最重要的是因游戏而异！基本上，打磨游戏意味着提高其质量标准。
- en: Why and how would you polish a pair of shoes or a plank of wood?
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么和如何打磨一双鞋或一块木板？
- en: You don't change the shoes or the shape of the plank. Polishing a pair of walking
    boots won’t turn them into a pair of patent leather formal shoes to go with your
    tuxedo. The goal of polishing is to smoothen the game and the experience. To tweak
    its values and refine its details until it really feels great and immediately
    pleasing on an aesthetic and gameplay level.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你不会改变鞋子或板子的形状。打磨一双步行靴不会让它们变成一双搭配燕尾服的漆皮正装鞋。润色的目标是使游戏和体验更加平滑。调整其值并细化其细节，直到它真正感觉很好，并在美学和游戏层面上立即令人愉悦。
- en: The (in)famous scenario where the game designer finally plays the Alpha of the
    game and comes up with a brilliant idea to make things even better...usually is
    not polishing. It is the dreaded wouldn't be cool to add this? scenario. Polishing
    should not be about adding anything. If a feature is finished or supposed to be
    finished, and the team feels the necessity to add something on top of it to make
    it really work, that's a sign that the feature might be broken at its core.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 那个著名的场景，即游戏设计师最终玩起了游戏的Alpha版本，并想出了一个让事情变得更好的绝妙主意……通常并不是在润色。这通常是令人恐惧的“添加这个会不酷吗？”场景。润色不应该涉及添加任何内容。如果一个特性已经完成或应该完成，而团队觉得有必要在其之上添加一些内容以使其真正工作，那么这可能是一个迹象，表明该特性可能在核心上存在缺陷。
- en: How to polish
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如何润色
- en: Polishing a game is not a game design job only. Actually, most of the polishing
    work would be carried out by artists, animators, and programmers. The game designer
    has a crucial role in this phase nonetheless. Entering the final stage of a game
    production means that the game designer will have to put himself in the shoes
    of the player and play the game like it is his favorite game of all time. This
    is the stage where the game designer has to become an expert gamer of their own
    game.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 润色游戏不仅仅是游戏设计的工作。实际上，大部分的润色工作将由艺术家、动画师和程序员来完成。尽管如此，游戏设计师在这个阶段仍然扮演着至关重要的角色。进入游戏制作的最后阶段意味着游戏设计师必须将自己置于玩家的位置，像玩他最喜欢的游戏一样玩游戏。这是游戏设计师必须成为他们自己游戏专家的阶段。
- en: Most gamers would probably be surprised how little playing of the game happens
    by most people in game development. Most programmers and artists usually ship
    games that they have never actually played the whole way through, except those
    particular moments or scenes here and there where their work was focused.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数玩家可能会惊讶地发现，在游戏开发中，大多数人玩游戏的时间是多么少。大多数程序员和艺术家通常发布的是他们从未真正从头到尾玩过的游戏，除非是那些他们工作重点的特定时刻或场景。
- en: That’s perfectly fine for them, but unacceptable for game designers.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这对他们来说完全可以接受，但对游戏设计师来说却是不可以接受的。
- en: Game designers, along with game directors and the QA department, are the ones
    that have to keep engineers and artists informed of the final product's quality
    and determine which areas are in critical need of polish or further attention.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏设计师、游戏导演和QA部门是那些必须让工程师和艺术家了解最终产品质量的人，并确定哪些区域迫切需要润色或进一步关注。
- en: 'Let’s have a look at the most common tasks for polishing a game:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看润色游戏最常见的任务：
- en: Stability and performance
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稳定性和性能
- en: Audio and visual
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 音频和视觉
- en: Design polish
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计润色
- en: In the following paragraphs, we're going to briefly mention technical tasks
    and focus more on the tasks specific to the game designer.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的段落中，我们将简要提及技术任务，并更多地关注游戏设计师特有的任务。
- en: Stability and performance
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 稳定性和性能
- en: Stability and performance are the first two things to be looked at during polishing.
    It involves many procedures and techniques that might keep the engineers busy
    for a while, but the designers can spot moments or parts of the game that runs
    a bit too slow or have glitches. Polishing stability and performance means avoiding
    crashes, glitches, improving and stabilizing the FPS (frames per second), and
    reducing the functional bugs (even the smallest ones) to zero or as close to zero
    as possible. It also includes monitoring and optimizing the use of CPU and GPU
    and the memory usage.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 稳定性和性能是润色过程中首先要关注的两件事。这涉及到许多可能让工程师忙碌一段时间的程序和技术，但设计师可以找出游戏运行速度略慢或存在故障的时刻或部分。润色稳定性和性能意味着避免崩溃、故障，提高并稳定每秒帧数（FPS），并将功能故障（即使是微小的）减少到零或尽可能接近零。这还包括监控和优化CPU和GPU的使用以及内存使用。
- en: It is worth noting that, even if this sounds like a very technical activity
    for engineers, sometimes it could take only a designer to solve a performance
    issue. If a designer has requested features that are within the limits of what
    can be technically achieved, then the design might have to be reworked, numbers
    scaled back, the number of enemies reduced, attacks per second changed, visual
    effects tuned down, or the limits on the number of players in a multiplayer game
    might have to be enforced.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，尽管这听起来像是一项非常技术性的活动，对于工程师来说，有时可能只需要一个设计师就能解决性能问题。如果一个设计师请求的功能在技术实现范围内，那么设计可能需要重新修改，数值缩减，敌人数量减少，每秒攻击次数改变，视觉效果降低，或者可能需要强制执行多人游戏中玩家数量的限制。
- en: One way designers can definitely help the engineers solve performance issue
    is by offering solutions like the above. While an engineer might happily/frustratedly
    bang their head against a wall of code for a week trying to squeeze another 5%
    of performance out of a tight section of code, perhaps a simpler solution could
    be just a designer lowering a number to relieve some strain on the engine. It's
    worth being vigilant as a designer and involved in knowing the performance bottlenecks
    of the engines you are most likely making content for; you can save the engineering
    team potentially days of time and help get the game shipped in time.
  id: totrans-63
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 设计师可以帮助工程师解决性能问题的一种方式是提供上述解决方案。虽然工程师可能一周都在努力敲代码，试图从代码的某个紧绷部分中挤出额外的5%性能，但可能一个更简单的解决方案只是一个设计师降低一个数字，以减轻引擎的压力。作为一个设计师，保持警惕并了解你为制作内容而使用的引擎的性能瓶颈是值得的；你可以为工程团队节省可能几天的时间，并帮助游戏按时发布。
- en: Perceived performance
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 感知性能
- en: Perceived performance is as important as actual performance. We are talking
    here about a few minor tweaks that can help give the impression of overall better
    performance to players. Lowering the max FPS is another common trick, a game capped
    at 30 FPS might look more fluid than a game that struggles to maintain consistently
    60 FPS.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 感知性能与实际性能同样重要。我们这里讨论的是一些微小的调整，可以帮助给玩家留下整体性能更好的印象。降低最大帧数是另一个常见的技巧，一个限制在30 FPS的游戏可能看起来比一个努力保持60
    FPS的游戏更加流畅。
- en: Another common way to improve perceived performance is to enhance the player
    experience during loading screens.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 提高感知性能的另一种常见方法是增强加载屏幕期间的玩家体验。
- en: 'Loading screens are obviously one of the most obvious and direct feedbacks
    of a game technical''s performance. The bigger the game, the better the graphics,
    the longer the loading times. Same with online multiplayer games: finding matches
    or connecting to servers might take a while - even worse, it might all depend
    from the player''s internet connection, and there''s very little the engineers
    can do about that.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 加载屏幕显然是游戏技术性能的最明显和直接的反馈之一。游戏越大，图形越好，加载时间越长。同样，对于在线多人游戏来说：寻找匹配或连接到服务器可能需要一段时间——更糟糕的是，这完全取决于玩家的互联网连接，工程师对此几乎无能为力。
- en: 'During waiting times, there is a multitude of ways to give the player the impression
    that the game experience is not blocked by the loading screen: tips, the game''s
    lore, and tutorials are extremely common, giving the player something to read
    while waiting.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在等待时间，有无数种方法可以让玩家感觉到游戏体验没有被加载屏幕所阻塞：提示、游戏背景故事和教程非常常见，为玩家提供了等待时可以阅读的内容。
- en: Some games even feature a mini-game during the loading times, such as The Sims
    3's hidden object mini-game.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一些游戏甚至在加载时提供迷你游戏，例如《模拟人生3》的隐藏物品迷你游戏。
- en: 'The art of interactive loading screens reached new heights with titles such
    as Bayonetta or Fifa, where the player is able to practice with the mechanics
    of the game:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 交互式加载屏幕的艺术达到了新的高度，例如《贝奥武夫》或《FIFA》，玩家能够练习游戏机制：
- en: '![](img/00164.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00164.jpg)'
- en: The tutorial feature during loading screens was so great in Bayonetta that many
    players started requesting online whether there was a way to stay on the loading
    screen and keep practicing!
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在《贝奥武夫》中，加载屏幕上的教程功能非常出色，以至于许多玩家开始在线上请求是否有办法留在加载屏幕上并继续练习！
- en: Audio and visual
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 音频和视觉
- en: Audio and visual factors are very important in terms of polishing. Stability
    and performance remain the top priority, as a fantastic game that crashes or freezes
    is always worse than a mediocre game that always runs smoothly. Nonetheless, audio
    and visual are the player-facing layer and every polishing effort will have a
    tremendous impact on the player experience and enjoyment of the game.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在打磨方面，音频和视觉因素非常重要。稳定性和性能始终是首要任务，因为一个崩溃或冻结的精彩游戏总是比一个始终运行顺畅的平庸游戏更糟糕。然而，音频和视觉是面向玩家的层面，每一次打磨努力都会对玩家的游戏体验和乐趣产生巨大影响。
- en: The list of improvements and polishing that can be done with audio, animations,
    colors, environments, and character design is huge, but we can summarize it in
    one simple word—details. The attention to detail, especially in audio, environments,
    and animations is what usually takes a game to the next level of quality.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 可以用音频、动画、颜色、环境和角色设计来进行的改进和打磨列表非常庞大，但我们可以用一个简单的词来总结——细节。对细节的关注，尤其是在音频、环境和动画方面，通常是提升游戏质量到下一个层次的关键。
- en: To have an idea of how a polished game looks like, just think about any of the
    latest Zelda or Mario games. The graphics, sound effects, animations, response
    to every player input...they are as great as they can be. It's a pleasure not
    only to play them but just watching them. Or compare the latest Call of Duty to
    a lower budget indie FPS such as Insurgency (far be it from any judgment of the
    latter, we're comparing two games with a very different budget and audiences here,
    and that's exactly why the polishing gap is so big).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解一个打磨过的游戏看起来像什么，只需想想最新的塞尔达或马里奥游戏。图形、音效、动画、对每个玩家输入的反应……它们都是尽可能好的。不仅玩起来是一种乐趣，观看它们也是一种乐趣。或者将最新的使命召唤与预算较低的独立FPS游戏，如Insurgency（我们在这里比较的是两个预算和受众非常不同的游戏，这正是打磨差距如此之大的原因）进行比较。
- en: 'Another great way to get an idea of how polishing looks like is to compare
    the various stages of a game, such as alpha, beta, and release:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种了解打磨外观的好方法是比较游戏的各个阶段，如alpha、beta和发布：
- en: '![](img/00020.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00020.jpg)'
- en: Pay attention to details such as lighting, particle effects, the lava texture,
    the user interface on the bottom right part of the screen, and the UI elements
    for the trigger and the indicator in the upper part of the screen
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 注意细节，如照明、粒子效果、熔岩纹理、屏幕右下角的用户界面，以及屏幕上方的触发器和指示器的UI元素。
- en: On mobiles, companies such as Supercell or Zynga are famous for delivering games
    with an incredible level of polishing, which is undoubtedly one of the reasons
    for their success. Polished games are more captivating; just by looking better,
    they give the feeling to players that the game experience and gameplay are going
    to be just as smooth as the visual. Beware though, technical and visual polish
    might be enough to get players to try the game out, but if the design and the
    gameplay don't live up to the expectations, I doubt any player is going to stick
    around!
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动设备上，像Supercell或Zynga这样的公司因提供打磨得令人难以置信的游戏而闻名，这无疑是他们成功的原因之一。打磨过的游戏更具吸引力；仅仅外观更好，就能让玩家感觉到游戏体验和游戏玩法将和视觉一样流畅。但要注意，技术和视觉打磨可能足以让玩家尝试游戏，但如果设计和游戏玩法没有达到预期，我怀疑任何玩家都不会留下来！
- en: Design polish
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 设计打磨
- en: Design polish includes a huge variety of activities. Every aspect of the game
    over which the game designer has direct control can be tweaked and polished. Most
    likely, we're talking about balancing, especially difficult.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 设计打磨包括大量的活动。游戏设计师可以直接控制的每个游戏方面都可以进行调整和打磨。很可能是关于平衡，这尤其困难。
- en: Once the designer finally has the chance to play the game in its entirety, it
    is possible to go fine-tune values that might have been pre-determined only by
    data and numeric models. We have seen in the chapter about balancing how a game
    system is also made of numbers. This is the time to put them to test and tweak
    them to perfection.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设计师终于有机会完整地玩这款游戏，就有可能微调那些仅由数据和数值模型预先设定的值。我们在关于平衡的章节中看到，游戏系统也是由数字构成的。现在是时候对这些数字进行测试，并将它们调整到完美状态。
- en: The more time designers have to work and fine-tune all these values, the smoother
    the player's final experience will be. This is definitely something to think about
    during planning.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 设计师有更多时间来工作并微调所有这些值，玩家的最终体验就会更加流畅。这绝对是在规划阶段需要考虑的事情。
- en: Play
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏
- en: Obviously, the first step in polishing the design of a game is to play it. The
    designers need to sit down with as many people as possible and play the game with
    them. We've said this already; this is the moment when the designer becomes the
    most passionate player of their own game.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，打磨游戏设计的第一步是玩游戏。设计师需要尽可能多地与人们坐下来一起玩游戏。我们已经说过这一点；这是设计师成为他们自己游戏最热情的玩家的时刻。
- en: This phase might be neglected by the team. Maybe everyone is exhausted at this
    point and the idea of playing hours of a game you've been working on for months
    or even years is daunting. Keep up your team morale! Make the playing activity
    fun for the team and for yourself. Organize tournaments or challenge with the
    game and learn from what you see!
  id: totrans-87
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这个阶段可能会被团队忽视。也许每个人在这个时候都筋疲力尽，玩上几个月甚至几年的游戏的想法令人畏惧。保持团队的士气！让团队和你自己玩游戏的体验变得有趣。组织比赛或挑战游戏，并从你所看到的学习！
- en: Talk
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 交谈
- en: Talk to the team or anyone might be playing the game. Compare different points
    of view, and note down what doesn't really work or what you feel might be swiftly
    improved. Take on every criticism and do your best to make every adjustment you
    can.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 与团队或可能正在玩游戏的任何人交谈。比较不同的观点，并记下哪些地方真的不起作用或你感觉可以迅速改进的地方。接受每一项批评，并尽你所能做出每一项调整。
- en: There are designers who are very good at taking criticism and some that are
    not comfortable with it. It's vital to remain open-minded. If you close down and
    get defensive, you risk losing a channel of feedback as your colleagues don't
    want to hurt your feelings. Be thankful of all feedback you receive- even if it
    hurts, try not to show it, because then you will be open to more opinions and
    the chance to make the game better for all.
  id: totrans-90
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 有些设计师非常擅长接受批评，而有些则不太适应。保持开放的心态至关重要。如果你关闭并变得防御性，你可能会失去反馈渠道，因为你的同事不想伤害你的感情。感谢你收到的所有反馈——即使它很痛苦，也尽量不要表现出来，因为这样你将更容易接受更多意见，并有机会让游戏对所有玩家都变得更好。
- en: Make a checklist of all these little things and then take a significant amount
    of your daily time to work on improving them, one by one. For bigger games, a
    producer might help you in this task, organizing and prioritizing each activity.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 制作一个所有这些小事情的清单，然后花大量的日常时间逐一改进它们。对于大型游戏，制作人可能可以帮助你完成这项任务，组织和优先安排每一项活动。
- en: Show the game to people that have never seen it before and listen carefully
    to their opinions. Some obvious problems might be invisible to you or others from
    the team. When you work on a game for a long time, it's very easy to miss those.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 向从未见过这款游戏的人展示游戏，并仔细倾听他们的意见。一些明显的问题可能对你或其他团队成员来说是看不见的。当你长时间致力于一款游戏时，很容易错过这些。
- en: Exercise
  id: totrans-93
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 锻炼
- en: 'Consider a game that you like and you think has been somehow polished:'
  id: totrans-94
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 考虑一下你喜欢的游戏，你认为它已经被某种方式打磨过：
- en: '- Identify at least three features that have been visually polished to make
    the game “feel” better, without having any impact on its core gameplay.'
  id: totrans-95
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '- 确定至少三个视觉上打磨过的特性，使游戏“感觉”更好，但不会对其核心玩法产生任何影响。'
- en: '- Do the same, but focusing on design polish, compare similar mechanics for
    different games and focus on how some of them are more polished than the others.'
  id: totrans-96
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '- 同样做，但专注于设计打磨，比较不同游戏的类似机制，并关注其中一些为什么比其他更精致。'
- en: '- Can you spot some technical polishing? Any particular technique to improve
    the perceived performance?'
  id: totrans-97
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '- 你能发现一些技术上的打磨吗？有没有特定的技术可以提升感知的性能？'
- en: Quality assurance
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 质量保证
- en: 'There are different methods for game testing, and most methodologies are developed
    by individual video game developers and publishers. Methodologies are continuously
    refined and may differ for different types of games (for example, the methodology
    for testing an MMORPG will be different from testing a casual game). Many methods
    are borrowed directly from general software testing techniques. Outlined below
    are the most important methodologies for video games:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏测试有不同的方法，大多数方法论都是由独立的游戏开发者和发行商开发的。方法论会持续改进，并且可能因不同类型的游戏而异（例如，测试MMORPG的方法将与测试休闲游戏的方法不同）。许多方法直接借鉴了通用的软件测试技术。以下列出了视频游戏中最重要的一些方法论：
- en: 'Functionality testing: Most commonly associated with the phrase game testing,
    as it entails playing the game in some form. Functionality testing does not require
    extensive technical knowledge. Functionality testers look for general problems
    within the game itself or its User Interfaces, such as stability issues, game
    mechanic issues, and game asset integrity.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 功能性测试：通常与游戏测试短语相关联，因为它涉及以某种形式玩游戏。功能性测试不需要广泛的技术知识。功能性测试人员寻找游戏本身或其用户界面中的普遍问题，例如稳定性问题、游戏机制问题和游戏资产完整性。
- en: 'Compliance testing: First-party licensors for console platforms have strict
    technical requirements for titles licensed for their platforms. For example, Sony
    publishes a Technical Requirements Checklist (TRC), Microsoft publishes Xbox Requirements
    (XR), and Nintendo publishes a set of guidelines (Lotcheck)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合规性测试：游戏机平台的授权方对授权其平台的游戏有严格的技术要求。例如，索尼发布了一份技术要求清单（TRC），微软发布Xbox要求（XR），任天堂发布了一套指南（Lotcheck）。
- en: 'Compatibility testing: Compatibility testing teams test the major functionality
    of the game on various configurations of hardware. This is mostly done for PC
    or mobile games, as console platforms are more standardized.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 兼容性测试：兼容性测试团队在各种硬件配置上测试游戏的主要功能。这主要针对PC或移动游戏，因为游戏机平台更加标准化。
- en: 'Localization testing: Ensures the accuracy and quality of game''s localization.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地化测试：确保游戏本地化的准确性和质量。
- en: 'Soak testing: Involves leaving the game running for prolonged periods time
    in various modes of operation, such as idling, paused, or at the title screen.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 沉浸式测试：涉及在多种操作模式下长时间运行游戏，例如空闲、暂停或标题屏幕。
- en: 'Regression testing: QA checks to see whether the bug is still there (regression)
    and then runs similar tests to see whether the fix broke something else.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回归测试：QA检查是否存在回归（即错误仍然存在），然后运行类似的测试以查看修复是否破坏了其他内容。
- en: All these testings are done following a test plan. A test plan documents the
    strategy that will be used to verify and ensure that a game or feature meets its
    design specifications. It tells the tester what to test and look for in every
    piece of the game.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些测试都是按照测试计划进行的。测试计划记录了用于验证和确保游戏或功能满足其设计规格的策略。它告诉测试者需要测试和查找游戏中的哪些部分。
- en: Game designers and QA
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏设计师和QA
- en: The relationship between a game designer and QA is very important. Game documentation
    might (and will) be used by QA as a reference for writing and running their test
    plans. Some specific documentation might be needed for testing specific features.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏设计师和QA之间的关系非常重要。游戏文档可能会（并且将会）被QA用作编写和运行测试计划的参考。可能需要一些特定的文档来测试特定的功能。
- en: The more custom documentation the designers are able to provide to QA, the easier
    and more effective the QA work will be. For example, whenever I design a new batch
    of cards for Battlehand, I create an ad hoc document for the QA where I include
    every card's render with a description of what the card effects are and what numbers
    are expected to appear on it. This document is quite different from the actual
    design documentation of each card, which consists of a line in a huge spreadsheet
    that contains the design of every card in the game. By creating this ad hoc document,
    I make sure the QA department knows only what it needs to look for, in a more
    accessible format that includes details that are irrelevant in the design phase
    (like the card artwork and final appearance).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 设计师提供给QA的定制化文档越多，QA的工作就会越容易、越有效。例如，每当我为Battlehand设计一批新卡牌时，我都会为QA创建一个临时文档，其中包含每张卡牌的渲染图以及卡牌效果描述和预期出现的数字。这个文档与每张卡牌的实际设计文档大不相同，后者由包含游戏中每张卡牌设计的巨大电子表格中的一行组成。通过创建这个临时文档，我确保QA部门只了解他们需要查找的内容，以更易于访问的格式呈现，其中包含在设计阶段无关紧要的细节（如卡牌艺术和最终外观）。
- en: Remember that QA is your last chance, as a designer, to ship content of the
    highest quality. Making mistakes is only natural; you will make mistakes. A solid
    testing is the only way to avoid those mistakes going out to the public, who are
    going to notice them and who might be pretty unforgiving.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，作为设计师，QA是您最后一次机会，以确保内容达到最高质量。犯错误是自然的；你会犯错误。坚实的测试是唯一避免这些错误公之于众的方法，公众会注意到它们，并且可能会非常宽容。
- en: A great way to make the most out of QA is to get your designs reviewed by either
    a QA manager or the tester that will be assigned to the feature. This way, you
    will get feedback on your features well before the official QA stage even starts.
    Getting this kind of thing done before entering the final 10% is a nice way to
    avoid accumulating too much work in that final stage, and will definitely help
    to reduce the risk of accumulating delays and falling out of track.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 充分利用质量保证（QA）的一个好方法是将你的设计提交给质量保证经理或将被分配到该功能的测试员进行审查。这样，你将在官方质量保证阶段开始之前就获得关于你功能的反馈。在进入最后10%之前完成这类事情是一种避免在最后阶段积累太多工作的好方法，并且肯定有助于减少积累延误和偏离轨道的风险。
- en: QA might provide game designers some insights about gameplay that goes beyond
    the actual testing. In the end, we're talking of people that are going to play
    your game, or parts of it, hundreds of times, and they often have a level of expertise
    or feeling of the overall balancing that no developer or designer would be able
    to get in the same time window. Use that knowledge to keep improving the game!
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 质量保证（QA）可能会为游戏设计师提供一些关于游戏玩法方面的见解，这些见解超出了实际测试的范围。最终，我们谈论的是那些将要玩你的游戏，或其部分，数百次的人，他们通常具有或对整体平衡感有或深的理解，而开发者或设计师在相同的时间窗口内可能无法获得。利用这些知识来不断改进游戏！
- en: Tips for closing a game project
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏项目收尾的技巧
- en: As we have seen, in an ideal world, the closing phase of a game project should
    take more time than the sum of each of the previous stages. But that's unlikely
    to happen in the real world - on the contrary, it is highly probable that you'll
    find yourself with much less time than expected to wrap everything up.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，在一个理想的世界里，游戏项目的收尾阶段应该比之前每个阶段的总和花费更多的时间。但在现实世界中，这种情况不太可能发生——相反，你可能会发现自己有比预期少得多的时间来完成所有工作。
- en: 'Here is a list of tips and practices to avoid sacrificing polishing, proper
    user testing and, in the worst cases, procrastinating a game''s release:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一份清单，列出了避免牺牲打磨、适当用户测试，以及在最坏的情况下，推迟游戏发布的技巧和做法：
- en: 'Review the game concept and game design pillars: Cut anything that doesn''t
    reflect them. The sooner this review is done, the better it is, but don''t be
    afraid to cut a feature that appears to be in contrast with the original concept,
    even if it has been partially or fully developed.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 审查游戏概念和游戏设计支柱：删除任何与其不符的内容。这项审查越早进行越好，但不要害怕删除看似与原始概念相矛盾的功能，即使它已经被部分或全部开发。
- en: 'Have a UX review: Let a professional UX researcher study your game. A UX review
    will provide you with extremely useful insights and a lot of actionable points
    to improve the quality of your game.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行用户体验（UX）审查：让专业的用户体验研究员研究你的游戏。用户体验审查将为你提供极其有用的见解和许多可操作的建议，以改善你游戏的质量。
- en: 'Get the game out there: Let other professional game developers try your game,
    and listen to their feedback. If you can, showcase your game at consumer fairs
    and show and pay attention to their reactions and feedback. There is a lot that
    can be learned by watching a real player trying your game.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将游戏推向市场：让其他专业游戏开发者尝试你的游戏，并听取他们的反馈。如果你能，在消费者展览会上展示你的游戏，并注意他们的反应和反馈。通过观察真实玩家尝试你的游戏，你可以学到很多东西。
- en: 'Release as soon as possible: This is not always possible, but if you can take
    advantage of an early access version or a soft launch, go for it and test the
    game with a sensible amount of players.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽快发布：这并不总是可能的，但如果你可以利用早期访问版本或软启动，那就去做，并使用合理的玩家数量测试游戏。
- en: Test and iterate early on.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 早期测试和迭代。
- en: 'Keep track of your decisions and don''t change them: If you, or someone else,
    take the decision of cutting a feature, or adjust a design based on some compromise,
    note down why and when these decisions were taken. It might not make sense some
    months down the line and you might be tempted to revisit or reconsider some old
    decision...only to end up in the same problematic situation of months before.
    If you know and clearly remember what the reasoning behind a decision was, you
    are more likely to save time by not reconsidering and overthinking.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录你的决策并不要改变它们：如果你，或其他人，做出了删除功能或根据某些妥协调整设计的决策，记下为什么以及何时做出这些决策。几个月后，这些决策可能没有意义，你可能会被诱惑重新审视或重新考虑一些旧决策……结果却陷入几个月前相同的困境。如果你知道并清楚地记得决策背后的推理，你更有可能通过不重新考虑和过度思考来节省时间。
- en: 'Stick to the plan: This is a very simple, but effective, advice. Anything that
    wasn''t part of the original plan should be a red flag. What is the reason it
    was not part of the plan? Are you slipping into feature creeping?'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 严格执行计划：这是一条非常简单但有效的建议。任何不属于原始计划的事情都应该是一个红旗。为什么它没有包含在计划中？你是不是陷入了功能蔓延？
- en: 'Don''t aim for absolute perfection: Polishing is great, but it can really go
    on forever and nothing (and no one) is perfect. You should do the best work possible
    in the time you have.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要追求绝对完美：润色很好，但它真的可以无限期地进行下去，没有任何（任何人）是完美的。你应该在有限的时间内尽你所能做好工作。
- en: 'Don''t procrastinate: Fixing bugs and starting polishing during production
    is the best way to save time when it''s time to close the project and ship the
    game. Whenever you see a bug, if you have time to take care of it, just do it!
    There will be a final QA phase, but that''s when the unexpected bug and problems
    should be addressed. Postponing every bug to the final QA, even those you were
    aware of and able to fix early on, is a mistake that will take a lot of your time
    when you will have very little available.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要拖延：在制作过程中修复错误和开始润色是当项目关闭和发布游戏时节省时间的最佳方式。无论何时你看到错误，如果你有时间处理它，就去做吧！将每个错误推迟到最后的质量保证阶段，即使是你早期就意识到并能修复的错误，也是错误的做法，这会在你几乎没有时间可用时浪费你很多时间。
- en: 'Don''t be too passionate about your work, let a project manager decide: Sometimes
    you can get stuck with design decisions. Two solutions might be both worth doing
    or trying. Don''t let these moments of indecision block the development process.
    When in doubt, especially in bigger teams, ask and trust a lead, a producer, or
    a project manager. The reason to go for one solution rather than the other might
    be beyond your skills and just a matter of production requirements.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要对工作过于热情，让项目经理来决定：有时你可能会在设计决策上陷入困境。两个解决方案可能都值得尝试。不要让这些犹豫不决的时刻阻碍开发过程。当有疑问时，尤其是在更大的团队中，询问并信任一个领导、制作人或项目经理。选择一个解决方案而不是另一个的原因可能超出了你的技能范围，只是生产需求的问题。
- en: 'Be ready to accept and embrace failure: Making games is not an exact science;
    it is also an art. You might follow every step by the book and do everything you
    are supposed to do and still fail. These moments are hard hits for teams and entire
    game companies, but there is more to learn from failure than from success. Treasure
    these experiences and analyze everything that went wrong. This experience is what
    will make you a veteran game designer.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备接受并拥抱失败：制作游戏并非一门精确的科学；它也是一种艺术。你可能严格按照书本上的步骤去做，完成所有应该做的事情，但仍然会失败。这些时刻对团队和整个游戏公司来说都是沉重的打击，但从中学习到的比成功更多。珍惜这些经历，分析所有出错的地方。这种经历将使你成为一名经验丰富的游戏设计师。
- en: The screenshots used in this chapter are for illustrative purposes only. We
    do not recommend that you to misuse these in any way. For more information please
    consult the terms and conditions of the publishers mentioned in the Disclaimer
    section of this book.
  id: totrans-127
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 本章中使用的截图仅用于说明目的。我们不推荐你以任何方式滥用这些截图。有关更多信息，请参阅本书免责声明部分中提到的出版商的条款和条件。
- en: Summary
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 摘要
- en: You now know how to successfully close and ship a game. We have seen that you
    need to be conscious about the time required for the final stage in every game's
    development. We have learned the risks of putting a game together and how to avoid
    the feature creep danger. We have seen what polish is and how the team and the
    designers can polish their game to improve the quality of the game.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在知道如何成功关闭并发布一款游戏。我们看到了在每款游戏开发的最后阶段，你需要意识到所需的时间。我们学习了将游戏组合起来的风险以及如何避免功能蔓延的危险。我们看到了什么是润色，以及团队和设计师如何润色他们的游戏以提高游戏质量。
- en: We had a quick look at the Quality Assurance process and went through a list
    of useful tips and suggestions for you to keep in mind when the time will come
    to close your project and finally enjoy shipping your game! The journey's not
    over yet. In the next chapter, you're going to learn about games as a service,
    a huge topic which is really dear to us.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们快速浏览了质量保证过程，并为你列出了一些有用的提示和建议，以便你在项目关闭并最终发布游戏时记住。旅程还没有结束。在下一章中，你将了解游戏作为服务的内容，这是一个我们非常重视的巨大主题。
