- en: '8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '8'
- en: Designing an Appointment Booking App
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计预约应用程序
- en: In previous chapters, we’ve seen sample implementations that were limited in
    scope because it would be impractical to have a full application on every covered
    topic.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们看到了范围有限的示例实现，因为在每个涵盖的主题上都有完整的应用程序是不切实际的。
- en: 'This chapter covers the design of a barber appointment booking application,
    which will combine what we’ve learned from previous chapters:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了理发预约应用程序的设计，它将结合我们从前面章节中学到的内容：
- en: Dependency injection
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖注入
- en: Unit testing
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单元测试
- en: Test doubles using mocks and fakes
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用模拟和伪造的测试替身
- en: DDD
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DDD
- en: Applying TDD
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用 TDD
- en: '[*Chapter 9*](B18370_09.xhtml#_idTextAnchor226) and *10* will cover the implementation
    of this chapter. This chapter is about the business requirements and design decisions,
    not about the implementation (the code).'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 9 章*](B18370_09.xhtml#_idTextAnchor226) 和第 10 章将涵盖本章的实现。本章是关于业务需求和设计决策，而不是关于实现（代码）。'
- en: Before proceeding with this chapter and the rest of *Part 2*, I would highly
    recommend that you are familiar with the topics that I’ve listed above. They are
    all covered in [*Chapter 2*](B18370_02.xhtml#_idTextAnchor037) to [*Chapter 7*](B18370_07.xhtml#_idTextAnchor183).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续本章和第二部分的其他内容之前，我强烈建议您熟悉我列出的上述主题。它们都在 [*第 2 章*](B18370_02.xhtml#_idTextAnchor037)
    到 [*第 7 章*](B18370_07.xhtml#_idTextAnchor183) 中有所涉及。
- en: 'In this chapter, we will cover the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Business requirements to build a booking system
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建预约系统的业务需求
- en: The design of the system DDD-style
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统的 DDD 风格设计
- en: The implementation routes of this system
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该系统的实现路线
- en: By the end of this chapter, you will understand better a realistic DDD analysis
    based on a life-like problem.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将更好地理解基于真实问题的 DDD 分析。
- en: Technical requirements
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The code for this chapter can be found in the following GitHub repository:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码可以在以下 GitHub 仓库中找到：
- en: '[https://github.com/PacktPublishing/Pragmatic-Test-Driven-Development-in-C-Sharp-and-.NET/tree/main/ch08](https://github.com/PacktPublishing/Pragmatic-Test-Driven-Development-in-C-Sharp-and-.NET/tree/main/ch08)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Pragmatic-Test-Driven-Development-in-C-Sharp-and-.NET/tree/main/ch08](https://github.com/PacktPublishing/Pragmatic-Test-Driven-Development-in-C-Sharp-and-.NET/tree/main/ch08)'
- en: Collecting business requirements
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 收集业务需求
- en: You work for a software consultancy called **Unicorn Quality Solutions** (**UQS**),
    which is implementing an appointment booking application for Heads Up Barbers,
    a modern barber shop with many employees.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您为名为 **Unicorn Quality Solutions**（**UQS**）的软件咨询公司工作，该公司正在为拥有许多员工的现代理发店 Heads
    Up Barbers 实施预约应用程序。
- en: 'The required application will comprise three applications:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的应用程序将包括三个应用程序：
- en: '**Appointment booking website**: Where customers will book an appointment for
    hairdressing.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预约预约网站**：客户将在这里预约理发。'
- en: '**Appointment booking mobile app**: Same as the website, but a native mobile
    app (as opposed to a website on a mobile web browser).'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预约预约移动应用程序**：与网站相同，但是一个原生移动应用程序（而不是移动网络浏览器上的网站）。'
- en: '**Back office website**: This is an internal app to be used by the owner of
    the business. It allocates shifts for barbers (employees), cancels bookings, calculates
    the barbers’ commission, and so on.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**后台网站**：这是一个供企业主使用的内部应用程序。它为理发师（员工）分配班次，取消预约，计算理发师的佣金等。'
- en: '*Phase 1* of the delivery is only the first application (booking website),
    which has the highest business value because it allows the users to book via desktop
    and on their mobile web browser.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*第一阶段* 的交付仅是第一个应用程序（预约网站），因为它具有最高的商业价值，因为它允许用户通过桌面和他们的移动网络浏览器进行预约。'
- en: '*This is our concern for the rest of Part 2 of this book*. The following is
    a diagram showing the three phases of the project:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*这是我们关注本书第二部分其余部分的内容*。以下是一个显示项目三个阶段的图表：'
- en: '![Figure 8.1 – The three required applications ](img/Figure_8.1_B18370.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.1 – 必需的三个应用程序](img/Figure_8.1_B18370.jpg)'
- en: Figure 8.1 – The three required applications
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.1 – 必需的三个应用程序
- en: Although we are only concerned with building *Phase 1*, we need to consider
    in our design that our architecture will include support for a mobile app at later
    phases.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们只关注构建 *第一阶段*，但我们需要在设计时考虑我们的架构将在后期阶段包括对移动应用程序的支持。
- en: Business goals
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 业务目标
- en: In this day and age, most customers like to book an appointment online, especially
    since COVID-19, where shops tried to reduce the concentration of people in spaces
    via appointments.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个时代，大多数客户喜欢在线预约，尤其是在COVID-19之后，商店试图通过预约来减少空间中的人流集中。
- en: 'Heads Up Barbers wants a booking solution that aims to do the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Heads Up Barbers希望有一个预订解决方案，旨在做到以下几方面：
- en: Market the available hairdressing services.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推广可用的理发服务。
- en: Allow a customer to book an appointment with a specific or a random barber.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许客户预约特定或随机的理发师。
- en: Give barbers a rest between appointments, usually 5 minutes.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在预约之间给理发师休息时间，通常是5分钟。
- en: Barbers have various shifts in the shop and they are off work on different days,
    so the solution should take care of picking free slots based on the availability
    of barbers.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理发师在商店有不同的班次，他们在不同的日子休息，因此解决方案应该根据理发师的可用性来选择空闲时段。
- en: Time saving by not having to arrange appointments on the phone or in person.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过不必在电话或亲自安排预约来节省时间。
- en: Stories
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Stories
- en: After analyzing the business goals, UQS came up with more detailed requirements
    in the form of user stories and mockups. We will go through these next.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在分析了业务目标后，UQS提出了更详细的需求，以用户故事和原型形式呈现。我们将在下面进行介绍。
- en: Story 1 – services selection
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Story 1 – 服务选择
- en: 'As a customer:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一位客户：
- en: I want to have a list of all available services and their cost.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望有一个所有可用服务及其费用的列表。
- en: So I can select one for booking.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这样我就可以选择一个进行预订。
- en: And be transferred to the booking page.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 并被转到预订页面。
- en: '![Figure 8.2 – The list of the available services and their prices ](img/Figure_8.2_B18370.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图8.2 – 可用服务及其价格的列表](img/Figure_8.2_B18370.jpg)'
- en: Figure 8.2 – The list of the available services and their prices
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.2 – 可用服务及其价格的列表
- en: This mockup displays all the available services with their prices and **Select**
    hyperlinks to take the user to the booking page for the selected service.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这个原型展示了所有可用的服务及其价格，以及**选择**超链接，将用户带到所选服务的预订页面。
- en: Story 2 – default options
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Story 2 – 默认选项
- en: 'As a customer:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一位客户：
- en: I want to have a booking page with **[Any employee]** and today’s date selected
    by default.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我想有一个预订页面，默认选中**[任何员工]**和今天的日期。
- en: So I spend less time clicking and finish booking faster.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这样我就可以节省点击时间，更快地完成预订。
- en: '![Figure 8.3 – The booking page with default options already selected ](img/Figure_8.3_B18370.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图8.3 – 默认选项已选的预订页面](img/Figure_8.3_B18370.jpg)'
- en: Figure 8.3 – The booking page with default options already selected
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.3 – 默认选项已选的预订页面
- en: Notice that **[Any employee]** and the current day, **2022-04-03**, are selected
    by default.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到**[任何员工]**和当前日期，**2022-04-03**，默认选中。
- en: Story 3 – select employee
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Story 3 – 选择员工
- en: 'As a customer:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一位客户：
- en: I want to select any employee or a specific employee for my appointment.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望为我的预约选择任何员工或特定员工。
- en: So I can pick my favorite barber if I have one.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这样我就可以选择我喜欢的理发师，如果有的话。
- en: '![Figure 8.4 – Selecting a specific employee ](img/Figure_8.4_B18370.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图8.4 – 选择特定员工](img/Figure_8.4_B18370.jpg)'
- en: Figure 8.4 – Selecting a specific employee
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.4 – 选择特定员工
- en: The customer will have a list of barbers working for Heads Up Barbers from which
    they can pick their favorite one.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 客户将有一份来自Heads Up Barbers的理发师名单，他们可以从中选择他们最喜欢的一位。
- en: Story 4 – appointment days
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Story 4 – 预约日期
- en: 'As a business:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一家企业：
- en: We want to present the customer with a 7-day window max, including the current
    day, to pick an appointment.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望向客户展示最多7天的窗口，包括当前日期，以便选择预约。
- en: And we want to reduce this window if the selected employee is not fully available.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所选员工不完全可用，我们希望减少这个窗口。
- en: So we can guarantee our employees’ availability for booking.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这样我们可以保证我们的员工在预订时的可用性。
- en: '![Figure 8.5 – Calendar showing a 7-day window starting 2022-04-03 ](img/Figure_8.5_B18370.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图8.5 – 显示从2022-04-03开始的7天窗口的日历](img/Figure_8.5_B18370.jpg)'
- en: Figure 8.5 – Calendar showing a 7-day window starting 2022-04-03
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.5 – 显示从2022-04-03开始的7天窗口的日历
- en: The mockup will take into consideration the changes in the selected employee's
    schedule and show only the availability window for the selected employee.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 原型将考虑所选员工日程的变化，并仅显示所选员工的可用时间窗口。
- en: Story 5 – time selection
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Story 5 – 时间选择
- en: 'As a business:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一家企业：
- en: I want to present the customer with the time slots available for the selected
    employee for the selected date.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望向客户展示所选日期所选员工可用的时段。
- en: And take into consideration existing employee appointments and the employee’s
    shifts.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 并考虑现有员工的预约和员工的班次。
- en: And round up any appointment to the nearest 5 minutes.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 将任何预约向上取整到最近的5分钟。
- en: And take into consideration the rest time of 5 minutes between appointments.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 并考虑预约之间的5分钟休息时间。
- en: So I ensure the customer is selecting an employee that is already available.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我确保客户正在选择一个已经可用的员工。
- en: '![Figure 8.6 – Time slots available for the employee for the selected date
    ](img/Figure_8.6_B18370.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图8.6 – 为所选日期的员工可用的时段](img/Figure_8.6_B18370.jpg)'
- en: Figure 8.6 – Time slots available for the employee for the selected date
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.6 – 为所选日期的员工可用的时段
- en: Let’s take a few examples to clarify the requirements.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们举几个例子来澄清要求。
- en: Notice that all the minutes are multiples of 5.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 注意所有分钟数都是5的倍数。
- en: Example 1 – no shifts are available
  id: totrans-81
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第1个示例 – 没有可用的班次
- en: If an employee has no allocated shifts on the selected date, the list will be
    empty and the customer will be unable to book.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果员工在所选日期没有分配的班次，列表将为空，客户将无法预订。
- en: Example 2 – no appointments are booked
  id: totrans-83
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第2个示例 – 没有预约
- en: 'An employee, Tom, has a shift on 2022-10-03 from 9:00 to 11:10 and has no booked
    appointments. The customer wants to book a 30-minute-long service. The selected
    start time will have the following values: 09:00, 09:05, 09:10, …, 10:35, and
    10:40.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 员工汤姆在2022-10-03日9:00至11:10有班次，并且没有已预订的预约。客户想要预订一个30分钟的服务。所选的起始时间将有以下值：09:00，09:05，09:10，……，10:35，和10:40。
- en: Example 3 – multiple appointments booked at the end of the shift
  id: totrans-85
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第3个示例 – 在班次结束时预订多个预约
- en: 'An employee, Tom, has a shift on 2022-10-03 from 9:00 to 11:10, but he already
    has appointments booked from 09:35 to 11:10\. The customer wants to book a 30-minute-long
    service. The selected start time will have the following value: 09:00\. The following
    figure illustrates the time spans:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 员工汤姆在2022-10-03日9:00至11:10有班次，但他已经从09:35至11:10预订了预约。客户想要预订一个30分钟的服务。所选的起始时间将有以下值：09:00。以下图示说明了时间段：
- en: '![Figure 8.7 – One slot with a rest gap ](img/Figure_8.7_B18370.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图8.7 – 一个带有休息间隔的时段](img/Figure_8.7_B18370.jpg)'
- en: Figure 8.7 – One slot with a rest gap
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.7 – 一个带有休息间隔的时段
- en: Example 4 – multiple appointments booked at the end of the shift
  id: totrans-89
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第4个示例 – 在班次结束时预订多个预约
- en: 'Tom has a shift on 2022-10-03 from 9:00 to 11:10, but he already has appointments
    booked from 09:40 to 11:10\. The customer wants to book a 30-minute-long service.
    The selected start time will have the following values: 09:00 and 09:05.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆在2022-10-03日9:00至11:10有班次，但他已经从09:40至11:10预订了预约。客户想要预订一个30分钟的服务。所选的起始时间将有以下值：09:00和09:05。
- en: '![Figure 8.8 – Two slots with a rest gap ](img/Figure_8.8_B18370.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图8.8 – 两个带有休息间隔的时段](img/Figure_8.8_B18370.jpg)'
- en: Figure 8.8 – Two slots with a rest gap
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.8 – 两个带有休息间隔的时段
- en: Example 5 – an appointment booked in the middle of the shift
  id: totrans-93
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第5个示例 – 在班次中间预订预约
- en: 'Tom has a shift on 2022-10-03 from 9:00 to 11:10, but he already has appointments
    booked from 09:40 to 10:35\. The customer wants to book a 30-minute-long service.
    The selected start time will have the following values: 09:00, 09:05, and 10:40.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 汤姆在2022-10-03日9:00至11:10有班次，但他已经从09:40至10:35预订了预约。客户想要预订一个30分钟的服务。所选的起始时间将有以下值：09:00，09:05和10:40。
- en: '![Figure 8.9 – Three slots with two rest gaps ](img/Figure_8.9_B18370.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![图8.9 – 三个带有两个休息间隔的时段](img/Figure_8.9_B18370.jpg)'
- en: Figure 8.9 – Three slots with two rest gaps
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.9 – 三个带有两个休息间隔的时段
- en: Story 6 – name filling
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第6个故事 – 填写名字
- en: 'As a customer:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 作为客户：
- en: I have to fill in my first and last name to act as my ID when I show up at the
    barber shop.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 当我出现在理发店时，我必须填写我的名字和姓氏以作为我的身份证明。
- en: So I am uniquely identified.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我是唯一识别的。
- en: '![Figure 8.10 – First name and last name fields ](img/Figure_8.10_B18370.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图8.10 – 姓氏和名字字段](img/Figure_8.10_B18370.jpg)'
- en: Figure 8.10 – First name and last name fields
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.10 – 姓氏和名字字段
- en: Story 7 – service display
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第7个故事 – 服务显示
- en: 'As a customer:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 作为客户：
- en: I want a reminder of the name of the service that I picked, its price, and the
    required time.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我想要提醒我选择的服务名称、价格和所需时间。
- en: So I can review my selection before hitting the **Book** button.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在点击**预订**按钮之前，我可以回顾我的选择。
- en: Story 8 – all fields are mandatory validation
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第8个故事 – 所有字段都是必填验证
- en: 'As a customer:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 作为客户：
- en: I have to select and fill in all fields before booking.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在预订之前，我必须选择并填写所有字段。
- en: So I won’t get validation errors.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我不会得到验证错误。
- en: Story 9 – random selection with any employee
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第9个故事 – 随机选择任何员工
- en: 'As a business:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一家企业：
- en: When **[Any employee]** is selected.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 当**[任何员工**]被选中时。
- en: And more than one employee is free at the selected slot.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 并且在所选时间段内有多名员工空闲。
- en: And I hit **Book.**
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我点击**预订**。
- en: A free employee is selected *randomly.*
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 随机选择一名空闲员工。
- en: So I ensure our employees are allocated to appointments fairly.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我确保我们的员工在预约中公平分配。
- en: Example 1 – three employees are free at one slot
  id: totrans-118
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例 1 – 在一个时间段内有三名员工空闲
- en: If the customer selects **[Any employee]** and gets three employees (Thomas,
    Jane, and William) who are free at 09:00, and the customer selects **09:00** and
    hits **Book**, Thomas, Jane, or William is allocated randomly to the appointment
    without taking into consideration any other factor, and one of them is selected.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果客户选择**[任何员工**]并得到三名空闲的员工（托马斯、简和威廉），并且客户选择**09:00**并点击**预订**，托马斯、简或威廉将被随机分配到预约，不考虑任何其他因素，并从中选择一个。
- en: Story 10 – confirmation page
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 故事 10 – 确认页面
- en: 'As a customer:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 作为客户：
- en: I want to see that my appointment is booked.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我想查看我的预约是否已预订。
- en: So I can rest assured that it is going ahead.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我可以放心，它正在进行中。
- en: '![Figure 8.11 – Confirmation page ](img/Figure_8.11_B18370.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.11 – 确认页面](img/Figure_8.11_B18370.jpg)'
- en: Figure 8.11 – Confirmation page
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.11 – 确认页面
- en: The confirmation page above is a simple static page.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的确认页面是一个简单的静态页面。
- en: You probably sensed that *Story 5* is the most demanding one from a business
    logic perspective, and this will be heavily targeted by our unit tests.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经感觉到，从业务逻辑的角度来看，*故事 5* 是最具有挑战性的，这将是我们的单元测试的重点。
- en: 'As you can see, the scope of the implementation is limited. In the future,
    we can extend this further with:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，实现的范围是有限的。在未来，我们可以通过以下方式进一步扩展：
- en: Online payment
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在线支付
- en: User login
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户登录
- en: Email confirmation
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 邮件确认
- en: And more…
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多…
- en: However, the stories so far describe a robust life-like system. Some might call
    this a **minimum viable product** (**MVP**); however, I wouldn’t as it might wrongly
    imply a lower-quality system.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，到目前为止的故事描述了一个健壮的、逼真的系统。有些人可能会称之为**最小可行产品**（MVP）；然而，我不会这样称呼它，因为这可能会错误地暗示系统质量较低。
- en: Now it’s time to move from the business requirements to the general guidelines
    for designing our system.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候从业务需求转向设计我们系统的通用指南了。
- en: Designing with the DDD spirit
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以 DDD 精神进行设计
- en: We have learned in the previous chapter an overview of DDD. In our implementation,
    we will follow the spirit of DDD to design the business classes.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了 DDD 的概述。在我们的实现中，我们将遵循 DDD 的精神来设计业务类。
- en: Domain objects
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 领域对象
- en: 'If we were to read all the stories and think of a domain model, we might come
    up with the following classes:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们阅读所有故事并思考领域模型，我们可能会得出以下类：
- en: '![Figure 8.12 – A diagram of the domain classes ](img/Figure_8.12_B18370.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.12 – 领域类的图示](img/Figure_8.12_B18370.jpg)'
- en: Figure 8.12 – A diagram of the domain classes
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.12 – 领域类的图示
- en: '`AppointmentTimeSpanInMin` being the duration of the service and `IsActive`
    being true to offer it to the client.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AppointmentTimeSpanInMin`代表服务的持续时间，`IsActive`为真以向客户端提供。'
- en: '**Customer**: Represents a customer. We are currently only interested in their
    name.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户**：表示客户。我们目前只关注他们的名字。'
- en: '**Employee**: This class will expand at a later phase to have more info, but
    for now, we only need the name.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**员工**：这个类将在稍后阶段扩展以包含更多信息，但到目前为止，我们只需要名字。'
- en: '**Shift**: Represents a unique availability time for the barber. The back office
    application (not within scope) will allow the business owner to add shifts for
    employees on a daily basis to cover at least 7 days forward. So, whenever we present
    the customer with days selection, we have at least 7 days in the future.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**班次**：代表理发师独特的可用时间。后台应用程序（不在范围内）将允许业务所有者每天为员工添加班次，以覆盖至少 7 天。因此，无论何时向客户展示日期选择，我们都有至少
    7 天的未来日期。'
- en: '**Appointment**: It is clear that an appointment links a service to an employee
    and a customer. It also specifies the beginning and end times of the appointment.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预约**：很明显，预约将一项服务与员工和客户联系起来。它还指定了预约的开始和结束时间。'
- en: We have a single *aggregate* in our implementation with all the previous classes,
    and our *aggregate root* is clearly the `Appointment` class.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的实现中，我们有一个包含所有先前类的单一*聚合体*，我们的*聚合根*显然是`Appointment`类。
- en: Domain services
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 领域服务
- en: 'Domain services contain the business logic that governs the system behavior.
    Our system will be dealing with four categories of business logic, which could
    lead to four domain services:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 领域服务包含控制系统行为的业务逻辑。我们的系统将处理四类业务逻辑，这可能导致四个领域服务：
- en: '![Figure 8.13 – Domain services initial design ](img/Figure_8.13_B18370.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图8.13 – 领域服务初步设计](img/Figure_8.13_B18370.jpg)'
- en: Figure 8.13 – Domain services initial design
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.13 – 领域服务初步设计
- en: The services at this stage are just an initial design. You usually design services
    driven by a TDD process rather than designing the services in advance, and this
    is usually done in serial, one service after the other.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 目前阶段的服务只是一个初步设计。你通常是通过TDD（测试驱动开发）过程来驱动服务设计，而不是预先设计服务，这通常是一个接一个的顺序进行。
- en: System architecture
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 系统架构
- en: 'While we are only doing *Phase 1* of the system, our architecture should be
    ready for future phases given that a mobile app, which uses the same logic as
    the booking website, will be implemented in the next phase. With this in mind,
    the architecture in the next diagram can support all phases:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们现在只进行系统的*第一阶段*，但考虑到下一个阶段将实现使用与预订网站相同逻辑的移动应用，我们的架构应该为未来的阶段做好准备。考虑到这一点，下一个图中的架构可以支持所有阶段：
- en: '![Figure 8.14 – Architecture design ](img/Figure_8.14_B18370.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![图8.14 – 架构设计](img/Figure_8.14_B18370.jpg)'
- en: Figure 8.14 – Architecture design
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.14 – 架构设计
- en: Having one backend to support all the clients would embed one business logic
    to support all clients, so all our business logic will be behind our RESTful API
    application.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 使用一个后端来支持所有客户端将嵌入一个业务逻辑来支持所有客户端，因此我们所有的业务逻辑都将位于我们的RESTful API应用程序后面。
- en: Also, this would make our backend act as a monolith application made up of a
    collection of APIs in one project and a single DB. This is alright, as this is
    a project with a limited scope, and going down the microservices route would be
    overkill.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这会使我们的后端作为一个由一个项目中的API集合和一个单一数据库组成的单体应用程序。这是可以接受的，因为这个项目范围有限，走微服务路线将是过度设计。
- en: This is a well-known architectural model where you hide the business logic behind
    web APIs to support multiple clients and make the logic centralized. There should
    be no restructuring of the architecture with the future phases when we add the
    booking mobile app and the back office web app.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个众所周知的架构模型，其中你将业务逻辑隐藏在Web API后面以支持多个客户端，并使逻辑集中化。在未来的阶段添加预订移动应用和后台Web应用时，不应重构架构。
- en: Implementation routes
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施路线
- en: We are going to implement the backend in different ways. Each implementation
    will yield the same API outcome, but the point of this would be experiencing multiple
    unit tests and test double scenarios with each implementation.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将以不同的方式实现后端。每种实现都将产生相同的API结果，但这样做的目的是在每个实现中体验多个单元测试和测试替身场景。
- en: Your team might be using one of these architectural routes, as they might be
    utilizing a document DB or a relational DB as in the case of most modern apps.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 您的团队可能正在使用这些架构路线之一，因为他们可能正在使用文档数据库或关系数据库，正如大多数现代应用的情况一样。
- en: Frontend
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前端
- en: In this book, we focus more on the backend, so, implementing TDD on the frontend
    is not covered.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们更关注后端，因此，前端上的TDD实现没有涵盖。
- en: Important Note
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 重要注意事项
- en: There are unit testing frameworks that would test the front-end. One popular
    library for Blazor, which we will use here, is **bUnit,** which works side by
    side with xUnit.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些单元测试框架可以测试前端。Blazor的一个流行库，我们在这里将使用它，是**bUnit**，它与xUnit并行工作。
- en: Among all popular JavaScript **single page application** (**SPA**) platforms,
    such as React, Angular, and Vue, I decided to implement the frontend with Microsoft’s
    **Blazor**.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有流行的JavaScript**单页应用**（**SPA**）平台，如React、Angular和Vue中，我决定使用微软的**Blazor**来实现前端。
- en: Blazor is a web framework that relies on C# instead of JavaScript. Simply put,
    Blazor converts C# into a low-level language called **WebAssembly** (**Wasm**)
    that is understood by the browser.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: Blazor是一个基于C#而不是JavaScript的Web框架。简单来说，Blazor将C#转换为浏览器理解的底层语言**WebAssembly**（**Wasm**）。
- en: I chose Blazor as I am assuming it would be easier for a C# developer without
    SPA experience or JavaScript/TypeScript experience.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我选择Blazor，因为我假设对于没有SPA（单页应用）经验或JavaScript/TypeScript经验的C#开发者来说，它会更简单。
- en: The implementation for the frontend is minimal, and the preceding mockup screenshots
    in the *Stories* section are taken from the Blazor application. You can find it
    in this chapter’s GitHub under `Uqs.AppointmentBooking.Website`.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 前端实现是最简的，*故事*部分之前的模拟截图来自Blazor应用程序。你可以在本章的GitHub上的`Uqs.AppointmentBooking.Website`找到它。
- en: Important Note
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The implementation of this frontend is aimed at readability and minimalism,
    rather than web design, UX, robustness, and best practices.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 前端实现旨在可读性和简约，而不是网页设计、用户体验、健壮性和最佳实践。
- en: 'To launch the website:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动网站：
- en: Open `UqsAppointmentBooking.sln` in VS.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在VS中打开`UqsAppointmentBooking.sln`。
- en: Right-click on `Uqs.AppointmentBooking.Website` and select **Set as a Startup
    Project**.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击`Uqs.AppointmentBooking.Website`并选择**设置为启动项目**。
- en: Run from VS.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从VS运行。
- en: Feel free to run the website and click around. You will note that it is mocked,
    so it is not relying on a real DB but on sample data. The discussion about the
    frontend is limited to this section, as the focus of the book is TDD and the backend.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 随意运行网站并四处点击。你会注意到它是模拟的，因此它不依赖于真实数据库，而是依赖于示例数据。关于前端的内容仅限于本节，因为本书的重点是TDD和后端。
- en: Relational database backend
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关系型数据库后端
- en: Usually, using a relational DB such as SQL Server and Oracle invites **Entity
    Framework** (**EF**). Having your backend relying on EF has an effect on the way
    you organize your tests and the test double types that you are going to use.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，使用SQL Server和Oracle等关系型数据库会邀请**Entity Framework**（**EF**）。后端依赖于EF会影响你组织测试和将要使用的测试替身类型的方式。
- en: '[*Chapter 9*](B18370_09.xhtml#_idTextAnchor226), *Building an Appointment Booking
    App with Entity Framework and Relational DB*, will be dedicated to implementing
    the requirements with a relational database (SQL Server) and with EF.'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B18370_09.xhtml#_idTextAnchor226), *使用Entity Framework和关系型数据库构建预约预订应用程序*，将致力于使用关系型数据库（SQL
    Server）和EF来实现需求。'
- en: Document DB backend
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文档数据库后端
- en: When using a document DB such as Cosmos DB, DynamoDB, and MongoDB, you do not
    use EF. That means you will be implementing more DDD patterns such as the *Repository
    pattern*. This will make the implementation with a document DB fairly different
    than the one that uses EF from a test doubles and **dependency injection** (**DI**)
    point of view.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用Cosmos DB、DynamoDB和MongoDB等文档数据库时，你不会使用EF。这意味着你将实现更多的DDD模式，如*存储库模式*。这将使使用文档数据库的实现与使用EF的实现相比，在测试替身和**依赖注入**（**DI**）方面相当不同。
- en: '[*Chapter 10*](B18370_10.xhtml#_idTextAnchor245), *Building an App with Repositories
    and Document DB*, will be repeating the implementation of [*Chapter 9*](B18370_09.xhtml#_idTextAnchor226)
    but with around 50% different code, as it will be using a document DB.'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B18370_10.xhtml#_idTextAnchor245), *使用存储库和文档数据库构建应用程序*，将重复第9章[*第9章*](B18370_09.xhtml#_idTextAnchor226)的实现，但大约有50%的代码不同，因为它将使用文档数据库。'
- en: Presenting both versions will allow you to see the difference between the implementations
    and, hopefully, promote your understanding of test doubles and DI. However, if
    you are only interested in a particular type of DB, then you can choose [*Chapter
    9*](B18370_09.xhtml#_idTextAnchor226) or [*Chapter 10*](B18370_10.xhtml#_idTextAnchor245).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 展示这两个版本将让你看到实现之间的差异，并希望促进你对测试替身和DI的理解。然而，如果你只对特定类型的数据库感兴趣，那么你可以选择[*第9章*](B18370_09.xhtml#_idTextAnchor226)或[*第10章*](B18370_10.xhtml#_idTextAnchor245)。
- en: The good news is that there are repetitions between these two chapters, where
    you will be able to spot them easily and focus on the unique implementation.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，这两章之间有重复，你将能够轻松地发现它们并专注于独特的实现。
- en: Using the Mediator pattern
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用中介者模式
- en: When using the Mediator pattern, all your design changes, and your testing and
    test doubles follow suit. The Mediator pattern is a two-edged sword; it has a
    steep learning curve, but when learned and implemented, it provides a higher level
    of component separation of concern. It will also alter the structure of your unit
    tests. The Mediator pattern is outside the scope of this book, and it is mentioned
    here to point you to discover related patterns that affect your DI implementation
    and your unit tests.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用中介者模式时，你所有的设计更改、测试和测试替身都会相应地进行。中介者模式是一把双刃剑；它有一个陡峭的学习曲线，但一旦学习和实施，它提供了更高层次的组件关注分离。它还会改变你的单元测试结构。中介者模式超出了本书的范围，这里提到它是为了指导你发现影响你的DI实现和单元测试的相关模式。
- en: Hopefully, by the end of *Part 2*, you’ve got a real sense of how to implement
    TDD in a more realistic setting.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 希望到 *第 2 部分* 的结尾，你能够真正地感受到如何在更现实的环境中实施 TDD。
- en: Summary
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We’ve seen fairly decent user requirements and we’ve seen a potential design
    for the system. This chapter was the beginning of *putting everything together*.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了相当合理的需求，我们也看到了系统的潜在设计。本章是 *将所有内容整合在一起* 的开始。
- en: You’ve also seen a design based on DDD, which will change into code in later
    chapters. We have also discussed implementation routes that will affect the way
    we do testing and test doubles.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 你也看到了一个基于 DDD 的设计，这个设计将在后面的章节中转化为代码。我们还讨论了会影响我们测试和测试替身方式的实现路线。
- en: Sophisticated and modern projects use concepts from DDD. By now, after analyzing
    a full project, I hope that the DDD terminology will start sounding familiar and
    aid you in building your next project and help you communicate with expert developers.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂和现代的项目使用 DDD 的概念。到目前为止，在分析完一个完整的项目后，我希望 DDD 的术语开始听起来熟悉，并帮助你构建你的下一个项目，以及帮助你与专家开发者进行沟通。
- en: The next chapter is an implementation of this chapter, but with a focus on SQL
    Server and EF.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章是对本章内容的实现，但重点在于 SQL Server 和 EF。
- en: Further reading
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'To learn more about the topics discussed in the chapter, you can refer to the
    following link:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于本章讨论的主题，你可以参考以下链接：
- en: '*Mediator NuGet popular lib in .NET*: [https://github.com/jbogard/MediatR](https://github.com/jbogard/MediatR)'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Mediator 是 .NET 中流行的 NuGet 库*：[https://github.com/jbogard/MediatR](https://github.com/jbogard/MediatR)'
