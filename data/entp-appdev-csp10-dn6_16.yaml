- en: '*Chapter 12*: Understanding Authentication'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 12 章*：理解身份验证'
- en: So far, we have built the **user interface** (**UI**) and service layer of our
    e-commerce application. In this chapter, we will learn how to secure it. Our e-commerce
    application should be able to uniquely identify a user and respond to that user's
    requests. A commonly used pattern for establishing user identity involves the
    provision of a username and password. These are then verified against the user's
    profile data, which is stored in a database or an application. If it matches,
    a cookie or token with the user's identity is generated and stored in the client's
    browser so that, for subsequent requests, a cookie/token is sent to the server
    and validated to service requests.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经构建了我们电子商务应用的**用户界面**（**UI**）和服务层。在本章中，我们将学习如何对其进行安全保护。我们的电子商务应用应该能够唯一地识别一个用户并对该用户的请求做出响应。建立用户身份的一个常用模式是提供用户名和密码。然后，这些信息将与存储在数据库或应用中的用户配置文件数据进行比较。如果匹配，将生成并存储一个包含用户身份的cookie或token在客户端的浏览器中，以便在后续请求中，将cookie/token发送到服务器并验证以服务请求。
- en: '**Authentication** is a process in which you identify a user or a program accessing
    protected areas of your application. For instance, in our e-commerce application,
    a user can navigate through different pages and browse the products that are displayed.
    However, to place an order or view past orders, users need to provide a username
    and a password to identify themselves. If the user is new, they should create
    these to continue.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**身份验证**是一个识别访问您应用程序受保护区域的用户或程序的过程。例如，在我们的电子商务应用中，用户可以浏览显示的不同页面和产品。然而，要下订单或查看过去的订单，用户需要提供用户名和密码来识别自己。如果用户是新的，他们应该创建这些信息以继续。'
- en: 'In this chapter, we will learn about the features offered by ASP.NET Core related
    to authentication and understand various methods to implement authentication.
    In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习 ASP.NET Core 提供的与身份验证相关的功能，并了解实现身份验证的各种方法。在本章中，我们将涵盖以下主题：
- en: Understanding the elements of authentication
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解身份验证的元素
- en: Introduction to ASP.NET Core Identity
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ASP.NET Core Identity 简介
- en: Understanding OAuth 2.0
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 OAuth 2.0
- en: Introduction to **Azure Active Directory** (**Azure AD**)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Active Directory（**Azure AD**）简介
- en: Introduction to Windows Authentication
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 身份验证简介
- en: Understanding best practices to secure client and server applications
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解保护客户端和服务器应用程序的最佳实践
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For this chapter, you need basic knowledge of Azure, **Entity Framework** (**EF**),
    Azure AD B2C, and an active Azure subscription with a contributor role. If you
    don't have one, you can sign up for a free account at [https://azure.microsoft.com/en-in/free/](https://azure.microsoft.com/en-in/free/).
    Visual Studio 2022 is used to illustrate a few examples. You can download it from
    [https://visualstudio.microsoft.com](https://visualstudio.microsoft.com).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，您需要具备 Azure、**Entity Framework**（**EF**）、Azure AD B2C 和一个具有贡献者角色的活动 Azure
    订阅的基本知识。如果您没有，您可以在 [https://azure.microsoft.com/en-in/free/](https://azure.microsoft.com/en-in/free/)
    上注册一个免费账户。Visual Studio 2022 用于说明一些示例。您可以从 [https://visualstudio.microsoft.com](https://visualstudio.microsoft.com)
    下载它。
- en: Understanding the elements of authentication in .NET 6
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 .NET 6 中身份验证的元素
- en: Authentication in ASP.NET Core is handled by authentication middleware, which
    uses registered authentication handlers to perform authentication. Registered
    authentication handlers and their associated configurations are called **authentication
    schemes**.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: ASP.NET Core 中的身份验证由身份验证中间件处理，它使用注册的身份验证处理程序执行身份验证。已注册的身份验证处理程序及其相关配置称为**身份验证方案**。
- en: 'The following list describes the core elements of an authentication framework:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表描述了身份验证框架的核心元素：
- en: '`Program.cs`. They comprise an authentication handler and have options to configure
    this handler. You can register multiple authentication schemes to authenticate,
    challenge, and forbid actions. Alternatively, you can specify authentication schemes
    in the authorization policies that you configure. The following is a sample code
    to register an `OpenIdConnect` authentication scheme:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Program.cs`。它们包含一个身份验证处理程序，并具有配置此处理程序的选择。您可以注册多个身份验证方案以进行身份验证、挑战和禁止操作。或者，您可以在您配置的授权策略中指定身份验证方案。以下是一个注册
    `OpenIdConnect` 身份验证方案的示例代码：'
- en: '[PRE0]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the preceding code snippet, the authentication service is registered to use
    the `OpenIdConnect` authentication scheme with the Microsoft identity platform.
    Additionally, the necessary settings specified in the configuration file, in the
    `AzureAdB2C` section, are used to initialize the authentication options.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码片段中，认证服务被注册为使用与Microsoft身份平台的`OpenIdConnect`认证方案。此外，配置文件中`AzureAdB2C`部分指定的必要设置被用于初始化认证选项。
- en: More details regarding `OpenIdConnect` and `AzureAdB2C` will be covered in the
    *Introduction to Azure AD* section of this chapter.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的*Azure AD简介*部分将涵盖有关`OpenIdConnect`和`AzureAdB2C`的更多详细信息。
- en: '**Authentication handler**: Authentication handlers are responsible for authenticating
    a user. Based on the authentication scheme, they either construct an authentication
    ticket (usually, this is a token/cookie with the user''s identity) or reject a
    request if authentication is unsuccessful.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**认证处理程序**: 认证处理程序负责认证用户。根据认证方案，它们要么构建一个认证票据（通常，这是一个带有用户身份的令牌/cookie），要么在认证失败时拒绝请求。'
- en: '**Authenticate**: This method is responsible for constructing an authentication
    ticket with the user identity. For example, a cookie authentication scheme constructs
    a cookie, while a **JavaScript Object Notation** (**JSON**) **Web Token** (**JWT**)
    bearer scheme constructs a token.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**认证**: 此方法负责构建带有用户身份的认证票据。例如，一个cookie认证方案会构建一个cookie，而一个**JavaScript对象表示法**（**JSON**）**Web令牌**（**JWT**）承载方案会构建一个令牌。'
- en: '**Challenge**: This method is invoked by authorization when an unauthenticated
    user requests a resource that requires authentication. Based on the configured
    scheme, the user is then asked to authenticate.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**挑战**: 当一个未经身份验证的用户请求需要认证的资源时，此方法由授权调用。根据配置的方案，用户随后会被要求进行认证。'
- en: '**Forbid**: This method is invoked by authorization when an authenticated user
    tries to access a resource to which they are not permitted.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**禁止**: 当一个经过身份验证的用户尝试访问他们无权访问的资源时，此方法由授权调用。'
- en: Now, let's understand how to add authentication using the ASP.NET Core Identity
    framework.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们了解如何使用ASP.NET Core Identity框架添加认证。
- en: Introduction to ASP.NET Core Identity
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ASP.NET Core Identity简介
- en: ASP.NET Core Identity is a membership-based system that provides an easy way
    to add login and user management features to your application. It offers UIs and
    **application programming interfaces** (**APIs**) to create new user accounts,
    provide email confirmation, manage user profile data, manage passwords (such as
    changing or resetting passwords), perform logins, logouts, and more, and enable
    **multi-factor authentication** (**MFA**). Also, it allows you to integrate with
    external login providers such as Microsoft Account, Google, Facebook, Twitter,
    and many other social websites. This is so that users can use their existing accounts
    to sign up instead of having to create new ones, thus enhancing the user experience.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: ASP.NET Core Identity是一个基于成员的系统，它为您的应用程序提供了轻松添加登录和用户管理功能的方法。它提供UI和**应用程序编程接口**（**API**）来创建新用户账户、提供电子邮件确认、管理用户配置文件数据、管理密码（如更改或重置密码）、执行登录、注销等，并启用**多因素认证**（**MFA**）。此外，它允许您与外部登录提供者（如Microsoft
    Account、Google、Facebook、Twitter以及许多其他社交网站）集成。这样，用户可以使用他们现有的账户进行注册，而不是必须创建新的账户，从而增强用户体验。
- en: By default, ASP.NET Core Identity stores user information such as usernames,
    passwords, and more in a SQL Server database using an EF Code-First approach.
    Additionally, it allows you to customize table/column names and capture additional
    user data such as the user's date of birth, phone number, and more. You can also
    customize it to save data in a different persistent store such as Azure Table
    Storage or a NoSQL database. It also provides an API to customize password hashing,
    password validation, and more.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，ASP.NET Core Identity使用EF Code-First方法在SQL Server数据库中存储用户信息，如用户名、密码等。此外，它允许您自定义表/列名称，并捕获额外的用户数据，例如用户的出生日期、电话号码等。您还可以自定义它以将数据保存到不同的持久存储中，例如Azure
    Table Storage或NoSQL数据库。它还提供了一个API来自定义密码散列、密码验证等。
- en: In the next section, we will learn how to create a simple web application and
    configure it to use ASP.NET Core Identity for authentication.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将学习如何创建一个简单的Web应用程序并将其配置为使用ASP.NET Core Identity进行认证。
- en: Sample implementation
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例实现
- en: 'In Visual Studio 2022, create a new project, select the **ASP.NET Core Web
    Application** template, provide your project details to continue, and change **Authentication
    type**. You will find the following list of options to choose from:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Visual Studio 2022 中，创建一个新的项目，选择 **ASP.NET Core Web 应用程序** 模板，提供你的项目详细信息以继续，并更改
    **认证类型**。你将找到以下选项供你选择：
- en: '**None**: Choose this if no authentication is required for your application.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无**：如果你不需要你的应用程序进行认证，请选择此选项。'
- en: '**Individual Accounts**: Choose this if you use a local store or SQL database
    to manage user identities.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**个人账户**：如果你使用本地存储或 SQL 数据库来管理用户身份，请选择此选项。'
- en: '**Microsoft Identity Platform**: Choose this if you wish to authenticate users
    against Azure AD or Azure AD B2C.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Microsoft Identity Platform**：如果你希望对 Azure AD 或 Azure AD B2C 进行用户认证，请选择此选项。'
- en: '**Windows**: Choose this if your application is only available on an intranet.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows**：如果你的应用程序仅可在内网上使用，请选择此选项。'
- en: 'For this sample implementation, we will use a local store to save user data.
    Select **Individual Accounts**, and click on **Create** to create the project,
    as illustrated in the following screenshot:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个示例实现，我们将使用本地存储来保存用户数据。选择 **个人账户**，然后点击 **创建** 来创建项目，如图所示：
- en: '![Figure 12.1 – Authentication type'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.1 – 认证类型'
- en: '](img/Figure_12.1_B18507.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.1 – 图 12.1_B18507.jpg]'
- en: Figure 12.1 – Authentication type
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.1 – 认证类型
- en: 'Alternatively, you can use the `dotnet` `SQLite` as the database store, as
    follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以使用 `dotnet` `SQLite` 作为数据库存储，如下所示：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To configure a SQL database as a store, run the following command, making sure
    you apply migrations to create the necessary tables in the database:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 SQL 数据库配置为存储，请运行以下命令，确保应用迁移以在数据库中创建必要的表：
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now, run the following command to build and run the application:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，运行以下命令来构建和运行应用程序：
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You should see output similar to the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会看到以下类似的输出：
- en: '![Figure 12.2 – The dotnet run command output for reference'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.2 – 参考的 dotnet run 命令输出'
- en: '](img/Figure_12.2_B18507.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.2 – 参考的 dotnet run 命令输出'
- en: Figure 12.2 – The dotnet run command output for reference
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.2 – 参考的 dotnet run 命令输出
- en: In the preceding screenshot, notice the logs from the console and the **Uniform
    Resource Locators** (**URLs**) with ports at which the application is accessible.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的屏幕截图中，注意控制台日志和应用程序可访问的 **统一资源定位符**（**URL**）及其端口号。
- en: 'Now that your application is up and running, open the URL in the browser and
    click on **Register**. Provide the required details, and click on the **Register**
    button. You might see the following error message the first time you try this:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在应用程序已经启动并运行，请在浏览器中打开 URL 并点击 **注册**。提供所需详细信息，然后点击 **注册** 按钮。你可能会在第一次尝试时看到以下错误信息：
- en: '![Figure 12.3 – A runtime exception due to missing migrations'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.3 – 由于缺少迁移导致的运行时异常'
- en: '](img/Figure_12.3_B18507.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.3 – 图 12.3_B18507.jpg]'
- en: Figure 12.3 – A runtime exception due to missing migrations
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.3 – 由于缺少迁移导致的运行时异常
- en: You can click on `Update-Database` to apply the migrations and rerun the application.
    Now, you should be able to register and log in to the application. Next, let's
    examine a project structure that has been created for us.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以点击 `Update-Database` 来应用迁移并重新运行应用程序。现在，你应该能够注册和登录到应用程序。接下来，让我们检查为我们创建的项目结构。
- en: 'Under **Dependencies Packages**, you will notice the following NuGet packages:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在 **依赖包** 下，你会注意到以下 NuGet 包：
- en: '`Microsoft.AspNetCore.Identity.UI`: This is a Razor class library, and it contains
    the entire identity UI with which you can navigate from a browser—for example,
    `/Identity/Account/Register` or `/Identity/Account/Login`.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Microsoft.AspNetCore.Identity.UI`: 这是一个 Razor 类库，它包含了整个身份 UI，你可以通过浏览器进行导航——例如，`/Identity/Account/Register`
    或 `/Identity/Account/Login`。'
- en: '`Microsoft.AspNetCore.Identity.EntityFrameworkCore`: This is used by ASP.NET
    Core Identity to interact with the database store.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Microsoft.AspNetCore.Identity.EntityFrameworkCore`: 这是由 ASP.NET Core Identity
    用于与数据库存储交互的。'
- en: '`Microsoft.EntityFrameworkCore.SqlServer`: This is a library that is used to
    interact with SQLDB.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Microsoft.EntityFrameworkCore.SqlServer`: 这是一个用于与 SQLDB 交互的库。'
- en: 'The packages can be seen in the following screenshot:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 包可以在以下屏幕截图中看到：
- en: '![Figure 12.4 – The Solution Explorer view of the AuthSample project'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.4 – AuthSample 项目的解决方案资源管理器视图'
- en: '](img/Figure_12.4_B18507.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.4 – 图 12.4_B18507.jpg]'
- en: Figure 12.4 – The Solution Explorer view of the AuthSample project
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.4 – AuthSample 项目的解决方案资源管理器视图
- en: Now, let's examine the code of `Program.cs`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们检查 `Program.cs` 的代码。
- en: 'The following code registers the authentication middleware that enables the
    authentication capability:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码注册了启用身份验证功能的身份验证中间件：
- en: '[PRE4]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '`ApplicationDbContext` is registered as the dependent service by providing
    an `options` configuration with a connection string of `sql database` that is
    specified in `appsettings.json`, as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`ApplicationDbContext`通过提供包含在`appsettings.json`中指定的`sql database`连接字符串的`options`配置作为依赖服务进行注册，如下所示：'
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `AddDefaultIdentity` method registers services that generate a UI and configures
    a default identity system using `IdentityUser` as a model.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`AddDefaultIdentity`方法注册了生成UI并使用`IdentityUser`作为模型配置默认身份系统的服务。'
- en: 'ASP.NET Core Identity allows us to configure a number of identity options to
    meet our needs—for example, the following code allows us to disable email confirmations,
    configure password requirements, and set lock timeout settings:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: ASP.NET Core Identity允许我们配置多个身份选项以满足我们的需求——例如，以下代码允许我们禁用电子邮件确认，配置密码要求，并设置锁定超时设置：
- en: '[PRE10]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: For more details, you can refer to [https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity?view=aspnetcore-6.0](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity?view=aspnetcore-6.0).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 更多详情，请参阅[https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity?view=aspnetcore-6.0](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity?view=aspnetcore-6.0)。
- en: Scaffolding
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 框架
- en: To further customize the UI and any other settings, you can selectively add
    source code contained in the Razor class library. Then, you can modify the generated
    source code to suit your needs. To scaffold, in Solution Explorer, right-click
    on **Project** | **Add** | **New Scaffolded Item** | **Identity** | **Add**.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步自定义UI和其他设置，您可以选择性地添加Razor类库中包含的源代码。然后，您可以修改生成的源代码以满足您的需求。要创建框架，在解决方案资源管理器中，右键单击**项目**
    | **添加** | **新建框架项** | **身份** | **添加**。
- en: 'This will open a window where you can select the files that you want to override,
    as illustrated in the following screenshot:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开一个窗口，您可以在其中选择要覆盖的文件，如下面的截图所示：
- en: '![Figure 12.5 – Dialog to override the identity modules'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.5 – 覆盖身份模块的对话框'
- en: '](img/Figure_12.5_B18507.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.5_B18507.jpg)'
- en: Figure 12.5 – Dialog to override the identity modules
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.5 – 覆盖身份模块的对话框
- en: 'You can select to override all files or only choose those files that you want
    to customize. Choose your data context class and click on `Identity` folder—both
    Razor and the corresponding C# files will be added. The following screenshot illustrates
    the files that have been added based on the selection:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择覆盖所有文件或仅选择您想要自定义的文件。选择您的数据上下文类，然后单击`Identity`文件夹——Razor和相应的C#文件都将被添加。以下截图说明了基于选择添加的文件：
- en: '![Figure 12.6 – The Solution Explorer view of the AuthSample project'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.6 – AuthSample项目的解决方案资源管理器视图'
- en: '](img/Figure_12.6_B18507.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.6_B18507.jpg)'
- en: Figure 12.6 – The Solution Explorer view of the AuthSample project
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.6 – AuthSample项目的解决方案资源管理器视图
- en: For more details relating to customizations, you can refer to [https://docs.microsoft.com/en-us/aspnet/core/security/authentication/scaffold-identity?view=aspnetcore-6.0](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/scaffold-identity?view=aspnetcore-6.0).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 更多有关自定义的详情，请参阅[https://docs.microsoft.com/en-us/aspnet/core/security/authentication/scaffold-identity?view=aspnetcore-6.0](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/scaffold-identity?view=aspnetcore-6.0)。
- en: Now, let's understand how to integrate an ASP.NET Core application with external
    login providers.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们了解如何将ASP.NET Core应用程序与外部登录提供者集成。
- en: Integration with external login providers
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与外部登录提供者集成
- en: 'In this section, we will learn how to integrate an ASP.NET Core application
    to use external login providers, such as Microsoft Account, Google, Facebook,
    Twitter, and more. Additionally, we will look at how to authenticate using an
    OAuth 2.0 flow so that users can use their existing credentials to sign up and
    access our application. A common pattern to integrate an ASP.NET Core application
    with any external login provider is given as follows:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何将ASP.NET Core应用程序与外部登录提供者集成，例如Microsoft Account、Google、Facebook、Twitter等。此外，我们还将探讨如何使用OAuth
    2.0流程进行身份验证，以便用户可以使用他们现有的凭据注册并访问我们的应用程序。将ASP.NET Core应用程序与任何外部登录提供者集成的常见模式如下：
- en: Acquire credentials (usually, the client ID and secret) to access OAuth APIs
    for authentication from the respective developer portal.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取用于从各自的开发者门户访问OAuth API进行身份验证的凭据（通常是客户端ID和密钥）。
- en: Configure the credentials in the application settings or user secrets.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在应用程序设置或用户密钥中配置凭据。
- en: Next, we need to add the respective NuGet package to the project at **Add Middleware
    Support** to use the OpenID and OAuth 2.0 flows.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要在**添加中间件支持**时将相应的NuGet包添加到项目中，以使用OpenID和OAuth 2.0流程。
- en: In `Program.cs`, add the `AddAuthentication` method to register the authentication
    middleware.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Program.cs`中，添加`AddAuthentication`方法以注册身份验证中间件。
- en: Configuring Google
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置Google
- en: 'To configure Google as an external login provider, you need to perform the
    following steps:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 要将Google配置为外部登录提供者，你需要执行以下步骤：
- en: Create OAuth credentials at [https://developers.google.com/identity/sign-in/web/sign-in](https://developers.google.com/identity/sign-in/web/sign-in).
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[https://developers.google.com/identity/sign-in/web/sign-in](https://developers.google.com/identity/sign-in/web/sign-in)创建OAuth凭据。
- en: 'Configure the credentials in the user secrets. You can use the `dotnet` CLI
    to add secrets to your project, as follows:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在用户密钥中配置凭据。你可以使用`dotnet` CLI将密钥添加到你的项目中，如下所示：
- en: '[PRE22]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Add the `Microsoft.AspNetCore.Authentication.Google` NuGet package to your
    project, and add the following code to `Program.cs`:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Microsoft.AspNetCore.Authentication.Google` NuGet包添加到你的项目中，并将以下代码添加到`Program.cs`：
- en: '[PRE23]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Similarly, you can add multiple providers.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类似地，你可以添加多个提供者。
- en: To learn how to integrate with other popular external authentication providers,
    you can refer to [https://docs.microsoft.com/en-us/aspnet/core/security/authentication/social/?view=aspnetcore-6.0](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/social/?view=aspnetcore-6.0).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解如何与其他流行的外部身份验证提供者集成，你可以参考[https://docs.microsoft.com/en-us/aspnet/core/security/authentication/social/?view=aspnetcore-6.0](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/social/?view=aspnetcore-6.0)。
- en: After you have completed the preceding steps, you should be able to use Google
    credentials to log in to your application. This concludes this section on using
    ASP.NET Core Identity with external login providers in your application for authentication.
    In the next section, let's see what OAuth is.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 完成前面的步骤后，你应该能够使用Google凭据登录到你的应用程序。这结束了本节关于在应用程序中使用ASP.NET Core Identity与外部登录提供者进行身份验证的内容。在下一节中，让我们看看OAuth是什么。
- en: Understanding OAuth 2.0
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解OAuth 2.0
- en: OAuth 2.0 is a modern and industry-standard protocol for securing web APIs.
    It simplifies the process by providing specific authorization flows for web apps,
    single-page apps, mobile apps, and more to access secured APIs.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: OAuth 2.0是一种现代且行业标准的安全Web API协议。它通过为Web应用、单页应用、移动应用等提供特定的授权流程来简化流程，以便访问受保护的API。
- en: Let's consider a use case where you want to build a web portal in which users
    can sync and view photos/videos from their favorite applications such as Instagram,
    Facebook, or other third-party applications. Your application should be able to
    request data from third-party applications on behalf of the user. One approach
    involves the storing of a user's credentials in relation to each third-party application,
    and your application sends or requests data on behalf of the user.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个用例，其中你想要构建一个网络门户，用户可以从他们喜欢的应用程序（如Instagram、Facebook或其他第三方应用程序）同步和查看照片/视频。你的应用程序应该能够代表用户从第三方应用程序请求数据。一种方法涉及存储与每个第三方应用程序相关的用户凭据，并且你的应用程序代表用户发送或请求数据。
- en: 'This approach can lead to many problems. They are outlined as follows:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法可能导致许多问题。以下是如何概述：
- en: You need to design your application to securely store user credentials.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要设计你的应用程序以安全地存储用户凭据。
- en: Users might not be comfortable with their credentials being shared and stored
    by third-party applications in your application.
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可能不习惯他们的凭据被第三方应用程序在你的应用程序中共享和存储。
- en: If a user changes their credentials, they need to be updated back in your application.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户更改了他们的凭据，它们需要在你应用程序中更新。
- en: In the case of a security breach, fraudsters can gain unrestricted access to
    a user's data in third-party applications. This can lead to potential revenue
    and reputation loss.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在安全漏洞的情况下，欺诈者可以无限制地访问第三方应用程序中用户的数据。这可能导致潜在的收入和声誉损失。
- en: 'OAuth 2.0 can handle all of the preceding use cases by addressing all of these
    concerns. Let''s see how it does this, as follows:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: OAuth 2.0可以通过解决所有这些关注点来处理所有上述用例。让我们看看它是如何做到这一点的，如下所示：
- en: The user logs in to your application. To sync pictures/videos, the user will
    be redirected to a third-party application, and they will need to sign in with
    their credentials.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户登录到您的应用程序。为了同步图片/视频，用户将被重定向到第三方应用程序，并需要使用其凭据登录。
- en: OAuth 2.0 reviews and approves the app's request to fetch resources.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OAuth 2.0 审查并批准应用程序获取资源的请求。
- en: The user is redirected back to your application with the authorization code.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户带着授权码被重定向回您的应用程序。
- en: To sync pictures/videos, your application can acquire a token by exchanging
    the authorization code and then making an API call to a third-party application
    along with the token.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了同步图片/视频，您的应用程序可以通过交换授权码并使用该令牌调用第三方应用程序的 API 来获取一个令牌。
- en: For each request, the third-party application validates the token and responds
    accordingly.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每个请求，第三方应用程序验证令牌并相应地响应。
- en: 'In OAuth flows, there are four parties involved: **Client**, **Resource Owner**,
    **Authorization Server**, and **Resource Server**. Refer to the following screenshot:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OAuth 流程中，涉及四个方面：**客户端**、**资源所有者**、**授权服务器**和**资源服务器**。请参考以下截图：
- en: '![Figure 12.7 – An OAuth2 flow'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.7 – OAuth2 流程'
- en: '](img/Figure_12.7_B18507.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.7_B18507.jpg)'
- en: Figure 12.7 – An OAuth2 flow
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.7 – OAuth2 流程
- en: 'From the preceding screenshot, we can see the following:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的截图，我们可以看到以下内容：
- en: '**Client**: This refers to an application that acquires a token from the authorization
    server and makes requests to the resource server on behalf of the resource owner.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户端**：这指的是从授权服务器获取令牌并代表资源所有者向资源服务器发出请求的应用程序。'
- en: '**Resource Owner**: This is an entity that owns resources/data and is capable
    of granting access to clients.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源所有者**：这是一个拥有资源/数据并能够授予客户端访问权限的实体。'
- en: '**Authorization Server**: This authenticates the resource owner and issues
    tokens to clients.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**授权服务器**：这验证资源所有者并向客户端发行令牌。'
- en: '**Resource Server**: This is the server that hosts resources or data relating
    to the resource owner, uses a bearer token to validate, and responds to or rejects
    requests coming from clients.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源服务器**：这是托管资源或与资源所有者相关的数据的服务器，使用载体令牌进行验证，并对来自客户端的请求进行响应或拒绝。'
- en: Tokens
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 令牌
- en: 'The authorization server authenticates the user and provides an ID token, access
    token, and refresh token, which are used by native/web applications to access
    protected services. Let''s understand each of them a bit more:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 授权服务器验证用户并提供了 ID 令牌、访问令牌和刷新令牌，这些令牌被原生/网络应用程序用于访问受保护的服务。让我们更深入地了解它们：
- en: '**Access token**: This is issued by the authorization server as part of the
    OAuth flow, usually in JWT format; a Base64-encoded JSON object containing information
    about the issuer, user, scope, expiry, and more.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**访问令牌**：这是授权服务器作为 OAuth 流程的一部分发行的，通常以 JWT 格式；一个包含发行者、用户、范围、过期时间等信息的基础64编码的
    JSON 对象。'
- en: '**Refresh token**: This is issued by the authorization server along with the
    access token, which is used by the client application to request a new access
    token before it expires.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**刷新令牌**：这是授权服务器与访问令牌一起发行的，客户端应用程序在访问令牌过期之前使用它来请求新的访问令牌。'
- en: '**ID tokens**: This is issued by the authorization server as part of the OpenID
    Connect flow, which can be used to authenticate the user.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ID 令牌**：这是授权服务器作为 OpenID Connect 流程的一部分发行的，可以用来验证用户。'
- en: Note
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: OpenID Connect is an authentication protocol built on top of OAuth2\. It can
    be used to verify the identity of a user on an authentication server.
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: OpenID Connect 是建立在 OAuth2 之上的一个身份验证协议。它可以用来验证身份验证服务器上的用户身份。
- en: Authorization grant types
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 授权类型
- en: 'OAuth 2.0 defines a number of ways for a client to acquire tokens to access
    secured resources—these are called **grants**. It defines five grant types: authorization
    code flow, implicit flow, on-behalf-of flow, client credentials flow, and device
    grant flow. They are outlined here:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: OAuth 2.0 定义了客户端获取令牌以访问受保护资源的方法——这些被称为**授权**。它定义了五种授权类型：授权码流程、隐式流程、代表流程、客户端凭据流程和设备授权流程。它们在此概述：
- en: '**Authorization code flow**: This flow is suitable for web, mobile, and single-page
    apps, where your application needs to get your data from another server. The authorization
    code flow begins with the client redirecting the user to authenticate at the authorization
    server. If successful, the user gives their consent to permissions required by
    the client and is redirected back to the client with the authorization code.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**授权码流**：这种流适用于Web、移动和单页应用程序，其中您的应用程序需要从另一个服务器获取数据。授权码流从客户端将用户重定向到授权服务器进行身份验证开始。如果成功，用户会同意客户端所需的权限，并被带有授权码重定向回客户端。'
- en: Here, the client's identity is verified by the configured redirection **Uniform
    Resource Identifier** (**URI**) in the authorization server. Next, the client
    requests the access token by passing the authorization code and, in return, gets
    the access token, the refresh token, and the expiry date. The client can use the
    access token to call the web API. Since access tokens are short-lived, before
    they expire, the client should request a new access token by passing the access
    token and the refresh token.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，客户端的身份是通过授权服务器配置的重定向**统一资源标识符**（**URI**）进行验证的。接下来，客户端通过传递授权码来请求访问令牌，并作为回报，获得访问令牌、刷新令牌和过期日期。客户端可以使用访问令牌来调用Web
    API。由于访问令牌的寿命较短，在它们过期之前，客户端应通过传递访问令牌和刷新令牌来请求新的访问令牌。
- en: '**Implicit flow**: This is a simplified version of code flow suitable for single-page,
    JavaScript-based applications. With implicit flow, instead of issuing an authorization
    code, the authorization server only issues an access token. Here, the client identity
    is not verified, as there is no need to specify a redirect URL.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**隐式流**：这是一个适合单页、基于JavaScript的应用程序的简化代码流版本。在隐式流中，授权服务器不是发出授权码，而是只发出访问令牌。在这里，客户端身份未经验证，因为没有必要指定重定向URL。'
- en: '**On-behalf-of flow**: This flow is best suited to situations where a client
    invokes a call to a web API (say, A) that, in turn, needs to invoke another API
    (say, on B). The flow goes like this: the user sends a request along with a token
    to A; A requests a token for B from the authorization server by providing a token
    of A and credentials such as the client ID and client secret of A. Once it acquires
    the token for B, it invokes the API on B.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代表流**：这种流最适合客户端调用Web API（例如，A）的情况，该API反过来需要调用另一个API（例如，B）。流程是这样的：用户将带有令牌的请求发送到A；A通过提供A的令牌和凭据（如A的客户ID和客户密钥）从授权服务器请求B的令牌。一旦它获得了B的令牌，它就在B上调用API。'
- en: '**Client credentials flow**: This flow is used in cases where server-to-server
    interaction is needed (say, A to B, where A acquires the token to interact with
    B using its credentials—usually, this is the client ID and the client secret—and
    then invokes the API with the acquired token). This request runs under the context
    of A instead of the user. The required permissions should be granted to A to perform
    the necessary actions.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户端凭据流**：这种流用于需要服务器到服务器交互的情况（例如，A到B，其中A通过其凭据（通常是客户ID和客户密钥）获取令牌以与B交互，然后使用获得的令牌调用API）。此请求在A的上下文中运行，而不是在用户的上下文中。应授予A执行必要操作所需的权限。'
- en: '**Device grant flow**: This flow is used in cases where users need to sign
    in to devices with no browsers, such as smart TVs, IoT devices, or printers. The
    user visits a web page on mobile or PC to authenticate and enters the code displayed
    on the device to acquire the token and refresh the token for the device to connect.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设备授权流**：这种流用于用户需要在没有浏览器的情况下登录设备的情况，例如智能电视、物联网设备或打印机。用户访问移动或PC上的网页进行身份验证，并输入设备上显示的代码以获取令牌并刷新设备的令牌以连接。'
- en: Now that we understand what OAuth is, in the next section, let's understand
    what Azure AD is, how to integrate it with our e-commerce application, and how
    to use it as our identity server.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了OAuth是什么，在下一节中，让我们了解Azure AD是什么，如何将其集成到我们的电子商务应用程序中，以及如何将其用作我们的身份服务器。
- en: Introduction to Azure AD
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure AD简介
- en: Azure AD is an **Identity and Access Management** (**IAM**) cloud service offering
    from Microsoft. It is a single identity store for both internal and external users
    so that you can configure applications to use Azure AD for authentication. You
    can synchronize on-premises Windows AD to Azure AD; therefore, you can enable
    a **single sign-on** (**SSO**) experience for your users.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: Azure AD是来自Microsoft的**身份和访问管理**（**IAM**）云服务。它为内部和外部用户提供了一个单一的身份存储库，因此您可以配置应用程序使用Azure
    AD进行身份验证。您可以将本地Windows AD同步到Azure AD；因此，您可以为您的用户提供**单点登录**（**SSO**）体验。
- en: Users can log in using their work or school credentials or personal Microsoft
    accounts such as `Outlook.com`, Xbox, and Skype. It also allows you to natively
    add or delete users, create groups, do a self-service password reset, enable Azure
    MFA, and much more.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以使用他们的工作或学校凭证或个人Microsoft账户（如`Outlook.com`、Xbox和Skype）登录。它还允许您原生地添加或删除用户、创建组、进行自助密码重置、启用Azure
    MFA以及更多功能。
- en: With **Azure AD B2C**, you can customize how your users sign up, sign in, and
    manage their profiles. Additionally, it allows your customers to use their existing
    social credentials such as Facebook and Google to sign in and access your applications
    and APIs.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 **Azure AD B2C**，您可以自定义用户注册、登录和管理其个人资料的方式。此外，它还允许您的客户使用他们现有的社交凭证，如Facebook和Google，来登录并访问您的应用程序和API。
- en: Azure AD is compliant with industry-standard protocols such as **OpenID Connect**,
    also known as **OIDC** and **OAuth 2.0**. OIDC is an identity layer built on top
    of the OAuth 2.0 protocol and is used to authenticate and retrieve a user's profile
    information. OAuth 2.0 is used for authorization to obtain access to an HTTP service
    using different flows such as implicit grant flow, on-behalf-of flow, client credentials
    flow, code flow and device grant flow.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Azure AD符合行业标准协议，如**OpenID Connect**，也称为**OIDC**和**OAuth 2.0**。OIDC是在OAuth 2.0协议之上构建的身份层，用于验证和检索用户的个人资料信息。OAuth
    2.0用于授权，通过不同的流程（如隐式授权流程、代表流程、客户端凭证流程、代码流程和设备授权流程）获取对HTTP服务的访问权限。
- en: 'A typical authentication flow in web apps goes like this:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: Web应用程序中典型的身份验证流程如下：
- en: The user tries to access the secure content of an application (say, **My Orders**).
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户尝试访问应用程序的安全内容（例如，**我的订单**）。
- en: The user is redirected to the Azure AD sign-in page if they are not authenticated.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果用户未进行身份验证，则会被重定向到Azure AD登录页面。
- en: Once the user has submitted their credentials, they are validated by Azure AD,
    which sends a token back to the web app.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦用户提交了他们的凭证，Azure AD就会进行验证，并将令牌发送回Web应用程序。
- en: A cookie is saved to the user's browser and displays the user-requested page.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个cookie被保存在用户的浏览器中，并显示用户请求的页面。
- en: On subsequent requests, a cookie is sent to the server that is used to validate
    the user.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在后续请求中，会发送一个cookie到服务器，用于验证用户。
- en: '**Azure AD B2C** enables your customer to use their preferred social, enterprise,
    or native identities to access your applications or APIs. It can scale to millions
    of users and billions of authentications per day.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '**Azure AD B2C**允许您的客户使用他们首选的社交、企业或本地身份来访问您的应用程序或API。它可以扩展到每天数百万用户和数十亿次身份验证。'
- en: 'Let''s try to integrate our e-commerce application with Azure AD B2C. At a
    high level, we need to perform the following steps to integrate it:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试将我们的电子商务应用程序与Azure AD B2C集成。在高层面上，我们需要执行以下步骤来集成：
- en: Create an Azure AD B2C tenant.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建Azure AD B2C租户。
- en: Register an application.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册应用程序。
- en: Add identity providers.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加身份提供者。
- en: Create user flows.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建用户流程。
- en: Update the app code to integrate.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新应用程序代码以进行集成。
- en: Note
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: As a prerequisite, you should have an active Azure subscription with a contributor
    role. If you don't have one, you can sign up for a free account at [https://azure.microsoft.com/en-in/free/](https://azure.microsoft.com/en-in/free/).
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 作为先决条件，您应该有一个活跃的Azure订阅，并具有贡献者角色。如果您还没有，您可以在[https://azure.microsoft.com/en-in/free/](https://azure.microsoft.com/en-in/free/)注册一个免费账户。
- en: The Azure AD B2C setup
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure AD B2C的设置
- en: 'Using Azure AD B2C as an identity service will allow our e-commerce users to
    sign up, create their own credentials, or use their existing social credentials
    such as Facebook or Google. Let''s look at the steps that we need to perform to
    configure Azure AD B2C as an identity service for our e-commerce application,
    as follows:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Azure AD B2C作为身份服务将允许我们的电子商务用户注册、创建他们自己的凭证或使用他们现有的社交凭证，如Facebook或Google。让我们看看我们需要执行以下步骤来配置Azure
    AD B2C作为我们的电子商务应用程序的身份服务：
- en: Log in to the Azure portal, making sure you are in the same directory that contains
    your subscription.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 Azure 门户，确保您位于包含您的订阅的同一目录中。
- en: On the **Home** page, click on **Create Resource** and search for **B2C**. Then,
    select **Azure Active Directory B2C** from the list of options.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **主页** 上，点击 **创建资源** 并搜索 **B2C**。然后，从选项列表中选择 **Azure Active Directory B2C**。
- en: 'Select **Create a new Azure AD B2C Tenant**, as illustrated in the following
    screenshot:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **创建新的 Azure AD B2C 租户**，如图下截图所示：
- en: '![Figure 12.8 – Azure AD B2C'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.8 – Azure AD B2C'
- en: '](img/Figure_12.8_B18507.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.8 – B18507.jpg](img/Figure_12.8_B18507.jpg)'
- en: Figure 12.8 – Azure AD B2C
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.8 – Azure AD B2C
- en: 'Provide the required details and click on **Review + create**. Then, complete
    the following fields:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供所需的详细信息，然后点击 **审查 + 创建**。然后，完成以下字段：
- en: '**Organization name**: This is the name of your B2C tenant.'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '**组织名称**：这是您的 B2C 租户的名称。'
- en: '**Internal domain name**: This is the internal domain name of your tenant.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '**内部域名**：这是您的租户的内部域名。'
- en: '**Country/Region**: Select the country or region where your tenant should be
    provisioned.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '**国家/地区**：选择您的租户应部署的国家或地区。'
- en: '**Subscription** and **Resource Group**: Provide subscription and resource
    group details.'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '**订阅** 和 **资源组**：提供订阅和资源组详细信息。'
- en: 'These fields are shown in the following screenshot:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 这些字段在以下截图中显示：
- en: '![Figure 12.9 – The New Azure AD B2C Configuration section'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.9 – 新的 Azure AD B2C 配置部分'
- en: '](img/Figure_12.9_B18507.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.9 – B18507.jpg](img/Figure_12.9_B18507.jpg)'
- en: Figure 12.9 – The New Azure AD B2C Configuration section
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.9 – 新的 Azure AD B2C 配置部分
- en: 'Review your details and click on **Create**. The creation of your new tenant
    might take a few minutes. Once it has been created, you will see a confirmation
    message in the notification section. In the **Notifications** popup, click on
    the tenant name to navigate to the newly created tenant, as illustrated in the
    following screenshot:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 审查您的详细信息，然后点击 **创建**。创建新租户可能需要几分钟。一旦创建完成，您将在通知部分看到确认消息。在 **通知** 弹出窗口中，点击租户名称以导航到新创建的租户，如图下截图所示：
- en: '![Figure 12.10 – Confirmation of the creation of the Azure AD B2C service'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.10 – Azure AD B2C 服务创建确认'
- en: '](img/Figure_12.10_B18507.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.10 – B18507.jpg](img/Figure_12.10_B18507.jpg)'
- en: Figure 12.10 – Confirmation of the creation of the Azure AD B2C service
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.10 – Azure AD B2C 服务创建确认
- en: 'In the following screenshot, note that **Subscription status** is given as
    **No Subscription**. Additionally, a warning message says that you should **link
    a subscription to your tenant**. You can click on the link to fix it, else you
    can skip to *Step 9* to continue to configure Azure AD:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在以下截图中，请注意 **订阅状态** 显示为 **无订阅**。另外，一条警告信息指出您应该 **将订阅链接到您的租户**。您可以点击链接进行修复，否则可以跳转到
    *步骤 9* 继续配置 Azure AD：
- en: '![Figure 12.11 – A warning message showing no subscription has been linked'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.11 – 显示未链接订阅的警告信息'
- en: '](img/Figure_12.11_B18507.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.11 – B18507.jpg](img/Figure_12.11_B18507.jpg)'
- en: Figure 12.11 – A warning message showing no subscription has been linked
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.11 – 显示未链接订阅的警告信息
- en: 'The link will open the same screen that you saw in *Step 3*. This time, click
    on **Link an existing Azure AD B2C Tenant to my Azure subscription** to continue,
    as illustrated in the following screenshot:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 链接将打开与 *步骤 3* 中相同的屏幕。这次，点击 **将现有 Azure AD B2C 租户链接到我的 Azure 订阅** 以继续，如图下截图所示：
- en: '![Figure 12.12 – Linking an Azure AD B2C tenant to a subscription'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.12 – 将 Azure AD B2C 租户链接到订阅'
- en: '](img/Figure_12.12_B18507.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.12 – B18507.jpg](img/Figure_12.12_B18507.jpg)'
- en: Figure 12.12 – Linking an Azure AD B2C tenant to a subscription
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.12 – 将 Azure AD B2C 租户链接到订阅
- en: 'Select your B2C tenant subscription from the drop-down list, provide a **Resource
    group** value, and click on **Create** to link the subscription and the tenant,
    as illustrated in the following screenshot:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉列表中选择您的 B2C 租户订阅，提供一个 **资源组** 值，然后点击 **创建** 以链接订阅和租户，如图下截图所示：
- en: '![Figure 12.13 – Subscription selection'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.13 – 订阅选择'
- en: '](img/Figure_12.13_B18507.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.13 – B18507.jpg](img/Figure_12.13_B18507.jpg)'
- en: Figure 12.13 – Subscription selection
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.13 – 订阅选择
- en: 'You can navigate to your B2C tenant by selecting the **Open B2C Tenant** link
    in the overview section of the B2C tenant to continue with the next steps of the
    configuration, as follows:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过在 B2C 租户概览部分选择 **打开 B2C 租户** 链接来导航到您的 B2C 租户，继续配置的下一步，如下所示：
- en: You need to register your application with the Azure AD B2C tenant to use it
    as the identity service.
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要将应用程序注册到 Azure AD B2C 租户中，才能将其用作身份服务。
- en: You need to choose the identity providers that users can use to sign in to your
    application.
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要选择用户可以用来登录您应用的标识提供者。
- en: 'Choose user flows to define the experience for your users to sign up or sign
    in, as illustrated in the following screenshot:'
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择用户流程以定义用户注册或登录的体验，如下所示截图：
- en: '![Figure 12.14 – Three steps to configure Azure AD B2C'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.14 – 配置 Azure AD B2C 的三个步骤'
- en: '](img/Figure_12.14_B18507.jpg)'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_12.14_B18507.jpg](img/Figure_12.14_B18507.jpg)'
- en: Figure 12.14 – Three steps to configure Azure AD B2C
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.14 – 配置 Azure AD B2C 的三个步骤
- en: 'Under **Manage**, click on **App Registrations** and provide the necessary
    details as follows. Then, click on **Register** to create the AD application:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **管理** 下，点击 **应用程序注册** 并提供以下必要详细信息。然后，点击 **注册** 以创建 AD 应用程序：
- en: '**Name**: Display the name of your application.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '**名称**：显示应用程序的显示名称。'
- en: '**Supported account types**: Choose **Accounts in any identity provider or
    organizational directory** so that we can allow users to use their existing credentials
    to sign up or sign in.'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '**支持的账户类型**：选择 **任何标识提供者或组织目录中的账户**，这样我们就可以允许用户使用他们现有的凭据进行注册或登录。'
- en: '**Redirect URI**: You need to provide the URL of your application to which
    the user will be redirected after successful authentication. For now, we can leave
    it blank.'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '**重定向 URI**：您需要提供用户在成功认证后将被重定向到的应用程序的 URL。目前，我们可以将其留空。'
- en: '**Permissions**: Select **Grant admin consent to openid and offline_access
    permissions**.'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '**权限**：选择 **授予 openid 和 offline_access 权限的管理员同意**。'
- en: 'The fields are illustrated in the following screenshot:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图说明了这些字段：
- en: '![Figure 12.15 – Registering a new Azure AD application'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.15 – 注册新的 Azure AD 应用程序'
- en: '](img/Figure_12.15_B18507.jpg)'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_12.15_B18507.jpg](img/Figure_12.15_B18507.jpg)'
- en: Figure 12.15 – Registering a new Azure AD application
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.15 – 注册新的 Azure AD 应用程序
- en: Note
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To set up and debug locally, we can configure with `localhost`. This needs to
    be replaced with the URL where your app is hosted.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 为了本地设置和调试，我们可以使用 `localhost` 进行配置。这需要替换为您应用程序托管位置的 URL。
- en: 'Now, let''s choose **Identity Providers** under **Manage** to configure, as
    follows:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们在 **管理** 下的 **标识提供者** 中进行选择以进行配置，如下所示：
- en: '**Local accounts**: This option allows users to register and sign in to our
    application in a traditional way—with a username and password. The following screenshot
    illustrates this:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '**本地账户**：此选项允许用户以传统的用户名和密码方式在我们的应用程序中注册和登录。以下截图说明了这一点：'
- en: '![Figure 12.16 – Selecting an identity provider'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.16 – 选择标识提供者'
- en: '](img/Figure_12.16_B18507.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_12.16_B18507.jpg](img/Figure_12.16_B18507.jpg)'
- en: Figure 12.16 – Selecting an identity provider
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.16 – 选择标识提供者
- en: 'Let''s configure Google as the identity provider for our application. You can
    follow the steps outlined at [https://docs.microsoft.com/en-in/azure/active-directory-b2c/identity-provider-google](https://docs.microsoft.com/en-in/azure/active-directory-b2c/identity-provider-google)
    to acquire the client ID and secret. The details you need to provide are shown
    in the following screenshot:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们配置 Google 作为我们应用程序的标识提供者。您可以通过访问 [https://docs.microsoft.com/en-in/azure/active-directory-b2c/identity-provider-google](https://docs.microsoft.com/en-in/azure/active-directory-b2c/identity-provider-google)
    中的步骤来获取客户端 ID 和密钥。您需要提供的详细信息如下所示：
- en: '![Figure 12.17 – Google: New OAuth client'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.17 – Google：新的 OAuth 客户端'
- en: '](img/Figure_12.17_B18507.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_12.17_B18507.jpg](img/Figure_12.17_B18507.jpg)'
- en: 'Figure 12.17 – Google: New OAuth client'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.17 – Google：新的 OAuth 客户端
- en: 'After you provide the required details and select save, the client ID and secret
    are generated, as shown in the following screenshot:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在您提供所需详细信息并选择保存后，将生成客户端 ID 和密钥，如下所示：
- en: '![Figure 12.18 – The Google OAuth client'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.18 – Google OAuth 客户端'
- en: '](img/Figure_12.18_B18507.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_12.18_B18507.jpg](img/Figure_12.18_B18507.jpg)'
- en: Figure 12.18 – The Google OAuth client
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.18 – Google OAuth 客户端
- en: 'Once you have created **Auth Client**, click on **Google** from **identity
    providers**, and then provide the **Client ID** and **Client secret** values to
    complete the configuration. Refer to the following screenshot:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您创建了 **认证客户端**，请从 **标识提供者** 中点击 **Google**，然后提供 **客户端 ID** 和 **客户端密钥** 值以完成配置。请参考以下截图：
- en: '![Figure 12.19 – The identity provider configuration'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.19 – 标识提供者配置'
- en: '](img/Figure_12.19_B18507.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_12.19_B18507.jpg](img/Figure_12.19_B18507.jpg)'
- en: Figure 12.19 – The identity provider configuration
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.19 – 标识提供者配置
- en: Let's configure Facebook as another identity provider for our e-commerce application.
    You can follow the steps outlined at [https://docs.microsoft.com/en-in/azure/active-directory-b2c/identity-provider-facebook](https://docs.microsoft.com/en-in/azure/active-directory-b2c/identity-provider-facebook).
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们配置 Facebook 作为我们电子商务应用程序的另一个身份提供者。您可以按照 [https://docs.microsoft.com/en-in/azure/active-directory-b2c/identity-provider-facebook](https://docs.microsoft.com/en-in/azure/active-directory-b2c/identity-provider-facebook)
    中概述的步骤进行操作。
- en: Once you have created the **Client Auth** settings, click on **Facebook** from
    **identity providers**, and then provide the **Client Id** and **Client Secret**
    values to complete the configuration. Refer to *Figure 12.19* for an overview
    of this.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您创建了 **客户端身份验证** 设置，请点击 **Facebook** 从 **身份提供者** 中，然后提供 **客户端 ID** 和 **客户端密钥**
    值以完成配置。请参阅 *图 12.19* 了解概述。
- en: Now, let's configure the user flow. The user flow allows you to configure and
    customize the authentication experience for your users. You can configure multiple
    flows in your tenant and use them in your application. User flows allow you to
    add MFA and also customize the information that you capture from a user at the
    time of registration—for example, their given name, country, postal code, and,
    optionally, whether you want to add them to claims. You can also customize the
    UI for a better user experience. To create a flow, click on **User Flows** under
    **Policies** and choose a flow type, as illustrated in the following screenshot:![Figure
    12.20 – A new user flow
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们配置用户流程。用户流程允许您为您的用户配置和自定义身份验证体验。您可以在您的租户中配置多个流程并在您的应用程序中使用它们。用户流程允许您添加多因素认证（MFA）并自定义在注册时从用户那里捕获的信息——例如，他们的名字、国家、邮政编码，以及可选的，您是否希望将他们添加到声明中。您还可以自定义用户界面以获得更好的用户体验。要创建一个流程，请点击
    **策略** 下的 **用户流程** 并选择一个流程类型，如图下截图所示：![图 12.20 – 新用户流程
- en: '](img/Figure_12.20_B18507.jpg)'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_12.20_B18507.jpg)'
- en: Figure 12.20 – A new user flow
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.20 – 新用户流程
- en: 'Provide the necessary details, and click on **Create** to save:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供必要的详细信息，然后点击 **创建** 保存：
- en: '**Name**: This is the name of your flow to uniquely identify.'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '**名称**：这是您流程的唯一名称。'
- en: '**Identity providers**: Select your identity providers.'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '**身份提供者**：选择您的身份提供者。'
- en: 'Optionally, you can choose additional user attributes such as **Name**, **Postal
    Code**, and more, as illustrated in the following screenshot:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，您可以选择额外的用户属性，如 **名称**、**邮政编码** 等，如图下截图所示：
- en: '![Figure 12.21 – The user flow configuration'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.21 – 用户流程配置'
- en: '](img/Figure_12.21_B18507.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.21_B18507.jpg)'
- en: Figure 12.21 – The user flow configuration
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.21 – 用户流程配置
- en: 'You can choose additional attributes in the **User attributes and token claims**
    section, as shown in the following screenshot:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 **用户属性和令牌声明** 部分选择额外的属性，如图下截图所示：
- en: '![Figure 12.22 – The additional attribute and claim configuration'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.22 – 额外的属性和声明配置'
- en: '](img/Figure_12.22_B18507.jpg)'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.22_B18507.jpg)'
- en: Figure 12.22 – The additional attribute and claim configuration
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.22 – 额外的属性和声明配置
- en: Similarly, we should also set up a password reset policy. This is required for
    local accounts. To create one, under **Create User Flow**, choose **Password Reset**
    and provide the necessary details. You can refer to *Figure 12.20*.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类似地，我们也应该设置密码重置策略。这对于本地账户是必需的。要创建一个，请在 **创建用户流程** 下选择 **密码重置** 并提供必要的详细信息。您可以参考
    *图 12.20*。
- en: 'Having completed the minimum required setup of Azure AD B2C, we are ready to
    test the flow. Select the user flow that was created and click on **Run user flow**.
    You can view the sign-up and sign-in pages that were created for you, which you
    can find in the following screenshot:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成了 Azure AD B2C 的最小必要设置后，我们准备测试流程。选择创建的用户流程并点击 **运行用户流程**。您可以看到为您创建的注册和登录页面，如图下截图所示：
- en: '![Figure 12.23 – The sign-in and sign-up screens'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.23 – 登录和注册屏幕'
- en: '](img/Figure_12.23_B18507.jpg)'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.23_B18507.jpg)'
- en: Figure 12.23 – The sign-in and sign-up screens
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.23 – 登录和注册屏幕
- en: Let's look at the changes that we need to do in `Packt.Ecommerce.Web` to integrate
    with Azure AD.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看在 `Packt.Ecommerce.Web` 中我们需要进行哪些更改以集成 Azure AD。
- en: Integrating our e-commerce application with Azure AD B2C
  id: totrans-263
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将我们的电子商务应用程序与 Azure AD B2C 集成
- en: 'We will configure authentication on the web application to use Azure AD B2C.
    Let''s make the necessary changes to our application to integrate with the B2C
    tenant, as follows:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 Web 应用程序上配置身份验证以使用 Azure AD B2C。让我们对我们的应用程序进行必要的更改以集成到 B2C 租户，如下所示：
- en: 'Add the following two NuGet packages to our `Packt.Ecommerce.Web` project:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下两个NuGet包添加到我们的`Packt.Ecommerce.Web`项目中：
- en: '`Microsoft.Identity.Web`: This is the main package required to integrate with
    Azure AD.'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '`Microsoft.Identity.Web`: 这是集成到Azure AD所需的主要包。'
- en: '`Microsoft.Identity.Web.UI`: This package generates the UI for signing in and
    signing out. In `Program.cs`, we need to add an authentication service using the
    `OpenIdConnect` scheme along with the `Azure AD B2C` configuration, as follows:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '`Microsoft.Identity.Web.UI`: 此包生成登录和注销的UI。在`Program.cs`中，我们需要使用`OpenIdConnect`方案以及`Azure
    AD B2C`配置添加一个身份验证服务，如下所示：'
- en: '[PRE24]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Under the `Configure` method, add the following code before the `app.UseAuthorization()`
    method:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Configure`方法中，在`app.UseAuthorization()`方法之前添加以下代码：
- en: '[PRE25]'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'We need to add `AzureAdB2C` to `appsettings.json`, as follows:'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要将`AzureAdB2C`添加到`appsettings.json`中，如下所示：
- en: '`Instance`: `https://<domain>.b2clogin.com/tfp`. Replace `<domain>` with the
    name you have chosen while creating the B2C tenant.'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`实例`: `https://<domain>.b2clogin.com/tfp`。将`<domain>`替换为您在创建B2C租户时选择的名称。'
- en: '`ClientId`: This is the AD application ID that you created while setting up
    Azure AD B2C.'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '`客户端ID`: 这是您在设置Azure AD B2C时创建的AD应用程序ID。'
- en: '`Domain`: `<domain>.onmicrosoft.com`. Here, replace `<domain>` with the domain
    name you chose while creating the B2C tenant.'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '`域`: `<domain>.onmicrosoft.com`。在此处，将`<domain>`替换为您在创建B2C租户时选择的域名。'
- en: 'Update `SignUpSignInPolicyId` and `ResetPasswordPolicyId`, as follows:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 更新`SignUpSignInPolicyId`和`ResetPasswordPolicyId`，如下所示：
- en: '[PRE26]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: You can add an `[Authorize]` attribute to controllers or action methods—for
    instance, you can add it to `OrdersController` in `OrdersController.cs` to force
    users to authenticate themselves to access the `Orders` information.
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以为控制器或操作方法添加一个`[Authorize]`属性——例如，您可以将它添加到`OrdersController.cs`中的`OrdersController`，以强制用户进行身份验证才能访问`Orders`信息。
- en: The last step is to update the reply URI. To do so, navigate to **AD Application**
    in your tenant. Navigate to the **Authentication** section under **Manage**, update
    **Reply URI**, and set implicit grant permissions.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步是更新回复URI。为此，请导航到您的租户中的**AD应用程序**。在**管理**下的**身份验证**部分更新**回复URI**，并设置隐式授权权限。
- en: The reply URI is the URL of your application to which users will be redirected
    after successful authentication. To set up an application and debug them locally,
    we can configure the localhost URL, but once you deploy the application to a server,
    you will need to update the URL of the server.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 回复URI是用户在成功认证后将被重定向到的应用程序的URL。为了设置应用程序并在本地进行调试，我们可以配置localhost URL，但一旦您将应用程序部署到服务器，您将需要更新服务器的URL。
- en: 'Under **Implicit grant**, select **Access tokens** and **ID tokens**, which
    are required for our ASP.NET Core application, as illustrated in the following
    screenshot:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 在**隐式授权**下，选择**访问令牌**和**ID令牌**，这是我们的ASP.NET Core应用程序所需的，如图下所示：
- en: '![Figure 12.24 – The reply URL configuration'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.24 – 回复URL配置'
- en: '](img/Figure_12.24_B18507.jpg)'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.24_B18507.jpg)'
- en: Figure 12.24 – The reply URL configuration
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.24 – 回复URL配置
- en: Now, run your application and try accessing the **Orders** page. You will be
    redirected to the sign-in and sign-up pages, as shown in *Figure 12.23*. This
    concludes the integration of our e-commerce application with Azure AD B2C.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，运行您的应用程序并尝试访问**订单**页面。您将被重定向到登录和注册页面，如图*图12.23*所示。这标志着我们的电子商务应用程序与Azure AD
    B2C的集成完成。
- en: Azure AD offers many more options and customizations to suit your needs. For
    more details, you can look at [https://docs.microsoft.com/en-in/azure/active-directory-b2c](https://docs.microsoft.com/en-in/azure/active-directory-b2c).
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: Azure AD提供了许多更多选项和自定义功能以满足您的需求。有关更多详细信息，您可以查看[https://docs.microsoft.com/en-in/azure/active-directory-b2c](https://docs.microsoft.com/en-in/azure/active-directory-b2c)。
- en: Note
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You can use Duende Identity Server to set up your own identity server. This
    uses OpenID Connect and the OAuth 2.0 framework to establish identity. It is available
    via NuGet and can be easily integrated with ASP.NET Core applications. For more
    details, you can refer to [https://docs.duendesoftware.com/identityserver/v6](https://docs.duendesoftware.com/identityserver/v6).
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用Duende Identity Server来设置自己的身份服务器。这使用OpenID Connect和OAuth 2.0框架来建立身份。它通过NuGet提供，并且可以轻松集成到ASP.NET
    Core应用程序中。有关更多详细信息，您可以参考[https://docs.duendesoftware.com/identityserver/v6](https://docs.duendesoftware.com/identityserver/v6)。
- en: In the next section, let's see how to use Windows Authentication.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看看如何使用Windows身份验证。
- en: Introduction to Windows Authentication
  id: totrans-289
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows身份验证简介
- en: ASP.NET Core applications can be configured to use Windows Authentication, whereby
    users are authenticated against their Windows credentials. Windows Authentication
    is the best choice when your application is hosted on a Windows server and your
    application is only available on the intranet. In this section, we will learn
    how to use Windows Authentication in an ASP.NET Core application.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: ASP.NET Core 应用程序可以被配置为使用 Windows 身份验证，其中用户将使用其 Windows 凭据进行身份验证。当您的应用程序托管在
    Windows 服务器上且您的应用程序仅限于内部网络时，Windows 身份验证是最佳选择。在本节中，我们将学习如何在 ASP.NET Core 应用程序中使用
    Windows 身份验证。
- en: 'In Visual Studio, choose `--auth Windows` parameters to create a new web app
    using Windows Authentication, as follows:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中，选择 `--auth Windows` 参数以使用 Windows 身份验证创建新的网络应用程序，如下所示：
- en: '[PRE27]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'If you open `launchSettings.json`, you will notice that `WindowsAuthentication`
    is set to `true` and `anonymousAuthentication` is set to `false`, as illustrated
    in the following code snippet. This setting is only applicable when running an
    application in **Internet Information Services Express** (**IIS Express**):'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您打开 `launchSettings.json`，您会注意到 `WindowsAuthentication` 设置为 `true`，而 `anonymousAuthentication`
    设置为 `false`，如下面的代码片段所示。此设置仅在运行 **Internet Information Services Express**（**IIS
    Express**）的应用程序时适用：
- en: '[PRE28]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'When you host an application on IIS, you need to configure `WindowsAuthentication`
    to `true` in `web.config`. By default, `web.config` is not added to the .NET Core
    web application, so you need to add it and make the necessary changes, as depicted
    in the following code snippet:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在 IIS 上托管应用程序时，需要在 `web.config` 中将 `WindowsAuthentication` 配置为 `true`。默认情况下，`web.config`
    不会添加到 .NET Core 网络应用程序中，因此您需要添加它并进行必要的更改，如下面的代码片段所示：
- en: '[PRE36]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The preceding configuration makes every endpoint secure. There will be no impact,
    even if we set `AllowAnonymous` on every controller or action. If you want to
    make any endpoint anonymously accessible, you need to set `anonymousAuthentication`
    to `true` and set `Authorize` on the endpoints that you want to make secure. In
    addition to that, you need to register the authentication service with the scheme
    as `Windows`, as follows:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 上述配置使每个端点都变得安全。即使我们在每个控制器或操作上设置 `AllowAnonymous`，也不会产生影响。如果您想使任何端点匿名访问，需要将 `anonymousAuthentication`
    设置为 `true`，并设置您想要使其安全的端点的 `Authorize`。此外，您还需要将身份验证服务与方案 `Windows` 注册，如下所示：
- en: '[PRE46]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: This is all you need to do to enable Windows Authentication in your application.
    For more details, you can refer to [https://docs.microsoft.com/en-us/aspnet/core/security/authentication/windowsauth?view=aspnetcore-6.0](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/windowsauth?view=aspnetcore-6.0).
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是您需要在应用程序中启用 Windows 身份验证所需要做的全部。有关更多详细信息，您可以参考 [https://docs.microsoft.com/en-us/aspnet/core/security/authentication/windowsauth?view=aspnetcore-6.0](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/windowsauth?view=aspnetcore-6.0)。
- en: In the next section, we will look at a few best practices to be followed to
    secure client and server applications.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将探讨一些确保客户端和服务器应用程序安全的最佳实践。
- en: Understanding best practices to secure client and server applications
  id: totrans-317
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解确保客户端和服务器应用程序安全性的最佳实践
- en: 'There are several best practices that are recommended to secure your web application.
    The .NET Core and Azure services make it easy to ensure their adoption. The following
    are key ones you could consider:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个最佳实践建议用于确保您的网络应用程序的安全性。.NET Core 和 Azure 服务使确保其采用变得容易。以下是一些您可以考虑的关键点：
- en: Enforce HTTPS for web applications. Use `UseHttpsRedirection` middleware to
    redirect requests from HTTP to HTTPS.
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为网络应用程序强制执行 HTTPS。使用 `UseHttpsRedirection` 中间件将请求从 HTTP 重定向到 HTTPS。
- en: Use modern authentication frameworks based on OAuth 2.0 and OIDC to secure your
    web or API app.
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用基于 OAuth 2.0 和 OIDC 的现代身份验证框架来保护您的网络或 API 应用程序。
- en: If you are using the Microsoft identity platform, use open source libraries
    such as MSAL.js and MSAL.NET to acquire or renew tokens.
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您使用的是 Microsoft 身份平台，请使用如 MSAL.js 和 MSAL.NET 这样的开源库来获取或更新令牌。
- en: Configure strong password requirements and lock your account in the case of
    continuous failed login attempts—for example, five consecutive failed attempts.
    This can prevent a brute-force attack.
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置强密码要求，并在连续登录失败尝试的情况下锁定账户——例如，连续五次失败尝试。这可以防止暴力攻击。
- en: Enable MFA for privileged accounts such as back-office admin, back-office staff
    accounts, and more.
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为特权账户如后台办公室管理员、后台办公室员工账户等启用多因素认证（MFA）。
- en: Configure session timeouts, invalidate your session on logout, and clear cookies.
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置会话超时，在注销时使会话无效，并清除 cookies。
- en: Enforce authorization on all secured endpoints and on the client side.
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在所有受保护端点和客户端上强制执行授权。
- en: Store keys/passwords in a secured location such as key vaults.
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将密钥/密码存储在安全位置，例如密钥库中。
- en: If you are using Azure AD, register each logical/environment-specific application
    separately.
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您正在使用Azure AD，请分别注册每个逻辑/环境特定的应用程序。
- en: Do not store sensitive information in plain text.
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要以纯文本形式存储敏感信息。
- en: Ensure proper exception handling.
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保适当的异常处理。
- en: Perform a security/malware scan on files that are uploaded.
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对上传的文件进行安全/恶意软件扫描。
- en: Prevent cross-site scripting attacks—always HTML-encode user input data.
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防止跨站脚本攻击——始终对用户输入数据进行HTML编码。
- en: Prevent SQL injection attacks by parameterizing SQL queries and using stored
    procedures.
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过参数化SQL查询和使用存储过程来防止SQL注入攻击。
- en: Prevent cross-site request forgery attacks—use a `ValidateAntiForgeryToken`
    filter on an action, a controller, or globally.
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防止跨站请求伪造攻击——在操作、控制器或全局上使用`ValidateAntiForgeryToken`过滤器。
- en: Enforce **Cross-Origin Requests** (**CORS**) in middleware using this policy.
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在中间件中使用此策略强制执行**跨源请求**（**CORS**）。
- en: While the provided best practices and guidance are good to start with, you need
    to always consider an application's context and continuously assess and enhance
    your application to address security vulnerabilities and threats.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然提供的一些最佳实践和指导是好的起点，但您需要始终考虑应用程序的上下文，并持续评估和增强您的应用程序，以解决安全漏洞和威胁。
- en: Summary
  id: totrans-336
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we understood what authentication is and the key elements of
    authentication in ASP.NET Core. We explored the different options offered by the
    ASP.NET Core framework and learned how ASP.NET Core Identity helps to quickly
    add authentication to your application. We discussed OAuth 2.0 and grant flows
    and understood how they make things easier when you need to authenticate and connect
    to multiple API services.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了什么是身份验证以及ASP.NET Core中身份验证的关键要素。我们探讨了ASP.NET Core框架提供的不同选项，并学习了如何使用ASP.NET
    Core Identity快速将身份验证添加到您的应用程序中。我们讨论了OAuth 2.0和授权流程，并了解了它们在您需要身份验证和连接到多个API服务时如何简化事情。
- en: Also, we looked at configuring Azure AD as your identity service, using external
    authentication providers such as Google or Facebook in your application, and using
    Windows Authentication in an ASP.NET Core application. We concluded this chapter
    by discussing a few best practices to follow while developing server-side and
    client-side applications.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还探讨了将Azure AD配置为您的身份服务，在您的应用程序中使用外部身份验证提供程序，如Google或Facebook，以及在ASP.NET
    Core应用程序中使用Windows身份验证。我们通过讨论在开发服务器端和客户端应用程序时应该遵循的一些最佳实践来结束本章。
- en: In the next chapter, we will see what authorization is and how it helps to control
    access to your resources.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将了解授权是什么以及它是如何帮助控制对您资源的访问的。
- en: Questions
  id: totrans-340
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What information can be derived from a JWT?
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从JWT中可以提取哪些信息？
- en: a. Issuer
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: a. 发行者
- en: b. Expiry
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: b. 过期
- en: c. Scopes
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: c. 范围
- en: d. Subject
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: d. 主题
- en: e. All of the above
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: e. 以上所有
- en: '**Answer: e**'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案：e**'
- en: What are the recommended OAuth grant flows for single-page apps?
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 推荐用于单页应用的OAuth授权流程是什么？
- en: a. Client credentials flow
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: a. 客户端凭据流程
- en: b. Implicit flow
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: b. 隐式流程
- en: c. Code grant flow
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: c. 代码授权流程
- en: d. On-behalf-of flow
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: d. 代表流程
- en: '**Answer: b and c**'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案：b 和 c**'
- en: What are the minimum required NuGet packages to integrate with Azure AD?
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 集成Azure AD所需的最小NuGet包是什么？
- en: a. `Microsoft.AspNetCore.Identity`
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: a. `Microsoft.AspNetCore.Identity`
- en: b. `Microsoft.Identity.Web.UI`
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: b. `Microsoft.Identity.Web.UI`
- en: c. `Microsoft.AspNetCore.Identity.UI`
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: c. `Microsoft.AspNetCore.Identity.UI`
- en: d. `Microsoft.Identity.Web`
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: d. `Microsoft.Identity.Web`
- en: '**Answer: d**'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '**答案：d**'
- en: Further reading
  id: totrans-360
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'To learn more about authentication, you can refer to the following resources:'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于身份验证的信息，您可以参考以下资源：
- en: '[https://docs.microsoft.com/en-us/aspnet/core/security/authentication/?view=aspnetcore-6.0](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/?view=aspnetcore-6.0)'
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/aspnet/core/security/authentication/?view=aspnetcore-6.0](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/?view=aspnetcore-6.0)'
- en: '[https://docs.microsoft.com/en-in/azure/active-directory-b2c](https://docs.microsoft.com/en-in/azure/active-directory-b2c)'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-in/azure/active-directory-b2c](https://docs.microsoft.com/en-in/azure/active-directory-b2c)'
