["```cs\ndotnet new console -n FtpClientSample\n```", "```cs\nstatic async Task<string> GetDirectoryListing() {\n  StringBuilder strBuilder = new StringBuilder();\n  FtpWebRequest req = (FtpWebRequest)WebRequest.Create(\"ftp://localhost\");\n  req.Method = WebRequestMethods.Ftp.ListDirectoryDetails;\n  ...\n}\n```", "```cs\nreq.Credentials = new NetworkCredential(\"s_burns\", \"test_password\");\n```", "```cs\nusing (FtpWebResponse resp = (FtpWebResponse)await req.GetResponseAsync()) {\n\n  using (var respStream = resp.GetResponseStream()) {\n    using (var reader = new StreamReader(respStream)) {\n      strBuilder.Append(reader.ReadToEnd());\n\n      strBuilder.Append($\"Request returned status:  {resp.StatusDescription}\");\n    }\n  }\n}\nreturn strBuilder.ToString();\n```", "```cs\n[directoryFlag][owner-set][group-set][other-set]\n```", "```cs\npublic static async Task<string> RequestFile() {\n  StringBuilder strBuilder = new StringBuilder();\n  FtpWebRequest req = (FtpWebRequest)WebRequest.Create(\"ftp://localhost/FitnessApp/Startup.cs\");\n  req.Method = WebRequestMethods.Ftp.DownloadFile;\n\n  req.Credentials = new NetworkCredential(\"s_burns\", \"test_password\");\n  req.UsePassive = true;\n  ...\n  using(FtpWebResponse resp = (FtpWebResponse) await req.GetResponseAsync()) {\n    ...\n  }\n}\n```", "```cs\nusing (var respStream = resp.GetResponseStream()) {\n  strBuilder.Append(resp.StatusDescription);\n  if(!File.Exists(@\"../Copy_Startup.cs\")) {\n    using (var file = File.Create(@\"../Copy_Startup.cs\")) {\n      //We only use this to create the file in the path if it doesn't exist.\n    }\n  }\n  using (var respReader = new StreamReader(respStream)) {\n    using (var fileWriter = File.OpenWrite(@\"../Copy_Startup.cs\")) {\n      using (var strWriter = new StreamWriter(fileWriter)) {\n        await strWriter.WriteAsync(respReader.ReadToEnd());\n      }\n    }\n  }\n}\n\nreturn strBuilder.ToString();\n```", "```cs\nstatic async Task Main(string[] args) {\n  Console.WriteLine(await GetDirectoryListing());\n  Console.WriteLine(await RequestFile());\n}\n```", "```cs\npublic static async Task<string> PushFile() {\n    StringBuilder strBuilder = new StringBuilder();\n    FtpWebRequest req = (FtpWebRequest)WebRequest.Create(\"ftp://localhost/Program.cs\");\n    req.Method = WebRequestMethods.Ftp.UploadFile;\n\n    req.Credentials = new NetworkCredential(\"s_burns\", \"test_password\");\n    req.UsePassive = true;\n```", "```cs\nbyte[] fileBytes;\n\nusing (var reader = new StreamReader(@\"Program.cs\")) {\n    fileBytes = Encoding.ASCII.GetBytes(reader.ReadToEnd());\n}\n\nreq.ContentLength = fileBytes.Length;\n\nusing (var reqStream = await req.GetRequestStreamAsync()) {\n    await reqStream.WriteAsync(fileBytes, 0, fileBytes.Length);\n}\n```", "```cs\n  using (FtpWebResponse resp = (FtpWebResponse)req.GetResponse()) {\n        strBuilder.Append(resp.StatusDescription);\n  }\n\n  return strBuilder.ToString();\n}\n```"]