["```cs\nPhysics.Gravity = Vector3(0, 0, 0,); \n```", "```cs\npublic enum PhysicsPuzzlePieceType\n{\n    First = 0,\n    Second,\n    Third,\n    Intro,\n    Any\n} \n```", "```cs\npublic class PhysicsPuzzlePiece : MonoBehaviour\n{\n    public PhysicsPuzzlePieceType pieceType;\n} \n```", "```cs\npublic static UnityAction<PhysicsPuzzleTrigger, PhysicsPuzzlePiece> OnPieceSlotted; \n```", "```cs\npublic class StaticTest\n{\n    public static int StaticInt = 10;\n} \n```", "```cs\npublic class UseStaticTest\n{\n    int BaseNumber = 0;\n    int NewNumber = BaseNumber + StaticTest.StaticInt;\n} \n```", "```cs\nusing UnityEngine.UI;\npublic class UnityActionTest : MonoBehaviour\n{\n    public Button AddButton;\n    private UnityAction MathAction;\n    float TimesClicked;\n    void Start()\n    {\n        AddButton = GetComponent<Button>();\n        MathAction += AddOne;\n        MathAction += CheckEven;\n        AddButton.onClick.AddListener(MathAction);\n    }\n    void AddOne()\n    {\n        TimesClicked++;\n        Debug.Log(\"Clicked count : \" + TimesClicked);\n    }\n    void CheckEven()\n    {\n        if (TimesClicked % 2 == 0)\n        {\n            Debug.Log(\"This click was even!\");\n        }\n        else\n        {\n            Debug.Log(\"ThIs ClIcK WaS OdD.\");\n        } \n    }\n} \n```", "```cs\nMathAction += AddOne \n```", "```cs\nMathAction = MathAction + AddOne; \n```", "```cs\nvoid Update()\n{\n    if (Input.GetKeyDown(\"f\"))\n    {\n        StartCoroutine(Fade());\n    }\n}\nIEnumerator Fade()\n{\n    Color c = renderer.material.color;\n    for (float alpha = 1f; alpha >= 0; alpha -= 0.1f)\n    {\n        c.a = alpha;\n        renderer.material.color = c;\n        yield return null;\n    }\n} \n```", "```cs\nStartCoroutine(TransitionTween()); \n```", "```cs\nwhile (Time.time - tweenStart < tweenDuration)\n        {\n            float delta = (Time.time - tweenStart) / tweenDuration;\n            tweenPiece.position = Vector3.Lerp(tweenStartPos, transform.position, delta);\n            tweenPiece.eulerAngles = Vector3.Slerp(tweenStartRot, transform.eulerAngles, delta);\n            yield return null;\n        } \n```", "```cs\ntweenPiece.position = transform.position;\ntweenPiece.eulerAngles = transform.eulerAngles;\nOnPieceSlotted?.Invoke(this,tweenPiece.GetComponent<PhysicsPuzzlePiece>()); \n```", "```cs\nOnPieceSlotted?.Invoke(this, tweenPiece.GetComponent<PhysicsPuzzlePiece>()); \n```", "```cs\nvoid OnPieceSlotted(PhysicsPuzzleTrigger trigger, PhysicsPuzzlePiece piece)\n    {\n        if (piece.pieceType == PhysicsPuzzlePieceType.Intro)\n        {\n            Debug.Log(\"FINAL PUZZLE INTRO SOLVED. Trigger environment transition here\");\n            tempBridge.SetActive(true);\n        }\n        else\n        {\n            numPiecesSlotted += 1;\n            if (numPiecesSlotted >= 3)\n            {\n                Debug.Log(\"FINAL PUZZLE SOLVED! Trigger portal event\");\n            }\n        }\n    } \n```"]