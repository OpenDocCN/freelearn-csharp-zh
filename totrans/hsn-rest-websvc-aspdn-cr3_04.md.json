["```cs\ndotnet new\n```", "```cs\ndotnet new console -n HelloWorld\n```", "```cs\n.\n├── HelloWorld.csproj\n├── Program.cs\n└── obj\n    ├── ...\n```", "```cs\ndotnet build\ndotnet run\n```", "```cs\nHello World!\n```", "```cs\n.\n├── HelloWorld.csproj\n├── Program.cs\n├── bin\n│   └── Debug\n│       └── netcoreapp3.1\n│           ├── ...\n└── obj\n├── Debug\n│   └── netcoreapp3.1\n│       ├── ...\n```", "```cs\n<Project Sdk=\"Microsoft.NET.Sdk\">\n    <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>netcoreapp3.0</TargetFramework>\n    </PropertyGroup>\n</Project>\n\n```", "```cs\n<Project Sdk=\"Microsoft.NET.Sdk\">\n    <PropertyGroup>\n        <OutputType>Exe</OutputType>\n<TargetFrameworks>netcoreapp3.1;netstandard2.0</TargetFrameworks>\n    </PropertyGroup>\n</Project>\n```", "```cs\n<Project Sdk=\"Microsoft.NET.Sdk\">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFrameworks>netcoreapp3.1;netstandard2.0</TargetFrameworks>\n  </PropertyGroup> \n ...\n\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard2.0' \">\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.2.0\" />\n  </ItemGroup>\n</Project>\n```", "```cs\nusing System;\n\nnamespace HelloWorld \n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n Console.WriteLine(\"Hello World!\");\n        }\n    }\n}\n```", "```cs\nusing System;\nusing System.Threading.Tasks;\n\nnamespace HelloWorld\n{\n    class Program\n    {\n         static async Task Main(string[] args)\n         {\n             await Task.Delay(10);\n             Console.WriteLine(\"Hello World!\");\n         }\n     }\n}\n```", "```cs\ndotnet new webapi -n SampleAPI\n\n```", "```cs\n.\n├── Controllers\n│ └── WeatherForecastController.cs\n├── Program.cs\n├── Properties\n│ └── launchSettings.json\n├── SampleAPI.csproj\n├── Startup.cs\n├── WeatherForecast.cs\n├── appsettings.Development.json\n├── appsettings.json\n└── obj\n```", "```cs\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\n    <PropertyGroup>\n <TargetFramework>netcoreapp3.1</TargetFramework>\n    </PropertyGroup>\n</Project>\n\n```", "```cs\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing Microsoft.AspNetCore.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.Hosting;\nusing Microsoft.Extensions.Logging;\n\nnamespace SampleAPI\n{\n    public class Program\n    {\n        public static void Main(string[] args)\n        {\n            CreateHostBuilder(args).Build().Run();\n        }\n\n        public static IHostBuilder CreateHostBuilder(string[] \n        args) =>\n            Host.CreateDefaultBuilder(args)\n                .ConfigureWebHostDefaults(webBuilder =>\n                {\n                    webBuilder.UseStartup<Startup>();\n                });\n    }\n}\n```", "```cs\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.AspNetCore.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Hosting;\n\nnamespace SampleAPI\n{\n    public class Startup\n    {\n        public Startup(IConfiguration configuration)\n        {\n            Configuration = configuration;\n        }\n\n        public IConfiguration Configuration { get; }\n\n        public void ConfigureServices(IServiceCollection services)\n        {\n            services.AddControllers();\n        }\n\n        public void Configure(IApplicationBuilder app, \n        IWebHostEnvironment env)\n        {\n            if (env.IsDevelopment())\n            {\n                app.UseDeveloperExceptionPage();\n            }\n\n            app.UseHttpsRedirection();\n\n            app.UseRouting();\n\n            app.UseAuthorization();\n\n            app.UseEndpoints(endpoints =>\n            {\n                endpoints.MapControllers();\n            });\n        }\n    }\n}\n```", "```cs\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.Extensions.Logging;\n\nnamespace SampleAPI.Controllers\n{\n    [ApiController]\n    [Route(\"[controller]\")]\n    public class WeatherForecastController : ControllerBase\n    {\n        private static readonly string[] Summaries = new[]\n        {\n            \"Freezing\", \"Bracing\", \"Chilly\", \"Cool\", \"Mild\", \"Warm\", \n            \"Balmy\", \"Hot\", \"Sweltering\", \"Scorching\"\n        };\n\n        private readonly ILogger<WeatherForecastController> _logger;\n\n        public WeatherForecastController(ILogger<WeatherForecastController> \n        logger)\n        {\n            _logger = logger;\n        }\n\n        [HttpGet]\n        public IEnumerable<WeatherForecast> Get()\n        {\n            var rng = new Random();\n            return Enumerable.Range(1, 5).Select(index => \n            new WeatherForecast\n            {\n                Date = DateTime.Now.AddDays(index),\n                TemperatureC = rng.Next(-20, 55),\n                Summary = Summaries[rng.Next(Summaries.Length)]\n            })\n            .ToArray();\n        }\n    }\n}\n```"]