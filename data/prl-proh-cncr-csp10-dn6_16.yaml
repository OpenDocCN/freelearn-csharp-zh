- en: Assessments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估
- en: This section contains answers to questions from all chapters.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本节包含所有章节的问题答案。
- en: '[*Chapter 1*](B18552_01_ePub.xhtml#_idTextAnchor014), Managed Threading Concepts'
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第 1 章*](B18552_01_ePub.xhtml#_idTextAnchor014)，托管线程概念'
- en: A managed thread is a thread that is created in .NET-managed code with the `System.Threading.Thread`
    object.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 托管线程是在 .NET 托管代码中使用 `System.Threading.Thread` 对象创建的线程。
- en: Set the `Thread.IsBackground` property to `true` before calling `Thread.Start()`.
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在调用 `Thread.Start()` 之前将 `Thread.IsBackground` 属性设置为 `true`。
- en: .NET will throw a `ThreadStateException` exception.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: .NET 将抛出 `ThreadStateException` 异常。
- en: .NET prioritizes managed threads mostly based on their `Thread.Priority` value.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: .NET 主要根据线程的 `Thread.Priority` 值来优先处理托管线程。
- en: '`ThreadPriority.Highest`.'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ThreadPriority.Highest`。'
- en: '`Thread.Abort()` is not supported by .NET 6\. The code will not compile.'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`.NET 6` 不支持 `Thread.Abort()`。代码将无法编译。'
- en: Add an object parameter to the method to be started by the new thread, and pass
    the data when calling `Thread.Start(data)`.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将对象参数添加到新线程启动的方法中，并在调用 `Thread.Start(data)` 时传递数据。
- en: Pass the delegate to the cancellation token’s `Register` method.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将委托传递给取消令牌的 `Register` 方法。
- en: '[*Chapter 2*](B18552_02_ePub.xhtml#_idTextAnchor034), Evolution of Multithreaded
    Programming in .NET'
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第 2 章*](B18552_02_ePub.xhtml#_idTextAnchor034)，.NET 中多线程编程的演变'
- en: '`ThreadPool `'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ThreadPool `'
- en: C# 5.0
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: C# 5.0
- en: .NET Framework 4.5
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: .NET Framework 4.5
- en: .NET Core 3.0
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: .NET Core 3.0
- en: '`Task`, `Task<T>`, `ValueTask`, or `ValueTask<T>`'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Task`、`Task<T>`、`ValueTask` 或 `ValueTask<T>`'
- en: '`ConcurrentDictionary<TKey, TValue>`'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ConcurrentDictionary<TKey, TValue>`'
- en: '`BlockingCollection<T>`'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`BlockingCollection<T>`'
- en: '**Parallel LINQ** (**PLINQ**)'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**并行 LINQ** (**PLINQ**)'
- en: '[*Chapter 3*](B18552_03_ePub.xhtml#_idTextAnchor061), Best Practices for Managed
    Threading'
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第 3 章*](B18552_03_ePub.xhtml#_idTextAnchor061)，托管线程的最佳实践'
- en: Singleton.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单例。
- en: '`ThreadStatic`.'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ThreadStatic`。'
- en: A deadlock occurs when multiple threads are all waiting to access a locked resource
    and cannot proceed.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当多个线程都在等待访问一个被锁定的资源且无法继续时，会发生死锁。
- en: '`Monitor.TryEnter`.'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Monitor.TryEnter`。'
- en: '`Interlocked`.'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Interlocked`。'
- en: '`Interlocked.Add`.'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Interlocked.Add`。'
- en: '`MaxDegreeOfParallelism`.'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`MaxDegreeOfParallelism`。'
- en: Use the `WithDegreeOfParallelism` extension method.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `WithDegreeOfParallelism` 扩展方法。
- en: '`ThreadPool.GetMinThreads()`.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ThreadPool.GetMinThreads()`。'
- en: '[*Chapter 4*](B18552_04_ePub.xhtml#_idTextAnchor072), User Interface Responsiveness
    and Threading'
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第 4 章*](B18552_04_ePub.xhtml#_idTextAnchor072)，用户界面响应性和线程'
- en: '`Task` or `Task<T>`.'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Task` 或 `Task<T>`。'
- en: '`Task.WhenAll`.'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Task.WhenAll`。'
- en: '`Task.Factory.StartNew`.'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Task.Factory.StartNew`。'
- en: A background thread on `ThreadPool`.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ThreadPool` 的后台线程。'
- en: '`Application.Current.Dispatcher.Invoke`.'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Application.Current.Dispatcher.Invoke`。'
- en: '`this.BeginInvoke`.'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`this.BeginInvoke`。'
- en: Check the `this.InvokeRequired` property.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查 `this.InvokeRequired` 属性。
- en: '[*Chapter 5*](B18552_05_ePub.xhtml#_idTextAnchor082), Asynchronous Programming
    with C#'
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第 5 章*](B18552_05_ePub.xhtml#_idTextAnchor082)，使用 C# 进行异步编程'
- en: '`Task.Result`.'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Task.Result`。'
- en: '`Task.WhenAll()`.'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Task.WhenAll()`。'
- en: '`Task.WaitAll()`.'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Task.WaitAll()`。'
- en: '`Task`, `Task<TResult>`, `ValueTask`, or `ValueTask<TResult>`.'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Task`、`Task<TResult>`、`ValueTask` 或 `ValueTask<TResult>`。'
- en: I/O-bound operations such as a file or network access are best suited for async
    methods.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: I/O 密集型操作，如文件或网络访问，最适合异步方法。
- en: False. It is a best practice to always suffix async methods with `Async`.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误。始终以 `Async` 后缀异步方法是一种最佳实践。
- en: '`Task.Run`.'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Task.Run`。'
- en: '[*Chapter 6*](B18552_06_ePub.xhtml#_idTextAnchor098), Parallel Programming
    Concepts'
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第 6 章*](B18552_06_ePub.xhtml#_idTextAnchor098)，并行编程概念'
- en: '`Parallel.For`.'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Parallel.For`。'
- en: '`Parallel.ForEachAsync`.'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Parallel.ForEachAsync`。'
- en: '`Parallel.Invoke`.'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Parallel.Invoke`。'
- en: '`TaskCreationOptions.AttachToParent`.'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`TaskCreationOptions.AttachToParent`。'
- en: '`TaskCreationOptions.DenyAttach`.'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`TaskCreationOptions.DenyAttach`。'
- en: '`Task.Run` will always deny child tasks from attaching. Also, `Task.Run` has
    no overloaded methods to provide `TaskCreationOptions`.'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Task.Run` 将始终拒绝子任务附加。此外，`Task.Run` 没有重载方法来提供 `TaskCreationOptions`。'
- en: No, regular `for` and `foreach` loops can be faster if each loop iteration is
    fast-running and/or there are only a few iterations of the loop.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，如果每个循环迭代运行得快，并且/或者循环迭代次数很少，则常规 `for` 和 `foreach` 循环可能会更快。
- en: '[*Chapter 7*](B18552_07_ePub.xhtml#_idTextAnchor120), Task Parallel Library
    (TPL) and Dataflow'
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第 7 章*](B18552_07_ePub.xhtml#_idTextAnchor120)，任务并行库 (TPL) 和数据流'
- en: 'The following are the answers to this chapter’s questions:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是该章节问题的答案：
- en: '`JoinBlock`.'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`JoinBlock`。'
- en: '`BufferBlock` is a propagator block.'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`BufferBlock` 是一个传播块。'
- en: '`BufferBlock`.'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`BufferBlock`。'
- en: '`JoinTo()`.'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`JoinTo()`。'
- en: '`Complete()`.'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Complete()`。'
- en: '`SendAsync()`.'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`SendAsync()`。'
- en: '`ReceiveAsync()`.'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ReceiveAsync()`。'
- en: '[*Chapter 8*](B18552_08_ePub.xhtml#_idTextAnchor130), Parallel Data Structures
    and Parallel LINQ'
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第 8 章*](B18552_08_ePub.xhtml#_idTextAnchor130)，并行数据结构和并行 LINQ'
- en: '`AsParallel()`.'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`AsParallel()`.'
- en: '`AsSequential()`.'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`AsSequential()`.'
- en: '`AsOrdered()`.'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`AsOrdered()`.'
- en: '`ForAll()`.'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ForAll()`.'
- en: '`AsOrdered()` can significantly decrease performance for a query.'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`AsOrdered()` 可以显著降低查询的性能。'
- en: '`OrderBy` and `OrderByDescending`. They will default to `ParallelMergeOptions.FullyBuffered`.'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`OrderBy` 和 `OrderByDescending`。它们将默认为 `ParallelMergeOptions.FullyBuffered`。'
- en: No. PLINQ has additional overhead that can cause queries on smaller datasets
    or simple queries to be slower.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: No. PLINQ 有额外的开销，这可能导致对较小数据集或简单查询的查询速度变慢。
- en: '`ParallelMergeOptions.NotBuffered`.'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ParallelMergeOptions.NotBuffered`.'
- en: '[*Chapter 9*](B18552_09_ePub.xhtml#_idTextAnchor146), Working with Concurrent
    Collections in .NET'
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第9章*](B18552_09_ePub.xhtml#_idTextAnchor146)，在 .NET 中使用并发集合'
- en: '`BlockingCollection<T>`.'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`BlockingCollection<T>`.'
- en: '`ConcurrentQueue<T>`.'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ConcurrentQueue<T>`.'
- en: '`BlockingCollection<T>`.'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`BlockingCollection<T>`.'
- en: '`ConcurrentDictionary<TKey, TValue>`.'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ConcurrentDictionary<TKey, TValue>`.'
- en: '`Enqueue()`.'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Enqueue()`.'
- en: '`TryAdd()` and `TryGetValue()`.'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`TryAdd()` 和 `TryGetValue()`。'
- en: No. Always add your own synchronization mechanisms when using extension methods
    with concurrent collections, including standard LINQ operators.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: No. 在使用并发集合的扩展方法时，始终添加自己的同步机制，包括标准 LINQ 操作符。
- en: '[*Chapter 10*](B18552_10_ePub.xhtml#_idTextAnchor158), Debugging Multithreaded
    Applications with Visual Studio'
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第10章*](B18552_10_ePub.xhtml#_idTextAnchor158)，使用Visual Studio调试多线程应用程序'
- en: Use the **Attach to Process** window or set multiple startup projects in the
    solution file.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**附加到进程**窗口或在解决方案文件中设置多个启动项目。
- en: They are grouped by process.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它们按进程分组。
- en: Right-click in the window and select **Columns**.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在窗口中右键单击并选择**列**。
- en: The **Parallel Stacks** window.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**并行堆栈**窗口。'
- en: '`.PNG` files.'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`.PNG` 文件。'
- en: Four.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 四.
- en: The **Debug Location** toolbar.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**调试位置**工具栏。'
- en: Click the **Flag Just My Code** button.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**仅我的代码**按钮。
- en: '[*Chapter 11*](B18552_11_ePub.xhtml#_idTextAnchor173), Canceling Asynchronous
    Work'
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第11章*](B18552_11_ePub.xhtml#_idTextAnchor173)，取消异步工作'
- en: '`CancellationToken.IsCancellationRequested`'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`CancellationToken.IsCancellationRequested`'
- en: '`CancellationTokenSource`'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`CancellationTokenSource`'
- en: '`OperationCanceledException`'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`OperationCanceledException`'
- en: Register callback
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册回调
- en: '`ManualResetEventSlim`'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ManualResetEventSlim`'
- en: '`ManualResetEventSlim.Reset`'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ManualResetEventSlim.Reset`'
- en: '`CancellationTokenSource.CreateLinkedTokenSource`'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`CancellationTokenSource.CreateLinkedTokenSource`'
- en: '[*Chapter 12*](B18552_12_ePub.xhtml#_idTextAnchor186), Unit Testing Async,
    Concurrent, and Parallel Code'
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第12章*](B18552_12_ePub.xhtml#_idTextAnchor186)，单元测试异步、并发和并行代码'
- en: '`Fact`'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Fact`'
- en: '`SpinLock.WaitUntil`'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`SpinLock.WaitUntil`'
- en: '`AggregateException`'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`AggregateException`'
- en: '`Exception`'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Exception`'
- en: '`Assert.NotNull`'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Assert.NotNull`'
- en: '**Test Explorer **'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**测试资源管理器 **'
- en: MSTest, NUnit, and xUnit .NET
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: MSTest、NUnit 和 xUnit .NET
- en: ReSharper, Rider, and the dotMemory Unit standalone console runner
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ReSharper、Rider 和 dotMemory 单独控制台运行器
