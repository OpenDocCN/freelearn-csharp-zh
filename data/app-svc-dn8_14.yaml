- en: '14'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '14'
- en: Building Web User Interfaces Using ASP.NET Core
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 ASP.NET Core 构建 Web 用户界面
- en: This chapter is about building web user interfaces with ASP.NET Core. You will
    learn about ASP.NET Core MVC views, Razor syntax, HTML and Tag Helpers, internationalizing
    your website, and how to use Bootstrap for quick user interface prototyping.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章是关于使用 ASP.NET Core 构建Web用户界面。您将了解 ASP.NET Core MVC 视图、Razor 语法、HTML 和标签助手、网站国际化以及如何使用
    Bootstrap 进行快速用户界面原型设计。
- en: 'This chapter will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Setting up an ASP.NET Core MVC website
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 ASP.NET Core MVC 网站
- en: Defining web user interfaces with Razor views
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Razor 视图定义 Web 用户界面
- en: Localizing and globalizing with ASP.NET Core
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 ASP.NET Core 进行本地化和全球化
- en: Defining web user interfaces with Tag Helpers
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用标签助手定义 Web 用户界面
- en: Output caching
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输出缓存
- en: Setting up an ASP.NET Core MVC website
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 ASP.NET Core MVC 网站
- en: 'The **Model-View-Controller** (**MVC**) design pattern allows a clean separation
    between technical concerns, as shown in the following list:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**模型-视图-控制器**（**MVC**）设计模式允许在以下列表中看到的技术关注点之间进行清晰的分离：'
- en: '**Models**: Classes that represent the data entities and view models used on
    the website.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型**：代表网站中使用的实体数据和视图模型的类。'
- en: '**Views**: Razor files, that is, `.cshtml` files, that render data in view
    models into HTML web pages. Blazor uses the `.razor` file extension, but do not
    confuse them with Razor files!'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视图**：Razor 文件，即 `.cshtml` 文件，将视图模型中的数据渲染成 HTML 网页。Blazor 使用 `.razor` 文件扩展名，但不要将它们与
    Razor 文件混淆！'
- en: '**Controllers**: Classes that execute code when an HTTP request arrives at
    the web server. The controller methods usually create a view model that may contain
    entity models and pass it to a view to generate an HTTP response to send back
    to the web browser or other client.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**控制器**：当 HTTP 请求到达 Web 服务器时执行代码的类。控制器方法通常创建一个包含实体模型的可视模型，并将其传递给视图以生成 HTTP
    响应发送回 Web 浏览器或其他客户端。'
- en: 'ASP.NET Core has many Razor file types, which can be confusing because they
    all use the term “Razor”, so I will now remind you of them and highlight the important
    similarities and differences, as shown in *Table 14.1*:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: ASP.NET Core 有许多 Razor 文件类型，由于它们都使用“Razor”这个术语，可能会让人感到困惑，因此我现在将提醒您它们，并突出显示它们的重要相似性和差异，如
    *表 14.1* 所示：
- en: '| **Technology** | **Special filename** | **File extension** | **Directive**
    |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| **技术** | **特殊文件名** | **文件扩展名** | **指令** |'
- en: '| Razor Component (for Blazor) |  | `.razor` |  |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| Razor 组件（用于 Blazor） |  | `.razor` |  |'
- en: '| Razor Component (for Blazor with page routing) |  | `.razor` | `@page` |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| Razor 组件（用于 Blazor 和页面路由） |  | `.razor` | `@page` |'
- en: '| Razor Page |  | `.cshtml` | `@page` |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| Razor 页面 |  | `.cshtml` | `@page` |'
- en: '| Razor View (for MVC) |  | `.cshtml` |  |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| Razor 视图（用于 MVC） |  | `.cshtml` |  |'
- en: '| Razor Layout | `_{customname}` | `.cshtml` |  |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| Razor 布局 | `_{customname}` | `.cshtml` |  |'
- en: '| Razor View (partial) | `_{customname}` | `.cshtml` |  |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| Razor 视图（部分） | `_{customname}` | `.cshtml` |  |'
- en: '| Razor View Start | `_ViewStart` | `.cshtml` |  |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| Razor 视图开始 | `_ViewStart` | `.cshtml` |  |'
- en: '| Razor View Imports | `_ViewImports` | `.cshtml` |  |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| Razor 视图导入 | `_ViewImports` | `.cshtml` |  |'
- en: 'Table 14.1: Important similarities and differences between Razor files'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 表 14.1：Razor 文件之间的重要相似性和差异
- en: '**Warning!** Be careful to use the correct file extension and directive at
    the top of the file or you will get unexpected behavior.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**警告！**请务必在文件顶部使用正确的文件扩展名和指令，否则您可能会遇到意外的行为。'
- en: A Razor View file is technically identical to a Razor Layout or a Razor View
    (partial). That is why it is so important to follow the convention of prefixing
    a layout or partial view with an underscore.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Razor 视图文件在技术上与 Razor 布局或 Razor 视图（部分）相同。这就是为什么遵循在布局或部分视图中使用下划线前缀的约定如此重要的原因。
- en: 'What turns a Razor View into a Razor Layout is the name of the Razor file being
    set as the `Layout` property of another Razor file or the default layout in the
    `_ViewStart.cshtml` file, as shown in the following code:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Razor 视图转换为 Razor 布局的是将 Razor 文件名称设置为另一个 Razor 文件或 `_ViewStart.cshtml` 文件中的默认布局的
    `Layout` 属性，如下面的代码所示：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'What turns a Razor View into a Razor View (partial) is the Razor View name
    being used in a `<partial>` component on a page, as shown in the following code:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Razor 视图转换为 Razor 视图（部分）的是在页面上的 `<partial>` 组件中使用的 Razor 视图名称，如下面的代码所示：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Good Practice**: The naming convention for special and shared Razor files
    like layouts and partial views is to prefix them with an underscore `_`, for example,
    `_ViewStart.cshtml`, `_Layout.cshtml`, or `_Product.cshtml` (this might be a partial
    view for rendering a product).'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**良好实践**：对于布局和部分视图等特殊和共享Razor文件，命名约定是使用下划线`_`作为前缀，例如`_ViewStart.cshtml`、`_Layout.cshtml`或`_Product.cshtml`（这可能是用于渲染产品的部分视图）。'
- en: Creating an ASP.NET Core MVC website
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建ASP.NET Core MVC网站
- en: You will use a project template to create an ASP.NET Core MVC website project
    that has a local database for authenticating and authorizing users.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你将使用项目模板来创建一个具有本地数据库的ASP.NET Core MVC网站项目，用于认证和授权用户。
- en: Visual Studio 2022 defaults to using SQL Server LocalDB for the accounts database.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 2022默认使用SQL Server LocalDB作为账户数据库。
- en: Visual Studio Code (or more accurately the `dotnet` CLI tool) uses SQLite by
    default and you can specify a switch to use SQL Server LocalDB instead.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio Code（或更准确地说，`dotnet` CLI工具）默认使用SQLite，你可以指定一个选项来使用SQL Server LocalDB。
- en: 'Let’s see it in action:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看实际效果：
- en: 'Use your preferred code editor to create an ASP.NET Core MVC website project
    with authentication accounts stored in a database, as defined in the following
    list:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用你喜欢的代码编辑器创建一个ASP.NET Core MVC网站项目，其中认证账户存储在数据库中，如下所示列表：
- en: 'Project template: **ASP.NET Core Web App (Model-View-Controller) [C#]** / `mvc`'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目模板：**ASP.NET Core Web App (Model-View-Controller) [C#]** / `mvc`
- en: 'Project file and folder: `Northwind.Mvc`'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目文件和文件夹：`Northwind.Mvc`
- en: 'Solution file and folder: `Chapter14`'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案文件和文件夹：`Chapter14`
- en: 'Authentication type: **Individual Accounts** / `--auth Individual`'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 认证类型：**个人账户** / `--auth Individual`
- en: 'Configure for HTTPS: Selected.'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置HTTPS：已选择。
- en: 'Enable Docker: Cleared.'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用Docker：已清除。
- en: 'Do not use top-level statements: Cleared.'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要使用顶级语句：已清除。
- en: Build the `Northwind.Mvc` project.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建项目`Northwind.Mvc`。
- en: 'If you created the MVC project using Visual Studio 2022, then the database
    for authentication and authorization will be stored in SQL Server LocalDB. But
    the database does not yet exist. At a command prompt or terminal, in the `Northwind.Mvc`
    folder, enter the command to run database migrations so that the database used
    to store credentials for authentication is created, as shown in the following
    command:'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你使用Visual Studio 2022创建了MVC项目，那么认证和授权的数据库将存储在SQL Server LocalDB中。但是数据库尚不存在。在命令提示符或终端中，在`Northwind.Mvc`文件夹中，输入以下命令以运行数据库迁移，以便创建用于存储认证凭证的数据库，如下所示命令：
- en: '[PRE2]'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If you created the MVC project using `dotnet new`, then the database for authentication
    and authorization will be stored in SQLite and the file has already been created,
    named `app.db`.
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你使用`dotnet new`创建了MVC项目，那么认证和授权的数据库将存储在SQLite中，并且文件已经创建，命名为`app.db`。
- en: 'In the root folder for the MVC website project, in the `appsettings.json` file,
    note the connection string for the authentication database named `DefaultConnection`,
    as shown in the following configuration:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在MVC网站项目的根目录中，在`appsettings.json`文件中，注意名为`DefaultConnection`的认证数据库的连接字符串，如下所示配置：
- en: 'Using SQL Server LocalDB:'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用SQL Server LocalDB：
- en: '[PRE3]'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Using SQLite:'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用SQLite：
- en: '[PRE4]'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Exploring the default ASP.NET Core MVC website
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索默认的ASP.NET Core MVC网站
- en: 'Let’s review the behavior of the default ASP.NET Core MVC website project template:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾默认的ASP.NET Core MVC网站项目模板的行为：
- en: 'In the `Northwind.Mvc` project, expand the `Properties` folder, open the `launchSettings.json`
    file, and for the `https` profile, for its `applicationUrl` setting, change the
    port numbers to `5141` for `https` and `5142` for `http`, as shown in the following
    setting:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Northwind.Mvc`项目中，展开`Properties`文件夹，打开`launchSettings.json`文件，对于`https`配置，将其`applicationUrl`设置中的端口号更改为`https`的`5141`和`http`的`5142`，如下所示设置：
- en: '[PRE5]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Save the changes to the `launchSettings.json` file.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将更改保存到`launchSettings.json`文件。
- en: 'In your preferred code editor or at the command line, start the `Northwind.Mvc`
    project with the `https` profile and using Chrome as the browser:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你喜欢的代码编辑器或命令行中，使用`https`配置启动`Northwind.Mvc`项目，并使用Chrome浏览器：
- en: If you are using Visual Studio 2022, then select the `https` profile as the
    **Startup Project**, and **Google Chrome** as the **Web Browser**, then start
    the `Northind.Mvc` website project without debugging.
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你使用Visual Studio 2022，则选择`https`配置作为**启动项目**，并选择**Google Chrome**作为**网络浏览器**，然后不进行调试启动`Northind.Mvc`网站项目。
- en: 'If you are using Visual Studio Code, then at the command prompt or terminal,
    enter the following command: `dotnet run --launch-profile https`. Start Chrome
    and navigate to: `https://localhost:5141/`.'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您正在使用Visual Studio Code，那么在命令提示符或终端中，输入以下命令：`dotnet run --launch-profile https`。启动Chrome并导航到：`https://localhost:5141/`。
- en: On Windows, if the **Windows Defender Firewall** displays a **Windows Security
    Alert** because it “has blocked some features of this app,” then click **Allow
    access**.
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows上，如果**Windows Defender防火墙**显示**Windows安全警报**，因为它“已阻止此应用的一些功能”，则点击**允许访问**。
- en: In Chrome, open **Developer Tools**.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chrome中打开**开发者工具**。
- en: 'Refresh the home page and note the following, as shown in *Figure 14.1*:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 刷新主页并注意以下内容，如图14.1所示：
- en: The top navigation menu with links to **Home**, **Privacy**, **Register**, and
    **Login**. If the viewport width is 575 pixels or less, then the navigation collapses
    into a hamburger menu.
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶部导航菜单包含链接到**主页**、**隐私**、**注册**和**登录**。如果视口宽度为575像素或更小，则导航会折叠成汉堡菜单。
- en: The title of the website, **Northwind.Mvc**, shown in the header and footer.
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网站标题**Northwind.Mvc**，显示在页眉和页脚中。
- en: '![](img/B19587_14_01.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19587_14_01.png)'
- en: 'Figure 14.1: The ASP.NET Core MVC project template website home page'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.1：ASP.NET Core MVC项目模板网站主页
- en: Understanding visitor registration
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解访客注册
- en: By default, passwords must have at least one non-alphanumeric character, at
    least one digit (0-9), and at least one uppercase letter (A-Z). I use `Pa$$w0rd`
    in scenarios like this when I am just exploring.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，密码必须至少包含一个非字母数字字符，至少一个数字（0-9），以及至少一个大写字母（A-Z）。在这种情况下，我使用`Pa$$w0rd`进行探索。
- en: The MVC project template follows best practices for **double-opt-in** (**DOI**),
    meaning that after filling in an email address and password to register, an email
    is sent to the email address, and the visitor must click a link in that email
    to confirm that they want to register.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: MVC项目模板遵循**双重确认**（**DOI**）的最佳实践，这意味着在填写电子邮件地址和密码进行注册后，会向该电子邮件地址发送一封电子邮件，访客必须点击该电子邮件中的链接以确认他们想要注册。
- en: 'We have not yet configured an email provider to send that email, so we must
    simulate that step:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们尚未配置电子邮件提供商来发送该电子邮件，因此我们必须模拟这一步骤：
- en: Close the **Developer Tools** pane.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭**开发者工具**面板。
- en: In the top navigation menu, click **Register**.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部导航菜单中，点击**注册**。
- en: Enter an email and password, and then click the **Register** button. (I used
    `test@example.com` and `Pa$$w0rd`.)
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入电子邮件和密码，然后点击**注册**按钮。（我使用了`test@example.com`和`Pa$$w0rd`。）
- en: Click the link with the text **Click here to confirm your account** and note
    that you are redirected to a **Confirm email** web page that you could customize.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击带有文本**点击此处确认您的账户**的链接，并注意您被重定向到一个可以定制的**确认电子邮件**网页。
- en: In the top navigation menu, click **Login**, enter your email address and password
    (note that there is an optional checkbox to remember you, and there are links
    if the visitor has forgotten their password or they want to register as a new
    visitor), and then click the **Log in** button.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部导航菜单中，点击**登录**，输入您的电子邮件地址和密码（注意，有一个可选的复选框用于记住您，如果访客忘记了密码或想注册为新访客，则还有链接），然后点击**登录**按钮。
- en: Click your email address in the top navigation menu. This will navigate to an
    account management page. Note that you can set a phone number, change your email
    address, change your password, enable two-factor authentication (if you add an
    authenticator app), and download and delete your personal data. This last feature
    is good for compliance with legal regulations like the European GDPR.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击顶部导航菜单中的您的电子邮件地址。这将导航到一个账户管理页面。注意，您可以设置电话号码，更改电子邮件地址，更改密码，启用双因素认证（如果您添加了认证器应用程序），以及下载和删除您的个人数据。最后一个功能对于符合欧洲GDPR等法律法规很有用。
- en: Close Chrome, and then at the command prompt or terminal for the MVC website,
    press *Ctrl* + *C* to cleanly shut down the web server.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭Chrome，然后在MVC网站的命令提示符或终端中，按*Ctrl* + *C*干净地关闭Web服务器。
- en: Reviewing an MVC website project structure
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查看MVC网站项目结构
- en: 'In your code editor, in Visual Studio 2022 **Solution Explorer** (toggle on
    **Show All Files**) or Visual Studio Code **EXPLORER – SOLUTION EXPLORER**, review
    the structure of an MVC website project, as shown in *Figure 14.2*:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的代码编辑器中，在Visual Studio 2022 **解决方案资源管理器**（打开**显示所有文件**）或Visual Studio Code
    **资源管理器 – 解决方案资源管理器**中，查看MVC网站项目的结构，如图14.2所示：
- en: '![](img/B19587_14_02.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19587_14_02.png)'
- en: 'Figure 14.2: VS Code and VS 2022 Solution Explorers for an ASP.NET Core MVC
    project'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.2：VS Code和VS 2022解决方案资源管理器中的ASP.NET Core MVC项目
- en: 'We will look in more detail at some of these parts later, but for now, note
    the following:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在稍后更详细地查看这些部分，但就目前而言，请注意以下内容：
- en: '`Areas`: This folder contains nested folders and a file needed to integrate
    your website project with ASP.NET Core Identity, which is used for authentication.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Areas`：此文件夹包含用于将您的网站项目与 ASP.NET Core Identity 集成的嵌套文件夹和文件，该 Identity 用于身份验证。'
- en: '`bin`, `obj`: These folders contain temporary files needed during the build
    process and the compiled assemblies for the project. Solution Explorer for Visual
    Studio Code + C# Dev Kit does not show hidden folders like these, but you can
    see them in the folder view (labeled **CHAPTER14** in *Figure 14.2*).'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bin`、`obj`：这些文件夹包含在构建过程中需要的临时文件和项目的编译程序集。Visual Studio Code + C# Dev Kit 的解决方案资源管理器不显示此类隐藏文件夹，但您可以在文件夹视图中看到它们（在
    *图 14.2* 中标记为 **CHAPTER14**）。'
- en: '`Controllers`: This folder contains C# classes that have methods (known as
    actions) that fetch a model and pass it to a view, for example, `HomeController.cs`.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Controllers`：此文件夹包含具有方法（称为操作）的 C# 类，这些方法获取模型并将其传递到视图中，例如 `HomeController.cs`。'
- en: '`Data`: This folder contains Entity Framework Core migration classes used by
    the ASP.NET Core Identity system to provide data storage for authentication and
    authorization, for example, `ApplicationDbContext.cs`.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Data`：此文件夹包含 ASP.NET Core Identity 系统使用的 Entity Framework Core 迁移类，用于提供身份验证和授权的数据存储，例如
    `ApplicationDbContext.cs`。'
- en: '`Models`: This folder contains C# classes that represent all the data gathered
    together by a controller and passed to a view, for example, `ErrorViewModel.cs`.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Models`：此文件夹包含代表由控制器收集并传递到视图的所有数据的 C# 类，例如 `ErrorViewModel.cs`。'
- en: '`Properties`: This folder contains a configuration file for Kestrel (or IIS
    or IIS Express on Windows) named `launchSettings.json`, for launching the website
    during development. This file is only used on the local development machine and
    is not deployed to your production website.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Properties`：此文件夹包含一个用于在开发期间启动网站的 Kestrel（或 Windows 上的 IIS 或 IIS Express）配置文件，名为
    `launchSettings.json`。此文件仅在本地开发机器上使用，不会部署到您的生产网站。'
- en: '`Views`: This folder contains the `.cshtml` Razor files that combine HTML and
    C# code to dynamically generate HTML responses. The `_ViewStart.cshtml` file sets
    the default layout and `_ViewImports.cshtml` imports common namespaces used in
    all views like Tag Helpers:'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Views`：此文件夹包含将 HTML 和 C# 代码结合在一起以动态生成 HTML 响应的 `.cshtml` Razor 文件。`_ViewStart.cshtml`
    文件设置默认布局，`_ViewImports.cshtml` 导入所有视图中使用的通用命名空间，如标签助手：'
- en: '`Home`: This subfolder contains Razor files for the home and privacy pages.'
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Home`：此子文件夹包含用于主页和隐私页面的 Razor 文件。'
- en: '`Shared`: This subfolder contains Razor files for the shared layout, an error
    page, and two partial views for logging- in and validation scripts.'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Shared`：此子文件夹包含用于共享布局、错误页面和两个用于登录和验证脚本的局部视图的 Razor 文件。'
- en: '`wwwroot`: This folder contains static content used by the website, such as
    CSS for styling, libraries of JavaScript, JavaScript for this website project,
    and a `favicon.ico` file. You also put images and other static file resources
    like PDF documents in here. The project template includes Bootstrap and jQuery
    libraries.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wwwroot`：此文件夹包含网站使用的静态内容，例如用于样式的 CSS、JavaScript 库、此网站项目的 JavaScript 和 `favicon.ico`
    文件。您还可以在此处放置图像和其他静态文件资源，如 PDF 文档。项目模板包括 Bootstrap 和 jQuery 库。'
- en: '`appsettings.json` and `appsettings.Development.json`: These files contain
    settings that your website can load at runtime, for example, the database connection
    string for the ASP.NET Core Identity system and logging levels.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`appsettings.json` 和 `appsettings.Development.json`：这些文件包含在运行时网站可以加载的设置，例如，ASP.NET
    Core Identity 系统的数据库连接字符串和日志级别。'
- en: '`Northwind.Mvc.csproj`: This file contains project settings like the use of
    the Web .NET SDK, an entry for SQLite to ensure that the `app.db` file is copied
    to the website’s output folder, and a list of NuGet packages that your project
    requires such as EF Core for your chosen database provider, including:'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Northwind.Mvc.csproj`：此文件包含项目设置，例如使用 Web .NET SDK、SQLite 的条目以确保 `app.db` 文件被复制到网站的输出文件夹，以及项目所需的
    NuGet 包列表，例如为所选数据库提供程序提供的 EF Core，包括：'
- en: '`Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore`'
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore`'
- en: '`Microsoft.AspNetCore.Identity.EntityFrameworkCore`'
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Microsoft.AspNetCore.Identity.EntityFrameworkCore`'
- en: '`Microsoft.AspNetCore.Identity.UI`'
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Microsoft.AspNetCore.Identity.UI`'
- en: '`Microsoft.EntityFrameworkCore.Sqlite` or `Microsoft.EntityFrameworkCore.SqlServer`'
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Microsoft.EntityFrameworkCore.Sqlite` 或 `Microsoft.EntityFrameworkCore.SqlServer`'
- en: '`Microsoft.EntityFrameworkCore.Tools`'
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Microsoft.EntityFrameworkCore.Tools`'
- en: '`Program.cs`: This file defines an auto-generated `Program` class that contains
    the `<Main>$` entry point. It builds a pipeline for processing incoming HTTP requests
    and hosts the website using default options, like configuring the Kestrel web
    server and loading `appsettings`. It adds and configures services that your website
    needs, for example, ASP.NET Core Identity for authentication, SQLite or SQL Server
    for identity data storage, and so on, and routes for your application.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Program.cs`：此文件定义了一个自动生成的`Program`类，其中包含`<Main>$`入口点。它构建了一个处理传入HTTP请求的管道，并使用默认选项（如配置Kestrel
    Web服务器和加载`appsettings`）托管网站。它添加并配置了网站需要的服务，例如，用于身份验证的ASP.NET Core Identity，用于身份数据存储的SQLite或SQL
    Server等，以及为你的应用程序的路由。'
- en: If you choose to use SQLite instead of SQL Server for the ASP.NET Core Identity
    database, then you will also see a file named `app.db`. This is the SQLite database
    that stores registered visitors.
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你选择使用SQLite而不是SQL Server作为ASP.NET Core Identity数据库，那么你也会看到一个名为`app.db`的文件。这是存储已注册访客的SQLite数据库。
- en: Referencing an EF Core class library and registering a data context
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引用EF Core类库并注册数据上下文
- en: 'We will reference the EF Core model that you created in *Chapter 3*, *Building
    Entity Models for SQL Server Using EF Core*:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将参考你在**第3章**中创建的EF Core模型，即**使用EF Core为SQL Server构建实体模型**：
- en: 'In the `Northwind.Mvc.csproj` project file, treat warnings as errors and add
    a project reference to the Northwind database context project, as shown in the
    following markup:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Northwind.Mvc.csproj`项目文件中，将警告视为错误，并将对Northwind数据库上下文项目的项目引用添加到项目中，如下面的标记所示：
- en: '[PRE6]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `Include` path must not have a line break.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Include`路径不能有换行符。'
- en: 'At the command prompt or terminal, build the `Northwind.Mvc` project, as shown
    in the following command: `dotnet build`.'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令提示符或终端中，构建`Northwind.Mvc`项目，如下面的命令所示：`dotnet build`。
- en: 'In `Program.cs`, import the namespace to use the `AddNorthwindContext` extension
    method, as shown in the following code:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Program.cs`中，导入命名空间以使用`AddNorthwindContext`扩展方法，如下面的代码所示：
- en: '[PRE7]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In the section that adds services to the container, add a statement that registers
    `NorthwindContext` as a service, as shown in the following code:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在添加服务到容器的作用域中，添加一个将`NorthwindContext`注册为服务的语句，如下面的代码所示：
- en: '[PRE8]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Defining web user interfaces with Razor views
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Razor视图定义Web用户界面
- en: Let’s review how we can build the user interface of a web page in a modern ASP.NET
    Core MVC website.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下如何在现代ASP.NET Core MVC网站中构建网页的用户界面。
- en: Understanding Razor views
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解Razor视图
- en: In MVC, the V stands for *view*. The responsibility of a view is to transform
    a model into HTML or other formats.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在MVC中，V代表**视图**。视图的职责是将模型转换为HTML或其他格式。
- en: There are multiple **view engines** that could be used to do this. The default
    view engine is called **Razor**, and it uses the `@` symbol to indicate server-side
    code execution.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 有多个**视图引擎**可以用来做这件事。默认视图引擎称为**Razor**，它使用`@`符号来指示服务器端代码执行。
- en: 'Let’s review the home page view and how it uses a shared layout:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾主页视图以及它是如何使用共享布局的：
- en: 'In the `Views/Home` folder, open the `Index.cshtml` file and note the block
    of C# code wrapped in `@{ }`. This will execute first and can be used to store
    data that needs to be passed into a shared layout file, like the title of the
    web page, as shown in the following code:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Views/Home`文件夹中，打开`Index.cshtml`文件，注意被`@{ }`包裹的C#代码块。这将首先执行，可以用来存储需要传递到共享布局文件中的数据，例如网页的标题，如下面的代码所示：
- en: '[PRE9]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Note the static HTML content in the `<div>` element that uses Bootstrap classes
    like `text-center` and `display-4` for styling, as shown in the following markup:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意`<div>`元素中使用的静态HTML内容，它使用了Bootstrap类如`text-center`和`display-4`进行样式化，如下面的标记所示：
- en: '[PRE10]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In the `Views` folder, open the `_ViewImports.cshtml` file and note that it
    imports the namespace for the project and the namespace for the `Models` folder
    in the project, and then adds the ASP.NET Core Tag Helpers, which we will learn
    more about later in this chapter, as shown in the following code:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Views`文件夹中，打开`_ViewImports.cshtml`文件，注意它导入了项目命名空间和项目`Models`文件夹的命名空间，然后添加了ASP.NET
    Core Tag Helpers，我们将在本章后面了解更多关于它们的信息，如下面的代码所示：
- en: '[PRE11]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'In the `Views` folder, open the `_ViewStart.cshtml` file. It gets executed
    when the `View` method is called in a controller class. It is used to set defaults
    that apply to all views. For example, note that it sets the `Layout` property
    of all views to a shared layout file (without its file extension), as shown in
    the following markup:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Views` 文件夹中，打开 `_ViewStart.cshtml` 文件。它在控制器类中调用 `View` 方法时执行。它用于设置适用于所有视图的默认值。例如，注意它将所有视图的
    `Layout` 属性设置为共享布局文件（不带文件扩展名），如下所示：
- en: '[PRE12]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This file is not executed when a partial view is rendered, for example, when
    you call the `PartialView` method instead of the `View` method.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当渲染部分视图时，例如调用 `PartialView` 方法而不是 `View` 方法时，此文件不会执行。
- en: In the `Shared` folder, open the `_Layout.cshtml` file.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Shared` 文件夹中，打开 `_Layout.cshtml` 文件。
- en: 'Note that `<title>` is being set from the `ViewData` dictionary that was set
    earlier in the `Index.cshtml` view, as shown in the following markup:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意 `<title>` 是从之前在 `Index.cshtml` 视图中设置的 `ViewData` 字典中设置的，如下所示：
- en: '[PRE13]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The title is shown in the browser tab for the current page or the browser window.
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 标题显示在当前页面的浏览器标签或浏览器窗口中。
- en: 'Note the rendering of links to support Bootstrap and a site stylesheet, where
    `~` means the `wwwroot` folder in the project, as shown in the following markup:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意支持 Bootstrap 和网站样式的链接渲染，其中 `~` 表示项目中的 `wwwroot` 文件夹，如下所示：
- en: '[PRE14]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Note the rendering of a navigation bar in the header, as shown in the following
    markup:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意在页眉中渲染导航栏，如下所示：
- en: '[PRE15]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Note the rendering of a collapsible `<div>` containing a partial view named
    `_LoginPartial` for logging in, and hyperlinks to allow users to navigate between
    pages using ASP.NET Core Tag Helpers with attributes like `asp-controller` and
    `asp-action`, as shown in the following markup:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意渲染一个包含名为 `_LoginPartial` 的部分视图的可折叠 `<div>`，用于登录，以及允许用户使用具有 `asp-controller`
    和 `asp-action` 等属性的 ASP.NET Core 标签助手在页面之间导航的超链接，如下所示：
- en: '[PRE16]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The `<a>` elements use Tag Helper attributes named `asp-controller` and `asp-action`
    to specify the controller name and action name that will execute when the link
    is clicked on. The `asp-area` attribute can be used to organize and group pages
    within large, complex MVC websites. If you want to navigate to a feature in a
    Razor Class Library, then you can also use `asp-area` to specify the feature name.
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<a>` 元素使用名为 `asp-controller` 和 `asp-action` 的标签助手属性来指定当点击链接时将执行的控制器名称和操作名称。可以使用
    `asp-area` 属性对大型、复杂的 MVC 网站中的页面进行组织和分组。如果您想导航到 Razor 类库中的功能，则也可以使用 `asp-area`
    来指定功能名称。'
- en: 'Note the rendering of the body inside the `<main>` element, as shown in the
    following markup:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意在 `<main>` 元素内渲染的主体，如下所示：
- en: '[PRE17]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The `RenderBody` method injects the contents of a specific Razor view for a
    page like the `Index.cshtml` file at that point in the shared layout.
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`RenderBody` 方法在该点注入特定 Razor 视图的内容，例如 `Index.cshtml` 文件在共享布局中的内容。'
- en: 'Note the rendering of `<script>` elements at the bottom of the page so that
    it does not slow down the display of the page, and that you can add your own script
    blocks into an optional defined section named `Scripts`, as shown in the following
    markup:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意在页面底部渲染 `<script>` 元素，以避免减慢页面显示速度，并且可以将自己的脚本块添加到名为 `Scripts` 的可选定义部分中，如下所示：
- en: '[PRE18]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: In the `Shared` folder, open the `_LoginPartial.cshtml` file, and note the `if`
    statement, which if the visitor is logged in renders links to their account and
    to log out, or if they are not logged in, renders links to register or log in.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Shared` 文件夹中，打开 `_LoginPartial.cshtml` 文件，并注意 `if` 语句，如果访问者已登录，则渲染指向其账户和注销的链接，或者如果他们未登录，则渲染指向注册或登录的链接。
- en: 'In the `Shared` folder, open the `_ValidationScriptsPartial.cshtml` file, and
    note it contains two script blocks for adding validation to the client-side browser
    using JavaScript, as shown in the following markup:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Shared` 文件夹中，打开 `_ValidationScriptsPartial.cshtml` 文件，并注意它包含两个脚本块，用于通过 JavaScript
    在客户端浏览器中添加验证，如下所示：
- en: '[PRE19]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '**Good Practice**: You need to add this partial view to the `Scripts` section
    if you want to enable validation in a Razor View like `Index.cshtml`, as shown
    in the following markup:'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**良好实践**：如果您想在像 `Index.cshtml` 这样的 Razor 视图中启用验证，则需要将此部分视图添加到 `Scripts` 部分中，如下所示：'
- en: '[PRE20]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: In the `Shared` folder, open the `Error.cshtml` file, and note it contains markup
    to render an exception.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Shared` 文件夹中，打开 `Error.cshtml` 文件，并注意它包含用于渲染异常的标记。
- en: Prototyping with Bootstrap
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Bootstrap 进行原型设计
- en: Bootstrap is the world’s most popular framework for building responsive, mobile-first
    websites. It combines CSS stylesheets with JavaScript libraries to implement its
    functionality.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap是构建响应式、移动优先网站的世界最流行框架。它结合CSS样式表和JavaScript库来实现其功能。
- en: It is a good choice for prototyping a website user interface, although before
    going public you might want to hire a web designer to build a custom Bootstrap
    theme or replace it with a completely custom set of CSS stylesheets to give your
    website a distinct brand.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 它是原型化网站用户界面的好选择，尽管在公开之前你可能需要雇佣一个网页设计师来构建定制的Bootstrap主题或用完全定制的CSS样式表替换它，以给你的网站带来独特的品牌。
- en: Bootstrap is like Marmite. Some developers love it; some hate it.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap就像Marmite。一些开发者喜欢它；一些则讨厌它。
- en: 'Good reasons to use Bootstrap include:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Bootstrap的合理理由包括：
- en: It saves time.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它节省了时间。
- en: It is customizable.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是可定制的。
- en: It is open-source.
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是开源的。
- en: It is well documented officially and has lots of answers about it on sites like
    Stack Overflow.
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它有官方的详细文档，并在像Stack Overflow这样的网站上有很多关于它的答案。
- en: 'But implementing Bootstrap without care has the following negatives:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果不加注意地实现Bootstrap，会有以下负面影响：
- en: Your website will look generic.
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的网站看起来会很普通。
- en: Bootstrap themes do not work well with the default views built-in with ASP.NET
    Core Identity.
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bootstrap主题与ASP.NET Core Identity内置的默认视图不太兼容。
- en: It is heavy compared to a hand-crafted solution.
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与手工制作的解决方案相比，它较重。
- en: 'In the previous edition of this book, I included about five pages reviewing
    some of the features of Bootstrap that are most used. But Bootstrap is not .NET,
    and the second edition is already crammed with content, so I have moved the Bootstrap
    content to an online-only resource section. You can read it at the following link:
    [https://github.com/markjprice/apps-services-net8/blob/main/docs/ch14-bootstrap.md](https://github.com/markjprice/apps-services-net8/blob/main/docs/ch14-bootstrap.md).'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的前一版中，我包括了大约五页的内容，回顾了Bootstrap最常用的功能。但Bootstrap不是.NET，第二版已经内容满满，所以我将Bootstrap内容移到了在线资源部分。你可以在以下链接中阅读它：[https://github.com/markjprice/apps-services-net8/blob/main/docs/ch14-bootstrap.md](https://github.com/markjprice/apps-services-net8/blob/main/docs/ch14-bootstrap.md)。
- en: '**Good Practice**: As well as defining your own styles, base your styles on
    a common library, such as Bootstrap, that implements responsive design. However,
    if you are building a website that needs a distinct identity or brand, make sure
    you use Bootstrap’s theming support. Do not just accept the defaults.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '**良好实践**：除了定义自己的样式外，基于实现响应式设计的通用库，如Bootstrap，来构建样式。然而，如果你正在构建一个需要独特身份或品牌的网站，请确保使用Bootstrap的主题支持。不要只是接受默认设置。'
- en: Understanding Razor syntax and expressions
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解Razor语法和表达式
- en: 'Before we customize the home page view, let’s review an example Razor file.
    The file has an initial Razor code block that instantiates an order with price
    and quantity and then outputs information about the order on the web page, as
    shown in the following markup:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们自定义主页视图之前，让我们回顾一个示例Razor文件。该文件有一个初始的Razor代码块，它实例化了一个带有价格和数量的订单，然后在网页上输出订单信息，如下面的标记所示：
- en: '[PRE21]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The preceding Razor file would result in the following incorrect output:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的Razor文件会导致以下不正确的输出：
- en: '[PRE22]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Although Razor markup can include the value of any single property using the
    `@object.property` syntax, you should wrap expressions in parentheses, as shown
    in the following markup:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Razor标记可以采用`@object.property`语法包含任何单个属性的值，但你应该将表达式放在括号中，如下面的标记所示：
- en: '[PRE23]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The preceding Razor expression results in the following correct output:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的Razor表达式会产生以下正确的输出：
- en: '[PRE24]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Understanding HTML Helper methods
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解HTML Helper方法
- en: When creating a view for ASP.NET Core MVC, you can use the `Html` object and
    its methods to generate markup. When Microsoft first introduced ASP.NET MVC in
    2009, these HTML Helper methods were the way to programmatically render HTML.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 当为ASP.NET Core MVC创建视图时，你可以使用`Html`对象及其方法来生成标记。当微软在2009年首次引入ASP.NET MVC时，这些HTML
    Helper方法是通过编程渲染HTML的方式。
- en: Modern ASP.NET Core retains these HTML Helper methods for backward compatibility
    and provides Tag Helpers, which are usually easier to read and write in most scenarios.
    But there are notable situations where Tag Helpers cannot be used, like in Razor
    components.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 现代ASP.NET Core保留了这些HTML Helper方法以实现向后兼容性，并提供了标签助手，在大多数情况下它们通常更容易阅读和编写。但有一些明显的情况中标签助手不能使用，比如在Razor组件中。
- en: You will learn about Tag Helpers later in this chapter.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在本章后面学习到标签助手。
- en: 'Some useful `Html` object methods include the following:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 一些有用的`Html`对象方法包括以下内容：
- en: '`ActionLink`: Use this to generate an anchor `<a>` element that contains a
    URL path to the specified controller and action. For example, `Html.ActionLink(linkText:
    "Binding", actionName: "ModelBinding", controllerName: "Home")` would generate
    `<a href="/home/modelbinding">Binding</a>`.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ActionLink`: 使用此功能来生成一个包含指定控制器和动作的URL路径的锚点`<a>`元素。例如，`Html.ActionLink(linkText:
    "绑定", actionName: "ModelBinding", controllerName: "Home")`将生成`<a href="/home/modelbinding">绑定</a>`。'
- en: '`AntiForgeryToken`: Use this inside a `<form>` to insert a `<hidden>` element
    containing an anti-forgery token that can be validated when the form is submitted.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AntiForgeryToken`: 在`<form>`中使用此功能来插入一个包含抗伪造令牌的`<hidden>`元素，该令牌在表单提交时可以进行验证。'
- en: '`Display` and `DisplayFor`: Use this to generate HTML markup for the expression
    relative to the current model using a display template. There are built-in display
    templates for .NET types and custom templates can be created in the `DisplayTemplates`
    folder. The folder name is case-sensitive on case-sensitive filesystems.'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Display`和`DisplayFor`: 使用此功能来生成相对于当前模型的表达式的HTML标记，使用显示模板。对于.NET类型有内置的显示模板，可以在`DisplayTemplates`文件夹中创建自定义模板。在大小写敏感的文件系统中，文件夹名称是大小写敏感的。'
- en: '`DisplayForModel`: Use this to generate HTML markup for an entire model instead
    of a single expression.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DisplayForModel`: 使用此功能来生成整个模型的HTML标记，而不是单个表达式。'
- en: '`Editor` and `EditorFor`: Use this to generate HTML markup for the expression
    relative to the current model using an editor template. There are built-in editor
    templates for .NET types that use `<label>` and `<input>` elements, and custom
    templates can be created in the `EditorTemplates` folder. The folder name is case-sensitive
    on case-sensitive filesystems.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Editor`和`EditorFor`: 使用此功能来生成相对于当前模型的表达式的HTML标记，使用编辑模板。对于.NET类型有内置的编辑模板，使用`<label>`和`<input>`元素，可以在`EditorTemplates`文件夹中创建自定义模板。在大小写敏感的文件系统中，文件夹名称是大小写敏感的。'
- en: '`EditorForModel`: Use this to generate HTML markup for an entire model instead
    of a single expression.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`EditorForModel`: 使用此功能来生成整个模型的HTML标记，而不是单个表达式。'
- en: '`Encode`: Use this to safely encode an object or string into HTML. For example,
    the string value `"<script>"` would be encoded as `"&lt;script&gt;"`. This is
    not normally necessary since the Razor `@` symbol encodes string values by default.'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Encode`: 使用此功能来安全地将对象或字符串编码为HTML。例如，字符串值`"<script>"`将被编码为`"&lt;script&gt;"`。这通常不是必需的，因为Razor的`@`符号默认会编码字符串值。'
- en: '`Raw`: Use this to render a string value *without* encoding as HTML.'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Raw`: 使用此功能来渲染一个字符串值，*不*进行HTML编码。'
- en: '`PartialAsync` and `RenderPartialAsync`: Use these to generate HTML markup
    for a partial view. You can optionally pass a model and view data.'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PartialAsync`和`RenderPartialAsync`: 使用这些功能来生成部分视图的HTML标记。您可以可选地传递模型和视图数据。'
- en: Defining a strongly-typed Razor view
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义一个强类型Razor视图
- en: 'To improve the IntelliSense when writing a view, you can define what type the
    view can expect using an `@model` directive at the top. Let’s modify the home
    page to display a table of orders from the Northwind database:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在编写视图时提高IntelliSense，您可以使用顶部的`@model`指令来定义视图可以期望的类型。让我们修改主页以显示来自Northwind数据库的订单表：
- en: 'In the `Controllers` folder, in `HomeController.cs`, import the namespace for
    the Northwind entity models and EF Core features, as shown in the following code:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Controllers`文件夹中，在`HomeController.cs`中，导入Northwind实体模型和EF Core功能的命名空间，如下所示，代码中已突出显示：
- en: '[PRE25]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'In the controller class, define a field to store the Northwind data context
    and set it in the constructor, as shown highlighted in the following code:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制器类中，定义一个字段来存储Northwind数据上下文，并在构造函数中设置它，如下所示，代码中已突出显示：
- en: '[PRE26]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'In the `Index` action method, add statements to create a view model containing
    all the orders and their related order details, as shown highlighted in the following
    code:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Index`动作方法中，添加语句来创建一个包含所有订单及其相关订单详情的视图模型，如下所示，代码中已突出显示：
- en: '[PRE27]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'In the `Views` folder, in `_ViewImports.cshtml`, add a statement to import
    the EF Core entity models for all Razor views and pages, as shown in the following
    code:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Views`文件夹中，在`_ViewImports.cshtml`中，添加一个语句来导入所有Razor视图和页面的EF Core实体模型，如下所示，代码中已突出显示：
- en: '[PRE28]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'In the `Views\Home` folder, in `Index.cshtml`, at the top of the file, add
    a statement to set the model type to use a collection of orders, as shown in the
    following code:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Views\Home`文件夹中，在`Index.cshtml`文件顶部，添加一个语句来设置要使用的模型类型为订单集合，如下所示，代码中已突出显示：
- en: '[PRE29]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Now, whenever we type `Model` in this view, our code editor will know the correct
    type for the model and will provide IntelliSense for it.
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，每次我们在视图中键入 `Model` 时，我们的代码编辑器都将知道模型的正确类型，并提供智能感知。
- en: 'While entering code in a view, remember the following:'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在视图中输入代码时，请记住以下事项：
- en: Declare the type for the model using `@model` (with a lowercase `m`).
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `@model`（带小写 `m`）声明模型类型。
- en: Interact with the instance of the model using `@Model` (with an uppercase `M`).
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `@Model`（带大写 `M`）与模型实例交互。
- en: 'In `Index.cshtml`, in the initial Razor code block, replace the existing content
    with an HTML table of the orders, as shown in the following markup:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Index.cshtml` 中，在初始 Razor 代码块中，将现有内容替换为以下标记中的订单 HTML 表格：
- en: '[PRE30]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Let’s see the result of our customized home page:'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 让我们看看我们自定义的主页的结果：
- en: If your database server is not running, for example, because you are hosting
    it in Docker, a virtual machine, or in the cloud, then make sure to start it.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你的数据库服务器没有运行，例如，因为你正在 Docker、虚拟机或云中托管它，那么请确保启动它。
- en: Start the `Northwind.Mvc` website project without debugging.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不带调试启动 `Northwind.Mvc` 网站项目。
- en: Note that the home page now shows a table of orders with the highest-value order
    displayed first, as shown in *Figure 14.3*:![](img/B19587_14_03.png)
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意，主页现在显示了一个订单表，其中显示价值最高的订单在最前面，如图 *14.3* 所示：![](img/B19587_14_03.png)
- en: 'Figure 14.3: The updated Northwind MVC website home page'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 14.3：更新后的 Northwind MVC 网站主页
- en: I am running my web server on my local laptop, and its operating system, Windows
    11, is configured to use United Kingdom culture for date, time, and currency values.
    Next, we will see how to localize the web page for the preferred culture of the
    visitor.
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我在我的本地笔记本电脑上运行我的 web 服务器，其操作系统 Windows 11 已配置为使用英国文化来格式化日期、时间和货币值。接下来，我们将看到如何为访客的首选文化本地化网页。
- en: Close Chrome and shut down the web server.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭 Chrome 并关闭 web 服务器。
- en: 'Now that you’ve been reminded of how to build a basic MVC website that displays
    data, let’s look at an important intermediate-level topic that is often overlooked
    when building websites for the World Wide Web: supporting all the world’s languages
    and cultures.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经提醒了如何构建一个基本的 MVC 网站来显示数据，让我们看看在构建万维网网站时经常被忽视的一个重要中级主题：支持世界上所有的语言和文化。
- en: Localizing and globalizing with ASP.NET Core
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 ASP.NET Core 本地化和全球化
- en: In *Chapter 7*, *Handling Dates, Times, and Internationalization*, you learned
    about working with dates, times, and time zones, and how to globalize and localize
    a .NET codebase.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *第 7 章*，*处理日期、时间和国际化*中，你学习了如何处理日期、时间和时区，以及如何全球化本地化 .NET 代码库。
- en: In this section, we will look specifically at how to localize a website that
    uses ASP.NET Core.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将具体探讨如何本地化使用 ASP.NET Core 的网站。
- en: As well as localizing `string` values into languages like French and Spanish
    using `IStringLocalizer`, you can localize HTML content using `IHtmlLocalizer`,
    but this should be used with care. Usually, HTML markup should be the same for
    all locales. For views, you can use `IViewLocalizer`.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用 `IStringLocalizer` 将 `string` 值本地化为法语和西班牙语等语言外，你还可以使用 `IHtmlLocalizer`
    本地化 HTML 内容，但应谨慎使用。通常，HTML 标记应适用于所有区域。对于视图，你可以使用 `IViewLocalizer`。
- en: '**Request localization** means that the browser can request what culture it
    prefers in the following ways:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '**请求本地化**意味着浏览器可以通过以下方式请求它偏好的文化：'
- en: Add a query string parameter, for example, `?culture=en-US&ui-culture=en-US`.
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加一个查询字符串参数，例如，`?culture=en-US&ui-culture=en-US`。
- en: Send a cookie with the request, for example, `c=en-US|uic=en-US`.
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在请求中发送一个 cookie，例如，`c=en-US|uic=en-US`。
- en: 'Set an HTTP header, for example, `Accept-Language: en-US,en;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-GB;q=0.6`.'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '设置一个 HTTP 头，例如，`Accept-Language: en-US,en;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-GB;q=0.6`。'
- en: To enable request localization, call the `UseRequestLocalization` method when
    you configure the HTTP request pipeline in `Program.cs`. This tells ASP.NET Core
    to look for these requests and to automatically change the current thread that
    is processing that request (and only that request, no one else’s requests) to
    use the appropriate culture to format data and load resource values.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用请求本地化，请在 `Program.cs` 中配置 HTTP 请求管道时调用 `UseRequestLocalization` 方法。这告诉 ASP.NET
    Core 查找这些请求，并自动将处理该请求的当前线程（仅此请求，不涉及其他人的请求）更改为使用适当的语言文化来格式化数据和加载资源值。
- en: 'Let’s create some resource files to localize the web user interface into American
    English, British English, and French, and then globalize the data like dates and
    currency values:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一些资源文件，将网络用户界面本地化为美国英语、英国英语和法语，然后全球化数据，如日期和货币值：
- en: In the `Northwind.Mvc` project, add a new folder named `Resources`. This is
    the default name for the folder that localizer services look in for `*.resx` resource
    files.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Northwind.Mvc` 项目中，添加一个名为 `Resources` 的新文件夹。这是本地化服务默认查找 `*.resx` 资源文件的文件夹名称。
- en: In `Resources`, add a new folder named `Views`.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Resources` 中添加一个名为 `Views` 的新文件夹。
- en: In `Views`, add a new folder named `Home`.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Views` 中添加一个名为 `Home` 的新文件夹。
- en: Creating resource files
  id: totrans-228
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建资源文件
- en: How you create resource files (`*.resx`) depends on your code editor.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 创建资源文件 (`*.resx`) 的方式取决于您的代码编辑器。
- en: 'To save time, you can just copy the `.resx` files from the GitHub repository
    found in the folder at the following link: [https://github.com/markjprice/apps-services-net8/tree/main/code/Chapter14/Northwind.Mvc/Resources/Views/Home](https://github.com/markjprice/apps-services-net8/tree/main/code/Chapter14/Northwind.Mvc/Resources/Views/Home).'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 为了节省时间，您可以直接从以下链接中找到的 GitHub 仓库复制 `.resx` 文件：[https://github.com/markjprice/apps-services-net8/tree/main/code/Chapter14/Northwind.Mvc/Resources/Views/Home](https://github.com/markjprice/apps-services-net8/tree/main/code/Chapter14/Northwind.Mvc/Resources/Views/Home)。
- en: If you are using Visual Studio 2022
  id: totrans-231
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如果您正在使用 Visual Studio 2022
- en: 'You can use a special project item type and editor:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用特殊的项目项类型和编辑器：
- en: In `Home`, add a file type of **Resources File** named `Index.en-US.resx`.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Home` 中添加一个名为 `Index.en-US.resx` 的 **资源文件** 类型。
- en: Use the editor to define names and values, as shown in *Figure 14.4*:![](img/B19587_14_04.png)
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用编辑器定义名称和值，如图 *14.4* 所示：![](img/B19587_14_04.png)
- en: 'Figure 14.4: Using the Resources File editor to define the localized labels'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 14.4：使用资源文件编辑器定义本地化标签
- en: JetBrains Rider has its own resource file editor that combines all `.resx` files
    in one experience as a grid. Each language has its own column, side-by-side. It’s
    much more useful than having to edit each file individually as in Visual Studio
    2022.
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: JetBrains Rider 有自己的资源文件编辑器，它将所有 `.resx` 文件合并为一个网格体验。每种语言都有自己的列，并排显示。这比在 Visual
    Studio 2022 中逐个编辑每个文件要更有用得多。
- en: Close the editor.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭编辑器。
- en: Copy and paste the file and rename it `Index.en-GB.resx`.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制并粘贴文件，并将其重命名为 `Index.en-GB.resx`。
- en: '**Warning!** You must not change any of the entries in the **Name** column
    because these are used to look up localized values for all languages! You can
    only change the entries in the **Value** or **Comment** columns.'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**警告！** 您不得更改 **名称** 列中的任何条目，因为这些条目用于查找所有语言的本地化值！您只能更改 **值** 或 **注释** 列中的条目。'
- en: In `Index.en-GB.resx`, modify `Orders (USA)` to `Orders (UK)`. This is so we
    can see a difference.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Index.en-GB.resx` 中，将 `Orders (USA)` 修改为 `Orders (UK)`。这样我们可以看到差异。
- en: Close the editor.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭编辑器。
- en: Copy and paste the file and rename it as `Index.fr-FR.resx`.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制并粘贴文件，并将其重命名为 `Index.fr-FR.resx`。
- en: In `Index.fr-FR.resx`, modify the `value` column to use French. (See the step-by-step
    instructions in the next section for Visual Studio Code for the translations.)
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Index.fr-FR.resx` 中，修改 `值` 列以使用法语。（有关 Visual Studio Code 中翻译的逐步说明，请参阅下一节。）
- en: Copy and paste the file and rename it `Index.fr.resx`.
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制并粘贴文件，并将其重命名为 `Index.fr.resx`。
- en: In `Index.fr.resx`, modify the last value to be `Commandes (Neutral French)`.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Index.fr.resx` 中，将最后一个值修改为 `Commandes (Neutral French)`。
- en: If you are using Visual Studio Code
  id: totrans-246
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如果您正在使用 Visual Studio Code
- en: 'You will have to edit the file without a special editor:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 您将不得不在没有特殊编辑器的情况下编辑文件：
- en: In `Home`, add a new file named `Index.en-US.resx`.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Home` 中添加一个名为 `Index.en-US.resx` 的新文件。
- en: 'Modify the contents to contain American English language resources, as shown
    in the following markup:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改内容以包含美国英语语言资源，如下所示：
- en: '[PRE31]'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Copy and paste the file and rename it `Index.en-GB.resx`.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制并粘贴文件，并将其重命名为 `Index.en-GB.resx`。
- en: In `Index.en-GB.resx`, modify `Orders (USA)` to `Orders (UK)`. This is so we
    can see a difference.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Index.en-GB.resx` 中，将 `Orders (USA)` 修改为 `Orders (UK)`。这样我们可以看到差异。
- en: Copy and paste the file and rename it `Index.fr-FR.resx`.
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制并粘贴文件，并将其重命名为 `Index.fr-FR.resx`。
- en: 'In `Index.fr-FR.resx`, modify the `value` column to use French:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Index.fr-FR.resx` 中，将 `值` 列修改为使用法语：
- en: '[PRE32]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Copy and paste the file and rename it `Index.fr.resx`.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制并粘贴文件，并将其重命名为 `Index.fr.resx`。
- en: In `Index.fr.resx`, modify the last value to be `Commandes (Neutral French)`.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Index.fr.resx` 中，将最后一个值修改为 `Commandes (Neutral French)`。
- en: Localizing Razor views with an injected view localizer
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用注入视图本地化器本地化 Razor 视图
- en: 'Now we can continue with these steps for both code editors:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以继续使用这些步骤来设置代码编辑器：
- en: 'In the `Views/Home` folder, in `Index.cshtml`, import the namespace for working
    with localization, inject the `IViewLocalizer` service, and make changes to use
    the labels in the view model, as shown highlighted in the following markup:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Views/Home`文件夹中的`Index.cshtml`中，导入用于本地化的命名空间，注入`IViewLocalizer`服务，并修改使用视图模型中的标签，如下面的标记所示：
- en: '[PRE33]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '**Good Practice**: The key values like `"Order ID"` are used to look up the
    localized values. If a value is missing, then it returns the key as a default.
    It is good practice to therefore use keys that also work as a good fallback, which
    is why I used US English proper titles with spaces as the keys above and in the
    `.resx` files.'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**良好实践**：像`"订单 ID"`这样的关键值用于查找本地化值。如果缺少值，则默认返回键。因此，使用也作为良好回退的键是一个好习惯。这就是为什么我在上面的`.resx`文件中使用带有空格的美国英语正确标题作为键的原因。'
- en: 'In `Program.cs`, before the call to `AddControllersWithViews`, add a statement
    to add localization and set the path to find resource files to the `Resources`
    folder, and after the call to `AddControllersWithViews`, append a call to add
    view localization, as shown highlighted in the following code:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Program.cs`中，在调用`AddControllersWithViews`之前，添加一个语句来添加本地化并设置查找资源文件的路径为`Resources`文件夹，并在调用`AddControllersWithViews`之后，添加一个调用以添加视图本地化，如下面的代码所示：
- en: '[PRE34]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'In `Program.cs`, after the call to `Build` the `app` object, add statements
    to declare four cultures that we will support: US English, British English, neutral
    French, and French in France. Then, create a new localization options object and
    add those cultures as supported for both localization of user interfaces (`UICultures`)
    and globalization of data values like dates and currency (`Cultures`), as shown
    in the following code:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Program.cs`中，在调用`Build`方法后的`app`对象中，添加声明我们将支持的四种文化的语句：美国英语、英国英语、中性的法语和法国法语。然后，创建一个新的本地化选项对象，并将这些文化添加为支持本地化用户界面（`UICultures`）和数据值（如日期和货币）的全局化（`Cultures`），如下面的代码所示：
- en: '[PRE35]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Start the `Northwind.Mvc` website project.
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动`Northwind.Mvc`网站项目。
- en: In Chrome, navigate to **Settings**.
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chrome中，导航到**设置**。
- en: In the **Search settings** box, type `lang`, and note you will find the **Preferred
    languages** section, as shown in *Figure 14.5*:![](img/B19587_14_05.png)
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**搜索设置**框中输入`lang`，注意您将找到**首选语言**部分，如图14.5所示：![](img/B19587_14_05.png)
- en: 'Figure 14.5: Searching Chrome Settings for the Preferred languages section'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图14.5：在Chrome设置中搜索首选语言部分
- en: '**Warning!** If you are using a localized version of Chrome, in other words,
    its user interface is in your local language, like French, then you will need
    to search for the word “language” in your own language. (Although “language” in
    French is “langue”, so entering “lang” will still work. But in Spanish you would
    need to search for “idioma”.)'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**警告！**如果您正在使用本地化的Chrome版本，换句话说，其用户界面是您的本地语言，如法语，那么您需要用您的本地语言搜索“语言”这个词。（尽管法语中的“语言”是“langue”，所以输入“lang”仍然可以工作。但在西班牙语中，您需要搜索“idioma”。）'
- en: Click **Add languages**, search for `french`, select both **French - francais**
    and **French (France) – francais (France)**, and then click **Add**.
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加语言**，搜索`french`，选择**法语 - francais**和**法语（法国） – francais (France)**，然后点击**添加**。
- en: '**Warning!** If you are using a localized version of Chrome, then you will
    need to search for the word “French” in your own language. For example, in Spanish,
    it would be “Francés,” and in Welsh, it would be “Ffrangeg.”'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**警告！**如果您正在使用本地化的Chrome版本，那么您需要用您的本地语言搜索“法语”。例如，在西班牙语中，它将是“Francés”，在威尔士语中，它将是“Ffrangeg”。'
- en: Add **English (United States)** and **English (United Kingdom)** if you do not
    have them in the list already.
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果列表中还没有，请添加**英语（美国）**和**英语（英国）**。
- en: In the dots **…** menu to the right of **French (France)**, click **Move to
    the top**, and confirm that it is at the top of your list of languages.
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**法语（法国）**右侧的省略号**…**菜单中，点击**移动到顶部**，并确认它位于您语言列表的顶部。
- en: Close the **Settings** tab.
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭**设置**标签页。
- en: 'In Chrome, perform a hard reload/refresh (for example, hold down *Ctrl* and
    click the **Refresh** button), and note the home page now uses localized labels
    and French formats for dates and currency, as shown in *Figure 14.6*:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chrome中，执行强制重新加载/刷新（例如，按住*Ctrl*并点击**刷新**按钮），并注意现在主页现在使用本地化标签和日期及货币的法国格式，如图14.6所示：
- en: '![](img/B19587_14_06.png)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19587_14_06.png)'
- en: 'Figure 14.6: The Orders table localized and globalized into French in France'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.6：将订单表本地化和全球化到法国的法语
- en: Repeat the above steps for the other languages, for example, **English (United
    Kingdom)**.
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对其他语言重复上述步骤，例如，**英语（英国）**。
- en: 'View **Developer Tools**, and note the request headers have been set with British
    English (`en-GB`) first, as shown in *Figure 14.7*:'
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看 **开发者工具**，并注意请求头部已设置英国英语（`en-GB`）为首选，如图 *14.7* 所示：
- en: '![](img/B19587_14_07.png)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19587_14_07.png)'
- en: 'Figure 14.7: Orders localized and globalized into British English due to the
    Accept-Language: en-GB header'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '图 14.7：由于 Accept-Language: en-GB 头部信息，订单被本地化和全球化为英国英语'
- en: Close the browser and shut down the web server.
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭浏览器并关闭网络服务器。
- en: Understanding the Accept-Language header
  id: totrans-285
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 Accept-Language 头部信息
- en: 'You might wonder how the `Accept-Language` header works:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想知道 `Accept-Language` 头部信息是如何工作的：
- en: '[PRE36]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The `Accept-Language` header uses commas as separators between culture codes.
    Each culture code can be neutral (just a language) or specific (language and region),
    and each can have a **quality value** (`q`) between 0.0 and 1.0 (default). The
    preceding `Accept-Language` header example should therefore be read as follows:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '`Accept-Language` 头部信息使用逗号作为文化代码之间的分隔符。每个文化代码可以是中性的（仅语言）或特定的（语言和区域），每个都可以有一个
    **质量值** (`q`)，介于 0.0 和 1.0 之间（默认）。因此，前面的 `Accept-Language` 头部信息示例应如下阅读：'
- en: '`en-US`: English language in the United States ranked highest at 1.0 (if `q`
    not explicitly set).'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`en-US`: 美国英语语言，排名第一，为 1.0（如果未显式设置 `q`）。'
- en: '`en;q=0.9`: English language anywhere in the world ranked at 0.9.'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`en;q=0.9`: 世界各地英语语言，排名为 0.9。'
- en: '`fr-FR;q=0.8`: French language in France ranked at 0.8.'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fr-FR;q=0.8`: 法国法语语言，排名为 0.8。'
- en: '`fr;q=0.7`: French language anywhere in the world ranked at 0.7.'
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fr;q=0.7`: 世界各地法语语言，排名为 0.7。'
- en: '`en-GB;q=0.6`: English language in United Kingdom ranked lowest at 0.6.'
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`en-GB;q=0.6`: 英国英语语言，排名最低，为 0.6。'
- en: Defining web user interfaces with Tag Helpers
  id: totrans-294
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用标签助手定义网络用户界面
- en: '**Tag Helpers** make it easier to make HTML elements dynamic. The markup is
    cleaner and easier to read, edit, and maintain than if you use HTML Helpers.'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '**标签助手**使使 HTML 元素动态化变得更容易。标记更干净，更容易阅读、编辑和维护，比使用 HTML 助手更好。'
- en: However, Tag Helpers do not completely replace HTML Helpers because there are
    some things that can only be achieved with HTML Helpers, like rendering output
    that contains multiple nested tags. Tag Helpers also cannot be used in Razor components.
    So, you must learn HTML Helpers and treat Tag Helpers as an optional choice that
    is better in some scenarios.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，标签助手并不能完全替代 HTML 助手，因为有些事情只能通过 HTML 助手实现，比如渲染包含多个嵌套标签的输出。标签助手也不能在 Razor 组件中使用。因此，你必须学习
    HTML 助手，并将标签助手视为一种可选的选择，在某些场景下可能更好。
- en: Tag Helpers are especially useful for **Front End** (**FE**) developers who
    primarily work with HTML, CSS, and JavaScript because the FE developer does not
    have to learn C# syntax. Tag Helpers just use what look like normal HTML attributes
    on elements. The attribute names and values can also be selected from IntelliSense
    if your code editor supports that; both Visual Studio 2022 and Visual Studio Code
    do.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 标签助手对于主要使用 HTML、CSS 和 JavaScript 的前端（FE）开发者特别有用，因为前端开发者不需要学习 C# 语法。标签助手仅使用看起来像正常
    HTML 属性的元素。如果您的代码编辑器支持，您还可以从 IntelliSense 中选择属性名称和值；Visual Studio 2022 和 Visual
    Studio Code 都支持。
- en: Comparing HTML Helpers and Tag Helpers
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 比较HTML助手和标签助手
- en: 'For example, to render a linkable hyperlink to a controller action, you could
    use an HTML Helper method, as shown in the following markup:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要渲染一个可链接的超链接到控制器操作，你可以使用一个 HTML 助手方法，如下面的标记所示：
- en: '[PRE37]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'To make it clearer how it works, you could use named parameters, as shown in
    the following code:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更清楚地说明其工作原理，你可以使用命名参数，如下面的代码所示：
- en: '[PRE38]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'But using a Tag Helper would be even clearer and cleaner for someone who works
    more with HTML than C#, as shown in the following markup:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，对于更擅长 HTML 而不是 C# 的人来说，使用标签助手会更清晰、更简洁，如下面的标记所示：
- en: '[PRE39]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'All three examples above generate the same rendered HTML element, as shown
    in the following markup:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的所有三个示例都生成相同的渲染 HTML 元素，如下面的标记所示：
- en: '[PRE40]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'In the next few sections, we will review some of the more common Tag Helpers:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几节中，我们将回顾一些更常见的标签助手：
- en: Anchor Tag Helper
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 锚点标签助手
- en: Cache Tag Helper
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓存标签助手
- en: Environment Tag Helper
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境标签助手
- en: Image Tag Helper
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图片标签助手
- en: Forms-related Tag Helpers
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与表单相关的标签助手
- en: Exploring the Anchor Tag Helper
  id: totrans-313
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索锚点标签助手
- en: First, we will create three clickable hyperlinks styled as buttons to view the
    home page with all orders, the orders for a single customer, and the orders in
    a single country. This will allow us to see the basics of creating links to controllers
    and actions, as well as passing parameters using a route parameter and arbitrary
    query string parameters.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将创建三个可点击的按钮样式的超链接，以查看包含所有订单的首页、单个客户的订单以及单个国家的订单。这将使我们能够看到创建链接到控制器和操作的基本方法，以及使用路由参数和任意查询字符串参数传递参数。
- en: 'Let’s explore these examples of the Anchor Tag Helper:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索这些 Anchor Tag Helper 的示例：
- en: 'In the `Views` folder, in `_ViewImports.cshtml`, note the `@addTagHelper` directive,
    which adds the ASP.NET Core Tag Helpers, as shown highlighted in the following
    code:'
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Views` 文件夹中，在 `_ViewImports.cshtml` 文件中，注意 `@addTagHelper` 指令，它添加了 ASP.NET
    Core Tag Helper，如下所示，高亮显示的代码：
- en: '[PRE41]'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'You could create your own Tag Helpers and you would have to register them in
    the same way. But that is beyond the scope of this book. If you want to learn
    how, you can read the following documentation: [https://learn.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/authoring](https://learn.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/authoring).'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以创建自己的 Tag Helper，并且你必须以相同的方式注册它们。但这超出了本书的范围。如果你想了解如何，你可以阅读以下文档：[https://learn.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/authoring](https://learn.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/authoring)。
- en: 'In the `Views/Home` folder, in `Privacy.cshtml`, add markup to define a paragraph
    with clickable hyperlinks styled as buttons using the `<a>` tag, as shown in the
    following markup:'
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Views/Home` 文件夹中，在 `Privacy.cshtml` 文件中，添加标记来定义一个段落，使用 `<a>` 标签创建可点击的按钮样式的超链接，如下所示，高亮显示的标记：
- en: '[PRE42]'
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: If you set a controller name without an action name, then it defaults to the
    current action, in this case, `Privacy`. The `asp-route-{parametername}` attribute
    can use any arbitrary parameter name. In the code example above, we used `id`
    and `country`. `id` will map to the route parameter with the same name. `country`
    is not a route parameter, so it will be passed as a query string.
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你设置了一个没有操作名称的控制器名称，那么它默认为当前操作，在这种情况下，`Privacy`。`asp-route-{parametername}`
    属性可以使用任何任意的参数名称。在上面的代码示例中，我们使用了 `id` 和 `country`。`id` 将映射到具有相同名称的路由参数。`country`
    不是一个路由参数，所以它将作为查询字符串传递。
- en: 'In the `Controllers` folder, in `HomeController.cs`, modify the `Index` action
    method to define two optional parameters to pass a customer ID and the name of
    a country, and then modify the LINQ query to use them to filter the orders if
    they are set, as shown highlighted in the following code:'
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Controllers` 文件夹中，在 `HomeController.cs` 文件中，修改 `Index` 动作方法以定义两个可选参数，用于传递客户
    ID 和国家名称，然后修改 LINQ 查询以使用它们来过滤订单（如果已设置），如下所示，高亮显示的代码：
- en: '[PRE43]'
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Start the `Northwind.Mvc` website project.
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 `Northwind.Mvc` 网站项目。
- en: View **Developer Tools** and click the **Elements** tab.
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看 **开发者工具** 并点击 **元素** 选项卡。
- en: 'On the home page, click **Privacy** to navigate to that page, and note the
    buttons, including their raw HTML, which shows the `href` attribute paths that
    were generated by the Anchor Tag Helper, as shown in Figure *14.8*:'
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在首页上，点击 **隐私** 以导航到该页面，并注意按钮，包括它们的原始 HTML，它显示了由 Anchor Tag Helper 生成的 `href`
    属性路径，如图 *14.8* 所示：
- en: '![](img/B19587_14_08.png)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19587_14_08.png)'
- en: 'Figure 14.8: Three hyperlinks styled as buttons generated by Anchor Tag Helper'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.8：由 Anchor Tag Helper 生成的三个按钮样式的超链接
- en: Click each button and then come back to the **Privacy Policy** page to make
    sure they work correctly.
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击每个按钮，然后返回到 **隐私政策** 页面，以确保它们能正确工作。
- en: Close the browser and shut down the web server.
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭浏览器并关闭 web 服务器。
- en: 'In the `Views/Home` folder, in `Index.cshtml`, at the end of the table of orders,
    add an anchor tag to indicate the end of the orders table, as shown highlighted
    in the following markup:'
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Views/Home` 文件夹中，在 `Index.cshtml` 文件中，在订单表的末尾添加一个锚点标签，以指示订单表的结束，如下所示，高亮显示的标记：
- en: '[PRE44]'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'In the `Views/Home` folder, in `Privacy.cshtml`, after the existing anchor
    tags, add another one to link to the anchor with an `id` of `endOfTable` by setting
    the `asp-fragment` attribute, as shown in the following markup:'
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Views/Home` 文件夹中，在 `Privacy.cshtml` 文件中，在现有的锚点标签之后，添加另一个标签，通过设置 `asp-fragment`
    属性链接到具有 `id` 为 `endOfTable` 的锚点，如下所示，高亮显示的标记：
- en: '[PRE45]'
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Modify the second anchor tag to explicitly set the protocol to use `https`,
    as shown highlighted in the following markup:'
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改第二个锚点标签，明确设置要使用的协议为 `https`，如下所示，高亮显示的标记：
- en: '[PRE46]'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'In the `Controllers` folder, in `HomeController.cs`, add an action method named
    `Shipper`. Give it a parameter to receive a shipper entity and then pass it to
    the view, as shown in the following code:'
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Controllers` 文件夹中，在 `HomeController.cs` 文件中，添加一个名为 `Shipper` 的操作方法。给它一个参数来接收一个承运实体，并将其传递给视图，如下面的代码所示：
- en: '[PRE47]'
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: This action method can respond to any method of request, for example, `GET`
    or `POST`. With a `GET` request, the shipper entity would be passed as query string
    key-value pairs. With a `POST` request, the shipper entity would be passed in
    the body.
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此操作方法可以响应任何请求方法，例如，`GET` 或 `POST`。使用 `GET` 请求，承运商实体将作为查询字符串键值对传递。使用 `POST` 请求，承运商实体将传递在体中。
- en: In the `Views/Home` folder, add an empty Razor view named `Shipper.cshtml`.
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Views/Home` 文件夹中，添加一个名为 `Shipper.cshtml` 的空 Razor 视图。
- en: 'Modify the contents, as shown in the following markup:'
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改内容，如下面的标记所示：
- en: '[PRE48]'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'In the `Views/Home` folder, in `Privacy.cshtml`, at the top of the file, add
    code and markup to inject the Northwind database context. Then, use it to define
    a Razor function to create a dictionary with string values for both the key and
    value populated from the shippers table, as shown highlighted in the following
    code:'
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Views/Home` 文件夹中，在 `Privacy.cshtml` 文件中，在文件顶部添加代码和标记以注入 Northwind 数据库上下文。然后，使用它来定义一个
    Razor 函数，创建一个字典，其键和值都是字符串，并从承运商表填充，如下面的代码所示：
- en: '[PRE49]'
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'After the existing anchor tags, add another one to pass the dictionary to the
    current page, as shown in the following markup:'
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在现有的锚点标签之后，添加另一个标签来将字典传递到当前页面，如下面的标记所示：
- en: '[PRE50]'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Passing a complex object as a query string like this quickly hits the limit
    of about 1,000 characters for a URL. To send larger objects, you should use `POST`
    instead of `GET` by using a `<form>` element instead of an anchor tag `<a>`.
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将复杂对象作为查询字符串传递，如这样，会迅速达到 URL 大约 1,000 个字符的限制。要发送更大的对象，你应该使用 `POST` 而不是 `GET`，通过使用
    `<form>` 元素而不是锚点标签 `<a>` 来实现。
- en: If your database server is not running, for example, because you are hosting
    it in Docker, a virtual machine, or the cloud, then make sure to start it.
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你的数据库服务器没有运行，例如，因为你正在使用 Docker、虚拟机或云来托管它，那么请确保启动它。
- en: Start the `Northwind.Mvc` website project.
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 `Northwind.Mvc` 网站项目。
- en: View **Developer Tools** and click **Elements**.
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看 **开发者工具** 并点击 **元素**。
- en: On the home page, click **Privacy** to navigate to that page and note the buttons,
    including their raw HTML, which shows the `href` attribute paths that were generated
    by the Anchor Tag Helper, as shown in Figure *14.9*:![](img/B19587_14_09.png)
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主页上，点击 **隐私** 以导航到该页面，并注意按钮，包括它们的原始 HTML，它显示了由锚点标签助手生成的 `href` 属性路径，如图 *14.9*
    所示：![](img/B19587_14_09.png)
- en: 'Figure 14.9: Using a fragment and passing a complex object using query string
    parameters'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 14.9：使用片段和通过查询字符串参数传递复杂对象
- en: A side benefit of specifying the protocol is that the generated URL must include
    the protocol, domain, and any port number, as well as the relative path, so it
    is a convenient way to get an absolute URL instead of the default relative path
    URL, as shown in the second link above.
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定协议的一个副作用是生成的 URL 必须包含协议、域名以及任何端口号，以及相对路径，因此这是一种方便的方法来获取绝对 URL 而不是默认的相对路径 URL，如上面第二个链接所示。
- en: Click the **Orders (end of table)** button and note the browser navigates to
    the home page and then jumps to the end of the orders table.
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **订单（表格末尾）** 按钮，并注意浏览器导航到主页，然后跳转到订单表的末尾。
- en: Go back to the **Privacy** page, click the **Shipper** button, and note the
    shipper details are pre-entered into the shipper form.
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到 **隐私** 页面，点击 **承运商** 按钮，并注意承运商详情已预先输入到承运商表单中。
- en: Close the browser and shut down the web server.
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭浏览器并关闭 web 服务器。
- en: Exploring the Cache Tag Helpers
  id: totrans-357
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索缓存标签助手
- en: The Cache and Distributed Cache Tag Helpers improve the performance of your
    web pages by caching their content using the in-memory or registered distributed
    cache providers respectively. We covered reading and writing objects to these
    caches in *Chapter 9*, *Caching, Queuing, and Resilient Background Services*.
    Now we will see how to store fragments of HTML for a view in them.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 缓存和分布式缓存标签助手通过使用内存或注册的分布式缓存提供者分别缓存其内容，从而提高了你的网页性能。我们在 *第 9 章*，*缓存、队列和弹性后台服务*
    中介绍了对这些缓存进行读写操作。现在我们将看到如何将 HTML 片段存储在视图中的。
- en: As a reminder, an in-memory cache is best for a single web server or a web server
    farm with session affinity enabled. Session affinity means that subsequent requests
    from the same browser are served by the same web server. A distributed cache is
    best for a web server farm or in a cloud provider like Azure. You can register
    providers for SQL Server, Redis, or NCache, or create your own custom provider.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 作为提醒，内存缓存最适合单个 web 服务器或启用了会话亲和力的 web 服务器群。会话亲和力意味着来自同一浏览器的后续请求由同一 web 服务器提供服务。分布式缓存最适合
    web 服务器群或在 Azure 等云服务提供商中。你可以注册 SQL Server、Redis 或 NCache 的提供程序，或者创建自己的自定义提供程序。
- en: 'Attributes that can be applied to the Cache Tag Helper include:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 可以应用于 Cache 标签助手的属性包括：
- en: '`enabled`: Default value is `true`. This exists so that you can include the
    `<cache>` element in the markup but decide at runtime if it should be enabled
    or not.'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`enabled`: 默认值为 `true`。这存在是为了让你可以在标记中包含 `<cache>` 元素，但可以在运行时决定是否启用它。'
- en: '`expires-after`: A `TimeSpan` value to expire after. The default is `00:20:00`,
    meaning 20 minutes.'
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`expires-after`: 一个 `TimeSpan` 值，用于指定过期时间。默认值为 `00:20:00`，即 20 分钟。'
- en: '`expires-on`: A `DateTimeOffset` value to expire at. No default.'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`expires-on`: 一个用于过期的 `DateTimeOffset` 值。没有默认值。'
- en: '`expires-sliding`: A `TimeSpan` value to expire after if the value has not
    been accessed during that time. This is useful when storing database entities
    that cost a lot to create and have varied popularity. The popular entities will
    stay cached if they continue to be accessed. Less popular entities will drop out.
    No default.'
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`expires-sliding`: 一个 `TimeSpan` 值，如果在此时间内没有访问值，则过期。这在存储创建成本高且受欢迎程度不同的数据库实体时很有用。受欢迎的实体如果继续被访问，将保留在缓存中。不受欢迎的实体将退出。没有默认值。'
- en: '`vary-by-{type}`: These attributes allow multiple different cached versions
    based on differences in an HTTP `header` value, a `user`, a `route`, `cookie`,
    or `query` string value, or a custom value.'
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vary-by-{type}`: 这些属性允许基于 HTTP `header` 值、用户、路由、`cookie` 或 `query` 字符串值或自定义值的差异，有多个不同的缓存版本。'
- en: 'Let’s see an example of the Cache Tag Helper:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看 Cache 标签助手的示例：
- en: 'In the `Views/Home` folder, in `Index.cshtml`, between the heading and the
    table, add `<div>` elements to define a Bootstrap row with two columns that show
    the current UTC date and time twice, once live and then once cached, as shown
    in the following markup:'
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Views/Home` 文件夹中的 `Index.cshtml` 文件中，在标题和表格之间添加 `<div>` 元素，以定义一个包含两个列的 Bootstrap
    行，显示当前的 UTC 日期和时间两次，一次是实时，一次是缓存，如下所示的高亮标记：
- en: '[PRE51]'
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Start the `Northwind.Mvc` website project.
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 `Northwind.Mvc` 网站项目。
- en: 'Refresh the home page several times over several seconds and note the left-hand
    time is always refreshed to show the live time, and the right-hand time is cached
    (for 20 minutes by default), as shown in *Figure 14.10*:'
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在几秒钟内多次刷新主页，并注意左侧的时间总是刷新以显示实时时间，而右侧的时间缓存（默认为 20 分钟），如图 *14.10* 所示：
- en: '![](img/B19587_14_10.png)'
  id: totrans-371
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19587_14_10.png)'
- en: 'Figure 14.10: Live and cached UTC times'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.10：实时和缓存的 UTC 时间
- en: Close the browser and shut down the web server.
  id: totrans-373
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭浏览器并关闭 web 服务器。
- en: 'In the `Views/Home` folder, in `Index.cshtml`, modify the `<cache>` element
    to expire after 10 seconds, as shown highlighted in the following markup:'
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Views/Home` 文件夹中的 `Index.cshtml` 文件中，将 `<cache>` 元素修改为在 10 秒后过期，如下所示的高亮标记：
- en: '[PRE52]'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Start the `Northwind.Mvc` website project.
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 `Northwind.Mvc` 网站项目。
- en: Refresh the home page several times over several seconds and note the left-hand
    time is always refreshed to show the live time, and the right-hand time is cached
    for 10 seconds before it then refreshes.
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在几秒钟内多次刷新主页，并注意左侧的时间总是刷新以显示实时时间，而右侧的时间在刷新前缓存了 10 秒。
- en: Close the browser and shut down the web server.
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭浏览器并关闭 web 服务器。
- en: Exploring the Environment Tag Helper
  id: totrans-379
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索环境标签助手
- en: The Environment Tag Helper renders its content only if the current environment
    matches one of the values in a comma-separated list of names. This is useful if
    you want to render some content like instructions to a tester when hosted in a
    staging environment, or content like customer-specific information that developers
    and testers do not need to see while hosted in the production environment.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 环境标签助手仅在当前环境与逗号分隔的名称列表中的一个值匹配时才渲染其内容。如果你想在预发布环境中渲染一些内容，如向测试人员提供说明，或者在生产环境中渲染开发人员和测试人员不需要看到的内容，如特定客户的信息，这很有用。
- en: As well as a `names` attribute to set the comma-separated list of environments,
    you can also use `include` (works the same as `names`) and `exclude` (renders
    for all environments *except* the ones in the list).
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 除了设置逗号分隔的环境列表的 `names` 属性外，您还可以使用 `include`（与 `names` 作用相同）和 `exclude`（为除列表中的环境之外的所有环境渲染）。
- en: 'Let’s see an example:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个例子：
- en: 'In the `Views/Home` folder, in `Privacy.cshtml`, inject the dependency service
    for the web host environment, as shown in the following code:'
  id: totrans-383
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Views/Home` 文件夹中，在 `Privacy.cshtml` 中，注入网络主机环境的依赖服务，如下面的代码所示：
- en: '[PRE53]'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'After the heading, add two `<environment>` elements, the first to show output
    only for developers and testers, and the second to show output only for product
    visitors, as shown in the following markup:'
  id: totrans-385
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在标题之后，添加两个 `<environment>` 元素，第一个仅显示开发人员和测试人员的输出，第二个仅显示产品访客的输出，如下面的标记所示：
- en: '[PRE54]'
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Start the `Northwind.Mvc` website project.
  id: totrans-387
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 `Northwind.Mvc` 网站项目。
- en: 'Navigate to the **Privacy** page, and note the message for developers and testers,
    as shown in *Figure 14.11*:'
  id: totrans-388
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **隐私** 页面，并注意开发人员和测试人员的消息，如图 *14.11* 所示：
- en: '![](img/B19587_14_11.png)'
  id: totrans-389
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19587_14_11.png)'
- en: 'Figure 14.11: The Privacy page in the Development environment'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.11：开发环境中的隐私页面
- en: Close the browser and shut down the web server.
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭浏览器并关闭网络服务器。
- en: 'In the `Properties` folder, in `launchSettings.json`, for the `https` profile,
    change the environment setting to `Production`, as shown highlighted in the following
    JSON:'
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Properties` 文件夹中，在 `launchSettings.json` 中，对于 `https` 配置文件，将环境设置更改为 `Production`，如下面的
    JSON 所示高亮显示：
- en: '[PRE55]'
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Start the `Northwind.Mvc` website project.
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 `Northwind.Mvc` 网站项目。
- en: 'Navigate to the **Privacy** page, and note the message for public visitors,
    as shown in *Figure 14.12*:'
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **隐私** 页面，并注意公共访客的消息，如图 *14.12* 所示：
- en: '![](img/B19587_14_12.png)'
  id: totrans-396
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19587_14_12.png)'
- en: 'Figure 14.12: The Privacy page in the Production environment'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.12：生产环境中的隐私页面
- en: Close the browser and shut down the web server.
  id: totrans-398
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭浏览器并关闭网络服务器。
- en: In the `Properties` folder, in `launchSettings.json`, for the `https` profile,
    change the environment setting back to `Development`.
  id: totrans-399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Properties` 文件夹中，在 `launchSettings.json` 中，对于 `https` 配置文件，将环境设置改回 `Development`。
- en: Understanding how cache busting with Tag Helpers works
  id: totrans-400
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解如何使用标签辅助器进行缓存破坏
- en: When `asp-append-version` is specified with a `true` value in a `<link>`, `<img>`,
    or `<script>` element, the Tag Helper for that tag type is invoked.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 当在 `<link>`、`<img>` 或 `<script>` 元素中指定 `asp-append-version` 为 `true` 值时，将调用该标签类型的标签辅助器。
- en: 'They work by automatically appending a query string value named `v` that is
    generated from a SHA256 hash of the referenced source file, as shown in the following
    example generated output:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 它们通过自动附加一个名为 `v` 的查询字符串值来实现，该值是从引用源文件的 SHA256 哈希中生成的，如下面的示例生成输出所示：
- en: '[PRE56]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: You can see this for yourself in the current project because the `_Layout.cshtml`
    file has the `<script src="img/site.js" asp-append-version="true"></script>` element.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在当前项目中亲自看到这一点，因为 `_Layout.cshtml` 文件具有 `<script src="img/site.js" asp-append-version="true"></script>`
    元素。
- en: If even a single byte within the `site.js` file changes, then its hash value
    will be different, and therefore if a browser or CDN is caching the script file,
    then it will bust the cached copy and replace it with the new version.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `site.js` 文件中的任何单个字节发生变化，则其哈希值将不同，因此如果浏览器或 CDN 缓存脚本文件，则将破坏缓存的副本并替换为新版本。
- en: The `src` attribute must be set to a static file stored on the local web server,
    usually in the `wwwroot` folder, but you can configure additional locations. Remote
    references are not supported.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '`src` 属性必须设置为存储在本地网络服务器上的静态文件，通常在 `wwwroot` 文件夹中，但您可以配置其他位置。不支持远程引用。'
- en: Exploring Forms-related Tag Helpers
  id: totrans-407
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索与表单相关的标签辅助器
- en: The Form Tag Helper generates the `<form>` elements `action` attribute for an
    MVC controller action or named route. Like the Anchor Tag Helper, you can pass
    parameters using the `asp-route-<parametername>` attribute. It also generates
    a hidden verification token to prevent cross-site request forgery. You must apply
    the `[ValidateAntiForgeryToken]` attribute to the HTTP `POST` action method to
    properly use this feature.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 表单标签辅助器为 MVC 控制器操作或命名路由生成 `<form>` 元素的 `action` 属性。与锚点标签辅助器类似，您可以使用 `asp-route-<parametername>`
    属性传递参数。它还生成一个隐藏的验证令牌，以防止跨站请求伪造。您必须将 `[ValidateAntiForgeryToken]` 属性应用于 HTTP `POST`
    动作方法，以正确使用此功能。
- en: The Label and Input Tag Helpers bind labels and inputs to properties on a model.
    They can then generate the `id`, `name`, and `for` attributes automatically, as
    well as add validation attributes and messages.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 标签和输入辅助器将标签和输入绑定到模型上的属性。然后它们可以自动生成`id`、`name`和`for`属性，以及添加验证属性和消息。
- en: 'Let’s see an example of a form for entering shipper information:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个用于输入运输信息的表单示例：
- en: 'In the `Views/Home` folder, in `Shipper.cshtml`, duplicate the existing markup
    that outputs shipper details, wrap it in a `<form>` element that uses the Form
    Tag Helper, and modify the `<label>` and `<input>` elements to use the Label and
    Input Tag Helpers, as shown highlighted in the following markup:'
  id: totrans-411
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Views/Home`文件夹中，在`Shipper.cshtml`中，复制现有的输出运输详情的标记，将其包裹在一个使用表单辅助器的`<form>`元素中，并修改`<label>`和`<input>`元素以使用标签和输入辅助器，如下面的高亮标记所示：
- en: '[PRE57]'
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'In the `Controllers` folder, in `HomeController.cs`, add an action method named
    `ProcessShipper`. Give it a parameter to receive a shipper entity and then return
    it as a JSON document using the `Json` method, as shown in the following code:'
  id: totrans-413
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Controllers`文件夹中，在`HomeController.cs`中添加一个名为`ProcessShipper`的操作方法。给它一个参数来接收一个运输实体，然后使用`Json`方法将其作为JSON文档返回，如下面的代码所示：
- en: '[PRE58]'
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Start the `Northwind.Mvc` website project.
  id: totrans-415
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动`Northwind.Mvc`网站项目。
- en: Navigate to the **Privacy** page, and then click the **Shipper** button.
  id: totrans-416
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**隐私**页面，然后点击**运输者**按钮。
- en: 'On the **Shipper** page, right-click, select **View page source**, and note
    the different HTML output for the form generated by the Form, Input, and Label
    Tag Helpers, including a hidden element named `__RequestVerificationToken`, as
    shown in the following markup:'
  id: totrans-417
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**运输者**页面，右键单击，选择**查看页面源代码**，并注意由表单、输入和标签辅助器生成的不同HTML输出，包括一个名为`__RequestVerificationToken`的隐藏元素，如下面的标记所示：
- en: '[PRE59]'
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: In the form, change the shipper ID and company name, noting that attributes
    like `maxlength="40"` prevent a company name longer than 40 characters, and `type="number"`
    only allows numbers for the shipper ID.
  id: totrans-419
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在表单中，更改运输ID和公司名称，注意像`maxlength="40"`这样的属性防止公司名称超过40个字符，而`type="number"`属性只允许运输ID为数字。
- en: 'Click the **Submit** button and note the JSON document returned, as shown in
    the following output:'
  id: totrans-420
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**提交**按钮并注意返回的JSON文档，如下面的输出所示：
- en: '[PRE60]'
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Close the browser and shut down the web server.
  id: totrans-422
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭浏览器并关闭Web服务器。
- en: Output caching
  id: totrans-423
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 输出缓存
- en: In some ways, output caching is like response caching, which we covered in *Chapter
    9*, *Caching, Queuing, and Resilient Background Services*. Output caching can
    store dynamically generated responses on the server so that they do not have to
    be regenerated again for another request. This can improve performance. Unlike
    response caching, output caching does not rely on clients and intermediaries doing
    what they are told by the HTTP response headers.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些方面，输出缓存类似于我们已在*第9章*、*缓存、队列和弹性后台服务*中讨论的响应缓存。输出缓存可以在服务器上存储动态生成的响应，这样它们就不必为另一个请求再次生成。这可以提高性能。与响应缓存不同，输出缓存不依赖于客户端和中间件执行HTTP响应头中指示的操作。
- en: Output caching endpoints
  id: totrans-425
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 输出缓存端点
- en: 'Let’s see it in action with a really simple example of applying output caching
    to some endpoints to make sure it is working properly:'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用一个非常简单的例子来看看将输出缓存应用于某些端点以确保其正常工作的实际效果：
- en: 'In the `Northwind.Mvc` project, in `Program.cs`, after the call to `AddNorthwindContext`,
    add a statement to add the output cache middleware and override the default expiration
    timespan to make it only 10 seconds, as shown in the following code:'
  id: totrans-427
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Northwind.Mvc`项目中，在`Program.cs`中，在调用`AddNorthwindContext`之后，添加一个语句来添加输出缓存中间件并覆盖默认的过期时间跨度，使其仅为10秒，如下面的代码所示：
- en: '[PRE61]'
  id: totrans-428
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '**Good Practice**: The default expiration time span is one minute. Think carefully
    about what the duration should be.'
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**良好实践**：默认过期时间跨度为1分钟。仔细考虑持续时间应该是多少。'
- en: 'In `Program.cs`, before the call to map controller routes, add a statement
    to use output cache, as shown in the following code:'
  id: totrans-430
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Program.cs`中，在调用映射控制器路由之前，添加一个语句来使用输出缓存，如下面的代码所示：
- en: '[PRE62]'
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'In `Program.cs`, after the call to map Razor Pages, add statements to create
    two simple endpoints that respond with plain text, one that is not cached and
    one that uses the output cache, as shown in the following code:'
  id: totrans-432
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Program.cs`中，在调用映射Razor页面之后，添加语句来创建两个简单的端点，一个不缓存，一个使用输出缓存，如下面的代码所示：
- en: '[PRE63]'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'In `appsettings.Development.json`, add a log level of `Information` for the
    output caching middleware, as shown highlighted in the following configuration:'
  id: totrans-434
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `appsettings.Development.json` 中，为输出缓存中间件添加 `Information` 级别的日志，如下所示（配置高亮）：
- en: '[PRE64]'
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Start the `Northwind.Mvc` website project and arrange the browser window and
    command prompt or terminal window so that you can see both.
  id: totrans-436
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 `Northwind.Mvc` 网站项目，并调整浏览器窗口和命令提示符或终端窗口，以便你可以看到两者。
- en: In the browser, navigate to `https://localhost:5141/notcached`, and note nothing
    is written to the command prompt or terminal.
  id: totrans-437
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中导航到 `https://localhost:5141/notcached`，并注意没有内容被写入命令提示符或终端。
- en: In the browser, click the **Refresh** button several times and note that the
    time is always updated because it is not served from the output cache.
  id: totrans-438
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中，多次点击 **刷新** 按钮，并注意时间总是更新，因为它不是从输出缓存中提供的。
- en: 'In the browser, navigate to `https://localhost:5141/cached`, and note that
    messages are written to the command prompt or terminal to tell you that you have
    made a request for a cached resource but it does not have anything in the output
    cache so it has now cached the output, as shown in the following output:'
  id: totrans-439
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中导航到 `https://localhost:5141/cached`，并注意消息被写入命令提示符或终端，告诉你你已经请求了一个缓存的资源，但它没有在输出缓存中找到任何内容，因此现在已缓存了输出，如下所示：
- en: '[PRE65]'
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'In the browser, click the **Refresh** button several times and note that the
    time is not updated, and an output caching message tells you that the value was
    served from the cache, as shown in the following output:'
  id: totrans-441
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中，多次点击 **刷新** 按钮，并注意时间没有更新，并且输出缓存消息告诉你值是从缓存中提供的，如下所示：
- en: '[PRE66]'
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Continue refreshing until 10 seconds have passed and note that messages are
    written to the command line or terminal to tell you that the cached output has
    been updated.
  id: totrans-443
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 持续刷新直到 10 秒钟过去，并注意消息被写入命令行或终端，告诉你缓存的输出已被更新。
- en: Close the browser and shut down the web server.
  id: totrans-444
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭浏览器并关闭网络服务器。
- en: Output caching MVC views
  id: totrans-445
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 输出缓存 MVC 视图
- en: 'Now let’s see how we can output cache an MVC view:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看如何输出缓存 MVC 视图：
- en: 'In `Program.cs`, at the end of the call to map controllers, add a call to the
    `CacheOutput` method, as shown highlighted in the following code:'
  id: totrans-447
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Program.cs` 中，在调用映射控制器之后，添加对 `CacheOutput` 方法的调用，如下所示（代码高亮）：
- en: '[PRE67]'
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Start the `Northwind.Mvc` website project and arrange the browser window and
    command prompt or terminal window so that you can see both.
  id: totrans-449
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 `Northwind.Mvc` 网站项目，并调整浏览器窗口和命令提示符或终端窗口，以便你可以看到两者。
- en: 'At the command prompt or terminal, note that the home page with its table of
    orders is not in the output cache, so SQL commands are executed to get the data,
    and then once the Razor view generates the page, it is stored in the cache, as
    shown highlighted in the following output:'
  id: totrans-450
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令提示符或终端中，注意主页及其订单表不在输出缓存中，因此执行 SQL 命令以获取数据，然后一旦 Razor 视图生成页面，它就被存储在缓存中，如下所示（输出高亮）：
- en: '[PRE68]'
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'On the home page, note the current time, and then refresh the page and note
    that the whole page, including the time and orders table, is served from the output
    cache, as shown in the following output:'
  id: totrans-452
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主页上，注意当前时间，然后刷新页面，并注意整个页面，包括时间和订单表，都是来自输出缓存，如下所示（输出高亮）：
- en: '[PRE69]'
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Keep refreshing until 10 seconds have passed and note that the page is then
    regenerated from the database and the current time is shown.
  id: totrans-454
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 持续刷新直到 10 秒钟过去，并注意页面随后从数据库重新生成，并显示当前时间。
- en: Close the browser and shut down the web server.
  id: totrans-455
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭浏览器并关闭网络服务器。
- en: There are many other ways to vary the cached results for output caching and
    the ASP.NET Core team intends to add more capabilities in the future.
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多其他方法可以改变输出缓存的缓存结果，ASP.NET Core 团队打算在未来添加更多功能。
- en: Practicing and exploring
  id: totrans-457
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习和探索
- en: Test your knowledge and understanding by answering some questions, getting some
    hands-on practice, and exploring this chapter’s topics with deeper research.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 通过回答一些问题、进行一些实际操作练习，以及更深入地研究本章主题来测试你的知识和理解。
- en: Exercise 14.1 – Test your knowledge
  id: totrans-459
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 14.1 – 测试你的知识
- en: 'Answer the following questions:'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 回答以下问题：
- en: What is the advantage of declaring a strongly typed Razor view and how do you
    do it?
  id: totrans-461
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 声明强类型 Razor 视图的优点是什么？以及如何实现它？
- en: How do you enable Tag Helpers in a view?
  id: totrans-462
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你如何在视图中启用标签助手？
- en: What are the pros and cons of HTML Helper methods compared to Tag Helpers?
  id: totrans-463
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与标签助手相比，HTML 辅助方法有哪些优缺点？
- en: How can a browser request a preferred language for localization?
  id: totrans-464
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览器如何请求一个首选语言进行本地化？
- en: How do you localize text in a view?
  id: totrans-465
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你如何在视图中本地化文本？
- en: What is the prefix for attributes recognized by Tag Helpers?
  id: totrans-466
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 标签辅助器识别的属性的名称前缀是什么？
- en: How can you pass a complex object as a query string parameter?
  id: totrans-467
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你如何将复杂对象作为查询字符串参数传递？
- en: How can you control how long the contents of the `<cache>` element are cached
    for?
  id: totrans-468
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你如何控制 `<cache>` 元素的内容缓存多长时间？
- en: What is the `<environment>` element used for?
  id: totrans-469
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<environment>` 元素用于什么？'
- en: How does cache busting with Tag Helpers work?
  id: totrans-470
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 标签辅助器的缓存失效是如何工作的？
- en: Exercise 14.2 – Practice building user interfaces with Boostrap
  id: totrans-471
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 14.2 – 使用 Bootstrap 练习构建用户界面
- en: 'Create a new ASP.NET Core MVC project named `Ch14Ex02_ExploringBootstrap`.
    Add views that implement the following Bootstrap features:'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为 `Ch14Ex02_ExploringBootstrap` 的新 ASP.NET Core MVC 项目。添加实现以下 Bootstrap
    功能的视图：
- en: 'Accordion: [https://getbootstrap.com/docs/5.3/components/accordion/](https://getbootstrap.com/docs/5.3/components/accordion/).'
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手风琴：[https://getbootstrap.com/docs/5.3/components/accordion/](https://getbootstrap.com/docs/5.3/components/accordion/)
- en: 'Cards: [https://getbootstrap.com/docs/5.3/components/card/](https://getbootstrap.com/docs/5.3/components/card/).'
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卡片：[https://getbootstrap.com/docs/5.3/components/card/](https://getbootstrap.com/docs/5.3/components/card/)
- en: 'Carousel: [https://getbootstrap.com/docs/5.3/components/carousel/](https://getbootstrap.com/docs/5.3/components/carousel/).'
  id: totrans-475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轮播图：[https://getbootstrap.com/docs/5.3/components/carousel/](https://getbootstrap.com/docs/5.3/components/carousel/)
- en: 'NavBar: [https://getbootstrap.com/docs/5.3/components/navbar/](https://getbootstrap.com/docs/5.3/components/navbar/).'
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导航栏：[https://getbootstrap.com/docs/5.3/components/navbar/](https://getbootstrap.com/docs/5.3/components/navbar/)
- en: 'Popovers: [https://getbootstrap.com/docs/5.3/components/popovers/](https://getbootstrap.com/docs/5.3/components/popovers/).'
  id: totrans-477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 弹出框：[https://getbootstrap.com/docs/5.3/components/popovers/](https://getbootstrap.com/docs/5.3/components/popovers/)
- en: 'Toast: [https://getbootstrap.com/docs/5.3/components/toasts/](https://getbootstrap.com/docs/5.3/components/toasts/).'
  id: totrans-478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Toast：[https://getbootstrap.com/docs/5.3/components/toasts/](https://getbootstrap.com/docs/5.3/components/toasts/)
- en: 'Tooltips: [https://getbootstrap.com/docs/5.3/components/tooltips/](https://getbootstrap.com/docs/5.3/components/tooltips/).'
  id: totrans-479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具提示：[https://getbootstrap.com/docs/5.3/components/tooltips/](https://getbootstrap.com/docs/5.3/components/tooltips/)
- en: Exercise 14.3 – Explore topics
  id: totrans-480
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 14.3 – 探索主题
- en: 'Use the links on the following page to learn more about the topics covered
    in this chapter:'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下页面上的链接了解本章涵盖的主题：
- en: '[https://github.com/markjprice/apps-services-net8/blob/main/docs/book-links.md#chapter-14---building-web-user-interfaces-using-aspnet-core](https://github.com/markjprice/apps-services-net8/blob/main/docs/book-links.md#chapter-14---building-web-user-interfaces-using-aspnet-core)'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/markjprice/apps-services-net8/blob/main/docs/book-links.md#chapter-14---building-web-user-interfaces-using-aspnet-core](https://github.com/markjprice/apps-services-net8/blob/main/docs/book-links.md#chapter-14---building-web-user-interfaces-using-aspnet-core)'
- en: Summary
  id: totrans-483
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, you learned how to build user interfaces using ASP.NET Core
    MVC. You learned about:'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何使用 ASP.NET Core MVC 构建用户界面。你学习了以下内容：
- en: ASP.NET Core Razor views and Razor syntax
  id: totrans-485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ASP.NET Core Razor 视图和 Razor 语法
- en: Some common Bootstrap styles
  id: totrans-486
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些常见的 Bootstrap 样式
- en: Localizing and globalizing an ASP.NET Core website
  id: totrans-487
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地化和全球化 ASP.NET Core 网站
- en: HTML Helpers and Tag Helpers
  id: totrans-488
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML 辅助器和标签辅助器
- en: Output caching endpoints and views
  id: totrans-489
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输出缓存端点和视图
- en: In the next chapter, you will learn how to build web user interface components
    using Blazor.
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习如何使用 Blazor 构建网络用户界面组件。
