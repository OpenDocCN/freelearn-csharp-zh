["```cs\n    <Grid.RowDefinitions> \n        <RowDefinition Height=\"*\" /> \n        <RowDefinition Height=\"*\" /> \n    </Grid.RowDefinitions> \n    <Grid.ColumnDefinitions> \n        <ColumnDefinition Width=\"*\" /> \n        <ColumnDefinition Width=\"*\" /> \n        <ColumnDefinition Width=\"*\" /> \n    </Grid.ColumnDefinitions> \n```", "```cs\n    <Rectangle Width=\"100\" Height=\"60\" \n               Fill=\"OrangeRed\"  \n               Grid.Row=\"0\" Grid.Column=\"0\"/> \n    <Rectangle Width=\"100\" Height=\"60\" \n               Fill=\"OrangeRed\"  \n               Grid.Row=\"0\" Grid.Column=\"1\"/> \n    <Rectangle Width=\"100\" Height=\"60\" \n               Fill=\"OrangeRed\"  \n               Grid.Row=\"0\" Grid.Column=\"2\"/> \n    <Rectangle Width=\"100\" Height=\"60\" \n               Fill=\"OrangeRed\"  \n               Grid.Row=\"1\" Grid.Column=\"0\"/> \n    <Rectangle Width=\"100\" Height=\"60\" \n               Fill=\"OrangeRed\"  \n               Grid.Row=\"1\" Grid.Column=\"1\"/> \n    <Rectangle Width=\"100\" Height=\"60\" \n               Fill=\"OrangeRed\"  \n               Grid.Row=\"1\" Grid.Column=\"2\"/> \n```", "```cs\n<Grid ShowGridLines=\"True\"> \n    <Grid.ColumnDefinitions> \n        <ColumnDefinition Width=\"2*\"/> \n        <ColumnDefinition Width=\"Auto\" MinWidth=\"5\"/> \n        <ColumnDefinition Width=\"*\"/> \n        <ColumnDefinition Width=\"3*\"/> \n        <ColumnDefinition Width=\"40\"/> \n    </Grid.ColumnDefinitions> \n</Grid> \n```", "```cs\n<Grid ShowGridLines=\"True\"> \n    <Grid.ColumnDefinitions> \n        <ColumnDefinition Width=\"2*\"/> \n        <ColumnDefinition Width=\"Auto\"/> \n        <ColumnDefinition Width=\"*\"/> \n        <ColumnDefinition Width=\"3*\"/> \n        <ColumnDefinition Width=\"40\"/> \n    </Grid.ColumnDefinitions> \n    <GridSplitter Grid.Column=\"1\" Width=\"5\"/> \n</Grid> \n```", "```cs\n    <Rectangle Fill=\"OrangeRed\"  \n               Grid.Row=\"0\" Grid.Column=\"0\" \n               Grid.RowSpan=\"2\" Grid.ColumnSpan=\"2\" /> \n```", "```cs\n<UniformGrid> \n    <Label Content=\"Cell 1\" Background=\"Yellow\" /> \n    <Label Content=\"Cell 2\" Background=\"YellowGreen\" /> \n    <Label Content=\"Cell 3\" Background=\"Orange\" /> \n    <Label Content=\"Cell 4\" Background=\"OrangeRed\" /> \n</UniformGrid> \n```", "```cs\n<Label Content=\"Cell 5\" Background=\"Violet\" /> \n<Label Content=\"Cell 6\" Background=\"DeepSkyBlue\" /> \n<Label Content=\"Cell 7\" Background=\"SkyBlue\" />\n```", "```cs\n<UniformGrid Rows=\"1\"> \n    <Label Content=\"Cell 1\" Background=\"Yellow\" /> \n    <Label Content=\"Cell 2\" Background=\"YellowGreen\" /> \n    <Label Content=\"Cell 3\" Background=\"Orange\" /> \n    <Label Content=\"Cell 4\" Background=\"OrangeRed\" /> \n    <Label Content=\"Cell 5\" Background=\"Violet\" /> \n    <Label Content=\"Cell 6\" Background=\"DeepSkyBlue\" /> \n    <Label Content=\"Cell 7\" Background=\"SkyBlue\" /> \n</UniformGrid> \n```", "```cs\n<UniformGrid Columns=\"4\" FirstColumn=\"2\"> \n    <Label Content=\"Cell 1\" Background=\"Yellow\" /> \n    <Label Content=\"Cell 2\" Background=\"YellowGreen\" /> \n    <Label Content=\"Cell 3\" Background=\"Orange\" /> \n    <Label Content=\"Cell 4\" Background=\"OrangeRed\" /> \n    <Label Content=\"Cell 5\" Background=\"Violet\" /> \n    <Label Content=\"Cell 6\" Background=\"DeepSkyBlue\" /> \n    <Label Content=\"Cell 7\" Background=\"SkyBlue\" /> \n</UniformGrid> \n```", "```cs\n<UniformGrid FlowDirection=\"RightToLeft\"> \n    <Label Content=\"Cell 1\" Background=\"Yellow\" /> \n    <Label Content=\"Cell 2\" Background=\"YellowGreen\" /> \n    <Label Content=\"Cell 3\" Background=\"Orange\" /> \n    <Label Content=\"Cell 4\" Background=\"OrangeRed\" /> \n    <Label Content=\"Cell 5\" Background=\"Violet\" /> \n    <Label Content=\"Cell 6\" Background=\"DeepSkyBlue\" /> \n    <Label Content=\"Cell 7\" Background=\"SkyBlue\" /> \n</UniformGrid> \n```", "```cs\n<WrapPanel Orientation=\"Horizontal\"> \n    <Button Content=\"Button 1\" Margin=\"4\" \n            Width=\"100\" Height=\"30\"/> \n    <Button Content=\"Button 2\" Margin=\"4\" \n            Width=\"100\" Height=\"30\"/> \n    <Button Content=\"Button 3\" Margin=\"4\" \n            Width=\"100\" Height=\"30\"/> \n    <Button Content=\"Button 4\" Margin=\"4\" \n            Width=\"208\" Height=\"30\"/> \n    <Button Content=\"Button 5\" Margin=\"4\" \n            Width=\"100\" Height=\"30\"/> \n    <Button Content=\"Button 6\" Margin=\"4\" \n            Width=\"60\" Height=\"30\"/> \n    <Button Content=\"Button 7\" Margin=\"4\" \n            Width=\"60\" Height=\"30\"/> \n    <Button Content=\"Button 8\" Margin=\"4\" \n            Width=\"180\" Height=\"30\"/> \n</WrapPanel> \n```", "```cs\n<WrapPanel Orientation=\"Vertical\" \n  ItemWidth=\"100\" ItemHeight=\"30\"> \n    <Button Content=\"Button 1\" Margin=\"4\" /> \n    <Button Content=\"Button 2\" Margin=\"4\" /> \n    <Button Content=\"Button 3\" Margin=\"4\" /> \n    <Button Content=\"Button 4\" Margin=\"4\" /> \n    <Button Content=\"Button 5\" Margin=\"4\" /> \n    <Button Content=\"Button 6\" Margin=\"4\" /> \n</WrapPanel> \n```", "```cs\n<StackPanel> \n    <StackPanel Orientation=\"Horizontal\"> \n        <Button Content=\"Button 1\" Margin=\"4\" /> \n        <Button Content=\"Button 2\" Margin=\"4\" /> \n        <Button Content=\"Button 3\" Margin=\"4\" /> \n        <Button Content=\"Button 4\" Margin=\"4\" /> \n    </StackPanel> \n    <StackPanel Orientation=\"Vertical\"> \n        <Button Content=\"Button 5\" Margin=\"4\" /> \n        <Button Content=\"Button 6\" Margin=\"4\" /> \n        <Button Content=\"Button 7\" Margin=\"4\" /> \n        <Button Content=\"Button 8\" Margin=\"4\" /> \n    </StackPanel> \n</StackPanel>\n```", "```cs\n<StackPanel Orientation=\"Vertical\"> \n    <Button Content=\"Button (Left)\" Margin=\"4\" \n            HorizontalAlignment=\"Left\"/> \n    <Button Content=\"Button (Center)\" Margin=\"4\" \n            HorizontalAlignment=\"Center\"/> \n    <Button Content=\"Button (Right)\" Margin=\"4\" \n            HorizontalAlignment=\"Right\"/> \n    <Button Content=\"Button (Stretch)\" Margin=\"4\" \n            HorizontalAlignment=\"Stretch\" /> \n</StackPanel> \n```", "```cs\n<Canvas> \n    <Label Width=\"100\" Height=\"60\" \n           Background=\"GreenYellow\"  \n           Canvas.Left=\"70\" Canvas.Top=\"40\" \n           Content=\"(70, 40)\" \n           FontSize=\"20\" FontWeight=\"Bold\"/> \n    <Label Width=\"100\" Height=\"60\" \n           Background=\"YellowGreen\"  \n           Canvas.Left=\"220\" Canvas.Top=\"90\" \n           Content=\"(220, 90)\" \n           FontSize=\"20\" FontWeight=\"Bold\"/> \n</Canvas> \n```", "```cs\n<StackPanel Margin=\"10\"> \n    <Border BorderBrush=\"OrangeRed\" \n            BorderThickness=\"2\" \n            Margin=\"10 4\" Padding=\"10\"> \n        <TextBlock Text=\"Text surrounded by border\"/> \n    </Border> \n    <Border BorderBrush=\"OrangeRed\" \n            BorderThickness=\"2\" \n            CornerRadius=\"20\" \n            Margin=\"10 4\" Padding=\"10\"> \n        <TextBlock Text=\"Text surrounded by border,\n        having corner radius = 20\"/> \n    </Border> \n    <Border BorderBrush=\"OrangeRed\" \n            BorderThickness=\"2\" \n            CornerRadius=\"5\" \n            Background=\"Yellow\" \n            Margin=\"10 4\" Padding=\"10\"> \n        <TextBlock Text=\"Text surrounded by border, \n        having a Yellow background and rounded border\"  \n        TextWrapping=\"Wrap\"/> \n    </Border> \n    <Border BorderBrush=\"OrangeRed\" \n            BorderThickness=\"4 0\" \n            CornerRadius=\"5\" \n            Margin=\"10 4\" Padding=\"10\"> \n        <TextBlock Text=\"Text surrounded by two-side border\"/> \n    </Border> \n</StackPanel>\n```", "```cs\n<ScrollViewer HorizontalScrollBarVisibility=\"Auto\" \n              VerticalScrollBarVisibility=\"Auto\"> \n    <Image Source=\"demoImage.jpg\" /> \n</ScrollViewer>\n```", "```cs\n<DockPanel> \n    <Label Content=\"Button (DockPanel.Dock='Right')\" \n           Background=\"YellowGreen\" \n           Margin=\"4\" Padding=\"4\" \n           DockPanel.Dock=\"Right\"/> \n    <Label Content=\"Button (DockPanel.Dock='Top')\" \n           Background=\"GreenYellow\" \n           Margin=\"4\" Padding=\"4\" \n           DockPanel.Dock=\"Top\"/> \n    <Label Content=\"Button (DockPanel.Dock='Bottom')\" \n           Background=\"SkyBlue\" \n           Margin=\"4\" Padding=\"4\" \n           DockPanel.Dock=\"Bottom\"/> \n    <Label Content=\"Button (DockPanel.Dock='Left')\" \n           Background=\"Orange\" \n           Margin=\"4\" Padding=\"4\" \n           DockPanel.Dock=\"Left\"/> \n    <Label Content=\"Button (None)\" \n           Background=\"Pink\" \n           Margin=\"4\" Padding=\"4\"/> \n</DockPanel> \n```", "```cs\n<Viewbox> \n    <TextBlock Text=\"This is a text, inside a ViewBox\" \n               Margin=\"10\"/> \n</Viewbox>\n```", "```cs\n<Viewbox Stretch=\"Uniform\"> \n    <TextBlock Text=\"This is a text, inside a ViewBox\" \n     Margin=\"10\"/> \n</Viewbox> \n```", "```cs\n<Viewbox Stretch=\"Fill\"> \n    <TextBlock Text=\"This is a text, inside a ViewBox\" \n     Margin=\"10\"/> \n</Viewbox> \n```", "```cs\n<Viewbox Stretch=\"UniformToFill\"> \n    <TextBlock Text=\"This is a text, inside a ViewBox\" \n     Margin=\"10\"/> \n</Viewbox> \n```", "```cs\n<Viewbox Stretch=\"None\"> \n    <TextBlock Text=\"This is a text, inside a ViewBox\" \n     Margin=\"10\"/> \n</Viewbox> \n```", "```cs\n<Grid> \n    <TabControl> \n        <TabItem Header=\"Tab 1\"> \n            <TextBlock Text=\"You have selected 'Tab 1'\" \n             FontSize=\"30\" Margin=\"4\"/> \n        </TabItem> \n        <TabItem Header=\"Tab 2\"> \n            <TextBlock Text=\"You have selected 'Tab 2'\" \n             FontSize=\"30\" Margin=\"4\"/> \n        </TabItem> \n    </TabControl> \n</Grid>\n```", "```cs\n<TabItem> \n    <TabItem.Header> \n        <StackPanel Orientation=\"Horizontal\"> \n            <Ellipse Width=\"10\" Height=\"10\" \n              Fill=\"Green\" Margin=\"0 1 8 0\"/> \n            <TextBlock Text=\"Tab 3\"/> \n        </StackPanel> \n    </TabItem.Header> \n    <Border Background=\"ForestGreen\" \n            Margin=\"4\"> \n        <TextBlock Text=\"You have selected 'Tab 3'\" \n             FontSize=\"30\" Foreground=\"White\"/> \n    </Border> \n</TabItem> \n```", "```cs\n<Window x:Class=\"CH03.DynamicPanelDemo.MainWindow\" \n   xmlns=\n        \"http://schemas.microsoft.com/winfx/\n        2006/xaml/presentation\" \n\n        Title=\"Dynamic Panel Demo\"  \n        Height=\"300\" Width=\"500\"> \n    <Canvas x:Name=\"canvasPanel\"  \n            Background=\"LightGoldenrodYellow\" \n            MouseLeftButtonDown=\"OnMouseLeftButtonDown\"/> \n</Window> \n```", "```cs\nprivate void OnMouseLeftButtonDown(object sender,  \n MouseButtonEventArgs e) \n{ \n    var mousePosition = e.GetPosition(canvasPanel); \n    var square = new Rectangle \n    { \n        Width = 50, \n        Height = 50, \n        Fill = new SolidColorBrush(Colors.Green), \n        Opacity = new Random().NextDouble() \n    }; \n\n    // set the position of the element \n    Canvas.SetLeft(square,  \n     mousePosition.X - square.Width / 2); \n    Canvas.SetTop(square,  \n     mousePosition.Y - square.Height / 2); \n\n    // add the element on the Canvas \n    canvasPanel.Children.Add(square); \n} \n```", "```cs\n<Window x:Class=\"CH03.DynamicPanelDemo.MainWindow\" \n  xmlns=\n   \"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" \n\n    Title=\"Dynamic Panel Demo\"  \n    Height=\"300\" Width=\"500\"> \n    <Canvas x:Name=\"canvasPanel\"  \n            Background=\"LightGoldenrodYellow\" \n            MouseLeftButtonDown=\"OnMouseLeftButtonDown\" \n            MouseRightButtonDown=\"OnMouseRightButtonDown\"/> \n</Window> \n```", "```cs\nprivate void OnMouseRightButtonDown(object sender,  \n MouseButtonEventArgs e) \n{ \n    if (e.Source is UIElement square) \n    { \n        canvasPanel.Children.Remove(square); \n    } \n} \n```", "```cs\n// set the Row and Column to place the element \nGrid.SetRow(element, rowIndex); \nGrid.SetColumn(element, columnIndex); \n\n// add the element to the Grid \ngridPanel.Children.Add(element); \n```", "```cs\nGrid.SetRowSpan(element, noOfRowsToSpan); \nGrid.SetColumnSpan(element, noOfColumnsToSpan); \n```", "```cs\n<StackPanel Orientation=\"Horizontal\"> \n    <WrapPanel x:Name=\"sourcePanel\" \n               ItemHeight=\"60\" ItemWidth=\"100\" \n               Width=\"200\" Margin=\"4\" \n               Background=\"LightGoldenrodYellow\"> \n        <Label Content=\"Item 1\" \n               Background=\"Olive\" Margin=\"4\" \n               Foreground=\"White\" FontSize=\"22\" /> \n        <Label Content=\"Item 2\" \n               Background=\"Olive\" Margin=\"4\" \n               Foreground=\"White\" FontSize=\"22\" /> \n        <Label Content=\"Item 3\" \n               Background=\"Olive\" Margin=\"4\" \n               Foreground=\"White\" FontSize=\"22\" /> \n        <Label Content=\"Item 4\" \n               Background=\"Olive\" Margin=\"4\" \n               Foreground=\"White\" FontSize=\"22\" /> \n        <Label Content=\"Item 5\" \n               Background=\"Olive\" Margin=\"4\" \n               Foreground=\"White\" FontSize=\"22\" /> \n    </WrapPanel> \n    <WrapPanel x:Name=\"targetPanel\" \n               ItemHeight=\"60\" ItemWidth=\"100\" \n               Width=\"200\" Margin=\"4\" \n               Background=\"OldLace\"> \n    </WrapPanel> \n</StackPanel>\n```", "```cs\n<WrapPanel x:Name=\"sourcePanel\" \n           ItemHeight=\"60\" ItemWidth=\"100\" \n           Width=\"200\" Margin=\"4\" \n           Background=\"LightGoldenrodYellow\" \n           MouseLeftButtonDown=\"OnDrag\"> \n```", "```cs\nprivate void OnDrag(object sender, MouseButtonEventArgs e) \n{ \n    if (e.Source is UIElement draggedItem) \n    { \n        DragDrop.DoDragDrop(draggedItem,  \n                            draggedItem,  \n                            DragDropEffects.Move); \n    } \n}\n```", "```cs\n<WrapPanel x:Name=\"targetPanel\" \n            ItemHeight=\"60\" ItemWidth=\"100\" \n            Width=\"200\" Margin=\"4\" \n            Background=\"OldLace\" \n            AllowDrop=\"True\" \n            Drop=\"OnDrop\"> \n    <!-- This is the DROP Target --> \n</WrapPanel> \n```", "```cs\nprivate void OnDrop(object sender, DragEventArgs e) \n{ \n    var draggedData = e.Data; \n    if (draggedData.GetData(draggedData.GetFormats()[0]) \n                            is UIElement droppedItem) \n    { \n        sourcePanel.Children.Remove(droppedItem); \n        targetPanel.Children.Add(droppedItem); \n    } \n} \n```"]