["```cs\n<?xml version = \"1.0\"?>\n<SOAP-ENV:Envelope xmlns:SOAP-ENV = \"http://www.w3.org/2001/12/soap-envelope\" \n SOAP-ENV:encodingStyle = \"http://www.w3.org/2001/12/soap-encoding\">\n  <SOAP-ENV:Header>\n    ...\n    ...\n  </SOAP-ENV:Header>\n  <SOAP-ENV:Body>\n    ...\n    ...\n    <SOAP-ENV:Fault>\n      ...\n      ...\n    </SOAP-ENV:Fault>\n    ...\n  </SOAP-ENV:Body>\n</SOAP_ENV:Envelope>\n```", "```cs\n<?xml version = \"1.0\"?>\n<SOAP-ENV:Envelope \n xmlns:SOAP-ENV = \"http://www.w3.org/2001/12/soap-envelope\" \n SOAP-ENV:encodingStyle = \"http://www.w3.org/2001/12/soap-encoding\">\n ...\n SOAP Message information goes here\n ...\n</SOAP-ENV:Envelope>\n```", "```cs\nPOST /Authors HTTP/1.1\nHost: www.packtpub.com\nContent-Type: application/soap; charset=\"utf-8\"\nContent-Length: nnnn\n\n<?xml version = \"1.0\"?>\n<SOAP-ENV:Envelope \nxmlns:SOAP-ENV = \"http://www.w3.org/2001/12/soap-envelope\" \nSOAP-ENV:encodingStyle = \" http://www.w3.org/2001/12/soap-encoding\">\n  ...\n  Message information goes here\n  ...\n</SOAP-ENV:Envelope>\n```", "```cs\n// GET api/values\n[HttpGet]\npublic IEnumerable<string> Get()\n{\n  return new string[] { \"value1\", \"value2\" };\n}\n```", "```cs\npublic IEnumerable<string> Get12()\n{\n  return new string[] { \"value1\", \"value2\", \"value3\" };\n}\n// GET api/values\n//[HttpGet] - Remove this attribute\npublic IEnumerable<string> Get()\n{\n  return new string[] { \"value1\", \"value2\" };\n}\n```", "```cs\n[HttpGet]\npublic IEnumerable<string> Get12()\n{\n  return new string[] { \"value1\", \"value2\", \"value3\" };\n}\n// GET api/values\n//[HttpGet]\npublic IEnumerable<string> Get()\n{\n  return new string[] { \"value1\", \"value2\" };\n}\n```", "```cs\n[HttpGet]\npublic IEnumerable<string> Get12()\n{\n  return new string[] { \"value1\", \"value2\", \"value3\" };\n}\n// GET api/values\n[HttpGet]\npublic IEnumerable<string> Get()\n{\n  return new string[] { \"value1\", \"value2\" };\n}\n```", "```cs\n[HttpGet]\npublic string HelloWorld()\n{\n  return \"Hello World\";\n}\npublic IEnumerable<string> Get12()\n{\n  return new string[] { \"value1\", \"value2\", \"value3\" };\n}\n// GET api/values\npublic IEnumerable<string> Get()\n{\n  return new string[] { \"value1\", \"value2\" };\n}\n```", "```cs\nusing Microsoft.AspNetCore.Mvc;\nusing System.Collections.Generic;\nnamespace DemoECommerceApp.Controllers\n{\n  [Produces(\"application/json\")]\n  [Route(\"api/[Controller]\")]\n  public class ProductsController : Controller\n  {\n    // GET: api/Products\n    [HttpGet]\n    public IEnumerable<Product> Get()\n    {\n      return new Product[]\n      {\n        new Product(1, \"Oats\", new decimal(3.07)),\n        new Product(2, \"Toothpaste\", new decimal(10.89)),\n        new Product(3, \"Television\", new decimal(500.90))\n      };\n    }\n  }\n}\n```", "```cs\npublic class Product\n{\n  public Product(int id, string name, decimal price)\n  {\n    Id = id;\n    Name = name;\n    Price = price;\n  }\n  public int Id { get; set; }\n  public string Name { get; set; }\n  public decimal Price { get; set; }\n}\n```", "```cs\n // POST: api/Products\n[HttpPost]\npublic async Task<IActionResult> Post([FromBody]Product product)\n  => (await _productService.CreateProductAsync(product))\n    ? (IActionResult)Created($\"api/products/{product.Id}\", product) // HTTP 201\n    : StatusCode(500); // HTTP 500\n```", "```cs\n// GET: api/Products/1\n[HttpGet(\"{id}\")]\npublic Task<Product> Get(int id)\n  => _productService.GetOrderAsync(id);\n```", "```cs\n// PUT: api/Products/1\n[HttpPut(\"{id}\")]\npublic async Task<IActionResult> Put(int id, [FromBody]Product product)\n  => (await _productService.UpdateProductAsync(id, product))\n    ? Ok()\n    : StatusCode(500);\n```", "```cs\n// DELETE: api/Products/1\n[HttpDelete(\"{id}\")]\npublic async Task<IActionResult> Delete(int id)\n  => (await _productService.DeleteOrderAsync(id))\n    ? (IActionResult)Ok()\n    : NoContent();\n```"]