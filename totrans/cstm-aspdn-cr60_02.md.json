["```cs\ndotnet new mvc -n ConfigureSample -o ConfigureSample\n```", "```cs\ncd ConfigureSample\ncode .\n```", "```cs\n// ASP.NET Core 3.0 and later\npublic class Program\n{\n    public static void Main(string[] args)\n    {\n        CreateWebHostBuilder(args).Build().Run();\n    }\n    public static IHostBuilder CreateHostBuilder(string[] \n      args) =>\n        Host.CreateDefaultBuilder(args)\n            .ConfigureWebHostDefaults(webBuilder =>\n            {\n                webBuilder.UseStartup<Startup>();\n            }\n}\n```", "```cs\nVar builder = WebApplication.CreateBuilder(args);\n// Add services to the container.\nbuilder.Services.AddControllersWithViews();\nvar app = builder.Build();\n// The rest of the file isn't relevant for this chapter\n```", "```cs\nHost.CreateDefaultBuilder(args)\n    .ConfigureWebHostDefaults(webBuilder =>\n    {\n        webBuilder\n          .ConfigureAppConfiguration((builderContext,\n            config) =>\n        {\n            // configure configuration here\n        })\n        .UseStartup<Startup>();\n    });\n```", "```cs\nbuilder.WebHost.ConfigureAppConfiguration((builderContext, config) =>\n{\n    // configure configuration here\n});\n```", "```cs\nbuilder.Configuration.AddJsonFile(\n     \"appsettings.json\",\n     optional: false,\n     reloadOnChange: true);\n```", "```cs\nvar env = builder.Environment;\nbuilder.Configuration.SetBasePath(env.ContentRootPath);\nbuilder.Configuration.AddJsonFile(\n    \"appsettings.json\", \n    optional: false, \n    reloadOnChange: true);\nbuilder.Configuration.AddJsonFile(\n    $\"appsettings.{env.EnvironmentName}.json\", \n    optional: true, \n    reloadOnChange: true);\nbuilder.Configuration.AddEnvironmentVariables();\n```", "```cs\nnamespace ConfigureSample;\npublic class AppSettings\n{\n    public int Foo { get; set; }\n    public string Bar { get; set; }\n}\n```", "```cs\nservices.Configure<AppSettings>\n   (Configuration.GetSection(\"AppSettings\"));\n```", "```cs\nbuilder.Services.Configure<AppSettings>(\n    builder.Configuration.GetSection(\"AppSettings\"));\n```", "```cs\nusing Microsoft.Extensions.Options;\n// ...\npublic class HomeController : Controller\n{\n    private readonly AppSettings _options;\n    public HomeController(IOptions<AppSettings> options)\n    {\n        _options = options.Value;\n    }\n    public IActionResult Index()\n    {\n        ViewData[\"Message\"] = _options.Bar;\n        return View();\n    }\n```", "```cs\n{\n    \"Logging\": {\n        \"LogLevel\": {\n            \"Default\": \"Warning\"\n        }\n    },\n    \"AllowedHosts\": \"*\",\n    \"AppSettings\": {\n        \"Foo\": 123,\n        \"Bar\": \"Bar\"\n    }\n}\n```", "```cs\nbuilder.Configuration.AddIniFile(\n    \"appsettings.ini\", \n    optional: false, \n    reloadOnChange: true);\nbuilder.Configuration.AddJsonFile(\n    $\"appsettings.{env.EnvironmentName}.ini\", \n    optional: true, \n    reloadOnChange: true);\n```", "```cs\n[AppSettings]\nBar=\"FooBar\"\n```", "```cs\n// add new configuration source\nbuilder.Configuration.Add(new MyCustomConfigurationSource\n{\n    SourceConfig = //configure whatever source\n    Optional = false,\n    ReloadOnChange = true\n});\n```", "```cs\nbuilder.Configuration.AddMyCustomSource(\"source\", optional: false, reloadOnChange: true);\n```"]