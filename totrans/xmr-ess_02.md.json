["```cs\n@property(nonatomic, copy) NSString *text\n```", "```cs\npublic string Text { get; set; }\n```", "```cs\n@property(nonatomic, readonly, copy) NSArray *subviews\n```", "```cs\nUIView[] Subviews { get; }\n```", "```cs\nfirstNameTextField.ShouldReturn = delegate (textfield)\n{\n      textfield.ResignFirstResponder ();\n      return true;\n}\n```", "```cs\npublic class PhoneDataSource : UITableViewDataSource\n{\n    List<string>_phoneList;\n    public PhoneDataSource (List<string> phoneList) {\n    _phoneList = phoneList;\n}\npublic override int RowsInSection(UITableView\ntableView, int section)\n{\n  return _phoneList.Count;\n}\npublic override UITableViewCell GetCell(UITableView\n  tableView, NSIndexPath indexPath) {\n      ... // create and populate UITableViewCell\n      return cell;\n}\n}\n```", "```cs\nphoneTableView.Source = new PhoneDataSource(phoneList);\n```", "```cs\npublic class WeakPhoneDataSource : NSObject\n{\n...\n[Export (\"tableView:numberOfRowsInSection:\")]\npublic override int RowsInSection(UITableView\n      tableView, int section)\n  {\n    ...\n  }\n[Export (\"tableView:cellForRowAtIndexPath:\")]\n  public override UITableViewCell GetCell(UITableView\n      tableView, NSIndexPath indexPath) {\n...\n  }\n}\n```", "```cs\nphoneTableView.WeakSource =\n    new WeakPhoneDataSource(...);\n```", "```cs\npublic void Dispose ()\n{\n  this.Dispose (true);\n  GC.SuppressFinalize (this);\n}\n```", "```cs\nclass MyViewController : UIViewController {\n\n  UIImagemyImage;\n\n  . . .   \n\n  public override void Dispose (bool disposing)\n  {\n    if (disposing){\n      if (myImage!= null) {\n        myImage.Dispose ();\n        myImage = null;\n      }\n    }\n\n    // Free unmanaged objects regardless of value.\n\n    base.Dispose (disposing)\n\n  }\n}\n```", "```cs\n    class MainViewController<T> : UIViewController {\n    ...\n    }\n    ```", "```cs\n    class MyGenericType<T> {\n        [DllImport (\"System\")]\n        public static extern int getpid ();\n    }\n    ```", "```cs\n[Register (\"LoginViewController\")]\npartial class LoginViewController\n{\n  [Outlet]\n  MonoTouch.UIKit.UITextField textPassword { get; set; }\n  [Outlet]\n  MonoTouch.UIKit.UITextField textUserId { get; set; }\n  [Action (\"btnLoginClicked:\")]\n  partial void btnLoginClicked\n         (MonoTouch.Foundation.NSObject sender);\nvoid ReleaseDesignerOutlets ()\n{\nif (textUserId != null) {\n      textUserId.Dispose ();\ntextUserId = null;\n}\nif (textPassword != null) {\ntextPassword.Dispose ();\ntextPassword = null;\n}\n}\n```", "```cs\npublic partial class LoginViewController : UIViewController\n{\n  public LoginViewController (IntPtr handle) :\n    base (handle)\n{\n}\n  public override void ViewDidLoad ()\n  {\n    base.ViewDidLoad ();\n    // logic to perform when view has loaded...\n  }\npartial void btnLoginClicked (NSObject sender)\n{\n// logic for login goes here...\n}\n}\n```"]