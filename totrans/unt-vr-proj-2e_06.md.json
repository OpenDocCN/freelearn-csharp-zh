["```cs\nusing UnityEngine; \nusing UnityEngine.EventSystems; \nusing System.Collections; \n\npublic class CursorPositioner : MonoBehaviour { \n  private float defaultPosZ; \n\n  void Start () { \n    defaultPosZ = transform.localPosition.z; \n  } \n\n  void Update () { \n    Transform camera = Camera.main.transform; \n    Ray ray = new Ray (camera.position, camera.rotation * \n       Vector3.forward); \n    RaycastHit hit; \n    if (Physics.Raycast (ray, out hit)) { \n      if (hit.distance <= defaultPosZ) { \n        transform.localPosition = new Vector3(0, 0, hit.distance); \n      } else { \n        transform.localPosition = new Vector3(0, 0, defaultPosZ); \n      } \n    } \n  } \n} \n```", "```cs\nusing UnityEngine; \n\npublic class DestroyTimeout : MonoBehaviour \n{ \n  public float timer = 15f; \n\n  void Start () \n  { \n    Destroy (gameObject, timer); \n  } \n} \n```", "```cs\nusing UnityEngine.UI; \n```", "```cs\n  public Text scoreText; \n```", "```cs\nscoreText.text = \"Score: 0\"; \n```", "```cs\nscore += 1; \nscoreText.text = \"Score: \" + score; \n```", "```cs\nusing TMP; \n```", "```cs\n  public TMP_Text scoreText; \n```", "```cs\nusing UnityEngine; \nusing UnityEngine.UI; \n\npublic class LookMoveTo : MonoBehaviour \n{ \n  public GameObject ground; \n  public Transform infoBubble; \n\n  private Text infoText; \n\n  void Start () \n  { \n    if (infoBubble != null) \n    { \n      infoText = infoBubble.Find (\"Text\").GetComponent<Text> (); \n    } \n  } \n\n  void Update () \n  { \n    Transform camera = Camera.main.transform; \n    Ray ray; \n    RaycastHit[] hits; \n    GameObject hitObject; \n\n    ray = new Ray (camera.position, camera.rotation * Vector3.forward); \n    hits = Physics.RaycastAll (ray); \n    for (int i=0; i < hits.Length; i++) \n    { \n      RaycastHit hit = hits [i]; \n      hitObject = hit.collider.gameObject; \n      if (hitObject == ground) \n      { \n        if (infoBubble != null) \n        { \n          infoText.text = \"X: \" + hit.point.x.ToString(\"F2\") + \n                          \"Z: \" + hit.point.z.ToString(\"F2\"); \n\n          infoBubble.LookAt(camera.position); \n          infoBubble.Rotate (0, 180f, 0); \n        } \n        transform.position = hit.point; \n      } \n    } \n  }\n} \n```", "```cs\nusing UnityEngine; \nusing UnityEngine.UI; \n\npublic class ButtonExecuteTest : MonoBehaviour \n{ \n  public Button startButton;\n  public Button stopButton;\n\n  private bool isOn = false; \n  private float timer = 5.0f; \n\n  void Update () \n  { \n    timer -= Time.deltaTime; \n    if (timer < 0.0f) \n    { \n      isOn = !isOn; \n      timer = 5.0f; \n\n      if (isOn) \n      { \n        stopButton.onClick.Invoke(); \n      } else \n      { \n        startButton.onClick.Invoke(); \n      } \n    } \n  } \n} \n```", "```cs\nusing UnityEngine; \nusing UnityEngine.UI; \n\npublic class RespondtoGaze : MonoBehaviour \n{ \n  public bool highlight = true;\n  private Button button; \n  private bool isSelected;\n\n  void Start ()\n  {\n    button = GetComponent<Button>();\n  }\n\n  void Update () \n  { \n    isSelected = false;\n    Transform camera = Camera.main.transform; \n    Ray ray = new Ray(camera.position, camera.rotation * Vector3.forward); \n    RaycastHit hit; \n    if (Physics.Raycast (ray, out hit) &&\n        (hit.transform.parent != null) &&\n        (hit.transform.parent.gameObject == gameObject) \n    { \n      isSelected = true;\n    } \n\n    if (isSelected)\n    {\n      if (highlight)\n        button.Select();\n    }\n    else {\n      UnityEngine.EventSystems.EventSystem.current.SetSelectedGameObject(null);\n    }\n  } \n}\n```", "```cs\nInput.GetButtonDown(\"Fire1\").\n```", "```cs\npublic bool clicker = true;\npublic string inputButton = \"Fire1\";\n```", "```cs\n  ... \n  if (isSelected)\n  {\n    if (highlight)\n        button.Select();\n    if (clicker && InputGetButtonDown(\"Fire1\"))\n        button.onClick.Invoke();\n  }\n```", "```cs\npublic bool timedClick = true;\npublic float delay = 2.0f;\n\nprivate float timer = 0f;\n```", "```cs\n... \n  if (isSelected)\n  {\n    if (highlight)\n        button.Select();\n    if (clicker && Input.GetButtonDown(\"Fire1\"))\n        button.onClick.Invoke();\n    if (timedClick) \n    {\n      timer += Time.deltaTime;\n      if (timer >= delay)\n        button.onClick.Invoke();\n  }\n  else {\n    UnityEngine.EventSystems.EventSystem.current.SetSelectedGameObject(null);\n    timer = 0f;\n  }\n```"]