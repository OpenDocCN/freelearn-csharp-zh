["```cs\n    interface Modem \n    { \n      public void dial(String phoneNumber); \n      public void hangup(); \n      public void send(char c); \n      public char recv(); \n   } \n```", "```cs\n    using System; \n\n    class Program \n    { \n      static void Main(string[] args) \n      { \n        Console.ResetColor(); \n        Console.WriteLine(\"This is the default configuration for Console\"); \n        Console.ForegroundColor = ConsoleColor.Cyan; \n        Console.WriteLine(\"Color changed...\"); \n        Console.Read(); \n      } \n    } \n```", "```cs\n    namespace Utilities \n    { \n      public class ConsoleService \n      { \n        public void ChangeForegroundColor(ConsoleColor newColor) \n        { \n            Console.ForegroundColor = newColor; \n        } \n        public void ResetConsoleValues() \n        { \n            Console.ResetColor(); \n        } \n      } \n    } \n```", "```cs\n    /* This is version 2 (with utilities) */ \n    ConsoleService cs = new ConsoleService(); \n    cs.ResetConsoleValues(); \n    Console.WriteLine(\"This is the default configuration for Console\"); \n    cs.ChangeForegroundColor(ConsoleColor.Cyan); \n    Console.WriteLine(\"Color changed...\"); \n    Console.Read(); \n```", "```cs\n    using System; \n    using System.IO; \n    using Newtonsoft.Json; \n\n    class Program \n    { \n      static void Main(string[] args) \n      { \n        Console.WriteLine(\" List of Books by PACKT\"); \n        Console.WriteLine(\" ----------------------\"); \n        var cadJSON = ReadFile(\"Data/BookStore.json\"); \n        var bookList = JsonConvert.DeserializeObject<Book[]>(cadJSON); \n        foreach (var item in bookList) \n        { \n            Console.WriteLine($\" {item.Title.PadRight(39,' ')} \" +  \n                $\"{item.Author.PadRight(15,' ')} {item.Price}\");  \n        } \n        Console.Read(); \n      } \n\n      static string ReadFile(string filename) \n      { \n        return File.ReadAllText(filename); \n      } \n    } \n```", "```cs\n    interface IBook \n    { \n      string Title { get; set; } \n      string Author { get; set; } \n      double Price { get; set; } \n    } \n    class Book : IBook \n    { \n      public string Author { get; set; } \n      public double Price { get; set; } \n      public string Title { get; set; } \n    } \n```", "```cs\n    using Newtonsoft.Json; \n    using System.IO; \n\n    internal class Utilities \n    { \n      internal static Book[] ReadData() \n      { \n        var cadJSON = ReadFile(\"Data/BookStore.json\"); \n        return JsonConvert.DeserializeObject<Book[]>(cadJSON); \n      } \n\n      static string ReadFile(string filename) \n      { \n        return File.ReadAllText(filename); \n      } \n    } \n```", "```cs\n    using System; \n\n    class Program \n    { \n      static void Main(string[] args) \n      { \n        var bookList = Utilities.ReadData(); \n        PrintBooks(bookList); \n      } \n\n      static void PrintBooks(Book[] books) \n      { \n        Console.WriteLine(\" List of Books by PACKT\"); \n        Console.WriteLine(\" ----------------------\"); \n        foreach (var item in books) \n        { \n          Console.WriteLine($\" {item.Title.PadRight(39, ' ')} \"  + \n             $\"{item.Author.PadRight(15, ' ')} {item.Price}\"); \n        } \n        Console.Read(); \n      } \n    }  \n```", "```cs\n     internal static List<Book> ReadData(string extra) \n     { \n       List<Book> books = ReadData(); \n       var cadJSON = ReadFile(\"Data/BookStore2.json\"); \n       books.AddRange(JsonConvert.DeserializeObject<List<Book>>(cadJSON)); \n       return books; \n     } \n```", "```cs\n    static List<Book> bookList; \n    static void Main(string[] args) \n    { \n      Console.WriteLine(\"Please, press 'yes' to read an extra file, \"); \n      Console.WriteLine(\"or any other key for a single file\"); \n      var ans = Console.ReadLine(); \n      bookList = (ans != \"yes\") ? Utilities.ReadData() : Utilities.ReadData(ans); \n      PrintBooks(bookList); \n    } \n```", "```cs\n    { \n      \"Title\": \"AngularJS Services\", \n      \"Author\": \"Jim Lavin\", \n      \"Price\": 30.99, \n      \"Topic\": \"Angular\" \n    } \n```", "```cs\n    public class TopicBook : Book \n    { \n      public string Topic { get; set; } \n    }\n```", "```cs\n    static void Main(string[] args) \n    { \n      Console.WriteLine(\"Please, press 'yes' to read an extra file, \"); \n      Console.WriteLine(\"'topic' to include topic books or any\n          other key for a single file\"); \n      var ans = Console.ReadLine(); \n      bookList = ((ans != \"yes\") && (ans != \"topic\")) ?  \n        Utilities.ReadData() : Utilities.ReadData(ans); \n      PrintBooks(bookList); \n    }   \n```", "```cs\n    internal static List<Book> ReadData(string extra) \n    { \n      List<Book> books = ReadData(); \n      var filename = \"Data/BookStore2.json\"; \n      var cadJSON = ReadFile(filename); \n         books.AddRange(JsonConvert.DeserializeObject<List<Book>>(cadJSON)); \n      if (extra == \"topic\") \n      { \n         filename = \"Data/BookStore3.json\"; \n         cadJSON = ReadFile(filename); \n         books.AddRange(JsonConvert.DeserializeObject<List<TopicBook>>(cadJSON)); \n      } \n      return books; \n    } \n\n```", "```cs\n     { \n       \"Title\": \"HTML 5 Game Development\", \n       \"Author\": \"Daniel Albu\", \n       \"Price\": 5.68, \n       \"Topic\": \"HTML5 Games\", \n       \"Duration\": \"2h20m\" \n     }  \n```", "```cs\n    interface IProduct \n    { \n      string Title {get; set;} \n      string Author {get; set;} \n      double Price {get; set;} \n      string Topic { get; set; } \n      string Duration { get; set; } \n    } \n```", "```cs\n    public class Product : IProduct \n    { \n      public string Title { get; set; } \n      public string Author { get; set; } \n      public double Price { get; set; } \n      public string Topic { get; set; } \n      public string Duration { get; set; } \n    } \n```", "```cs\n    using System;\n    using System.Collections.Generic;\n\n    class Program\n    {\n      static List<Product> productList;\n      static void Main(string[] args)\n      {\n        string id = string.Empty;\n        do\n        {\n            Console.WriteLine(\"File no. to read: 1/2/3-Enter(exit): \");\n            id = Console.ReadLine();\n            if (\"123\".Contains(id) && !String.IsNullOrEmpty(id))\n            {\n                productList = Utilities.ReadData(id);\n                PrintBooks(productList);\n            }\n        } while (!String.IsNullOrWhiteSpace(id));\n      }\n\n      static void PrintBooks(List<Product> products)\n      {\n        Console.WriteLine(\" List of Products by PACKT\");\n        Console.WriteLine(\" ----------------------\");\n        foreach (var item in products)\n        {\n            Console.WriteLine($\" {item.Title.PadRight(36, ' ')} \" +\n            $\"{item.Author.PadRight(20, ' ')} {item.Price}\" + \" \" +\n            $\"{item.Topic?.PadRight(12, ' ') } \" +]\n            $\"{item.Duration ?? \"\"}\");\n        }\n        Console.WriteLine();\n      }\n    }\n```", "```cs\n    using System.Collections.Generic;\n    using System.IO;\n\n    internal class Utilities\n    {\n      internal static List<Product> ReadData(string fileId)\n      {\n        var filename = \"Data/ProductStore\" + fileId + \".json\";\n        var cadJSON = ReadFile(filename);\n        return JsonConvert.DeserializeObject<List<Product>>(cadJSON);\n      }\n      static string ReadFile(string filename)\n      {\n        return File.ReadAllText(filename);\n      }\n    }\n```", "```cs\n    interface IProduct\n    {\n      string Title { get; set; }\n      string Author { get; set; }\n      double Price { get; set; }\n    }\n\n    interface ITopic\n    {\n      string Topic { get; set; }\n    }\n\n    interface IDuration\n    {\n      string Duration { get; set; }\n    }\n```", "```cs\n    class Book : IProduct\n    {\n      public string Author { get; set; }\n      public double Price { get; set; }\n      public string Title { get; set; }\n    }\n    class TopicBook: IProduct, ITopic\n    {\n      public string Author { get; set; }\n      public double Price { get; set; }\n      public string Title { get; set; }\n      public string Topic { get; set; }\n    }\n    class Video: IProduct, ITopic, IDuration\n    {\n      public string Author { get; set; }\n      public double Price { get; set; }\n      public string Title { get; set; }\n      public string Topic { get; set; }\n      public string Duration { get; set; }\n    }\n```", "```cs\n    public class Email\n    {\n      public void SendEmail()\n      {\n        // code\n      }\n    }\n    public class Notification\n    {\n      private Email _email;\n      public Notification()\n      {\n        _email = new Email();\n      }\n      public void PromotionalNotification()\n      {\n        _email.SendEmail();\n      }\n    }\n```", "```cs\n    public interface IMessageService\n    {\n      void SendMessage();\n    }\n    public class Email : IMessageService\n    {\n      public void SendMessage()\n      {\n        // code\n      }\n    }\n    public class Notification\n    {\n      private IMessageService _iMessageService;\n      public Notification()\n      {\n        _iMessageService = new Email();\n      }\n      public void PromotionalNotification()\n      {\n        _iMessageService.SendMessage();\n      }\n    }\n```", "```cs\n    public class Notification\n    {\n      private IMessageService _iMessageService;\n      public Notification(IMessageService _messageService)\n      {\n        this._iMessageService = _messageService;\n      }\n      public void PromotionalNotification()\n      {\n        _iMessageService.SendMessage();\n      }\n    }\n```"]