["```cs\n//------------------------------\nusing UnityEngine;\nusing System.Collections;\n//------------------------------\npublic class PlayerController : MonoBehaviour\n{\n  //------------------------------\n  private Rigidbody ThisBody = null;\n  private Transform ThisTransform = null;\n\n  public bool MouseLook = true;\n  public string HorzAxis = \"Horizontal\";\n  public string VertAxis = \"Vertical\";\n  public string FireAxis = \"Fire1\";\n  public float MaxSpeed = 5f;\n\n  //------------------------------\n  // Use this for initialization\n  void Awake ()\n  {\n    ThisBody = GetComponent<Rigidbody>();\n    ThisTransform = GetComponent<Transform>();\n  }\n  //------------------------------\n  // Update is called once per frame\n  void FixedUpdate ()\n  {\n    //Update movement\n    float Horz = Input.GetAxis(HorzAxis);\n    float Vert = Input.GetAxis(VertAxis);\n    Vector3 MoveDirection = new Vector3(Horz, 0.0f, Vert);\n    ThisBody.AddForce(MoveDirection.normalized * MaxSpeed);\n\n    //Clamp speed\n    ThisBody.velocity = new Vector3(Mathf.Clamp(ThisBody.velocity.x, -MaxSpeed, MaxSpeed),\n      Mathf.Clamp(ThisBody.velocity.y, -MaxSpeed, MaxSpeed),\n      Mathf.Clamp(ThisBody.velocity.z, -MaxSpeed, MaxSpeed));\n\n    //Should look with mouse?\n    if(MouseLook)\n    {\n      //Update rotation - turn to face mouse pointer\n      Vector3 MousePosWorld = Camera.main.ScreenToWorldPoint(new Vector3(Input.mousePosition.x,Input.mousePosition.y, 0.0f));\n        MousePosWorld = new Vector3(MousePosWorld.x, 0.0f, MousePosWorld.z);\n      //Get direction to cursor\n      Vector3 LookDirection = MousePosWorld - ThisTransform.position;\n\n      //FixedUpdate rotation\n      ThisTransform.localRotation = Quaternion.LookRotation(LookDirection.normalized,Vector3.up);\n    }\n\n  }\n}\n//------------------------------\n```", "```cs\n//------------------------------\nusing UnityEngine;\nusing System.Collections;\n//------------------------------\npublic class BoundsLock : MonoBehaviour \n{\n  //------------------------------\n  private Transform ThisTransform = null;\n  public Vector2 HorzRange = Vector2.zero;\n  public Vector2 VertRange = Vector2.zero;\n  //------------------------------\n  // Use this for initialization\n  void Awake ()\n  {\n    ThisTransform = GetComponent<Transform>();\n  }\n  //------------------------------\n  // Update is called once per frame\n  void LateUpdate () \n  {\n    //Clamp position\n    ThisTransform.position = new Vector3(Mathf.Clamp(ThisTransform.position.x, HorzRange.x, HorzRange.y),\n    ThisTransform.position.y,\n    Mathf.Clamp(ThisTransform.position.z, VertRange.x, VertRange.y));\n  }\n  //------------------------------\n}\n//------------------------------\n```", "```cs\nusing UnityEngine;\nusing System.Collections;\n//------------------------------\npublic class Health : MonoBehaviour\n{\n  public GameObject DeathParticlesPrefab = null;\n  private Transform ThisTransform = null;\n  public bool ShouldDestroyOnDeath = true;\n  //------------------------------\n  void Start()\n  {\n    ThisTransform = GetComponent<Transform>();\n  }\n  //------------------------------\n  public float HealthPoints\n  {\n    get\n    {\n      return _HealthPoints;\n    }\n\n    set\n    {\n      _HealthPoints = value;\n\n      if(_HealthPoints <= 0)\n      {\n        SendMessage(\"Die\", SendMessageOptions.DontRequireReceiver);\n\n        if(DeathParticlesPrefab != null)\n          Instantiate(DeathParticlesPrefab, ThisTransform.position, ThisTransform.rotation);\n\n        if(ShouldDestroyOnDeath)\n          Destroy(gameObject);\n      }\n    }\n  }\n  //------------------------------\n  [SerializeField]\n  private float _HealthPoints = 100f;\n}\n//------------------------------\n```", "```cs\n//------------------------------\nusing UnityEngine;\nusing System.Collections;\n//------------------------------\npublic class TimedDestroy : MonoBehaviour \n{\n  public float DestroyTime = 2f;\n\n  //------------------------------\n  // Use this for initialization\n  void Start ()\n  {\n    Invoke(\"Die\", DestroyTime);\n  }\n\n  void Die () \n  {\n    Destroy(gameObject);\n  }\n  //------------------------------\n}\n//------------------------------\n```", "```cs\n//------------------------------\nusing UnityEngine;\nusing System.Collections;\n//------------------------------\npublic class Health : MonoBehaviour\n{\n  public GameObject DeathParticlesPrefab = null;\n  private Transform ThisTransform = null;\n  public bool ShouldDestroyOnDeath = true;\n  //------------------------------\n  void Start()\n  {\n    ThisTransform = GetComponent<Transform>();\n  }\n  //------------------------------\n  public float HealthPoints\n  {\n    get\n    {\n      return _HealthPoints;\n    }\n\n    set\n    {\n      _HealthPoints = value;\n\n      if(_HealthPoints <= 0)\n      {\n        SendMessage(\"Die\", SendMessageOptions.DontRequireReceiver);\n\n        if(DeathParticlesPrefab != null)\n          Instantiate(DeathParticlesPrefab, ThisTransform.position, ThisTransform.rotation);\n\n        if(ShouldDestroyOnDeath)Destroy(gameObject);\n      }\n    }\n  }\n  //------------------------------\n  void Update()\n  {\n    if(Input.GetKeyDown(KeyCode.Space))\n      HealthPoints = 0;\n  }\n  //------------------------------\n  [SerializeField]\n  private float _HealthPoints = 100f;\n}\n//------------------------------\n```", "```cs\n//------------------------------\nusing UnityEngine;\nusing System.Collections;\n//------------------------------\npublic class Mover : MonoBehaviour\n{\n  //------------------------------\n  private Transform ThisTransform = null;\n  public float MaxSpeed = 10f;\n  //------------------------------\n  // Use this for initialization\n  void Awake () \n  {\n    ThisTransform = GetComponent<Transform>();\n  }\n  //------------------------------\n  // Update is called once per frame\n  void Update () \n  {\n    ThisTransform.position += ThisTransform.forward * MaxSpeed * Time.deltaTime;\n  }\n  //------------------------------\n}\n//------------------------------\n```", "```cs\n//------------------------------\nusing UnityEngine;\nusing System.Collections;\n//------------------------------\npublic class ObjFace : MonoBehaviour\n{\n  //------------------------------\n  public Transform ObjToFollow = null;\n  public bool FollowPlayer = false;\n  private Transform ThisTransform = null;\n  //------------------------------\n  // Use this for initialization\n  void Awake () \n  {\n    //Get local transform\n    ThisTransform = GetComponent<Transform>();\n\n    //Should face player?\n    if(!FollowPlayer)return;\n\n    //Get player transform\n    GameObject PlayerObj = GameObject.FindGameObjectWithTag(\"Player\");\n    if(PlayerObj != null)\n      ObjToFollow = PlayerObj.GetComponent<Transform>();\n  }\n  //------------------------------\n  // Update is called once per frame\n  void Update ()\n  {\n    //Follow destination object\n    if(ObjToFollow==null)return;\n\n    //Get direction to follow object\n    Vector3 DirToObject = ObjToFollow.position - ThisTransform.position;\n\n    if(DirToObject != Vector3.zero)\n      ThisTransform.localRotation = Quaternion.LookRotation(DirToObject.normalized,Vector3.up);\n  }\n  //------------------------------\n}\n//------------------------------\n```", "```cs\n//------------------------------\nusing UnityEngine;\nusing System.Collections;\n//------------------------------\npublic class ProxyDamage : MonoBehaviour\n{\n  //------------------------------\n  //Damage per second\n  public float DamageRate = 10f;\n  //------------------------------\n  void OnTriggerStay(Collider Col)\n  {\n    Health H = Col.gameObject.GetComponent<Health>();\n\n    if(H == null)return;\n\n    H.HealthPoints -= DamageRate * Time.deltaTime;\n  }\n  //------------------------------\n}\n//------------------------------\n```", "```cs\n//------------------------------\nusing UnityEngine;\nusing System.Collections;\n//------------------------------\npublic class Spawner : MonoBehaviour\n{\n  public float MaxRadius = 1f;\n  public float Interval = 5f;\n  public GameObject ObjToSpawn = null;\n  private Transform Origin = null;\n  //------------------------------\n  void Awake()\n  {\n  Origin = GameObject.FindGameObjectWithTag(\"Player\").GetComponent<Transform>();\n  }\n  //------------------------------\n  // Use this for initialization\n  void Start () \n  {\n    InvokeRepeating(\"Spawn\", 0f, Interval);\n  }\n  //------------------------------\n  void Spawn () \n  {\n    if(Origin == null)return;\n\n    Vector3 SpawnPos = Origin.position + Random.onUnitSphere * MaxRadius;\n    SpawnPos = new Vector3(SpawnPos.x, 0f, SpawnPos.z);\n    Instantiate(ObjToSpawn, SpawnPos, Quaternion.identity);\n  }\n  //------------------------------\n}\n//------------------------------\n```"]