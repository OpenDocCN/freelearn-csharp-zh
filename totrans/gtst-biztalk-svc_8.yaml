- en: Chapter 8. Moving to BizTalk Services
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this final chapter, we will discuss how to move to BizTalk Services. All
    through this book, we've looked at the new features of BizTalk Services and what
    they enable, but the likelihood is that you'll be wanting to move existing solutions
    to BizTalk Services. As you're reading this book, we'll make a further assumption
    that you want to know more about moving BizTalk Server solutions on-premises to
    BizTalk Services.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''ll look at the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: What's available to help move BizTalk Server solutions to BizTalk Services
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to deal with differences between the products
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Future plans for BizTalk Services
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the end of this chapter, you should have a good understanding of how to tackle
    moving the existing BizTalk Server solutions to BizTalk Services and what is planned
    in the evolution of BizTalk Services to make this even easier.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Moving from BizTalk Server
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'BizTalk Server consists of a number of architectural components, only some
    of which have parity in BizTalk Services. These are listed in the following table,
    which shows the comparison of BizTalk Server and BizTalk Services:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '| BizTalk Server | BizTalk Services |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
- en: '| Map | Transform |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
- en: '| Pipeline | Bridge |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
- en: '| Business Rules Engine | No equivalent / custom coding needed |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
- en: '| Business Activity Monitoring | No equivalent / custom coding needed |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
- en: '| Orchestration | Workflow outside of service |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
- en: '| Adapters | Bridge sources and destinations |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
- en: '| Schema | Schema |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
- en: '| Tracking | Tracking |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
- en: '| Trading Partner Management | Trading Partner Management |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
- en: As you can see from the preceding table, there are a number of functional differences
    between BizTalk Services v1.0 and BizTalk Server. This is to be expected, as BizTalk
    Server is an established, mature product that was first shipped in 2000; it has
    received numerous updates over time. BizTalk Services, on the other hand, was
    GA'd (released for general availability) on November 21, 2013\. However, all is
    certainly not lost, as there are several ways to mitigate the effort of moving
    from one to the other. In the following sections, we'll look at the different
    types of artifacts in a BizTalk Server solution and how to migrate to BizTalk
    Services.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Maps
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Messages and Transforms"), *Messages and
    Transforms*, covered mapping in detail and mentioned a tool we''ll look at more
    closely here. First though, let''s answer the question of whether you even need
    a tool.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: BizTalk Server provides the ability to run custom **Extensible Stylesheet Language
    Transformations** (**XSLT**)—just provide the path to an XSLT template file and
    the map contents are ignored. Maps written in this way do not need the conversion
    tool as you can simply take the XSLT and configure it in the same way in a BizTalk
    Services transform.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: The functional equivalent of maps in BizTalk are transforms in BizTalk Services,
    as you have already seen. The implementation of these technologies is, however,
    very different, and it is not possible to execute BizTalk Server maps in BizTalk
    Services.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft has released a conversion tool that takes a BizTalk map, a `.btm`
    file, as the input, and outputs a BizTalk Services transform file, `.trfm`. Let's
    see how this works.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: 'In [Chapter 2](ch02.html "Chapter 2. Messages and Transforms"), *Messages and
    Transforms*, we looked at a BizTalk Services transform and the source and target
    schemas for it. Here, we''ll revisit these schemas and look at the equivalent
    original BizTalk Server map. This is shown in the following screenshot:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '![Maps](img/7401EN_08_01.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
- en: A BizTalk Server map
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: 'The conversion tool is part of the BizTalk Services SDK available at [http://www.microsoft.com/en-us/download/details.aspx?id=39087](http://www.microsoft.com/en-us/download/details.aspx?id=39087).
    Select the `Tools.zip` download and unzip it on your local machine. This is a
    command-line-driven tool, so here, I''ll open a command window as shown in the
    following screenshot. The executable takes only two parameters: the path to the
    BizTalk `.btm` file and the output `.trfm` file (which is actually optional).'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '![Maps](img/7401EN_08_02.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
- en: The BizTalk map conversion tool
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: The resultant BizTalk Services transform is shown in the following screenshot.
    Running this yields exactly the same output as the transform we created in [Chapter
    2](ch02.html "Chapter 2. Messages and Transforms"), *Messages and Transforms*.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '![Maps](img/7401EN_08_03.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
- en: A converted map
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: As you've just seen, the conversion tool is a useful way to reuse existing maps
    in BizTalk Services. It is often the case that a large investment has been made
    in BizTalk maps, and this tool allows them to be converted with minimal effort
    in many cases. However, the tool is not without a few limitations that will require
    some rework to the resultant transforms.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: 'One fix that may be required to the generated transform if it won''t load correctly
    is to change the ID values in the file as it can sometimes emit duplicates. When
    you attempt to open the map in Visual Studio, you may see the error shown in the
    following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '![Maps](img/7401EN_08_04.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
- en: The mapping error message
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: This should be a simple case of finding the ID that is flagged as a duplicate
    when you try and open the transform and substituting its value with a new, unique
    one. If the ID refers to a script, there will be at least two places where the
    duplicate ID will need to be changed. An example is shown in the following code
    where the contents of the `Value` tag contain a duplicate ID. Changing this to
    a unique value, for example, `14`, will fix this in the sample accompanying this
    chapter.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Generally, if the tool cannot convert the map, it will convert as much as it
    can and substitute functoids that cannot be converted with an arithmetic expression
    functoid in the transform. This will be empty and therefore won't compile to indicate
    that you need to review it. If a functoid conversion is not possible, the equivalent
    functoid in the transform will have no inputs to it, again to indicate that something
    has not been converted. A full list of current limitations is provided in the
    `ReadMe.txt` file in the same location as the tool itself.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: The tool emits a logfile indicating the steps it took to convert the map. The
    `Log.txt` file will be written to the folder in which the tool was run in the
    command line.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Pipelines
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Pipelines in BizTalk Server are used to process data between adapters and the
    MessageBox. This requirement is now provided by bridges in BizTalk Services. We''ve
    covered bridges in detail elsewhere in this book ([Chapter 3](ch03.html "Chapter 3. Bridges"),
    *Bridges* and [Chapter 4](ch04.html "Chapter 4. Enterprise Application Integration"),
    *Enterprise Application Integration*). You should find that usage of bridges and
    the ability to deploy custom code in them provides most of the functionality you
    would encounter with the pipelines and custom pipeline components. The BizTalk
    Services standard bridge stages match quite closely to those of BizTalk Server,
    as illustrated in the following table:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '| BizTalk Server stage | BizTalk Services stage |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
- en: '| Receive: Decode | Enrich (1) |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
- en: '| Receive: Disassemble | Message Type / Enrich (2) |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
- en: '| Receive: Validate | Validate |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
- en: '| Receive: ResolveParty | N/A |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
- en: '| Send: Pre-assemble | Enrich (1) |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
- en: '| Send: Assemble | Enrich (2) |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
- en: '| Send: Encode | Send Reply |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
- en: '| Receive and Send: Port maps | Transform stage |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
- en: If the stages in the preceding table seem a little arbitrary, it's because they
    are. Just as in BizTalk Server it was perfectly possible to do everything in a
    single stage (depending on which stage it is of course), so is the case with BizTalk
    Services. While BizTalk Services doesn't have the concept of pipeline components,
    it provides enough stage placeholders for your own code and, of course, provides
    many of the things out of the box for which you'd have traditionally written a
    custom pipeline component anyway, such as property promotion. Even though BizTalk
    Server provides four receive pipeline stages, and in fact, pipeline stages are
    actually configurable (you can define your own), no one really has ever bothered
    with that and nearly all solutions just use the decode and validate stages (if
    that). The send pipeline is even less important, but again, BizTalk Services provides
    a similar mirror image of stages in which you are able to perform work with the
    messages flowing through should you need to.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: All this being said, it should be clear that if you encounter a solution that
    has custom pipeline components, you have some work to do, that is, to try and
    convert to BizTalk Services.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: Schema
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Schema support is largely the same in BizTalk Services, and generally, you should
    not encounter too many issues moving your schemas between the two. There are some
    notable exceptions such as the ability to pass multiple schemas into BizTalk Server
    maps, which is currently not possible with BizTalk Services, but generally, schemas
    can be reused in a straightforward manner.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Adapters
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'BizTalk Services shares the same concept of adapters, albeit with a much smaller
    set. Additionally, BizTalk Services provides two approaches to integration: sources
    and destinations for a bridge as well as the BizTalk Adapter Service, which uses
    the Service Bus relay to pass messages to an Internet Information Services (IIS)-hosted
    Line of Business (LOB) adapter (actually, the same LOB adapters BizTalk ships
    with). Therefore, if the adapters your BizTalk Server solution needs are represented
    in the BizTalk Services set, the conversion is straightforward. However, there
    are hundreds of adapters available for BizTalk Server and a dozen or so for BizTalk
    Services, so clearly, there are some gaps. Some just won''t make sense for a cloud-hosted
    platform (for example, the much-loved File adapter), but for others, this could
    present a problem.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft recognizes this potential issue and will, of course, seek to introduce
    new sources and destinations over time based on customer feedback. Microsoft is
    also planning to open up the architecture to provide an adapter SDK to enable
    you (or third parties) to build your own, thus offering another solution. Therefore,
    over time, this problem is likely to diminish.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: Trading Partner Management (TPM)
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: BizTalk Server uses TPM to define and manage EDI trading partners. Organizations
    that use BizTalk's EDI capabilities will likely have hundreds or even thousands
    of trading partners set up in BizTalk and will want a way to migrate these partners
    to BizTalk Services if they wish to adopt it.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: BizTalk Services takes the same approach to partner management as BizTalk, and
    changes made in BizTalk Server 2010 to the TPM model and schema were adopted in
    BizTalk Services. What this means is that the two are actually very similar and
    migration can be accomplished in a couple of ways.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: For existing BizTalk Server users, the TPM Data Migration Tool is provided by
    Microsoft. This is included in the same `Tools.zip` download as the map conversion
    tool discussed earlier, and it is capable of migrating the TPM data from either
    BizTalk Server 2010 or 2013.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: The BizTalk Server management console is shown in the following screenshot.
    Here, you can see two parties and an agreement that we want to migrate to BizTalk
    Services.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '![Trading Partner Management (TPM)](img/7401EN_08_05.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
- en: The BizTalk Server management console
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: 'To launch it, double-click on `TPMMigration.exe` and the application will appear
    as shown in the following screenshot:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: '![Trading Partner Management (TPM)](img/7401EN_08_06.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
- en: The TPM Data Migration Tool
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: 'The tool takes the SQL Server machine name for where the BizTalk Server management
    database resides and the ACS connection details for BizTalk Services as the input.
    It then displays the available partners to migrate as shown in the following screenshot:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '![Trading Partner Management (TPM)](img/7401EN_08_07.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
- en: Selecting partners to migrate
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, I''ve picked the two partners from the BizTalk Server management console.
    Clicking on **Next** then displays the agreements. I only have one, shown in the
    following screenshot, which is between the two parties, so selecting this and
    clicking on **Next** will start the process of moving the partners and agreements
    to BizTalk Services:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '![Trading Partner Management (TPM)](img/7401EN_08_08.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
- en: Selecting agreements
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the partners and agreements have been created in BizTalk Services, a **Summary**
    page details the work completed, as shown in the following screenshot:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '![Trading Partner Management (TPM)](img/7401EN_08_09.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
- en: The migration summary
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, looking in the BizTalk Services portal, we can see that the partners and
    agreement have been created, as shown in the following screenshot:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '![Trading Partner Management (TPM)](img/7401EN_08_10.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
- en: The BizTalk Services portal
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: The tool should be able to migrate all the parties and agreements you have set
    up in BizTalk Server. The one limitation the tool has is that it won't move the
    certificates that you use to secure the conversations between your organization
    and the trading partners. These need to be migrated manually.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: The TPM Data Migration Tool is useful when moving from BizTalk Server 2010/2013
    to BizTalk Services. However, another option exists if you need to move from a
    different product or an earlier version of BizTalk Server. This option is also
    a useful approach if you want to programmatically create trading partners perhaps,
    from a custom application or via integration with another product. This approach
    uses the TPM API. In fact, the migration tool leverages this API as well to do
    its jobs.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: Previously, the API that TPM used was not documented, and as such, customers
    were not supported if they wished to create trading partners in BizTalk programmatically.
    This is no longer the case. Microsoft has now published the API on MSDN, thus
    allowing customers to leverage it in a supported way.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: 'The BizTalk Services TPM API is documented at the following location:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: '[http://msdn.microsoft.com/en-us/library/windowsazure/dn232369.aspx](http://msdn.microsoft.com/en-us/library/windowsazure/dn232369.aspx)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to call the TPM API, an OAuth WRAP token is necessary for authentication.
    This token is simply a string consisting of the following pieces of information:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: 'User name: `owner`'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Password: Issuer Key from ACS'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'BizTalk Services endpoint name: `https://<yourservice>.biztalk.windows.net/`'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The process of calling the API is made up of two steps. First, POST a WRAP request
    and receive a WRAP token, which is then passed in on subsequent requests. The
    API is REST-based just like the other APIs we looked at in [Chapter 6](ch06.html
    "Chapter 6. API"), *API*. It is harder (although not impossible) to invoke them
    in Fiddler (or the browser) because of the OAuth requirement (as opposed to mutual
    certificate authentication). Therefore, let's look at the code necessary to retrieve
    a list of partners as an example.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: 'The following code will call Azure with the WRAP request and obtain a token:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This is quite straightforward. There are four pieces of information required.
    To obtain the ACS details for your BizTalk Services instance, go to the Azure
    portal, click on **BizTalk Services** in the left margin, select your instance,
    and click on **Connection Information**. You will find the namespace, issuer,
    and key here to substitute in the preceding code. The service name is the name
    you gave the BizTalk Services instance when you created it and will be the title
    displayed on the Azure portal dashboard.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: This information is concatenated and sent to ACS. It validates and returns an
    authentication token—a string that can be used on subsequent calls.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: 'The following piece of code (which should be placed just inside the preceding
    closing curly brace of the `using` statement) will pass in the token with the
    request and receive a list of partners in the specified BizTalk Services instance:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The preceding code performs an HTTP GET request on your BizTalk Services instance
    endpoint, appending the operation (`$PartnerManagement/Partners`) and passing
    the token. The response is an XML document containing all the partners set up
    in the BizTalk Services instance. To try this out, create a console application
    in Visual Studio and paste the code in the `Main` method, replacing the values
    marked in the code with your own service details. The resulting output from the
    partner import performed earlier is shown in the following screenshot:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: '![Trading Partner Management (TPM)](img/7401EN_08_11.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
- en: List of partners
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: There is much more that can be done with the API, such as creating partners
    and updating or deleting them. However, the approach is always the same, so feel
    free to explore on your own and see what you can do!
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: EDIFACT support
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: BizTalk Services first shipped with support for X12 and AS/2\. As of the February
    2014 service update, EDIFACT support is now also provided and will be particularly
    welcome for European customers.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: Business Rules Engine (BRE)
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now we come to a few areas that are more problematic. BizTalk Server has provided
    a Business Rules Engine and editor since 2004, and as such, it is used in many
    BizTalk Server solutions. There is no equivalent in BizTalk Services currently.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft is planning to provide a rules engine as part of BizTalk Services
    at some point, but there is no timeline for it yet. The intention is to provide
    parity with BizTalk Server and improved tooling, and both of these developments
    will make moving from Server to Services easier when introduced.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: In the meantime, one option is to convert BizTalk BRE rules to code. There are
    a number of solutions available that are able to convert BizTalk rules to Windows
    Workflow rules, and Windows Workflow rules are defined in code. Windows Workflow
    is also a part of the .NET framework, so there is no license cost in using it.
    Therefore, it is possible to run the code somewhere in the BizTalk Services solution,
    for example, in a bridge or transform. Of course, this is trivializing the problem
    slightly as BRE rules can access databases and other resources, so it may involve
    significantly more work than simple conversion. However, it is an option depending
    on what the rules are doing.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: Orchestration
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Probably the biggest challenge in moving BizTalk Server solutions to BizTalk
    Services is orchestration. Currently, there is no silver-bullet, automatic, or
    zero-effort way to convert or migrate orchestrations to BizTalk Services. There
    are some options though.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft plans to introduce workflow to BizTalk Services, and this will certainly
    help fill the gap. It means that orchestrations can be recoded to workflows and
    keep a similar architecture.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: First, remember that a bridge is actually a workflow. This means that bridges
    already offer some capabilities that orchestrations may have been used for earlier,
    such as message enrichment and routing (which is a large percentage), and as such,
    it may already be possible to migrate orchestration-based solutions.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: In the intervening period though, an alternative solution may have to be found.
    One solution is to use a workflow hosted in Azure, for example, in a worker role
    cloud service. BizTalk Services could invoke the cloud service by passing a message
    or data, and the service would run the workflow and return the results. This does
    change the architecture somewhat though as typically, the orchestration is in
    control—it may wait for a set interval or for specific responses from other systems
    and typically, an orchestration is used as the driver for a business process.
    It is worth remembering that bridges can be chained, so this style of process
    definition can be mimicked with BizTalk Services, where messages are processed,
    decisions are taken on routing (to more bridges), and so on. However, such a solution
    is likely to become complex and is best avoided.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: It is perhaps unfortunate then that an overuse of orchestration in BizTalk Server
    has always been prevalent. Orchestration was seen as the "aha" moment in early
    BizTalk when acronyms such as Business Process Management (BPM) were in vogue.
    It's unfortunate because orchestration has often been used when it is not necessary,
    and a simpler solution could have been created without it. While education over
    time has helped somewhat, there is still a large body of complex orchestration-centric
    BizTalk Server applications. If we face this scenario, migration to BizTalk Services
    today will be challenging.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: When not to move
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before closing, its worth pointing out that BizTalk Services is not meant to
    replace BizTalk Server. While there are certainly many similarities in the capabilities
    offered (and more on the way), there are different reasons for using each. Here
    are some of the reasons you should continue using BizTalk Server on-premises:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: All of your connectivity points (applications, services, and so on) are on-premises
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A large investment in BizTalk Server-specific solutions—as this would be likely
    to require a complete rewrite, therefore, outweighing some of the benefits
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Usage of capabilities that are not in BizTalk Services or will not fit the cloud
    model, for example, File and MQ Series adapters
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud is not the right solution because for example, security and/or regulatory
    restrictions, data classifications, or local laws may preclude sending such data
    over the public Internet or prevent storage of data off-premises
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The future
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Microsoft has committed to continuing investments in BizTalk Server and a strong
    roadmap for BizTalk Services. The following are the key announced developments
    coming for both products:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: BizTalk Server will ship a major release every alternate year
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A platform update release of BizTalk Server will ship every other year starting
    with BizTalk Server 2013 R2 this year
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following additions are planned for BizTalk Services with a target of a
    quarterly release cadence:'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Workflow integration
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Rules engine integration
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Business Activity Monitoring
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Adapter extensibility/SDK
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Custom code improvements in bridges
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Integration with Windows Azure Active Directory (WAAD)
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Business Process Modelling Notation (BPMN) support
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Windows Azure store for third-party components
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Scheduled backups
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we've looked at strategies and approaches for moving from BizTalk
    Server to BizTalk Services and some of the features that will be added to BizTalk
    Services that will make this easier. We tried to cover all the main building blocks
    of the BizTalk Server architecture and their equivalents (or alternatives) in
    BizTalk Services. As you've seen, while there is a significant overlap of functionality,
    it will take time for the BizTalk Services feature set to mature to the same level.
    The future for BizTalk Services is bright, and a fundamental tenet of Microsoft's
    cloud-first vision is to deliver frequent updates and enhancements in a way that
    simply isn't possible with shrink-wrapped on-premises products. Therefore, one
    can expect Microsoft to become even more customer focused and be able to action
    feedback and feature requests quicker than previously possible, all of which will
    enable Microsoft to help you move your existing solutions to the cloud.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了从 BizTalk Server 迁移到 BizTalk Services 的策略和方法，以及 BizTalk Services 将添加的一些功能，这些功能将使迁移过程更加容易。我们试图涵盖
    BizTalk Server 架构的所有主要构建块及其在 BizTalk Services 中的等效项（或替代方案）。正如你所看到的，尽管功能上有显著的重叠，但
    BizTalk Services 的功能集要达到相同水平还需要时间。BizTalk Services 的未来光明，微软“云优先”愿景的基本原则是以一种在本地产品中不可能实现的方式提供频繁的更新和增强。因此，可以预期微软将更加关注客户，能够比以前更快地采取反馈和功能请求，所有这些都将使微软能够帮助你将现有解决方案迁移到云端。
