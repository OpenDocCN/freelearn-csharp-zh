- en: '*Chapter 1*: Principles of the Software Development Life Cycle'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第一章*：软件开发生命周期的原则'
- en: In the modern digital workplace, the role of the .NET solution architect is
    becoming crucial in the software development life cycle. Having a technology leader
    and a solution creator who can design and build robust and efficient solutions
    is a key factor to delivering successful products.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在现代数字工作场所，.NET解决方案架构师在软件开发生命周期中的作用变得越来越关键。拥有能够设计和构建强大且高效解决方案的技术领导者和解决方案创造者，是成功交付产品的关键因素。
- en: This book will highlight the fundamentals that you need to know, as a .NET professional
    developer, to become an effective solution architect in this growing and rapidly
    changing field.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将突出您作为.NET专业开发者需要了解的基础知识，以便在这个不断增长和快速变化的领域中成为一名有效的解决方案架构师。
- en: Understanding the concept and principles of the **Software Development Life
    Cycle** (**SDLC**) is a great starting point toward planning a software product.
    This chapter aims to explain the notion of SDLC, its phases, and modern methodologies.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 理解软件开发生命周期（SDLC）的概念和原则是规划软件产品的良好起点。本章旨在解释SDLC的概念、阶段和现代方法。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Understanding what the SDLC is
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解什么是软件开发生命周期（SDLC）
- en: Exploring the different SDLC stages
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索不同的软件开发生命周期（SDLC）阶段
- en: Getting familiar with the popular SDLC models
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 熟悉流行的SDLC模型
- en: By the end of this chapter, you will be able to describe the SDLC stages and
    explain the difference between the popular SDLC models, such as **Scrum**, **Spiral**,
    and **DevOps**.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，您将能够描述软件开发生命周期的阶段，并解释流行的SDLC模型之间的区别，例如**Scrum**、**螺旋模型**和**DevOps**。
- en: Understanding the software development life cycle
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解软件开发生命周期
- en: In today's digital world, every company is looking to deliver a good quality
    software product in a short period, which means the efficiency and the speed of
    the development team are game changers. To achieve this goal, companies must apply
    a set of well-defined activities and structured stages that define the **software
    development life cycle**, also known as the **SDLC**.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在当今的数字世界中，每家公司都希望在一个较短的时间内交付高质量的软件产品，这意味着开发团队的效率和速度是改变游戏规则的因素。为了实现这一目标，公司必须应用一系列定义明确的活动和结构化阶段，这些活动和阶段定义了**软件开发生命周期**，也称为**SDLC**。
- en: The SDLC is a methodology of work and best practices that aim to ease the process
    of software development and make it more efficient, ensuring the final product
    is delivered on time within the project budget and is totally in line with the
    expectations of the client.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 软件开发生命周期（SDLC）是一种工作方法和最佳实践的方法论，旨在简化软件开发过程，使其更加高效，确保最终产品在项目预算内按时交付，并且完全符合客户的期望。
- en: There are different variations and models of the SDLC, such as the **Waterfall
    model**, the **Spiral model**, and the **Agile model**. They are popular and widely
    used by most software development organizations. Selecting the right model depends
    mainly on the size of the project and other factors. In the following sections,
    we are going to explore these models in detail to help you decide which model
    is right for your team and the project.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 软件开发生命周期（SDLC）有不同的变体和模型，例如**瀑布模型**、**螺旋模型**和**敏捷模型**。它们在大多数软件开发组织中都很受欢迎，并且被广泛使用。选择正确的模型主要取决于项目的规模和其他因素。在接下来的几节中，我们将详细探讨这些模型，以帮助您决定哪种模型适合您的团队和项目。
- en: 'Here are the six stages that are defined in the SDLC process:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是SDLC过程中定义的六个阶段：
- en: '![Figure 1.1: The six stages of the SDLC](img/Figure_1.1_B17366.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![图1.1：软件开发生命周期的六个阶段](img/Figure_1.1_B17366.jpg)'
- en: 'Figure 1.1: The six stages of the SDLC'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.1：软件开发生命周期的六个阶段
- en: We have just looked at an overview of the software development life cycle and
    its importance. In the next section, we will explore the different stages of the
    SDLC process.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚概述了软件开发生命周期及其重要性。在下一节中，我们将探讨软件开发生命周期过程的各个阶段。
- en: Exploring the different SDLC stages
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索不同的软件开发生命周期（SDLC）阶段
- en: '*What are the main activities in the SDLC?* No matter which model you choose
    to follow to implement your product, there are six different stages that are considered
    as common stages in most of the existing models. However, depending on the model,
    those stages can be executed sequentially or in parallel. By executing this series
    of stages, it is expected that you will be able to avoid typical and costly pitfalls
    and achieve the following goals:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*SDLC中的主要活动有哪些？* 无论你选择哪种模型来实施你的产品，都存在六个不同的阶段，这些阶段被认为是大多数现有模型中的常见阶段。然而，根据模型的不同，这些阶段可以是顺序执行或并行执行。通过执行这一系列阶段，预期可以避免典型的和昂贵的陷阱，并实现以下目标：'
- en: Lower costs
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成本降低
- en: Improved overall quality
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整体质量提升
- en: Shortened production time
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缩短生产时间
- en: Excellent customer satisfaction
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优秀的客户满意度
- en: Let's explore these stages since understanding them is very important to the
    solution architect, who will be involved with all of them. On the other hand,
    knowing those stages is necessary to organize and facilitate the development of
    the product, as well as to make the entire development process more transparent.
    We'll understand each of them in the following sections.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索这些阶段，因为理解它们对于解决方案架构师非常重要，他将参与所有这些阶段。另一方面，了解这些阶段对于组织并促进产品的开发，以及使整个开发过程更加透明也是必要的。我们将在以下各节中了解每个阶段。
- en: Planning and requirement analysis
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 规划和需求分析
- en: Since the requirements analysis is the first stage, it is the most important
    and fundamental stage in SDLC. This stage starts by identifying the client's stakeholders,
    and then conducting several meetings and workshops to define the expectations
    and gather the requirements.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 由于需求分析是第一个阶段，它是SDLC中最重要和最基本阶段。此阶段从识别客户的利益相关者开始，然后进行多次会议和研讨会，以定义期望并收集需求。
- en: This stage is performed by the business analyst, the project manager, and the
    senior technical members of the team. They conduct meetings and workshops with
    the client to gather all the functional and non-functional requirements, such
    as the purpose of building the product, what problems it will solve, how it will
    improve the efficiency of the work, what it will include in terms of functionalities
    and services, who the target audience or the end user is, identifying the user
    journeys, detailed use cases and test cases, hardware requirements, backup strategies,
    and failover processes.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 此阶段由业务分析师、项目经理和团队的高级技术成员执行。他们与客户进行会议和研讨会，以收集所有功能和非功能需求，例如构建产品的目的、它将解决的问题、它将如何提高工作效率、它将在功能和服务的哪些方面包含，目标受众或最终用户是谁、识别用户旅程、详细用例和测试用例、硬件要求、备份策略和故障转移流程。
- en: '**Planning** is the process of creating a detailed but high-level plan for
    how and when each module or task in the project will be developed. The aim is
    to identify the tasks and their dependencies, along with the expected output of
    each task. This should be aligned with the client''s expectations, as defined
    in the requirement analysis.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**规划**是创建一个详细但高级的计划的过程，说明每个项目模块或任务如何以及何时开发。目标是确定任务及其依赖关系，以及每个任务的预期输出。这应该与需求分析中定义的客户期望保持一致。'
- en: After this stage, everyone in the team should have a clear view of the scope
    of the project, including its budget, resources, and deadline, as well as possible
    risks and quality assurance needs. This will be shared with the client to align
    them with the execution of the project and to give them better transparency.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在此阶段之后，团队中的每个人都应该对项目的范围有一个清晰的了解，包括其预算、资源、截止日期，以及可能的风险和质量保证需求。这将与客户共享，以使他们对项目的执行保持一致，并为他们提供更好的透明度。
- en: 'Let''s take a look at the different techniques and activities that we usually
    use when executing the requirements analysis phases:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看在执行需求分析阶段时通常使用的不同技术和活动：
- en: '**Use cases**: This is an effective technique that is widely used to capture
    user requirements. It allows us to identify the possible flow of each feature
    to be implemented in the system, along with how it will interact with the end
    users. You may be wondering, *how many use cases should I write?* This might sound
    difficult at first, but the simple answer to this question is to make sure that
    you write down as many use cases as possible, to make sure you cover all possible
    actions and functionalities that should be included in the system.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用例**：这是一种广泛使用的有效技术，用于捕获用户需求。它允许我们识别系统要实现每个功能的可能流程，以及它将如何与最终用户交互。您可能会想知道，“我应该写多少个用例？”这个问题一开始可能听起来很难，但这个简单问题的答案是写下尽可能多的用例，以确保您涵盖了系统应包含的所有可能动作和功能。'
- en: 'The following are the common sections of a use case:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下是用例的常见部分：
- en: a. Use Case Name
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 用例名称
- en: b. Summary Description
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 摘要描述
- en: c. Actors
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 参与者
- en: d. Pre-Conditions
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 前置条件
- en: e. Post-Conditions
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e. 后置条件
- en: f. Level
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: f. 级别
- en: g. Stakeholders
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: g. 利益相关者
- en: '**Business Process Modeling Notation** (**BPMN**): This is used globally to
    create graphs that describe and document a business sequence using symbols and
    elements. This technique is recommended if you are implementing business automation
    processes or the product contains business workflows such as approval cycles.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**业务流程建模符号**（**BPMN**）：这是全球范围内用于创建使用符号和元素描述和记录业务序列的图表。如果您正在实施业务自动化流程或产品包含如审批周期等业务工作流，则建议使用此技术。'
- en: 'Here are the basic shapes of BPMN diagrams in **Visio**:'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里是 **Visio** 中 BPMN 图的基本形状：
- en: '![Figure 1.2: Basic shapes of BPMN diagrams](img/Figure_1.2_B17366.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2：BPMN 图的基本形状](img/Figure_1.2_B17366.jpg)'
- en: 'Figure 1.2: Basic shapes of BPMN diagrams'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2：BPMN 图的基本形状
- en: '**Unified Modeling Language** (**UML**): UML is used to create flowcharts and
    diagrams to visualize and document software components, such as classes and interfaces.
    UML is a good design practice and a very useful technique for creating object-oriented
    software; it helps software developers model and communicate any complex architectural
    software design:'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**统一建模语言**（**UML**）：UML 用于创建流程图和图表，以可视化和记录软件组件，如类和接口。UML 是一种良好的设计实践，也是创建面向对象软件的非常有用的技术；它帮助软件开发人员对任何复杂的软件架构进行建模和沟通：'
- en: '![Figure 1.3: Sample class diagram](img/Figure_1.3_B17366.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3：示例类图](img/Figure_1.3_B17366.jpg)'
- en: 'Figure 1.3: Sample class diagram'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3：示例类图
- en: '**Flowchart technique**: This is another graphical representation that''s used
    to describe the different steps of a sequential and logical process flow. In the
    following diagram, we have a sample flowchart for a checkout process. The green
    box is the starting point for when the user attempts to add items to the checkout
    cart before settling the payment and receiving confirmation at the end. The red
    box represents the end of the process; that is, its completion:'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流程图技术**：这是另一种用于描述顺序和逻辑流程不同步骤的图形表示方法。在下面的图中，我们有一个示例流程图，用于结账过程。绿色框表示用户在结账并收到确认之前尝试将项目添加到结账购物车时的起点。红色框代表流程的结束；即，其完成：'
- en: '![](img/Figure_1.4_B17366.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_1.4_B17366.jpg)'
- en: 'Figure 1.4: Sample flowchart diagram'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4：示例流程图
- en: '**Data flow diagram** (**DFD**): A diagram is worth a thousand words. You can
    use a DFD to visually represent the way data flows through a process or service
    in the system. This diagram is used to identify and describe the input data and
    how it is moving through the system to reach its storage location and form the
    output data. Here is a sample DFD diagram describing the flow of the data in a
    purchase order process:'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据流图**（**DFD**）：一图胜千言。您可以使用 DFD 可视化表示数据在系统中的流程或服务中的流动方式。此图用于识别和描述输入数据及其如何通过系统移动到其存储位置并形成输出数据。以下是一个描述采购订单流程数据流的示例
    DFD 图：'
- en: '![Figure 1.5: Sample data flow diagram](img/Figure_1.5_B17366.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.5：示例数据流图](img/Figure_1.5_B17366.jpg)'
- en: 'Figure 1.5: Sample data flow diagram'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5：示例数据流图
- en: '**Role Activity Diagrams** (**RAD**): This is a role-oriented representation
    of every possible action in the system. It is used to easily describe and visualize
    the different roles that are involved in executing each process or service in
    the system. The following is a sample role activity diagram describing an ATM
    transaction and showing the steps that are accomplished by each key role:'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**角色活动图**（**RAD**）：这是对系统中每个可能动作的角色导向表示。它用于轻松描述和可视化参与执行系统中每个流程或服务的不同角色。以下是一个描述自动柜员机交易并展示每个关键角色所完成步骤的样本角色活动图：'
- en: '![Figure 1.6: Sample role activity diagram](img/Figure_1.6_B17366.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.6：样本角色活动图](img/Figure_1.6_B17366.jpg)'
- en: 'Figure 1.6: Sample role activity diagram'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6：样本角色活动图
- en: '**Gantt charts**: These are used in project management to assist with planning
    and scheduling projects of all sizes. They provide a visual representation of
    tasks, their delivery dates, and the order and dependencies of each task.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**甘特图**：这些用于项目管理，以协助规划和调度各种规模的项目。它们提供了任务、交付日期以及每个任务的顺序和依赖关系的视觉表示。'
- en: 'This makes the execution plan more simplified and transparent for the client.
    The following is a sample Gantt chart representing a project plan. The tasks are
    grouped based on a specific context and linked through the predecessor column,
    along with the start date and end date:'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这使得执行计划对客户来说更加简化和透明。以下是一个表示项目计划的样本甘特图。任务根据特定上下文分组，并通过前驱列、开始日期和结束日期链接：
- en: '![Figure 1.7: Sample Gantt chart plan](img/Figure_1.7_B17366.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.7：样本甘特图计划](img/Figure_1.7_B17366.jpg)'
- en: 'Figure 1.7: Sample Gantt chart plan'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7：样本甘特图计划
- en: '**Gap analysis**: This is a technique that helps compare the current actual
    results of the system with what was expected by the client in the early stages
    of the project. It helps denote any missing strategic capability or feature in
    the system. It should also recommend ways you can make improvements that will
    help the client meet their initial targets. The following is a sample template
    that can be used to conduct a gap analysis exercise:'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**差距分析**：这是一种帮助比较系统当前实际结果与客户在项目早期阶段期望的技术。它有助于指出系统中任何缺失的战略能力或特性。它还应推荐你可以采取的改进方式，以帮助客户实现他们的初始目标。以下是一个可以用于进行差距分析练习的样本模板：'
- en: '![Figure 1.8: Sample gap analysis template](img/Figure_1.8_B17366.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.8：样本差距分析模板](img/Figure_1.8_B17366.jpg)'
- en: 'Figure 1.8: Sample gap analysis template'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.8：样本差距分析模板
- en: '**Building prototypes**: Building a mock-up, or a **Minimum Viable Product**
    (**MVP**) model, of the product will give the end users an idea of what the final
    version of the product will look like once all the features have been implemented.
    Using this technique, you can identify any feasibility challenges that you may
    face when you actually implement the product.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建原型**：构建一个原型，或一个**最小可行产品**（**MVP**）模型，将使最终用户对产品最终版本的外观有一个概念，一旦所有功能都得到实现。使用这种技术，你可以识别在实际上实施产品时可能遇到的任何可行性挑战。'
- en: 'While performing your analysis, consider grouping the requirements into the
    following three categories:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行分析时，考虑将需求分为以下三个类别：
- en: '**Functional requirements**: These represent all the detailed features and
    functionalities of the system. They are very important for both the development
    team, to find out what to implement, and the client''s stakeholders, to help them
    align on the final results of the product.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**功能需求**：这些代表系统所有详细的功能和特性。它们对于开发团队来说非常重要，以便了解要实现什么，对于客户的利益相关者来说也非常重要，以帮助他们就产品的最终结果达成一致。'
- en: '**Operational requirements**: These define the scenarios and the performance
    measures, along with the associated requirements, that are needed for the product
    to operate properly in accordance with the client''s expectations. This includes
    the following:'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作需求**：这些定义了产品正常运行所需的场景和性能衡量标准，以及相关的需求，以符合客户的期望。这包括以下内容：'
- en: a. Establishing critical and desired user performance
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 建立关键和期望的用户性能
- en: b. Defining constraints
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 定义约束
- en: c. Establishing the infrastructure needed
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 建立所需的基础设施
- en: d. Establishing measures of effectiveness
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 建立有效性衡量标准
- en: '**Technical requirements**: These describe the technical part that must be
    fulfilled to easily and successfully deploy the product and make it functional
    with good performance, as per the client''s expectations. This includes the technology
    that will be used, the technical architecture, the hardware, third-party integration,
    testing, and deployment plans.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**技术需求**：这些描述了必须满足的技术部分，以便轻松且成功地部署产品，并使其按照客户的期望具有良好性能。这包括将要使用的技术、技术架构、硬件、第三方集成、测试和部署计划。'
- en: 'Here are a couple of things that should be considered during this stage:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段应考虑以下几点：
- en: One of the main challenges in the requirements gathering phase is that each
    member of the client's stakeholders is seeing the product from his/her point of
    view. For the success of the project, consider listening and capturing all users'
    perspectives and document them in user stories or use cases. This will help you
    identify the full picture of what the product will look like and what it will
    provide as features.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在需求收集阶段的主要挑战之一是，客户的每个利益相关者都从自己的角度看待产品。为了项目的成功，请考虑倾听并捕捉所有用户的观点，并在用户故事或用例中记录下来。这将帮助您确定产品的完整面貌以及它将提供哪些功能。
- en: In the first meeting with the client, try to identify the different stakeholders
    and discuss the scope of work to make it clear for all parties. After that, you
    will have to meet with all the stakeholders to collect the detailed requirements.
    During these workshops, make sure you keep all your discussions within the scope
    set forth. This is important to keep the requirements aligned with the business
    needs and to avoid adding functionalities that the product was never expected
    to provide.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在与客户的第一次会议中，尝试识别不同的利益相关者，并讨论工作范围，以便让所有各方都清楚。之后，您将需要与所有利益相关者会面，收集详细的需求。在这些研讨会中，确保您将所有讨论都保持在设定的范围内。这对于保持需求与业务需求一致，以及避免添加产品从未预期提供的功能非常重要。
- en: So far, we've explored the different activities and techniques we can use for
    planning and conducting the requirement analysis workshop, which is essential
    for the success of the project. In the next section, we will learn how to document
    requirements.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经探讨了我们可以用于规划和执行需求分析研讨会不同活动和技术的不同方法，这对于项目的成功至关重要。在下一节中，我们将学习如何记录需求。
- en: Defining requirements
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义需求
- en: The next step after completing the requirements analysis workshop is to document
    all the information that was gathered in the previous step to define the product
    requirements. Usually, the output result of this activity is the **Software Requirement
    Specification** (**SRS**) document, which consists of all the detailed requirements
    to be designed and developed during all the phases of the project, from the beginning
    to its end, until the desired product is delivered. This SRS becomes the *requirements
    contract* that will be used to develop the product. It will address all the business
    needs of your client.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成需求分析研讨会之后，下一步是记录之前收集到的所有信息，以定义产品需求。通常，这一活动的输出结果是**软件需求规格说明书**（**SRS**）文档，它包含了在整个项目所有阶段中需要设计和开发的所有详细需求，从项目开始到结束，直到交付所需的产品。这个SRS成为将用于开发产品的**需求合同**。它将解决客户的所有业务需求。
- en: Once the SRS document has been finalized and reviewed by all the parties involved
    in this project, make sure you send it back to the key stakeholders, or the representatives
    of the key stakeholders, to sign it. The purpose of signing the SRS is to agree
    that the requirements that are presented and defined in the document are clear
    and reflect the business needs, as discussed in the analysis workshop. This formal
    commitment, which is expressed by all parties involved, will play a crucial role
    in the project life cycle to ensure that the project will not struggle from **scope
    creep** during its implementation.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦SRS文档被所有参与项目的各方最终确定并审查，请确保将其发送回关键利益相关者或关键利益相关者的代表，以签署它。签署SRS的目的是同意文档中呈现和定义的需求是清晰的，并反映了在分析研讨会中讨论的业务需求。这种由所有参与方表达的形式承诺，在项目生命周期中将发挥关键作用，以确保项目在实施过程中不会出现**范围蔓延**。
- en: 'Important Note:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示：
- en: In project management, scope creep (or requirement creep) refers to a situation
    where the client is continuously requesting changes and adding new features to
    the product, even after project kickoff. As a result, the project's scope will
    continue to grow, which will affect the delivery time and the final cost of the
    product. This should not occur and to prevent it, you must make sure that all
    the business needs (that is, the scope of the project) are very detailed and properly
    defined, and that the client has officially committed to the scope of work.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目管理中，范围蔓延（或需求蔓延）指的是在项目启动后，客户持续要求更改并添加新功能到产品中的情况。结果，项目的范围将持续增长，这将影响交付时间和产品的最终成本。这种情况不应发生，为了防止它，你必须确保所有业务需求（即项目的范围）都非常详细且正确定义，并且客户已正式承诺工作范围。
- en: 'A basic outline for an SRS document may look like this:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 一个SRS文档的基本大纲可能看起来像这样：
- en: Introduction
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引言
- en: 1.1 Purpose
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 1.1 目的
- en: 1.2 Intended Audience
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 1.2 预期受众
- en: 1.3 Intended Use
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 1.3 预期用途
- en: 1.4 Scope
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 1.4 范围
- en: 1.5 Definitions and Acronyms
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 1.5 定义和缩写
- en: Overall Description
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 总体描述
- en: 2.1 User Needs
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2.1 用户需求
- en: 2.2 Design and Implementation Constraints
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2.2 设计和实现约束
- en: 2.3 Assumptions and Dependencies
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2.3 假设和依赖关系
- en: System Features
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统特性
- en: 3.1 Functional Requirements
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 3.1 功能性要求
- en: External Interface Requirements
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 外部接口要求
- en: 4.1 User Interfaces
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 4.1 用户界面
- en: 4.2 Software Interfaces
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 4.2 软件接口
- en: 4.3 Hardware Interfaces
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 4.3 硬件接口
- en: Non-Functional Requirements
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 非功能性要求
- en: 5.1 Performance Requirements
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 5.1 性能要求
- en: 5.2 Security Requirements
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 5.2 安全要求
- en: 5.3 Software Quality Attributes
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 5.3 软件质量属性
- en: Feel free to use this outline and modify it as per your needs, but keep in mind
    that this document should describe the functionality the product needs to fulfill,
    along with the technical specifications. Therefore, it should be simple, easy
    to read, and understand by the project stakeholders. In the next section, we are
    going to learn about the architecture design phase.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 随意使用这个大纲并根据您的需求进行修改，但请记住，本文档应描述产品需要实现的功能，以及技术规范。因此，它应该是简单、易于阅读和理解，以便项目利益相关者。在下一节中，我们将了解架构设计阶段。
- en: Architectural design
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 架构设计
- en: '*How will we build the product?* This a crucial question to answer, especially
    if you''re building a complex or large-scale product that will be used by a wide
    range of users.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '*我们将如何构建产品？* 这是一个关键问题，尤其是如果你正在构建一个复杂或大规模的产品，该产品将被广泛用户使用。'
- en: To answer this question, we need to start the **architectural design phase**,
    which consists of converting the software specifications that were defined and
    documented in the previous stages into an abstract design specification plan called
    the **architectural design**.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 为了回答这个问题，我们需要开始**架构设计阶段**，这个阶段包括将前几个阶段中定义和记录的软件规范转换为一个称为**架构设计**的抽象设计规范计划。
- en: The starting point of this phase is to go through the SRS document and understand
    every single detail in the requirements. This will help you create the best architecture
    design, which will ensure you deliver a high-quality product. It is the responsibility
    of the technical team to document their design in a **Design Document Specification**
    (**DDS**) document. The intended audience of this document is the designers, software
    developers, and QA testers.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这个阶段的开端是审查SRS文档，并理解需求中的每一个细节。这将帮助你创建最佳的架构设计，确保你交付高质量的产品。技术团队有责任在**设计规范文档**（**DDS**）中记录他们的设计。本文件的预期受众是设计师、软件开发人员和QA测试人员。
- en: 'The purpose of this document is to present a comprehensive architectural overview
    and depict all the technical details of the system components. More specifically,
    it should present the following:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档的目的是提供一个全面的架构概述，并描绘系统组件的所有技术细节。更具体地说，它应该包括以下内容：
- en: The system architecture, components, classes, their attributes, and methods
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统架构、组件、类及其属性和方法
- en: The database's design, including the definition of the tables and fields, along
    with the relationships between tables
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库的设计，包括表和字段的定义，以及表之间的关系
- en: The graphical interface design
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形界面设计
- en: Hardware or software environment
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 硬件或软件环境
- en: End user environment
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最终用户环境
- en: Security requirements
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全要求
- en: Performance requirements and capacity limitations
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能要求和容量限制
- en: This DDS is reviewed by all the key technical stakeholders. Based on various
    factors such as design modularity, performance, security, capacity limitations,
    risks, budget, and time constraints, the best design approach is selected to build
    the product.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 本DDS由所有关键技术利益相关者进行审查。基于设计模块化、性能、安全性、容量限制、风险、预算和时间限制等因素，选择最佳设计方法来构建产品。
- en: 'A basic outline for a DDS document may look like this:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 一个DDS文档的基本大纲可能看起来像这样：
- en: Introduction
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引言
- en: 1.1 Purpose
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 1.1 目的
- en: 1.2 Scope
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 1.2 范围
- en: 1.3 Design Goals
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 1.3 设计目标
- en: 1.3.1 Maintainability
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 1.3.1 可维护性
- en: 1.3.2 Optimized Performance
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 1.3.2 优化性能
- en: 1.3.3 Designed Friendly
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 1.3.3 设计友好
- en: System Overview
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统概述
- en: 2.1 Algorithms
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2.1 算法
- en: 2.2 Technologies Used
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2.2 使用的技术
- en: 2.3 Architecture Diagrams
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2.3 架构图
- en: 2.4 Database Design
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2.4 数据库设计
- en: Design Considerations
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设计考虑
- en: 3.1 Assumptions and Dependencies
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 3.1 假设和依赖
- en: 3.2 General Constraints
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 3.2 一般约束
- en: 3.3 Goals and Guidelines
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 3.3 目标和指南
- en: 3.4 Development Methods
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 3.4 开发方法
- en: Architectural Strategies
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 架构策略
- en: 4.1 Strategy-1 name or description
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 4.1 策略-1 名称或描述
- en: 4.2 Strategy-2 name or description
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 4.2 策略-2 名称或描述
- en: 4.3 ...
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 4.3 ...
- en: System Architecture
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统架构
- en: 5.1 Component-1 name or description
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 5.1 组件-1 名称或描述
- en: 5.2 Component-2 name or description
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 5.2 组件-2 名称或描述
- en: 5.3 ...
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 5.3 ...
- en: Policies and Tactics
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 政策和策略
- en: 6.1 Policy/tactic-1 name or description
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 6.1 政策/策略-1 名称或描述
- en: 6.2 Policy/tactic-2 name or description
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 6.2 政策/策略-2 名称或描述
- en: 6.3 ...
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 6.3 ...
- en: Detailed System Design
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 详细系统设计
- en: 7.1 Module-1 name or description
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 7.1 模块-1 名称或描述
- en: 7.2 Module-2 name or description
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 7.2 模块-2 名称或描述
- en: 7.3 ...
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 7.3 ...
- en: Traceability
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可追溯性
- en: Glossary
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 术语表
- en: Appendix
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 附录
- en: You can use this outline to describe your architecture and prepare the DDS document.
    The more you make it clear and detailed, the more you make it easy for the developers
    and testers during the implementation and testing phases. Next, we will explore
    the development phase.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用这个大纲来描述您的架构并准备DDS文档。您做得越清晰、越详细，在实施和测试阶段对开发者和测试者就越有利。接下来，我们将探讨开发阶段。
- en: Software development
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件开发
- en: In this stage of SDLC, the software developers start actually developing the
    product. The technology that's used and the programming language, including all
    the technical standards, should be aligned with what was agreed on in the DDS
    document. Keep in mind that the development activities can be accomplished very
    smoothly when the design specifications are detailed and organized in a proper
    manner.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在SDLC的这个阶段，软件开发者开始实际开发产品。所使用的技术、编程语言，包括所有技术标准，应与DDS文档中同意的内容一致。记住，当设计规范详细且以适当的方式组织时，开发活动可以非常顺利地完成。
- en: Testing
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试
- en: '*Did we get what we want?* Testing the product is a must before launching it
    to the end users. This stage starts alongside the development stage, where the
    developers are responsible for testing what they are developing. At this time,
    it is just basic testing and not enough to say that the product is ready to go
    live.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '*我们得到了我们想要的东西吗？* 在将产品推向最终用户之前对其进行测试是必须的。这个阶段与开发阶段同时开始，此时开发者负责测试他们正在开发的内容。在这个时候，这只是基本的测试，并不能说产品已经准备好上线。'
- en: Therefore, an official testing cycle should be conducted once the development
    activities of a specific module or the entire set of features have been completed.
    During this phase, several types of testing should be conducted, every single
    functionality should be tested thoroughly, and the identified defects should be
    reported to the developers to get them fixed.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，一旦特定模块或整个功能集的开发活动完成，就应该进行官方测试周期。在此阶段，应进行多种类型的测试，每个功能都应该彻底测试，并且应将识别出的缺陷报告给开发者以修复。
- en: The quality assurance team can use the test cases that have been documented
    in the SRS, or they can refer to the use cases to test the product. It is recommended
    to run the test cases every time the developers release a new version of the product
    until it reaches a stable version. This is to make sure all the defects that were
    reported in the previous cycles have been closed.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 质量保证团队可以使用SRS中记录的测试用例，或者他们可以参考用例来测试产品。建议在开发者发布产品新版本时运行测试用例，直到达到稳定版本。这是为了确保在之前的周期中报告的所有缺陷都已关闭。
- en: Deployment and maintenance
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署和维护
- en: Software developers tend to invest the majority of their time in the design
    and development activities of the product, which is good. Despite its importance,
    I have learned from several projects that this is not enough. Setting a strategic
    plan for deployment and maintenance is a key factor for the success of the product.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 软件开发者往往将大部分时间投入到产品的设计和开发活动中，这是好的。尽管它很重要，但我从几个项目中了解到这还不够。制定部署和维护的战略计划是产品成功的关键因素。
- en: The focus at this stage is to make the product available for end users so that
    they can start using it. To do so, the product should be deployed to the production
    environment.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，重点是使产品对最终用户可用，以便他们可以开始使用它。为此，产品应部署到生产环境。
- en: First, it is recommended that you deploy the product in a testing or staging
    environment. This is where the **User Acceptance Testing** (**UAT**) activities
    should be performed. All the issues will be solved and deployed back to this environment.
    Once the product reaches a stable version that is accepted by the client and meets
    all the specifications that were approved in the previous phases, the product
    can be moved to the production environment.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，建议你在测试或预生产环境中部署产品。这就是应该进行**用户验收测试**（**UAT**）的地方。所有问题都将在此环境中解决并部署回来。一旦产品达到一个稳定版本，被客户接受，并且满足之前阶段批准的所有规格，产品就可以转移到生产环境。
- en: 'Important Note:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示：
- en: User acceptance testing is the final round of testing. It is performed by the
    client to verify that every single functionality provided by the software works,
    and to confirm that all the requirements have been covered. This will ensure that
    the software behaves exactly as the users expect and that they can easily use
    it without any errors or crashes occurring. At the end of the UAT, the client
    should accept the software or request some improvements before moving the software
    to the production environment.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 用户验收测试是最后的测试环节。由客户执行，以验证软件提供的每个功能是否正常工作，并确认所有要求都已涵盖。这将确保软件的行为与用户期望的完全一致，并且他们可以轻松使用而不会出现任何错误或崩溃。在UAT结束时，客户应接受软件或在将软件转移到生产环境之前要求一些改进。
- en: The maintenance phase starts immediately after the product is fully operational
    in the production environment and signed off by the client. This is a crucial
    step from the client's point of view because it ensures that their product continues
    to perform as designed after its deployment.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 维护阶段在产品在生产环境中完全运行并得到客户确认后立即开始。从客户的角度来看，这是一个关键步骤，因为它确保他们的产品在部署后继续按设计运行。
- en: Types of maintenance
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 维护类型
- en: 'There are four types of software maintenance:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 软件维护有四种类型：
- en: '**Corrective maintenance**: This is used mainly to rectify some errors and
    faults that are observed while the system is in use or to improve the performance
    of the system.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**纠错性维护**：这主要用于纠正在使用系统时观察到的某些错误和故障，或提高系统的性能。'
- en: '**Adaptive maintenance**: This may be needed when the client requests to run
    the software on a new environment such as new hardware or a new operating system.
    Sometimes, clients request to move their products from an on-premises environment
    to **Azure Cloud**. Moreover, it can cover integrating the product with third-party
    software.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**适应性维护**：当客户请求在新的环境中运行软件，如新的硬件或新的操作系统时，可能需要这种维护。有时，客户请求将他们的产品从本地环境迁移到**Azure云**。此外，它还可以涵盖将产品与第三方软件集成。'
- en: '**Perfective maintenance**: This type of maintenance focuses on implementing
    new features in the product. These features can be requested by the client to
    accommodate new business cases, or they can be reported by users who have already
    started interacting with the product and noticed some missing functionalities
    that can help facilitate their work and improve the overall experience.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完善性维护**：这种维护类型专注于在产品中实现新功能。这些功能可能是客户为了适应新的业务案例而请求的，或者是由已经开始与产品互动并注意到一些可以帮助他们工作并提高整体体验的缺失功能的使用者报告的。'
- en: '**Preventive maintenance**: This is commonly used to detect and correct errors
    that may cause software failure in the future. It helps reduce the risk of the
    issues that aren''t significant at this moment but may cause serious problems
    in the future; for example, assuming the clients are expecting to have an increased
    number of users who will start using their product after 2 months, but this load
    cannot be accommodated by the current environment''s specs. In this case, planning
    and updating the software environment in advance to serve the load that will be
    caused by the new users is considered preventive maintenance.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预防性维护**：这通常用于检测和纠正可能导致未来软件故障的错误。它有助于降低目前不显著但可能在未来造成严重问题的风险；例如，假设客户预计在两个月后将有更多的用户开始使用他们的产品，但当前的规格无法容纳这种负载。在这种情况下，提前规划和更新软件环境以服务由新用户引起的负载被认为是预防性维护。'
- en: 'Let''s take a look at the following table to understand when and why we should
    apply these maintenance types:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们查看以下表格，了解何时以及为什么应该应用这些维护类型：
- en: '![Figure 1.9: Software maintenance types ](img/Figure_1.9_B17366.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![图1.9：软件维护类型](img/Figure_1.9_B17366.jpg)'
- en: 'Figure 1.9: Software maintenance types'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.9：软件维护类型
- en: In the next section, we are going to explore the difference between software
    maintenance and warranty.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将探讨软件维护与保修之间的区别。
- en: Maintenance versus warranty
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 维护与保修的比较
- en: People may get confused about maintenance and warranty. A software warranty
    is a formal and legal guarantee that the product will perform properly, as per
    the specifications, for a certain period. It is a promise to fix any errors or
    malfunctions in the system at no cost during the warranty period.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 人们可能会对维护和保修感到困惑。软件保修是一种正式的法律保证，即产品将按照规格在一定的期限内正常工作。这是在保修期内免费修复系统中的任何错误或故障的承诺。
- en: The maintenance agreement is sold to the client for long-term and ongoing maintenance
    activities such as upgrades, updates, or product enhancements.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 维护协议是针对长期和持续维护活动（如升级、更新或产品增强）出售给客户的。
- en: We have just explained the different stages of the SDLC and highlighted the
    expected output of each stage. In the next section, we are going to provide an
    overview of the popular SDLC models.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚解释了SDLC的不同阶段，并强调了每个阶段的预期输出。在下一节中，我们将概述流行的SDLC模型。
- en: In this section, we explored all the SDLC phases, from planning and requirements
    analysis to deploying and sign-off. In the next section, we will get to know the
    most popular SDLC models.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们探讨了SDLC的所有阶段，从规划和需求分析到部署和验收。在下一节中，我们将了解最流行的SDLC模型。
- en: Getting familiar with the popular SDLC models
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 熟悉流行的软件开发生命周期（SDLC）模型
- en: Every product requires a suitable approach to developing it. Usually, this decision
    is made based on multiple factors, such as if the requirements are well-documented,
    the requirements are not ambiguous, the project is short, and so on. In this section,
    we will highlight some of the most popular models that are used in software development.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 每个产品都需要一个合适的方法来开发它。通常，这个决定是基于多个因素，例如需求是否记录良好，需求是否不模糊，项目是否短小，等等。在本节中，我们将突出一些在软件开发中使用的最流行的模型。
- en: The Waterfall model
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 瀑布模型
- en: The **Waterfall model** is a straightforward and sequential approach to building
    a software product. Each stage of the development cycle should be completed before
    you move on to the next stage and usually, the output of each stage is considered
    to be the input for the next stage.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '**瀑布模型**是一种直接且顺序化的软件开发方法。在进入下一个阶段之前，应该完成开发周期的每个阶段，并且通常，每个阶段的输出被认为是下一个阶段的输入。'
- en: 'Here is a representation of the different stages of this model:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是这个模型不同阶段的表示：
- en: '![Figure 1.10: Waterfall stages](img/Figure_1.10_B17366.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![图1.10：瀑布阶段](img/Figure_1.10_B17366.jpg)'
- en: 'Figure 1.10: Waterfall stages'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.10：瀑布阶段
- en: 'Some of the advantages of the Waterfall model are as follows:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 瀑布模型的一些优点如下：
- en: Stages are clearly defined and easy to understand
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阶段定义明确且易于理解
- en: Stages are well-documented
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阶段有良好的文档记录
- en: Works well for smaller projects where the requirements are well-defined
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于需求定义明确的较小项目，效果良好
- en: 'Some of the disadvantages of this model are as follows:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型的一些缺点如下：
- en: The working version of the product will be delivered at a late stage of the
    development cycle.
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品的工作版本将在开发周期的后期阶段交付。
- en: Not a good model for complex and ongoing projects since the stakeholders won't
    be able to give their feedback at the early stages of the development process.
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于复杂和持续的项目来说，这不是一个好的模型，因为利益相关者无法在开发过程的早期阶段提供反馈。
- en: Not a good model when there is a high risk of requirements changing.
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当需求变更风险较高时，这不是一个好的模型。
- en: The Agile model
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 敏捷模型
- en: The **Agile model**, an example of which is Scrum, is one of the most well-known
    development methodologies and is widely adopted by many IT organizations. It is
    also applied to non-tech projects.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '**敏捷模型**，例如 Scrum，是最知名的开发方法之一，被许多 IT 组织广泛采用。它也应用于非技术项目。'
- en: The approach of this model is to break the product into cycles or iterations.
    Each iteration lasts for about 2-4 weeks (usually, it shouldn't be a long time).
    At each iteration, the development team should deliver a complete working version
    of the software. The idea is to take the use cases and split them into iterations
    so that you get a functioning part of the product at the end of the iteration.
    In this way, the development team is producing ongoing and incremental releases
    that have been well tested.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 此模型的方法是将产品分解成周期或迭代。每个迭代大约持续 2-4 周（通常，时间不应过长）。在每个迭代中，开发团队应交付一个完整的软件工作版本。想法是将用例分解成迭代，以便在迭代结束时得到产品的一个功能部分。这样，开发团队就可以产生持续的和增量发布，这些发布已经过良好的测试。
- en: This approach helps teams identify and address issues early on. It also involves
    the stakeholders throughout the development process to get their feedback.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法有助于团队早期识别和解决问题。它还涉及利益相关者在整个开发过程中，以获取他们的反馈。
- en: 'The following diagram is a quick representation of the Agile stages:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表是敏捷阶段的快速表示：
- en: '![Figure 1.11: Agile stages](img/Figure_1.11_B17366.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.11：敏捷阶段](img/Figure_1.11_B17366.jpg)'
- en: 'Figure 1.11: Agile stages'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.11：敏捷阶段
- en: The Spiral model
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 螺旋模型
- en: 'The **Spiral model** is a combination of the Iterative model and the Waterfall
    sequential model. Usually used for large projects, it provides support for risk
    handling at the early stages of each iteration. With this model, the project passes
    through four phases:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '**螺旋模型** 是迭代模型和瀑布顺序模型的结合。通常用于大型项目，它为每个迭代的早期阶段的风险处理提供支持。使用此模型，项目通过以下四个阶段：'
- en: Identifying objectives by gathering the business requirements
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过收集业务需求来识别目标
- en: Performing risk analysis
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行风险评估
- en: Reviewing and evaluating
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 审查和评估
- en: Developing and testing
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发和测试
- en: 'Here is a diagram depicting the Spiral model:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是描述螺旋模型的图表：
- en: '![Figure 1.12: Spiral model](img/Figure_1.12_B17366.jpg)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.12：螺旋模型](img/Figure_1.12_B17366.jpg)'
- en: 'Figure 1.12: Spiral model'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.12：螺旋模型
- en: With each iteration, you can build a prototype of the new feature and functionalities
    that will be delivered in this iteration.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个迭代中，你可以构建新功能和新功能的原型，这些功能将在本次迭代中交付。
- en: These phases are repeated in a *spiral* until the entire product is delivered,
    allowing for multiple rounds of refinement.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 这些阶段以 *螺旋* 形式重复，直到整个产品交付，允许进行多轮细化。
- en: 'The advantages of the Spiral model are as follows:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 螺旋模型的优势如下：
- en: This model provides an early indication of the existence of risks.
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此模型提供了风险存在的早期迹象。
- en: Critical high-risk functionalities are developed first.
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先开发关键高风险功能。
- en: Stakeholders are closely tied to the entire development life cycle phases.
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利益相关者与整个开发生命周期阶段紧密相连。
- en: Users can see the system in action at early stages with the use of prototypes.
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以通过使用原型在早期阶段看到系统运行情况。
- en: Stakeholders can incorporate early and continuous feedback.
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利益相关者可以尽早并持续地提供反馈。
- en: 'The disadvantages of the Spiral model are as follows:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 螺旋模型的缺点如下：
- en: This model is costly and is not recommended for small projects that have low
    risks in most cases.
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此模型成本高昂，不推荐用于大多数情况下风险较低的小型项目。
- en: Managing the process is somewhat complex.
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理过程相对复杂。
- en: Risk assessment expertise is required to run this model.
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行此模型需要风险评估的专业知识。
- en: The DevOps model
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps 模型
- en: In a **DevOps model**, the developers and operations teams work together. You
    may be wondering, *well, what does this mean?*
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在 **DevOps 模型** 中，开发人员和运维团队共同工作。你可能想知道，*这究竟意味着什么？*
- en: 'Using the traditional models that we talked about earlier, companies were splitting
    up their resources into teams that handled specific responsibilities:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 使用我们之前讨论的传统模型，公司会将资源分割成处理特定责任的团队：
- en: A development team to architect and build the product.
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发团队来架构和构建产品。
- en: An operations team to prepare the environment and host the product.
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个操作团队来准备环境和托管产品。
- en: A test team to prepare the test cases and conduct thorough QA testing and to
    report back to the development team.
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个测试团队来准备测试用例，进行彻底的QA测试，并向开发团队汇报。
- en: With the DevOps methodology, the developers and operations teams are requested
    to collaborate closely – as one team – in all the stages of the SDLC process.
    A successful DevOps model ensures continuous feedback, accelerates the deployment,
    improves the development process, and automates manual processes.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 使用DevOps方法，开发团队和操作团队被要求在整个SDLC流程的各个阶段紧密合作——作为一个团队。一个成功的DevOps模型确保了持续的反馈，加速了部署，改善了开发过程，并自动化了手动流程。
- en: 'Here is a representation showing the different steps in the DevOps model:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 这里展示的是DevOps模型中不同步骤的表示：
- en: '![Figure 1.13: DevOps model](img/Figure_1.13_B17366.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![图1.13：DevOps模型](img/Figure_1.13_B17366.jpg)'
- en: 'Figure 1.13: DevOps model'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.13：DevOps模型
- en: 'The advantages of the DevOps model are as follows:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps模型的优势如下：
- en: Fast delivery of features
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特性快速交付
- en: Better responsiveness to problems
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好地响应问题
- en: Efficient operations
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高效的运营
- en: Reduced bottlenecks
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少瓶颈
- en: Better communication and collaboration
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的沟通和协作
- en: More productive team members, with more time to innovate
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更高效的团队成员，有更多时间进行创新
- en: 'The disadvantages of the DevOps model are as follows:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps模型的缺点如下：
- en: DevOps requires culture change and new methods of communication, which is a
    big challenge in a traditional environment.
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DevOps需要文化变革和新的沟通方式，这在传统环境中是一个巨大的挑战。
- en: There is a need to upgrade the infrastructure to optimize the process, which
    can be expensive for some companies.
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要升级基础设施以优化流程，这对某些公司来说可能是昂贵的。
- en: Fast development can lead to critical security shortfalls.
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速开发可能导致关键的安全漏洞。
- en: Now, let's learn how to choose the right model.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们学习如何选择正确的模型。
- en: Choosing the right model
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择正确的模型
- en: When selecting the right SDLC model to build a particular product, it's important
    to remember that each model offers a unique process that may help you overcome
    the challenges that you will encounter during the development cycle. One model
    would never fit every project or every client's needs, which is why you should
    understand these popular models and know when to apply them.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 当选择合适的SDLC模型来构建特定产品时，重要的是要记住，每个模型都提供了一种独特的过程，这可能有助于你在开发周期中克服遇到的挑战。没有一个模型适合每个项目或每个客户的需求，这就是为什么你应该了解这些流行的模型，并知道何时应用它们。
- en: Finding the right model depends heavily on the factors the project will be executed
    with, such as your current infrastructure, the culture adopted by your team, and
    how the client would like the project to be managed. Certain projects may run
    best with a Waterfall approach, while others would benefit from the flexibility
    of the Agile model.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 选择正确的模型很大程度上取决于项目执行的因素，例如你当前的基础设施、你团队采用的文化以及客户希望如何管理项目。某些项目可能最好采用瀑布方法，而其他项目则可能从敏捷模型的灵活性中受益。
- en: 'Let''s take a look at the following table, which highlights the main factors
    when it comes to choosing the right model for your product:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下以下表格，它突出了选择产品正确模型时的主要因素：
- en: '![Figure 1.14: How to choose the right SDLC model](img/Figure_1.14_B17366.jpg)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![图1.14：如何选择正确的SDLC模型](img/Figure_1.14_B17366.jpg)'
- en: 'Figure 1.14: How to choose the right SDLC model'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.14：如何选择正确的SDLC模型
- en: In this section, you explored the most popular SDLC models. Each one offers
    a unique methodology that can help you overcome different challenges you may encounter
    in your career. You also learned how to choose the right model for your product.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你探索了最流行的SDLC模型。每个模型都提供了一种独特的方法，可以帮助你克服你在职业生涯中可能遇到的不同挑战。你还学习了如何为你的产品选择正确的模型。
- en: Summary
  id: totrans-253
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about the definition and the importance of the
    SDLC, as well as how it can help the organization deliver products in an efficient
    way. Then, you learned about the different stages of the SDLC, the most popular
    models, along with their advantages and disadvantages, and how to choose the right
    model for your team.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了软件开发生命周期（SDLC）的定义及其重要性，以及它如何帮助组织以高效的方式交付产品。然后，你了解了SDLC的不同阶段、最流行的模型，以及它们的优缺点，以及如何为你的团队选择合适的模型。
- en: In the next chapter, you will learn about the different team roles, along with
    their responsibilities, and how they fit into the SDLC process and the team structure.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习不同的团队角色，以及它们的职责，以及它们如何融入SDLC流程和团队结构。
