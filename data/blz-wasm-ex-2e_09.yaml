- en: '9'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '9'
- en: Uploading and Reading an Excel File
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 上传和读取 Excel 文件
- en: There are many different scenarios that require a web app to allow users to
    upload local files. Also, there are just as many different types of files that
    a user may need to upload.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: There are many different scenarios that require a web app to allow users to
    upload local files. Also, there are just as many different types of files that
    a user may need to upload.
- en: In this chapter, we will learn how to upload different types of files by using
    the **InputFile** component. We will learn how to upload image files and how to
    resize the images that are uploaded. We will also learn how to perform virtualization
    by using the **Virtualize** component to only render the visible data. Finally,
    we will learn how to read a Microsoft Excel file by using the **Open XML SDK**.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何使用 **InputFile** 组件上传不同类型的文件。我们将学习如何上传图像文件以及如何调整上传的图像大小。我们还将学习如何使用
    **Virtualize** 组件进行虚拟化，仅渲染可见数据。最后，我们将学习如何使用 **Open XML SDK** 读取 Microsoft Excel
    文件。
- en: The project that we create in this chapter will be an Excel reader that will
    allow us to upload an Excel file and view its contents in a table, using virtualization.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中创建的项目将是一个 Excel 读取器，它将允许我们上传 Excel 文件并在表中查看其内容，使用虚拟化。
- en: Decipher the parts
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 解析各个部分
- en: ''
  id: totrans-6
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: to read an Excel file –
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 读取 Excel 文件 –
- en: ''
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: not complicated!
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 不复杂！
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Uploading files
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上传文件
- en: Using virtualization
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用虚拟化
- en: Reading Excel files
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取 Excel 文件
- en: Creating the Excel reader project
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 Excel 读取器项目
- en: Technical requirements
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To complete this project, you need to have Visual Studio 2022 installed on your
    PC. For instructions on how to install the free Community Edition of Visual Studio
    2022, refer to *Chapter 1*, *Introduction to Blazor WebAssembly*.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成此项目，您需要在您的 PC 上安装 Visual Studio 2022。有关如何安装 Visual Studio 2022 的免费社区版的说明，请参阅
    *第 1 章*，*Blazor WebAssembly 简介*。
- en: 'The source code for this chapter is available in the following GitHub repository:
    [https://github.com/PacktPublishing/Blazor-WebAssembly-by-Example-Second-Edition/tree/main/Chapter09](https://github.com/PacktPublishing/Blazor-WebAssembly-by-Example-Second-Edition/tree/main/Chapter09).'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的源代码可在以下 GitHub 仓库中找到：[https://github.com/PacktPublishing/Blazor-WebAssembly-by-Example-Second-Edition/tree/main/Chapter09](https://github.com/PacktPublishing/Blazor-WebAssembly-by-Example-Second-Edition/tree/main/Chapter09)。
- en: 'The Code in Action video is available here: [https://packt.link/Ch9](https://packt.link/Ch9).'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 'The Code in Action video is available here: [https://packt.link/Ch9](https://packt.link/Ch9).'
- en: Uploading files
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 上传文件
- en: The `InputFile` component is a built-in Blazor component that is used to upload
    files into a Blazor app. It renders an HTML `input` element of type `file` and
    supplies a stream for the contents of the file. It is in the `Microsoft.AspNetCore.Components.Forms`
    namespace.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`InputFile` 组件是一个内置的 Blazor 组件，用于将文件上传到 Blazor 应用程序。它渲染一个 HTML `input` 元素，类型为
    `file`，并为文件内容提供流。它位于 `Microsoft.AspNetCore.Components.Forms` 命名空间中。'
- en: 'The `OnChange` event of the `InputFile` component is used to set the callback
    that gets invoked when a file is selected. This is an example of an `InputFile`
    component that invokes the `OnChangeHandler` method when a file is selected:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`InputFile` 组件的 `OnChange` 事件用于设置在文件被选中时调用的回调。以下是一个在文件被选中时调用 `OnChangeHandler`
    方法的 `InputFile` 组件示例：'
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This is the resulting HTML markup from the preceding example:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这是前面示例的结果 HTML 标记：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In the preceding HTML markup, the `_bl_2` attribute is used for Blazor’s internal
    processing, but everything else is a typical `input` element. The `accept` attribute
    is used to filter the types of files that are displayed in the **Select File**
    dialog.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的 HTML 标记中，`_bl_2` 属性用于 Blazor 的内部处理，但其他一切都是典型的 `input` 元素。`accept` 属性用于过滤在
    **选择文件** 对话框中显示的文件类型。
- en: 'The following screenshot shows how the preceding markup is rendered:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了前面的标记是如何渲染的：
- en: '![](img/B18471_09_01.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18471_09_01.png)'
- en: 'Figure 9.1: Rendered InputFile component'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.1：渲染的 InputFile 组件
- en: 'When the **Choose File** button of the `InputFile` component is clicked, the
    **Select File** dialog opens to allow the user to select a file. This is a screenshot
    of the **Select File** dialog:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当点击 `InputFile` 组件的 **选择文件** 按钮时，将打开 **选择文件** 对话框，允许用户选择文件。以下是 **选择文件** 对话框的截图：
- en: '![Graphical user interface, application  Description automatically generated](img/B18471_09_02.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，应用程序描述自动生成](img/B18471_09_02.png)'
- en: 'Figure 9.2: Select File dialog'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.2：选择文件对话框
- en: '**IMPORTANT NOTE**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: Although we have indicated that only files of type `image/png` and `image/jpg`
    should be accepted, the **Select File** dialog allows the user to select **All
    files (*.*)** via the file type selector. Therefore, there is never any guarantee
    concerning the type of file that the user has selected.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们已经指出，只有 `image/png` 和 `image/jpg` 类型的文件应该被接受，但 **选择文件** 对话框允许用户通过文件类型选择器选择
    **所有文件 (*.*)**。因此，永远无法保证用户选择的文件类型。
- en: 'The `InputFileChangeEventArgs` class is used to supply information about the
    `OnChange` event being raised. The following code sets the `selectedFile` field
    to the value of the `File` property of the `InputFileChangeEventArgs` object,
    provided to the `OnChangeHandler` method:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`InputFileChangeEventArgs` 类用于提供有关正在引发的 `OnChange` 事件的信息。以下代码将 `selectedFile`
    字段设置为提供给 `OnChangeHandler` 方法的 `InputFileChangeEventArgs` 对象的 `File` 属性的值：'
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `File` property represents the uploaded file and is of type `IBrowserFile`.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`File` 属性表示上传的文件，其类型为 `IBrowserFile`。'
- en: 'These are the properties of the `IBrowserFile` interface:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是 `IBrowserFile` 接口的属性：
- en: '`ContentType` – the MIME type of the file'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ContentType` – 文件的内容类型'
- en: '`LastModified` – the last modified date of the file'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LastModified` – 文件的最后修改日期'
- en: '`Name` – the name of the file'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Name` – 文件名'
- en: '`Size` – the size of the file in bytes'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Size` – 文件的大小（以字节为单位）'
- en: '**IMPORTANT NOTE**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: You should never trust a file that is uploaded from the internet. You should
    treat it as a potential security risk to your app, server, and network. The `ContentType`,
    `LastModified`, `Name`, and `Size` properties can all be manipulated to cause
    your system harm and cannot be trusted.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你永远不应该信任从互联网上传的文件。你应该将其视为可能对你的应用程序、服务器和网络构成安全风险的潜在威胁。`ContentType`、`LastModified`、`Name`
    和 `Size` 属性都可以被操纵以损害你的系统，并且不可信。
- en: 'The `IBrowserFile` interface only has one method. It is the `OpenReadStream`
    method that is used to read the uploaded file. By default, the maximum size of
    the stream is 500 KB. However, the `maxAllowedSize` parameter can be used to increase
    the maximum size of the stream. In the following example, the maximum size of
    the stream is set to the value of `MAXFILESIZE`:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`IBrowserFile` 接口只有一个方法。它是 `OpenReadStream` 方法，用于读取上传的文件。默认情况下，流的最大大小为 500
    KB。但是，可以使用 `maxAllowedSize` 参数来增加流的最大大小。在以下示例中，流的最大大小被设置为 `MAXFILESIZE` 的值：'
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Resizing images
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缩放图像
- en: 'Images can be quite large. Sometimes we need to restrict the size of images
    that are allowed to be uploaded into an application. In those cases, we can use
    the `RequestImageFileAsync` method to resize the image. These are the parameters
    of the `RequestImageFileAsync` method:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图像可能非常大。有时我们需要限制允许上传到应用程序中的图像的大小。在这些情况下，我们可以使用 `RequestImageFileAsync` 方法来缩放图像。以下是
    `RequestImageFileAsync` 方法的参数：
- en: '`Format` – the format of the new image'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Format` – 新图像的格式'
- en: '`MaxWidth` – the maximum width of the new image'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MaxWidth` – 新图像的最大宽度'
- en: '`MaxHeight` – the maximum height of the new image'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MaxHeight` – 新图像的最大高度'
- en: '**IMPORTANT NOTE**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: The `RequestImageFileAsync` method does not verify that the image is a valid
    one. Therefore, any results should be treated as untrustworthy.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`RequestImageFileAsync` 方法不会验证图像是否有效。因此，任何结果都应被视为不可信。'
- en: 'When using the `RequestImageFileAsync` method, the image is resized using the
    provided dimensions while preserving the aspect ratio of the original image. The
    following `UploadImage` component resizes the uploaded image:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用 `RequestImageFileAsync` 方法时，图像会使用提供的尺寸进行缩放，同时保留原始图像的宽高比。以下 `UploadImage`
    组件会缩放上传的图像：
- en: '**UploadImage.razor**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**UploadImage.razor**'
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The preceding code uses the `RequestImageFileAsync` method to resize the image
    to 100 x 100 pixels. It uses the `OpenReadStream` method to read the file, which
    is then encoded into a `Base64` string. Finally, the image’s original size, the
    resized image’s new size, and the resized image itself are all rendered when the
    value of the `image` property is no longer `null`.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码使用 `RequestImageFileAsync` 方法将图像缩放为 100 x 100 像素。它使用 `OpenReadStream` 方法读取文件，然后将其编码为
    `Base64` 字符串。最后，当 `image` 属性的值不再是 `null` 时，渲染图像的原始大小、缩放后图像的新大小以及缩放后的图像本身。
- en: '**TIP**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: Although our example reads the file directly into memory, we recommend that
    you copy the stream directly into a file on disk or upload the file to an external
    service, such as Azure Blob Storage.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们的示例直接将文件读入内存，但我们建议你直接将流复制到磁盘上的文件或上传到外部服务，例如 Azure Blob 存储。
- en: 'This is a screenshot that uses the **Upload Image** page to upload a very large
    photo, taken on a trip we took to St John, USVI:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一张使用 **上传图片** 页面上传的一张非常大的照片的截图，照片是在我们前往美国维尔京群岛圣约翰的旅行中拍摄的：
- en: '![Graphical user interface, text, application  Description automatically generated](img/B18471_09_03.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序  自动生成的描述](img/B18471_09_03.png)'
- en: 'Figure 9.3: Upload Image results'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.3：上传图片结果
- en: In the preceding example, we were able to reduce the size of the file from 6,413,880
    bytes to 4,719 bytes.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们能够将文件大小从 6,413,880 字节减少到 4,719 字节。
- en: Handling multiple files
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理多个文件
- en: 'By default, the `InputFile` component only allows for a single file to be selected.
    However, the `InputFile` component can be used to upload multiple files by using
    the `multiple` attribute, as shown in the following example:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`InputFile` 组件只允许选择单个文件。然而，可以通过使用 `multiple` 属性来使用 `InputFile` 组件上传多个文件，如下面的示例所示：
- en: '[PRE5]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: When using the `multiple` attribute, the `FileCount` property of `InputFileChangeEventArgs`
    is used to determine the number of files that have been uploaded. When allowing
    for the upload of multiple files, instead of using the `File` property to access
    the files, we use the `GetMultipleFiles` method of `InputFileChangeEventArgs`
    to loop through the list of files that have been uploaded.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用 `multiple` 属性时，`InputFileChangeEventArgs` 的 `FileCount` 属性用于确定已上传的文件数量。当允许上传多个文件时，而不是使用
    `File` 属性来访问文件，我们使用 `InputFileChangeEventArgs` 的 `GetMultipleFiles` 方法来遍历已上传的文件列表。
- en: 'In the following example, the `GetMultipleFiles` method is used to return the
    list of files that were selected. The list of files is then looped through using
    a `foreach` loop:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，使用 `GetMultipleFiles` 方法来返回所选文件的列表。然后使用 `foreach` 循环遍历文件列表：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**IMPORTANT NOTE**'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: You cannot add files to the list of files that have been selected. Each time
    `InputFile` is used, the previous list of files is replaced by the new list of
    files.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 您不能向已选文件的列表中添加文件。每次使用 `InputFile` 时，之前的文件列表都会被新的文件列表替换。
- en: The `InputFile` component can be used to upload one or more files at a time
    to a Blazor WebAssembly app by using the `multiple` attribute.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`InputFile` 组件可以通过使用 `multiple` 属性将一个或多个文件一次性上传到 Blazor WebAssembly 应用程序。'
- en: The `InputFile` component can be used to upload many different types of files,
    such as Excel files and image files. By using the `RequestImageFileAsync` method,
    we can resize the images that are uploaded. We can use the `multiple` attribute
    to allow users to upload multiple files.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`InputFile` 组件可以用来上传许多不同类型的文件，例如 Excel 文件和图片文件。通过使用 `RequestImageFileAsync`
    方法，我们可以调整上传的图片大小。我们可以使用 `multiple` 属性来允许用户上传多个文件。'
- en: Using virtualization
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用虚拟化
- en: There are times when we need to work with a large collection of items. In those
    cases, it is not efficient to render each item. It is much more efficient to only
    render a subset of the items. This technique is called **virtualization**.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候我们需要处理大量项目。在这种情况下，渲染每个项目并不高效。仅渲染项目子集会更高效。这种技术称为 **虚拟化**。
- en: The built-in `Virtualize` component is used to render the visible items of a
    collection. Specifically, it is used when we are using a loop to render a collection
    of items and using scrolling to limit the number of items visible at any given
    moment. The `Virtualize` component calculates the list of visible items and only
    renders those items. Since it does not render items that are invisible, it is
    more performant than using a method that renders every item in the collection.
    It can be found in the `Microsoft.AspNetCore.Components.Web.Virtualization` namespace.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 内置的 `Virtualize` 组件用于渲染集合的可见项目。具体来说，当我们在使用循环渲染项目集合并使用滚动来限制在任何给定时刻可见的项目数量时，会使用它。`Virtualize`
    组件计算可见项目的列表并仅渲染这些项目。由于它不渲染不可见的项目，因此比使用渲染集合中每个项目的方程序能效更高。它位于 `Microsoft.AspNetCore.Components.Web.Virtualization`
    命名空间中。
- en: '**IMPORTANT NOTE**'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: When using the `Virtualize` component, all the items must be the same height
    in pixels.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用 `Virtualize` 组件时，所有项目必须在像素中具有相同的高度。
- en: 'The `Virtualize<TItem>` class includes the following properties:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`Virtualize<TItem>` 类包含以下属性：'
- en: '`ItemContent` – the item template. It is only required when using the `Placeholder`
    property.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ItemContent` – 项目模板。仅在使用 `Placeholder` 属性时需要。'
- en: '`Items` – the collection of items. This property cannot be used in conjunction
    with the `ItemsProvider` method.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Items` – 项目集合。此属性不能与 `ItemsProvider` 方法一起使用。'
- en: '`ItemSize` – the height of each item in pixels. The default is 50 pixels.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ItemSize` – 每个项目的高度（以像素为单位）。默认值为 50 像素。'
- en: '`ItemsProvider` – the function that asynchronously retrieves the collection
    of items. This property cannot be used in conjunction with the `Items` method.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ItemsProvider` – 异步检索项目集合的函数。此属性不能与 `Items` 方法一起使用。'
- en: '`OverscanCount` – the number of items that should be rendered before and after
    the visible region. When scrolling, this will help to reduce the amount of rendering.
    The default is 3.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OverscanCount` – 在可见区域前后应渲染的项目数量。在滚动时，这将有助于减少渲染量。默认值为 3。'
- en: '`Placeholder` – the content that is rendered while the component is waiting
    for the items to be provided by `ItemsProvider`. This property cannot be used
    in conjunction with the `Items` method.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Placeholder` – 在组件等待 `ItemsProvider` 提供项目时渲染的内容。此属性不能与 `Items` 方法一起使用。'
- en: '`SpacerElement` – the type of element used to display each item. The default
    is `div`.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SpacerElement` – 用于显示每个项目的元素类型。默认为 `div`。'
- en: Near our home, there is a weather station that continuously records the current
    temperature and humidity. There are thousands of data points collected every day.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们家的附近，有一个气象站，它持续记录当前的温度和湿度。每天收集了数千个数据点。
- en: 'This is the `Weather` class used to collect the data from the weather station:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这是用于从气象站收集数据的 `Weather` 类：
- en: '[PRE7]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The following code will display each of the data points using a `foreach` loop:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将使用 `foreach` 循环显示每个数据点：
- en: '[PRE8]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In the preceding code, although the `foreach` loop is within a `div` element
    that limits the number of rows that are displayed, the UI still needs to render
    all the rows before returning control to the user. Since the collection of `Weather`
    objects contains thousands of records, the user will experience some lag while
    waiting for the UI to render all the rows. We can use the `Virtualize` component
    to only render the data that is being displayed.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，尽管 `foreach` 循环位于限制显示行数的 `div` 元素内，但 UI 仍然需要在将控制权返回给用户之前渲染所有行。由于 `Weather`
    对象集合包含数千条记录，用户在等待 UI 渲染所有行时将经历一些延迟。我们可以使用 `Virtualize` 组件只渲染显示的数据。
- en: Rendering Local Data
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 渲染本地数据
- en: 'The following code uses the `Virtualize` component instead of a `foreach` loop
    to render the data from memory:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码使用 `Virtualize` 组件而不是 `foreach` 循环来从内存中渲染数据：
- en: '[PRE9]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The preceding code will allow the page to load faster because only the rows
    that are visible within the `div` element are rendered. The `Virtualize` component
    calculates the number of items that can fit inside the container and only renders
    those items. As the user scrolls through the items, the `Virtualize` component
    determines which items need to be rendered and renders them.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码将允许页面更快地加载，因为只有位于 `div` 元素内部的行才会被渲染。`Virtualize` 组件计算容器内可以容纳的项目数量，并且只渲染这些项目。当用户滚动浏览项目时，`Virtualize`
    组件确定需要渲染哪些项目，并将它们渲染出来。
- en: Rendering Remote Data
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 渲染远程数据
- en: 'The following code uses the `ItemsProvider` method to fetch the list of items
    to be rendered from a remote data source:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码使用 `ItemsProvider` 方法从远程数据源获取要渲染的项目列表：
- en: '[PRE10]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: In the preceding example, the `LoadWeather` method is invoked when the `Virtualize`
    component needs to update the list of `Weather` objects that are being rendered.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，当 `Virtualize` 组件需要更新正在渲染的 `Weather` 对象列表时，会调用 `LoadWeather` 方法。
- en: 'This is a simple implementation of the `LoadWeather` method:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 `LoadWeather` 方法的简单实现：
- en: '[PRE11]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In the preceding code, the `LoadWeather` method takes `ItemsProviderRequest`
    and returns `ItemsProviderResult`. The important thing to note is that `ItemsProviderRequest`
    includes both a `StartIndex` property and a `Count` property. `StartIndex` is
    the start index of the data requested and `Count` is the number of items requested.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，`LoadWeather` 方法接受 `ItemsProviderRequest` 并返回 `ItemsProviderResult`。需要注意的是，`ItemsProviderRequest`
    包含一个 `StartIndex` 属性和一个 `Count` 属性。`StartIndex` 是请求数据的起始索引，而 `Count` 是请求的项目数量。
- en: In this chapter’s project, we will read the values from an Excel spreadsheet
    that is uploaded into our application. Therefore, we need to learn how to read
    from an Excel spreadsheet.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的项目中，我们将从上传到我们应用程序的 Excel 电子表格中读取值。因此，我们需要学习如何从 Excel 电子表格中读取。
- en: Reading Excel files
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读取 Excel 文件
- en: We can read and write to Microsoft Excel files using the `Open XML SDK`. It
    provides the tools for us to work with not only Excel files but also Word and
    PowerPoint files. To use the `Open XML SDK`, we need to add the `DocumentFormat.OpenXml
    NuGet` package to our project.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `Open XML SDK` 来读取和写入 Microsoft Excel 文件。它为我们提供了处理 Excel 文件、Word 和 PowerPoint
    文件的工具。要使用 `Open XML SDK`，我们需要将 `DocumentFormat.OpenXml NuGet` 包添加到我们的项目中。
- en: Modern Excel files with the XLSX file extension are made up of a compressed
    collection of XML files. To view the individual files, change the file extension
    from XLSX to ZIP and view the files using a `.zip` viewer. You can also extract
    the files.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 带有 XLSX 文件扩展名的现代 Excel 文件是由压缩的 XML 文件集合组成的。要查看单个文件，将文件扩展名从 XLSX 更改为 ZIP，并使用
    `.zip` 查看器查看文件。你也可以提取文件。
- en: 'When using the `Open XML SDK`, the Excel document is represented with the `SpreadsheetDocument`
    class. This is the hierarchy of the elements in the class:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用 `Open XML SDK` 时，Excel 文档用 `SpreadsheetDocument` 类表示。这是该类中元素的层次结构：
- en: '`workbook` – the root element of the document'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`workbook` – 文档的根元素'
- en: '`sheets` – the container for the sheets'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sheets` – 工作表的容器'
- en: '`sheet` – the pointer to the sheet definition file'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sheet` – 指向工作表定义文件的指针'
- en: '`worksheet` – the sheet definition that contains the sheet data'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`worksheet` – 包含工作表数据的定义'
- en: '`sheetData` – the data'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sheetData` – 数据'
- en: '`row` – a row of data'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`row` – 数据行'
- en: '`c` – a cell within a row of data'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`c` – 数据行中的一个单元格'
- en: '`v` – the value of a cell'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`v` – 单元格的值'
- en: To demonstrate the format of an Excel file, we have created a sample Excel file
    titled `Sample.xlsx`. The sample workbook includes two worksheets. The first worksheet
    is titled **Numbers** and the second one is titled **Welcome**. The **Numbers**
    worksheet includes two rows of numbers, and the **Welcome** worksheet includes
    the string **Hello World** in cell A1.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示 Excel 文件的格式，我们创建了一个名为 `Sample.xlsx` 的示例 Excel 文件。该示例工作簿包含两个工作表。第一个工作表标题为
    **Numbers**，第二个工作表标题为 **Welcome**。**Numbers** 工作表包含两行数字，而 **Welcome** 工作表在 A1
    单元格中包含字符串 **Hello World**。
- en: 'This is a screenshot of the `Sample.xlsx` file:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 `Sample.xlsx` 文件的截图：
- en: '![Table  Description automatically generated](img/B18471_09_04.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![表格  自动生成的描述](img/B18471_09_04.png)'
- en: 'Figure 9.4: Sample.xlsx'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.4：Sample.xlsx
- en: '**IMPORTANT NOTE**'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: You can download a copy of `Sample.xlsx` from the GitHub repository.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从 GitHub 仓库下载 `Sample.xlsx` 的副本。
- en: 'If we change the filename of `Sample.xlsx` to `Sample.zip` and extract all
    the files, this is the resulting file structure:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将 `Sample.xlsx` 的文件名更改为 `Sample.zip` 并提取所有文件，这将得到以下文件结构：
- en: '![A picture containing text  Description automatically generated](img/B18471_09_05.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本的图片  自动生成的描述](img/B18471_09_05.png)'
- en: 'Figure 9.5: File structure of Sample.zip'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.5：Sample.zip 的文件结构
- en: If you are familiar with Microsoft Excel, the files under the `xl` folder will
    look familiar to you. The `xl` folder contains a `workbook.xml` file and a `worksheets`
    folder, with a file for each sheet.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你熟悉 Microsoft Excel，`xl` 文件夹下的文件将对你来说很熟悉。`xl` 文件夹包含一个 `workbook.xml` 文件和一个
    `worksheets` 文件夹，每个工作表都有一个文件。
- en: 'The `workbook.xml` file lists all the sheets in the workbook. The following
    markup from the `workbook.xml` file shows the contents of the `sheets` element:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`workbook.xml` 文件列出了工作簿中的所有工作表。以下来自 `workbook.xml` 文件的标记显示了 `sheets` 元素的内容：'
- en: '[PRE12]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This is the code to loop through all the sheets in the given `SpreadsheetDocument`:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这是遍历给定 `SpreadsheetDocument` 中所有工作表的代码：
- en: '[PRE13]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The `worksheets` folder contains one file that corresponds to each of the sheets
    identified in the `sheets` element of the `workbook.xml` file. In our example,
    they are named `sheet1.xml` and `sheet2.xml`. The following markup from the `sheets1.xml`
    file shows the contents of the `sheetData` element for the `Numbers` worksheet:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`worksheets` 文件夹包含一个文件，对应于 `workbook.xml` 文件中 `sheets` 元素中标识的每个工作表。在我们的例子中，它们被命名为
    `sheet1.xml` 和 `sheet2.xml`。以下来自 `sheets1.xml` 文件的标记显示了 `Numbers` 工作表的 `sheetData`
    元素的内容：'
- en: '[PRE14]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: As you can see, `sheetData` is made up of a collection of rows. Each row has
    several cells, and each cell has a value.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，`sheetData` 由一系列行组成。每一行有几个单元格，每个单元格都有一个值。
- en: 'The following markup from the `sheets2.xml` file shows the contents of the
    `sheetData` element for the `Welcome` worksheet:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 以下来自 `sheets2.xml` 文件的标记显示了 `Welcome` 工作表的 `sheetData` 元素的内容：
- en: '[PRE15]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: We are expecting the value of the A1 cell to be **Hello World**. However, it
    has the value of `0` (zero) instead. The reason for this is that all the strings
    are stored in the `sharedStrings.xml` file, and only the index to the location
    of the string within the `sharedStrings.xml` file is included in `sheetData`.
    Each unique string is only included once in the `sharedStrings.xml` file.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们期望A1单元格的值为**Hello World**。然而，它的值却是`0`（零）。原因是所有字符串都存储在`sharedStrings.xml`文件中，而`sheetData`中只包含字符串在`sharedStrings.xml`文件中的位置索引。每个唯一的字符串在`sharedStrings.xml`文件中只包含一次。
- en: 'This is the data from the `sharedStrings.xml` file:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这是`sharedStrings.xml`文件中的数据：
- en: '[PRE16]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The following code loops through each of the sheets in `SpreadsheetDocument`
    and returns the value of the first cell in the first row of each sheet:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码遍历`SpreadsheetDocument`中的每个工作表，并返回每个工作表第一行第一个单元格的值：
- en: '[PRE17]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: You have learned how to read an Excel file by using the `Open XML SDK`. The
    `Open XML SDK` is very powerful. It can be used not only to read Excel files but
    also to both create new Excel files and update existing ones. It can also be used
    to create, read, and update both Word and PowerPoint files.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经学会了如何使用`Open XML SDK`读取Excel文件。`Open XML SDK`非常强大。它不仅可以读取Excel文件，还可以创建新的Excel文件和更新现有的文件。它还可以用于创建、读取和更新Word和PowerPoint文件。
- en: Now, let’s get a quick overview of the project that we are going to build in
    this chapter.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们快速了解一下本章将要构建的项目。
- en: Creating the Excel reader project
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Excel读取器项目
- en: The Blazor WebAssembly application that we are going to build in this chapter
    is an Excel file reader. We will use the `InputFile` component to upload an Excel
    file. Then, we will use the `Open XML SDK` to loop through the rows of one of
    the worksheets in the Excel file. Finally, we will use the `Virtualize` component
    to render the data from the Excel file in an HTML table.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将构建的Blazor WebAssembly应用程序是一个Excel文件读取器。我们将使用`InputFile`组件上传Excel文件。然后，我们将使用`Open
    XML SDK`遍历Excel文件中某个工作表的行。最后，我们将使用`Virtualize`组件在HTML表中渲染Excel文件中的数据。
- en: 'The following is a screenshot of the completed application:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是完成的应用程序截图：
- en: '![Table  Description automatically generated](img/B18471_09_06.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![表格描述自动生成](img/B18471_09_06.png)'
- en: 'Figure 9.6: Excel reader app'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.6：Excel读取器应用
- en: The build time for this project is approximately 45 minutes.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 此项目的构建时间大约为45分钟。
- en: Project overview
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目概述
- en: The `ExcelReader` project will be created by using Microsoft’s **Blazor WebAssembly
    App Empty** project template to create an empty Blazor WebAssembly project. First,
    we will add the `Open XML SDK` to the project. Then, we will add a model to capture
    the information that we are reading from the Excel file. We will use an `InputFile`
    component to upload the Excel file. We will use the `Open XML SDK` to read the
    Excel file. Finally, we will use the `Virtualize` component to display the data
    from the Excel file.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 将使用Microsoft的**Blazor WebAssembly App Empty**项目模板创建一个空的Blazor WebAssembly项目来创建`ExcelReader`项目。首先，我们将向项目中添加`Open
    XML SDK`。然后，我们将添加一个模型来捕获我们从Excel文件中读取的信息。我们将使用`InputFile`组件上传Excel文件。我们将使用`Open
    XML SDK`读取Excel文件。最后，我们将使用`Virtualize`组件显示Excel文件中的数据。
- en: Create the Excel reader project
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建Excel读取器项目
- en: 'We need to create a new Blazor WebAssembly app. We do this as follows:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要创建一个新的Blazor WebAssembly应用程序。我们这样做如下：
- en: Open Visual Studio 2022.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Visual Studio 2022。
- en: Click the **Create a new project** button.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建新项目**按钮。
- en: Press *Alt*+*S* to enter the **search for templates** textbox.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Alt*+*S*键进入**搜索模板**文本框。
- en: Enter `Blazor` and press the *Enter* key.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`Blazor`并按*Enter*键。
- en: 'The following screenshot shows the **Blazor WebAssembly App Empty** project
    template:'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下截图显示了**Blazor WebAssembly App Empty**项目模板：
- en: '![Graphical user interface, text, application, chat or text message  Description
    automatically generated](img/B18471_09_07.png)'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面、文本、应用程序、聊天或文本消息描述自动生成](img/B18471_09_07.png)'
- en: 'Figure 9.7: Blazor WebAssembly App Empty project template'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图9.7：Blazor WebAssembly App Empty项目模板
- en: Select the **Blazor WebAssembly App Empty** project template and click the **Next**
    button.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Blazor WebAssembly App Empty**项目模板并点击**下一步**按钮。
- en: Enter `ExcelReader` in the **Project name** textbox and click the **Next** button.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**项目名称**文本框中输入`ExcelReader`并点击**下一步**按钮。
- en: 'This is a screenshot of the dialog used to configure our new project:'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是配置我们新项目的对话框截图：
- en: '![Graphical user interface, text, application, email  Description automatically
    generated](img/B18471_09_08.png)'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序，电子邮件  自动生成的描述](img/B18471_09_08.png)'
- en: 'Figure 9.8: Configure your new project dialog'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图9.8：配置新项目对话框
- en: TIP
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: TIP
- en: In the preceding example, we placed the `ExcelReader` project into the `E:/Blazor`
    folder. However, the location of this project is not important.
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们将`ExcelReader`项目放置在`E:/Blazor`文件夹中。然而，这个项目的位置并不重要。
- en: Select **.NET 7.0** as the version of the **Framework** to use.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**.NET 7.0**作为要使用的**Framework**版本。
- en: Check the **Configure for HTTPS** checkbox.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Configure for HTTPS**复选框。
- en: Uncheck the **ASP.NET Core Hosted** checkbox.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消选择**ASP.NET Core Hosted**复选框。
- en: Uncheck the **Progressive Web Application** checkbox.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消选择**Progressive Web Application**复选框。
- en: 'This is a screenshot of the dialog used to collect additional information about
    our new project:'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是我们用于收集有关新项目额外信息的对话框截图：
- en: '![Graphical user interface, text, application, email  Description automatically
    generated](img/B18471_09_09.png)'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序，电子邮件  自动生成的描述](img/B18471_09_09.png)'
- en: 'Figure 9.9: Additional information dialog'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图9.9：额外信息对话框
- en: Click the **Create** button.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Create**按钮。
- en: We have created an empty `ExcelReader` Blazor WebAssembly project. We will use
    the `Open XML SDK` to read the Microsoft Excel file.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一个空的`ExcelReader` Blazor WebAssembly项目。我们将使用`Open XML SDK`来读取Microsoft
    Excel文件。
- en: Install the Open XML SDK
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Open XML SDK
- en: 'We need to install the `Open XML SDK` into our web app. We do this as follows:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要将`Open XML SDK`安装到我们的web应用中。我们这样做如下：
- en: Select **Tools**, **NuGet Package Manager**, **Package Manager Console** from
    the Visual Studio menu to open the **Package Manager Console**.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Visual Studio菜单中选择**Tools**，**NuGet Package Manager**，**Package Manager Console**以打开**Package
    Manager Console**。
- en: 'Enter the following command:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下命令：
- en: '[PRE18]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Press the *Enter* key.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下*Enter*键。
- en: The `Open XML SDK` is now installed.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '`Open XML SDK`现在已安装。'
- en: Now we need to add a class to contain the information that we will read from
    the Excel file.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要添加一个类来包含我们从Excel文件中读取的信息。
- en: Add the Medals class
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加Medals类
- en: 'The Excel file that we will upload will include a count of medals that were
    awarded to each country in each of the summer Olympic Games since 1896\. We need
    to add a `Medals` class to collect that information. We do this as follows:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要上传的Excel文件将包括自1896年以来每个夏季奥运会每个国家获得的奖牌数量。我们需要添加一个`Medals`类来收集这些信息。我们这样做如下：
- en: Right-click the **ExcelReader** project and select the **Add**, **New Folder**
    option from the menu.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击**ExcelReader**项目，从菜单中选择**Add**，**New Folder**选项。
- en: Name the new folder `Models`.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新文件夹命名为`Models`。
- en: Right-click the **Models** folder and select the **Add**, **Class** option from
    the menu.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击**Models**文件夹，从菜单中选择**Add**，**Class**选项。
- en: Name the new class `Medals`.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新类命名为`Medals`。
- en: Click the **Add** button.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Add**按钮。
- en: 'Add the following properties to the `Medals` class:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下属性添加到`Medals`类中：
- en: '[PRE19]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: We have added the `Medals` class to capture the data from the Excel file. Next,
    we need to add the ability to upload the Excel file that we want to read.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经添加了`Medals`类来捕获Excel文件中的数据。接下来，我们需要添加上传我们想要读取的Excel文件的能力。
- en: Upload the Excel file
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上传Excel文件
- en: 'We will use the `InputFile` component to both select and upload the Excel file.
    We do this as follows:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`InputFile`组件来选择和上传Excel文件。我们这样做如下：
- en: Open the `Pages/Index.razor` file.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`Pages/Index.razor`文件。
- en: Remove the `h1` element.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除`h1`元素。
- en: 'Add the following `using` statement:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下`using`语句：
- en: '[PRE20]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Add the following markup:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下标记：
- en: '[PRE21]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The preceding markup includes an `InputFile` component and an `if` statement.
    If `file` is not null, the file’s name, size, and content type are displayed.
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述标记包括一个`InputFile`组件和一个`if`语句。如果`file`不为空，则显示文件名、大小和内容类型。
- en: 'Add the following code to the code block:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到代码块中：
- en: '[PRE22]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The preceding code checks the size and content type of the file and displays
    an error message if they are invalid. It is a good practice to always set a maximum
    file size since the larger the file, the more resources are required to process
    it.
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码检查文件的大小和内容类型，如果它们无效，则显示错误消息。始终设置最大文件大小是一个好习惯，因为文件越大，处理它所需的资源就越多。
- en: Press *Ctrl*+*F5* to start the application without debugging.
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Ctrl*+*F5*以无调试模式启动应用程序。
- en: Click the **Choose file** button.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Choose file**按钮。
- en: Select the `SummerOlympics.xlsx` file and click the **Open** button.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`SummerOlympics.xlsx`文件，并点击**Open**按钮。
- en: 'The following screenshot shows the results:'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下截图显示了结果：
- en: '![Graphical user interface, text  Description automatically generated](img/B18471_09_10.png)'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图形用户界面，文本自动生成描述](img/B18471_09_10.png)'
- en: 'Figure 9.10: Select SummerOlympics.xlsx'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图9.10：选择SummerOlympics.xlsx
- en: '**IMPORTANT NOTE**'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**重要提示**'
- en: 'You must download the `SummerOlympics.xlsx` file from the GitHub repository.
    It includes two worksheets: `olympic_hosts` and `olympic_medals`. We will be working
    with the `olympic_medals` worksheet. It includes the medal count by country and
    year for the summer Olympics.'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您必须从GitHub存储库下载`SummerOlympics.xlsx`文件。它包含两个工作表：`olympic_hosts`和`olympic_medals`。我们将使用`olympic_medals`工作表。它包括夏季奥运会的按国家和年份的奖牌计数。
- en: Click the **Read file** button.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**读取文件**按钮。
- en: Verify that nothing happens.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证没有任何操作发生。
- en: We have successfully uploaded the Excel file, but when we click the **Read file**
    button, nothing happens. Now we need to write the code to read the data from the
    Excel file.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已成功上传Excel文件，但当我们点击**读取文件**按钮时，没有任何操作。现在我们需要编写代码来从Excel文件中读取数据。
- en: Read the Excel file
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读取Excel文件
- en: 'We will use the `SpreadsheetDocument` class to read the data from the Excel
    file. We do this as follows:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`SpreadsheetDocument`类从Excel文件中读取数据。我们这样做如下：
- en: Return to Visual Studio.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回Visual Studio。
- en: Open the `Pages\Index.razor` file.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`Pages\Index.razor`文件。
- en: 'Add the following `using` statements:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下`using`语句：
- en: '[PRE23]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Add the following fields to the code block:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代码块中添加以下字段：
- en: '[PRE24]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The `loaded` field will be used to toggle the markup used to display the data,
    and the `rowCount` field will be used to hold the number of rows in the Excel
    file.
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`loaded`字段将用于切换用于显示数据的标记，而`rowCount`字段将用于存储Excel文件中的行数。'
- en: 'Add the following `ReadFile` method to the code block:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代码块中添加以下`ReadFile`方法：
- en: '[PRE25]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The preceding code sets the value of `rowCount` to the number of rows in the
    `olympic_medals` worksheet.
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面的代码将`rowCount`的值设置为`olympic_medals`工作表的行数。
- en: 'Update the `Read file` button to the following:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**读取文件**按钮更新为以下内容：
- en: '[PRE26]'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: When the **Read file** button is clicked, the `ReadFile` method will be invoked.
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当点击**读取文件**按钮时，将调用`ReadFile`方法。
- en: 'Add the following `if` statement after the `Read file` button:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**读取文件**按钮之后添加以下`if`语句：
- en: '[PRE27]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The preceding code will display `rowCount` after the file has been loaded.
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面的代码将在文件加载后显示`rowCount`。
- en: Press *Ctrl*+*F5* to start the application without debugging.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Ctrl*+*F5*以无调试模式启动应用程序。
- en: Click the **Choose file** button.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**选择文件**按钮。
- en: Select the `SummerOlympics.xlsx` file and click the **Open** button.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`SummerOlympics.xlsx`文件并点击**打开**按钮。
- en: Click the **Read file** button.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**读取文件**按钮。
- en: Verify that the correct number of rows is displayed.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证是否显示了正确数量的行。
- en: We have read the number of rows in the `olympic_medals` worksheet in the `SummerOlympics.xlsx`
    file. Next, we will populate a collection of medals by looping through each of
    the rows in the worksheet.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已读取`SummerOlympics.xlsx`文件中`olympic_medals`工作表的行数。接下来，我们将通过遍历工作表中的每一行来填充奖牌集合。
- en: Populate the medals collection
  id: totrans-240
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 填充奖牌集合
- en: 'We need to loop through all the rows to populate the collection of medals.
    We do this as follows:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要遍历所有行以填充奖牌集合。我们这样做如下：
- en: Return to Visual Studio.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回Visual Studio。
- en: Open the `Pages\Index.razor` file.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`Pages\Index.razor`文件。
- en: 'Add the following `using` statements:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下`using`语句：
- en: '[PRE28]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Add the following field to the code block:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代码块中添加以下字段：
- en: '[PRE29]'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: The `allMedals` field will be used to hold the data that is read from the Excel
    file.
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`allMedals`字段将用于存储从Excel文件中读取的数据。'
- en: 'After the code that set `rowCount`, add the following code in the `ReadFile`
    method:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设置`rowCount`的代码之后，在`ReadFile`方法中添加以下代码：
- en: '[PRE30]'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The first thing that the preceding code does is load `stringTable`. Then, it
    determines the `value` of the cell and updates the appropriate property of the
    `Medals` object, based on the column that is being read. If the cell is of type
    `SharedString`, it determines its value by using `stringTable`.
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面的代码首先加载`stringTable`。然后，它确定单元格的`value`并根据正在读取的列更新`Medals`对象的相应属性。如果单元格是`SharedString`类型，它将使用`stringTable`确定其值。
- en: Press *Ctrl*+*F5* to start the application without debugging.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Ctrl*+*F5*以无调试模式启动应用程序。
- en: Click the **Choose file** button.
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**选择文件**按钮。
- en: Select the `SummerOlympics.xlsx` file and click the **Open** button.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`SummerOlympics.xlsx`文件并点击**打开**按钮。
- en: Click the **Read file** button.
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**读取文件**按钮。
- en: Verify that the correct number of rows is still displayed.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证是否仍然显示了正确数量的行。
- en: We are reading all the rows into the collection of medals, but we are not rendering
    them. Next, we need to render them to the screen.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在将所有行读入奖牌的集合中，但我们没有渲染它们。接下来，我们需要将它们渲染到屏幕上。
- en: Render the Medals collection
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 渲染奖牌集合
- en: 'We need to add the `Virtualize` component to the `Home` page to render the
    data. We do this as follows:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要将`Virtualize`组件添加到`Home`页面以渲染数据。我们这样做如下：
- en: Open the `Pages\Index.razor` file.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`Pages\Index.razor`文件。
- en: 'Add the following `using` statement:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下`using`语句：
- en: '[PRE31]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Add the following markup below the `p` element that is displaying `rowCount`:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在显示`rowCount`的`p`元素下方添加以下标记：
- en: '[PRE32]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The preceding markup uses the `Virtualize` component to display each of the
    objects in the collection.
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述标记使用`Virtualize`组件来显示集合中的每个对象。
- en: Press *Ctrl*+*F5* to start the application without debugging.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Ctrl*+*F5*启动应用程序而不进行调试。
- en: Click the **Choose file** button.
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**选择文件**按钮。
- en: Select the `SummerOlympics.xlsx` file and click the **Open** button.
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`SummerOlympics.xlsx`文件并点击**打开**按钮。
- en: Click the **Read file** button.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**读取文件**按钮。
- en: Scroll through the list of items.
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动项目列表。
- en: We have added the ability to display all the items from a collection, using
    the `Virtualize` component.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经添加了使用`Virtualize`组件显示集合中所有项的功能。
- en: Summary
  id: totrans-272
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: You should now be able to upload files into your Blazor WebAssembly app. You
    should be able to use virtualization to render your pages faster when you are
    working with a large dataset. Finally, you should be comfortable with working
    with Microsoft Excel files.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该能够将文件上传到你的Blazor WebAssembly应用中。你应该能够在处理大量数据集时使用虚拟化来更快地渲染你的页面。最后，你应该对与Microsoft
    Excel文件一起工作感到舒适。
- en: In this chapter, we explained how to upload files and how to resize image files.
    We explained how to use virtualization. Finally, we introduced the `Open XML SDK`
    and explained how to use it to read Excel files.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们解释了如何上传文件以及如何调整图像文件的大小。我们还介绍了如何使用虚拟化。最后，我们介绍了`Open XML SDK`并解释了如何使用它来读取Excel文件。
- en: After that, we used the **Blazor WebAssembly App Empty** project template to
    create a new project and added the `Open XML SDK` to the project. Next, we added
    an `InputFile` component to upload an Excel file to the app. We used the `Open
    XML SDK` to read the number of rows in a particular worksheet. Then, we looped
    through all the rows in the selected worksheet and stored their values in a collection.
    Finally, we used the `Virtualize` component to display all the items in the collection.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们使用**Blazor WebAssembly App Empty**项目模板创建了一个新项目，并将`Open XML SDK`添加到项目中。接下来，我们添加了一个`InputFile`组件来上传Excel文件到应用中。我们使用`Open
    XML SDK`读取特定工作表中的行数。然后，我们遍历所选工作表中的所有行，并将它们的值存储在一个集合中。最后，我们使用`Virtualize`组件来显示集合中的所有项目。
- en: Now that you know how to upload files to your web app, your users can provide
    data to your application in a variety of different formats. In this project, we
    used an Excel file, but you can easily extrapolate what you have learned to use
    other types of files.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道如何将文件上传到你的Web应用中，你的用户可以用各种不同的格式向你的应用程序提供数据。在这个项目中，我们使用了Excel文件，但你很容易将你学到的知识应用到其他类型的文件上。
- en: In the next chapter, we will use SQL Server to build a task manager using the
    ASP.NET Web API.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将使用SQL Server和ASP.NET Web API构建一个任务管理器。
- en: Questions
  id: totrans-278
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'The following questions are provided for your consideration:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 以下问题供你思考：
- en: The `SummerOlypics.xlsx` file contains two worksheets. How can you join the
    data from the two worksheets before displaying it?
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`SummerOlypics.xlsx`文件包含两个工作表。在显示之前，你如何将两个工作表中的数据合并？'
- en: What are some of the benefits of resizing an image?
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调整图像大小有哪些好处？
- en: Is it a good practice to always include `Placeholder` when using the `Virtualize`
    component?
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用`Virtualize`组件时始终包含`Placeholder`是否是一个好的做法？
- en: Can the `Open XML SDK` be used to create a new Excel file?
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Open XML SDK`能否用来创建一个新的Excel文件？'
- en: How can you avoid reading an entire file into memory when using the `InputFile`
    component?
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用`InputFile`组件时，如何避免将整个文件读入内存？
- en: Further reading
  id: totrans-285
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'The following resources provide more information concerning the topics covered
    in this chapter:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 以下资源提供了有关本章涵盖主题的更多信息：
- en: For more information on security best practices when uploading files, refer
    to [https://learn.microsoft.com/en-us/aspnet/core/mvc/models/file-uploads](https://learn.microsoft.com/en-us/aspnet/core/mvc/models/file-uploads).
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于上传文件时的安全最佳实践，请参阅 [https://learn.microsoft.com/en-us/aspnet/core/mvc/models/file-uploads](https://learn.microsoft.com/en-us/aspnet/core/mvc/models/file-uploads).
- en: For the `Virtualize` component source code in GitHub, refer to [https://github.com/dotnet/aspnetcore/blob/main/src/Components/Web/src/Virtualization/Virtualize.cs](https://github.com/dotnet/aspnetcore/blob/main/src/Components/Web/src/Virtualization/Virtualize.cs).
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 GitHub 上的 `Virtualize` 组件源代码，请参阅 [https://github.com/dotnet/aspnetcore/blob/main/src/Components/Web/src/Virtualization/Virtualize.cs](https://github.com/dotnet/aspnetcore/blob/main/src/Components/Web/src/Virtualization/Virtualize.cs).
- en: For more information on the `Open XML SDK`, refer to [https://learn.microsoft.com/en-us/office/open-xml/open-xml-sdk](https://learn.microsoft.com/en-us/office/open-xml/open-xml-sdk).
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 `Open XML SDK` 的更多信息，请参阅 [https://learn.microsoft.com/en-us/office/open-xml/open-xml-sdk](https://learn.microsoft.com/en-us/office/open-xml/open-xml-sdk).
- en: For more information on the Open XML specification, refer to [https://www.ecma-international.org/publications-and-standards/standards/ecma-376/](https://www.ecma-international.org/publications-and-standards/standards/ecma-376/).
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 Open XML 规范的更多信息，请参阅 [https://www.ecma-international.org/publications-and-standards/standards/ecma-376/](https://www.ecma-international.org/publications-and-standards/standards/ecma-376/).
