["```cs\nusing UnityEngine;\n\npublic class Bike : MonoBehaviour\n{\n    public enum EngineType\n    {\n        Jet,\n        Turbo,\n        Nitro\n    };\n\n    public enum DriverType\n    {\n        Human,\n        Android\n    };\n\n    private Engine m_Engine;\n    private Driver m_Driver;\n\n    public void SetEngine(EngineType type)\n    {\n        switch (type)\n        {\n            case EngineType.Jet:\n                m_Engine = new JetEngine();\n                break;\n            case EngineType.Turbo:\n                m_Engine = new TurboEngine();\n            case EngineType.Nitro:\n                m_Engine = new NitroEngine();\n        }\n\n        Debug.Log(\"The bike is running with the engine: \" + m_Engine);\n    }\n\n    public void SetDriver(DriverType type)\n    {\n        switch (type)\n        {\n            case DriverType.Human:\n                m_Driver = new HumanDriver();\n                break;\n            case DriverType.Android:\n                m_Driver = new AndroidDriver();\n        }\n\n        Debug.Log(\"The driver of the bike is a: \" + driver);\n    }\n\n    public void StartEngine()\n    {\n        if (m_Engine != null)\n        {\n            // Start the bike's engine\n            m_Engine.Start();\n            // Give control of the bike to the driver\n            m_Driver.Control(this);\n        }\n    }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class Bike : MonoBehaviour\n{\n    private IEngine m_Engine;\n    private IDriver m_Driver;\n\n    // Setter injection\n    public void SetEngine(IEngine engine)\n    {\n        m_Engine = engine;\n    }\n\n    // Setter injection\n    public void SetDriver(IDriver driver)\n    {\n        m_Driver = driver;\n    }\n\n    public void StartEngine()\n    {\n        // Starting the engine\n        m_Engine.StartEngine();\n\n        // Giving control of the bike to a driver (AI or player)\n        m_Driver.Control(this);\n    }\n\n    public void TurnLeft()\n    {\n        Debug.Log(\"The bike is turning left\");\n    }\n\n    public void TurnRight()\n    {\n        Debug.Log(\"The bike is turning right\");\n    }\n}\n```", "```cs\npublic interface IEngine\n{\n    void StartEngine();\n}\n```", "```cs\npublic interface IDriver\n{\n    void Control(Bike bike);\n}\n```", "```cs\nusing UnityEngine;\n\npublic class JetEngine : IEngine\n{\n    public void StartEngine()\n    {\n        ActivateJetStream();\n        Debug.Log(\"Engine started\");\n    }\n\n    private void ActivateJetStream()\n    {\n        Debug.Log(\"The jet stream is activated\");\n    }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class NitroEngine : IEngine\n{\n    public void StartEngine()\n    {\n        OpenNitroValve();\n        Debug.Log(\"Engine started\");\n    }\n\n    private void OpenNitroValve()\n    {\n        Debug.Log(\"The nitro valve is open\");\n    }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class HumanDriver : IDriver\n{\n    private Bike m_Bike;\n\n    public void Control(Bike bike)\n    {\n        m_Bike = bike;\n        Debug.Log(\"A human (player) will control the bike\");\n    }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class AndroidDriver : IDriver\n{\n    private Bike m_Bike;\n\n    public void Control(Bike bike)\n    {\n        m_Bike = bike;\n        Debug.Log(\"This bike will be controlled by an AI\");\n    }\n}\n```", "```cs\nusing UnityEngine;\n\nnamespace Pattern.DependencyInjection\n{\n    public class Client : MonoBehaviour\n    {\n        // Bike controlled by the player\n        public Bike m_PlayerBike;\n\n        // Bike controlled by an android (AI)\n        public Bike m_AndroidBike;\n\n        void Awake()\n        {\n            // Set up a bike with a human driver and jet engine\n            IEngine jetEngine = new JetEngine();\n            IDriver humanDriver = new HumanDriver();\n\n            m_PlayerBike.SetEngine(jetEngine);\n            m_PlayerBike.SetDriver(humanDriver);\n            m_PlayerBike.StartEngine();\n\n            // Set up a bike with a AI driver and a nitro engine\n            IEngine nitroEngine = new NitroEngine();\n            IDriver androidDriver = new AndroidDriver();\n\n            m_PlayerBike.SetEngine(jetEngine);\n            m_PlayerBike.SetDriver(humanDriver);\n            m_PlayerBike.StartEngine();\n        }\n\n        void Update()\n        {\n            if (Input.GetKeyDown(KeyCode.A))\n            {\n                m_PlayerBike.TurnLeft();\n            }\n\n            if (Input.GetKeyDown(KeyCode.D))\n            {\n                m_PlayerBike.TurnRight();\n            }\n        }\n\n        void OnGUI()\n        {\n            GUI.color = Color.black;\n            GUI.Label(new Rect(10, 10, 500, 20), \"Press A to turn LEFT and D to turn RIGHT\");\n            GUI.Label(new Rect(10, 30, 500, 20), \"Output displayed in the debug console\");\n        }\n    }\n}\n```"]