["```cs\nusing UnityEngine; \nusing UnityEngine.UI; \n\nnamespace com.noorcon.rpg2e \n{ \n   public class UiController : MonoBehaviour \n   { \n      public RectTransform OptionsPanel; \n      public Slider ControlMainVolume; \n      public Slider ControlFXVolume; \n\n      public void Update() \n      { \n      } \n\n      public void DisplaySettings() \n      { \n         GameMaster.instance.DisplaySettings = !GameMaster.instance.DisplaySettings; \n         OptionsPanel.gameObject.SetActive(GameMaster.instance.DisplaySettings); \n      } \n\n      public void MainVolume() \n      { \n         GameMaster.instance.MasterVolume(ControlMainVolume.value); \n      } \n      public void FXVolume() \n      { \n         GameMaster.instance.SoundFxVolume(ControlFXVolume.value); \n      } \n   } \n} \n```", "```cs\nusing UnityEngine; \nusing UnityEngine.SceneManagement; \n\nnamespace com.noorcon.rpg2e \n{ \n   public static class SceneName \n   { \n      public const string MainMenu = \"MainMenu\"; \n      public const string CharacterCustomization = \"CharacterCustomization\"; \n      public const string Level_1 = \"Awakening\"; \n   } \n\n   public class GameMaster : MonoBehaviour \n   { \n      public static GameMaster instance; \n\n      // let's have a reference to the player character \n      // and start position of player character \n      public GameObject Pc; \n      public GameObject StartPosition; \n      public GameObject CharacterCustomization; \n\n      // let's have a reference to the current scene/level \n      public Scene CurrentScene; \n\n      // Ref to UI Elements ... \n      public bool DisplaySettings = false; \n      public UiController uiController; \n\n      public int Level = 0; \n\n      // initial audio levels for background and \n      // sound FX \n      public float AudioLevel = 0.33f; \n      public float FxLevel = 0.33f; \n\n      void Awake() \n      { \n         // simple singleton \n         if (instance == null) \n         { \n            instance = this; \n         } \n         else if (instance != this) \n         { \n            Destroy(this); \n         } \n\n         // keep the game object when moving from \n         // one scene to the next scene \n         DontDestroyOnLoad(this); \n      } \n\n      // Use this for initialization \n      void Start() \n      { \n         // let's find a reference to the UI controller of the loaded scene \n         if (GameObject.FindGameObjectWithTag(\"UI\") != null) \n         { \n            instance.uiController = GameObject.FindGameObjectWithTag(\"UI\").GetComponent<UiController>(); \n         } \n\n         instance.uiController.OptionsPanel.gameObject.SetActive(instance.DisplaySettings); \n      } \n\n      // Update is called once per frame \n      void Update() \n      { \n\n      } \n\n      public void MasterVolume(float volume) \n      { \n         instance.AudioLevel = volume; \n         instance.GetComponent<AudioSource>().volume = instance.AudioLevel; \n      } \n\n      public void StartGame() \n      { \n         // NOTE: Start the game, load the scene that allows the player \n         // to customize their character \n         SceneManager.LoadScene(SceneName.CharacterCustomization); \n      } \n   } \n} \n```", "```cs\npublic static GameMaster instance;\n```", "```cs\nvoid Awake()\n{\n// simple singleton\nif (instance == null)\n{\ninstance = this;\n}\nelse if (instance != this)\n{\nDestroy(this);\n}\n// keep the game object when moving from\n// one scene to the next scene\nDontDestroyOnLoad(this);\n}\n```", "```cs\nusing UnityEngine;\nusing UnityEngine.SceneManagement;\nnamespace com.noorcon.rpg2e\n{\npublic static class SceneName\n{\npublic const string MainMenu = \"MainMenu\";\npublic const string CharacterCustomization =\n\"CharacterCustomization\";\npublic const string Level_1 = \"Awakening\";\n}\n[RequireComponent(typeof(AudioSource))]\npublic class GameMaster : MonoBehaviour\n{\npublic static GameMaster instance;\n// let's have a reference to the player character\n// and start position of player character\npublic GameObject Pc;\npublic GameObject StartPosition;\npublic GameObject CharacterCustomization;\n// let's have a reference to the current scene/level\npublic Scene CurrentScene;\n// Ref to UI Elements ...\npublic bool DisplaySettings = false;\npublic UiController Ui;\npublic int Level = 0;\n// initial audio levels for background and\n// sound FX\npublic float AudioLevel = 0.33f;\npublic float FxAudioLevel = 0.33f;\nvoid Awake()\n{\n// simple singlton\nif (instance == null)\n{\ninstance = this;\n}\nelse if (instance != this)\n{\nDestroy(this);\n}\n// keep the game object when moving from\n// one scene to the next scene\nDontDestroyOnLoad(this);\n}\n// for each level/scene that has been loaded\n// do some of the preparation work\nvoid OnLevelWasLoaded()\n{\ninstance.CurrentScene = SceneManager.GetActiveScene();\nif (instance.CurrentScene.name.Equals(SceneName.CharacterCustomization))\n{\nif (GameObject.FindGameObjectWithTag(\"BASE\") != null)\n{\ninstance.CharacterCustomization = GameObject.FindGameObjectWithTag(\"BASE\") as GameObject;\n}\n}\n// If we are at any other scene except character customization\n// let's go ahead and get reference to player and player\n// stat position\nif (!this.CurrentScene.name.Equals(SceneName.CharacterCustomization))\n{\n// let's get a reference to our player character\nif (instance.Pc == null)\n{\nif (GameObject.FindGameObjectWithTag(\"Player\") != null)\n{\ninstance.Pc = GameObject.FindGameObjectWithTag(\"Player\") as GameObject;\n}\n}\n```", "```cs\nif (GameObject.FindGameObjectWithTag(\"START_POSITION\") != null)\n...\n```", "```cs\npublic void MasterVolume(float volume)\n{\ninstance.AudioLevel = volume;\ninstance.GetComponent<AudioSource>().volume = instance.AudioLevel;\n}\npublic void SoundFxVolume(float volume)\n{\ninstance.FxAudioLevel = volume;\n}\npublic void StartGame()\n{\n// NOTE: Start the game, load the scene that allows the player\n// to customize their character\nSceneManager.LoadScene(SceneName.CharacterCustomization);\n}\npublic void LoadLevel()\n{\nswitch (instance.Level)\n{\n// load level 1\ncase 1:\n{\ninstance.Pc = GameObject.FindGameObjectWithTag(\"Player\") as GameObject;\nSceneManager.LoadScene(SceneName.Level_1);\nbreak;\n}\n}\n}\n}\n}\n```", "```cs\npublic static class SceneName\n{\npublic const string MainMenu = \"MainMenu\";\npublic const string CharacterCustomization = \"CharacterCustomization\";\npublic const string Level_1 = \"Awakening\";\n}\n```", "```cs\nusing UnityEngine;\nusing UnityEngine.SceneManagement;\nnamespace com.noorcon.rpg2e\n{\npublic static class SceneName\n{\npublic const string MainMenu = \"MainMenu\";\npublic const string CharacterCustomization = \"CharacterCustomization\";\npublic const string Level_1 = \"Awakening\";\n}\npublic class GameLevelController\n{\n// let's have a reference to the current scene/level\npublic Scene CurrentScene\n{\nget { return SceneManager.GetActiveScene(); }\n}\n// keep the numerical level value\npublic int Level = 0;\npublic void OnLevelWasLoaded()\n{\n// if we are in the character customization scene,\n// let's get a reference to the Base game object for future use.\nif (CurrentScene.Equals(SceneName.CharacterCustomization))\n{\nif (GameObject.FindGameObjectWithTag(\"Base\") != null)\n{\nGameMaster.instance.CharacterCustomization = GameObject.FindGameObjectWithTag(\"Base\") as GameObject;\n}\n}\n// If we are at any other scene except character customization\n// let's go ahead and get reference to player and player\n// stat position\nif (CurrentScene.name.Equals(SceneName.CharacterCustomization))\n{\n// let's get a reference to our player character\nif (GameMaster.instance.Pc == null)\n{\nif (GameObject.FindGameObjectWithTag(\"Player\") != null)\n{\nGameMaster.instance.Pc = GameObject.FindGameObjectWithTag(\"Player\") as GameObject;\n}\n}\nif (GameObject.FindGameObjectWithTag(\"StartPosition\") != null)\n{\nGameMaster.instance.StartPosition = GameObject.FindGameObjectWithTag(\"StartPosition\") as GameObject;\n}\nif (GameMaster.instance.StartPosition != null && GameMaster.instance.Pc != null)\n{\nGameMaster.instance.Pc.transform.position = GameMaster.instance.StartPosition.transform.position;\nGameMaster.instance.Pc.transform.rotation = GameMaster.instance.StartPosition.transform.rotation;\n}\n}\n// determine what level we are on\nDetermineLevel();\n}\n// this function will set a numerical value for our levels\nprivate void DetermineLevel()\n{\nswitch (CurrentScene.name)\n{\ncase SceneName.MainMenu:\ncase SceneName.CharacterCustomization:\n{\nLevel = 0;\nbreak;\n}\ncase SceneName.Level_1:\n{\nLevel = 1;\nGameMaster.instance.Pc.GetComponent<IKHandle>().enabled = true;\nbreak;\n}\ndefault:\n{\nLevel = 0;\nbreak;\n}\n}\n}\n.....\n```", "```cs\nusing UnityEngine;\nnamespace com.noorcon.rpg2e\n{\npublic class GameAudioController : MonoBehaviour\n{\n// initial audio levels for background and\n// sound FX\npublic float AudioLevel = 0.33f;\npublic float FxAudioLevel = 0.33f;\npublic AudioSource audioSource;\npublic void SetDefaultVolume()\n{\naudioSource.volume = AudioLevel;\n}\npublic void MasterVolume(float volume)\n{\nAudioLevel = volume;\naudioSource.volume = AudioLevel;\n}\npublic void SoundFxVolume(float volume)\n{\nFxAudioLevel = volume;\n}\n}\n}\n```", "```cs\nusing UnityEngine;\nnamespace com.noorcon.rpg2e\n{\n[RequireComponent(typeof(AudioSource))]\npublic class GameMaster : MonoBehaviour\n{\npublic static GameMaster instance;\n// let's have a reference to the player character\n// and start position of player character\npublic GameObject Pc;\npublic GameObject StartPosition;\npublic GameObject CharacterCustomization;\npublic GameLevelController LevelController;\npublic GameAudioController AudioController;\n// Ref to UI Elements ...\npublic bool DisplaySettings = false;\npublic UiController Ui;\nvoid Awake()\n{\n// simple singlton\nif (instance == null)\n{\ninstance = this;\n// initialize level controller\ninstance.LevelController = new GameLevelController();\n// initialize audio controller\ninstance.AudioController = new GameAudioController();\ninstance.AudioController.audioSource = instance.GetComponent<AudioSource>();\ninstance.AudioController.SetDefaultVolume();\n}\nelse if (instance != this)\n{\nDestroy(this);\n}\n// keep the game object when moving from\n// one scene to the next scene\nDontDestroyOnLoad(this);\n}\n// for each level/scene that has been loaded\n// do some of the preparation work\nvoid OnLevelWasLoaded()\n{\ninstance.LevelController.OnLevelWasLoaded();\n}\n// Use this for initialization\nvoid Start()\n{\n// let's find a reference to the UI controller of the loaded scene\nif (GameObject.FindGameObjectWithTag(\"Ui\") != null)\n{\ninstance.Ui = GameObject.FindGameObjectWithTag(\"Ui\").GetComponent<UiController>();\n}\ninstance.Ui.OptionsPanel.gameObject.SetActive(instance.DisplaySettings);\n}\n// Update is called once per frame\nvoid Update()\n{\n}\npublic void MasterVolume(float volume)\n{\ninstance.AudioController.MasterVolume(volume);\n}\npublic void SoundFxVolume(float volume)\n{\ninstance.AudioController.SoundFxVolume(volume);\n}\npublic void StartGame()\n{\ninstance.LoadLevel();\n}\npublic void LoadLevel()\n{\ninstance.LevelController.LoadLevel();\n}\n}\n}\n```", "```cs\nusing System;\nnamespace com.noorcon.rpg2e\n{\n[Serializable]\npublic class PlayerCharacter : BaseCharacter\n{\npublic enum ShoulderPad\n{\nnone = 0,\nSP01 = 1,\nSP02 = 2,\nSP03 = 3,\nSP04 = 4\n};\npublic enum BodyType { normal = 1, BT01 = 2, BT02 = 3\n};\n// Shoulder Pad\npublic ShoulderPad selectedShoulderPad = ShoulderPad.none;\npublic BodyType selectedBodyType = BodyType.normal;\npublic bool kneePad = false;\npublic bool legPlate = false;\npublic enum WeaponType\n{\nnone = 0,\naxe1 = 1,\naxe2 = 2,\nclub1 = 3,\nclub2 = 4,\nfalchion = 5,\ngladius = 6,\nmace = 7,\nmaul = 8,\nscimitar = 9,\nspear = 10,\nsword1 = 11,\nsword2 = 12,\nsword3 = 13\n};\npublic WeaponType selectedWeapon = WeaponType.none;\npublic enum HelmetType { none = 0, HL01 = 1, HL02 = 2, HL03 = 3, HL04 = 4 };\npublic HelmetType selectedHelmet = HelmetType.none;\npublic enum ShieldType { none = 0, SL01 = 1, SL02 = 2 };\npublic ShieldType selectedShield = ShieldType.none;\npublic int SKIN_ID = 1;\npublic enum ShoeType { none = 0, BT01 = 1, BT02 = 2 };\npublic ShoeType selectedBoot = ShoeType.none;\n}\n}\n```", "```cs\nusing System;\nusing UnityEngine;\nusing UnityEngine.UI;\n\nnamespace com.noorcon.rpg2e\n{\n  public class BarbarianCharacterCustomization : MonoBehaviour\n  {\n    public GameObject PLAYER_CHARACTER;\n\n    public PlayerCharacter PlayerCharacterData;\n\n    public Material[] PLAYER_SKIN;\n\n...\n\n    // Use this for initialization\n    void Start()\n    {\n      PlayerCharacterData = PLAYER_CHARACTER.GetComponent<PlayerAgent>().playerCharacterData;\n    }\n\n    public bool ROTATE_MODEL = false;\n\n    // Update is called once per frame\n    void Update()\n    {\n      if (Input.GetKeyUp(KeyCode.R))\n      {\n        ROTATE_MODEL = !ROTATE_MODEL;\n      }\n\n      if (ROTATE_MODEL)\n      {\n        PLAYER_CHARACTER.transform.Rotate(new Vector3(0, 1, 0), 33.0f * Time.deltaTime);\n      }\n\n      if (Input.GetKeyUp(KeyCode.L))\n      {\n        Debug.Log(PlayerPrefs.GetString(\"Name\"));\n      }\n\n    }\n\n        void DisableShoulderPads()\n        {\n            SHOULDER_PAD_R_01LOD0.SetActive(false);\n            SHOULDER_PAD_R_02LOD0.SetActive(false);\n            SHOULDER_PAD_R_03LOD0.SetActive(false);\n            SHOULDER_PAD_R_04LOD0.SetActive(false);\n\n            SHOULDER_PAD_L_01LOD0.SetActive(false);\n            SHOULDER_PAD_L_02LOD0.SetActive(false);\n            SHOULDER_PAD_L_03LOD0.SetActive(false);\n            SHOULDER_PAD_L_04LOD0.SetActive(false);\n        }\n\n    public void SetShoulderPad(Toggle id)\n    {\n      try\n      {\n        PlayerCharacter.ShoulderPad name \n          = (PlayerCharacter.ShoulderPad)Enum.Parse(typeof(PlayerCharacter.ShoulderPad), id.name, true);\n        if (id.isOn)\n        {\n          PlayerCharacterData.SelectedShoulderPad = name;\n        }\n        else\n        {\n          PlayerCharacterData.SelectedShoulderPad \n            = PlayerCharacter.ShoulderPad.none;\n        }\n      }\n      catch\n      {\n        // if the value passed is not in the enumeration set it to none\n        PlayerCharacterData.SelectedShoulderPad \n          = PlayerCharacter.ShoulderPad.none;\n      }\n\n            // disable before new selection\n            DisableShoulderPads();\n\n            switch (id.name)\n      {\n        case \"SP01\":\n          {\n            SHOULDER_PAD_R_01LOD0.SetActive(id.isOn);\n            SHOULDER_PAD_L_01LOD0.SetActive(id.isOn);\n            break;\n          }\n...\n        case \"SP04\":\n          {\n            SHOULDER_PAD_R_04LOD0.SetActive(id.isOn);\n            SHOULDER_PAD_L_04LOD0.SetActive(id.isOn);\n            break;\n          }\n      }\n    }\n\n...\n```", "```cs\n    public void SetKneePad(Toggle id)\n    {\n      KNEE_PAD_R_LOD0.SetActive(id.isOn);\n      KNEE_PAD_L_LOD0.SetActive(id.isOn);\n    }\n\n    public void SetLegPlate(Toggle id)\n    {\n      LEG_PLATE_R_LOD0.SetActive(id.isOn);\n      LEG_PLATE_L_LOD0.SetActive(id.isOn);\n    }\n\n        void DisableWeapons()\n        {\n            AXE_01LOD0.SetActive(false);\n            AXE_02LOD0.SetActive(false);\n            CLUB_01LOD0.SetActive(false);\n            CLUB_02LOD0.SetActive(false);\n            FALCHION_LOD0.SetActive(false);\n            GLADIUS_LOD0.SetActive(false);\n            MACE_LOD0.SetActive(false);\n            MAUL_LOD0.SetActive(false);\n            SCIMITAR_LOD0.SetActive(false);\n            SPEAR_LOD0.SetActive(false);\n            SWORD_BASTARD_LOD0.SetActive(false);\n            SWORD_BOARD_01LOD0.SetActive(false);\n            SWORD_SHORT_LOD0.SetActive(false);\n        }\n\n    public void SetWeaponType(Slider id)\n    {\n      try\n      {\n        PlayerCharacter.WeaponType weapon = (PlayerCharacter.WeaponType)Convert.ToInt32(id.value);\n\n        PlayerCharacterData.SelectedWeapon = weapon;\n      }\n      catch\n      {\n        PlayerCharacterData.SelectedWeapon = PlayerCharacter.WeaponType.none;\n      }\n\n            // disable weapons\n            DisableWeapons();\n\n      switch (Convert.ToInt32(id.value))\n      {\n        case 0:\n          {\n                        DisableWeapons();\n            break;\n          }\n        case 1:\n          {\n            AXE_01LOD0.SetActive(true);\n            break;\n          }\n...\n        case 13:\n          {\n            SWORD_SHORT_LOD0.SetActive(true);\n            break;\n          }\n      }\n    }\n\n    public void SetWeaponType(PlayerCharacter.WeaponType id)\n    {\n            // disable Weapons\n            DisableWeapons();\n\n      switch (Convert.ToInt32(id))\n      {\n        case 0:\n          {\n                        DisableWeapons();\n            break;\n          }\n        case 1:\n          {\n            AXE_01LOD0.SetActive(true);\n            break;\n          }\n...\n        case 13:\n          {\n            SWORD_SHORT_LOD0.SetActive(true);\n            break;\n          }\n      }\n    }\n```", "```cs\n        void DisableHelmets()\n        {\n            HELMET_01LOD0.SetActive(false);\n            HELMET_02LOD0.SetActive(false);\n            HELMET_03LOD0.SetActive(false);\n            HELMET_04LOD0.SetActive(false);\n        }\n\n    public void SetHelmetType(Toggle id)\n    {\n      try\n      {\n        PlayerCharacter.HelmetType helmet \n          = (PlayerCharacter.HelmetType)Enum.Parse(typeof(PlayerCharacter.HelmetType), id.name, true);\n        if (id.isOn)\n        {\n          PlayerCharacterData.SelectedHelmet = helmet;\n        }\n        else\n        {\n          PlayerCharacterData.SelectedHelmet \n            = PlayerCharacter.HelmetType.none;\n        }\n      }\n      catch\n      {\n        // if the value passed is not in the enumeration set it to none\n        PlayerCharacterData.SelectedHelmet \n          = PlayerCharacter.HelmetType.none;\n      }\n\n            // disable helmets\n            DisableHelmets();\n\n      switch (id.name)\n      {\n        case \"HL01\":\n          {\n            HELMET_01LOD0.SetActive(id.isOn);\n            break;\n          }\n        case \"HL02\":\n          {\n            HELMET_02LOD0.SetActive(id.isOn);\n            break;\n          }\n        case \"HL03\":\n          {\n            HELMET_03LOD0.SetActive(id.isOn);\n            break;\n          }\n        case \"HL04\":\n          {\n            HELMET_04LOD0.SetActive(id.isOn);\n            break;\n          }\n      }\n    }\n\n...\n\n    public void SetShieldType(PlayerCharacter.ShieldType id)\n    {\n      switch (id.ToString())\n      {\n        case \"SL01\":\n          {\n            SHIELD_01LOD0.SetActive(true);\n            SHIELD_02LOD0.SetActive(false);\n            break;\n          }\n        case \"SL02\":\n          {\n            SHIELD_01LOD0.SetActive(false);\n            SHIELD_02LOD0.SetActive(true);\n            break;\n          }\n      }\n    }\n\n    public void SetSkinType(Slider id)\n    {\n      PlayerCharacterData.SkinId = Convert.ToInt32(id.value);\n      SKN_LOD0.GetComponent<Renderer>().material = PLAYER_SKIN[System.Convert.ToInt32(id.value)];\n    }\n\n...\n```", "```cs\n      public void SetClothingType(Toggle id)\n      {\n         try\n         {\n            PlayerCharacter.ClothingType clothing\n               = (PlayerCharacter.ClothingType)Enum.Parse(typeof(PlayerCharacter.ClothingType), id.name, true);\n            if (id.isOn)\n            {\n               PlayerCharacterData.selectedClothing = clothing;\n            }\n            else\n            {\n               PlayerCharacterData.selectedClothing\n                  = PlayerCharacter.ClothingType.none;\n            }\n         }\n         catch\n         {\n            // if the value passed is not in the enumeration set it to             none\n            PlayerCharacterData.selectedClothing\n               = PlayerCharacter.ClothingType.none;\n         }\n\n         switch (id.name)\n         {\n            case \"CT01\":\n               {\n                  CLOTH_01LOD0.SetActive(id.isOn);\n                  CLOTH_02LOD0.SetActive(false);\n                  CLOTH_03LOD0.SetActive(false);\n                  break;\n               }\n            case \"CT02\":\n               {\n                  CLOTH_01LOD0.SetActive(false);\n                  CLOTH_02LOD0.SetActive(id.isOn);\n                  CLOTH_03LOD0.SetActive(false);\n                  break;\n               }\n            case \"CT03\":\n               {\n                  CLOTH_01LOD0.SetActive(false);\n                  CLOTH_02LOD0.SetActive(false);\n                  CLOTH_03LOD0.SetActive(id.isOn);\n                  break;\n               }\n            case \"CT04\":\n               {\n                  BELT_LOD0.SetActive(id.isOn);\n                  break;\n               }\n         }\n      }\n```", "```cs\n   public void LoadLevel()\n   {\n      switch (GameMaster.instance.LevelController.Level)\n      {\n         case 0:\n            {\n               SceneManager.LoadScene(SceneName.CharacterCustomization);\n               break;\n            }\n\n         // load level 1\n         case 1:\n            {\n               GameMaster.instance.PlayerCharacterGameObject = GameObject.FindGameObjectWithTag(\"Player\") as GameObject;\n               SceneManager.LoadScene(SceneName.Level_1);\n               break;\n            }\n      }\n   }\n```"]