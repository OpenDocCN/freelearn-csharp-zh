- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are programming books that are thousands of pages long that aim to be
    comprehensive references to the C# language, the .NET libraries, and app models
    like websites, services, and desktop and mobile apps.
  prefs: []
  type: TYPE_NORMAL
- en: This book is different. It is concise and aims to be a brisk, fun read that
    is packed with practical hands-on walk-throughs of each subject. The breadth of
    the overarching narrative comes at the cost of some depth, but you will find many
    signposts to explore further if you wish.
  prefs: []
  type: TYPE_NORMAL
- en: This book is simultaneously a step-by-step guide to learning modern C# and proven
    practices using cross-platform .NET, and a brief introduction to the fundamentals
    of modern web development, along with the creation of websites and services that
    can be built with these technologies. This book is most suitable for beginners
    to C# and .NET, as well as programmers who have worked with C# in the past but
    may feel left behind by the changes in the past few years.
  prefs: []
  type: TYPE_NORMAL
- en: If you already have experience with older versions of the C# language, then
    in the first topic of *Chapter 2*, *Speaking C#*, you can review the tables of
    new language features in an online section.
  prefs: []
  type: TYPE_NORMAL
- en: If you already have experience with older versions of the .NET libraries, then,
    in the first section of *Chapter 7*, *Packaging and Distributing .NET Types*,
    you can review the tables of the new library features in an online section.
  prefs: []
  type: TYPE_NORMAL
- en: I will point out the cool corners and gotchas of C# and .NET so that you can
    impress colleagues and get productive fast. Rather than slowing down and boring
    some readers by explaining every little thing, I will assume that you are smart
    enough to Google an explanation for topics that are related but not necessary
    to include in a beginner-to-intermediate guide that has limited space in a printed
    book.
  prefs: []
  type: TYPE_NORMAL
- en: Some chapters have links to additional related online-only content for those
    readers who would like more details. For example, *Chapter 1*, *Hello, C#! Welcome,
    .NET!*, has an online section about the history and background of .NET.
  prefs: []
  type: TYPE_NORMAL
- en: Where to find the code solutions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can download solutions for the step-by-step guided tasks and exercises
    from the GitHub repository at the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/markjprice/cs13net9](https://github.com/markjprice/cs13net9)'
  prefs: []
  type: TYPE_NORMAL
- en: If you don’t know how to download or clone a GitHub repository, then I provide
    instructions at the end of *Chapter 1*, *Hello, C#! Welcome, .NET!*.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Chapter 1*, *Hello, C#! Welcome, .NET!*, is about setting up your development
    environment to use either Visual Studio or VS Code with C# Dev Kit. Then you will
    learn how to use them to create the simplest application possible with C# and
    .NET. For simplified console apps, you will see the use of the top-level program
    feature introduced in C# 9, which is then used by default in the project templates
    for C# 10 onwards. You will also learn about some good places to look for help,
    including AI tools like ChatGPT and GitHub Copilot, and ways to contact me to
    get help with an issue or give me feedback to improve the book today through its
    GitHub repository and in future print editions.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 2*,*Speaking C#*, introduces the versions of C# and has tables showing
    which version introduced new features in an online section. I will explain the
    grammar and vocabulary that you will use every day to write the source code for
    your applications. In particular, you will learn how to declare and work with
    variables of different types.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 3*, *Controlling Flow, Converting Types, and Handling Exceptions*,
    covers using operators to perform simple actions on variables, including comparisons,
    writing code that makes decisions, pattern matching, repeating a block of statements,
    and converting between types. This chapter also covers writing code defensively
    to handle exceptions when they inevitably occur, including using guard clauses
    like `ThrowIfLessThan` on the `ArgumentOutOfRangeException` class introduced with
    .NET 8.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 4*, *Writing, Debugging, and Testing Functions*, is about following
    the **Don’t Repeat Yourself** (**DRY**) principle by writing reusable functions
    using both imperative and functional implementation styles. You will also learn
    how to use debugging tools to track down and remove bugs, use Hot Reload to make
    changes while your app is running, monitor your code while it executes to diagnose
    problems, and rigorously test your code to remove bugs, ensuring stability and
    reliability before it gets deployed into production.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 5*, *Building Your Own Types with Object-Oriented Programming*, discusses
    all the different categories of members that a type like a class can have, including
    fields to store data and methods to perform actions. You will use **Object-Oriented
    Programming** (**OOP**) concepts, such as aggregation and encapsulation, and how
    to manage namespaces for types, including the ability to alias any type introduced
    with C# 12\. You will learn language features such as tuple syntax support and
    `out` variables, local functions, and default literals and inferred tuple names.
    You will also learn how to define and work with immutable types using the `record`
    keyword, `init`-only properties, and `with` expressions, introduced in C# 9\.
    Finally, we look at how C# 11 introduced the `required` keyword to help avoid
    the overuse of constructors to control initialization, how C# 12 introduced primary
    constructors for non-record types, and how C# 13 expands the supported types for
    a `params` parameter and how you can now define partial properties as well as
    partial methods.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 6*,*Implementing Interfaces and Inheriting Classes*, explains deriving
    new types from existing ones using OOP. You will learn how to define operators,
    delegates, and events, how to implement interfaces about base and derived classes,
    how to override a member of a type, how to use polymorphism, how to create extension
    methods, how to cast between classes in an inheritance hierarchy, and about the
    big changes in C# 8 with the introduction of nullable reference types, along with
    the switch to make this the default in C# 10 and later. In an optional online-only
    section, you can learn how analyzers can help you write better code.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 7*, *Packaging and Distributing .NET Types*, introduces the versions
    of .NET and includes tables showing which version introduced new library features
    in an online section. I will then present the .NET types that are compliant with
    .NET Standard and explain how they relate to C#. Throughout this chapter, you
    will learn how to write and compile code on any of the supported operating systems,
    including the Windows, macOS, and Linux variants. You will learn how to package,
    deploy, and distribute your own apps and libraries. In three optional online-only
    sections, you can learn how to use legacy .NET Framework libraries in .NET libraries,
    about the possibility of porting legacy .NET Framework code bases to modern .NET,
    and about source generators and how to create them.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 8*, *Working with Common .NET Types*, discusses the types that allow
    your code to perform common practical tasks, such as manipulating numbers and
    text, storing items in collections, and, in an optional online-only section, working
    with a network using low-level types. You will also learn about regular expressions
    and the improvements that make writing them easier, as well as how to use source
    generators to improve their performance. Introduced with .NET 9 are new classes
    for Base64-encoded URLs, performing multiplication on big integers, ordered dictionaries,
    read-only sets, improvements to searching in strings, and being able to generate
    regular expressions on a partial property.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 9*, *Working with Files, Streams, and Serialization*, covers interacting
    with a filesystem, reading and writing to files and streams, text encoding, and
    serialization formats like JSON and XML, including the improved functionality
    and performance of the `System.Text.Json` classes. If you use Linux, then you
    will be interested in how to programmatically work with `tar` archives, which
    you can learn about in an online-only section. .NET 9 (finally!) removes the dangerous
    legacy `BinaryFormatter` serialization class and adds a class to export JSON schemas.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 10*, *Working with Data Using Entity Framework Core*, explains reading
    and writing to relational databases, such as SQL Server and SQLite, using the
    **object-relational mapping** (**ORM**) technology named **Entity Framework Core**
    (**EF Core**). You will learn how to define entity models that map to existing
    tables in a database using **Database First** models. In three optional online-only
    sections, you can also learn how to define **Code First** models that can create
    tables and databases at runtime, how to insert, update, and delete data, and how
    to group multiple changes together using transactions.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 11*, *Querying and Manipulating Data Using LINQ*, teaches you about
    **Language INtegrated Queries** **(LINQ**)—language extensions that add the ability
    to work with sequences of items and filter, sort, and project them into different
    outputs. This chapter includes LINQ methods introduced in .NET 6, like `TryGetNonEnumeratedCount`
    and `DistinctBy`, in .NET 7, like `Order` and `OrderDescending`, and in .NET 9,
    like `CountBy`, `AggregateBy`, and `Index`. Optional online-only sections cover
    using multiple threads with parallel LINQ, working with LINQ to XML, and creating
    your own LINQ extension methods.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 12*, *Introducing Modern Web Development Using .NET*, introduces you
    to the types of web projects that can be built using C# and .NET. You will also
    build an EF Core model to represent the database for a fictional organization
    named *Northwind* that will be used throughout the rest of the chapters in the
    book. You will learn how to efficiently manage NuGet package version using Central
    Package Management. Finally, you will be introduced to common web technologies
    like HTML and CSS.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 13*,*Building Websites Using ASP.NET Core*, is about learning the
    basics of building websites with a modern HTTP architecture on the server side,
    using ASP.NET Core. You will learn how to implement the ASP.NET Core feature known
    as Blazor static **Server-Side Rendering (SSR)**, which replaces the legacy Razor
    Pages technology for creating data-driven web pages. You will learn how to optimize
    static assets like JavaScript and stylesheets using a new method introduced with
    .NET 9, `MapStaticAssets`. In two optional online-only sections, you’ll see how
    to customize the HTTP request and response pipeline, and you’ll gain insight into
    enabling HTTP/3 in your website project.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 14*,*Building Interactive Web Components Using Blazor*, introduces
    how to build web user interface components using Blazor that can be executed either
    on the server side or on the client side inside the web browser. You will see
    how to build components that are easy to switch between the client and the server,
    with the new hosting model introduced with .NET 8.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 15*, *Building and Consuming Web Services*, explains building backend
    REST architecture web services using the ASP.NET Core Minimal APIs. We will cover
    how to document them using the new Microsoft-implemented OpenAPI documentation
    generator. Introduced with .NET 9 is a hybrid cache that you will learn how to
    use to get the best of in-memory and distributed caching. Then we will see how
    to properly consume them using factory-instantiated HTTP clients. In two optional
    online-only sections, you will be introduced to advanced features, like health
    checks and adding security HTTP headers, and how Minimal APIs projects can use
    native **ahead-of-time** (**AOT**) compilation during the publishing process to
    improve startup time and memory footprint.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Epilogue* describes your options for further study about C# and .NET.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Appendix*, *Answers to the Test Your Knowledge Questions*, has the answers
    to the test questions at the end of each chapter. You can read the appendix at
    the following link: [https://packt.link/LsQtz](https://packt.link/LsQtz).'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can develop and deploy C# and .NET apps using VS Code and the command-line
    tools on most operating systems, including Windows, macOS, and many varieties
    of Linux. An operating system that supports VS Code and an internet connection
    is all you need to follow along with this book.
  prefs: []
  type: TYPE_NORMAL
- en: If you prefer alternatives, then the choice is yours whether to use Visual Studio,
    or a third-party tool like JetBrains Rider.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the color images of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We also provide you with a PDF file that has color images of the screenshots
    and diagrams used in this book. The color images will help you better understand
    the changes in the output.
  prefs: []
  type: TYPE_NORMAL
- en: You can download this file from [https://packt.link/gbp/9781835881224](https://packt.link/gbp/9781835881224).
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    For example: “The `Controllers`, `Models`, and `Views` folders contain ASP.NET
    Core classes and the `.cshtml` files for execution on the server.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are highlighted:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new **term**, an important **word**, or words that you
    see on the screen, for example, in menus or dialog boxes. For example: “Clicking
    on the **Next** button moves you to the next screen.”'
  prefs: []
  type: TYPE_NORMAL
- en: Important notes and links to external sources for further reading appear in
    a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: '**Good Practice**: Recommendations for how to program like an expert appear
    like this.'
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](https://www.packtpub.com/support/errata),
    select your book, click on the **Errata Submission Form** link, and enter the
    details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name.'
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `copyright@packt.com` with a link to the material.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are interested in becoming an author: If there is a topic that you have
    expertise in and you are interested in either writing or contributing to a book,
    please visit [authors.packtpub.com](https://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Leave a Review!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thank you for purchasing this book from Packt Publishing—we hope you enjoy it!
    Your feedback is invaluable and helps us improve and grow. Once you’ve completed
    reading it, please take a moment to leave an [Amazon review](https://packt.link/r/1835881238);
    it will only take a minute, but it makes a big difference for readers like you.
  prefs: []
  type: TYPE_NORMAL
- en: Scan the QR code below to receive a free ebook of your choice.
  prefs: []
  type: TYPE_NORMAL
- en: '![A qr code with black squares  Description automatically generated](img/review.png)'
  prefs: []
  type: TYPE_IMG
- en: https://packt.link/NzOWQ
  prefs: []
  type: TYPE_NORMAL
- en: Download a free PDF copy of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for purchasing this book!
  prefs: []
  type: TYPE_NORMAL
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  prefs: []
  type: TYPE_NORMAL
- en: Is your eBook purchase not compatible with the device of your choice?
  prefs: []
  type: TYPE_NORMAL
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  prefs: []
  type: TYPE_NORMAL
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  prefs: []
  type: TYPE_NORMAL
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these simple steps to get the benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Scan the QR code or visit the link below:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B22322_Free_PDF_QR.png)'
  prefs: []
  type: TYPE_IMG
- en: https://packt.link/free-ebook/9781835881224
  prefs: []
  type: TYPE_NORMAL
- en: Submit your proof of purchase.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That’s it! We’ll send your free PDF and other benefits to your email directly.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
