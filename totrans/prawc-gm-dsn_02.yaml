- en: Game Concept
  prefs: []
  type: TYPE_NORMAL
- en: Every game starts with a concept, an idea of what the player experience will
    be—a vision of a world coming to life on screen.
  prefs: []
  type: TYPE_NORMAL
- en: The challenge, once this idea takes shape in the creator's mind, is to fix it
    and communicate it to everyone involved in the game development process.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we're going to learn how to write a game concept and your responsibilities
    as a game designer in the process of doing so.
  prefs: []
  type: TYPE_NORMAL
- en: 'We are going to cover topics such as:'
  prefs: []
  type: TYPE_NORMAL
- en: Defining what a game concept is
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The formal structure of the game concept document
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to compare your idea to what's already out there
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are themes, fantasy, and mood, and why are they important at this stage?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We are going to use some practical examples from real-life scenarios and you
    will be able to follow the tips in each paragraph of this chapter and create your
    own game concept, based on your own idea or an existing game.
  prefs: []
  type: TYPE_NORMAL
- en: What is a game concept?
  prefs: []
  type: TYPE_NORMAL
- en: Imagine a game that you have played from beginning to end or one that you have
    simply loved and played for a long time. Would you be able to write a two-to-five
    pages short presentation on that game? A presentation that describes why is it
    fun, how you play it, what it looks like, and for what kind of player it is going
    to be a great experience?
  prefs: []
  type: TYPE_NORMAL
- en: Now imagine that you've never played that game, that it doesn't even exist yet.
    Would you still be able to describe it?
  prefs: []
  type: TYPE_NORMAL
- en: That vision is the game you want to make and the presentation is a game concept.
  prefs: []
  type: TYPE_NORMAL
- en: The purpose of the game concept is to describe a game with enough detail to
    distill and communicate its vision to the reader. To explain what makes it fun,
    who'll enjoy playing it, and why we should make it a reality.
  prefs: []
  type: TYPE_NORMAL
- en: One of the main responsibilities of every game designer is to make sure that,
    at every stage of development, the vision behind the game is clearly documented
    and communicated to the team.
  prefs: []
  type: TYPE_NORMAL
- en: The earlier you are in the development cycle, the more abstract this documentation
    will be. What starts with a short high-level concept will eventually turn into
    a full game design document that can easily span over a hundred pages. Later on
    (especially if you work in an Agile team), your documentation efforts are likely
    going to shift into feature specs (a focused design document that only will be
    used to explain a single standalone element of the game) and small user stories
    or tickets mentioned in [`Chapter 1`](index_split_032.html#filepos105483), Introducing
    the Game Production Process.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: As one of the very first steps in the development process, the game concept
    is the most abstract document, so it is paramount that it stays focused on the
    core aspects of the game.
  prefs: []
  type: TYPE_NORMAL
- en: After all, you only have a few pages to describe the whole thing. You don't
    really want to linger on your main protagonist's story for four pages and then
    describe how the game works in the remaining few lines of the last page.
  prefs: []
  type: TYPE_NORMAL
- en: 'A game concept is a holistic view of the game; it describes the game and what
    the team is going to put into it (not just the designers; it contains early artwork
    and technical and marketing information):'
  prefs: []
  type: TYPE_NORMAL
- en: '`Exercise`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`This is your first exercise. If you have a game idea already in your head, try to put it on paper: a couple of pages would be enough. If you don''t have any particular game idea in mind, try to describe a game that you have played and loved enough to know all its rules and secrets.`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: There's no need to read the rest of [`Chapter 1`](index_split_032.html#filepos105483),
    Introducing the Game Production Process. Do the exercise now, before knowing anything
    more.
  prefs: []
  type: TYPE_NORMAL
- en: Once this is done, keep going with the reading and the exercises. You will be
    able to compare your initial work with what we're going to see, expand it, and
    find and correct any eventual mistake by yourself.
  prefs: []
  type: TYPE_NORMAL
- en: Structure of a game concept document So, how do you write a game concept? And
    what do you need before starting?
  prefs: []
  type: TYPE_NORMAL
- en: 'There is some information that any game concept should always contain:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction (sometimes called a hook or elevator pitch)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Description/game overview
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A list of key features, including its Unique Selling Points (USPs)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Game genre
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Platform
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Target audience
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is clear from this list that your role as a game designer is not about deciding
    all this. The game idea or hook may come from any other team member, from an external
    client, from a publisher, or from some lead/director within the company.
  prefs: []
  type: TYPE_NORMAL
- en: The games industry offers a lot of freedom and possibilities; there are companies
    that make games to make a profit or indie developers that follow their passion
    and make their games because they have something to say—there are even people
    working on games in their free time just because they love it.
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of the motivations or the goals of a developer, it's always a good
    idea to treat a game such as a commercial product. This means that, in order to
    justify the existence of the game, there must be people willing to buy it, play
    it, and hopefully even talk about it. This is why the game concept needs to go
    beyond a simple description of a game; you have to think about a game concept
    as a sales tool.
  prefs: []
  type: TYPE_NORMAL
- en: 'The audience may vary (and so do the formality and the structure of the document)
    but the goal stays the same: whoever reads the document must understand and see
    what the development team wants to do, and needs to get excited about that!'
  prefs: []
  type: TYPE_NORMAL
- en: 'The reader might be a publisher to which you are presenting the idea. Presenting
    really means selling, in this case. But the reader could be the programmer who
    is going to implement the game or an artist who is going to create all the artwork
    or graphical assets, or even just a possible player. All these people will look
    at the document in a different way, but one thing is for sure: if they get what
    the document is trying to present they will get excited about the project and
    look forward to whatever it is they have an interest in, from giving the money
    needed for its development, to working on it or to just playing it!'
  prefs: []
  type: TYPE_NORMAL
- en: '`Exercise`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`Try to compare the work you have done in your first exercise with what you have learned in this paragraph. Does your concept include information such as genre, platform, or target audience?`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Read on to understand what are we talking about and why these things are as
    important as the mere description of the game.
  prefs: []
  type: TYPE_NORMAL
- en: The "hook" or "elevator pitch"
  prefs: []
  type: TYPE_NORMAL
- en: You have a couple of sentences, three maximum, to describe what your game is
    going to be. The introduction has to condense all the information that you will
    expand in the rest of the document. This is your first page and if it doesn't
    catch your reader's attention, nothing else you have to say will.
  prefs: []
  type: TYPE_NORMAL
- en: It's not only that; by stripping your whole game down to such a fundamental
    description, you are focusing on what's really important. It's like a mantra you
    will have to follow during development because that's your promise to your players.
  prefs: []
  type: TYPE_NORMAL
- en: It's called a hook because the reader wants to know more. Some call it an elevator
    pitch because it's what you can say to a stranger in a 30-second elevator ride.
    A great example comes from a well-known game developer, Rami Ismail. He and his
    team, Vlambeer, made a game called Ridiculous Fishing, a hit mobile game from
    2013.
  prefs: []
  type: TYPE_NORMAL
- en: What is it? In his own words, it's Fishing with machine guns.
  prefs: []
  type: TYPE_NORMAL
- en: In just four words, this sentence tells a lot about the game, but also makes
    you wonder how? (and probably why?). You're hooked. You want to know more. Great
    introduction!
  prefs: []
  type: TYPE_NORMAL
- en: There are no strict rules on how to put together your introduction. In a multimedia
    world, some games are introduced with a short video, a set of mood boards, or
    concept art. These are all powerful tools that can be used to communicate the
    game vision. Don't limit yourself to just words on a page; after all, a picture
    is worth a thousand words. At the same time, keep in mind your audience, be sure
    that the person who is going to read your concept can clearly understand your
    intentions. As your audience changes (from peers to high-level executives), you
    might need to change things around and adapt your concept.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Description
  prefs: []
  type: TYPE_NORMAL
- en: 'In a few paragraphs, a page, or a few slides, this is where the game is described.
    All the main elements should appear in this section:'
  prefs: []
  type: TYPE_NORMAL
- en: The core gameplay mechanics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The narrative
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mode and setting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Information about the characters and the game world
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The idea is to give to the reader a clear picture of how the final experience
    is going to be. This is also the section with more space for multimedia. Concept
    artwork can juxtapose text to reinforce it, but also to give directions about
    the art style.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes audio and soundtracks will be a defining part of a game concept (just
    think about musical games), and for games that would require an extensive use
    of audio, such as narrative games with voice acting, including these details early
    in the concept is as important as defining the core gameplay mechanics.
  prefs: []
  type: TYPE_NORMAL
- en: A common mistake while writing the description is to include too specific information
    or yield to the temptation of exaggerating. Describing the game combat as driven
    by a revolutionary artificial intelligence is not a good idea if developing that
    AI is not part of the plan (or the budget). And in case it is, there's no need
    to go into the details of how such an AI will work, even though a few words to
    describe why it's defined as revolutionary might be required.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Key feature set
  prefs: []
  type: TYPE_NORMAL
- en: This is a list of the features that make your game a great experience for your
    players. There's no need to include all the system you will be designing, but
    it is expected that a game concept includes all the main ones. This means that
    a healthy development cycle starts with a fundamental feature set that remains
    largely unchanged (unless things don't work out as expected and you find yourself
    in dire need of a big design pivot).
  prefs: []
  type: TYPE_NORMAL
- en: Some common key features are game modes, multiplayer guild systems, battle systems,
    playable characters, progression systems, and technical features (such as advanced
    AI or particular graphics). The list is as long as a designer's imagination can
    go, so make sure to include only the ones really relevant to your game.
  prefs: []
  type: TYPE_NORMAL
- en: 'To look at some practical examples, the App Store gives some very good insights.
    Most App Store descriptions contain a list of the game''s key features. Hearthstone,
    for example, markets itself with the following messages:'
  prefs: []
  type: TYPE_NORMAL
- en: 'JUMP RIGHT IN: Fun introductory missions bring you into the world of Hearthstone''s
    intuitive gameplay.'
  prefs: []
  type: TYPE_NORMAL
- en: 'BUILD YOUR DECK: With hundreds of additional cards to win and craft - your
    collection grows with you.'
  prefs: []
  type: TYPE_NORMAL
- en: 'HONE YOUR SKILLS: Play in practice matches against computer-controlled heroes
    of the Warcraft universe. Thrall, Uther, Gul''dan - they''re all here!'
  prefs: []
  type: TYPE_NORMAL
- en: 'COLLECTION TRAVELS WITH YOU: Your card collection is linked to your Battle.net
    account - enabling you to switch your play between tablet and desktop with ease.'
  prefs: []
  type: TYPE_NORMAL
- en: 'AND FIGHT FOR GLORY: When you''re ready, step into the Arena and duel other
    players for the chance to win awesome prizes!'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, Blizzard did an excellent job of mixing technical and gameplay
    features, describing them with taglines that make players excited about their
    trading card game. These messages were obviously written by the marketing team
    for the finished product, but they are a perfect example of clearly and efficiently
    communicating the key feature set to the target audience.
  prefs: []
  type: TYPE_NORMAL
- en: Finding your USP
  prefs: []
  type: TYPE_NORMAL
- en: What makes your game different? What is its USP?
  prefs: []
  type: TYPE_NORMAL
- en: Finding the USP is a fundamental step in defining your key feature set, especially
    if your concept is intended for a publisher or an investor.
  prefs: []
  type: TYPE_NORMAL
- en: The USP determines that unique mechanism or takes on your genre that are going
    to make your game stand out from the competition, the reason why players out there
    will be interested in dedicating their valuable time to your game instead of the
    many others that they already have or are interested in trying.
  prefs: []
  type: TYPE_NORMAL
- en: To help you understand the idea behind the USP, sometimes also called breakthrough,
    let's have a look at some widely popular and successful games. The Assassin's
    Creed franchise came out in 2007 and it revolutionized the action-adventure game
    genre by introducing its famous parkour mechanic. The ability to traverse on the
    vertical axis by freely climbing buildings was a fresh and innovative feature
    and helped set the game apart from its competition. The public response was immensely
    positive, and despite some major flaws in that original game, Assassin's Creed
    became one of the biggest game franchises in history.
  prefs: []
  type: TYPE_NORMAL
- en: 'Another famous example, on a different platform: Supercell''s Clash Royale.
    The core gameplay is based on collecting cards and battling with them in an arena
    with other players. The game is full of fresh takes on different mechanics, but
    it has one very clear USP: real-time Player vs Player (PvP). When the game came
    out in mid-2016, very few mobile games were relying on synchronous PvP. Most titles
    at the time were either turn-based or real-time vs AI (the other player being
    controlled by an artificial intelligence). Clearly, it was a consequence of the
    technical challenges of creating synchronous PvP games on mobile.'
  prefs: []
  type: TYPE_NORMAL
- en: Like in any market, an unexplored area is both a risk and an opportunity. Supercell
    was successful in pushing the boundaries of mobile multiplayer games towards synchronous
    PVP and created a billion-dollar game in the process.
  prefs: []
  type: TYPE_NORMAL
- en: 'The USP concept seems to be another one more concerning marketing and sales.
    Indeed, the two questions: Why should I buy your game? and Why should I play your
    game? have very similar answers, but as a game designer, your job is to answer
    the latter. However, most of the time, that will answer the former too!'
  prefs: []
  type: TYPE_NORMAL
- en: '`Exercise`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`Have you clearly defined the USP for your game concept? Try to add it to your document.`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`Is it unique enough to make the concept stand out from similar games? `'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`Do you know any other examples of game franchises that owe their popularity to a specific USP? Think about a few of them and compare their USP with yours.`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Platform
  prefs: []
  type: TYPE_NORMAL
- en: This refers to the hardware on which the game will be played or a particular
    distribution platform. Hardware such as PCs, games consoles, mobile devices, and
    virtual reality headsets are considered platforms, but also specific environments
    such as Facebook or iMessage are platforms themselves. Each platform brings a
    unique set of requirements and opens up very different possibilities, both on
    the technical and creative sides.
  prefs: []
  type: TYPE_NORMAL
- en: Choosing the right platform for your game has to be one of the earliest decisions.
    The platform on its own can have an immense influence on the game design, from
    the target audience and business model to controls, user interface, and performance
    requirements. Platform choice in itself sets certain expectations towards the
    game you're making. There's a good reason why match-three puzzle games are not
    swarming the console market.
  prefs: []
  type: TYPE_NORMAL
- en: From an audience perspective, a card solitaire game may work really well on
    smartphones but is unlikely to be as popular on consoles. Similarly, but from
    a hardware angle, a strategy game that relies on precise controls provided by
    mouse and keyboard might not translate very well to the console or handheld input
    methods.
  prefs: []
  type: TYPE_NORMAL
- en: There are many unspoken rules to game design, and knowing when to break them
    is part of the art. Introducing a complex strategy game to the smartphone market
    and tackling the challenges of the platform head-on might result in a very innovative
    and interesting product. But remember, such experiments are risky, so make sure
    you know the rules before you try to break them!
  prefs: []
  type: TYPE_NORMAL
- en: 'Each platform has also a very tangible impact on how the game will be designed.
    The most evident example is about input controls: an action game would pose completely
    different challenges on a mobile device than on a console controller...'
  prefs: []
  type: TYPE_NORMAL
- en: Those difference in design are not limited to the platform technology; the way
    the player expects to interact with games on different platforms is important
    too. A mobile game would be usually characterized by short sessions where the
    player is able to complete the whole game loop in just a few minutes, while a
    PC game could require the same amount of time just to go through a single cutscene.
  prefs: []
  type: TYPE_NORMAL
- en: Audience
  prefs: []
  type: TYPE_NORMAL
- en: There is a huge difference between an educational game for little kids and an
    18+ rated zombie shooter.
  prefs: []
  type: TYPE_NORMAL
- en: Defining the audience is part of the initial creative process. Even if it seems
    such as a consequence of the kind of game one wants to make, it is important to
    spend some time thinking about it and having a clear idea of who is going to play
    the game. The kids/adult example is an easy one, but identifying an audience means
    asking yourself questions such as who is interested in this game? Which other
    similar games does he or she play? What are they expecting from a new game in
    their favorite genre?
  prefs: []
  type: TYPE_NORMAL
- en: Mere demographics are still an important factor in defining an audience, but
    in our modern world, amazingly, pretty much everyone plays video games and there's
    no such thing as a young hardcore gamer or an average casual gamer.
  prefs: []
  type: TYPE_NORMAL
- en: These are concepts from the past that it is important to leave behind. Everyone
    is a potential gamer in today's world, but each and every gamer is interested
    in very different game experiences. Internet and online communities give game
    developers an incredible tool to find out about people's desires and fantasies
    in terms of what they'd love to play. User research is done by many developers,
    submitting rough concepts, trailers, or marketing materials of games that don't
    yet exist to test and learn from those desires.
  prefs: []
  type: TYPE_NORMAL
- en: 'Video game audiences are also constantly evolving. There is a great article
    written by Meg Jayanth (the writer behind 80 Days) for The Guardian in 2014 titled:'
  prefs: []
  type: TYPE_NORMAL
- en: '"52% of gamers are women – but the industry doesn''t know it".'
  prefs: []
  type: TYPE_NORMAL
- en: ([`https://www.theguardian.com/commentisfree/2014/sep/18/52-percent-people-playing-games-women-industry-doesnt-know`](https://www.theguardian.com/commentisfree/2014/sep/18/52-percent-people-playing-Games-women-industry-doesnt-know)).
    Give it a good read! Industry reports available online can also give you a great
    idea of the different (and, sometimes, unexpected) types of audience out there.
  prefs: []
  type: TYPE_NORMAL
- en: When you define your target audience, try to go beyond a generic definition.
    Define your audience by their interests.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Casual players who have a few spare minutes on their commute is incredibly more
    accurate than an average casual gamer.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Hardcore players who grew up playing strategy games such as Dune II and Fallout
    Tactics are not quite the same as hardcore strategy game players.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: A more precise target audience definition is extremely helpful because it gives
    you something to design around already. Just look at the information contained
    in casual players who have a few spare minutes on their commute. You don't only
    know that your game is for casual players, you also know that the average game
    session should last no more than a few minutes and that the game might have some
    problems working online, as commuting usually means unstable mobile networks.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Age rating systems
  prefs: []
  type: TYPE_NORMAL
- en: You surely have heard about PEGI or ESRB. Age-based rating systems are important
    in the game industry and they should be taken into consideration by developers.
    Knowing beforehand that you are developing a game that is supposed to be PEGI
    7, for example, already says a lot about the game design itself.
  prefs: []
  type: TYPE_NORMAL
- en: The same goes for mature-rated games.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, the very fact that they are mature-rated is part of the concept.
  prefs: []
  type: TYPE_NORMAL
- en: In fact, the idea of including an expected age-based rating in the concept might
    help in creating a game actually suitable for that age restriction.
  prefs: []
  type: TYPE_NORMAL
- en: There is an everlasting debate about these systems and how they are (or are
    not) useful to consumers, especially parents choosing a game for their children.
    As will often be the case in this book, we strongly recommend you explore the
    topic on your own; but for now, keep in mind that they are not just tools to rate
    a finished game, but also useful guidelines to keep a project on track so it's
    suitable for a particular audience.
  prefs: []
  type: TYPE_NORMAL
- en: Genre
  prefs: []
  type: TYPE_NORMAL
- en: 'If you think about movies, since there''s no interactivity involved, the narrative
    theme is enough to define an entire genre: thrillers, war movies, romantic movies,
    comedies, and so on.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Since games are an interactive medium, talking about a war game doesn''t really
    tell us much about it. Therefore, in games, the genre is more informative than
    the theme and the setting. And so our genres, such as a First Person Shooter (FPS),
    are heavily related to the gameplay at hand. An FPS can take place in different
    settings and explore different themes: from historic, to present day or even sci-fi.'
  prefs: []
  type: TYPE_NORMAL
- en: Genre tells the players what kind of game they will be playing, and it's a very
    useful way to classify games. There are quite a lot of genres and each genre might
    have many sub-genres. Also, smart game designers are constantly redefining genres
    and pushing the boundaries of what a genre means. Nonetheless, it is safe to say
    that some genres are universally recognized by both developers and players as
    standard.
  prefs: []
  type: TYPE_NORMAL
- en: Some examples are FPS, platformers, role-playing games (RPG), sports games,
    mass multiplayer online games (MMO), Multiplayer online battle arenas (MOBA),
    strategy games, and simulations. The list goes on and on.
  prefs: []
  type: TYPE_NORMAL
- en: 'Defining the genre, or having a genre as a starting point for redefining one,
    is a crucial part of creating a game concept, certainly the one that will most
    influence the entire design process:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Exercise`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`How many genres are you familiar with? Make a list of all the genres you know and then highlight the ones you have never played. Get yourself some games in those genres and familiarize yourself with them. Everyone has their favorite genre, but by becoming a game designer, you can''t afford to ignore the genres you don''t like to play. You are not a mere videogamer anymore!`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`Have a look at this great list on Wikipedia and keep learning about old games and genres you might have missed! `'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[`https://en.wikipedia.org/wiki/List_of_video_game_genres`](https://en.wikipedia.org/wiki/List_of_video_Game_genres)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Business model
  prefs: []
  type: TYPE_NORMAL
- en: The business model (or revenue model) is simply a system by which the game is
    going to make money. Remember, a game is ultimately a product that needs to be
    sold, even the most artistic one—surprisingly enough, even the ones that will
    be given away for free. As we already mentioned, a game concept is not a one-man
    job by the game designer. Just like game design, creating a game concept is a
    collaborative work in which the whole team participates and there might be also
    requirements coming from outside. This includes the business model, and the team
    needs to have a clear idea of how it will work.
  prefs: []
  type: TYPE_NORMAL
- en: You might think that this is something about marketing that doesn't really concern
    you, but the business model will have an impact on how the game is designed; therefore,
    it is absolutely your concern and has to be clear from the beginning.
  prefs: []
  type: TYPE_NORMAL
- en: Some developers think that business models are some kind of virus that infected
    the game development world in recent years. That great games are going to sell
    because they are great, so there's no need to think about it. Or maybe, that smaller
    games made by a handful of developers don't need to waste time on marketing stuff.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Sometimes, indeed, this is true, especially because there are many reasons to
    make a game with no intention of selling it.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: That said though, the rest of the time (which is most of the time) games have
    to be sold and the job of the game developer is to make games for a living. So
    keep the business model in mind, and design around it from the beginning. Create
    something so great that players are willing to pay for it.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'There are three main business models through which a game can generate revenue:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Premium: A premium game is paid upfront and then it can be played virtually
    forever by the player. It is still the dominant business model for console and
    PC games. Some examples include The Elder Scroll V: Skyrim, The Sims, and The
    Legend Of Zelda: Breath of the Wild.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Subscription: Games with subscriptions require the player to pay a monthly
    fee in order to continue to access the game. The most popular subscription-based
    games are MMOs such as World of Warcraft or Eve Online.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Free to Play: Free to Play (F2P) games can be downloaded and played for free
    and rely entirely on optional microtransactions. Extensive information on this
    business model can be found later on, in [`Chapter 15`](index_split_443.html#filepos1012825),
    Games As a Service.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sounds simple enough, right? Like every aspect of game development, there's
    a whole lot under the surface! Each of those three main models can be implemented
    in a variety of different ways and also intertwined with each other.
  prefs: []
  type: TYPE_NORMAL
- en: Premium games can be given out for free as a demo (only a limited amount of
    content available for free) or for a limited amount of time (free weekends are
    really popular for competitive multiplayer games such as Overwatch). Premium games
    can also be enriched with further content releases of downloadable content (DLC).
    This is new and fresh content (levels, characters, game modes, and so forth) made
    available later to keep players interested and engaged in a game. Usually, DLC
    is sold for extra money, but sometimes it might be free (for everyone or just
    for players who purchased a particular edition of the game).
  prefs: []
  type: TYPE_NORMAL
- en: A great example of an innovative business model is Episodic games, popularized
    by Telltale games, with their series of licensed titles such as The Walking Dead
    and Back to the Future. This is essentially an evolution of the old shareware
    (demo) or trial model but naturally divided and reinforced by the narrative. Usually,
    the first episode is given away for free, and the player can decide to purchase
    each additional episode individually or subscribe and gain access to the entire
    season.
  prefs: []
  type: TYPE_NORMAL
- en: F2P games can generate their revenues in even more creative and new ways. Offering
    virtual goods or in-game currencies for real money is just one possibility. F2P
    games can make money through advertisements (yes, just like TV shows!) and then
    sell players the ad-free version, or they can ask players to watch an ad to get
    an in-game reward, or maybe to subscribe to the game to get the same reward without
    having to watch any ads.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many possibilities, but regardless of the business model you chose
    for your game, one thing must not be forgotten: the business model and the game
    design are intertwined.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Creating a game and thinking about its business model as the last step before
    release is a huge mistake. Switching between vastly different business models
    in the middle of the development process (for example, turning a premium game
    into an F2P one) is a very dangerous move that can seriously derail the product.
    This is why the business model is an essential part of the game concept. Like
    anything else in it, it sets important guidelines for the entire development:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Exercise`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`Did your initial concept include something about the business model? `'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`Think about it and include it in your concept. Does it change your idea of the game? What are players going to pay for? `'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Know your competition
  prefs: []
  type: TYPE_NORMAL
- en: 'There is another reason why a game concept is such an important milestone in
    starting to create a new game. Once your game genre, audience, and platform are
    defined, it is possible to take a look at what''s out there in the market: your
    competition. Understanding games similar to the one you will be developing is
    crucial to the project''s success. It is very likely that the developers of those
    other games have already faced and solved (or maybe not!) many of the problems
    you will encounter at some point during development.'
  prefs: []
  type: TYPE_NORMAL
- en: Communities of players already playing those games might be discussing them
    in depth online. This is an invaluable resource for you, as you will be able to
    fix known problems or add features to your game, based on what real players are
    willing and hoping to play.
  prefs: []
  type: TYPE_NORMAL
- en: Other ways of gaining insight into the competition include game postmortems
    (first-hand reports on what went right and wrong on a particular game project),
    user research, analytics, and industry press.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Your competition also defines the state of your game''s genre, giving you a
    clear direction regarding your design. Once you have analyzed your competition,
    you can ask yourself questions such as:'
  prefs: []
  type: TYPE_NORMAL
- en: Is my game too similar to what's already out there?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How is it different?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Does it offer a better and novel experience to its target audience?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If I was a fan of my competitor's game, would I be interested in trying out
    this new game?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Answering these questions honestly will help you establish and test your USPs.
  prefs: []
  type: TYPE_NORMAL
- en: The ideation process
  prefs: []
  type: TYPE_NORMAL
- en: We have already explored defining and communicating game ideas to others through
    the game concept document, now let's pose a more fundamental question. How do
    we generate the game idea in the first place? How do we get to the point of having
    something to write down in the concept document?
  prefs: []
  type: TYPE_NORMAL
- en: Before we begin, let's make it clear that the game designer is not the ideas
    guy. It is not their job to have a constant flow of new game ideas. These can
    (and should) come from anyone in the company or even from people outside your
    organization. It's very common in our industry to have publishers commission a
    game idea to the developers, an owner of an intellectual property (IP) such as
    Star Wars or The Witcher to seek out licensing, or game studios themselves providing
    outsourcing services to other developers.
  prefs: []
  type: TYPE_NORMAL
- en: A game idea could be driven by market research, a game vision, or even, in a
    more artistic way, by the urge to say something or tell a story. What is really
    important for you as a game designer is to have what I like to call the designer
    mindset. The designer mindset allows you to process raw ideas analytically. You
    should be able to imagine a finished product being played by your audience. You
    will need to predict any major problems and issues, have a clear idea of the competition,
    and some intuition about possible USPs.
  prefs: []
  type: TYPE_NORMAL
- en: There are no shortcuts to developing this mindset; you have to play games and
    create them, to know what works and what doesn't, to keep a critical eye on everything
    you play and see. Ideally, you will strive to become a true expert in the genres
    you are more interested in (both as a designer and as a player), but to do so,
    you'll often need to explore all sorts of games. You might not be keen to play
    certain types of game, but you must still try and understand what makes them fun
    for their intended audience. A truly great designer will be able to point out
    good and bad design decisions in anything from a pony nurturing game to a horror
    shooter.
  prefs: []
  type: TYPE_NORMAL
- en: Every developer (not just game designers) dreams of working on their dream game,
    but as a professional who's trying to make a living, you will have to adapt your
    skills and career goals to what's required of you. Shift your expectations to
    the available opportunities and embrace the challenge of working on something
    that isn't your forte. Your job will rarely allow you to create a perfect representation
    of your dream game; until that time arrives, be resourceful and make the best
    possible game, treating your constraints as interesting problems rather than depressing
    limitations. Learn from your mistakes and do the best you can for the players
    and the team!
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: The designer mindset and the game designer profession are something you develop
    with experience and dedication. Like any other discipline, you will need to study
    and work hard.
  prefs: []
  type: TYPE_NORMAL
- en: Coming up with ideas
  prefs: []
  type: TYPE_NORMAL
- en: 'As we said, ideas can come from many different sources, so let''s try to recap
    them in a practical list of activities that can help you come up with interesting
    concepts for future new games:'
  prefs: []
  type: TYPE_NORMAL
- en: Play tons of video games, especially ones outside your favorite genres
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Watch movies, TV, and theatre, and read books
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Travel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Think how to turn your interests outside gaming into a game (bricolage, wine,
    fitness, art, music, traveling, and so on)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Analyze the market and think about unique games that are not quite there
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ask other people what they'd like to play that is not quite there
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deconstruct your favorite games, focusing on what would make them better
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Go to game jams where you'll have a very restricted amount of time to create
    a game around a given theme
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Give yourself a theme and try to make a game around that in a very short time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Learn the basics of a game engine and do some stuff! Anything: follow online
    tutorials, try to recreate some game mechanics, just mess around with example
    projects'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Twisting familiar mechanics
  prefs: []
  type: TYPE_NORMAL
- en: As a game developer, your goal will always be to create new interesting games,
    but as we can learn from other game developers' success stories, a successful
    game is always a mix of novelty and familiarity. If you think about most of the
    games available today, you can clearly see how each of them is an iteration of
    an older game or well know mechanics. Very few games are completely new and with
    never-seen-before core mechanics.
  prefs: []
  type: TYPE_NORMAL
- en: In fact, your role as a game designer is not to invent a completely new set
    of mechanics every time, but to pick a set that works well with the game you're
    making. Using existing mechanics, refining well-known concepts, and falling back
    on clichéd settings is totally fine (if you think about it, many multimillion
    dollars franchises do exactly that). Just make sure that you have a very clear
    goal of what you want to achieve and how the mechanics you picked are helping
    you deliver on your vision.
  prefs: []
  type: TYPE_NORMAL
- en: Don't be afraid, there will be plenty of space for innovation and creativity
    even working on proven mechanics. More importantly, there will be plenty of occasions
    to work on truly innovative games in your career. Just keep in mind that, as a
    professional game designer, your goal is to design compelling game experiences
    and not to do something new and different at all costs.
  prefs: []
  type: TYPE_NORMAL
- en: It must be clear at this point that everything that goes into the game concept
    will have a direct impact on how the game is going to be designed. This is why
    it is so important that it is defined as a first stage and must be kept in mind
    for the whole development process.
  prefs: []
  type: TYPE_NORMAL
- en: It must act as the ultimate reference, a guide to keep the vision clear and
    the project on track during the difficult and exciting times ahead when the proper
    development begins.
  prefs: []
  type: TYPE_NORMAL
- en: Creativity through constraints
  prefs: []
  type: TYPE_NORMAL
- en: 'The main risk of defining and refining a game concept when is in its ideation
    stage is to underestimate the project scope or the actual ability of the team
    to accomplish such effort. The fact that these limits exist is all good news though.
    Imagine having a blank canvas and being told to draw a beautiful painting, or
    having a blank page and having to write a short story. This is when artists experience
    artist''s block: the inability to produce any new work or let their creativity
    flow.'
  prefs: []
  type: TYPE_NORMAL
- en: Your blank canvas is your ideation space. The more constraints you can identify,
    the more that space will shrink, allowing you to focus on ideas that could actually
    work! The size of your team, the expertise on the platform, your budget, the available
    technology... They all help to inform what you can and cannot realistically do.
    Every design decision you will make will be somehow constrained. You have to embrace
    those limits and create something that works within them. Game design is problem-solving,
    which usually means compromising.
  prefs: []
  type: TYPE_NORMAL
- en: Finding the fun
  prefs: []
  type: TYPE_NORMAL
- en: What do you think about this?
  prefs: []
  type: TYPE_NORMAL
- en: A game where you play as an astronaut who watches Planet Earth being destroyed
    from a space station?
  prefs: []
  type: TYPE_NORMAL
- en: Or this?
  prefs: []
  type: TYPE_NORMAL
- en: An augmented reality game in which you use your phone to find clues and solve
    mysteries.
  prefs: []
  type: TYPE_NORMAL
- en: 'These may sound like good hooks for a game concept (if you think about that
    first one, that could be a hook for a book or a movie as well), but the most important
    thing when you are ideating your game is: How can this be fun? What do you do
    in that game? Is the space station game a survival adventure or a horror? Is it
    about managing resources or survival? Is it a space shooter? Think about the games
    you love, what makes them fun? And what is fun anyway? Is it the joy of learning
    and mastering new systems, of exploring and interacting with the virtual worlds,
    making interesting choices?'
  prefs: []
  type: TYPE_NORMAL
- en: We'll be exploring the connection between fun and game mechanics in further
    chapters while trying to avoid any unnecessary immersions in the theory. That
    said, it doesn't mean that you don't have to! There are entire books dedicated
    to the topic of fun. Raph Kostner's Theory of Fun and Nicole Lazarro's Four Keys
    to Fun are just two of many noteworthy examples.
  prefs: []
  type: TYPE_NORMAL
- en: Good designers are fluent with practical game design techniques and well informed
    in the theory. Excellent game designers are experts in both. Fun in games comes
    from the player experience, which is ultimately related to the core game mechanics.
    As you can imagine, if those core mechanics are not fun, no one will be interested
    in the game.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, you cannot wait until the game is finished to try it out and see
    whether it's fun... So how do you do it?
  prefs: []
  type: TYPE_NORMAL
- en: There's only one answer to this question, and it is by prototyping.
  prefs: []
  type: TYPE_NORMAL
- en: Prototyping
  prefs: []
  type: TYPE_NORMAL
- en: 'We will talk about prototyping in detail later; for now, let''s just get some
    basics:'
  prefs: []
  type: TYPE_NORMAL
- en: A prototype is an early sample, model, or release of a product built to test
    a concept.
  prefs: []
  type: TYPE_NORMAL
- en: Only 15 years ago, building a prototype for a video game concept or to just
    try out some mechanics was out of the question for most game developers. Today,
    with tools such as Unity and other accessible game engines, prototyping is extremely
    quick and efficient, and most importantly, not only a prerogative of games programmers.
  prefs: []
  type: TYPE_NORMAL
- en: Imagine that you want to make a 3D game where two armies clash in battle. Developing
    a playable demo of such a game, with 3D models of every soldier, the battleground,
    and the rules behind movement and fighting, is a massive amount of work.
  prefs: []
  type: TYPE_NORMAL
- en: And what if after everything is ready, you find out that the battle is not as
    fun as you thought it would be?
  prefs: []
  type: TYPE_NORMAL
- en: Prototyping means focusing on the essentials and answering particular gameplay
    questions. Once it is clear what we want to test out with a prototype—in this
    case, whether the battle mechanics are fun—we realize that we don't need fully
    rendered 3D models for soldiers and accurate terrain. We probably don't even need
    the soldiers.
  prefs: []
  type: TYPE_NORMAL
- en: By abstracting, we'll find out that we will just need some cubes moving on a
    flat plane. Setting up a plane and some cubes require 5 minutes of work in Unity.
    Clearly, the challenge would be to make them move and act as if they were soldiers
    on a battlefield, but since that's what we need to focus on, we can do just that.
    Eventually, you will find out that the concept of two armies fighting was too
    generic to have a meaningful or realistic prototype. You have to search for the
    fun at an even more abstract level. You have to ask yourself other questions.
    What kind of battle are you trying to represent? A medieval battle is very different
    from a battle between tanks in the Second World War.
  prefs: []
  type: TYPE_NORMAL
- en: If you're planning to show the prototype to a less imaginative audience, you
    might want to replace the abstract cubes and shapes with some basic models and
    images found on the internet. The likes of Unity Asset Store can be a great source
    of effective prototyping assets! Just make sure that the audience realizes that
    you're not trying to represent the final look of the game.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Iteration
  prefs: []
  type: TYPE_NORMAL
- en: While prototyping, you essentially iterate on the concept, stripping it down
    to its core.
  prefs: []
  type: TYPE_NORMAL
- en: For example, you may find out that the essence of the game you're trying to
    make can be described as your unit charging the enemy in a medieval battle. That's
    your next direction for prototyping, just focus on the charge element, on the
    enemy's reaction. They can flee if you're charging from one side, or react by
    firing arrows or standing their ground if you're charging from the front.
  prefs: []
  type: TYPE_NORMAL
- en: All you will see on your screen is going to be just colored cubes chasing each
    other. But that's already a great start. The sooner you have something playable,
    the sooner your vision will become more tangible and you will have real feedback
    not only on its playability but also on its feasibility.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, there's no need to prototype something that's already been proven.
    There's no point in prototyping running and jumping for a 2D platformer if you
    already have a strong reference to them. Your prototypes should focus on the USP!
    For example, the portal gun and its mechanics in Portal are more important to
    prototype than the behavior of the automated turrets.
  prefs: []
  type: TYPE_NORMAL
- en: Defining the fantasy
  prefs: []
  type: TYPE_NORMAL
- en: The common association in the part of the word fantasy is with a fictional world
    populated by magic and fantastic creatures. Let's leave that idea of fantasy behind
    for now. By fantasy here, we mean the activity of imagining things, not necessarily
    things that cannot happen in our real world. You can fantasize about being a doctor,
    an athlete, or a gangster. That's what we mean by fantasy. Defining the fantasy
    means establishing the imaginary settings and environments for the game world
    and the actions the player is able to use in it.
  prefs: []
  type: TYPE_NORMAL
- en: The fantasy is not something that needs to be explicitly stated in the game
    concept, as it emerges from how the game is designed around the initial vision.
  prefs: []
  type: TYPE_NORMAL
- en: In the example we made previously in the Prototyping section, we were creating
    a strategy battle game set in a medieval past. Through iterations, we strip the
    game to its core, imagining the fun of issuing orders to our units, commanding
    a charge through enemy lines.
  prefs: []
  type: TYPE_NORMAL
- en: What we did there is come up with a fantasy. The fantasy of being a general
    ordering troops to charge into battle and conquer enemies. Note how the genre
    influences the fantasy. A strategy game with many different troops to command
    implies the player is the strategist, therefore the fantasy is being a general
    of a medieval army.
  prefs: []
  type: TYPE_NORMAL
- en: If the concept (and the prototype) was about a first-person action game where
    you command a Knight during a charge on the enemy lines, we would have a completely
    different fantasy (the player being the heroic knight leading the charge). Different
    fantasy, same setting (and same battle).
  prefs: []
  type: TYPE_NORMAL
- en: 'Other common fantasies in games include being a hero through his journey to
    save someone (from Super Mario to Legend of Zelda) or controlling a team in a
    specific sport. Again, a fantasy always suggests a genre, but it describes something
    more telling: a bigger story about the player''s actions. Clearly, defining a
    fantasy means setting up more guidelines that will drive the entire development
    and any design decision down the line.'
  prefs: []
  type: TYPE_NORMAL
- en: Creating the fantasy through game mechanics
  prefs: []
  type: TYPE_NORMAL
- en: Let's go back to the charging knight example we just made. You want that charge
    to be spectacular, tense, and ultimately satisfying for the player; that means
    designing the enemy reaction and behavior (and even the game physics) in a way
    that is meaningful for that fantasy. Imagine if the combat system doesn't include
    any physics and the Knight simply stops in front of his target after the charge
    and begins a static fight where both he and his enemy just swing their weapons
    until one is defeated. Wouldn't it be so much better if the momentum built by
    the charge sends the enemy through the air and the Knight continues advancing
    until the momentum is gone (and many enemies have been knocked out). Creating
    such a game requires the design of the core mechanics to be built around a very
    specific fantasy.
  prefs: []
  type: TYPE_NORMAL
- en: The mood, or "how the game looks and feels"
  prefs: []
  type: TYPE_NORMAL
- en: Part of the identity of any video game is how it looks on screen and how the
    combination of its mechanics, visual, and audio creates an aesthetic of the game.
    This combination evokes an emotional response from the player and defines the
    mood of a game.
  prefs: []
  type: TYPE_NORMAL
- en: The mood is very much part of the design like any other element, as important
    as gameplay or story. Games such as Limbo and Journey are essentially designed
    around a mood, with the specific intention of evoking certain emotions in the
    player as a central part of the experience.
  prefs: []
  type: TYPE_NORMAL
- en: Usually, it's not the game designer's job to define the mood of a game, but
    as we have seen, the mood influences the design and vice versa, so it is always
    an ongoing conversation within the team. Artists create amazing content that can
    define the mood and the soul of any game and sometimes it's the designer's responsibility
    to put it together. He might be the first one to actually see it "in-game." Keeping
    in touch with the art team is crucial to the final quality of the game; designing
    new content that the art team will have to create is not unidirectional. Make
    sure to get as much input as you can from the art team about any work they will
    have to do based on your design!
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`Exercise`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`It is time to go through the document you have written, taking into account everything we have been saying. If you chose to create a concept for your own game idea, try to write a new one for an existing one, and vice versa. Try to have someone else read your game concept and give you some feedback. Did they understand the game? Did they get the vision you had in mind while writing? Discuss your results online or with other designers or developers. ``Don''t be afraid of sharing your ideas``. Yes, there might be a chance that someone will steal them. But there is a far greater chance that someone will like them, and might even hire you for them!`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Summary
  prefs: []
  type: TYPE_NORMAL
- en: We have learned some basics about how to conceptualize a game idea and present
    it to other people, as well as understanding the importance of early prototyping
    and iterations.
  prefs: []
  type: TYPE_NORMAL
- en: We have discussed how having a game idea is only the tip of the iceberg and
    how the role of the game designer is to communicate ideas that might come from
    anyone inside or outside the team.
  prefs: []
  type: TYPE_NORMAL
- en: We clarified the importance of marketing your game from the very beginning and
    finding the correct audience for what is, above all, a product that has to be
    sold (even if it's free).
  prefs: []
  type: TYPE_NORMAL
- en: We had a glance at some practical techniques game designers use to develop and
    create games, which we will explore in more depth in the next chapters.
  prefs: []
  type: TYPE_NORMAL
- en: We also made some paperwork. The time you have put into creating a sample concept
    document is time well spent, I guarantee you that. Learning game design is about
    getting hands-on experience, and there's a lot you can do only with a text file
    or even just pen and paper. Keep doing it. I hope you are able to go back to all
    your homework some day and meditate on how far you have come.
  prefs: []
  type: TYPE_NORMAL
- en: In [`Chapter 3`](index_split_070.html#filepos210445), Scoping a Game Project,
    we're going to discuss the importance of understanding the size of a game project,
    how the scope determines the constraints you will have to consider in your design
    decisions and that you will have to respect if you want to complete your game.
  prefs: []
  type: TYPE_NORMAL
