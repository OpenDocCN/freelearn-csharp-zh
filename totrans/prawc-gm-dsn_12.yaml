- en: Accessibility
  prefs: []
  type: TYPE_NORMAL
- en: In the previous chapter, we learned about the User Experience and the best practices
    in User Interface design. We'll now learn how to make these, and any other parts
    of the game, more accessible; that is, easier to use, understand, and relate to.
  prefs: []
  type: TYPE_NORMAL
- en: To begin with, we need to find ways to create a steady and frictionless introduction
    to the game world and the rules governing it. We then have to ensure that the
    game can provide a highly playable experience to players that are less experienced,
    skilled, or capable (be it cognitively or physically).
  prefs: []
  type: TYPE_NORMAL
- en: Last but not least, even the best games often start in a bad place, and there's
    no better way to find things to improve than to test our games on potential players.
    We'll spend the final half of the chapter on the art of usability testing, and
    arm you with the expertise required to plan and execute your very own playtesting
    sessions!
  prefs: []
  type: TYPE_NORMAL
- en: Increasing accessibility
  prefs: []
  type: TYPE_NORMAL
- en: When thinking of making our games more accessible, we often narrow our focus
    to the overall pacing and difficulty of the in-game challenges. While balancing
    itself is important enough to warrant a whole chapter (and we've done just that
    in this book), we first need to identify the ways in which we can make the core
    of our product fundamentally more approachable.
  prefs: []
  type: TYPE_NORMAL
- en: Reducing cognitive load
  prefs: []
  type: TYPE_NORMAL
- en: Games that require good memory, observational skills, abstract thinking, planning,
    and fact association are all at risk of being very cognitively demanding.
  prefs: []
  type: TYPE_NORMAL
- en: High-level games of chess immediately come to mind as an example of a difficult
    mental challenge. And yet, the base rules and mechanics of chess can be understood
    and memorized by young children, making chess an accessible game.
  prefs: []
  type: TYPE_NORMAL
- en: Complex and mentally demanding games only become inaccessible if the player
    is stuck or struggles to learn the rules and improve. To make the game more accessible
    in this department, try the following.
  prefs: []
  type: TYPE_NORMAL
- en: Avoiding mental challenges with binary outcomes
  prefs: []
  type: TYPE_NORMAL
- en: Adventure games in the 1990s were full of abstract puzzles that provided a binary
    mental challenge—you either got the solution, or you were left to struggle on
    your own. Players would often end up scouring the game world, scanning every single
    screen, and trying every possible item combination. Nowadays, a game with that
    degree of friction will likely frustrate the player to a point of quitting. When
    possible, avoid mandatory puzzles with binary win/lose conditions, or make sure
    to include a passive or active hint system.
  prefs: []
  type: TYPE_NORMAL
- en: If you are looking for inspiration, try the games in the Professor Layton series,
    where hundreds of clever (and often very difficult) puzzles are paired with a
    well-implemented hint system. In most cases, a puzzle has three hints that can
    be purchased for one Hint Coin each, and a fourth Super Hint (solution) that can
    be bought for two Hint Coins. Hint Coins themselves are a limited resource that
    are awarded for exploring and interacting with the environment (tapping on mailboxes,
    plant pots, cats, and so on). Players have to work hard to find the hints, which
    means that using them doesn't feel like cheating.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Limiting initial complexity and interplay between rules
  prefs: []
  type: TYPE_NORMAL
- en: Products that have elaborate rulesets and multi-layered mechanics often require
    a huge amount of practice on behalf of the players.
  prefs: []
  type: TYPE_NORMAL
- en: As game creators, we often have the desire to design elegant systems where multiple
    elements affect one another in discrete ways. It's a great ambition to have, but
    one that can lead us to make an overwhelming experience.
  prefs: []
  type: TYPE_NORMAL
- en: A new mechanic or rule should only enter the stage once the previous one has
    been fully explored and understood. There's no harm in removing or limiting certain
    aspects of the game for the purpose of teaching the player. For example, don't
    ask the players to build a deck of cards before they have a chance to play them,
    and do not introduce the pressure of maintaining limited time/turns/health/ammo/resources
    until they are really required.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll dedicate more time to the subject of introducing and explaining game mechanics
    later in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Lowering the knowledge cliffs
  prefs: []
  type: TYPE_NORMAL
- en: A great example of a knowledge cliff can be found in many multiplayer arena
    games like League of Legends and DOTA 2\. Both titles feature dozens of items
    and hundreds of characters (each with multiple, complex abilities) that players
    need to understand and memorize. With numbers this high, the knowledge cliff would
    be significant even if the only variables were simple attribute changes. As it
    stands, these characters and items are also full of new mechanics—a perfect storm
    of overwhelming quantity and complexity! No wonder they are some of the least
    accessible games on the market.
  prefs: []
  type: TYPE_NORMAL
- en: In this situation, limiting the content is the easiest solution. This is why
    Valve has reduced the number of playable heroes in the first 25 games of DOTA
    2 from over 110 to just 20, with new players only able to play against one another.
    They've also introduced a new Turbo mode, which decreases death penalties, changes
    the pacing, and removes some of the restrictive rules on buying items. Even with
    all of these changes, there's still a long way to go, as DOTA 2 remains to be
    one of the hardest and most punishing games to pick up for newcomers.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, games like LoL and DOTA are exceptions that managed to survive and
    reach critical mass without good onboarding, on top of a hugely dedicated player
    base. The very same strategy can and most likely will sink most other games.
  prefs: []
  type: TYPE_NORMAL
- en: Limiting the complexity of interaction
  prefs: []
  type: TYPE_NORMAL
- en: We've already covered input methods and controls at length in [`Chapter 11`](index_split_313.html#filepos716889),
    User Interface and User Experience. Enabling full control remapping and reducing
    input complexity goes a long way in increasing accessibility, while rarely leaving
    a negative impact on the game mechanics.
  prefs: []
  type: TYPE_NORMAL
- en: We can do better though! Can you imagine a way to make your game playable with
    only one hand? How about one finger? The outlandish one-finger restriction is
    often an essential requirement for mobile game controls. After all, the second
    hand may be clinging to a coffee cup or a bus handrail. Certainly, not all games
    can cater to such requirements, but trying to accommodate to them while maintaining
    playability for the target audience is a goal we should all aspire towards, for
    the sake of all players.
  prefs: []
  type: TYPE_NORMAL
- en: There are often ways in which you can easily bypass the necessity of multiple
    simultaneous inputs. For example, in first person shooters, aiming down sights,
    sprinting and crouching can all be toggle actions (press to turn ON/OFF), instead
    of requiring a key or button to be constantly held down.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Even if your controls are simple, executing them quickly and accurately can
    be overly challenging. Difficult execution is likely to be a problem in any real-time
    game, from quick pattern matching in Guitar Hero to the expert hand-eye coordination
    and reflexes needed to play Counter-Strike. Make sure to provide a set of slower
    paced, less punishing challenges for the inexperienced and less capable players.
    This can be done via difficulty settings, rule adaptations, and multiplayer matchmaking.
    We'll look into ways of adjusting difficulty in [`Chapter 13`](index_split_398.html#filepos890374),
    Balancing.
  prefs: []
  type: TYPE_NORMAL
- en: Maintaining visual clarity
  prefs: []
  type: TYPE_NORMAL
- en: 'If players cannot easily distinguish, read, and understand the state of the
    game and contents of the screen, they won''t be able to interact with the game
    effectively. Consider the following tips to improve the visual clarity in your
    games:'
  prefs: []
  type: TYPE_NORMAL
- en: Hide or de-prioritize any unnecessary information in the user interface.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Separate the enemies and interactive objects from the background. Be it via
    shapes, outlines, color palettes, or materials and shaders.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use clear and uniform visual language in your level design. For example, in
    Tomb Raider, any climbable wall is covered in white paint.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do not obscure critical information (player position, threats) with overwhelming
    and long-lasting visual effects.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualize the state of the game. Use text, icons, and symbols to clearly indicate
    the state of game-actors. For example, health bars, damage numbers, status symbols,
    and so on. Adhere to the principles of good game feedback highlighted in the previous
    chapter.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cater to color-blind people, which comprise 10% of your male playerbase. Provide
    menu options to swap the colors of important elements such as map and target markers,
    health bars, and so on, and utilize different shapes to distinguish between various
    parts of the user interface. For example, UI markers could be circular for friendlies
    and triangular for hostiles.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Making audio optional
  prefs: []
  type: TYPE_NORMAL
- en: 'Unless your game revolves around audio design, be it spoken lines of dialogue
    (for example, Thomas Was Alone, Stanley''s Parable), music (Guitar Hero, Rock
    Band, Audiosurf) or sound cues (for example, footsteps and shots fired in Counter-Strike
    and Rainbow Six: Siege), you should avoid relying on audio cues. On top of isolating
    hearing-impaired players, you''re also disadvancing people who play with low or
    muted sound. The probability of the latter is extremely high in the mobile and
    portable game market.'
  prefs: []
  type: TYPE_NORMAL
- en: As for supporting hearing-impaired players, on top of integrating subtitles,
    you should also consider putting in options to enable closed-captions (textual
    descriptions of sound effects). For example, door creaks or loud explosion.
  prefs: []
  type: TYPE_NORMAL
- en: Restricting negative consequences
  prefs: []
  type: TYPE_NORMAL
- en: Respawning at checkpoints, replaying stages, equipment and character removal,
    and last but not least, the states of permanent failure (aka permadeath); these
    are some of the most common examples of negative consequences.
  prefs: []
  type: TYPE_NORMAL
- en: In most cases, taking away a player's progress is a surefire way of making your
    game less accessible. It's especially true if you pair it with technical issues,
    failure to teach game systems, and a lack of anticipation and clear feedback.
    The last thing you want is to leave your audience unaware of the negative consequences
    and ill-prepared to handle them.
  prefs: []
  type: TYPE_NORMAL
- en: Don't get me wrong, failure can be good and motivating, and we obviously want
    our players to be challenged. But while it's great to have our audience learn
    from their mistakes, learning through failure is our last line of defense, and
    the most frustrating way to teach the player.
  prefs: []
  type: TYPE_NORMAL
- en: I am not advocating against the use of progress-loss as a consequence, in fact,
    some of my favorite games are incredibly punishing. However, it's important to
    recognize the negative effects on accessibility, which are brought by progress
    removal and permanent fail-states. These mechanics are simply not for everyone,
    and unless they make up the fabric of your game, consider making them optional.
  prefs: []
  type: TYPE_NORMAL
- en: Building on common knowledge
  prefs: []
  type: TYPE_NORMAL
- en: Anchoring your game to another popular product can be handy, but creating a
    strong reference to the world outside of video games can be even more helpful.
    This includes popular culture, history, sports, traditions, activities, hobbies,
    and even the physical properties of the world around us.
  prefs: []
  type: TYPE_NORMAL
- en: Ice is slippery, wood catches fire, diamonds are expensive, and Rocket League
    is kind of like soccer played with cars. The easier it is to draw a parallel between
    the game world and real world, the less knowledge you'll need to put into player's
    heads yourself. That said, while removing rules is fine, breaking them in unexpected
    places can make things very confusing. For example, it's okay if your character
    doesn't need food to survive, but it's not wise to create a wooden sword that
    lasts longer than a steel one.
  prefs: []
  type: TYPE_NORMAL
- en: Teaching game systems
  prefs: []
  type: TYPE_NORMAL
- en: Teaching and introducing new rules and mechanics is often as difficult as creating
    them. The first step is, as always, to acknowledge and respect the differing tastes
    and preferences of your audience, not only towards certain types of games but
    also the ways in which they like to learn and tackle challenges. You also have
    to prepare for different levels of exposure to similar games and relatable life
    experiences.
  prefs: []
  type: TYPE_NORMAL
- en: We all have our preferred learning style, and even though researchers are having
    a hard time settling on a particular definition and categorization, they all seem
    to agree that each individual is primed towards a particular set of learning techniques.
    Some people like to listen, some prefer to read, and others still skip all text
    and try to figure things out by following visual cues.
  prefs: []
  type: TYPE_NORMAL
- en: A highly successful strategy is to mix several teaching methods into a combination
    that works well within the confines of the story, game structure, target platform,
    and audience.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, written information, videos, and scripted gameplay are all valid educational
    tools, but games are an interactive medium, and the most pleasant and effective
    way of teaching our players is through play itself. The need for tutorial elements
    can be greatly reduced by providing players with immediate goal clarity, clear
    feedback from gameplay and interface interactions, and the gradual introduction
    of new elements. An elegant and clearly presented mechanic has a chance of explaining
    itself in action.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: In-game teaching techniques
  prefs: []
  type: TYPE_NORMAL
- en: 'There are times when explaining complex game systems to players with little
    prior experience may be impossible without the strict guidance of carefully crafted
    tutorials. These direct teaching techniques include some of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Beginner''s training: Scripted and ring-fenced tutorials at the beginning of
    the game may run the risk of being perceived as unnecessary or frustrating, but
    they are still a highly effective tool. For one, you have the full control of
    the game state and the level design and are clear to withhold any progress until
    all instructions are followed and tasks accomplished. A skilled and experienced
    player should be able to complete your tutorials quickly; make sure to remove
    any unnecessary pauses and keep the long demonstrations and speeches for those
    who really need them. There''s nothing more frustrating than being locked away
    from your controls while a drill sergeant takes 20 seconds to tell you how to
    reload and pull the trigger.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Context-sensitive tutorials: Well crafted tutorials appear where and when you
    need them. Try dividing your tutorial content into smaller chunks and implement
    a set of simple rules and conditions to gauge when and if to launch them. For
    example, in Transformers: Earth Wars, the tutorial for our item fusion mechanic
    requires that the player has at least eight unequipped items and none of them
    are level 2\. This means that the player did not figure out the feature by themselves,
    yet they have enough spare items to easily afford it. While it may be easy to
    preemptively summon a friendly tutorial fairy whenever something new appears,
    it is a much finer art to recognize the stress points in your game and anticipate
    a good moment to address them. Launching the right tutorial at the right time
    is the secret to a receptive and grateful player.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Optional training segments: Side-quests, practice missions, and glowing learn
    more buttons next to newly acquired tools. These are some of the ways in which
    you can inject knowledge without affecting the main storyline. After all, advanced
    players should not be forced to learn things they already know, and should be
    given a way to skip past this content safely without losing out. But what happens
    if they skip by mistake? What if players suffer later because they were simply
    impatient or misunderstood what they were about to learn? These concerns are valid
    and can be addressed with a set of fail-safes. Optional training elements should
    be crystal clear on what they entail (in other words, make sure to expose your
    curriculum) and accessible later on when players decide they need them.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'On the other end of the spectrum, we have indirect teaching techniques, which
    are either less invasive or naturally intertwined with the fabric of the game:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Leaving information in the environment: Sometimes the state of the environment
    can provide you with all the clues you need. Back in the previous chapters, we
    spoke of environmental storytelling; in the case of Dead Space, the writings on
    the wall played a role in teaching the players how to battle the undead. Less
    obvious clues require more attention to detail and may turn the teaching into
    a puzzle-solving exercise. Who said that tutorial sections can''t be turned into
    enjoyable obstacles to overcome? As you venture deep into the creepy woods, you
    encounter metal traps, some of them with their jaws clasped on long forgotten
    skeletons. There''s also a few disabled traps with rocks (which you can pick up)
    next to them. Soon after, an unsprung trap is blocking your way and a rock lays
    right in front of you. The connection soon becomes obvious.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Teaching by example: Companion characters (such as Alyx in Half-Life 2) do
    not need to talk to the player to pass on knowledge. As you shoot and bash your
    way through alien-infested Earth, you observe and copy the skills and behavior
    of your partner. Should the players have no friendly characters to rely on, they
    can always follow the footsteps of their enemies. If you see an enemy character
    (or player) perform a rocket-jump, it won''t take you long to try one yourself!'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Reinforcement: Since the dawn of time, positive reinforcement is one of the
    most effective ways to direct human behavior. Players who are rewarded for certain
    actions with praise, resources, or sheer satisfaction will continue on the path
    that leads to continued and escalating reward. Investing time and effort into
    learning new game systems should come with clear rewards and be presented as an
    opportunity to gain an edge in the future.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Accessible information: Glowing learn more buttons, mouse-over tooltips, control
    hints, and text labels on buttons are just a few examples of supplying players
    with information that''s either out in the open, or easily accessible at their
    convenience. These tools alone may not be enough to teach players about complex
    game systems and interactions, but they certainly make the game easier to figure
    out.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Failure: Teaching solely by trial and error is a certain way of making your
    players frustrated and the game seem unfair. Nevertheless, it''s important to
    acknowledge the simple yet powerful message that a punishment can hold. If players
    are losing, the least you can do is explain why and how they''ve failed and what
    they can do to improve. Be it by showing a so-called kill-cam in a multiplayer
    shooter, or by explaining the works of the trap, enemy, or game mechanic responsible
    for the fail-state.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Teaching outside gameplay
  prefs: []
  type: TYPE_NORMAL
- en: 'A lot of detailed and nuanced information can be exposed outside of the main
    gameplay experience. However, while these techniques are great at covering specialist
    knowledge or diving deep into the stats and non-crucial mechanics, they should
    be used as a secondary source of information—something that cannot be relied upon
    or expected from players. In this category we can place:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Loading tips: Loading screens are a great place for tips and hints that are
    not critical to player''s progression. Button shortcuts, advanced or obscure mechanics,
    equipment highlights, and repetition of important information are all valid choices.
    You can also use this space to place a quick story reminder, a synopsis of the
    current act/mission or the backstory of various characters and locations. When
    working on a loading tips system, it''s best to ensure it takes player''s state
    into account. This way, a seasoned player who''s just about to face the last boss
    won''t be patronized by an unnecessary tip on how to jump, nor will a beginner
    face info about advanced end-game combos.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Training cutscenes and videos: Nowadays, many complex games that are still
    undergoing heavy development rely on narrated video tutorials on platforms like
    YouTube. This is a good way to transfer knowledge to a dedicated fanbase, but
    it cannot be depended upon for the final product. If you ever end up creating
    external video content, make sure to link to it or embed it in your game. In-game
    cutscenes are a much more dependable way of teaching your players, but they tend
    to be much more expensive and should not be invested in early.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Game manuals and guides: The paper manuals and guides are largely a thing of
    the past, and not many users ever seek out the digital versions. Unless you''re
    required to make a manual by the platform holder or are preparing a deluxe printed
    edition, you should skip this effort and channel it right into the in-game teaching.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In-game knowledge banks: Player journals, PDA''s, encyclopedias, and databases
    are a great way to store easily accessible information. A great example of such
    a system would be the Codex in the Mass Effect series—a place chock full of story
    content, character bios, backstory, in-game technology, and of course, our beloved
    tutorials.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'External wikis: Official and unofficial knowledge databases (wikis) let highly
    engaged users dive deep into nuances of your game. Such wikis are chuck-full of
    detailed unit and equipment stats, patch notes, gameplay hints and walkthroughs.
    You may not want to invest time into creating an official wiki (especially for
    a single-player, story-driven game), but no matter what you do, make sure to support
    the community if they choose to create a knowledge database of their own. As for
    competitive multiplayer titles, up-to-date wikis can be a pillar of a healthy
    community.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Peer-to-peer knowledge sharing: The power of engaged fan-base is truly something
    to behold. Complex and poorly explained games such as League of Legends and DOTA
    2 owe a lot of their success to the willingness of their community to on-board
    and teach one another. Outside of friend lists, guilds, and alliances, you can
    encourage mentoring behavior by introducing referral programs that depend on the
    referred player''s progress, as well as supporting replay sharing, spectator modes,
    and a chat system that functions across the whole game.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Best practices
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we've assembled a set of tips and guidelines that can help
    make your onboarding experiences more focused, organized, and effective.
  prefs: []
  type: TYPE_NORMAL
- en: Don't kill (with) the messenger
  prefs: []
  type: TYPE_NORMAL
- en: Our attempts at teaching the player are at constant risk of making them either
    bored or overwhelmed. If possible, your tutorial sections should blend in seamlessly
    with the rest of the game. Longwinded training missions and practice rounds all
    run a risk of tiring (when does this end?) and even patronizing your audience
    (I know this already!). The latter was especially true when it came to Clippy,
    the paperclip from the old Microsoft Office. The obnoxious, intrusive, and seemingly
    clueless nature of Clippy became a running joke. Yet, similar training became
    much more approachable when delivered by an adorable yellow puppy. The tutor,
    the method, and the ability to skip ahead all play a role in making a less polarizing
    experience.
  prefs: []
  type: TYPE_NORMAL
- en: Understand the effects of the training mode
  prefs: []
  type: TYPE_NORMAL
- en: By playing games, we enter safe simulations in which we can learn about the
    world without any real consequences. Therefore, marking a part of any game as
    training is equal to creating a safe simulation within the safe simulation. So
    in spite of learning throughout the entire gameplay experience, many players regard
    in-game training segments as a waste of time, and eagerly anticipate the beginning
    of the real game. If you find yourself relying on such segment, make sure that
    parts of it are skippable and clearly marked as optional.
  prefs: []
  type: TYPE_NORMAL
- en: You can also turn certain tutorial sections and functionalities ON or OFF based
    on the difficulty setting selected by the player. If someone is playing a shooter
    on a nightmare difficulty setting they most likely don't have to be told how to
    move and look around.
  prefs: []
  type: TYPE_NORMAL
- en: Focus your efforts on innovative and obscure
  prefs: []
  type: TYPE_NORMAL
- en: Your teaching strategy should take into account not only the complexity of the
    game but also the amount of innovation. Focus first on the experimental parts
    of the game, knowing that the more familiar mechanics have already been successfully
    taught before (and therefore a solid reference for teaching them can probably
    be found and adapted).
  prefs: []
  type: TYPE_NORMAL
- en: Following that, look out for parts of your game that may not get in the way
    of immediate progress, yet run the risk of having a long-term effect. For example,
    players may not realize the importance of particular resources and throw them
    away, only to realize 30 hours later that by doing so they're now lacking the
    necessary materials to upgrade their equipment.
  prefs: []
  type: TYPE_NORMAL
- en: Pick the right moment to work on tutorials
  prefs: []
  type: TYPE_NORMAL
- en: You'd ideally want the core game mechanics to be as close to final as possible
    before spending significant time and effort on polishing your onboarding experience
    and tutorials. Early on, the tutorial budget is better spent on in-game text and
    visual feedback. In the short term, recording a tutorial video or explaining the
    game in person are also valid approaches. Once you start exposing your game to
    more people and enter external testing, you'll likely have the basics more or
    less set in stone, making the time spent on tutorials time well spent.
  prefs: []
  type: TYPE_NORMAL
- en: Make a tutorial plan
  prefs: []
  type: TYPE_NORMAL
- en: Approaching tutorial creation can be a daunting task. To make things easier,
    you'll need to formulate a plan. If you have a content lifespan document or a
    player progression flow at hand (both mentioned in [`Chapter 3`](index_split_070.html#filepos210445),
    Scoping a Game Project), use them as a basis. Otherwise, make a basic timeline
    of the player's progression and a separate list of important game mechanics.
  prefs: []
  type: TYPE_NORMAL
- en: Now, try to match both lists and note the teaching techniques you could use.
    Ensure that you do not overwhelm the player with too many unrelated concepts at
    once. At this stage, you may find out that parts of the game or its level design
    need to be changed or swapped around to make things fit better. This is a big
    part of the reason why the beginning areas of the game should be postponed until
    the base mechanics and the lion's share of the content are finished.
  prefs: []
  type: TYPE_NORMAL
- en: Try a 3 step process
  prefs: []
  type: TYPE_NORMAL
- en: 'When dealing with guided tutorials that require active participation from the
    players, it helps to break them down into three steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Context: Tell the players what they are doing and why. For example, Use your
    attacks to knock the other contestants out of the arena!'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Interaction: Guide the players through the execution phase, if possible, more
    than once and with escalating difficulty. For example, Press X to attack the skeleton...
    <skeleton defeated> "Great! But... it looks like there''s more coming! Get ready!".'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Summary: Solidify the knowledge and highlight the future use of the mechanic,
    be it with text, images or aspirational goals. For example, Try to unlock new
    skills and find new gadgets to see what they do!. The summary is also a good place
    to make immediate use of everything that the player''s learned so far in a real,
    unguided scenario.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Test and iterate
  prefs: []
  type: TYPE_NORMAL
- en: No tutorial you create will ever be perfect. As with game mechanics, you have
    to start somewhere and iron the quirks as you go. If you're struggling to choose
    between a few different approaches and have access to a big enough pool of test
    candidates, it's often best to take the extra time to try them all simultaneously
    on different segments of the player base, then pick the best.
  prefs: []
  type: TYPE_NORMAL
- en: Some things are best left unexplained
  prefs: []
  type: TYPE_NORMAL
- en: We spoke at length about how to explain the complexities of your game to the
    average player, yet, we need to acknowledge that some games are at their best
    when players try to figure them out entirely by themselves. Deep, innovative game
    systems can often be much more interesting if left as a puzzle, and discovering
    how things work can be a crucial part of the experience. There is also a segment
    of the population, however small, for whom a certain level of inaccessibility
    is a big draw. They feel pride in mastering an infamously difficult game, at being
    in the tiny minority of people who get it. This looks like a very niche approach
    to game design, one that is rarely fitting in the commercial market, yet it deserves
    to be recognized.
  prefs: []
  type: TYPE_NORMAL
- en: No matter how casual your game is, a degree of mystery and secrecy (a locked
    door, a seemingly unreachable collectible) can go a long way in driving your players
    and creating a truly special experience for those who figure things out. Most
    Super Mario Brothers games are very accessible, yet packed full of secrets and
    optional areas that require extensive thinking and planning to reach.
  prefs: []
  type: TYPE_NORMAL
- en: 'A good example of a full game following the mystery and mastery paradigm is
    The Witness, a puzzle game set on an abandoned island, with no tutorial and no
    guidance except for a few pictographs. The only three elements that make the game
    work (and work brilliantly well) are:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Positive reinforcement when puzzles are being solved: Things on the island
    activating, lights turning ON, and so on'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Logic: The puzzles make sense and can be figured out without the need for speech'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Level design and environmental art: The sprawling vistas, different art themes,
    architecture, and objects (such as closed doors) are crafted in a way that reinforces
    our natural curiosity'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Localization
  prefs: []
  type: TYPE_NORMAL
- en: The term localization was introduced back in [`Chapter 11`](index_split_313.html#filepos716889),
    User Interface and User Experience, when we spoke about putting text labels under
    your UI elements and ensuring they do not break when translated into different
    languages.
  prefs: []
  type: TYPE_NORMAL
- en: In the western markets, the long-dominant practice, and often a requirement
    posed by the publisher, was to support the EFIGS language group (English, French,
    Italian, German, and Spanish). Recently, in the more globalized era of digital
    distribution, the western publishers often find themselves expanding the default
    group, with Japanese, Korean, Chinese, Russian, and Brazilian Portuguese being
    the most common additions. The inclusion of new alphabets and directions of text
    flow is something that can pose big UI challenges for those who are unprepared.
  prefs: []
  type: TYPE_NORMAL
- en: Language aside, localization goes above and beyond swapping texts and voiceovers.
    New markets unlock access to new audiences with different expectations, spending
    behaviors, pop-culture references, traditions, and cultural sensitivities. Your
    ultimate goal is to give your players a game that feels like it’s made with them
    in mind.
  prefs: []
  type: TYPE_NORMAL
- en: The best way to approach this is to work with an informed native who can shed
    light on these differences. Otherwise, a great deal of knowledge can be amassed
    by observing successful game companies in the sector, looking into local laws
    that apply to games, and studying the socio-economical situation of your new market.
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples of localization efforts include:'
  prefs: []
  type: TYPE_NORMAL
- en: Multi-language websites, forums, and customer support channels.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tailor-made marketing art and sales messaging.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A more inclusive character line-up that respectfully represents different races,
    nationalities, genders, and even sexual preferences.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Replacement or removal of religious and political symbology.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reducing or replacing gore and blood—often a publishing requirement in Germany.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Different pricing models and/or payment methods. For example, SMS payments are
    a very popular way of paying for digital goods in India.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition of new characters that appeal to historical or pop-culture references.
    For example, the Monkey King in China.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Country-specific leaderboards.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Localized events and messaging country-specific holidays
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To put things into practice, the localized store pages for Transformers Earth
    Wars not only feature fully translated videos, text, and screenshots but also
    (in some territories) a completely different set of promotional assets. The first
    screenshot in the English listing features Optimus Prime. On the other hand, the
    Japanese version highlights the presence of two regional characters that starred
    in the Japanese comics and cartoons:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00159.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Playtesting
  prefs: []
  type: TYPE_NORMAL
- en: You're likely to have encountered the term playtesting before, be it in this
    very book or elsewhere. In short, playtesting is the process in which you expose
    your game to the members of your target audience in order to uncover issues and
    design flaws, and gather actionable feedback that can help improve the game.
  prefs: []
  type: TYPE_NORMAL
- en: However, there's more to playtesting than simply having people play your game
    and tell you what they think. Varying circumstances ask for different methodologies,
    and knowing how to apply them is essential in obtaining and analyzing results.
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ll now arm you with practical expertise that should help you decide on:'
  prefs: []
  type: TYPE_NORMAL
- en: Which parts of the game to test and when?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who should participate?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to run a playtest session?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to gather and analyze feedback?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What to playtest?
  prefs: []
  type: TYPE_NORMAL
- en: 'Anything that cannot be verified within the confines of your development team
    is a potential playtesting candidate. A well prepared playtest will be confined
    to a particular set of questions that your team wants to answer, for example:'
  prefs: []
  type: TYPE_NORMAL
- en: Are the controls easy to understand and use?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do players like and care about their character?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is this area/mechanic/enemy/puzzle too difficult or too easy?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Are people motivated to keep on playing?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Such questions and hypothesis are often a part of the production milestone and
    determine whether the game should continue as is, change its course, or even get
    canceled.
  prefs: []
  type: TYPE_NORMAL
- en: Testing the whole game without focus is rarely a good idea. The broader the
    spectrum of feedback, the harder it becomes to capture trends and eliminate outlying
    opinions. Broad spectrum tests are best deployed on groups of people, or even
    publicly—in the final stages of game’s development.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, big innovation requires early validation! The riskier the design the
    more it will benefit from playtesting. Any fundamental building blocks of your
    game need to be verified as soon as feasibly possible.
  prefs: []
  type: TYPE_NORMAL
- en: To help you plan and organize your playtesting sessions, a playtesting plan
    can be formulated between the producer, designers, lead programmers, and anyone
    else involved in spearheading the development. Such a plan will surely adapt and
    evolve with the game, but it’s important to prepare your team for the upcoming
    times of pre-test intensity and feedback fueled uncertainty.
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ll now deconstruct a sample high-level playtesting plan of a fictional AAA
    action-adventure game:'
  prefs: []
  type: TYPE_NORMAL
- en: Pre-production
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Controls and base game mechanics (movement and camera, jumping and climbing,
    aiming and shooting, using cover). Verified internally with individual sessions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Production Milestone 1
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Controls and base game mechanics (after addressing initial feedback). New and
    returning players - internal.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Art direction and brand tests. Done via small-scale social media advertising
    campaigns targeted at our audience.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Production Milestone 2
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: First 30 minutes of gameplay (onboarding experience and usability). The initial
    appeal of the brand and the game. Individual sessions ran by an external agency
    on our target audience.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiplayer modes and singleplayer content, 3-5 day long company playthrough
    resulting in a big show-off match between top players.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Production Milestone 3
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Individual sessions with fans of the brand and/or influential players.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iterations on the onboarding experience, difficulty and progression, 2-week
    long test ran on our friends and family.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiplayer modes and singleplayer content, 3-5 day long company playthrough
    resulting in a big show-off match between top players.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alpha
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Closed Alpha test builds are made playable during select weekends for super-fans,
    influential players, and press.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Beta
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Closed Beta, the game is now accessible 24/7\. Extra focus is being put on game
    balancing and player progression.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Open Beta established and promoted on available distribution platforms. Main
    goals revolve around stress-testing our networking, promoting the game, and gathering
    feedback (some of the suggestions will influence post-release content and schedule).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Release and Post Release
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: A public test realm (PTR) is made available to every player. Having a test server
    that anyone can opt to play in allows us to pre-deploy game updates and gather
    feedback on any changes before they’re made available to the entire playerbase.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Playtesting formats
  prefs: []
  type: TYPE_NORMAL
- en: In the ideal world, you’d be able to repeatedly tap into a strong and consistent
    flow of players that represent your target audience and have them engage with
    the entirety of your game in their natural environment. However, due to costs,
    time, and manpower required for “lab level” user testing, you’ll often have to
    make sacrifices in either the quality of the players or the extensiveness, robustness,
    or frequency of the tests.
  prefs: []
  type: TYPE_NORMAL
- en: Fortunately, we’re testing entertainment products, not life-saving drugs. Dependable
    results and useful feedback can be gathered in a variety of ways, some of them
    available for close to no costs (besides time).
  prefs: []
  type: TYPE_NORMAL
- en: 'Before you create your playtesting plan, you’ll need to acknowledge the advantages
    and limitations of available solutions, and pick the one that best suits your
    situation. Playtesting sessions can be divided into three general categories:
    individual, group, and public.'
  prefs: []
  type: TYPE_NORMAL
- en: Individual sessions
  prefs: []
  type: TYPE_NORMAL
- en: As the heading suggests, each player is being exposed to the game separately,
    with their play session closely monitored and often recorded.
  prefs: []
  type: TYPE_NORMAL
- en: Individual sessions allow you to pinpoint highly specific usability issues,
    interview the players and confront their opinions with observed behaviors. They
    are also good at minimizing peer-based bias as players cannot help out or influence
    the opinions of fellow test subjects.
  prefs: []
  type: TYPE_NORMAL
- en: Frequency is more important than scale. It’s better to run the tests every two
    weeks on just three users than to do it once a month on a group of ten. Big usability
    issues are easy to find, and if they’re repeated by more than one player, you
    have an obvious problem to address.
  prefs: []
  type: TYPE_NORMAL
- en: Individual sessions tend to be time-consuming as the facilitator of the test
    needs to dedicate a portion of their time to each player. As the player pool tends
    to be smaller, poor screening can also hurt your results. The fewer the players,
    the more unreliable the findings. Try to grade your testers on a scale based on
    how closely they overlap with your target demographic and adapt this scale to
    your findings. For example, a 21 year old male Call of Duty player is not the
    best source of feedback for a casual game in the hidden object genre, which has
    a target audience that's primarily female and 34+. Don't just look at the results,
    but also who is the feedback coming from.
  prefs: []
  type: TYPE_NORMAL
- en: Group playtesting
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes the most efficient way of playtesting your game is to put it into
    the hands of a whole group of people simultaneously.
  prefs: []
  type: TYPE_NORMAL
- en: Group sessions are often used on the cusp of big production milestones and may
    also be the only way to validate certain components such as multiplayer gameplay
    and balance. It’s a format that allows you to cover more ground, for the price
    of introducing peer-to-peer bias, missing minor usability problems, and diluting
    the feedback.
  prefs: []
  type: TYPE_NORMAL
- en: The playtesting user group is usually composed of a single cohort, be it company
    employees, fans and influential community members, recruited testers, press, or
    friends and family. If possible, try your game on various groups to see how the
    general opinion differs between them.
  prefs: []
  type: TYPE_NORMAL
- en: Supervised playtests have a group of people playing the game at the same time
    and in the same space. You can run them in your studio or outside, at a conference,
    exposition show, and so on. Coordinated and supervised tests enable the members
    of the development team to observe and take notes, but also introduce the risk
    of peer-to-peer bias. Communication between playtesters can skew the results as
    they influence each other’s opinions and answer their own questions. Moreover,
    having multiple people in the same space creates a less critical atmosphere, especially
    if they’re playing a multiplayer game against their friends and peers.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, unsupervised playtests have the users access the game at
    their own leisure (within the testing time frame) and return the results via spoken
    or written feedback, questionnaires, and analytics. These sessions are easy to
    run but lower the quantity and quality of findings. They may also not be the best
    choice for testing onboarding as you cannot directly observe the issues. That
    said, unsupervised playtests can run for weeks on end, a great choice when gathering
    feedback on storylines, difficulty and balancing, in-game progression, and metagame.
  prefs: []
  type: TYPE_NORMAL
- en: Public testing
  prefs: []
  type: TYPE_NORMAL
- en: Another great way of gathering feedback and testing the game extensively is
    to release it into the wild, in a limited manner.
  prefs: []
  type: TYPE_NORMAL
- en: Public testing most often takes the form of alpha and beta tests, which correspond
    to their milestones and can either be open (available to everyone) or closed (with
    access granted to a portion of registered candidates).
  prefs: []
  type: TYPE_NORMAL
- en: 'To make the best use of public tests, you’ll need to open and gather feedback
    from multiple feedback channels such as:'
  prefs: []
  type: TYPE_NORMAL
- en: Game forums, fan pages and community sites such as Reddit.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Questionnaires - either e-mailed via newsletters or linked to from in-game.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Analytics - user retention, equipment usage, win/loss rates, drop off points,
    and more!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Built-in rating systems - completed a mission/quest/storyline/challenge? Rate
    it on a scale or answer yes/no to a sequence of short questions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Community outreach by moderators and customer support members.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Live-streams - you can engage with the audience and take questions/suggestions
    directly from them.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once the game is officially live, you can set up a PTR. This is a test version
    of the game that allows you to gather feedback on new content and changes before
    they're made live to the entire player base. PTR can be an invaluable tool for
    competitive multiplayer games but comes with increased server costs and development
    effort.
  prefs: []
  type: TYPE_NORMAL
- en: In the mobile development scene, you also have the practice of soft launching,
    that is, releasing the game onto a small market (Thailand, New Zealand, Australia,
    Canada, Netherlands, and so on) with the help of locally-targeted marketing. At
    this stage, it’s also common to run multiple different variants of the game configuration
    settings in order to find the best performing one. We’ll speak more about A/B
    testing and analytics in [`Chapter 15`](index_split_443.html#filepos1012825),
    Games As a Service.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Remote playtesting solutions
  prefs: []
  type: TYPE_NORMAL
- en: In the last several years, professional user testing companies have begun putting
    more attention on video game development, and premium playtesting services now
    extend way beyond candidate recruitment. A quick web search will unveil at least
    several highly-specialized companies capable of running full blown playtests on
    your behalf.
  prefs: []
  type: TYPE_NORMAL
- en: These sessions will either be conducted by specialists in a highly controlled
    environment, or externalized onto candidates themselves. At the end of the testing
    period, you'll either be granted access to recordings from on-site sessions or
    self-recorded testimonials from remote playtesters. Some companies are also willing
    to combine an expert report that not only highlights the most pressing issues
    but also suggests potential solutions to your problems.
  prefs: []
  type: TYPE_NORMAL
- en: Remote playtesting services are perfect for anyone who lacks the time, people,
    and expertise to conduct their own tests, but has the money to pay for them. But
    their utility is not ending there! Remote sessions can be a supplementary source
    of detailed usability feedback and provide an effective, unbiased control-group
    for anyone who conducts their own playtesting.
  prefs: []
  type: TYPE_NORMAL
- en: Sourcing candidates
  prefs: []
  type: TYPE_NORMAL
- en: People are the single most important resource when running your playtesting
    sessions. Each group of potential candidates comes with a set of potential advantages
    and disadvantages. That said, do not get hung up on trying to find the very best
    people to play your game, it’s often more beneficial to run smaller tests regularly
    than to find the perfect group of playtesters.
  prefs: []
  type: TYPE_NORMAL
- en: Personal and professional network
  prefs: []
  type: TYPE_NORMAL
- en: If you’re working at a games company, using your colleagues as playtesters is
    one of the most popular practices.
  prefs: []
  type: TYPE_NORMAL
- en: 'Advantages:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Quick and efficient: Sessions are cheap to run and easy to organize.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Inexpensive: There''s no agency fees or fixed price per player/hour associated
    with using your colleagues. That said, be wary of how many man hours are dedicated
    to your project and get the manager''s approval whenever necessary.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Repeatable: It''s possible to track changes in test results across multiple
    versions of the game.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Professional feedback is invaluable: Your colleagues are likely to be full
    of games knowledge, market insight, and industry expertise. This primes them to
    share realistic and actionable feedback. They can also help by generating ideas,
    proposing game mechanics, and giving tips on improving your development process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Enabling extended play sessions: Using your network opens up the possibility
    of spending an extensive amount of time with the game and gathering insight into
    a larger amount of content, the storyline, and the progression systems. It’s still
    good to observe the onboarding section personally, then set the player free and
    have them report back after several days. You can then set up another interview
    and compare the new findings and feedback with the initial performance and opinions
    of the same tester.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Confidential: There is no need for a non-disclosure agreement (NDA). These
    are the safest tests you can run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Disadvantages:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Audience mismatch: It may be impossible to pick users that fit your target
    audience. Play patterns, age, gender, and interests may differ dramatically.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lack of objectivity: Many colleagues are less objective and frank with their
    critique, while others still; are overly pessimistic or have a personal stake
    in play. The same can be said of your average friend and acquaintance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Diminishing returns on onboarding: Sessions repeatedly ran on the same person
    cannot be used to validate your tutorials or first-time user experience. You can
    only gather objective feedback on your onboarding with help of a fresh pair of
    eyes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Feedback stagnation: The more exposure someone has to your project, the harder
    it becomes to gather fresh and enthusiastic feedback. Repeating the same content
    for the tenth time is also likely to sprout an unfairly dull and uninspired reaction.
    They may have nothing new to say but may still feel obliged to find something
    and try to pick holes in the design.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Developers aren''t exactly players: Experience with game development processes
    gives game dev professionals an unfair insight and skews their perception. If
    you''re looking for an inexperienced player, you''re unlikely to find them at
    a games company.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your personal and professional network is a hugely valuable playtesting resource
    that can be tapped into one short notice. Colleagues can provide a fresh pair
    of professional eyes, valuable critique, and a much-needed boost in confidence.
    Friends, family members, and acquaintances can be screened easily and are sure
    to at least partially overlap with your target audience.
  prefs: []
  type: TYPE_NORMAL
- en: Spend this resource wisely and avoid over-exposing too many people too early.
    And remember, your friends and family can be biased towards you and a game industry
    professional is rarely equivalent to a real player or an average member of your
    target audience.
  prefs: []
  type: TYPE_NORMAL
- en: Recruited testers
  prefs: []
  type: TYPE_NORMAL
- en: Product testing is a big industry! Requesting help from a local agency is a
    sure way to offload the time-intensive work of finding suitable candidates yourself.
    Chances are they already have a strong database of potential playtesters you can
    tap into on short notice.
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, using agencies to handle player recruitment can get prohibitively
    expensive. In such cases, you can always try to find testers yourself. Online
    listings are a couple clicks away and offer a large reach for those who put in
    the time to manage them. Go to forums, Reddit subgroups, and fansites where your
    target audience congregates.
  prefs: []
  type: TYPE_NORMAL
- en: 'Advantages:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Handpicked audience: A set of entry requirements makes it much easier to pre-screen
    and recruit candidates representative of your target audience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Controlled, unbiased, recorded: With proper training and practice, you''ll
    be able to run tightly controlled sessions that provide you with unbiased feedback
    and even digital recordings of real reactions to various parts of the game.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Time Efficient: Players can be booked for specific days and time slots. It’s
    possible to fit multiple tests in a week and have them witnessed by various members
    of your team—all without unnecessarily disrupting the development schedule.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ideal for art and FTUE: This is a perfect way of validating your art direction,
    brand, and First Time User Experience (FTUE) against the members of your target
    audience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Confidential: People visiting your studio are more willing to sign and abide
    by the rules of the NDA than the strangers and fans encountered in the wild.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Disadvantages:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Requires pre-planning: Testers, developers, builds, and devices all need to
    be scheduled for a specific day and time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Costly: Even if you avoid the agency costs by recruiting players online yourself,
    you still need to set aside a monetary reward for each player (typically a small
    shop voucher).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Limited duration: A recruited player can rarely help you validate long-term
    progression, retention, storyline, or difficulty. It may be possible to arrange
    for long or recurring sessions, but doing so will increase the costs and yield
    diminishing returns.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strangers
  prefs: []
  type: TYPE_NORMAL
- en: Approaching strangers for help is a seemingly common practice amongst indie
    developers and university students. This can be done on the street, in a public
    space, or even at an exposition show or a conference.
  prefs: []
  type: TYPE_NORMAL
- en: 'Advantages:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Mobile friendly: If your project is a mobile title, you can present it to potential
    players on a moment''s notice. Whether you set up a simple stand inside your university
    building or ask people in the mall to take a look at your prototype, opportunities
    are abundant.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Inexpensive: The only time you absolutely need to account for is the one spent
    by the facilitators. Nevertheless, time is money, and you''ll increase your chances
    if you''re able to present your candidates with a small shop voucher as an incentive.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Suitable for onboarding: Short tests are perfect for evaluating your tutorials,
    controls, usability, and the general appeal of the game.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Great for art testing: You don''t need a playable version of the game to test
    the appeal of your brand and the game''s art direction. The best way to do that
    is to present the audience with printouts of several different versions. Have
    the person pick up their most and least favorite ones and tell you why. Such tests
    are very reliable and quick to conduct.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Disadvantages:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Hard to scale: Needless to say, there are only so many people you can approach
    every day and there''s a large amount of idle time involved.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Require filtering: It''s very hard to screen for suitable candidates and even
    a short pre or post-test questionnaire may strain the attention span of your candidate,
    making it harder to determine who exactly the feedback is coming from.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'More effective with a brand: If you''re testing in a public environment, the
    attention span will be very short. In general, the bigger the brand or the monetary
    incentive, the easier it is to recruit. Finding volunteers to try the new FIFA,
    Call of Duty, or Star Wars game is much easier than recruiting players for an
    unknown title from an unknown studio, especially with no monetary award for their
    time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lack of confidentiality: Not many volunteers are keen to read and sign a NDA,
    and even if they do, you''re unlikely to be in a position to properly enforce
    them.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Limited use for console and PC products: Needless to say, getting strangers
    to visit your studio and sit down in front of a screen is hard!'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Potential legal roadblocks: Some countries have strict restrictions put on
    engaging with minors without their parent''s written consent. Malls and other
    quasi-public spaces also have restrictions on what you can and cannot do on their
    premises without prior authorization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running playtesting sessions
  prefs: []
  type: TYPE_NORMAL
- en: We’ll now provide you with a set of guidelines and tips for running your very
    own playtesting sessions.
  prefs: []
  type: TYPE_NORMAL
- en: At first, the methodology may seem unnecessarily complex and restrictive, but
    the effort you put into preparing and running your sessions has a direct impact
    on the quality of the results. Do not fret over your mistakes as a test facilitator.
    After several sessions, it will all become second nature!
  prefs: []
  type: TYPE_NORMAL
- en: The playtesting scenarios deconstructed below are two of the most commonly encountered
    permutations. For any other situation, simply pick and choose to find a combination
    that fits your playtesters, as well as the available equipment, people, and facilities.
  prefs: []
  type: TYPE_NORMAL
- en: Supervised individual sessions
  prefs: []
  type: TYPE_NORMAL
- en: Supervised sessions are best run in a meeting room or another secluded place
    where you won't be interrupted. The only people present should be the playtester,
    the test facilitator, and a maximum of two observers. The observers are typically
    other members of the core development team—everyone should witness at least one
    test in order to appreciate how their game is performing on an actual player.
    Instruct the observers to remain quiet and make their presence as unnoticeable
    as possible.
  prefs: []
  type: TYPE_NORMAL
- en: If you have the capabilities, record each session! This will allow you to distribute
    the footage to everyone interested, and remove the necessity for observers. In
    the best case scenario, you’d be able to combine raw game footage with a separate
    video stream of player’s face and body. Seeing the body language of the tester
    will help you identify their emotional state and better assess their reaction
    to various parts of the game.
  prefs: []
  type: TYPE_NORMAL
- en: If the candidate is under NDA, make sure to prepare one. As soon as they arrive,
    greet them, offer them a drink and pass an NDA to read and sign. Once they’re
    all set, the session can commence.
  prefs: []
  type: TYPE_NORMAL
- en: Session introduction
  prefs: []
  type: TYPE_NORMAL
- en: If you do not know the playtester, start by introducing yourself and everyone
    else in the room. It’s good to put distance between yourself and the product.
    If possible, pretend that you (and everyone else in the room) are not a part of
    the development team—We’ve been asked by some people at the company to run this
    tests for them. This setup allows the candidate to open up without fearing they’ll
    hurt your feelings.
  prefs: []
  type: TYPE_NORMAL
- en: 'After introductions, it''s important to explain the purpose of the playtesting
    session and prime the player to vocalize their emotions and intentions. This is
    essentially a script, which is being run at the start of each session. In fact,
    you could write and print it ahead, then read it out to each tester. The script
    is tailor-made for each game and test-group, but it’s most likely going to include
    following statements and questions:'
  prefs: []
  type: TYPE_NORMAL
- en: We will present you a work-in-progress version of a game. We’re looking to get
    your feedback and opinions so that the game can be improved.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There may be some bugs and unfinished areas, but it's important to get your
    personal, unfiltered, and honest opinion. If something is terrible, say it's terrible
    and explain why. Similarly, if you like something, tell us what and why. You cannot
    hurt our feelings, we are here to learn as much as we can about what works and
    what doesn't.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We are here to evaluate the product, not the playtester. You cannot do anything
    wrong, if something is confusing, it's 100 percent the game's fault.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When playing the game, try to think aloud and explain what you're doing and
    why. For example, I think I need to train more troops. I'll need more gold to
    do that. Maybe if I go on this mission, I'll get more gold.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It’s good to ask questions. In fact, you should ask all the questions that pop
    into your head. One small caveat though, we cannot answer the questions immediately.
    Instead, we'll give you all the answers you want after we're done!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you''re testing a branded product, consider some of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: How familiar are you with the brand?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At this point, it’s best to present pictures of characters or other branded
    material and ask for a run-down of what is what. Often players say they are familiar
    yet cannot pinpoint more than one or two character names.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: What is your opinion of the brand?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who do you think the brand appeals to most?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do you have any expectations for a game based on this brand?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Would you be interested in playing a game in this world?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Unless you know the tester inside out or are running a pre/post-session questionnaire,
    it’s important to understand your player''s background:'
  prefs: []
  type: TYPE_NORMAL
- en: Do you play video games? How often? On what devices? PC, console, mobile?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are some of your favorite games?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What gaming genres are you interested in most?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Are you playing anything now? What is it?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How much do you spend on games per month?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Have you ever spent money on downloadable content/in-app purchases? If the
    answer is YES: What did you spend on? If it''s NO: Why not?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Should you have any artistic tests to conduct (most likely mocked-up screenshots
    and characters in different themes and styles), present them at this point and
    get feedback on the following questions:'
  prefs: []
  type: TYPE_NORMAL
- en: Which one appeals to the player most? Why?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Which one appeals to the player least? Why?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who do they think the different styles would appeal to most?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Playtesting session
  prefs: []
  type: TYPE_NORMAL
- en: 'It’s time to begin the session! For best results, try to adhere to following
    guidelines:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Provide a comfortable atmosphere: Keep the disturbances to a minimum and do
    not respond to player''s actions and questions; sit back, observe and encourage
    the player to keep going. Do not loom over the player, sit next to them and respect
    their personal space.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Encourage the playtester to speak: Provide positive reinforcement when the
    player speaks (even if they are wrong) and remind them to vocalize their thoughts
    and reactions if they are overly quiet.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Take notes discreetly: Do not glue yourself to a notepad as players may feel
    scrutinized and exposed. An exception to this is when players are voicing their
    opinions and ideas - writing these down can be encouraging. Recording the session
    helps reduce the reliance on paper notes, and you can always write things down
    after the session is over.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Do not answer questions: You''re not there to help the playtester have a good
    time or sell them onto your game. Do not answer questions but encourage them to
    be asked. Find out why they''d like to know and withhold the answers until the
    session is over.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Prompt players to explain the game to you: This will help compare player''s
    mental model of the game with the reality. Ask for an explanation of every little
    detail, as if you were their friend who has never seen the game—Tell me what just
    happened? What do you think this means? How does this work? Who is this character?
    Be sure to prompt such explanations whenever the user is struggling (to find out
    what’s wrong in their rationale), as well as at the end of the test (to check
    if everything aligns and there are no knowledge gaps).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ask if they''d keep playing: Every 10 minutes or so, ask the tester if they''d
    keep playing the game on their own volition. This can help you pinpoint potential
    drop off points. Find out why they''d be willing to stop/continue playing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Avoid leading questions: A question can be loaded with answers or prompt the
    player to respond in a particular way. "Would you agree that the controls are
    easy to understand and intuitive?" is not a good way to ask about controls! "What''s
    your opinion on the controls?" is a much better way to formulate a question.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Do not waste time/torture your playtester: You''re not learning anything new
    from someone who''s stuck on a single screen for 20 minutes. Write down the point
    of friction, apologize for the confusion, and explain what has to be done to move
    on. Explain only as much as you need to keep the test going, and only when the
    playtester is stuck for good.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Post-session interview
  prefs: []
  type: TYPE_NORMAL
- en: 'After the playtesting session is over, it''s time to ask about tester''s overall
    experience, gather any outstanding feedback, and answer their questions. Consider
    the following questions:'
  prefs: []
  type: TYPE_NORMAL
- en: Would you keep playing this game outside the test? Why?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Would you spend money on this game? Why?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How would you rate your overall experience? How fun was it on a scale from 1
    to 10?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What’s the most memorable moment? Something that stood out to you.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What’s the part you enjoyed most? Something you really loved.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What’s the part you enjoyed least? Something you really hated.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you could make changes to this game, what would you change and how?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who do you think this game would appeal to most?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any other ideas on how we could improve this game and make it appeal more to
    players like you?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If your game reminded the player of another product:'
  prefs: []
  type: TYPE_NORMAL
- en: How does it compare to that game or other games in that genre?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the biggest differences? What's better and what's worse?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instead (or in addition to) the interview, you may ask the playtester to fill
    in a questionnaire. We'll explain the best practices for creating and interpreting
    playtesting questionnaires in a separate section below.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Unsupervised group playtesting
  prefs: []
  type: TYPE_NORMAL
- en: An unsupervised group session requires far less time and involvement per player,
    but there's still plenty to organize.
  prefs: []
  type: TYPE_NORMAL
- en: First up, you need to ensure that each playtester has a suitable device and
    full access to the specific version of the game. The easiest way out is to have
    every player use their own PC/Console/Mobile phone, sparing you the need to organize
    equipment.
  prefs: []
  type: TYPE_NORMAL
- en: Make sure to provide detailed instructions on how the game can be obtained and
    installed. The installing instructions should also explain the intentions behind
    the test, any areas that require special focus, feedback channels, and any known
    bugs and issues (in a bid to save everyone's time).
  prefs: []
  type: TYPE_NORMAL
- en: Setting an objective
  prefs: []
  type: TYPE_NORMAL
- en: The success of unsupervised tests depends solely on your players finding the
    time to try your game and putting in the effort to share their feedback. Unfortunately
    for us, numbers provide safety. Without direct supervision and time-slots, many
    playtesters tend to get surprisingly busy with everything but playing the game.
  prefs: []
  type: TYPE_NORMAL
- en: 'To improve the participation, you’ll need to set out a clear, achievable objective
    for your participants. Try to make the goal rely on time-based progression, not
    skill. For example: get your character to experience level 10, reach the mountains,
    finish the first two chapters of the story mode, and so on. This objective will
    ensure that playtesters engage with the game sufficiently before giving feedback.
    It also provides a clear way out (excuse) for those who aren’t inclined to put
    in too much of their personal time.'
  prefs: []
  type: TYPE_NORMAL
- en: Unsupervised group sessions are often used when a game is approaching a significant
    milestone. If the project has a large scope, it carries a risk of diluting the
    results. The sheer amount of new game features and content can make for a very
    long or very chaotic playtest. Players who are set to roam free across a huge
    game will likely touch upon everything, but rarely provide a deep analysis of
    any particular area. To help produce more concrete and thorough feedback, you’ll
    either need to focus the test on a smaller set of areas or features (This playtest
    is all about Player vs Player combat mechanics and balancing) or divide your playtesters
    into subgroups. Each subgroup would then be served its own instructions, for example
    Group A focuses on the story mode, Group B on special abilities, and Group C feeds
    back on the guilds and social features.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'You can also increase engagement and the quality of feedback by turning the
    whole thing into a competition and providing the playtesters with extra incentives.
    For example, each player has a chance to grab a prize in the following categories:
    the most useful feedback, the best new idea, the highest score on the leaderboard.
    If you don’t want to hand-pick winners for various categories, you can always
    run a single prize draw for everyone who submitted their questionnaire in time.
    As for rewards, if a shop voucher is out of the question, you can always take
    the winner out for lunch, shower them with their favorite sweets (you can find
    that out with the questionnaire), or honor them by naming an in-game character,
    item, or location after them.'
  prefs: []
  type: TYPE_NORMAL
- en: Objectives and competitions may seem silly at first, but you'll be surprised
    at how effective they are at promoting test participation and securing high-quality
    feedback!
  prefs: []
  type: TYPE_NORMAL
- en: Gathering feedback
  prefs: []
  type: TYPE_NORMAL
- en: 'For unsupervised group testing, the typical ways to gather feedback would be:'
  prefs: []
  type: TYPE_NORMAL
- en: Face-to-face conversation (make sure to take notes during or immediately after
    receiving feedback)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Post-session questionnaire
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Electronic communication (work chat, email, and so on)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In-game feedback forms (vote a map up/down, rate your experience in last round,
    and so on)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Analytics (crash reports, win/loss ratios, drop-off points, average frames per
    second per device, most/least popular and successful loadouts, and so on)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Playtesting questionnaires
  prefs: []
  type: TYPE_NORMAL
- en: 'Well executed questionnaires are tailor-made to both your game (in its current
    state) and the playtesting session itself. Sometimes you’ll go for a very short
    and snappy form, with just a few burning questions to answer, and other times,
    you’ll try to build the profile of the player and seek feedback on every aspect
    of the game. Consider the following tips:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Be mindful of the length: The length of your questionnaire should correspond
    to the length of the test and how much area you''ve covered. A form with 25 questions
    may be suitable for a week-long playathon, but not so much for a few short sessions
    of gameplay focused on the onboarding experience. Playtesting can be fun, filling
    forms is not.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Build a player profile: Unless your test is very narrow in scope and the playtesters
    well known, you should dedicate the first few questions to getting to know your
    player. This information will help you to add more context and validate the feedback.
    Player profiling comes down to three components:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Basic info: Name, age, and gender.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Gaming habits: Do they play games on your target platform? How often?'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Calibrating against genre and competition: Create a list of similar genres
    for the playtester to tick, add an open-field at the end for them to add more
    if they want. Ask what''s their favorite game in the genre, ask them to score
    it. Now that you know who they are and what they play, you can ask them to rate
    their overall experience in your game on the very same scale. If someone gives
    their genre showcase a 5/10, and you manage to score a 6, you know that you''re
    faring comparably well in their eyes— perhaps it''s not possible for your game
    to fully satisfy this player, no matter what you do.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Use basic questions to track progress: Repeating basic questions in each test
    allows you to make quantifiable comparisons across different tests and milestones.
    Consider making some of the following your mainstay:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rate your overall experience (1-terrible, 10-excellent).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Would you play this game after release (1-not at all, 10-absolutely).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Rate the default control scheme (1-terrible, 10-excellent).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Rate the user interface (1-very hard to use and understand, 10-very easy to
    use and understand).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Rate the difficulty of gameplay challenges (1-way too difficult, 3-just right,
    5-way too easy). Due to the nature of difficulty questions, they often need to
    use a different scale; make sure it's visually distinct! (in this case, it's five
    bullet points instead of numbers from 1 to 10).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: How long did you play?/What level did you reach?/What was your high score?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Avoid leading questions: In here, as in spoken interviews, questions should
    avoid pointing to an answer. Do you agree that this game is very easy to use?
    is a loaded question. Rate the difficulty of interaction is a better phrasing,
    which will make your players consider their experience, as opposed to having them
    follow the general trend of agreeing to anything they don''t have a strong opinion
    on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Use 10-point scale: If a question lends itself to a numbered rating, a 1-10
    range provides much more accurate results than a 1-5\. With a 10-point scale,
    you can narrow the score to a tidy number, while providing ample room between
    the middle and the absolute.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Combine questions: If you''re asking the same questions about 5 different components,
    simply combine them into a single, tidy matrix.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Stay consistent: Do not flip things around! Making a left-to-right scale (where
    left is bad, right is good) suddenly go in the opposing direction is a surefire
    way to get false results.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Use digital forms: Do not bother with creating print-out forms that you''ll
    later need to manually gather, input and analyze. Services like SurveyMonkey and
    Google Forms are free and easy to use. If your playtesters are nearby, you can
    secure fresh and immediate feedback by giving them access to a tablet with a survey
    on it. Another cool thing about digital forms, you can embed links to them directly
    inside the game!'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Organize the form: Order your questions in a logical and repeatable fashion.
    If one question flows into another without dramatically shifting context, the
    whole form will take less time and effort to fill. Player info comes first, general
    questions second, test-specific questions are next, and any open-ended questions
    last. Try to group your questions either by category (story, combat, social features)
    or context (there are 5 chapters in the game and each gets a series of questions).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Track fill-rate: The larger the test group, the harder it is to get a 100 percent
    fill rate. Check the fill-rate throughout the test duration and remind the playtesters
    about the questionnaire. If needed, send individual messages to players that lag
    behind. Getting a large group of 50 players to a 75 percent fill rate is a big
    success.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let the players express themselves: There are three open questions that I try
    to fit at the end of my forms:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What's an in-game moment you LOVED?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: What's an in-game moment you HATED?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Any closing comments, new ideas, things you'd like to see more or less of?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The screenshots used in this chapter are for illustrative purposes only. We
    do not recommend that you to misuse these in any way. For more information please
    consult the terms and conditions of the publishers mentioned in the Disclaimer
    section of this book.
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: Summary
  prefs: []
  type: TYPE_NORMAL
- en: Oh, chapter summary... we meet again! Thanks to this (rather lengthy) tutorial,
    we come armed with knowledge on how to make our games more accessible, how to
    teach our players, and how to make products that resonate with international audiences.
    But most importantly, we know how to verify it all with the powers of playtesting,
    a process that helps ensure the game you're making is at least as good as the
    one you set out to make!
  prefs: []
  type: TYPE_NORMAL
- en: Speaking of quality, no matter how accessible and well explained your game,
    it can all fail in the face of underwhelming challenges and overwhelming odds.
    We'll now take a look at the art of game balance and ways to create perfectly
    paced experiences. If all goes well, you'll soon know how to keep the difficulty
    in check and the player on the edge of their seats!
  prefs: []
  type: TYPE_NORMAL
