- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are programming books that are thousands of pages long that aim to be
    comprehensive references to the C# language, the .NET libraries, and app models
    like websites, services, and desktop and mobile apps.
  prefs: []
  type: TYPE_NORMAL
- en: This book is different. It is a step-by-step guide to learning various technologies
    for building apps and services with .NET. It is concise and aims to be a brisk,
    fun read that is packed with practical, hands-on walkthroughs of each topic. The
    breadth of the overarching narrative comes at the cost of some depth, but you
    will find many signposts to explore further if you wish.
  prefs: []
  type: TYPE_NORMAL
- en: In my experience, that hardest part of learning a new technology is getting
    started. Once I have had the most important key concepts explained and seen some
    practical code in action, I then feel comfortable going deeper by exploring the
    official documentation on my own. You can feel confident in experimenting on your
    own once you have seen how the basics work correctly.
  prefs: []
  type: TYPE_NORMAL
- en: This book is best for those who already know the fundamentals of C# and .NET.
  prefs: []
  type: TYPE_NORMAL
- en: If you already have experience with older versions of the C# language and .NET
    libraries, then I have covered what is new in C# 8 and .NET Core 3.1 and later
    in an online-only section at the end of *Chapter 1*, *Introducing Apps and Services
    with .NET*.
  prefs: []
  type: TYPE_NORMAL
- en: I will call out the most important aspects of app models and frameworks for
    building modern user interfaces and implementing services, so you can participate
    in conversations with colleagues about technology and architectural choices and
    get productive with their implementation fast.
  prefs: []
  type: TYPE_NORMAL
- en: Where to find the code solutions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can download or clone solutions for the step-by-step guided tasks and exercises
    from the GitHub repository at the following link: [https://github.com/markjprice/apps-services-net8](https://github.com/markjprice/apps-services-net8).'
  prefs: []
  type: TYPE_NORMAL
- en: If you don’t know how, then I have provided instructions on how to do this at
    the end of *Chapter 1*, *Introducing Apps and Services with .NET*.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Chapter 1*, *Introducing Apps and Services with .NET*, is about setting up
    your development environment and using Visual Studio 2022, Visual Studio Code,
    or JetBrains Rider. You will also learn about some good places to look for help,
    and ways to contact me (the author of this book) to get help with an issue or
    give me feedback to improve the book. The online-only sections review the new
    features added to the language and libraries in modern C# and .NET, how to benchmark
    the performance of your code, and how to work with types for reflection and attributes,
    expression trees, and dynamically generating source code during the compilation
    process.'
  prefs: []
  type: TYPE_NORMAL
- en: Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Chapter 2*, *Managing Relational Data Using SQL Server*, is about setting
    up SQL Server on Windows or in the Azure cloud using SQL Database. (An online-only
    section shows how to set SQL Server up in a Docker container on Windows, macOS,
    or Linux.) You will then set up an example database for a fictional organization
    named Northwind. You will learn how to read and write at a low level using ADO.NET
    libraries (`Microsoft.Data.SqlClient`) for maximum performance, and then by using
    the object-to-data-store mapping technology named **Dapper** for ease of development.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 3*, *Building Entity Models for SQL Server Using EF Core*, is about
    using the higher-level object-to-data-store mapping technology named **Entity
    Framework Core** (**EF Core**). You will create class libraries to define an EF
    Core model to work with the Northwind database that you created in *Chapter 2*.
    These class libraries are then used in many of the subsequent chapters.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 4*, *Managing NoSQL Data Using Azure Cosmos DB*, is about the cloud-native
    non-SQL data store Azure Cosmos DB. You will learn how to read and write using
    its native API. An online-only section also covers the more specialized graph-based
    Gremlin API.'
  prefs: []
  type: TYPE_NORMAL
- en: Libraries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Chapter 5*, *Multitasking and Concurrency*, shows how to allow multiple actions
    to occur at the same time to improve performance, scalability, and user productivity
    by using threads and tasks.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 6*, *Implementing Popular Third-Party Libraries*, discusses the types
    that allow your code to perform common practical tasks, like formatting text and
    numbers using Humanizer, manipulating images with ImageSharp, logging with Serilog,
    mapping objects to other objects with AutoMapper, making unit test assertions
    with FluentAssertions, validating data with FluentValidation, and generating PDFs
    with QuestPDF.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 7*, *Handling Dates, Times, and Internationalization*, covers the
    types that allow your code to perform common tasks like handling dates and times,
    time zones, and globalizing and localizing data and the user interface of an app
    for internationalization. To supplement the built-in date and time types, we look
    at the benefits of using the much better Noda Time third-party library.'
  prefs: []
  type: TYPE_NORMAL
- en: Services
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Chapter 8*, *Building and Securing Web Services Using Minimal APIs*, introduces
    the simplest way to build web services using ASP.NET Core Minimal APIs. This avoids
    the need for controller classes. You will learn how to improve startup time and
    resources using native AOT publish. You will then learn how to protect and secure
    a web service using rate limiting, CORS, and authentication and authorization.
    You will explore ways to test a web service using the new HTTP editor in Visual
    Studio 2022 and the REST Client extension for Visual Studio Code. An online-only
    section introduces building services that quickly expose data models using **Open
    Data Protocol** (**OData**).'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 9*, *Caching, Queuing, and Resilient Background Services*, introduces
    service architecture design, adding features to services that improve scalability
    and reliability like caching and queuing, how to handle transient problems, and
    how to implement long-running services by implementing background services.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 10*, *Building Serverless Nanoservices Using Azure Functions*, introduces
    you to Azure Functions, which can be configured to only require server-side resources
    while they execute. They execute when they are triggered by an activity like a
    message sent to a queue, a file uploaded to storage, or at a regularly scheduled
    interval.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 11*, *Broadcasting Real-Time Communication Using SignalR*, introduces
    you to SignalR, a technology that enables a developer to create a service that
    can have multiple clients and broadcast messages to all of them or a subset of
    them live in real time, for example, notification systems and dashboards that
    need instantly up-to-date information like stock prices.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 12*, *Combining Data Sources Using GraphQL*, introduces building services
    that provide a simple single endpoint for exposing data from multiple sources
    to appear as a single combined source of data. You will use the ChilliCream GraphQL
    platform to implement the service, which includes Hot Chocolate. New in this edition
    is how to implement paging, filtering, sorting, and subscriptions.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 13*, *Building Efficient Microservices Using gRPC*, introduces building
    microservices using the efficient gRPC standard. You will learn about the `.proto`
    file format for defining service contracts and the Protobuf binary format for
    message serialization. You will also learn how to enable web browsers to call
    gRPC services using gRPC JSON transcoding. New to this edition is how to improve
    the startup and memory footprint of a gRPC service with native AOT publish, handling
    custom data types including non-supported types like decimal, and implementing
    interceptors and handling faults.'
  prefs: []
  type: TYPE_NORMAL
- en: Apps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Chapter 14*, *Building Web User Interfaces Using ASP.NET Core*, is about building
    web user interfaces with ASP.NET Core MVC. You will learn Razor syntax, tag helpers,
    and Bootstrap for quick user interface prototyping.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 15*, *Building Web Components Using Blazor*, is about how to build
    user interface components using the new unified full-stack hosting of Blazor introduced
    in .NET 8\. Blazor components can now be individually configured to execute on
    the client- and server-side in the same project. For times when you need to interact
    with browser features like local storage, you will learn how to perform JavaScript
    interop. An optional online-only section, *Leveraging Open-Source Blazor Component
    Libraries*, introduces some popular open-source libraries of Blazor components.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 16*, *Building Mobile and Desktop Apps Using .NET MAUI*, introduces
    you to building cross-platform mobile and desktop apps for Android, iOS, macOS,
    and Windows. You will learn the basics of XAML, which can be used to define the
    user interface for a graphical app. An online-only section, *Implementing Model-View-ViewModel
    for .NET MAUI*, covers best practice for architecting and implementing graphical
    apps by using Model-View-ViewModel. You will also see the benefits of using MVVM
    Toolkit and .NET MAUI Community Toolkit. Another online-only section, *Integrating
    .NET MAUI Apps with Blazor and Native Platforms*, covers building hybrid native
    and web apps that make the most of the operating system they run on. You will
    integrate native platform features like the system clipboard, filesystem, retrieve
    device and display information, and pop-up notifications. For desktop apps, you
    will add menus and manage windows.'
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Epilogue*, describes your options for learning more about building apps and
    services with C# and .NET, and tools and skills you should learn to become a well-rounded
    professional .NET developer. An online-only section, *Introducing the Survey Project
    Challenge*, documents the product requirements for a survey/polling software solution
    that the reader can optionally attempt to implement and publish to a public GitHub
    repository to get feedback from the author and other readers.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Appendix*, *Answers to the Test Your Knowledge Questions*, has the answers
    to the test questions at the end of each chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can read the appendix at the following link: [https://github.com/markjprice/apps-services-net8/blob/main/docs/B19587_Appendix.pdf](https://github.com/markjprice/apps-services-net8/blob/main/docs/B19587_Appendix.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can develop and deploy C# and .NET apps and services using Visual Studio
    2022, or Visual Studio Code and the command-line tools on most operating systems,
    including Windows, macOS, and many varieties of Linux. An operating system that
    supports Visual Studio Code and an internet connection is all you need to complete
    this book. If you prefer to use a third-party tool like JetBrains Rider, then
    you can.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the color images of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We also provide you with a PDF file that has color images of the screenshots
    and diagrams used in this book. The color images will help you better understand
    the changes in the output.
  prefs: []
  type: TYPE_NORMAL
- en: You can download this file from [https://packt.link/gbp/9781837637133](https://packt.link/gbp/9781837637133).
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find several text styles that distinguish between different
    kinds of information. Here are some examples of these styles and an explanation
    of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    For example: “The `Controllers`, `Models`, and `Views` folders contain ASP.NET
    Core classes and the `.cshtml` files for execution on the server.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are highlighted:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new **term**, an important **word**, or words that you
    see on the screen, for example, in menus or dialog boxes, also appear in the text
    like this. For example: “Clicking on the **Next** button moves you to the next
    screen.”'
  prefs: []
  type: TYPE_NORMAL
- en: Important notes and links to external sources of further reading appear in a
    box like this.
  prefs: []
  type: TYPE_NORMAL
- en: '**Good Practice**: Recommendations for how to program like an expert appear
    like this.'
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit, [www.packtpub.com/support/errata](https://www.packtpub.com/support/errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name.'
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `copyright@packt.com` with a link to the material.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are interested in becoming an author: If there is a topic that you have
    expertise in and you are interested in either writing or contributing to a book,
    please visit [authors.packtpub.com](https://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit packt.com
  prefs: []
  type: TYPE_NORMAL
- en: Share your thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve read *Apps and Services with .NET 8 - Second Edition*, we’d love
    to hear your thoughts! Please [click here to go straight to the Amazon review
    page](https://packt.link/r/1-837-63713-X) for this book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
- en: Download a free PDF copy of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for purchasing this book!
  prefs: []
  type: TYPE_NORMAL
- en: Do you like to read on the go but are unable to carry your print books everywhere?Is
    your eBook purchase not compatible with the device of your choice?
  prefs: []
  type: TYPE_NORMAL
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  prefs: []
  type: TYPE_NORMAL
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  prefs: []
  type: TYPE_NORMAL
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these simple steps to get the benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: Scan the QR code or visit the link below
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B19587_QR_Free_PDF.png)'
  prefs: []
  type: TYPE_IMG
- en: '[https://packt.link/free-ebook/9781837637133](https://packt.link/free-ebook/9781837637133)'
  prefs: []
  type: TYPE_NORMAL
- en: Submit your proof of purchase
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
