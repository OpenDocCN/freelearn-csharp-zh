["```cs\nbcdedit /copy {current} /d \"No Hyper-V\"\nbcdedit /set {<identifier from previous command>} hypervisorlaunchtype off\n\n```", "```cs\nnamespace Master.Xamarin.Portable\n{\n    public class MyPhotoViewer\n    {\n        private readonly IStorageManager m_StorageManager;\n\n        private readonly ICameraManager m_CameraManager;\n        public MyPhotoViewer(IStorageManager storageManager, ICameraManager cameraManager)\n        {\n            m_StorageManager = storageManager;\n            m_CameraManager = cameraManager;\n        }\n\n        public async Task TakePhotoAsync()\n        {\n            var photoFileIdentifier = await m_CameraManager.TakePhotoAndStoreAsync();\n\n            var photoData = await m_StorageManager.RetrieveFileAsync(photoFileIdentifier);\n\n            // TODO: Do something with the photo buffer\n        }\n    }\n\n    /// <summary>\n    /// Should be implemented in Platform Specific Library\n    /// </summary>\n    public interface IStorageManager\n    {\n        Task<string> StoreFileAsync(byte[] buffer);\n\n        Task<byte[]> RetrieveFileAsync(string fileIdentifier);\n    }\n\n    /// <summary>\n    /// Should be implemented in Platform Specific Library\n    /// </summary>\n    public interface ICameraManager\n    {\n        Task<string> TakePhotoAndStoreAsync();\n    }\n}\n```", "```cs\nprivate async Task<string> TakePhotoAsync()\n{\n    string resultingFilePath = \"\";\n\n    var fileName = String.Format(\"testPhoto_{0}.jpg\", Guid.NewGuid());\n\n#if __ANDROID__\n\n    Intent intent = new Intent(MediaStore.ActionImageCapture);\n    var file = new File(m_Directory, fileName);\n    intent.PutExtra(MediaStore.ExtraOutput, Net.Uri.FromFile(_file));\n\n    // TODO: Need an event handler with TaskCompletionSource for\n    // Intent's result\n    m_CurrentActivity.StartActivityForResult(intent, 0);\n\n    resultingFile = file.AbsolutePath;\n\n#elif WINDOWS_PHONE_APP\n\n    ImageEncodingProperties imgFormat = ImageEncodingProperties.CreateJpeg();\n\n    // create storage file in local app storage   \n    var file = await LocalStore.CreateFileAsync(fileName);\n\n    resultingFilePath = file.Path;\n\n    // take photo   \n    await capture.CapturePhotoToStorageFileAsync(imgFormat, file);\n\n#endif\n\n    return resultingFile;\n}\n```"]