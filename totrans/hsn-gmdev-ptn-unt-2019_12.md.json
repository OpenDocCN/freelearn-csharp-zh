["```cs\nabstract class RemoteControlDevice\n{\n    public abstract void TurnOn();\n    public abstract void TurnOff();\n}\n```", "```cs\nabstract class Command\n{\n    protected RemoteControlDevice m_Receiver;\n\n    public Command(RemoteControlDevice receiver)\n    {\n        m_Receiver = receiver;\n    }\n\n    public abstract void Execute();\n}\n```", "```cs\nclass TurnOnCommand : Command\n{\n    public TurnOnCommand(RemoteControlDevice receiver) : base(receiver)\n    {\n    }\n\n    public override void Execute()\n    {\n        m_Receiver.TurnOn();\n    }\n}\n```", "```cs\nclass TurnOffCommand : Command\n{\n    public TurnOffCommand(RemoteControlDevice receiver) : base(receiver)\n    {\n    }\n\n    public override void Execute()\n    {\n        m_Receiver.TurnOff();\n    }\n}\n```", "```cs\nclass KillSwitchCommand : Command\n{\n    private RemoteControlDevice[] m_Devices;\n    private static RemoteControlDevice receiver;\n\n    public KillSwitchCommand(RemoteControlDevice[] devices) : base(receiver)\n    {\n        m_Devices = devices;\n    }\n\n    public override void Execute()\n    {\n        foreach (RemoteControlDevice device in m_Devices)\n        {\n            device.TurnOff();\n        }\n    }\n}\n```", "```cs\nusing UnityEngine;\n\nclass TelevisionReceiver : RemoteControlDevice\n{\n    public override void TurnOn()\n    {\n        Debug.Log(\"TV turned on.\");\n    }\n\n    public override void TurnOff()\n    {\n        Debug.Log(\"TV turned off.\");\n    }\n}\n```", "```cs\nusing UnityEngine;\n\nclass RadioReceiver : RemoteControlDevice\n{\n    public override void TurnOn()\n    {\n        Debug.Log(\"Radio is turned on.\");\n    }\n\n    public override void TurnOff()\n    {\n        Debug.Log(\"Radio is turned off.\");\n    }\n}\n```", "```cs\nclass Invoker\n{\n    private Command m_Command;\n\n    public void SetCommand(Command command)\n    {\n        m_Command = command;\n    }\n\n    public void ExecuteCommand()\n    {\n        m_Command.Execute();\n    }\n}\n```", "```cs\nusing UnityEngine;\n\npublic class Client : MonoBehaviour\n{\n    private RemoteControlDevice m_RadioReceiver;\n    private RemoteControlDevice m_TelevisionReceiver;\n    private RemoteControlDevice[] m_Devices = new RemoteControlDevice[2];\n\n    void Start()\n    {\n        m_RadioReceiver = new RadioReceiver();\n        m_TelevisionReceiver = new TelevisionReceiver();\n\n        m_Devices[0] = m_RadioReceiver;\n        m_Devices[1] = m_TelevisionReceiver;\n    }\n\n    void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.O))\n        {\n            Command commandTV = new TurnOnCommand(m_Devices[0]);\n            Command commandRadio = new TurnOnCommand(m_Devices[1]);\n\n            Invoker invoker = new Invoker();\n\n            invoker.SetCommand(commandTV);\n            invoker.ExecuteCommand();\n\n            invoker.SetCommand(commandRadio);\n            invoker.ExecuteCommand();\n        }\n\n        if (Input.GetKeyDown(KeyCode.K))\n        {\n            Command commandKill = new KillSwitchCommand(m_Devices);\n            Invoker invoker = new Invoker();\n            invoker.SetCommand(commandKill);\n            invoker.ExecuteCommand();\n        }\n    }\n}\n```"]