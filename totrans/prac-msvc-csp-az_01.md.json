["```cs\ndotnet workload install aspire\n```", "```cs\ndotnet workload list\n```", "```cs\ndotnet new aspire-starter -o AspireSample\n```", "```cs\nvar builder = DistributedApplication.CreateBuilder(args);\nvar apiService = builder.AddProject<Projects.AspireSample_ApiService>(\"apiservice\");\n// code removed for brevity\n```", "```cs\n// code removed for brevity\nbuilder.AddProject<Projects.AspireSample_Web>(\"webfrontend\")\n  .WithExternalHttpEndpoints()\n  .WithReference(apiService);\nbuilder.Build().Run();\n```", "```cs\npublic static class Extensions\n{\npublic static IHostApplicationBuilder AddServiceDefaults(this \n    IHostApplicationBuilder builder)\n  {\n    builder.ConfigureOpenTelemetry();\n    builder.AddDefaultHealthChecks();\n    builder.Services.AddServiceDiscovery();\n    builder.Services.ConfigureHttpClientDefaults(http =>\n    {\n      http.AddStandardResilienceHandler();\n      http.AddServiceDiscovery();\n    });\n    return builder;\n  }\n  // code removed for brevity\n```", "```cs\nbuilder.Services.AddHttpClient<WeatherApiClient>(client =>\n{\n  client.BaseAddress = new(\"https+http://apiservice\");\n});\n// code removed for brevity\n```", "```cs\n{\n  \"Services\": {\n    \"apiservice\": {\n      \"https\": [\n        \"localhost:8087\",\n        \"10.466.24.90:80\"\n      ]\n    }\n  }\n}\n```", "```cs\n\"profiles\": {\n  \"http\": {\n    \"commandName\": \"Project\",\n    \"dotnetRunMessages\": true,\n    \"launchBrowser\": true,\n    \"launchUrl\": \"weatherforecast\",\n    \"applicationUrl\": \"http://localhost:5395\",\n    \"environmentVariables\": {\n      \"ASPNETCORE_ENVIRONMENT\": \"Development\"\n    }\n  },\n  \"https\": {\n    \"commandName\": \"Project\",\n    \"dotnetRunMessages\": true,\n    \"launchBrowser\": true,\n    \"launchUrl\": \"weatherforecast\",\n    \"applicationUrl\": \"https://localhost:7313;http://localhost:5395\",\n    \"environmentVariables\": {\n      \"ASPNETCORE_ENVIRONMENT\": \"Development\"\n    }\n  }\n}\n```", "```cs\nvar apiService = builder.AddProject<Projects.AspireSample_ApiService>(\"apiservice\")\n  .WithReplicas(3);\n```", "```cs\ncd ApireSample.AppHost\ndotnet run --publisher manifest --output-path aspire-manifest.json\n```", "```cs\n\"webfrontend\": {\n  \"type\": \"project.v0\",\n  \"path\": \"../AspireSample.Web/AspireSample.Web.csproj\",\n  \"env\": {\n    \"services__apiservice__http__0\": \"{apiservice.bindings.http.url}\",\n    \"services__apiservice__https__0\": \"{apiservice.bindings.https.url}\"\n  },\n  \"bindings\": {\n    \"https\": {\n      \"scheme\": \"https\",\n      \"protocol\": \"tcp\",\n      \"transport\": \"http\",\n      \"external\": true\n    }\n  }\n}\n```", "```cs\nwinget install Microsoft.AzureCLI\nwinget install Microsoft.Azd\n```", "```cs\naz login\n```", "```cs\naz account show\n```", "```cs\ncd AspireSample.AppHost\ndotnet user-secrets init\n```", "```cs\ndotnet user-secrets set Azure:SubscriptionId <your subscription id>\ndotnet user-secrets set Azure:AllowResourceGroupCreation true\ndotnet user-secrets set Azure:ResourceGroup rg-firstsample\ndotnet user-secrets set Azure:Location westeurope\ndotnet user-secrets set Azure:CredentialSource AzureCli\n```", "```cs\ndotnet user-secrets list\n```", "```cs\nvar builder = DistributedApplication.CreateBuilder(args);\nvar keyVault = builder.AddAzureKeyVault(\"secrets\");\nvar apiService = builder.AddProject<Projects.AspireSample_ApiService>(\"apiservice\")\n  .WithReplicas(3)\n  .WithReference(keyVault);\n```"]