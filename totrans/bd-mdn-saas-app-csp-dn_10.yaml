- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Monitoring and Logging
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控和日志记录
- en: A typical **Software as a Service** (**SaaS**) application will cater to millions
    of users who access the platform around the clock. When unexpected issues arise,
    it can be incredibly difficult to diagnose, recreate, and resolve these problems.
    Monitoring and logging are essential tools that can address this challenge by
    providing invaluable insights into the health and performance of applications
    that are running in production environments and being used for real.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 一个典型的**软件即服务**（**SaaS**）应用将服务于数百万用户，他们全天候访问该平台。当意外问题出现时，诊断、重现和解决这些问题可能极其困难。监控和日志记录是解决这一挑战的关键工具，它们通过提供对在生产环境中运行并被实际使用的应用程序的健康和性能的宝贵见解。
- en: Monitoring focuses on proactively observing the system’s health and performance
    by collecting and analyzing key metrics in real time. This is a “top-down” view
    of the overall health of the entire system, including things such as resource
    utilization. This process enables developers to identify potential issues, optimize
    resource utilization, and maintain a seamless user experience. Technologies such
    as Application Insights and Azure Monitor offer tailored solutions to effectively
    implement monitoring strategies in SaaS applications, ensuring reliability and
    high performance.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 监控侧重于通过实时收集和分析关键指标来主动观察系统的健康和性能。这是一个“自上而下”的视角，涵盖了整个系统的整体健康状况，包括资源利用率等方面。这个过程使开发者能够识别潜在问题，优化资源利用率，并保持无缝的用户体验。例如，应用洞察和应用Azure
    Monitor等技术提供定制解决方案，以有效地在SaaS应用中实施监控策略，确保可靠性和高性能。
- en: Conversely, logging is vital for capturing a wide range of events occurring
    within an application. Logging is a bit more fine-grained than monitoring, and
    will generally capture issues and events that have occurred in the code of the
    application. Detailed information about errors, user actions, and system events
    allows developers to effectively diagnose and troubleshoot issues while maintaining
    a comprehensive audit trail for security and compliance purposes. By leveraging
    logging libraries, developers can seamlessly integrate logging into their SaaS
    applications.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，日志记录对于捕捉应用程序内部发生的广泛事件至关重要。日志记录比监控更细致，通常捕获应用程序代码中发生的问题和事件。关于错误、用户操作和系统事件的详细信息，使开发者能够有效地诊断和解决问题，同时为安全和合规目的维护全面的审计跟踪。通过利用日志库，开发者可以无缝地将日志集成到他们的SaaS应用程序中。
- en: 'This chapter will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Monitoring
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控
- en: Logging
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志记录
- en: Monitoring and logging considerations for SaaS applications
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SaaS应用的监控和日志记录考虑因素
- en: This chapter delves into monitoring and logging within the context of SaaS applications,
    highlighting the unique challenges and considerations that arise. Practical guidance
    will be provided to help implement efficient monitoring and logging strategies,
    helping developers of SaaS applications to maintain a high-performing and reliable
    application.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章深入探讨了SaaS应用环境下的监控和日志记录，突出了由此产生的独特挑战和考虑因素。将提供实用指南，帮助实施高效的监控和日志记录策略，帮助SaaS应用的开发者维护高性能和可靠的应用程序。
- en: Let’s start with an overview of both, and then move on to looking at them each
    in more detail.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从两者的概述开始，然后更详细地探讨它们。
- en: Overview
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: Both monitoring and logging are tools that you can use to see how your SaaS
    application is performing. Because a SaaS application typically has many moving
    parts, getting an overall view of the system health can be very tricky and can
    involve a number of different skill sets.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 监控和日志记录都是你可以用来查看你的SaaS应用性能的工具。由于SaaS应用通常有许多动态部分，获得整个系统的健康状况的整体视图可能非常困难，可能涉及多种不同的技能集。
- en: 'For example, if a user reports that the application is “slow,” this could be
    caused by the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果用户报告应用程序“运行缓慢”，这可能是以下原因造成的：
- en: The user’s personal computer or network being slow, in which case there is nothing
    that we can do about it!
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户的个人电脑或网络运行缓慢，在这种情况下，我们对此无能为力！
- en: The network connection to the cloud services being slow, in which case we need
    a network specialist to resolve it, and probably assistance from the network provider
    to increase the bandwidth.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到云服务的网络连接缓慢，在这种情况下，我们需要网络专家来解决，可能还需要网络提供商的帮助来增加带宽。
- en: The API could be having trouble handling multiple concurrent requests, in which
    case we would need a backend developer to identify and DevOps specialists to correctly
    scale the API.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: API可能难以处理多个并发请求，在这种情况下，我们需要后端开发者来识别问题，以及DevOps专家来正确扩展API。
- en: The UI could be making very inefficient requests to the API, resulting in slow
    performance. This would require a coordinated effort from a frontend and a backend
    developer to resolve.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户界面可能对API进行了非常低效的请求，导致性能缓慢。这需要前端和后端开发者的协调努力来解决。
- en: The database could be the bottleneck. Perhaps the indexing on the database is
    insufficient, and so a **Database Administrator** (**DBA**) is required to identify
    and correct the issue.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库可能是瓶颈。也许数据库的索引不足，因此需要**数据库管理员**（**DBA**）来识别和纠正问题。
- en: I could continue! Diagnosing customer issues in SaaS applications can be extremely
    difficult and it can require a wide array of specialists to identify and resolve
    the problem.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以继续！在SaaS应用程序中诊断客户问题可能非常困难，并且可能需要广泛的专家来识别和解决问题。
- en: When the app is running in production, the developers of the app have very little
    insight into any issues that arise in the application, and so typically, monitoring
    and logging techniques are used to keep track of what is happening in real time.
    Without these tools, diagnosing issues in production apps is little more than
    guesswork and is a hugely time-consuming and frustrating exercise.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用程序在生产环境中运行时，应用程序的开发者对应用程序中出现的任何问题了解非常有限，因此通常使用监控和日志记录技术来实时跟踪发生的情况。没有这些工具，诊断生产应用程序中的问题几乎完全是猜测，并且是一个耗时且令人沮丧的练习。
- en: As a very broad overview, we could say that both monitoring and logging give
    an insight into what is happening when an application is running in production.
    These insights are used by the developers and maintenance teams to more quickly
    diagnose and correct user issues as they arise.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '从一个非常广泛的概述来看，我们可以说监控和日志记录都能让我们了解当应用程序在生产环境中运行时发生了什么。这些洞察力被开发者和维护团队用来更快地诊断和纠正用户问题。 '
- en: However, that is a little high level, so we will dig in a bit deeper!
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这有点过于宏观，所以我们将深入探讨一些细节！
- en: Monitoring generally focuses on the overall health and performance of the application
    and its components from an external perspective, including app services, networking,
    and databases. It provides a high-level view of the system’s operation and identifies
    potential issues and bottlenecks. Monitoring is generally proactive and can be
    used to identify issues before they arise, such as a storage device running out
    of space or the available bandwidth starting to approach its limit. You can think
    of monitoring as a top-down process that is outside of the application looking
    in. Monitoring is outside looking in.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 监控通常从外部视角关注应用程序及其组件的整体健康和性能，包括应用程序服务、网络和数据库。它提供了系统操作的概览，并识别潜在的问题和瓶颈。监控通常是主动的，可以用来在问题出现之前识别问题，例如存储设备空间不足或可用带宽开始接近其限制。你可以把监控看作是一个自上而下的过程，它是从应用程序外部向内看的。监控是从外部向内部看。
- en: Logging, on the other hand, is more focused on capturing detailed information
    about the events, errors, and transactions occurring within the application code
    itself. This detailed data helps developers to diagnose, troubleshoot, and understand
    specific issues related to the application’s inner workings. So, while monitoring
    offers a broader, outside-in perspective, logging delves into the finer aspects
    of the application code and records its behavior. Logging is always retroactive.
    It is a store of things that have already happened in the application. You can
    think of logging as a more fine-grained process that is backed up in the application,
    reporting events and actions to some external store of such actions. Logging is
    inside looking out.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，日志记录更侧重于捕获关于应用程序代码内部发生的事件、错误和事务的详细信息。这些详细数据有助于开发者诊断、排除故障和理解与应用程序内部工作相关的特定问题。因此，虽然监控提供了一个更广泛的从外向内的视角，但日志记录深入到应用程序代码的细微之处，并记录其行为。日志记录总是回顾性的。它是存储应用程序中已经发生的事情的地方。你可以把日志记录看作是一个更精细的过程，它在应用程序中得到备份，向某些外部存储此类动作的存储库报告事件和动作。日志记录是从内部向外看。
- en: 'The following table shows the difference between monitoring and logging:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了监控和日志记录之间的区别：
- en: '| **Monitoring** | **Logging** |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| **监控** | **日志记录** |'
- en: '| Real-time observation of performance and resource usage | Recording of events,
    errors, and transactions |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 实时观察性能和资源使用 | 记录事件、错误和事务 |'
- en: '| Focus on system health and availability | Focus on detailed information and
    audit trails |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 关注系统健康和可用性 | 关注详细信息和审计跟踪 |'
- en: '| Proactive detection of anomalies and potential issues | Retrospective analysis
    of historical data |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| 主动检测异常和潜在问题 | 对历史数据的回顾性分析 |'
- en: '| Optimization of resource utilization | Diagnosis and troubleshooting of application
    issues |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| 优化资源利用率 | 应用程序问题的诊断和故障排除 |'
- en: '| High-level view of application components | In-depth understanding of application
    code behavior |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 应用程序组件的高级视图 | 应用程序代码行为的深入了解 |'
- en: '| Outside looking in | Inside looking out |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| 从外部看内部 | 从内部看外部 |'
- en: Table 10.1 – Difference between monitoring and logging
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 表10.1 – 监控与日志记录的区别
- en: You can see that while the two topics are related, there are quite significant
    differences between the function and purpose of each. We will now look at both
    in detail, starting with monitoring.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到，虽然这两个主题相关，但每个主题的功能和目的之间存在着相当大的差异。我们现在将详细探讨这两个主题，从监控开始。
- en: Monitoring
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控
- en: '**Monitoring** is the process of continuously observing and measuring various
    aspects of a system, such as performance, resource utilization, and availability,
    to ensure its optimal functioning and identify potential issues. In the context
    of SaaS applications, monitoring involves the collection and analysis of key metrics
    and events in real time, allowing developers to proactively detect anomalies,
    optimize resources, and maintain a seamless and reliable user experience.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**监控**是指持续观察和测量系统的各个方面，如性能、资源利用率和可用性，以确保其最佳运行并识别潜在问题。在SaaS应用程序的背景下，监控涉及实时收集和分析关键指标和事件，使开发者能够主动检测异常、优化资源并保持无缝且可靠的用户体验。'
- en: Monitoring is a critical aspect of maintaining the health and performance of
    SaaS applications. In an environment where millions of users access the platform
    24 hours a day, performing a wide range of actions, proactive observation of the
    system becomes essential. This section will explore the key concepts, tools, and
    strategies for implementing effective monitoring in SaaS applications.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 监控是维护SaaS应用程序健康和性能的关键方面。在一个每天24小时有数百万用户访问平台，执行各种操作的环境中，主动观察系统变得至关重要。本节将探讨实施有效监控在SaaS应用程序中的关键概念、工具和策略。
- en: Key aspects of monitoring
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 监控的关键方面
- en: 'There are a few key considerations to keep in mind when building a monitoring
    system for your application:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在为您的应用程序构建监控系统时，有几个关键考虑因素需要记住：
- en: Performance metrics are crucial for gauging the responsiveness and efficiency
    of a SaaS application. These metrics can include response times, throughput, error
    rates, and latency, among others. By closely monitoring these parameters, developers
    can identify bottlenecks and areas for optimization, ensuring a smooth and satisfying
    user experience.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能指标对于衡量SaaS应用程序的响应性和效率至关重要。这些指标可以包括响应时间、吞吐量、错误率和延迟等。通过密切监控这些参数，开发者可以识别瓶颈和优化区域，确保流畅且令人满意的用户体验。
- en: Resource utilization monitoring involves keeping track of how the application
    consumes system resources such as CPU, memory, disk space, and network bandwidth.
    By monitoring resource consumption, developers can detect and prevent issues related
    to resource contention or exhaustion, which can negatively impact the performance
    and stability of the application. This insight also aids in making informed decisions
    about scaling and infrastructure management. In the cloud-first world we now work
    in, resource utilization has a significant cost to the business, and so it is
    now even more important to have a handle on this at all times.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源利用率监控涉及跟踪应用程序如何消耗系统资源，例如CPU、内存、磁盘空间和网络带宽。通过监控资源消耗，开发者可以检测和预防与资源竞争或耗尽相关的问题，这些问题可能会对应用程序的性能和稳定性产生负面影响。这种洞察力还有助于做出关于扩展和基础设施管理的明智决策。在我们现在工作的以云为先的世界中，资源利用率对企业的成本有显著影响，因此现在在所有时候都掌握这一点变得更加重要。
- en: Application availability and health monitoring focus on assessing the operational
    state of the application and its components. This includes monitoring the uptime,
    error rates, and performance of individual services or components within the system.
    By tracking the health of the application, developers can proactively detect and
    address issues before they escalate, minimizing downtime and maintaining a high
    level of service for users.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序可用性和健康监控侧重于评估应用程序及其组件的运行状态。这包括监控系统的正常运行时间、错误率和单个服务或组件的性能。通过跟踪应用程序的健康状况，开发者可以主动检测并解决问题，在问题升级之前进行干预，最小化停机时间并保持对用户的高服务水平。
- en: Long-term trends and capacity planning involve analyzing historical monitoring
    data over a period of time to identify patterns and forecast future system requirements.
    By understanding trends in user growth, resource consumption, and performance
    metrics, developers can make informed decisions about infrastructure investments,
    optimize resources, and prepare the application for increased demand. This foresight
    enables SaaS providers to deliver a consistently reliable and performant service,
    even as user bases and workloads evolve over time.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 长期趋势和容量规划涉及分析一段时间内的历史监控数据，以识别模式和预测未来的系统需求。通过了解用户增长、资源消耗和性能指标的趋势，开发者可以做出关于基础设施投资的明智决策，优化资源，并为增加的需求准备应用程序。这种前瞻性使SaaS提供商能够提供始终如一可靠且性能良好的服务，即使随着时间的推移，用户基础和工作负载发生变化。
- en: If you keep these four key considerations in mind, you should be well on your
    way to delivering a successful monitoring system for your SaaS application. Of
    course, there is more to it than that! So, we’ll now take a look at some nuances
    that you may encounter as a SaaS developer.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您牢记这四个关键考虑因素，您应该已经朝着为您的SaaS应用程序提供成功的监控系统迈出了坚实的步伐。当然，这不仅仅是这些！因此，我们现在将探讨作为SaaS开发者可能会遇到的某些细微差别。
- en: Monitoring tools
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 监控工具
- en: We have discussed the importance of monitoring your SaaS application. We will
    now look at the tools that you can use to perform this important task.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了监控您的SaaS应用程序的重要性。现在，我们将探讨您可以使用哪些工具来完成这项重要任务。
- en: 'In general, it is advisable to use an “off-the-shelf” monitoring solution rather
    than trying to custom-build this functionality. The monitoring tool can be as
    complex as the application that it is monitoring! These tools provide a highly
    specialized function, which is generally better left to specialists to implement.
    There are many different options for monitoring, but in general, a good monitoring
    tool should provide the following functionalities:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，建议使用现成的监控解决方案，而不是尝试自定义构建此功能。监控工具可以与其监控的应用程序一样复杂！这些工具提供高度专业化的功能，通常最好留给专业人士来实现。监控有许多不同的选项，但一般来说，一个好的监控工具应该提供以下功能：
- en: '**Collect and display relevant data**: These are the absolute basics of monitoring!
    A good monitoring tool should be able to collect and display a wide range of relevant
    data, including server performance metrics, application-specific metrics, and
    user behavior data.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**收集和显示相关数据**：这些都是监控的绝对基础！一个好的监控工具应该能够收集和显示各种相关数据，包括服务器性能指标、特定于应用程序的指标和用户行为数据。'
- en: '**Provide real-time monitoring**: Real-time monitoring is crucial to quickly
    detect and respond to issues as they arise. A good monitoring tool should be able
    to provide real-time updates on the status and performance of your application,
    viewable via a dashboard or something similar.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提供实时监控**：实时监控对于快速检测和响应出现的问题至关重要。一个好的监控工具应该能够提供关于您应用程序状态和性能的实时更新，这些更新可以通过仪表板或其他类似方式查看。'
- en: '**Alert and notify**: The tool should be able to alert and notify you when
    issues are detected, via methods such as email, SMS, or chat tools such as Slack.
    It is not reasonable to expect a team member to keep an eye on the dashboard 24
    hours a day, so an alert system can be used to inform the team that something
    has gone wrong. The tool should also provide customizable alert thresholds so
    that you can set the appropriate level of urgency for different types of issues.
    This is important as frequent non-important error messaging will result in people
    ignoring all of the messages, and so miss the important ones.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**警报和通知**：当检测到问题时，工具应该能够通过电子邮件、短信或Slack等聊天工具等方式进行警报和通知。期望团队成员全天候监控仪表板是不合理的，因此警报系统可以用来通知团队有问题发生。工具还应提供可定制的警报阈值，以便您可以设置不同类型问题的适当紧急程度。这很重要，因为频繁的非重要错误消息会导致人们忽略所有消息，从而错过重要的消息。'
- en: '**Enable proactive monitoring**: In addition to reacting to issues as they
    occur, a good monitoring tool should enable proactive monitoring by providing
    insights into potential issues before they impact your users. This can be achieved
    through features such as predictive analytics and trend analysis, allowing the
    team to act in advance to prevent issues before they arise.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用主动监控**：除了对发生的问题做出反应外，一个好的监控工具还应通过在问题影响用户之前提供对潜在问题的洞察来启用主动监控。这可以通过预测分析和趋势分析等特性实现，使团队能够提前采取行动，防止问题发生。'
- en: '**Support customization**: No two SaaS applications are the same, so the tool
    should allow for a high level of customization and configuration to meet the specific
    needs of your application. This includes the ability to create custom dashboards
    and reports, as well as integrating them with other tools and systems – particularly
    logging systems, which we will cover later in this chapter.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**支持定制化**：没有两个SaaS应用是完全相同的，因此工具应该允许高度定制和配置，以满足您应用的具体需求。这包括创建自定义仪表板和报告的能力，以及将它们与其他工具和系统（尤其是我们将在本章后面讨论的日志系统）集成。'
- en: '**Provide scalability and reliability**: A good monitoring tool should be able
    to handle large amounts of data and provide reliable performance even under high
    loads. It should also be able to scale up or down as needed to accommodate changes
    in your application’s usage patterns.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提供可扩展性和可靠性**：一个好的监控工具应该能够处理大量数据，并在高负载下提供可靠的性能。它还应该能够根据需要向上或向下扩展，以适应您应用使用模式的变化。'
- en: '**Facilitate collaboration**: A good monitoring tool should facilitate collaboration
    between different teams and stakeholders involved in maintaining and improving
    your application. As an application grows, there will be multiple teams interested
    in the different aspects of the application’s overall health. Each of these user
    classes should be able to get what it needs from the monitoring tool, by making
    use of features such as role-based access control and the ability to share dashboards
    and reports.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**促进协作**：一个好的监控工具应该促进维护和改进您应用的各个团队和利益相关者之间的协作。随着应用的增长，将有多个团队对应用整体健康状况的不同方面感兴趣。每个用户类别都应能够通过使用基于角色的访问控制功能和共享仪表板和报告的能力，从监控工具中获得所需的信息。'
- en: It is very hard to recommend a specific tool to use for monitoring, as the best
    choice will depend on the tech stack that is being implemented. Given that this
    book is focusing on .NET and the Microsoft tech stack, it is probably safe to
    say that Azure-based systems such as Application Insights or Azure Monitor will
    be the most useful.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐使用特定的监控工具非常困难，因为最佳选择将取决于正在实施的技术堆栈。鉴于本书专注于.NET和Microsoft技术堆栈，可以说基于Azure的系统，如应用洞察或Azure
    Monitor，将是最有用的。
- en: 'Here is a list of some commonly used monitoring tools that you may wish to
    consider. Note that there is some overlap here with tools for logging, as we will
    see later in this chapter:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些常用的监控工具列表，您可能希望考虑。请注意，这里有一些与日志记录工具的重叠，正如我们将在本章后面看到的：
- en: '**Application Insights**: A Microsoft Azure-based monitoring service that provides
    comprehensive application performance monitoring and diagnostics for .NET applications.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用洞察**：一个基于Microsoft Azure的监控服务，为.NET应用提供全面的应用性能监控和诊断。'
- en: '**Azure Monitor**: A Microsoft Azure service for collecting, analyzing, and
    acting on telemetry data from various Azure and on-premises resources, including
    application and infrastructure monitoring.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Monitor**：一个 Microsoft Azure 服务，用于收集、分析和对来自各种 Azure 和本地资源的遥测数据进行操作，包括应用程序和基础设施监控。'
- en: '**Datadog**: A cloud-based monitoring and analytics platform that provides
    full stack observability across applications, infrastructure, and cloud services.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Datadog**：一个基于云的监控和分析平台，提供跨应用程序、基础设施和云服务的全栈可观察性。'
- en: '**New Relic**: A comprehensive application performance monitoring and management
    platform, offering real-time visibility into the performance and health of applications
    and infrastructure.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**New Relic**：一个全面的应用性能监控和管理平台，提供对应用程序和基础设施性能和健康状况的实时可见性。'
- en: '**Prometheus**: An open source monitoring and alerting toolkit, primarily designed
    for reliability and scalability, often used with container orchestration systems
    such as Kubernetes.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Prometheus**：一个开源的监控和警报工具包，主要设计用于可靠性和可扩展性，通常与 Kubernetes 等容器编排系统一起使用。'
- en: '**Grafana**: A popular open source visualization and analytics platform that
    allows users to create and share interactive dashboards and alerts using data
    from various monitoring tools.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Grafana**：一个流行的开源可视化和分析平台，允许用户使用来自各种监控工具的数据创建和共享交互式仪表板和警报。'
- en: '**Elasticsearch**, **Logstash**, **Kibana (ELK) Stack**: A popular open source
    log management and analytics platform that combines Elasticsearch for search and
    analytics, Logstash for log processing, and Kibana for data visualization.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Elasticsearch**、**Logstash**、**Kibana (ELK 堆栈)**：一个流行的开源日志管理和分析平台，结合了 Elasticsearch
    用于搜索和分析、Logstash 用于日志处理和 Kibana 用于数据可视化。'
- en: How to do this
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点
- en: 'We have talked a lot about the tools that we could use for this, but not so
    much about how to actually do it! Here’s a list of steps that you may want to
    consider when setting up a monitoring strategy. Remember, monitoring is “outside
    looking in”:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了很多可用于此目的的工具，但并没有太多关于如何实际操作的讨论！以下是一份您在设置监控策略时可能想要考虑的步骤列表。记住，监控是“从外部看内部”：
- en: Define the metrics that are important for your specific application. There is
    no one-size-fits-all here; you will need to look carefully at what information
    may come in handy for your application.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义对您的特定应用程序重要的指标。这里没有一刀切的方法；您需要仔细考虑哪些信息可能对您的应用程序有用。
- en: Pick a tool. Again, there is no one “best” tool to use. Study the options available
    to you and decide which one is most applicable. These tools are typically paid-for
    services, so create an invoice and purchase the tool.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个工具。再次强调，没有一种“最佳”的工具可以使用。研究您可用的选项，并决定哪个最适合。这些工具通常是付费服务，因此创建发票并购买工具。
- en: Configure the monitoring tool to collect the defined metrics. Depending on the
    tool you chose, this may involve installing agents on your servers, configuring
    API integrations, or setting up custom scripts.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置监控工具以收集定义的指标。根据您选择的工具，这可能涉及在您的服务器上安装代理、配置 API 集成或设置自定义脚本。
- en: Set up appropriate thresholds, alerts, and notifications for the metrics you’re
    monitoring. This will help you proactively detect anomalies, performance issues,
    or potential bottlenecks before they impact your users.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您监控的指标设置适当的阈值、警报和通知。这将帮助您在这些问题影响用户之前，主动检测异常、性能问题或潜在的瓶颈。
- en: Integrate your monitoring tool with your existing development and operations
    workflows, such as your issue-tracking system, CI/CD pipelines, and communication
    platforms. This will ensure that your team is promptly informed of any issues
    and can take action immediately.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的监控工具与现有的开发和运维工作流程集成，例如您的缺陷跟踪系统、CI/CD 管道和通信平台。这将确保您的团队能够及时了解任何问题，并立即采取行动。
- en: Continuously review and refine your monitoring strategy as your application
    evolves. As new features are added, performance requirements change, or user expectations
    grow, you may need to adjust your monitoring approach accordingly.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随着应用程序的发展，持续审查和改进您的监控策略。随着新功能的添加、性能要求的改变或用户期望的增长，您可能需要相应地调整您的监控方法。
- en: Regularly analyze the collected monitoring data to identify trends, patterns,
    and potential areas for optimization. This will help you make informed decisions
    about your application’s architecture, resource allocation, and future development
    priorities.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定期分析收集到的监控数据，以识别趋势、模式和潜在的优化区域。这将帮助您就应用程序的架构、资源分配和未来的开发优先级做出明智的决策。
- en: By following these steps and tailoring your monitoring strategy to the unique
    needs of your SaaS application, you’ll be well equipped to maintain a reliable,
    high-performing, and resilient platform for your users.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循这些步骤并根据您SaaS应用程序的独特需求定制监控策略，您将充分准备，以维护一个可靠、高性能和具有弹性的平台，为您的用户提供服务。
- en: Best practices for monitoring
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 监控最佳实践
- en: 'Monitoring can be challenging for any application, and the complexity increases
    significantly in the context of SaaS applications. In this section, we will explore
    a set of best practices tailored to effectively monitor SaaS applications to give
    you the best chance of success:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 监控对于任何应用程序来说都可能具有挑战性，在SaaS应用程序的背景下，复杂性显著增加。在本节中，我们将探讨一系列针对有效监控SaaS应用程序的最佳实践，以提高您成功的可能性：
- en: '**Defining relevant metrics and thresholds**: When monitoring SaaS applications
    built with Microsoft technologies, it’s essential to define relevant metrics and
    thresholds that accurately represent the application’s health and performance.
    This may include metrics such as response times, error rates, resource utilization,
    and throughput. Establishing appropriate thresholds for these metrics will help
    you identify potential issues before they escalate and affect the user experience.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定义相关指标和阈值**：在监控使用微软技术构建的SaaS应用程序时，定义准确反映应用程序健康和性能的相关指标和阈值至关重要。这可能包括响应时间、错误率、资源利用率和吞吐量等指标。为这些指标建立适当的阈值将帮助您在问题升级并影响用户体验之前发现潜在问题。'
- en: '**Implementing proactive monitoring and alerting**: Proactive monitoring involves
    continuously observing your application’s performance and health, allowing you
    to detect issues early and take corrective action. With Microsoft technologies,
    tools such as Application Insights and Azure Monitor can be used to set up proactive
    monitoring and alerting. By configuring alerts based on predefined thresholds,
    you can ensure that your team is notified of potential issues as soon as they
    arise, minimizing downtime and maintaining a high-quality user experience.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实施主动监控和警报**：主动监控涉及持续观察应用程序的性能和健康，让您能够及早发现问题并采取纠正措施。利用微软技术，可以使用Application
    Insights和Azure Monitor等工具设置主动监控和警报。通过根据预定义的阈值配置警报，您可以在问题出现时立即通知您的团队，最小化停机时间并保持高质量的用户体验。'
- en: '**Ensuring data privacy and compliance in multi-tenant environments**: SaaS
    applications often serve multiple tenants within a single application instance,
    raising data privacy and compliance concerns. When monitoring multi-tenant applications,
    it’s crucial to maintain appropriate data isolation and ensure that tenant-specific
    performance data is not accessible to other tenants. Microsoft technologies, such
    as Azure Monitor, can help you implement tenant-specific monitoring while adhering
    to privacy and compliance requirements.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**确保多租户环境中的数据隐私和合规性**：SaaS应用程序通常在单个应用程序实例中为多个租户提供服务，这引发了数据隐私和合规性问题。在监控多租户应用程序时，保持适当的数据隔离并确保租户特定的性能数据不可访问给其他租户至关重要。例如，Azure
    Monitor等微软技术可以帮助您在遵守隐私和合规要求的同时实施租户特定的监控。'
- en: '**Integrating monitoring data with logging and other diagnostic tools**: Monitoring
    and logging complement each other by providing different insights into your application’s
    performance and health. Integrating monitoring data with logging and other diagnostic
    tools can help you gain a comprehensive understanding of your application’s behavior
    and identify the root causes of issues more effectively. Tools such as Application
    Insights and Azure Monitor can be integrated with logging platforms such as ELK
    Stack or Azure Log Analytics, enabling you to correlate monitoring and log data
    for deeper analysis.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**将监控数据与日志和其他诊断工具集成**：监控和日志通过提供对应用程序性能和健康的不同见解而相互补充。将监控数据与日志和其他诊断工具集成可以帮助您更全面地了解应用程序的行为，并更有效地识别问题的根本原因。例如，Application
    Insights和Azure Monitor等工具可以与ELK Stack或Azure Log Analytics等日志平台集成，使您能够关联监控和日志数据以进行更深入的分析。'
- en: '**Alerting and notifications in monitoring**: In addition to collecting and
    analyzing monitoring data, it’s crucial to establish an effective alerting and
    notification system for your SaaS application. Alerting involves configuring predefined
    thresholds for relevant metrics, and when these thresholds are breached, notifications
    are sent to the appropriate team members, allowing them to respond quickly and
    mitigate any potential impact on the user experience. Microsoft technologies,
    such as Application Insights and Azure Monitor, offer robust alerting capabilities
    that can be customized to match your application’s unique needs. By integrating
    these alerting features with communication tools, such as email, SMS, or collaboration
    platforms such as Microsoft Teams or Slack, you can ensure that your team stays
    informed of any critical issues and can take timely action to resolve them.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控中的警报和通知**：除了收集和分析监控数据外，为您的SaaS应用建立有效的警报和通知系统至关重要。警报涉及为相关指标配置预定义的阈值，当这些阈值被突破时，通知会被发送给适当的团队成员，使他们能够快速响应并减轻对用户体验的潜在影响。例如，Microsoft的技术，如Application
    Insights和Azure Monitor，提供了强大的警报功能，可以根据您应用的独特需求进行定制。通过将这些警报功能与通信工具（如电子邮件、短信或协作平台，如Microsoft
    Teams或Slack）集成，您可以确保您的团队能够了解任何关键问题，并能够及时采取行动解决这些问题。'
- en: '**Continuously refining and improving monitoring strategies**: Monitoring strategies
    should evolve alongside your application, as requirements and performance goals
    change over time. Continuously reviewing and refining your monitoring strategies
    ensures that you remain focused on the most relevant metrics and can proactively
    address emerging issues. By leveraging the insights and analytics provided by
    monitoring tools such as Application Insights and Azure Monitor, you can continuously
    improve your monitoring approach and maintain a high-performing, reliable SaaS
    application.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续优化和改进监控策略**：随着应用需求和时间推移，监控策略应与您的应用同步发展。持续审查和优化您的监控策略确保您始终关注最相关的指标，并能够主动解决新兴问题。通过利用Application
    Insights和Azure Monitor等监控工具提供的洞察力和分析，您可以持续改进您的监控方法，并保持高性能、可靠的SaaS应用。'
- en: In this section, we have looked at the reason for monitoring in the first place,
    considered its applicability to SaaS applications, looked at the available tools,
    and considered the best practices. We’ll now move on to think about logging.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们首先探讨了监控的初衷，考虑了其在SaaS应用中的适用性，审视了可用的工具，并讨论了最佳实践。现在，我们将转向思考日志记录。
- en: Logging
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**日志记录**'
- en: '**Logging**, in contrast to monitoring, focuses on capturing detailed information
    about the events, user actions, and system behavior within your application. While
    monitoring provides a high-level view of your application’s performance and health,
    logging allows you to dive deeper into specific events and occurrences, enabling
    effective troubleshooting and maintaining a comprehensive audit trail for security
    and compliance purposes.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**日志记录**：与监控相比，日志记录侧重于捕获关于应用内部事件、用户行为和系统行为的详细信息。虽然监控提供了对应用性能和健康状况的高级视图，但日志记录允许您深入了解特定事件和发生情况，从而实现有效的故障排除并维护全面的审计记录，以用于安全和合规目的。'
- en: Logging is the practice of capturing and recording detailed information about
    events, errors, and user actions that occur within a system, providing developers
    with valuable insights for troubleshooting and diagnosing issues. While monitoring
    focuses on the real-time observation of system health and performance, logging
    is more concerned with maintaining a comprehensive record of application events
    and activities for future analysis.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 日志记录是捕获和记录系统内部发生的事件、错误和用户行为的详细信息的实践，为开发者提供了宝贵的洞察力，用于故障排除和诊断问题。虽然监控侧重于对系统健康和性能的实时观察，但日志记录更关注于维护应用事件和活动的全面记录，以便未来分析。
- en: Logging plays an indispensable role in maintaining and improving SaaS applications,
    as it allows developers to understand the intricate interactions and processes
    occurring within the application. With millions of users constantly interacting
    with the platform, having a detailed log of system events becomes crucial for
    identifying the root cause of issues and ensuring smooth operation. This section
    will delve into the key concepts, tools, and techniques for implementing effective
    logging in SaaS applications. By employing logging practices tailored to the unique
    requirements of SaaS environments, developers can enhance their ability to diagnose
    and resolve issues, maintain a robust audit trail for security and compliance
    purposes, and ultimately deliver a reliable and high-performing service to their
    users.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 日志在维护和改进SaaS应用程序中发挥着不可或缺的作用，因为它允许开发者理解应用程序内部发生的复杂交互和过程。随着数百万用户持续与平台互动，拥有详细的系统事件日志对于确定问题的根本原因和确保平稳运行变得至关重要。本节将深入探讨实施有效的SaaS应用程序日志记录的关键概念、工具和技术。通过采用针对SaaS环境独特需求的日志实践，开发者可以增强其诊断和解决问题的能力，维护强大的审计跟踪以符合安全和合规要求，并最终向用户提供可靠且性能卓越的服务。
- en: Key aspects of logging
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志的关键方面
- en: In this section, we will examine the key aspects of logging that are essential
    for implementing a comprehensive and effective logging strategy in SaaS applications,
    enabling developers to gain valuable insights, maintain robust audit trails, and
    ensure optimal application performance.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨实施全面有效的SaaS应用程序日志策略的关键方面，使开发者能够获得宝贵的见解，维护强大的审计跟踪，并确保应用程序性能最优化。
- en: The basis of any logging system is the ability to collect information from various
    sources, such as applications, databases, and a collection of microservices or
    containers. The ability to do this efficiently is the foundation of any successful
    logging strategy. A well-designed log collection system should be able to handle
    the diverse types and volumes of log data generated by your application while
    minimizing the impact on application performance. Ensure that all relevant log
    data is captured and available for analysis.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 任何日志系统的基本是能够从各种来源收集信息，例如应用程序、数据库以及一组微服务或容器。高效执行此操作的能力是任何成功日志策略的基础。一个设计良好的日志收集系统应该能够处理由您的应用程序生成的各种类型和数量的日志数据，同时最大限度地减少对应用程序性能的影响。确保所有相关的日志数据都被捕获并可用于分析。
- en: Once log data has been collected, it needs to be stored in a centralized and
    easily accessible location. Effective log storage strategies focus on data retention,
    ensuring that log data is preserved for an appropriate length of time and can
    be quickly retrieved when needed. Scalability is also a crucial consideration,
    as log storage systems must be able to grow to accommodate increasing data volumes
    as your SaaS application expands. Do not underestimate the amount of data that
    can be collected by the logging system! Plan accordingly, as the data can be very
    expensive to store in cloud infrastructure.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦收集到日志数据，就需要将其存储在集中且易于访问的位置。有效的日志存储策略侧重于数据保留，确保日志数据能够保存适当的时间长度，并在需要时能够快速检索。可扩展性也是一个至关重要的考虑因素，因为日志存储系统必须能够随着你的SaaS应用程序的扩展而增长，以适应不断增长的数据量。不要低估日志系统可以收集的数据量！相应地规划，因为数据在云基础设施中的存储可能非常昂贵。
- en: There is no point in gathering and storing the data if it is hard to get any
    usable information out of the logs. A system should be in place to allow relevant
    parties to read and analyze the log data to identify patterns, trends, and anomalies.
    This can help developers diagnose and troubleshoot issues more effectively, optimize
    resource utilization, and even identify potential security threats – hopefully
    before they have occurred! To facilitate quick insights and decision-making, it’s
    important to present log data in an easily digestible format, such as as charts,
    graphs, and dashboards. Log visualization tools such as Kibana, Grafana, and Azure
    Monitor can help transform raw log data into meaningful visual representations,
    making it easier for developers and operations teams to understand the state of
    the application and identify areas for improvement. These tools can also be customized
    to create tailored visualizations that highlight the most relevant information
    for your specific SaaS application.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果难以从日志中提取任何可用的信息，那么收集和存储数据就毫无意义。应建立一个系统，允许相关方阅读和分析日志数据，以识别模式、趋势和异常。这可以帮助开发者更有效地诊断和排除问题，优化资源利用，甚至识别潜在的安全威胁——希望是在它们发生之前！为了促进快速洞察和决策，以图表、图形和仪表板等易于消化的格式呈现日志数据非常重要。Kibana、Grafana和Azure
    Monitor等日志可视化工具可以帮助将原始日志数据转换为有意义的视觉表示，使开发者和运维团队能够更容易地了解应用程序的状态并识别改进领域。这些工具还可以根据您的特定SaaS应用程序定制，以突出显示最相关的信息。
- en: With the vast amounts of log data generated by SaaS applications, it’s essential
    to filter out irrelevant or noisy log data and focus on the most critical and
    actionable information. Log-filtering techniques can be employed at various stages
    of the logging process, from collection to analysis, to help reduce noise and
    improve the signal-to-noise ratio. By implementing effective log-filtering strategies,
    developers can save time and resources by concentrating on the most pertinent
    log data and ensuring that important events do not get lost in the noise.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 随着SaaS应用程序产生的日志数据量巨大，过滤掉无关或嘈杂的日志数据，专注于最关键和可操作的信息至关重要。日志过滤技术可以在日志过程的各个阶段（从收集到分析）使用，以减少噪声并提高信噪比。通过实施有效的日志过滤策略，开发者可以节省时间和资源，专注于最相关的日志数据，并确保重要事件不会在噪声中丢失。
- en: Ensuring the confidentiality, integrity, and availability of log data is a key
    aspect of logging, as it involves compliance with data protection regulations
    and adherence to industry best practices. Log security measures may include encryption,
    access control, and data backup strategies, all aimed at safeguarding log data
    from unauthorized access, tampering, or loss.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 确保日志数据的机密性、完整性和可用性是日志的关键方面，因为它涉及遵守数据保护法规和遵循行业最佳实践。日志安全措施可能包括加密、访问控制和数据备份策略，所有这些旨在保护日志数据免受未经授权的访问、篡改或丢失。
- en: Configuring alerts based on specific log events or patterns is crucial for proactively
    identifying potential issues in your SaaS application. Log alerting enables timely
    notifications to be sent to the appropriate team members when potential issues
    are detected, allowing for swift action to be taken to resolve them.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 基于特定的日志事件或模式配置警报对于主动识别您SaaS应用程序中的潜在问题至关重要。日志警报功能可以在检测到潜在问题时及时向适当的团队成员发送通知，从而允许迅速采取行动解决问题。
- en: Finally, it is not necessary to keep all of the log data forever, but it can
    be useful to retain some data for a longer term. Preserving some form of historical
    log data for future reference, analysis, or compliance purposes can be very useful
    and should be considered when building up your logging system.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，没有必要永远保留所有日志数据，但保留一些数据较长时间可能是有用的。为了未来的参考、分析或合规目的，保留某种形式的日志数据历史记录可能非常有用，并且在构建日志系统时应予以考虑。
- en: Logging tools
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志工具
- en: 'In general, it is advisable to use off-the-shelf logging solutions. Logging
    is a quite mature and well-understood concept now, so there is generally little
    benefit to building your own custom implementation. In this section, we will look
    at some general pointers to help choose a good logging tool, and then consider
    some specific tools:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，建议使用现成的日志解决方案。日志现在是一个相当成熟且被充分理解的概念，因此自己构建定制实现通常没有太多好处。在本节中，我们将探讨一些一般性指南，以帮助选择一个好的日志工具，然后考虑一些具体的工具：
- en: '**Collect and store logs**: A good logging tool should be able to collect and
    store logs from various sources, such as servers, applications, and databases.
    It should also be able to handle large volumes of logs and store them in a scalable
    and efficient manner.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**收集和存储日志**: 一个好的日志工具应该能够从各种来源收集和存储日志，例如服务器、应用程序和数据库。它还应该能够处理大量日志并以可扩展和高效的方式存储它们。'
- en: '**Provide search and analysis capabilities**: A good logging tool should provide
    robust search and analysis capabilities that allow you to easily search and filter
    through logs to identify issues and troubleshoot problems. It should also support
    advanced querying and filtering to enable more complex analysis.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提供搜索和分析功能**: 一个好的日志工具应该提供强大的搜索和分析功能，使您能够轻松搜索和过滤日志以识别问题和解决问题。它还应支持高级查询和过滤，以实现更复杂的分析。'
- en: '**Enable real-time monitoring**: A good logging tool should provide real-time
    monitoring capabilities to enable you to track the flow of logs as they are generated.
    This can help you detect issues as they occur and take corrective action in real
    time.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用实时监控**: 一个好的日志工具应该提供实时监控功能，以便您能够跟踪日志的生成流程。这可以帮助您在问题发生时及时发现并实时采取纠正措施。'
- en: '**Offer centralized management**: A good logging tool should provide centralized
    management of logs, allowing you to easily manage logs from different sources
    and track changes to log data over time. It should also provide access controls
    and permission settings to ensure that logs are accessed only by authorized personnel.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提供集中式管理**: 一个好的日志工具应该提供日志的集中式管理，使您能够轻松管理来自不同来源的日志，并跟踪日志数据随时间的变化。它还应提供访问控制和权限设置，以确保日志只能由授权人员访问。'
- en: '**Support customization**: A good logging tool should be customizable to meet
    the specific needs of your application. This includes the ability to customize
    log formats and fields, as well as the ability to integrate with other tools and
    systems.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**支持定制**: 一个好的日志工具应该可定制以满足您应用程序的特定需求。这包括自定义日志格式和字段的能力，以及与其他工具和系统集成的能力。'
- en: '**Enable correlation of logs**: A good logging tool should enable you to correlate
    logs from different sources and identify patterns and relationships between log
    data. This can help you gain deeper insights into how your application is performing
    and identify potential issues.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用日志关联**: 一个好的日志工具应该使您能够关联来自不同来源的日志，并识别日志数据之间的模式和关系。这可以帮助您深入了解应用程序的性能，并识别潜在的问题。'
- en: '**Provide auditing and compliance capabilities**: A good logging tool should
    provide auditing and compliance capabilities to help you meet regulatory requirements
    and internal policies. This includes features such as access controls, logging
    user actions, and the ability to generate audit reports.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提供审计和合规性功能**: 一个好的日志工具应该提供审计和合规性功能，帮助您满足监管要求和内部政策。这包括访问控制、记录用户操作以及生成审计报告的能力。'
- en: 'As with monitoring tools, it is hard to recommend specific tools to use for
    logging, as this will vary depending on the specific tech stack in use, and also
    how the application will be used. Here is a list of some tools that you can research
    before starting to build a logging system, with the .NET/Microsoft stack tools
    included at the top again! Please note that Microsoft provides a logging API that
    is designed to work with a variety of built-in and third-party logging providers:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 与监控工具一样，很难推荐用于日志记录的具体工具，因为这将根据所使用的特定技术堆栈以及应用程序的用途而有所不同。以下是一些在开始构建日志系统之前您可以进行研究的一些工具，其中.NET/Microsoft堆栈工具再次排在最前面！请注意，Microsoft提供了一个旨在与各种内置和第三方日志提供者一起工作的日志API：
- en: '**.NET built-in provider**: This is generally fine for smaller applications,
    but you may find that it does not provide as rich a feature set as some of the
    others on this list. It is a useful tool to get started with, but one that your
    application may quickly outgrow.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**.NET内置提供者**: 这通常适用于小型应用程序，但您可能会发现它提供的功能集不如列表中的其他一些工具丰富。这是一个有用的入门工具，但您的应用程序可能会很快超出其范围。'
- en: '**Serilog**: A popular structured logging library for .NET applications that
    supports multiple sinks and enrichers for enhanced logging capabilities.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Serilog**: 这是一个流行的.NET应用程序结构化日志库，支持多个接收器和增强器，以增强日志功能。'
- en: '**NLog**: A flexible and high-performance logging library for .NET, providing
    advanced routing and filtering options for log events.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NLog**：一个灵活且高性能的.NET日志库，提供高级路由和过滤选项，用于日志事件。'
- en: '**log4net**: A widely used logging library for .NET applications, inspired
    by the popular log4j library for Java, offering a variety of logging targets and
    flexible configuration options.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**log4net**：一个广泛使用的.NET应用程序日志库，灵感来源于流行的Java日志库log4j，提供各种日志目标和灵活的配置选项。'
- en: '**Seq**: A centralized log server and structured log data viewer, often used
    in conjunction with Serilog, providing powerful querying and visualization features
    for analyzing log events.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Seq**：一个集中的日志服务器和结构化日志数据查看器，通常与Serilog一起使用，提供强大的查询和可视化功能，用于分析日志事件。'
- en: '**ELK Stack**: A popular open source log management platform that combines
    Elasticsearch for indexing and searching, Logstash for log processing and routing,
    and Kibana for the visualization and analysis of log data.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ELK Stack**：一个流行的开源日志管理平台，结合了Elasticsearch进行索引和搜索、Logstash进行日志处理和路由、以及Kibana进行日志数据的可视化和分析。'
- en: '**Application Insights**: A Microsoft Azure service that provides application
    performance monitoring, diagnostics, and logging capabilities, easily integrated
    into .NET applications.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Application Insights**：一个Microsoft Azure服务，提供应用程序性能监控、诊断和日志功能，易于集成到.NET应用程序中。'
- en: '**Azure Log Analytics**: A log management and analytics service in Azure that
    can collect, store, and analyze log data from various sources, including application
    logs, Azure resources, and virtual machines.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Log Analytics**：Azure中的一种日志管理和分析服务，可以收集、存储和分析来自各种来源的日志数据，包括应用程序日志、Azure资源和虚拟机。'
- en: These tools and services cater to different aspects of logging, from libraries
    used within the application code to centralized log management and analysis platforms.
    The choice of tools will depend on the specific requirements and constraints of
    your SaaS application, as well as your preferred development ecosystem.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具和服务针对日志的不同方面，从应用程序代码中使用的库到集中的日志管理和分析平台。工具的选择将取决于您的SaaS应用程序的具体需求和约束，以及您首选的开发生态系统。
- en: How to do this
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点
- en: 'Implementing a robust logging strategy is essential for any SaaS application.
    While we’ve discussed various tools that can be used for logging, it’s also important
    to understand the process of setting up an effective logging strategy. Here’s
    a list of steps to follow when implementing logging in your application. Keep
    in mind that logging is focused on recording events that occur within your application
    code:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 实施强大的日志策略对于任何SaaS应用程序都是至关重要的。虽然我们已经讨论了可用于日志的各种工具，但了解设置有效日志策略的过程也同样重要。以下是在您的应用程序中实施日志时需要遵循的步骤列表。请记住，日志的重点是记录应用程序代码中发生的事件：
- en: Identify the events and information that are important to log in your application.
    This may include errors, user actions, system events, and other relevant data
    that can help you understand the application’s behavior, troubleshoot issues,
    and maintain an audit trail for security and compliance purposes.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 识别您应用程序中需要记录的事件和信息。这可能包括错误、用户操作、系统事件以及其他有助于您理解应用程序行为、解决问题以及为安全和合规目的维护审计跟踪的相关数据。
- en: Choose the logging tool or library that best fits your application’s requirements
    and technology stack. There are numerous logging tools available, each with its
    own strengths and weaknesses. Make sure to select a tool that is compatible with
    your application and provides the necessary features.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择最适合您应用程序需求和技术堆栈的日志工具或库。有众多日志工具可供选择，每个工具都有其自身的优点和缺点。请确保选择一个与您的应用程序兼容并提供必要功能的工具。
- en: Configure the logging tool to capture the relevant events and data identified
    in step 1\. This may involve setting up log levels, filters, and custom log entries
    within your application code to ensure that you’re capturing the right information.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置日志工具以捕获步骤1中确定的有关事件和数据。这可能涉及在应用程序代码中设置日志级别、过滤器以及自定义日志条目，以确保您捕获了正确的信息。
- en: Establish a consistent log format and structure across your application to make
    it easier to analyze and correlate log data. This may include using standardized
    timestamps, log levels, and message formats to ensure consistency.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的应用程序中建立一致的日志格式和结构，以便更容易分析和关联日志数据。这可能包括使用标准化的时间戳、日志级别和消息格式，以确保一致性。
- en: Set up log aggregation and storage to centralize and retain log data for analysis.
    This may involve configuring your logging tool to send log data to a central log
    management system, storing logs in a database, or using a cloud-based log storage
    service.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置日志聚合和存储，以便集中和保留日志数据以供分析。这可能涉及配置您的日志工具将日志数据发送到中央日志管理系统，将日志存储在数据库中，或使用基于云的日志存储服务。
- en: Implement log analysis and monitoring to proactively detect issues and trends
    within your log data. This may involve using log analysis tools, setting up alerts
    based on log events or patterns, and regularly reviewing log data for insights.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实施日志分析和监控，以主动检测日志数据中的问题和趋势。这可能涉及使用日志分析工具，根据日志事件或模式设置警报，并定期审查日志数据以获取见解。
- en: Integrate your logging strategy with your existing development and operations
    workflows, such as your issue-tracking system, CI/CD pipelines, and communication
    platforms. This will ensure that your team is aware of any issues and can take
    action accordingly.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的日志策略与现有的开发和运维工作流程集成，例如您的缺陷跟踪系统、CI/CD管道和通信平台。这将确保您的团队能够意识到任何问题并相应地采取行动。
- en: Continuously review and refine your logging strategy as your application evolves.
    As new features are added, security requirements change, or user expectations
    grow, you may need to adjust your logging approach to capture the necessary information.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随着应用程序的发展，持续审查和改进您的日志策略。随着新功能的添加、安全要求的改变或用户期望的增长，您可能需要调整您的日志方法以捕获必要的信息。
- en: By following these steps and tailoring your logging strategy to the specific
    needs of your SaaS application, you’ll be well equipped to maintain a comprehensive
    record of your application’s events, diagnose and troubleshoot issues more effectively,
    and ensure a secure and compliant platform for your users.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循这些步骤并根据您的SaaS应用程序的具体需求定制日志策略，您将能够维护应用程序事件的全面记录，更有效地诊断和解决问题，并确保为用户提供一个安全且合规的平台。
- en: Best practices for logging
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志最佳实践
- en: 'Much like monitoring, logging can be challenging to get right in a SaaS application.
    Here are some best practices to keep in mind when designing a logging system:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 与监控类似，在SaaS应用程序中正确设置日志可能具有挑战性。在设计日志系统时，以下是一些需要考虑的最佳实践：
- en: '**Define log levels**: It is important to establish clear log levels that categorize
    log events based on their severity or importance. These levels can include Debug,
    Info, Warning, Error, and Critical, and can help you identify and prioritize issues
    based on their impact on the application.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定义日志级别**：建立清晰的日志级别，根据日志事件的严重性或重要性对其进行分类，这是非常重要的。这些级别可以包括调试、信息、警告、错误和关键，并有助于您根据对应用程序的影响识别和优先处理问题。'
- en: '**Use structured logging**: Implementing structured logging enables you to
    capture log events in a machine-readable format, making it easier to filter, search,
    and analyze log data. By including structured data in your logs, you can provide
    additional context and information about the event, making it easier to identify
    and troubleshoot issues.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用结构化日志**：实施结构化日志可以使得您能够以机器可读的格式捕获日志事件，这使得过滤、搜索和分析日志数据变得更容易。通过在日志中包含结构化数据，您可以提供关于事件的额外上下文和信息，这使得识别和解决问题变得更加容易。'
- en: '**Include context**: Ensure that your log messages provide enough context to
    identify the source of an issue. This can include relevant variable values, user
    IDs, or timestamps. By providing this information, you can more easily identify
    and troubleshoot issues when they occur.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**包含上下文**：确保您的日志消息提供足够的信息，以便识别问题的来源。这可能包括相关的变量值、用户ID或时间戳。通过提供这些信息，您可以在问题发生时更容易地识别和解决问题。'
- en: '**Log correlation**: In distributed systems or microservices architectures,
    it can be challenging to trace the flow of requests and identify issues across
    multiple services. Using correlation IDs or trace IDs to link related log events
    can make it easier to identify and troubleshoot issues across different services
    and components.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志关联**：在分布式系统或微服务架构中，追踪请求流和识别多个服务之间的问题可能具有挑战性。使用关联ID或跟踪ID将相关的日志事件链接起来，可以更容易地识别和解决不同服务和组件之间的问题。'
- en: '**Centralize log management**: Aggregating logs from multiple sources into
    a centralized log management system can provide a comprehensive view of your application’s
    performance and make it easier to monitor and analyze log data. This can enable
    you to identify issues and troubleshoot problems more quickly.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集中日志管理**：将来自多个来源的日志聚合到集中的日志管理系统可以提供对应用程序性能的全面视图，并使监控和分析日志数据更加容易。这可以使您更快地识别问题并解决问题。'
- en: '**Implement log retention policies**: Define retention policies for log data
    based on storage limitations, compliance requirements, and the usefulness of historical
    log data. By archiving or deleting logs as necessary, you can reduce storage costs
    and ensure compliance with regulatory requirements.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实施日志保留策略**：根据存储限制、合规要求和历史日志数据的有用性定义日志数据的保留策略。根据需要存档或删除日志，可以降低存储成本并确保符合监管要求。'
- en: '**Secure sensitive information**: Avoid logging sensitive information, such
    as **Personally Identifiable Information** (**PII**) or authentication credentials,
    to prevent data breaches and maintain compliance with data privacy regulations.
    By implementing appropriate security measures, such as encryption and access controls,
    you can protect your log data from unauthorized access.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保护敏感信息**：避免记录敏感信息，例如**个人身份信息**（**PII**）或身份验证凭据，以防止数据泄露并确保符合数据隐私法规。通过实施适当的安全措施，如加密和访问控制，您可以保护您的日志数据免受未经授权的访问。'
- en: '**Monitor logs in real time**: Setting up real-time log monitoring and alerting
    can help you detect and address issues proactively. By monitoring logs in real
    time and setting up alerts based on specific log events, you can quickly identify
    and address issues before they impact users or system performance.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实时监控日志**：设置实时日志监控和警报可以帮助您主动检测和解决问题。通过实时监控日志并基于特定的日志事件设置警报，您可以在问题影响用户或系统性能之前快速识别并解决它们。'
- en: '**Optimize log performance**: Ensure that logging does not negatively impact
    the performance of the application. This can include using asynchronous logging,
    batching, and throttling as needed to optimize log performance and prevent log-related
    performance issues.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优化日志性能**：确保日志记录不会对应用程序的性能产生负面影响。这可能包括根据需要使用异步日志记录、批处理和节流来优化日志性能并防止与日志相关的性能问题。'
- en: '**Review and refine**: Periodically reviewing and refining your logging strategy
    can help you identify areas for improvement and adjust log levels, message formats,
    or retention policies as necessary. By continuously improving your logging system,
    you can ensure that it remains effective and efficient over time.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**回顾和优化**：定期回顾和优化您的日志策略可以帮助您识别改进区域，并根据需要调整日志级别、消息格式或保留策略。通过持续改进您的日志系统，您可以确保它随着时间的推移保持有效和高效。'
- en: Next, we will look at some SaaS-specific considerations that you must keep in
    mind.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨一些您必须牢记的SaaS特定考虑因素。
- en: Monitoring and logging considerations for SaaS applications
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SaaS应用程序的监控和日志考虑因素
- en: 'As we have discovered throughout this book, developing SaaS applications can
    be challenging, with numerous specific considerations when using various types
    of technology. In this section, we will look at monitoring and logging considerations
    that may be more specific to a SaaS application:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在本书中发现的，开发SaaS应用程序可能具有挑战性，在使用各种类型的技术时有许多具体考虑因素。在本节中，我们将探讨可能更具体于SaaS应用程序的监控和日志考虑因素：
- en: '**Multi-tenancy** is a commonly used technique when building SaaS applications.
    Monitoring and logging in a multi-tenant environment require careful attention
    to ensure the appropriate isolation of tenant data and to track tenant-specific
    performance metrics. Developers need to design monitoring and logging strategies
    that can effectively identify issues affecting specific tenants while maintaining
    data privacy and compliance. As we discussed in [*Chapter 3*](B19343_03.xhtml#_idTextAnchor082),
    maintaining data isolation in a multi-tenant system is both difficult and of the
    utmost importance. Systems that centralize data collection, such as monitoring
    or logging systems, can easily become a weak link in the chain if care is not
    taken.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多租户**是在构建SaaS应用程序时常用的一种技术。在多租户环境中进行监控和日志记录需要仔细关注，以确保租户数据的适当隔离并跟踪特定租户的性能指标。开发者需要设计能够有效识别影响特定租户的问题，同时保持数据隐私和合规性的监控和日志记录策略。正如我们在[*第3章*](B19343_03.xhtml#_idTextAnchor082)中讨论的那样，在多租户系统中保持数据隔离既困难又极其重要。如果处理不当，集中数据收集的系统，如监控或日志系统，很容易成为链条中的薄弱环节。'
- en: '**Microservices** have become a popular architectural style for building scalable
    and maintainable SaaS applications. Monitoring and logging microservices require
    a granular approach to capture the performance, health, and events of individual
    services within the application. This can make building the monitoring and logging
    infrastructure challenging, as there could be many different services in the microservice
    constellation, each with its own requirements. Debugging runtime errors in a microservice
    application can quickly become a nightmare. Even if it adds some challenges, building
    robust monitoring and logging for a microservice app is extremely important.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**微服务**已成为构建可扩展和可维护SaaS应用程序的流行架构风格。监控和日志记录微服务需要一种细粒度方法来捕获应用程序中各个服务的性能、健康和事件。这可能会使构建监控和日志记录基础设施变得具有挑战性，因为微服务星座中可能有多个不同的服务，每个服务都有自己的要求。在微服务应用程序中调试运行时错误可能会迅速变成一场噩梦。尽管这增加了一些挑战，但为微服务应用程序构建健壮的监控和日志记录仍然极其重要。'
- en: '**Scalability** is a crucial aspect of SaaS applications, as user bases and
    workloads can grow rapidly. We will discuss operating at scale in detail in [*Chapter
    12*](B19343_12.xhtml#_idTextAnchor284). Monitoring and logging systems should
    be designed to adapt to changes in scale, ensuring that they can continue to provide
    accurate and timely insights even as the application grows. This includes monitoring
    resource consumption, load balancing, and auto-scaling capabilities to maintain
    optimal performance and resource allocation. The logging system should also be
    capable of handling increasing data volumes and user loads.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性**是SaaS应用程序的一个关键方面，因为用户基础和工作负载可以迅速增长。我们将在[*第12章*](B19343_12.xhtml#_idTextAnchor284)中详细讨论大规模运营。监控和日志记录系统应设计为适应规模的变化，确保它们即使在应用程序增长的情况下也能继续提供准确和及时的洞察。这包括监控资源消耗、负载均衡和自动扩展功能，以保持最佳性能和资源分配。日志系统还应能够处理不断增长的数据量和用户负载。'
- en: '**Distributed architectures** involve multiple components and services working
    together across different physical or virtual locations. Monitoring and logging
    such systems require a comprehensive approach that can capture and correlate events
    and metrics from various sources, enabling developers to gain a holistic view
    of the application’s health, performance, and event history. Techniques such as
    distributed tracing, log aggregation, and centralized monitoring can help manage
    the complexity of distributed architectures.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分布式架构**涉及多个组件和服务在不同物理或虚拟位置协同工作。监控和日志记录此类系统需要一种全面的方法，能够捕获和关联来自各种来源的事件和指标，使开发者能够全面了解应用程序的健康状况、性能和事件历史。分布式跟踪、日志聚合和集中式监控等技术可以帮助管理分布式架构的复杂性。'
- en: '**Integration with cloud services** is common in SaaS applications, as they
    often leverage services such as storage, databases, and messaging provided by
    cloud platforms. Monitoring and logging these integrations involve tracking the
    performance, availability, and usage of these cloud services, ensuring that they
    meet the application’s requirements and SLAs. Developers should also consider
    the monitoring and logging capabilities and tools provided by the cloud platform
    itself to gain deeper insights into the integrated services.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与云服务的集成**在SaaS应用程序中很常见，因为它们通常利用云平台提供的存储、数据库和消息传递等服务。监控和记录这些集成涉及跟踪这些云服务的性能、可用性和使用情况，确保它们满足应用程序的要求和SLA。开发人员还应考虑云平台本身提供的监控和日志记录能力和工具，以获得对集成服务的更深入了解。'
- en: '**Compliance** plays a critical role in SaaS applications, particularly when
    handling sensitive data or operating within regulated industries. Ensuring compliance
    means adhering to a set of established rules, standards, or regulations set forth
    by industry-specific organizations, government bodies, or international institutions.
    Monitoring and logging systems need to be designed with compliance in mind, capturing
    security-related metrics, events, and audit trails to demonstrate adherence to
    these requirements. Compliance may also dictate specific logging retention policies,
    access control measures, and encryption practices to protect sensitive information.
    By integrating compliance-focused monitoring and logging practices into your SaaS
    application, you not only safeguard your customers’ data and privacy but also
    mitigate potential legal and financial risks associated with non-compliance.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合规性**在SaaS应用程序中发挥着至关重要的作用，尤其是在处理敏感数据或在受监管的行业中运营时。确保合规性意味着遵守由特定行业组织、政府机构或国际机构制定的既定规则、标准或法规。监控和日志记录系统需要考虑到合规性，捕获与安全相关的指标、事件和审计跟踪，以证明符合这些要求。合规性还可能规定特定的日志保留策略、访问控制措施和加密实践，以保护敏感信息。通过将专注于合规性的监控和日志记录实践集成到您的SaaS应用程序中，您不仅保护了客户的资料和隐私，还减轻了与不合规相关的潜在法律和财务风险。'
- en: Finally, **security and compliance** are extremely important in SaaS applications,
    especially when handling sensitive data or operating in regulated industries.
    Monitoring and logging should encompass security-related metrics and events, such
    as authentication failures, unauthorized access attempts, and policy violations.
    This focus helps developers proactively identify potential security threats, maintain
    compliance with industry standards and regulations, and ensure that tenant-specific
    logging requirements or preferences are met, such as log levels, data retention
    policies, or alerting thresholds.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，**安全和合规性**在SaaS应用程序中极为重要，尤其是在处理敏感数据或在受监管的行业中运营时。监控和日志记录应包括与安全相关的指标和事件，例如身份验证失败、未经授权的访问尝试和政策违规。这种关注有助于开发人员主动识别潜在的安全威胁，遵守行业标准法规，并确保满足特定租户的日志记录要求或偏好，例如日志级别、数据保留策略或警报阈值。
- en: Summary
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have explored the critical importance of monitoring and
    logging in the realm of SaaS applications, particularly when considering the complexities
    and unique challenges that arise when working with Microsoft technologies. As
    SaaS applications serve millions of users, operate around the clock, and handle
    a diverse range of actions, implementing robust monitoring and logging systems
    is essential to maintaining the reliability, performance, and security of these
    applications.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了监控和日志记录在SaaS应用领域中的关键重要性，尤其是在考虑与Microsoft技术一起工作时出现的复杂性和独特挑战。由于SaaS应用程序服务于数百万用户，全天候运行，并处理各种不同的操作，因此实施强大的监控和日志记录系统对于维护这些应用程序的可靠性、性能和安全至关重要。
- en: We delved into the differences between monitoring and logging, highlighting
    that monitoring is a proactive technique focused on observing the system’s health
    and performance, whereas logging is primarily concerned with recording events
    and data to enable effective troubleshooting and analysis. Both techniques serve
    as complementary tools in the arsenal of SaaS developers, ensuring a seamless
    and reliable user experience.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们深入探讨了监控和日志记录之间的区别，强调监控是一种主动技术，专注于观察系统的健康和性能，而日志记录主要关注记录事件和数据，以便进行有效的故障排除和分析。这两种技术都是SaaS开发人员工具箱中的补充工具，确保提供无缝且可靠的用户体验。
- en: Throughout the chapter, we explored the key aspects of monitoring and logging,
    discussing the importance of performance metrics, resource utilization, application
    availability, and health, as well as the relevance of log levels, structured logging,
    and context. We also examined the unique considerations that arise in SaaS applications,
    such as multi-tenancy, microservices, scalability, distributed architectures,
    integration with cloud services, security, and compliance.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了监控和日志记录的关键方面，讨论了性能指标、资源利用率、应用可用性和健康状态的重要性，以及日志级别、结构化日志和上下文的相关性。我们还考察了SaaS应用中出现的独特考虑因素，例如多租户、微服务、可扩展性、分布式架构、与云服务的集成、安全性和合规性。
- en: We covered the best practices for monitoring and logging in SaaS applications,
    emphasizing the significance of defining relevant metrics and thresholds, implementing
    proactive monitoring and alerting, ensuring data privacy and compliance in multi-tenant
    environments, and integrating monitoring data with logging and other diagnostic
    tools. Additionally, we highlighted the importance of continuously refining and
    improving monitoring and logging strategies to adapt to the ever-changing demands
    and requirements of SaaS applications.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们介绍了SaaS应用中监控和日志记录的最佳实践，强调了定义相关指标和阈值的必要性，实施主动监控和警报，确保在多租户环境中数据隐私和合规性，以及将监控数据与日志和其他诊断工具集成。此外，我们还强调了持续改进监控和日志记录策略的重要性，以适应SaaS应用不断变化的需求和需求。
- en: The chapter also introduced various tools and technologies commonly used for
    monitoring and logging in the Microsoft development ecosystem. We discussed the
    utility of Application Insights, Azure Monitor, and Azure Log Analytics for monitoring
    purposes, and explored logging libraries such as Serilog, NLog, and log4net, as
    well as log management solutions such as ELK Stack.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 本章还介绍了在Microsoft开发生态系统中常用的一些监控和日志记录工具和技术。我们讨论了Application Insights、Azure Monitor和Azure
    Log Analytics在监控方面的效用，并探讨了日志库，如Serilog、NLog和log4net，以及日志管理解决方案，如ELK Stack。
- en: As we conclude this chapter, it is important to remember that monitoring and
    logging are not static processes. To achieve success in SaaS applications, developers
    must continuously review, adapt, and refine their monitoring and logging strategies
    to respond to new challenges, changes in user behavior, and evolving technology
    landscapes. By doing so, they can maintain the highest levels of reliability,
    performance, and security for their applications, ensuring the satisfaction and
    trust of millions of users.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们结束本章时，重要的是要记住，监控和日志记录不是静态的过程。为了在SaaS应用中取得成功，开发者必须持续审查、适应和改进他们的监控和日志记录策略，以应对新的挑战、用户行为的改变和技术格局的演变。通过这样做，他们可以保持其应用的最高可靠性、性能和安全水平，确保数百万用户的满意度和信任。
- en: In the next chapter, we will look into building and releasing pipelines – another
    very important consideration when building SaaS applications!
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨构建和发布管道——这是构建SaaS应用时另一个非常重要的考虑因素！
- en: Further reading
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'What is SaaS Monitoring?: [https://www.comparitech.com/net-admin/what-is-saas-monitoring/](https://www.comparitech.com/net-admin/what-is-saas-monitoring/)'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是SaaS监控？：[https://www.comparitech.com/net-admin/what-is-saas-monitoring/](https://www.comparitech.com/net-admin/what-is-saas-monitoring/)
- en: 'Best practices for audit logging in a SaaS business/application: [https://chrisdermody.com/best-practices-for-audit-logging-in-a-saas-business-app/](https://chrisdermody.com/best-practices-for-audit-logging-in-a-saas-business-app/)'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SaaS业务/应用中审计日志的最佳实践：[https://chrisdermody.com/best-practices-for-audit-logging-in-a-saas-business-app/](https://chrisdermody.com/best-practices-for-audit-logging-in-a-saas-business-app/)
- en: 'Logging: [https://learn.microsoft.com/en-us/dotnet/core/extensions/logging](https://learn.microsoft.com/en-us/dotnet/core/extensions/logging)'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志记录：[https://learn.microsoft.com/en-us/dotnet/core/extensions/logging](https://learn.microsoft.com/en-us/dotnet/core/extensions/logging)
- en: 'log4net guide for .NET logging: [https://stackify.com/log4net-guide-dotnet-logging/](https://stackify.com/log4net-guide-dotnet-logging/)'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: log4net .NET日志指南：[https://stackify.com/log4net-guide-dotnet-logging/](https://stackify.com/log4net-guide-dotnet-logging/)
- en: Questions
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What are the most important metrics to monitor for your SaaS application and
    why?
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于您的SaaS应用，最重要的监控指标是什么？为什么？
- en: How do you balance the need for detailed logging with the need to maintain compliance
    with data privacy regulations?
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何在详细日志记录的需求与遵守数据隐私法规的需求之间取得平衡？
- en: What are some common challenges you’ve faced when implementing a logging and
    monitoring system and how did you overcome them?
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在实施日志和监控系统时，你遇到了哪些常见的挑战，你是如何克服它们的？
- en: What are some best practices for configuring alerts and notifications to ensure
    that you’re alerted of issues in a timely manner without being overwhelmed by
    false alarms?
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置警报和通知有哪些最佳实践，以确保你能够及时地被通知到问题，同时不会被误报所困扰？
- en: How do you ensure that your logging and monitoring systems are scalable and
    able to handle the increasing volume of data as your application grows?
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你如何确保你的日志和监控系统随着应用的扩展而具有可扩展性，并能处理日益增长的数据量？
