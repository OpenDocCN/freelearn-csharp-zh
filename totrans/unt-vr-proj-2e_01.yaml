- en: Virtually Everything for Everyone
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This virtual reality thing calls into question, what does it mean to
  prefs: []
  type: TYPE_NORMAL
- en: '"be somewhere"?'
  prefs: []
  type: TYPE_NORMAL
- en: Before cell phones, you would call someone and it would make no sense to
  prefs: []
  type: TYPE_NORMAL
- en: say, "Hey, where are you?" You know where they are, you called their house,
  prefs: []
  type: TYPE_NORMAL
- en: that's where they are.
  prefs: []
  type: TYPE_NORMAL
- en: So then cell phones come around and you start to hear people say, "Hello. Oh,
    I'm at Starbucks," because the person on the other end wouldn't necessarily know
    where you are, because you became un-tethered from your house for voice communications.
  prefs: []
  type: TYPE_NORMAL
- en: So when I saw a VR demo, I had this vision of coming home and my wife has got
    the kids settled down, she has a couple minutes to herself, and she's on the couch
    wearing goggles on her face. I come over and tap her on the shoulder, and I'm
    like, "Hey, where are you?"
  prefs: []
  type: TYPE_NORMAL
- en: It's super weird. The person's sitting right in front of you, but you don't
    know where they are.
  prefs: []
  type: TYPE_NORMAL
- en: -Jonathan Stark, mobile expert, and podcaster
  prefs: []
  type: TYPE_NORMAL
- en: Welcome to **virtual reality** (**VR**)! In this book, we will explore what
    it takes to create virtual reality experiences on our own. We will take a walk
    through a series of hands-on projects, step-by-step tutorials, and in-depth discussions
    using the Unity 3D game engine and other free or open source software. Though
    the virtual reality technology is rapidly advancing, we'll try to capture the
    basic principles and techniques that you can use to make your VR games and applications
    feel immersive and comfortable.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this first chapter, we will define virtual reality and illustrate how it
    can be applied not only to games but also many other areas of interest and productivity.
    This chapter discusses the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: What is virtual reality?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Differences between virtual realityand augmented reality
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How VR applications may differ from VR games
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Types of VR experiences
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical skills that are necessary for the development of VR
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is virtual reality to you?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Today, we are witnesses to the burgeoning consumer virtual reality, an exciting
    technology that promises to transform in a fundamental way how we interact with
    information, our friends, and the world at large.
  prefs: []
  type: TYPE_NORMAL
- en: What is virtual reality? In general, VR is the computer-generated simulation
    of a 3D environment, which seems very real to the person experiencing it, using
    special electronic equipment. The objective is to achieve a strong sense of being
    present in the virtual environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Today''s consumer tech VR involves wearing an HMD (head-mounted display goggles)
    to view stereoscopic 3D scenes. You can look around by moving your head, and walk
    around by using hand controls or motion sensors. You are engaged in a fully immersive
    experience. It''s as if you''re really there in some other virtual world. The
    following image shows me, the author, experiencing an **Oculus Rift Development
    Kit 2** (**DK2**) in 2015:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b30214d8-d9ed-473e-9267-300782f2325c.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Virtual reality is not new. It's been here for decades, albeit hidden away in
    academic research labs and high-end industrial and military facilities. It was
    big, clunky, and expensive. Ivan Sutherland invented the first HMD in 1965 (see
    [https://amturing.acm.org/photo/sutherland_3467412.cfm](https://amturing.acm.org/photo/sutherland_3467412.cfm)).
    It was tethered to the ceiling! In the past, several failed attempts have been
    made to bring consumer-level virtual reality products to the market.
  prefs: []
  type: TYPE_NORMAL
- en: In 2012, Palmer Luckey, the founder of Oculus VR LLC, gave a demonstration of
    a makeshift head-mounted VR display to John Carmack, the famed developer of the
    Doom, Wolfenstein 3D, and Quake classic video games. Together, they ran a successful
    **Kickstarter** campaign and released a developer kit called **Oculus Rift Development
    Kit 1** (**DK1**) to an enthusiastic community. This caught the attention of investors
    as well as Mark Zuckerberg, and in March 2014, Facebook bought the company for
    $2 billion. With no product, no customers, and infinite promise, the money and
    attention that it attracted helped fuel a new category of consumer products.
  prefs: []
  type: TYPE_NORMAL
- en: Concurrently, others also working on their own products which were soon introduced
    to the market, including Steam's HTC VIVE, Google Daydream, Sony PlayStation VR,
    Samsung Gear VR, Microsoft's immersive Mixed Reality, and more. New innovations
    and devices that enhance the VR experience continue to be introduced.
  prefs: []
  type: TYPE_NORMAL
- en: Most of the basic research has already been done and the technology is now affordable
    thanks in large part to the mass adoption of devices that work on mobile technology.
    There is a huge community of developers with experience in building 3D games and
    mobile apps. Creative content producers are joining in and the media is talking
    it up. At last, virtual reality is real!
  prefs: []
  type: TYPE_NORMAL
- en: Say what? *Virtual reality is real?* Ha! If it's virtual, how can it be... Oh,
    never mind.
  prefs: []
  type: TYPE_NORMAL
- en: Eventually, we will get past the focus on the emerging hardware devices and
    recognize that *content is king*. The current generation of 3D development software
    (commercial, free, and open source) that has spawned a plethora of indie, or independent,
    game developers can also be used to build non-game VR applications.
  prefs: []
  type: TYPE_NORMAL
- en: Though VR finds most of its enthusiasts in the gaming community, the potential
    applications reach well beyond that. Any business that presently uses 3D modeling
    and computer graphics will be more effective if it uses VR technology. The sense
    of immersive presence that is afforded by VR can enhance all common online experiences
    today, which includes engineering, social networking, shopping, marketing, entertainment,
    and business development. In the near future, viewing 3D websites with a VR headset
    may be as common as visiting ordinary flat websites today.
  prefs: []
  type: TYPE_NORMAL
- en: Types of head-mounted displays
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Presently, there are two basic categories of HMDs for virtual reality—**desktop
    VR** and **mobile VR**, although the distinctions are increasingly becoming blurred.
    Eventually, we might just talk about platforms as we do traditional computing,
    in terms of the operating system—Windows, Android, or console VR.
  prefs: []
  type: TYPE_NORMAL
- en: Desktop VR
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With desktop VR (and console VR), your headset is a peripheral to a more powerful
    computer that processes the heavy graphics. The computer may be a Windows PC,
    Mac, Linux, or a game console, although Windows is by far the most prominent PC
    and the PS4 is a bestseller in terms of console VR.
  prefs: []
  type: TYPE_NORMAL
- en: Most likely, the headset is connected to the computer with wires. The game runs
    on the remote machine and the HMD is a peripheral display device with a motion
    sensing input. The term *desktop* is an unfortunate misnomer since it's just as
    likely to be stationed in either a living room or a den.
  prefs: []
  type: TYPE_NORMAL
- en: The **Oculus Rift** ([https://www.oculus.com/](https://www.oculus.com/)) is
    an example of a device where the goggles have an integrated display and sensors.
    The games run on a separate PC. Other desktop headsets include the **HTC VIVE**,
    Sony's **PlayStation VR**, and **Microsoft immersive Mixed Reality**.
  prefs: []
  type: TYPE_NORMAL
- en: Desktop VR devices rely on a desktop computer (usually via video and USB cables)
    for CPU and **graphics processing unit** (**GPU**) power, where more is better.
    Please refer to the recommended specification requirements for your specific device.
  prefs: []
  type: TYPE_NORMAL
- en: However, for the purpose of this book, we won't have any heavy rendering in
    our projects, and you can get by with minimum system specifications.
  prefs: []
  type: TYPE_NORMAL
- en: Mobile VR
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mobile VR originated with **Google Cardboard** ([https://vr.google.com/cardboard/](https://vr.google.com/cardboard/)),
    a simple housing device for two lenses and a slot for your mobile phone. The phone's
    display is used to show the twin stereoscopic views. It has rotational head tracking,
    but it has no positional tracking. The Cardboard also provides the user with the
    ability to click or *tap* its side to make selections in a game. The complexity
    of the imagery is limited because it uses your phone's processor for rendering
    the views on the phone display screen.
  prefs: []
  type: TYPE_NORMAL
- en: Google Daydream and Samsung GearVR improved the platforms by requiring more
    performant minimum specifications including greater processing power in the mobile
    phone. GearVR's headsets include motion sensors to assist the phone device. These
    devices also introduced a three-**degrees-of-freedom** (**DOF**) hand controller
    that can be used like a laser pointer within VR experiences.
  prefs: []
  type: TYPE_NORMAL
- en: The next generation of mobile VR devices includes all-in-one headsets, like
    Oculus Go, with embedded screens and processors, eliminating the need for a separate
    mobile phone. Newer models may include depth sensors and spatial mapping processors
    to track the user's location in 3D space.
  prefs: []
  type: TYPE_NORMAL
- en: The bottom line is, the projects in this book will explore features from the
    high end to the low end of the consumer VR device spectrum. But generally, our
    projects do not demand a lot of processing power nor do they require high-end
    VR capability, so you can begin developing for VR on any of these types of devices,
    including Google Cardboard and an ordinary mobile phone.
  prefs: []
  type: TYPE_NORMAL
- en: If you are interested in developing VR applications for Google Daydream on Android
    directly in Java rather than through the Unity game engine, please also refer
    to another of the author's books, *Cardboard VR Projects for Android* from Packt
    Publishing ([https://www.packtpub.com/application-development/cardboard-vr-projects-android](https://www.packtpub.com/application-development/cardboard-vr-projects-android)).
  prefs: []
  type: TYPE_NORMAL
- en: The difference between virtual reality and augmented reality
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It's probably worthwhile to clarify what virtual reality is not.
  prefs: []
  type: TYPE_NORMAL
- en: A sister technology to VR is **augmented reality** (**AR**), which combines
    computer-generated imagery (CGI) with views of the real world. AR on smartphones
    has recently garnered widespread interest with the introduction of Apple's ARKit
    for iOS and Google ARCore for Android. Further, the Vuforia AR toolkit is now
    integrated directly with the Unity game engine, helping to drive even more adoption
    of the technology. AR on a mobile device overlays the CGI on top of live video
    from a camera.
  prefs: []
  type: TYPE_NORMAL
- en: The latest innovations in AR are wearable AR headsets, such as Microsoft's **HoloLens**
    and **Magic Leap**, which show the computer graphics directly in your field of
    view. The graphics are not mixed into a video image. If VR headsets are like closed
    goggles, AR headsets are like translucent sunglasses that combine the real-world
    light rays with CGI. A challenge for AR is ensuring that the CGI is consistently
    aligned with and mapped onto the objects in the real-world space and to eliminate
    latency while moving about so that they (the CGI and objects in the real-world
    space) stay aligned.
  prefs: []
  type: TYPE_NORMAL
- en: AR holds as much promise as VR for future applications, but it's different.
    Though AR intends to engage the user within their current surroundings, virtual
    reality is fully immersive. In AR, you may open your hand and see a log cabin
    resting in your palm, but in VR, you're transported directly inside the log cabin
    and you can walk around inside it.
  prefs: []
  type: TYPE_NORMAL
- en: We are also beginning to see hybrid devices that combine features of VR and
    AR and let you switch between modes.
  prefs: []
  type: TYPE_NORMAL
- en: If you are interested in developing applications for AR, please also refer to
    the author's book *Augmented Reality for Developers* from Packt Publishing ([https://www.packtpub.com/web-development/augmented-reality-developers](https://www.packtpub.com/web-development/augmented-reality-developers)).
  prefs: []
  type: TYPE_NORMAL
- en: Applications versus games
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Consumer-level virtual reality started with gaming. Video gamers are already
    accustomed to being engaged in highly interactive hyper-realistic 3D environments.
    VR just ups the ante.
  prefs: []
  type: TYPE_NORMAL
- en: Gamers are early adopters of high-end graphics technology. Mass production of
    gaming consoles and PC-based components in the tens of millions and competition
    between vendors leads to lower prices and higher performance. Game developers
    follow suit, often pushing the state of the art, squeezing every ounce of performance
    out of hardware and software. Gamers are a very demanding bunch, and the market
    has consistently stepped up to keep them satisfied. It's no surprise that many,
    if not most, of the current wave of VR hardware and software companies, are first
    targeting the video gaming industry. A majority of the VR apps on the Oculus Store
    such as Rift ([https://www.oculus.com/experiences/rift/](https://www.oculus.com/experiences/rift/)),
    GearVR ([https://www.oculus.com/experiences/gear-vr/](https://www.oculus.com/experiences/gear-vr/)),
    and Google Play for Daydream ([https://play.google.com/store/search?q=daydream&c=apps&hl=en](https://play.google.com/store/search?q=daydream&c=apps&hl=en)),
    for example, are games. And of course, the Steam VR platform ([http://store.steampowered.com/steamvr](http://store.steampowered.com/steamvr))
    is almost entirely about gaming. Gamers are the most enthusiastic VR advocates
    and seriously appreciate its potential.
  prefs: []
  type: TYPE_NORMAL
- en: Game developers know that the core of a game is the **game mechanics**, or the
    rules, which are largely independent of the *skin*, or the thematic topic of the
    game. Gameplay mechanics can include puzzles, chance, strategy, timing, or muscle
    memory. VR games can have the same mechanic elements but might need to be adjusted
    for the virtual environment. For example, a first-person character walking in
    a console video game is probably going about 1.5 times faster than their actual
    pace in real life. If this wasn't the case, the player would feel that the game
    was too slow and boring. Put the same character in a VR scene and they will feel
    that it is too fast; it could likely make the player feel nauseous. In VR, you
    want your characters to walk at a normal, earthly pace. Not all video games will
    map well to VR; it may not be fun to be in the middle of a war zone when you're
    actually there.
  prefs: []
  type: TYPE_NORMAL
- en: That said, virtual reality is also being applied in areas other than gaming.
    Though games will remain important, non-gaming applications will eventually overshadow
    them. These applications may differ from games in a number of ways, with the most
    significant having much less emphasis on game mechanics and more emphasis on either
    the experience itself or application-specific goals. Of course, this doesn't preclude
    some game mechanics. For example, the application may be specifically designed
    to train the user in a specific skill. Sometimes, the **gamification** of a business
    or personal application makes it more fun and effective in driving the desired
    behavior through competition.
  prefs: []
  type: TYPE_NORMAL
- en: In general, non-gaming VR applications are less about winning and more about
    the experience itself.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few examples of the kinds of non-gaming applications that people
    are working on:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Travel and tourism**: Visit faraway places without leaving your home. Visit
    art museums in Paris, New York, and Tokyo in one afternoon. Take a walk on Mars.
    You can even enjoy Holi, the spring festival of colors, in India while sitting
    in your wintery cabin in Vermont.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mechanical engineering and industrial design**: Computer-aided design software
    such as AutoCAD and SOLIDWORKS pioneered three-dimensional modeling, simulation,
    and visualization. With VR, engineers and designers can directly experience the
    end product before it''s actually built and play with what-if scenarios at a very
    low cost. Consider iterating a new automobile design. How does it look? How does
    it perform? How does it appear when sitting in the driver''s seat?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Architecture and civil engineering**: Architects and engineers have always
    constructed scale models of their designs, if only to pitch the ideas to clients
    and investors or, more importantly, to validate the many assumptions about the
    design. Presently, modeling and rendering software is commonly used to build virtual
    models from architectural plans. With VR, the conversations with stakeholders
    can be so much more confident. Other personnel, such as the interior designers,
    HVAC, and electrical engineers, can be brought into the process sooner.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Real estate**: Real estate agents have been quick adopters of the internet
    and visualization technology to attract buyers and close sales. Real estate search
    websites were some of the first successful uses of the web. Online panoramic video
    walkthroughs of for-sale properties are commonplace today. With VR, I can be in
    New York and find a place to live in Los Angeles.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Medicine**: The potential of VR for health and medicine may literally be
    a matter of life and death. Every day, hospitals use MRI and other scanning devices
    to produce models of our bones and organs that are used for medical diagnosis
    and possibly pre-operative planning. Using VR to enhance visualization and measurement
    will provide a more intuitive analysis. Virtual reality is also being used for
    the simulation of surgery to train medical students.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mental health**: Virtual reality experiences have been shown to be effective
    in a therapeutic context for the treatment of **post-traumatic stress disorder**
    (**PTSD**) in what''s called **exposure therapy**, where the patient, guided by
    a trained therapist, confronts their traumatic memories through the retelling
    of the experience. Similarly, VR is being used to treat arachnophobia (fear of
    spiders) and the fear of flying.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Education**: The educational opportunities for VR are almost too obvious
    to mention. One of the first successful VR experiences is **Titans of Space**,
    which lets you explore the solar system first-hand. In science, history, arts,
    and mathematics, VR will help students of all ages because, as they say, field
    trips are much more effective than textbooks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Training**: Toyota has demonstrated a VR simulation of drivers'' education
    to teach teenagers about the risks of distracted driving. In another project,
    vocational students got to experience the operating of cranes and other heavy
    construction equipment. Training for first responders, the police, and fire and
    rescue workers can be enhanced with VR by presenting highly risky situations and
    alternative virtual scenarios. The **National Football League** (**NFL**) and
    college teams are looking to VR for athletic training.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Entertainment and journalism**: Virtually attend rock concerts and sporting
    events. Watch music videos Erotica. Re-experience news events as if you were personally
    present. Enjoy 360-degree cinematic experiences. The art of storytelling will
    be transformed by virtual reality.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wow, that's quite a list! This is just the low-hanging fruit.
  prefs: []
  type: TYPE_NORMAL
- en: The purpose of this book is not to dive too deeply into any of these applications.
    Rather, I hope that this survey helps stimulate your thinking and provides an
    idea of how virtual reality has the potential to be virtually anything for everyone.
  prefs: []
  type: TYPE_NORMAL
- en: How virtual reality really works
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'So, what is it about VR that''s got everyone so excited? With your headset
    on, you experience synthetic scenes. It appears 3D, it feels 3D, and maybe you
    even have a sense of actually being there inside the virtual world. The strikingly
    obvious thing is: VR looks and feels *really cool!* But why?'
  prefs: []
  type: TYPE_NORMAL
- en: '*Immersion* and *presence* are the two words used to describe the quality of
    a VR experience. The Holy Grail is to increase both to the point where it seems
    so real, you forget you''re in a virtual world. *Immersion* is the result of emulating
    the sensory input that your body receives (visual, auditory, motor, and so on).
    This can be explained technically. *Presence* is the visceral feeling that you
    get being transported there—a deep emotional or intuitive feeling. You could say
    that immersion is the science of VR and presence is the art. And that, my friend,
    is cool.'
  prefs: []
  type: TYPE_NORMAL
- en: 'A number of different technologies and techniques come together to make the
    VR experience work, which can be separated into two basic areas:'
  prefs: []
  type: TYPE_NORMAL
- en: 3D viewing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Head-pose tracking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In other words, displays and sensors, like those built into today's mobile devices,
    are a big reason why VR is possible and affordable today.
  prefs: []
  type: TYPE_NORMAL
- en: Suppose the VR system knows exactly where your head is positioned at any given
    moment in time. Suppose that it can immediately render and display the 3D scene
    for this precise viewpoint stereoscopically. Then, wherever and whenever you move,
    you'll see the virtual scene exactly as you should. You will have a nearly perfect
    visual VR experience. That's basically it. *Ta-dah!*
  prefs: []
  type: TYPE_NORMAL
- en: Well, not so fast. Literally.
  prefs: []
  type: TYPE_NORMAL
- en: Stereoscopic 3D viewing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Split-screen stereography was discovered not long after the invention of photography,
    like the popular stereograph viewer from 1876 shown in the following picture (B.W.
    Kilborn & Co, Littleton, New Hampshire; see [http://en.wikipedia.org/wiki/Benjamin_W._Kilburn](http://en.wikipedia.org/wiki/Benjamin_W._Kilburn)).
    A stereo photograph has separate views for the left and right eyes, which are
    slightly offset to create parallax. This fools the brain into thinking that it''s
    a truly three-dimensional view. The device contains separate lenses for each eye,
    which let you easily focus on the photo close up:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dc2f2a33-1eec-4508-a5b4-cde20729a85e.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Similarly, rendering these side-by-side stereo views is the first job of the
    VR-enabled camera in Unity.
  prefs: []
  type: TYPE_NORMAL
- en: Let's say that you're wearing a VR headset and you're holding your head very
    still so that the image looks frozen. It still appears better than a simple stereograph.
    Why?
  prefs: []
  type: TYPE_NORMAL
- en: The old-fashioned stereograph has relatively small twin images rectangularly
    bound. When your eye is focused on the center of the view, the 3D effect is convincing,
    but you will see the boundaries of the view. Move your eyes around (even with
    your head still), and any remaining sense of immersion is totally lost. You're
    just an observer on the outside peering into a diorama.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, consider what a VR screen looks like without the headset (see the following
    screenshot):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4451f000-720d-434a-8f38-7c9cdbdade61.png)'
  prefs: []
  type: TYPE_IMG
- en: The first thing that you will notice is that each eye has a barrel-shaped view.
    Why is that? The headset lens is a very wide-angle lens. So, when you look through
    it, you have a nice wide field of view. In fact, it is so wide (and tall), it
    distorts the image (**pincushion effect**). The graphics software SDK does an
    inverse of that distortion (**barrel distortion**) so that it looks correct to
    us through the lenses. This is referred to as an **ocular distortion correction**.
    The result is an apparent **field of view** (**FOV**) that is wide enough to include
    a lot more of your peripheral vision. For example, the Oculus Rift has a FOV of
    about 100 degrees. (We talk more about FOV in [Chapter 10](df997d92-d63c-4701-9786-da7ba54082b6.xhtml),
    *Using All 360 Degrees*.)
  prefs: []
  type: TYPE_NORMAL
- en: Also, of course, the view angle from each eye is slightly offset, comparable
    to the distance between your eyes or the **Inter Pupillary Distance** (**IPD**).
    IPD is used to calculate the parallax and can vary from one person to the next.
    (The Oculus Configuration Utility comes with a utility to measure and configure
    your IPD. Alternatively, you can ask your eye doctor for an accurate measurement.)
  prefs: []
  type: TYPE_NORMAL
- en: It might be less obvious, but if you look closer at the VR screen, you will
    see color separations, like you'd get from a color printer whose print head is
    not aligned properly. This is intentional. Light passing through a lens is refracted
    at different angles based on the wavelength of the light. Again, the rendering
    software does an inverse of the color separation so that it looks correct to us.
    This is referred to as a **chromatic aberration correction**. It helps make the
    image look really crisp.
  prefs: []
  type: TYPE_NORMAL
- en: The resolution of the screen is also important to get a convincing view. If
    it's too low-res, you'll see the pixels, or what some refer to as a **screen-door
    effect**. The pixel width and height of the display is an oft-quoted specification
    when comparing the HMDs, but the **pixels per inch** (**PPI**) value may be more
    important. Other innovations in display technology such as **pixel smearing**
    and **foveated rendering** (showing higher-resolution details exactly where the
    eyeball is looking) will also help reduce the screen-door effect.
  prefs: []
  type: TYPE_NORMAL
- en: When experiencing a 3D scene in VR, you must also consider the **frames per
    second** (**FPS**). If the FPS is too slow, the animation will look choppy. Things
    that affect FPS include the GPU performance and the complexity of the Unity scene
    (the number of polygons and lighting calculations), among other factors. *This
    is compounded in VR because you need to draw the scene twice, once for each eye*.
    Technology innovations, such as GPUs optimized for VR, frame interpolation, and
    other techniques will improve the frame rates. For us, developers, performance-tuning
    techniques in Unity, such as those used by mobile game developers, can be applied
    in VR. (We will talk more about performance optimization in [Chapter 13](c938e975-93f3-4435-9d99-9f76bbbd0a98.xhtml),
    *Optimizing for Performance and Comfort*.) These techniques and optics help make
    the 3D scene appear realistic.
  prefs: []
  type: TYPE_NORMAL
- en: Sound is also very important—more important than many people realize. VR should
    be experienced while wearing stereo headphones. In fact, when the audio is done
    well but the graphics are pretty crappy, you can still have a great experience.
    We see this a lot in TV and cinema. The same holds true in VR. Binaural audio
    gives each ear its own stereo *view* of a sound source in such a way that your
    brain imagines its location in 3D space. No special listening devices are needed.
    Regular headphones will work (speakers will not). For example, put on your headphones
    and visit the *Virtual Barber Shop* at [https://www.youtube.com/watch?v=IUDTlvagjJA](http://www.youtube.com/watch?v=IUDTlvagjJA).
    True 3D audio provides an even more realistic spatial audio rendering, where sounds
    bounce off nearby walls and can be occluded by obstacles in the scene to enhance
    the first-person experience and realism.
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, the VR headset should fit your head and face comfortably so that it's
    easy to forget that you're wearing it, and it should block out light from the
    real environment around you.
  prefs: []
  type: TYPE_NORMAL
- en: Head tracking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So, we have a nice 3D picture that is viewable in a comfortable VR headset with
    a wide field of view. If this was it and you moved your head, it'd feel like you
    had a diorama box stuck to your face. Move your head and the box moves along with
    it, and this is much like holding the antique stereograph device or the childhood
    **View-Master**. Fortunately, VR is so much better.
  prefs: []
  type: TYPE_NORMAL
- en: The VR headset has a motion sensor (IMU) inside that detects spatial acceleration
    and rotation rates on all three axes, providing what's called the **six degrees
    of freedom**. This is the same technology that is commonly found in mobile phones
    and some console game controllers. Mounted on your headset, when you move your
    head, the current viewpoint is calculated and used when the next frame's image
    is drawn. This is referred to as **motion detection**.
  prefs: []
  type: TYPE_NORMAL
- en: The previous generation of mobile motion sensors was good enough for us to play
    mobile games on a phone, but for VR, it's not accurate enough. These inaccuracies
    (rounding errors) accumulate over time, as the sensor is sampled thousands of
    times per second and one may eventually lose track of where they were in the real
    world. This *drift* was a major shortfall of the older, phone-based Google Cardboard
    VR. It could sense your head's motion, but it lost track of your head's orientation.
    The current generation of phones, such as Google Pixel and Samsung Galaxy, which
    conform to the Daydream specifications, have upgraded sensors.
  prefs: []
  type: TYPE_NORMAL
- en: High-end HMDs account for drift with a separate *positional tracking* mechanism.
    The Oculus Rift does this with *inside-out positional tracking*, where an array
    of (invisible) infrared LEDs on the HMD are read by an external optical sensor
    (infrared camera) to determine your position. You need to remain within the *view*
    of the camera for the head tracking to work.
  prefs: []
  type: TYPE_NORMAL
- en: Alternatively, the Steam VR VIVE Lighthouse technology does outside-in positional
    tracking, where two or more dumb laser emitters are placed in the room (much like
    the lasers in a barcode reader at the grocery checkout), and an optical sensor
    on the headset reads the rays to determine your position.
  prefs: []
  type: TYPE_NORMAL
- en: Windows MR headsets use no external sensors or cameras. Rather, there are integrated
    cameras and sensors to perform spatial mapping of the local environment around
    you, in order to locate and track your position in the real-world 3D space.
  prefs: []
  type: TYPE_NORMAL
- en: Either way, the primary purpose is to accurately find the position of your head
    and other similarly equipped devices, such as handheld controllers.
  prefs: []
  type: TYPE_NORMAL
- en: Together, the position, tilt, and the forward direction of your head—or the
    *head pose—*are used by the graphics software to redraw the 3D scene from this
    vantage point. Graphics engines such as Unity are really good at this.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's say that the screen is getting updated at 90 FPS, and you're moving
    your head. The software determines the head pose, renders the 3D view, and draws
    it on the HMD screen. However, you're still moving your head. So, by the time
    it's displayed, the image is a little out of date with respect to your current
    position. This is called **latency**, and it can make you feel nauseous.
  prefs: []
  type: TYPE_NORMAL
- en: Motion sickness caused by latency in VR occurs when you're moving your head
    and your brain expects the world around you to change exactly in sync. Any perceptible
    delay can make you uncomfortable, to say the least.
  prefs: []
  type: TYPE_NORMAL
- en: 'Latency can be measured as the time from reading a motion sensor to rendering
    the corresponding image, or the *sensor-to-pixel* delay. According to Oculus''s
    John Carmack:'
  prefs: []
  type: TYPE_NORMAL
- en: A total latency of 50 milliseconds will feel responsive, but still noticeable
    laggy. 20 milliseconds or less will provide the minimum level of latency deemed
    acceptable.
  prefs: []
  type: TYPE_NORMAL
- en: There are a number of very clever strategies that can be used to implement latency
    compensation. The details are outside the scope of this book and inevitably will
    change as device manufacturers improve on the technology. One of these strategies
    is what Oculus calls the **timewarp**, which tries to guess where your head will
    be by the time the rendering is done and uses that future head pose instead of
    the actual detected one. All of this is handled in the SDK, so as a Unity developer,
    you do not have to deal with it directly.
  prefs: []
  type: TYPE_NORMAL
- en: Meanwhile, as VR developers, we need to be aware of latency as well as the other
    causes of motion sickness. Latency can be reduced via the faster rendering of
    each frame (keeping the recommended FPS). This can be achieved by discouraging
    your head from moving too quickly and using other techniques to make yourself
    feel grounded and comfortable.
  prefs: []
  type: TYPE_NORMAL
- en: Another thing that the Rift does to improve head tracking and realism is that
    it uses a skeletal representation of the neck so that all the rotations that it
    receives are mapped more accurately to the head rotation. For example, looking
    down at your lap creates a small forward translation since it knows it's impossible
    to rotate one's head downwards on the spot.
  prefs: []
  type: TYPE_NORMAL
- en: Other than head tracking, stereography, and 3D audio, virtual reality experiences
    can be enhanced with body tracking, hand tracking (and gesture recognition), locomotion
    tracking (for example, VR treadmills), and controllers with haptic feedback. The
    goal of all of this is to increase your sense of immersion and presence in the
    virtual world.
  prefs: []
  type: TYPE_NORMAL
- en: Types of VR experiences
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There is not just one kind of virtual reality experience. In fact, there are
    many. Consider the following types of virtual reality experiences:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Diorama**: In the simplest case, we build a 3D scene. You''re observing from
    a third-person perspective. Your eye is the camera. Actually, each eye is a separate
    camera that gives you a stereographic view. You can look around.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**First-person experience**: This time, you''re immersed in the scene as a
    freely moving avatar. Using an input controller (keyboard, game controller, or
    some other technique), you can walk around and explore the virtual scene.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Interactive virtual environment**: This is like the first-person experience,
    but it has an additional feature—while you are in the scene, you can interact
    with the objects in it. Physics is at play. Objects may respond to you. You may
    be given specific goals to achieve and challenges with the game mechanics. You
    might even earn points and keep score.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**3D content creation**: In VR, create content that can be experienced in VR.
    **Google Tilt Brush** is one of the first blockbuster experiences, as is **Oculus
    Medium** and **Google Blocks** and others. Unity is working on **EditorXR** for
    Unity developers to work on their projects directly in the VR scene.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Riding on rails**: In this kind of experience, you''re seated and being transported
    through the environment (or the environment changes around you). For example,
    you can ride a rollercoaster via this virtual reality experience. However, it
    may not necessarily be an extreme thrill ride. It can be a simple real estate
    walk-through or even a slow, easy, and meditative experience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**360-degree media**: Think panoramic images taken with **GoPro** on steroids
    that are projected on the inside of a sphere. You''re positioned at the center
    of the sphere and can look all around. Some purists don''t consider this *real* virtual
    reality, because you''re seeing a projection and not a model rendering. However,
    it can provide an effective sense of presence.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Social VR**: When multiple players enter the same VR space and can see and
    speak with each other''s avatars, it becomes a remarkable social experience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this book, we will implement a number of projects that demonstrate how to
    build each of these types of VR experience. For brevity, we'll need to keep it
    pure and simple, with suggestions for areas for further investigation.
  prefs: []
  type: TYPE_NORMAL
- en: Technical skills that are important to VR
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Each chapter of the book introduces new technical skills and concepts that
    are important if you wish to build your own virtual reality applications. You
    will learn about the following in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '**World scale**: When building for a VR experience, attention to the 3D space
    and scale is important. One unit in Unity is usually equal to one meter in the
    virtual world.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**First-person controls**: There are various techniques that can be used to
    control the movement of your avatar (first-person camera), gaze-based selection,
    tracked hand input controllers, and head movements.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User interface ****controls**: Unlike conventional video (and mobile) games,
    all user interface components are in world coordinates in VR, not screen coordinates.
    We''ll explore ways to present notices, buttons, selectors, and other **user interface**
    (**UI**) controls to the users so that they can interact and make selections.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Physics and gravity**: Critical to the sense of presence and immersion in
    VR is the physics and gravity of the world. We''ll use the Unity physics engine
    to our advantage.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Animations**: Moving objects within the scene is called *animation*—duh!
    It can either be along predefined paths or it may use AI (artificial intelligence)
    scripting that follows a logical algorithm in response to events in the environment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multi-user services**: Real-time networking and multi-user games are not
    easy to implement, but online services make it easy without you having to be a
    computer engineer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Build**, **run and optimize**: Different HMDs use different developer kits
    SDK and assets to build applications that target a specific device. We''ll consider
    techniques that let you use a single interface for multiple devices. Understanding
    the rendering pipeline and how to optimize performance is a critical skill for
    VR development.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will write scripts in the C# language and use features of Unity as and when
    they are needed to get things done.
  prefs: []
  type: TYPE_NORMAL
- en: However, there are technical areas that we will not cover, such as realistic
    rendering, shaders, materials, and lighting. We will not go into modeling techniques,
    terrains, or humanoid animations. We also won't discuss game mechanics, dynamics,
    and strategies. All of these are very important topics that may be necessary for
    you to learn (or for someone in your team), in addition to this book, to build
    complete, successful and immersive VR applications.
  prefs: []
  type: TYPE_NORMAL
- en: So let's see what does this book actually covers and who does it caters to.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book takes a practical, project-based approach to teach the specifics of
    virtual reality development using the Unity 3D game development engine. You'll
    learn how to use Unity 2018 to develop VR applications, which can be experienced
    with devices such as the Oculus Rift or Google Cardboard and all kinds of devices
    in between.
  prefs: []
  type: TYPE_NORMAL
- en: However, we have a slight problem here—the technology is advancing very rapidly.
    Of course, this is a good problem to have. Actually, it's an awesome problem to
    have, unless you're a developer in the middle of a project or an author of a book
    on this technology! How does one write a book that does not have obsolete content
    the day it's published?
  prefs: []
  type: TYPE_NORMAL
- en: 'Throughout the book, I have tried to distill some universal principles that
    should outlive any short-term advances in virtual reality technology, which includes
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Categorization of different types of VR experiences with example projects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important technical ideas and skills, especially the ones relevant to the building
    of VR applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: General explanations on how VR devices and software works
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strategies to ensure user comfort and to avoid VR motion sickness
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instructions on using the Unity game engine to build VR experiences
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once VR becomes mainstream, many of these lessons will perhaps be obvious rather
    than obsolete, just like the explanations from the 1980s on *how to use a mouse*
    would just be silly today.
  prefs: []
  type: TYPE_NORMAL
- en: Who are you?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are interested in virtual reality, want to learn how it works, or want
    to create VR experiences yourself, this book is for you. We will walk you through
    a series of hands-on projects, step-by-step tutorials, and in-depth discussions
    using the Unity 3D game engine.
  prefs: []
  type: TYPE_NORMAL
- en: Whether you're a non-programmer who is unfamiliar with 3D computer graphics,
    or a person with experience in both but new to virtual reality, you will benefit
    from this book. It could be your first foray into Unity, or you may have some
    experience, but you do not need to be an expert either. Still, if you're new to
    Unity, you can pick up this book as long as you realize that you'll need to adapt
    to the pace of the book.
  prefs: []
  type: TYPE_NORMAL
- en: Game developers may already be familiar with the concepts in the book, which
    are reapplied to the VR projects along with many other ideas that are specific
    to VR. Engineers and 3D designers may understand many of the 3D concepts, but
    they may wish to learn to use the game engine for VR. Application developers may
    appreciate the potential non-gaming uses of VR and want to learn the tools that
    can make this happen.
  prefs: []
  type: TYPE_NORMAL
- en: Whoever you are, we're going to turn you into a *3D software VR ninja*. Well,
    OK, this may be a stretch for this little book, but we'll try to set you on the
    way.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we looked at virtual reality and realized that it can mean
    a lot of things to different people and can have different applications. There's
    no single definition, and it's a moving target. We are not alone, as everyone's
    still trying to figure it out. The fact is that virtual reality is a new medium
    that will take years, if not decades, to reach its potential.
  prefs: []
  type: TYPE_NORMAL
- en: VR is not just for games; it can be a game changer for many different applications.
    We identified over a dozen. There are different kinds of VR experiences, which
    we'll explore in the projects in this book.
  prefs: []
  type: TYPE_NORMAL
- en: VR headsets can be divided into those that require a separate processing unit
    (such as a desktop PC or a console) that runs with a powerful GPU and the ones
    that use your mobile technologies for processing.
  prefs: []
  type: TYPE_NORMAL
- en: We're all pioneers living at an exciting time. Because you're reading this book,
    you're one, too. Whatever happens next is literally up to you. *The best way to
    predict the future is to invent it.*
  prefs: []
  type: TYPE_NORMAL
- en: So, let's get to it!
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we'll jump right into Unity and create our first 3D scene
    and learn about world coordinates, scaling, and importing 3D assets. Then, in
    [Chapter 3](5f03c1ec-a1bc-4ec8-bf4b-dc7a4492aba4.xhtml), *VR Build and Run*, we'll
    build and run it on a VR headset, and we'll discuss how virtual reality really
    works.
  prefs: []
  type: TYPE_NORMAL
