["```cs\n    var host = new HostBuilder()\n        .ConfigureFunctionsWebApplication()\n        .ConfigureServices((context, services) =>\n        {\n            services.AddApplicationInsightsTelemetryWorkerService()\n                .ConfigureFunctionsApplicationInsights()\n                .AddOptions<MyOptions>()\n                .BindConfiguration(\"\");\n        })\n        .Build();\n    host.Run();\n    ```", "```cs\n    public class MyOptions\n    {\n        public string? MyReturnProperty { get; set; } = \"my value in \n        code\";\n    }\n    ```", "```cs\npublic class Function1\n{\n    private readonly IOptions<MyOptions> _options;\n    private readonly ILogger<Function1> _logger;\n    public Function1(IOptions<MyOptions> options, ILogger<Function1> \n    logger)\n    {\n        _options = options;\n        _logger = logger;\n    }\n    [Function(\"Function1\")]\n    public IActionResult Run([HttpTrigger(AuthorizationLevel.\n    Anonymous, \"get\", \"post\")] HttpRequest req)\n    {\n        _logger.LogInformation(\"C# HTTP trigger function processed a \n        request.\");\n        return new OkObjectResult(_options.Value.MyReturnProperty);\n    }\n}\n```", "```cs\npublic class Products\n{\n    private readonly IOptions<MyOptions> _options;\n    private readonly ILogger<Products> _logger;\n    public Products(IOptions<MyOptions> options, ILogger<Products> \n    logger)\n    {\n        _options = options;\n        _logger = logger;\n    }\n    [Function(nameof(Products))]\n    public IActionResult Run([HttpTrigger(AuthorizationLevel.\n    Anonymous, \"get\", Route = \"products/{category:alpha}/{id:int?}\")] \n    HttpRequest req,\n        string category, int id = 0)\n    {\n        _logger.LogInformation(\"C# HTTP trigger function processed a \n        request.\");\n        return new OkObjectResult(new\n        {\n            category,\n            id\n        });\n    }\n}\n```", "```cs\n{\n  \"version\": \"2.0\",\n  \"logging\": {\n    \"applicationInsights\": {\n      \"samplingSettings\": {\n        \"isEnabled\": true,\n        \"excludedTypes\": \"Request\"\n      },\n      \"enableLiveMetricsFilters\": true\n    }\n  },\n  \"extensions\": {\n    \"http\": {\n      \"routePrefix\": \"myapi\"\n    }\n  }\n}\n```"]