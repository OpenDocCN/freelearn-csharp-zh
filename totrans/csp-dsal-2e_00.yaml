- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: '**Hello, I am Marcin!**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**你好，我是马尔钦！**'
- en: It is so nice to meet you and to invite you to an amazing journey through various
    data structures and algorithms presented in this book. As you could already know,
    developing applications is certainly something exciting to work on, but it is
    also challenging, especially if you need to solve some complex problems. In such
    cases, you often need to take care of performance to ensure that the solution
    will work smoothly on devices with limited resources. Such a task could be really
    difficult and could require significant knowledge regarding not only the programming
    language but also data structures and algorithms. However, have you ever thought
    profoundly about them and their impact on the performance of your applications?
    If not, it is high time to take a look at this topic, and this book is a great
    place to start!
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 很高兴见到你，并邀请你踏上一次通过本书中展示的各种数据结构和算法的精彩之旅。正如你可能已经知道的，开发应用程序当然是一件令人兴奋的工作，但它也是具有挑战性的，尤其是当你需要解决一些复杂问题时。在这种情况下，你通常需要关注性能，以确保解决方案能够在资源有限的设备上顺利运行。这样的任务可能真的很难，并且可能需要关于不仅编程语言而且数据结构和算法的显著知识。然而，你有没有深入思考过它们以及它们对你应用程序性能的影响？如果没有，那么现在是时候关注这个主题了，而这本书是一个很好的起点！
- en: Did you know that replacing even one data structure with another could cause
    the performance results to increase hundreds of times or even more? Does it sound
    impossible? Maybe, but it is true! As an example, I would like to tell you a short
    story about one of the projects in which I was involved some time ago. The aim
    was to optimize the algorithm to find connections between blocks on a graphical
    diagram. Such connections should be automatically recalculated, refreshed, and
    redrawn as soon as any block has moved in the diagram. Of course, connections
    cannot go through blocks and cannot overlap other lines, and the number of crossings
    and direction changes should be limited. Depending on the size and the complexity
    of the diagram, the performance results differ significantly. However, while conducting
    tests, we received results in the range of 1 ms to almost 800 ms for the same
    test case. What was perhaps the most surprising aspect is that such a huge improvement
    was reached mainly by... changing the data structures of two sets.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道仅仅用一个数据结构替换另一个数据结构可能会使性能结果提高数百倍甚至更多吗？这听起来不可能吗？也许吧，但这是真的！作为一个例子，我想告诉你一个关于我之前参与的一个项目的简短故事。目标是优化算法以找到图形图中块之间的连接。这些连接应该在任何块在图中移动时自动重新计算、刷新和重新绘制。当然，连接不能穿过块，也不能与其他线条重叠，并且交叉点和方向变化的数量应该受到限制。根据图的大小和复杂性，性能结果差异很大。然而，在进行测试时，我们收到了从1毫秒到几乎800毫秒的相同测试用例的结果。也许最令人惊讶的是，这种巨大的改进主要是通过...改变两个集合的数据结构来实现的。
- en: Are you interested in knowing the influence of choosing a suitable data structure
    on the performance of your application? Do you want to know how you can increase
    the quality and performance of your solution by choosing the right accompanying
    algorithm? Are you curious about real-world scenarios where various data structures
    can be applied, as well as which algorithms could be used to solve some common
    problems? Unfortunately, the answer to such questions is not simple. However,
    within this book, you will find a lot of information about data structures and
    algorithms, presented in the context of the C# programming language, with many
    examples, code snippets, illustrations, and detailed explanations. Such content
    could help you to answer the aforementioned questions while developing the next
    great solutions, which could be used by many people all over the world! Are you
    ready to start your adventure with data structures and algorithms? If so, welcome
    on board of this book!
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否对了解选择合适的数据结构对你应用程序性能的影响感兴趣？你想要知道如何通过选择正确的伴随算法来提高解决方案的质量和性能吗？你对各种数据结构在实际场景中的应用以及解决一些常见问题可能使用的算法好奇吗？不幸的是，这些问题的答案并不简单。然而，在这本书中，你将找到大量关于数据结构和算法的信息，这些信息是在C#编程语言的背景下呈现的，包括许多示例、代码片段、插图和详细解释。这样的内容可以帮助你在开发下一个伟大的解决方案时回答上述问题，这些解决方案将被世界各地的人们使用！你准备好开始你的数据结构和算法冒险之旅了吗？如果是这样，欢迎加入这本书的行列！
- en: The book covers many data structures, starting with simple ones, namely arrays
    and a few of their variants, as representatives of random access data structures.
    Then, lists are introduced, together with their sorted, linked, and circular versions.
    The book also explains limited access data structures, based on stacks and queues,
    including a priority and a circular queue. Following this, we introduce you to
    the dictionary data structure, which allows you to map keys to values and perform
    fast lookup. The sorted variant of a dictionary is supported, as well. If you
    want to benefit from high-performance, set-related operations, you can use another
    data structure, namely a hash set. One of the most powerful constructs is a tree,
    which exists in many variants, including a binary tree, a binary search tree,
    a self-balancing tree, a trie, and a heap. The last data structure we analyze
    is a graph, supported by many interesting algorithmic topics, such as graph traversal,
    minimum spanning tree, node coloring, and finding the shortest path.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书涵盖了多种数据结构，从简单的开始，即数组和它们的一些变体，作为随机访问数据结构的代表。然后，介绍了列表及其排序、链式和循环版本。本书还解释了基于栈和队列的有限访问数据结构，包括优先队列和循环队列。在此之后，我们将向您介绍字典数据结构，它允许您将键映射到值并执行快速查找。字典的排序变体也得到了支持。如果您想从高性能的集合相关操作中受益，可以使用另一种数据结构，即哈希集。其中最强大的结构之一是树，它存在许多变体，包括二叉树、二叉搜索树、自平衡树、前缀树和堆。最后分析的数据结构是图，它支持许多有趣的算法主题，如图遍历、最小生成树、节点着色和寻找最短路径。
- en: Arrays, lists, stacks, queues, dictionaries, hash sets, trees, tries, heaps,
    and graphs, as well as accompanying algorithms – a broad range of subjects await
    you on the next pages! Let’s start the adventure and take the first step toward
    your mastery of data structures and algorithms, which hopefully will have a positive
    effect on your projects and on your career as a software developer!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 数组、列表、栈、队列、字典、哈希集、树、前缀树、堆和图，以及相关的算法——下一页将为您展示一个广泛的主题范围！让我们开始这场冒险，迈出掌握数据结构和算法的第一步，这希望会对您的项目和作为软件开发者的职业生涯产生积极的影响！
- en: Who this book is for
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: The book is aimed at developers who would like to learn about the data structures
    and algorithms that can be used with the C# language in various kind of applications,
    including web and mobile solutions. The topics presented here are suitable for
    programmers with various levels of experience, and even beginners will find interesting
    content. However, having at least basic knowledge of the C# programming language,
    such as about object-oriented programming, will be an added advantage.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在帮助那些希望了解在C#语言的各种应用中可以使用的数据结构和算法的开发者，包括Web和移动解决方案。这里介绍的主题适合具有各种经验水平的程序员，即使是初学者也会发现有趣的内容。然而，至少具备C#编程语言的基本知识，例如面向对象编程，将是一个额外的优势。
- en: It is worth noting that this book can contain some simplifications to make the
    subject easier to understand. What’s more, some data structures are only mentioned
    briefly, without detailed explanations or examples. The book’s aim is to interest
    you in the topic of data structures and algorithms, so you can further expand
    your knowledge with other books, research papers or on-line resources.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，本书可能包含一些简化，以便使主题更容易理解。更重要的是，一些数据结构只是简要提及，没有详细的解释或示例。本书的目的是激发您对数据结构和算法主题的兴趣，以便您可以通过其他书籍、研究论文或在线资源进一步扩展您的知识。
- en: To easily understand the content, the book is equipped with many illustrations
    and examples. What is more, the source code for the accompanying projects is attached
    to the chapters and is available in the GitHub repository. Thus, you can easily
    run example applications and debug them without writing the code on your own.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了轻松理解内容，本书配备了大量的插图和示例。更重要的是，配套项目的源代码附在章节中，并在GitHub仓库中可用。因此，您可以轻松运行示例应用程序并对其进行调试，而无需自己编写代码。
- en: It is worth mentioning that the code can be simplified and it can differ from
    the best practices. The examples can have significantly limited, or even no, security
    checks and functionalities. Before publishing your application using the content
    presented in the book, the application should be thoroughly tested to ensure that
    it works correctly in various circumstances, such as in the scenario of passing
    incorrect data.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，代码可以简化，并且可能与最佳实践有所不同。示例可能具有显著限制，甚至没有安全检查和功能。在发布书中提供的内容所构建的应用程序之前，应彻底测试应用程序，以确保在各种情况下都能正确运行，例如在传递错误数据的情况下。
- en: What this book covers
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[*Chapter 1*](B18069_01.xhtml#_idTextAnchor013), *Data Types*, introduces you
    to the topic of the data types available while developing applications in the
    C# programming language, both value and reference ones. You will learn about the
    built-in value types, such as integral or floating-point numbers, as well as constants,
    enumerations, value tuples, user-defined struct types, and nullable value types.
    As for the reference types, you will see object and string types, classes, records,
    interfaces, and delegate and dynamic types, as well as nullable reference types.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*](B18069_01.xhtml#_idTextAnchor013)，*数据类型*，介绍了在C#编程语言中开发应用程序时可用数据类型的话题，包括值类型和引用类型。你将了解内置的值类型，如整数或浮点数，以及常量、枚举、值元组、用户定义的结构类型和可空值类型。至于引用类型，你将看到对象和字符串类型、类、记录、接口以及委托和动态类型，以及可空引用类型。'
- en: '[*Chapter 2*](B18069_02.xhtml#_idTextAnchor063), *Introduction to Algorithms*,
    presents you with an algorithm definition and some real-world examples from your
    daily life. Then, you will learn a few notations for algorithms, namely natural
    language, a flowchart, pseudocode, and a programming language. Various types of
    algorithms are shown as well, including recursive, divide and conquer, back-tracking,
    greedy, heuristic, brute force, and dynamic programming. Computational complexity,
    including time complexity, is also presented and explained.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*](B18069_02.xhtml#_idTextAnchor063)，*算法简介*，向你展示了算法的定义和一些来自你日常生活的真实世界示例。然后，你将学习一些算法的表示方法，即自然语言、流程图、伪代码和编程语言。还展示了各种类型的算法，包括递归、分而治之、回溯、贪婪、启发式、穷举和动态规划。还介绍了计算复杂性，包括时间复杂性，并进行了解释。'
- en: '[*Chapter 3*](B18069_03.xhtml#_idTextAnchor088), *Arrays and Sorting*, covers
    scenarios storing data using some representatives of random access data structures,
    namely arrays. First, three variants of arrays are explained, that is, single-dimensional,
    multi-dimensional, and jagged. You’ll also get to know seven popular sorting algorithms,
    namely selection sort, insertion sort, bubble sort, merge sort, Shell sort, quicksort,
    and heap sort. All of these algorithms are shown with illustrations, implementation
    code, and detailed explanations.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*](B18069_03.xhtml#_idTextAnchor088)，*数组和排序*，涵盖了使用一些随机访问数据结构的代表来存储数据的情况，即数组。首先，解释了数组的三个变体，即一维、多维和锯齿形。你还将了解七种流行的排序算法，包括选择排序、插入排序、冒泡排序、归并排序、希尔排序、快速排序和堆排序。所有这些算法都配有插图、实现代码和详细解释。'
- en: '[*Chapter 4*](B18069_04.xhtml#_idTextAnchor129), *Variants of Lists*, deals
    with other representatives of random access data structures, namely a few variants
    of lists. Lists are similar to arrays, but make it possible to dynamically increase
    the size of the collection if necessary. A few variants of lists, including a
    singly linked list, a doubly linked list, a circular singly linked list, and a
    circular doubly linked list are introduced. Such data structures are presented
    in illustrations, are implemented using C# code, and are explained in detail.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](B18069_04.xhtml#_idTextAnchor129)，*列表的变体*，处理其他随机访问数据结构的代表，即列表的一些变体。列表类似于数组，但在必要时可以动态增加集合的大小。介绍了几个列表的变体，包括单链表、双链表、循环单链表和循环双链表。这些数据结构以插图形式呈现，使用C#代码实现，并进行了详细解释。'
- en: '[*Chapter 5*](B18069_05.xhtml#_idTextAnchor165), *Stacks and Queues*, explains
    how to use two variants of limited access data structures, namely stacks and queues,
    including priority and circular queues. The chapter shows how to perform push
    and pop operations on a stack, and also describes the enqueue and dequeue operations
    in the case of a queue. To aid your understanding of these topics, a few examples
    are presented, including the Tower of Hanoi game and an application that simulates
    a call center with multiple consultants and callers.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B18069_05.xhtml#_idTextAnchor165)，*栈和队列*，解释了如何使用两种有限访问数据结构，即栈和队列，包括优先队列和循环队列。本章展示了如何在栈上执行推入和弹出操作，并描述了队列中的入队和出队操作。为了帮助您理解这些主题，还提供了一些示例，包括汉诺塔游戏和模拟具有多个顾问和呼叫者的呼叫中心的程序。'
- en: '[*Chapter 6*](B18069_06.xhtml#_idTextAnchor195), *Dictionaries and Sets*, focuses
    on data structures that make it possible to map keys to values, perform fast lookups,
    and carry out various operations on sets. The chapter introduces you to both non-generic
    and generic variants of a hash table, the sorted dictionary, and the high-performance
    solution to set operations allowing you to get union, intersection, subtraction,
    and symmetric difference. The “sorted” set concept is shown, as well.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](B18069_06.xhtml#_idTextAnchor195)，*字典和集合*，专注于能够将键映射到值、执行快速查找并在集合上执行各种操作的数据结构。本章介绍了哈希表的非泛型和泛型变体、排序字典以及高性能的集合操作解决方案，允许您获取并集、交集、差集和对称差集。还展示了“排序”集合的概念。'
- en: '[*Chapter 7*](B18069_07.xhtml#_idTextAnchor233), *Variants of Trees*, describes
    a few tree-related topics. First, it presents a basic tree, together with its
    implementation in C#, and examples showing it in action. The chapter also introduces
    you to binary trees, binary search trees, and self-balancing trees, namely AVL
    and red-black trees. Then, you’ll see a trie that is a great approach for performing
    string-related operations. The remainder of the chapter is dedicated to a brief
    introduction to the topic of binary heaps as other tree-based structures.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B18069_07.xhtml#_idTextAnchor233)，*树的变体*，描述了一些与树相关的话题。首先，它展示了一个基本的树，以及其在C#中的实现和展示其功能的示例。本章还介绍了二叉树、二叉搜索树和自平衡树，即AVL树和红黑树。然后，您将看到一种
    trie，这是一种执行字符串相关操作的优秀方法。本章的其余部分简要介绍了二叉堆作为其他基于树的结构的话题。'
- en: '[*Chapter 8*](B18069_08.xhtml#_idTextAnchor296), *Exploring Graphs*, contains
    a lot of information about graphs, starting with an explanation of their basic
    concepts, including nodes and a few variants of edges. The C#-based implementation
    of a graph is also covered. The chapter introduces you to two modes of graph traversal,
    namely depth-first and breadth-first search. Then, it presents the subject of
    minimum spanning trees using Kruskal’s and Prim’s algorithms, the node coloring
    problem, and finding the shortest path in a graph using Dijkstra’s algorithm.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B18069_08.xhtml#_idTextAnchor296)，*探索图论*，包含大量关于图的信息，从解释其基本概念开始，包括节点和几种边的变体。还涵盖了基于C#的图实现。本章介绍了两种图遍历模式，即深度优先搜索和广度优先搜索。然后，它使用Kruskal和Prim算法介绍了最小生成树的主题，节点着色问题，以及使用Dijkstra算法在图中找到最短路径。'
- en: '[*Chapter 9*](B18069_09.xhtml#_idTextAnchor367), *See in Action*, presents
    a few examples of various types of algorithms. You’ll see a recursive way to calculate
    a number from the Fibonacci series, with dynamic programming optimization. Then,
    you’ll learn a greedy approach to a minimum coin change problem, a divide-and-conquer
    method of getting the closest pair of points, a recursive way of generating fractals,
    a back-tracking and recursive way of solving rat in a maze and Sudoku puzzles,
    as well as a genetic algorithm and brute-force password guessing.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B18069_09.xhtml#_idTextAnchor367)，*实战演练*，展示了各种类型算法的几个示例。您将看到一种递归方法来计算斐波那契数列中的数字，并使用动态规划进行优化。然后，您将学习一种贪心算法来解决最小硬币找零问题，一种用于获取最近点对的分而治之方法，一种生成分形图的递归方法，以及一种解决迷宫中的老鼠和数独谜题的回溯和递归方法，还包括遗传算法和暴力破解密码猜测。'
- en: '[*Chapter 10*](B18069_10.xhtml#_idTextAnchor379), *Conclusion*, is the conclusion
    of all the knowledge acquired from the previous chapters. It shows a brief classification
    of data structures, dividing them into two groups, namely linear and nonlinear.
    Finally, the chapter talks about the diversity of applications of various data
    structures. Each data structure is presented with a brief description and some
    of them are also shown with illustrations, to help you remember the information
    learned while reading the previous nine chapters.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B18069_10.xhtml#_idTextAnchor379)，*结论*，是总结前几章所获得的所有知识。它简要地分类了数据结构，将它们分为两组，即线性结构和非线性结构。最后，本章讨论了各种数据结构的多样化应用。每个数据结构都附有简要描述，其中一些还配有插图，以帮助您在阅读前九章时记住所学信息。'
- en: To get the most out of this book
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 要充分利用本书
- en: The book is aimed at programmers with various experience. However, beginners
    will also find some interesting content. Nevertheless, at least a basic knowledge
    of C#, such as object-oriented programming, will be an added advantage.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向具有各种经验的程序员。然而，初学者也会发现一些有趣的内容。尽管如此，至少需要具备C#的基本知识，如面向对象编程，这将是一个额外的优势。
- en: You need to have the**Visual Studio**IDE installed, in the version supporting**.NET
    8.0***.* You can download**Visual Studio 2022 Community**for free from[https://visualstudio.microsoft.com/free-developer-offers/](https://visualstudio.microsoft.com/free-developer-offers/)*.*
    The detailed step-by-step instructions on how to install it can be found at[https://learn.microsoft.com/en-us/visualstudio/install/install-visual-studio?view=vs-2022](https://learn.microsoft.com/en-us/visualstudio/install/install-visual-studio?view=vs-2022)*.*
    Please keep in mind that the **.NET desktop development**option should be chosen
    in the**Workloads**tab while configuring the installation*.*
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要安装**Visual Studio**集成开发环境（IDE），版本需支持**.NET 8.0**。您可以从[https://visualstudio.microsoft.com/free-developer-offers/](https://visualstudio.microsoft.com/free-developer-offers/)免费下载**Visual
    Studio 2022 Community**。如何安装的详细步骤可以在[https://learn.microsoft.com/en-us/visualstudio/install/install-visual-studio?view=vs-2022](https://learn.microsoft.com/en-us/visualstudio/install/install-visual-studio?view=vs-2022)找到。请注意，在配置安装时，应在**工作负载**选项卡中选择**.NET桌面开发**选项。
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您使用的是本书的电子版，我们建议您亲自输入代码或从本书的GitHub仓库（下一节中提供链接）获取代码。这样做将帮助您避免与代码复制粘贴相关的任何潜在错误**。'
- en: Download the example code files
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/C-Sharp-Data-Structures-and-Algorithms---Second-Edition](https://github.com/PacktPublishing/C-Sharp-Data-Structures-and-Algorithms---Second-Edition)
    If there’s an update to the code, it will be updated in the GitHub repository.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub下载本书的示例代码文件[https://github.com/PacktPublishing/C-Sharp-Data-Structures-and-Algorithms---Second-Edition](https://github.com/PacktPublishing/C-Sharp-Data-Structures-and-Algorithms---Second-Edition)。如果代码有更新，它将在GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富的图书和视频目录的代码包可供选择，请访问[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)。查看它们！
- en: Conventions used
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates code words in text, folder names, filenames, file
    extensions, pathnames, and user input. Here is an example: “The class contains
    three properties, namely `Id`, `Name`, and `Role`, as well as two constructors.”'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码单词、文件夹名称、文件名、文件扩展名、路径名和用户输入。以下是一个示例：“该类包含三个属性，即`Id`、`Name`和`Role`，以及两个构造函数。”'
- en: 'A block of code is set as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望您注意代码块中的特定部分时，相关的行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都如下所示：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Bold**: Indicates a new term, an important word, an important sentence, or
    words that you see onscreen. For instance, words in menus or dialog boxes appear
    in **bold**. Here is an example: “It sounds complicated, but fortunately, it is
    very simple. A jagged array could be understood as **a single-dimensional array,
    where each element is** **another array**.”'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**: 表示新术语、重要单词、重要句子或屏幕上看到的单词。例如，菜单或对话框中的单词以**粗体**显示。以下是一个示例：“听起来很复杂，但幸运的是，它非常简单。锯齿数组可以理解为**一个一维数组，其中每个元素都是**
    **另一个数组**。”'
- en: Tips or important notes
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 提示或重要注意事项
- en: Appear like this.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来像这样。
- en: Get in touch
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们读者的反馈始终受到欢迎。
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**: 如果您对此书的任何方面有疑问，请通过电子邮件发送给我们 [customercare@packtpub.com](mailto:customercare@packtpub.com)，并在邮件主题中提及书名。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误表**: 尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果您在此书中发现错误，我们将不胜感激，如果您能向我们报告，我们将不胜感激。请访问
    [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata) 并填写表格。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**: 如果您在互联网上以任何形式遇到我们作品的非法副本，我们将不胜感激，如果您能提供位置地址或网站名称，我们将不胜感激。请通过电子邮件发送链接到
    [copyright@packt.com](mailto:copyright@packt.com) 与我们联系。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com.](http://authors.packtpub.com.)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**: 如果您在某个主题上具有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问 [authors.packtpub.com.](http://authors.packtpub.com.)'
- en: Share Your Thoughts
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享您的想法
- en: Once you’ve read *C# Data Structures and Algorithms*, we’d love to hear your
    thoughts! Please [click here to go straight to the Amazon review page](https://packt.link/r/1803248270)
    for this book and share your feedback.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您阅读了 *C# 数据结构和算法*，我们很乐意听到您的想法！请[点击此处直接转到此书的亚马逊评论页面](https://packt.link/r/1803248270)
    并分享您的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 您的评论对我们和科技社区非常重要，并将帮助我们确保我们提供高质量的内容。
- en: Download a free PDF copy of this book
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载此书的免费PDF副本
- en: Thanks for purchasing this book!
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您购买此书！
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您喜欢在路上阅读，但无法携带您的印刷书籍到处走？
- en: Is your eBook purchase not compatible with the device of your choice?
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您的电子书购买是否与您选择的设备不兼容？
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 不要担心，现在，随着每本Packt书籍，您都可以免费获得该书的DRM免费PDF版本。
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何地方、任何地方、任何设备上阅读。直接从您最喜欢的技术书籍中搜索、复制和粘贴代码到您的应用程序中。
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠远不止于此，您还可以获得独家折扣、时事通讯和每日收件箱中的精彩免费内容。
- en: 'Follow these simple steps to get the benefits:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤获取优惠：
- en: Scan the QR code or visit the link below
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描下面的二维码或访问以下链接
- en: '![Download a free PDF copy of this book](img/B18069_QR_Free_PDF.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![下载此书的免费PDF副本](img/B18069_QR_Free_PDF.jpg)'
- en: '[https://packt.link/free-ebook/978-1-80324-827-1](https://packt.link/free-ebook/978-1-80324-827-1)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/free-ebook/978-1-80324-827-1](https://packt.link/free-ebook/978-1-80324-827-1)'
- en: Submit your proof of purchase
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交您的购买证明
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这些！我们将直接将您的免费PDF和其他优惠发送到您的电子邮件地址
