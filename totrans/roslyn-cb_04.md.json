["```cs\nusing System;\n\nclass Class1\n{\n  // Field and Property - prefer predefined type\n  private int field1;\n  private int Property1 => int.MaxValue;\n\n  private void Method_DoNotPreferThis()\n  {\n    Console.WriteLine(field1);\n    Console.WriteLine(Property1);\n    Method_PreferExpressionBody();\n  }\n\n  private int Method_PreferVar()\n  {\n    var i = 0;\n    var c = new Class1();\n    var c2 = Method_PreferExpressionBody();\n    return i;\n  }\n\n  private void Method_PreferBraces(bool flag)\n  {\n    if (flag)\n    {\n      Console.WriteLine(flag);\n    }\n  }\n\n  private Class1 Method_PreferExpressionBody() => Method_PreferPatternMatching(null);\n\n  private Class1 Method_PreferPatternMatching(object o)\n  {\n    if (o is Class1 c)\n    {\n      return c;\n    }\n\n    return new Class1();\n  }\n\n  private int Method_PreferInlineVariableDeclaration(string s)\n  {\n    if (int.TryParse(s, out var i))\n    {\n      return i;\n    }\n\n    return -1;\n  }\n\n  private void Method_NullCheckingPreferences(object o)\n  {\n    var str = o?.ToString();\n    var o3 = o ?? new object();\n  }\n}\n\n```", "```cs\nprivate void Method_New_ViolateVarPreference()\n{\n  Class1 c = new Class1();\n}\n\n```", "```cs\n# top-most EditorConfig file\nroot = true\n\n# rules for all .cs files.\n[*.cs]\n\n# 'this.' preferences\ndotnet_style_qualification_for_field = false:suggestion\ndotnet_style_qualification_for_property = false:suggestion\ndotnet_style_qualification_for_method = false:suggestion\ndotnet_style_qualification_for_event = false:suggestion\n\n# predefined type preferences\ndotnet_style_predefined_type_for_locals_parameters_members = true:warning\ndotnet_style_predefined_type_for_member_access = true:warning\n\n# 'var' preferences\ncsharp_style_var_for_built_in_types = true:error\ncsharp_style_var_when_type_is_apparent = true:error\ncsharp_style_var_elsewhere = true:error\n\n# code block preferences\ncsharp_new_line_before_open_brace = all\ncsharp_style_expression_bodied_methods = true:warning\ncsharp_style_expression_bodied_constructors = false:warning\ncsharp_style_expression_bodied_operators = false:warning\ncsharp_style_expression_bodied_properties = true:warning\ncsharp_style_expression_bodied_indexers = true:warning\ncsharp_style_expression_bodied_accessors = true:warning\n\n# expression preferences\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\n\n# variable preferences\ncsharp_style_inlined_variable_declaration = true:suggestion\n\n# 'null' checking\ncsharp_style_throw_expression = true:suggestion\ncsharp_style_conditional_delegate_call = true:suggestion\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_null_propagation = true:suggestion\n\n```", "```cs\nusing System;\n\nclass Class1\n{\n // Field and Property - prefer predefined type\n private int field1;\n private int Property1 => int.MaxValue;\n\n private void Method_DoNotPreferThis()\n {\n  Console.WriteLine(field1);\n  Console.WriteLine(Property1);\n  Method_PreferExpressionBody();\n }\n\n private int Method_PreferVar()\n {\n  var i = 0;\n  var c = new Class1();\n  var c2 = Method_PreferExpressionBody();\n  return i;\n }\n\n private void Method_PreferBraces(bool flag)\n {\n  if (flag)\n  {\n   Console.WriteLine(flag);\n  }\n }\n\n private Class1 Method_PreferExpressionBody() => Method_PreferPatternMatching(null);\n\n private Class1 Method_PreferPatternMatching(object o)\n {\n  if (o is Class1 c)\n  {\n   return c;\n  }\n\n  return new Class1();\n }\n\n private int Method_PreferInlineVariableDeclaration(string s)\n {\n  if (int.TryParse(s, out var i))\n  {\n   return i;\n  }\n\n  return -1;\n }\n\n private void Method_NullCheckingPreferences(object o)\n {\n  var str = o?.ToString();\n  var o3 = o ?? new object();\n }\n}\n\n```", "```cs\nprivate void Method_New_ViolateVarPreference()\n{\n Class1 c = new Class1();\n}\n\n```", "```cs\n# rules for all .cs files in this folder.\n[*.cs]\n\n# override 'var' preferences\ncsharp_style_var_for_built_in_types = false:error\ncsharp_style_var_when_type_is_apparent = false:error\ncsharp_style_var_elsewhere = false:error\n\n```", "```cs\ndotnet_style_qualification_for_field = false:suggestion\n\n```", "```cs\npublic class Class1\n{\n  public int Field1;\n\n  public object Property1 => null;\n\n  public void Method1() { }\n\n  public void Method1(int x) { }\n\n  private void Method2() { }\n}\n\n```", "```cs\nClass1\nClass1.Class1() -> void\nClass1.Field1 -> int\nClass1.Method1() -> void\nClass1.Method1(int x) -> void\nClass1.Property1.get -> object\n\n```", "```cs\n{\n  \"settings\": {\n    \"orderingRules\": {\n      \"usingDirectivesPlacement\": \"outsideNamespace\"\n    }\n  }\n}\n\n```", "```cs\n{\n  \"settings\": {\n    \"orderingRules\": {\n      \"usingDirectivesPlacement\": \"outsideNamespace\"\n    }\n  }\n}\n\n```"]