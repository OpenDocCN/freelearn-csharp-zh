- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: What’s Next?
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接下来是什么？
- en: By this point, you’ve seen and worked with the fundamentals and advanced topics
    of creating .NET APIs. The obvious question is, *“What next?”* There are a number
    of areas where you may want to expand your knowledge and expertise. This chapter
    will list some of the most important ones.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经看到了创建.NET API的基础和高级主题。显然的问题就是，“接下来是什么？”在许多领域，你可能希望扩展你的知识和专长。本章将列出其中一些最重要的领域。
- en: C#
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: C#
- en: 'The #1 place to put your effort is advanced C#. The more you know about C#,
    the easier it will be to create world-class APIs. Pay particular attention to
    Linq as much of your retrieval code will make extensive use of it. Even if you
    don’t write in Linq, other API creators will, and you’ll need a solid working
    knowledge of Linq to understand their work.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该把精力放在高级C#上。你对C#了解得越多，创建世界级的API就越容易。特别关注Linq，因为你的检索代码将大量使用它。即使你不使用Linq，其他API创建者也会使用，你需要对Linq有扎实的了解才能理解他们的工作。
- en: SQL
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SQL
- en: The next most important place to put your effort is expanding your SQL skills.
    The API programmer is, very often, called upon to retrieve the requested data
    from a database, and in most cases, that will require a working knowledge of SQL.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个最重要的地方是扩展你的SQL技能。API程序员通常需要从数据库中检索所需的数据，而在大多数情况下，这需要具备实际操作SQL的知识。
- en: Note that there are different flavors of SQL depending on what database you
    are using; however, the core of SQL is the same across platforms.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，根据你使用的数据库，SQL有不同的版本；然而，SQL的核心在各个平台上是相同的。
- en: Database
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据库
- en: In addition to expanding your SQL skills, you will want to become as proficient
    as you can in the database platform you’re working with (e.g., Entity Framework).
    As noted previously, the SQL you’ll use will vary a bit depending on which platform
    you choose (or was chosen for you).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 除了扩展你的SQL技能外，你还将希望在你所工作的数据库平台上尽可能熟练（例如，Entity Framework）。如前所述，你将使用的SQL将根据你选择（或为你选择）的平台而略有不同。
- en: API architecture
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: API架构
- en: There are numerous books that delve into the finer points of architecting APIs.
    They can be very helpful when designing a very complex API.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多书籍深入探讨了设计API的细微之处。在设计一个非常复杂的API时，它们非常有帮助。
- en: Dapper
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Dapper
- en: Dapper is a powerful object relational mapper that we’ve been using throughout
    this book. There is more to Dapper than we’ve needed, however, and it will be
    valuable to learn some of the more advanced features. You can learn more about
    Dapper at [https://dappertutorial.net/](https://dappertutorial.net/) .
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Dapper是我们在这本书中一直在使用的一个强大的对象关系映射器。然而，Dapper的功能远不止我们所需要的，学习一些更高级的功能将非常有价值。你可以在[https://dappertutorial.net/](https://dappertutorial.net/)了解更多关于Dapper的信息。
- en: AutoMapper
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AutoMapper
- en: We used AutoMapper to map our DTOs to their related **Plain Old C# Objects**
    ( **POCOs** ) objects. AutoMapper can map any two objects, which can come in handy
    in solving more advanced API issues. You can learn more at [https://automapper.org/](https://automapper.org/)
    .
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用AutoMapper将我们的DTO映射到相关的**普通C#对象**（**POCOs**）对象。AutoMapper可以将任何两个对象映射到一起，这在解决更高级的API问题时非常有用。你可以在[https://automapper.org/](https://automapper.org/)了解更多信息。
- en: Visual Studio
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Visual Studio
- en: Visual Studio is your primary tool for creating APIs, and the more you can learn
    about it, the easier your life will be. Pay particular attention to creating snippets
    as they can save you a lot of time. There are a great many features in Visual
    Studio that we didn’t need to go into but are worth learning about. Be sure to
    become proficient in using Visual Studio to interact with your version control
    system.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio是创建API的主要工具，你了解得越多，你的生活就会越容易。特别关注创建代码片段，因为它们可以节省你大量时间。Visual Studio中有许多我们不需要深入探讨但值得学习的功能。确保熟练使用Visual
    Studio与你的版本控制系统交互。
- en: Git
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Git
- en: As discussed in the book, while there are other version control systems, the
    great majority of the C# community (and most other programming languages and platforms)
    has settled on Git. Becoming proficient in Git in both Visual Studio and at the
    command line will save you a great deal of time and can prevent panic when you
    think you’ve lost your work (you almost certainly have not).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 正如书中所讨论的，尽管有其他版本控制系统，但C#社区的大多数（以及大多数其他编程语言和平台）已经选择了Git。在Visual Studio和命令行中熟练掌握Git将节省你大量时间，并可以在你认为你丢失了工作（你几乎肯定没有）时防止恐慌。
- en: In addition to the numerous tutorials available online, I have a book, *Git
    For Programmers* , published by Packt, that covers using Git in both the command
    line and Visual Studio.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 除了网上可用的众多教程外，我还有一本由Packt出版的书，名为*Git For Programmers*，涵盖了在命令行和Visual Studio中使用Git的方法。
- en: Housing your version control
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 存储您的版本控制
- en: 'There are three very popular places to house your Git repository:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 存储您的Git仓库有三个非常受欢迎的地方：
- en: On-premises
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地化
- en: On GitHub
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在GitHub上
- en: On Azure
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Azure上
- en: On-premises simply means that your Git repository is on your own computer. This
    can be convenient, but also dangerous. If your repository is on a local computer,
    damage to that computer can cause your work and work history to be lost.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 本地化意味着您的Git仓库位于您自己的电脑上。这可能是方便的，但也存在风险。如果您的仓库位于本地电脑上，该电脑的损坏可能会导致您的工作和工作历史丢失。
- en: Microsoft offers two homes for Git. GitHub is popular with open source and smaller
    applications. For open source applications and small individual users, it is free.
    The alternative is to put your repository on Azure Repos. Azure DevOps offers
    a limited free tier, which may suffice for small teams or individual users. It
    also provides several paid tiers that include additional features tailored for
    larger projects and more complex team requirements.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 微软为Git提供了两个家。GitHub在开源和小型应用中很受欢迎。对于开源应用和小型个人用户，它是免费的。另一种选择是将您的仓库放在Azure Repos上。Azure
    DevOps提供有限的免费层，这可能足以满足小型团队或个人用户的需求。它还提供几个付费层，包括针对大型项目和更复杂团队需求定制的额外功能。
- en: Summary
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Thank you for sticking with us, and good luck with your work building REST APIs.
    We know that, armed with this book, you will be successful.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您一直与我们同行，祝您在构建REST API的工作中好运。我们知道，有了这本书，您将取得成功。
- en: Thank you again,
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 再次感谢，
- en: Jesse Liberty
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Jesse Liberty
- en: Joseph Dluzen
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Joseph Dluzen
