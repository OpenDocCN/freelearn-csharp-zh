["```cs\nusing DesignPatternsSample.BuilderSample;\nusing System;\n\nnamespace DesignPatternsSample\n{\n    class Program\n    {\n        static void Main()\n        {\n            #region Builder Sample\n            Console.WriteLine(\"Builder Sample\");\n\n            var directorRoom = new DirectorRooms(new SimpleRoomBuilder());\n            var simpleRoom = directorRoom.Construct();\n            simpleRoom.Describe();\n\n            directorRoom = new DirectorRooms(new FamilyRoomBuilder());\n            var familyRoom = directorRoom.Construct();\n            familyRoom.Describe();\n            #endregion\n\n            Console.ReadKey();\n        }\n    }\n}\n```", "```cs\nstatic void Main()\n{\n    #region Factory Sample\n    var psCreator = new PaymentServiceCreator();\n    var brazilianPaymentService = (IPaymentService)psCreator.Factory\n        (PaymentServiceCreator.ServicesAvailable.Brazilian);\n    brazilianPaymentService.EmailToCharge = \"gabriel@sample.com\";\n    brazilianPaymentService.MoneyToCharge = 178.90f;\n    brazilianPaymentService.OptionToCharge =\n        FactorySample.Enums.EnumChargingOptions.CreditCard;\n    brazilianPaymentService.ProcessCharging();\n\n    var italianPaymentService = (IPaymentService)psCreator.Factory\n        (PaymentServiceCreator.ServicesAvailable.Italian);\n    italianPaymentService.EmailToCharge = \"francesco@sample.com\";\n    italianPaymentService.MoneyToCharge = 188.70f;\n    italianPaymentService.OptionToCharge =\n        FactorySample.Enums.EnumChargingOptions.DebitCard;\n    italianPaymentService.ProcessCharging();\n    #endregion\n    Console.ReadKey();\n}\n```", "```cs\npublic sealed class SingletonDemo\n{\n    #region This is the Singleton definition\n    private static SingletonDemo _instance;\n    public static SingletonDemo Current\n    {\n        get\n        {\n            if (_instance == null)\n                _instance = new SingletonDemo();\n            return _instance;\n        }\n    }\n    #endregion\n\n    public string Message { get; set; }\n\n    public void Print()\n    {\n        Console.WriteLine(Message);\n    }\n}\n```", "```cs\nSingletonDemo.Current.Message = \"This text will be printed by the singleton.\";\nSingletonDemo.Current.Print();\n```", "```cs\nstatic void Main()\n{\n    Console.WriteLine(\"Proxy Sample\");\n    var roomPicture = new ProxyRoomPicture();\n    Console.WriteLine($\"Picture Id: {roomPicture.Id}\");\n    Console.WriteLine($\"Picture FileName: {roomPicture.FileName}\");\n    Console.WriteLine($\"Tags: {string.Join(\";\", roomPicture.Tags)}\");\n    Console.WriteLine($\"1st call: Picture Data\");\n    Console.WriteLine($\"Image: {roomPicture.PictureData}\");\n    Console.WriteLine($\"2nd call: Picture Data\");\n    Console.WriteLine($\"Image: {roomPicture.PictureData}\");\n}\n```", "```cs\npublic static void Main()\n{\n    var host = new HostBuilder()\n        .ConfigureServices((hostContext, services) =>\n        {\n            services.AddHostedService<HostedService>();\n            services.AddHostedService<MonitoringService>();\n        })\n        .ConfigureLogging((hostContext, configLogging) =>\n        {\n            configLogging.AddConsole();\n        })\n        .Build();\n    host.Run();\n\n    Console.WriteLine(\"Host has terminated. Press any key to finish the \n    App.\");\n    Console.ReadKey();\n }\n```"]