["```cs\n{\n    \"input\": {\n        \"user\": \"jpgou\",\n        \"operation\": \"all\",\n        \"resource\": \"books.content\",\n        \"book\": \"978-2409002205\"\n    }\n}\n```", "```cs\n{\n    \"result\": {\n        \"allow\": true\n    }\n}\n```", "```cs\npackage app.abac\nimport future.keywords\nimport data.org_chart\n```", "```cs\ndefault allow := false\nallow if {\n    permission_associated_to_role\n    no_author_blocking\n    no_status_blocking\n    authors_on_books_they_write\n    editors_on_books_from_authors_they_manage\n}\n```", "```cs\nuser_groups contains group if {\n    some group in data.directory[input.user].groups\n}\nuser_group_roles contains role if {\n    some group in user_groups\n    some role in data.group_mappings[group].roles\n}\nuser_direct_roles contains role if {\n    some role in data.user_mappings[input.user].roles\n}\nuser_roles := user_group_roles | user_direct_roles\n```", "```cs\nuser_author contains author if {\n    some author in data.authors\n    author.user == input.user\n}\n```", "```cs\nbook contains b if {\n    some b in data.books[input.book]\n}\n```", "```cs\nauthor_books contains book if {\n    some author in user_author\n    some b in data.books\n    b.editing.author == author.id\n}\n```", "```cs\npermission_associated_to_role if {\n    some access in user_accesses_by_roles\n    access.type == input.resource\n    access.operation == input.operation\n}\n```", "```cs\npermission_associated_to_role if {\n    some access in user_accesses_by_roles\n    \"books\" == input.resource\n    access.operation == input.operation\n}\n```", "```cs\npermission_associated_to_role if {\n    some access in user_accesses_by_roles\n    access.type == input.resource\n    access.operation == \"all\"\n}\n```", "```cs\nuser_accesses_by_roles contains access if {\n    some role in user_roles\n    some access in permissions[role]\n}\nroles_graph[entity_name] := edges {\n    data.roles[entity_name]\n    edges := {neighbor | data.roles[neighbor].parent == entity_name}\n}\npermissions[entity_name] := access {\n    data.roles[entity_name]\n    reachable := graph.reachable(roles_graph, {entity_name})\n    access := {item | reachable[k]; item := data.roles[k].access[_]}\n}\n```", "```cs\ndefault authors_on_books_they_write := false\nauthors_on_books_they_write if {\n    some role in user_roles\n    role != \"book-writer\"\n}\nauthors_on_books_they_write if {\n    some role in user_roles\n    role == \"book-writer\"\n    some author in user_author\n    some b in data.books\n    b.editing.author == author.id\n    b.id == input.book\n}\n```", "```cs\ndefault editors_on_books_from_authors_they_manage := false\neditors_on_books_from_authors_they_manage if {\n    some role in user_roles\n    role != \"book-edition\"\n}\nbook_author contains b.editing.author if {\n    some b in data.books\n    b.id == input.book\n}\neditors_on_books_from_authors_they_manage if {\n    some role in user_roles\n    role == \"book-edition\"\n    some author in book_author\n    some b in data.books\n    b.editing.author == author\n    b.id == input.book\n    user_hierarchy_ok\n}\nfoundpath = path {\n    [path, _] := walk(org_chart)\n    some author in book_author\n    path[_] == author\n}\nuser_hierarchy_ok if {\n    some user in foundpath\n    user == input.user\n}\n```", "```cs\ndefault no_status_blocking := false\nno_status_blocking if {\n    some role in user_roles\n    role != \"book-sales\"\n}\ndefault readable_for_sales := false\nreadable_for_sales if {\n    book.status == \"published\"\n}\nreadable_for_sales if {\n    book.status == \"archived\"\n}\nno_status_blocking if {\n    some role in user_roles\n    role == \"book-sales\"\n    readable_for_sales\n}\n```", "```cs\ndefault no_author_blocking := false\nno_author_blocking if {\n    some role in user_roles\n    role != \"book-writer\"\n}\nno_author_blocking if {\n    some role in user_roles\n    role == \"book-writer\"\n    some user in user_author\n    user.restriction == \"none\"\n}\n```", "```cs\n\"roles\": {\n    \"book-direction\": { \"access\": []},\n    \"book-sales\": { \"parent\": \"book-direction\", \"access\": [{ \"operation\": \"all\", \"type\": \"books.sales\" }]},\n    \"book-edition\": { \"parent\": \"book-direction\", \"access\": [{ \"operation\": \"all\", \"type\": \"books.editing\" }]},\n    \"book-writer\": { \"parent\": \"book-edition\", \"access\": [{ \"operation\": \"read\", \"type\": \"books.editing\" }, { \"operation\": \"all\", \"type\": \"books.content\" }]}\n}\n```", "```cs\n\"books\": {\n    \"978-2409002205\": { \"id\": \"978-2409002205\", \"title\": \"Performance in .NET\", \"editing\": { \"author\": \"00024\", \"status\": \"published\" }},\n    \"978-0000123456\": { \"id\": \"978-0000123456\", \"title\": \".NET 8 and Blazor\", \"editing\": { \"author\": \"00025\", \"status\": \"draft\" }}\n}\n```", "```cs\n\"authors\": {\n    \"00024\": { \"id\": \"00024\", \"firstName\": \"Jean-Philippe\", \"lastName\": \"Gouigoux\", \"user\": \"jpgou\", \"restriction\": \"none\" },\n    \"00025\": { \"id\": \"00025\", \"firstName\": \"Nicolas\", \"lastName\": \"Couseur\", \"user\": \"nicou\" }}\n```", "```cs\n\"org_chart\": {\n    \"frfra\": {\n        \"frvel\": {},\n        \"cemol\": {},\n        \"mnfra\": {\n            \"00024\": {},\n            \"00025\": {}\n        }\n    }\n}\n```", "```cs\n\"directory\": {\n    \"frfra\": {\"groups\": [\"board\"]},\n    \"frvel\": {\"groups\": [\"commerce\", \"marketing\"]},\n    \"cemol\": {\"groups\": [\"commerce\"]},\n    \"mnfra\": {\"groups\": [\"editors\", \"quality\"]},\n    \"jpgou\": {\"groups\": [\"authors\"]},\n    \"nicou\": {\"groups\": [\"authors\"]}\n}\n```", "```cs\n\"group_mappings\": {\n    \"board\": { \"roles\": [\"book-direction\"] },\n    \"commerce\": { \"roles\": [\"book-sales\"] },\n    \"editors\": { \"roles\": [\"book-edition\"] },\n    \"authors\": { \"roles\": [\"book-writer\"] }\n}\n```", "```cs\n\"user_mappings\": {\n    \"frvel\": { \"roles\": [\"book-edition\"] }\n}\n```", "```cs\ndocker run -d -p 8181:8181 --name opa openpolicyagent/opa run --server --addr :8181\n```", "```cs\ncurl --no-progress-meter -X PUT http://localhost:8181/v1/policies/app/abac --data-binary @policy.rego\n```", "```cs\ncurl --no-progress-meter -X PUT http://localhost:8181/v1/data --data-binary @data.json\n```", "```cs\n{\n    \"input\": {\n        \"user\": \"jpgou\",\n        \"operation\": \"all\",\n        \"resource\": \"books.content\",\n        \"book\": \"978-2409002205\"\n    }\n}\n```", "```cs\ncurl --no-progress-meter -X POST http://localhost:8181/v1/data/app/abac --data-binary @input.json | jq -r '.result | .allow'\n```", "```cs\n{\n  \"result\": {\n    \"allow\": true,\n    \"author_books\": [\n      [\n        \"978-2409002205\",\n        \"Performance in .NET\",\n        {\n          \"author\": \"00024\",\n          \"status\": \"published\"\n        }\n      ]\n    ],\n    \"authors_on_books_they_write\": true,\n    \"book\": [\n      \"978-2409002205\",\n      \"Performance in .NET\",\n      {\n        \"author\": \"00024\",\n        \"status\": \"published\"\n      }\n    ],\n    \"editors_on_books_from_authors_they_manage\": true,\n    \"foundpath\": [\n      \"frfra\",\n      \"mnfra\",\n      \"jpgou\"\n    ],\n    \"no_author_blocking\": true,\n    \"no_status_blocking\": true,\n    \"permission_associated_to_role\": true,\n    \"permissions\": {\n      \"book-direction\": [\n        {\n          \"operation\": \"all\",\n          \"type\": \"books.content\"\n        },\n        {\n          \"operation\": \"all\",\n          \"type\": \"books.editing\"\n        },\n        {\n          \"operation\": \"all\",\n          \"type\": \"books.sales\"\n        },\n        {\n          \"operation\": \"read\",\n          \"type\": \"books.editing\"\n        }\n      ],\n      \"book-edition\": [\n        {\n          \"operation\": \"all\",\n          \"type\": \"books.content\"\n        },\n        {\n          \"operation\": \"all\",\n          \"type\": \"books.editing\"\n        },\n        {\n          \"operation\": \"read\",\n          \"type\": \"books.editing\"\n        }\n      ],\n      \"book-sales\": [\n        {\n          \"operation\": \"all\",\n          \"type\": \"books.sales\"\n        }\n      ],\n      \"book-writer\": [\n        {\n          \"operation\": \"all\",\n          \"type\": \"books.content\"\n        },\n        {\n          \"operation\": \"read\",\n          \"type\": \"books.editing\"\n        }\n      ]\n    },\n    \"readable_for_sales\": false,\n    \"roles_graph\": {\n      \"book-direction\": [\n        \"book-edition\",\n        \"book-sales\"\n      ],\n      \"book-edition\": [\n        \"book-writer\"\n      ],\n      \"book-sales\": [],\n      \"book-writer\": []\n    },\n    \"user_accesses_by_roles\": [\n      {\n        \"operation\": \"all\",\n        \"type\": \"books.content\"\n      },\n      {\n        \"operation\": \"read\",\n        \"type\": \"books.editing\"\n      }\n    ],\n    \"user_author\": [\n      {\n        \"firstName\": \"Jean-Philippe\",\n        \"id\": \"00024\",\n        \"lastName\": \"Gouigoux\",\n        \"restriction\": \"none\",\n        \"user\": \"jpgou\"\n      }\n    ],\n    \"user_direct_roles\": [],\n    \"user_group_roles\": [\n      \"book-writer\"\n    ],\n    \"user_groups\": [\n      \"authors\"\n    ],\n    \"user_hierarchy_ok\": true,\n    \"user_roles\": [\n      \"book-writer\"\n    ]\n  }\n}\n```", "```cs\nFeature: OPA\nScenario: An author has all rights to the content of their book\n    Given book number 978-2409002205 with author id 00024 is in workInProgress status\n    And user jpgou belongs to group authors\n    And organizational chart is {\"frfra\":{\"frvel\":{},\"cemol\":{},\"mnfra\":{\"00024\":{},\"00025\":{}}}}\n    And user jpgou is associated with author 00024 who has a level of restriction none\n    When the user jpgou requests all access to the books.content petal of the book number 978-2409002205\n    Then access should be accepted\nScenario: An author has no rights to the content of the book from another author\n    Given book number 978-2409002205 with author id 00024 is in workInProgress status\n    And user jpgou belongs to group authors\n    And organizational chart is {\"frfra\":{\"frvel\":{},\"cemol\":{},\"mnfra\":{\"00024\":{},\"00025\":{}}}}\n    And user jpgou is associated with author 00024 who has a level of restriction none\n    When the user nicou requests read access to the books.content petal of the book number 978-2409002205\n    Then access should be refused\nScenario: An author that has been blocked has no rights, even on their own books\n    Given book number 978-2409002205 with author id 00024 is in workInProgress status\n    And user jpgou belongs to group authors\n    And organizational chart is {\"frfra\":{\"frvel\":{},\"cemol\":{},\"mnfra\":{\"00024\":{},\"00025\":{}}}}\n    And user jpgou is associated with author 00024 who has a level of restriction blocked\n    When the user jpgou requests all access to the books.content petal of the book number 978-2409002205\n    Then access should be refused\nScenario: An editor has all rights to the content of the books from the authors they manage\n    Given book number 978-2409002205 with author id 00024 is in workInProgress status\n    And user jpgou belongs to group authors\n    And user mnfra belongs to group editors\n    And organizational chart is {\"frfra\":{\"frvel\":{},\"cemol\":{},\"mnfra\":{\"00024\":{},\"00025\":{}}}}\n    And user jpgou is associated with author 00024 who has a level of restriction none\n    When user mnfra requests all access to the books.content petal of the book number 978-2409002205\n    Then access should be accepted\nScenario: An editor has no rights to the content of the books from the authors they do not manage\n    Given book number 978-2409002205 with author id 00024 is in workInProgress status\n    And user jpgou belongs to group authors\n    And user mnfra belongs to group editors\n    And organizational chart is {\"frfra\":{\"frvel\":{},\"cemol\":{},\"mnfra\":{\"nicou\":{}}}}\n    And user jpgou is associated with author 00024 who has a level of restriction none\n    When user mnfra requests all access to the books.content petal of the book number 978-2409002205\n    Then access should be refused\nScenario: Refusing salesperson access to work-in-progress book\n    Given book number 978-2409002205 with author id 00024 is in workInProgress status\n    And user frvel belongs to the group commerce\n    And organizational chart is {\"frfra\":{\"frvel\":{},\"cemol\":{},\"mnfra\":{\"00024\":{},\"00025\":{}}}}\n    When the user frvel requests read access to the books.content petal of the book number 978-2409002205\n    Then access should be refused\n```", "```cs\n[Given(\"book number (.*) with author id (.*) is in (.*) status\")]\npublic void AddBookWithStatus(string number, string authorId, string status)\n{\n    _books.Add(new Book() { Number = number, AuthorId = authorId, Status = status });\n}\n[Given(\"user (.*) belongs to group (.*)\")]\npublic void AddUserWithGroup(string login, string group)\n{\n    _users.Add(new User() { Login = login, Group = group });\n}\n[Given(\"user (.*) is associated to author (.*) who has level of restriction (.*)\")]\npublic void AddAuthor(string login, string authorId, string restrictionLevel)\n{\n    _authors.Add(new Author() { Login = login, Id = authorId, Restriction = restrictionLevel });\n}\n[Given(\"organizational chart is (.*)\")]\npublic void SetOrganizationChart(string orgChart)\n{\n    _orgChart = orgChart;\n}\n```", "```cs\nprivate static HttpClient _client;\nprivate static List<Author> _authors;\nprivate static List<Book> _books;\nprivate static List<User> _users;\nprivate static string _orgChart;\nprivate static string _result;\n```", "```cs\npublic class Author\n{\n    public string Id { get; set; }\n    public string Login { get; set; }\n    public string Restriction { get; set; }\n}\npublic class Book\n{\n    public string Number { get; set; }\n    public string Status { get; set; }\n    public string AuthorId { get; set; }\n}\npublic class User\n{\n    public string Login { get; set; }\n    public string Group { get; set; }\n}\nSome methods will be used to initiate the values for each scenario, and also for the entire feature:\n[BeforeFeature]\npublic static void Initialize()\n{\n    _client = new HttpClient();\n    _client.BaseAddress = new Uri(\"http://localhost:8181/v1/\");\n}\n[BeforeScenario]\npublic static void InitializeScenario()\n{\n    _authors = new List<Author>();\n    _books = new List<Book>();\n    _users = new List<User>();\n}\n```", "```cs\n[When(\"user (.*) request (.*) access to the (.*) petal of the book number (.*)\")]\npublic void ExecuteRequest(string login, string access, string perimeter, string bookNumber)\n{\n    StringBuilder sb = new StringBuilder();\n    sb.AppendLine(\"{\");\n    sb.AppendLine(\"    \\\"roles\\\": {\");\n    sb.AppendLine(\"        \\\"book-direction\\\": { \\\"access\\\": []},\");\n    sb.AppendLine(\"        \\\"book-sales\\\": { \\\"parent\\\": \\\"book-direction\\\", \\\"access\\\": [{ \\\"operation\\\": \\\"all\\\", \\\"type\\\": \\\"books.sales\\\" }]},\");\n    sb.AppendLine(\"        \\\"book-edition\\\": { \\\"parent\\\": \\\"book-direction\\\", \\\"access\\\": [{ \\\"operation\\\": \\\"all\\\", \\\"type\\\": \\\"books.editing\\\" }]},\");\n    sb.AppendLine(\"        \\\"book-writer\\\": { \\\"parent\\\": \\\"book-edition\\\", \\\"access\\\": [{ \\\"operation\\\": \\\"read\\\", \\\"type\\\": \\\"books.editing\\\" }, { \\\"operation\\\": \\\"all\\\", \\\"type\\\": \\\"books.content\\\" }]}\");\n    sb.AppendLine(\"    },\");\n    sb.AppendLine(\"    \\\"books\\\": {\");\n    for (int i=0; i<_books.Count; i++)\n    {\n        Book b = _books[i];\n        sb.Append(\"        \\\"\" + b.Number + \"\\\": { \\\"id\\\": \\\"\" + b.Number + \"\\\", \\\"title\\\": \\\"***NORMALLY NO IMPACT ON RULES***\\\", \\\"editing\\\": { \\\"author\\\": \\\"\" + b.AuthorId + \"\\\", \\\"status\\\": \\\"\" + b.Status + \"\\\" }}\");\n        if (i < _books.Count - 1) sb.AppendLine(\",\"); else sb.AppendLine();\n    }\n    sb.AppendLine(\"    },\");\n    sb.AppendLine(\"    \\\"authors\\\": {\");\n    for (int i = 0; i < _authors.Count; i++)\n    {\n        Author a = _authors[i];\n        sb.AppendLine(\"        \\\"\" + a.Id + \"\\\": { \\\"id\\\": \\\"\" + a.Id + \"\\\", \\\"firstName\\\": \\\"***NORMALLY NO IMPACT ON RULES***\\\", \\\"lastName\\\": \\\"***NORMALLY NO IMPACT ON RULES***\\\", \\\"user\\\": \\\"\" + a.Login + \"\\\", \\\"restriction\\\": \\\"\" + a.Restriction + \"\\\" }\");\n        if (i < _authors.Count - 1) sb.AppendLine(\",\"); else sb.AppendLine();\n    }\n    sb.AppendLine(\"    },\");\n    sb.AppendLine(\"    \\\"org_chart\\\": \" + _orgChart + \",\");\n    sb.AppendLine(\"    \\\"directory\\\": {\");\n    for (int i = 0; i < _users.Count; i++)\n    {\n        User u = _users[i];\n        sb.AppendLine(\"        \\\"\" + u.Login + \"\\\": {\\\"groups\\\": [\\\"\" + u.Group + \"\\\"]}\");\n        if (i < _users.Count - 1) sb.AppendLine(\",\"); else sb.AppendLine();\n    }\n    sb.AppendLine(\"    },\");\n    sb.AppendLine(\"    \\\"group_mappings\\\": {\");\n    sb.AppendLine(\"        \\\"board\\\": { \\\"roles\\\": [\\\"book-direction\\\"] },\");\n    sb.AppendLine(\"        \\\"commerce\\\": { \\\"roles\\\": [\\\"book-sales\\\"] },\");\n    sb.AppendLine(\"        \\\"editors\\\": { \\\"roles\\\": [\\\"book-edition\\\"] },\");\n    sb.AppendLine(\"        \\\"authors\\\": { \\\"roles\\\": [\\\"book-writer\\\"] }\");\n    sb.AppendLine(\"    },\");\n    sb.AppendLine(\"    \\\"user_mappings\\\": {\");\n    sb.AppendLine(\"    }\");\n    sb.AppendLine(\"}\");\n    var response = _client.PutAsync(\"data\", new StringContent(sb.ToString(), Encoding.UTF8, \"application/json\")).Result;\n    string input = \"{ \\\"input\\\": { \\\"user\\\": \\\"\" + login + \"\\\",\"\n        + \" \\\"operation\\\": \\\"\" + access + \"\\\",\"\n        + \" \\\"resource\\\": \\\"\" + perimeter + \"\\\",\"\n        + \" \\\"book\\\": \\\"\" + bookNumber + \"\\\" } }\";\n    response = _client.PostAsync(\"data/app/abac\", new StringContent(input, Encoding.UTF8, \"application/json\")).Result;\n    if (response != null)\n    {\n        _result = response.Content.ReadAsStringAsync().Result;\n    }\n}\n}\n```", "```cs\n[Then(\"access should be (.*)\")]\npublic void ValidateExpectedResult(string expectedResult)\n{\n    JsonTextReader reader = new JsonTextReader(new StringReader(_result));\n    reader.Read(); // Get first element\n    reader.Read(); // Read result attribute\n    reader.Read(); // Get element for result\n    reader.Read(); // Read allow attribute\n    bool? actual = reader.ReadAsBoolean(); // Get boolean value for allow attribute\n    if (actual is null)\n        throw new ApplicationException(\"Unable to find result\");\n    bool? expected = null;\n    if (expectedResult == \"refused\") expected = false;\n    if (expectedResult == \"accepted\") expected = true;\n    if (expected is null)\n        throw new ApplicationException(\"Unable to find expected value\");\n    Assert.Equal(expected, actual);\n}\n```", "```cs\npermissions[entity_name] := access {\n    data.roles[entity_name]\n    reachable := graph.reachable(roles_graph, {entity_name})\n    access := {item | reachable[k]; item := data.roles[k].access[_]}\n}\n```"]