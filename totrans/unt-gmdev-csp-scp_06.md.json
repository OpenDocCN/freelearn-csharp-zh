["```cs\nusing UnityEngine;\npublic class ArrayExample : MonoBehaviour\n{\n    // Array of positions for game objects\n    public Vector3[] positions = new Vector3[5];\n    void Start()\n    {\n        // Initialize positions\n        for (int i = 0; i < positions.Length; i++)\n        {\n            positions[i] = new Vector3(i * 2.0f, 0, 0);\n        }\n    }\n    void Update()\n    {\n        // Iterate over positions and update each\n        for (int i = 0; i < positions.Length; i++)\n        {\n            // Example update: move each position upwards every frame\n            positions[i] += Vector3.up * Time.deltaTime;\n        }\n    }\n}\n```", "```cs\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class ListExample : MonoBehaviour\n{\n    public List<GameObject> activeEnemies;\n    void Start()\n    {\n        activeEnemies = new List<GameObject>();\n        // Populate the list with Active Enemy\n        for (int i = 0; i < 5; i++)\n        {\n            GameObject obj = new GameObject(\"Enemy\" + i);\n            activeEnemies.Add(obj);\n        }\n    }\n    void Update()\n    {\n        // Example: Remove a game object from the list\n        // when the 'R' key is pressed\n        if (Input.GetKeyDown(KeyCode.R) &&\n              activeEnemies.Count > 0)\n        {\n            GameObject objToRemove = activeEnemies[0];\n            activeEnemies.Remove(objToRemove);\n            Destroy(objToRemove);\n        }\n    }\n}\n```", "```cs\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class ListExample : MonoBehaviour\n{\n    List<string> collectedItems = new List<string>();\n    void Start()\n    {\n        // Adding elements\n        collectedItems.Add(\"Health Potion\");\n        collectedItems.Add(\"Mana Potion\");\n        // Accessing elements\n        Debug.Log(\"First collected item: \" +\n                   collectedItems[0]);\n        // Iterating over the list\n        foreach (string item in collectedItems)\n        {\n            Debug.Log(\"Collected item: \" + item);\n        }\n        // Removing elements\n        collectedItems.Remove(\"Health Potion\");\n    }\n}\n```", "```cs\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class ConversationManager : MonoBehaviour\n{\n    List<string> conversationHistory = new List<string>();\n    public void AddItem(string item)\n    {\n        conversationHistory.Add(item);\n    }\n    public void RemoveItem(string item)\n    {\n        conversationHistory.Remove(item);\n    }\n    void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.I))\n        {\n            foreach (var item in conversationHistory)\n            {\n                Debug.Log(\"Conversation Item: \" + item);\n            }\n        }\n    }\n}\n```", "```cs\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class InventoryManager : MonoBehaviour\n{\n    Dictionary<string, int> inventory = new\n        Dictionary<string, int>();\n    void Start()\n    {\n        // Adding items to the inventory\n        inventory.Add(\"Potion\", 5);\n        inventory.Add(\"Sword\", 1);\n    }\n    void Update()\n    {\n        // Accessing and updating an item's quantity\n        if (Input.GetKeyDown(KeyCode.U))\n        {\n            inventory[\"Potion\"] += 1;\n            Debug.Log(\"Potions: \" + inventory[\"Potion\"]);\n        }\n    }\n}\n```", "```cs\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class PowerUpManager : MonoBehaviour\n{\n    HashSet<string> collectedPowerUps = new\n       HashSet<string>();\n    void CollectPowerUp(string powerUpName)\n    {\n        // Adds the power-up to the collection if it's\n        // not already present\n        bool added = collectedPowerUps.Add(powerUpName);\n        if (added)\n        {\n            Debug.Log(powerUpName + \" collected!\");\n        }\n    }\n}\n```", "```cs\npublic struct Point2D\n{\n    public int X { get; set; }\n    public int Y { get; set; }\n    public Point2D(int x, int y)\n    {\n        X = x;\n        Y = y;\n    }\n    public void Translate(int dx, int dy)\n    {\n        X += dx;\n        Y += dy;\n    }\n}\n```", "```cs\nusing UnityEngine;\npublic class Point2DExample : MonoBehaviour\n{\n    void Start()\n    {\n        // Create an instance of Point2D\n        Point2D point = new Point2D(3, 4);\n        // Log the initial coordinates\n        Debug.Log(\"Initial Point: (\" + point.X + \", \" +\n           point.Y + \")\");\n        // Translate the point\n        point.Translate(2, 3);\n        // Log the new coordinates after translation\n        Debug.Log(\"Translated Point: (\" + point.X + \", \" +\n           point.Y + \")\");\n    }\n}\n```", "```cs\nusing UnityEngine;\nusing System.Collections.Generic;\n[CreateAssetMenu(fileName = \"New Inventory\", menuName = \"Inventory System/Inventory\")]\npublic class Quests : ScriptableObject\n{\n    public List<Quest> completedQuests = new List<Quest>();\n    public void AddItem(Item itemToAdd)\n    {\n        // Add quests to the list\n    }\n}\n```", "```cs\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class Recipes : MonoBehaviour\n{\n    private List<string> availableRecipes = new\n      List<string>();\n    public void AddItem(string recipe)\n    {\n        availableRecipes.Add(recipe);\n    }\n    public bool RemoveItem(string recipe)\n    {\n        return availableRecipes.Remove(recipe);\n    }\n    public bool CheckItem(string recipe)\n    {\n        return availableRecipes.Contains(item);\n    }\n}\n```"]