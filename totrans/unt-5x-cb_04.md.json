["```cs\n    using UnityEngine;\n    using System.Collections;\n    public class HighlightObject : MonoBehaviour{\n      private Color initialColor;\n      public bool noEmissionAtStart = true;\n      public Color highlightColor = Color.red;\n      public Color mousedownColor = Color.green;\n\n      private bool mouseon = false;\n      private Renderer myRenderer;\n\n      void Start() {\n        myRenderer = GetComponent<Renderer>();\n        if (noEmissionAtStart)\n        initialColor = Color.black;\n        else\n        initialColor = myRenderer.material.GetColor(\"_EmissionColor\");\n      }\n\n      void OnMouseEnter(){\n        mouseon = true;\n        myRenderer.material.SetColor(\"_EmissionColor\", highlightColor);\n      }\n\n      void OnMouseExit(){\n        mouseon = false;\n        myRenderer.material.SetColor(\"_EmissionColor\",initialColor);\n      }\n\n      void OnMouseDown(){\n        myRenderer.material.SetColor(\"_EmissionColor\", mousedownColor);\n      }\n\n      void OnMouseUp(){\n        if (mouseon)\n        myRenderer.material.SetColor(\"_EmissionColor\", highlightColor);\n        else\n        myRenderer.material.SetColor(\"_EmissionColor\", initialColor);\n      }\n    }\n    ```", "```cs\n    using UnityEngine;\n    using System.Collections;\n    public class FadeMaterial : MonoBehaviour {\n      public float fadeDuration = 1.0f;\n      public bool useMaterialAlpha = false;\n      public float alphaStart = 1.0f;\n      public float alphaEnd = 0.0f;\n      public bool destroyInvisibleObject = true;\n      private bool isFading = false;\n      private float alphaDiff;\n      private float startTime;\n      private Renderer rend;\n      private Color fadeColor;\n\n      void Start () {\n        rend = GetComponent<Renderer>();\n        fadeColor = rend.material.color;\n\n        if (!useMaterialAlpha) {\n          fadeColor.a = alphaStart;\n        } else {\n          alphaStart = fadeColor.a;\n        }\n\n        rend.material.color = fadeColor;\n        alphaDiff = alphaStart - alphaEnd;\n      }\n\n      void Update () {\n        if(isFading){\n          var elapsedTime = Time.time - startTime;\n\n          if(elapsedTime <= fadeDuration){\n            var fadeProgress = elapsedTime / fadeDuration;\n            var alphaChange = fadeProgress * alphaDiff;\n            fadeColor.a = alphaStart - alphaChange;\n            rend.material.color = fadeColor;\n            } else {\n            fadeColor.a = alphaEnd;\n            rend.material.color = fadeColor;\n\n            if(destroyInvisibleObject)\n              Destroy (gameObject);\n            isFading = false;  \n          }\n        }\n      }\n\n      void OnMouseUp(){\n        FadeAlpha();\n      }\n\n      public void FadeAlpha(){\n        isFading = true;\n        startTime = Time.time;\n      }\n    }\n    ```", "```cs\nvar fadeProgress = elapsedTime / fadeDuration;\nvar alphaChange = fadeProgress * alphaDiff;\nfadeColor.a = alphaStart - alphaChange;\nrend.material.color = fadeColor;\n```", "```cs\nGameObject.Find(\"Sphere\").GetComponent<FadeMaterial>().FadeAlpha();\n```", "```cs\n    using UnityEngine;\n    using System.Collections;\n\n    [RequireComponent(typeof(AudioSource))]\n\n    public class PlayVideo : MonoBehaviour {\n\n      public bool loop = true;\n      public bool playFromStart = true;\n      public MovieTexture video;\n        public AudioClip audioClip;\n      private AudioSource audio;\n\n      void Start () {\n        audio = GetComponent<AudioSource> ();\n\n        if (!video)\n          video = GetComponent<Renderer>().material.mainTexture as MovieTexture;\n\n        if (!audioClip)\n            audioClip = audio.clip;\n\n        video.Stop ();\n        audio.Stop ();\n        video.loop = loop;\n        audio.loop = loop;\n\n        if(playFromStart)\n          ControlMovie();\n      }\n\n      void OnMouseUp(){\n        ControlMovie();\n      }\n\n      public void ControlMovie(){\n\n        if(video.isPlaying){\n          video.Pause();\n          audio.Pause();\n        } else {\n          video.Play();\n          audio.Play();\n        }\n      }\n    }\n    ```"]