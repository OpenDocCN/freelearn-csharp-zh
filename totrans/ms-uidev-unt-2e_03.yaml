- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Designing Mobile User Interfaces
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计移动用户界面
- en: One of the most challenging aspects of designing for mobile interfaces is the
    sheer amount of possible aspect ratios of mobile devices. Mobile devices include
    phones and tablets. Phones tend to be much longer than tablet devices, and a UI
    that fits perfectly on a phone may overlap or look squished when put on a tablet.
    On top of awkward resolutions, there are also weird quirks that will affect your
    UI, such as the notch in the iPhone and the folding screens of the various Samsung
    Galaxy devices.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 设计移动界面最具挑战性的方面之一是移动设备可能具有的纵横比数量。移动设备包括手机和平板电脑。手机通常比平板电脑长得多，一个在手机上完美适配的UI，当放在平板电脑上时可能会重叠或看起来挤压。除了尴尬的分辨率之外，还有一些怪癖会影响您的UI，例如iPhone的刘海和三星Galaxy设备的各种折叠屏幕。
- en: Mobile devices also have a different set of inputs and interactions. For example,
    on a mobile device, you can touch the screen at multiple locations simultaneously,
    but on a PC, you can only click with your mouse in one place at a time. Mobile
    devices require on-screen keyboards and other peripherals to perform the same
    actions that you might perform on a console or PC game.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 移动设备还有一套不同的输入和交互。例如，在移动设备上，您可以在多个位置同时触摸屏幕，但在PC上，您一次只能用鼠标在一个地方点击。移动设备需要屏幕键盘和其他外围设备来执行您可能在控制台或PC游戏中执行的动作。
- en: 'In this chapter, I will discuss the design considerations around the various
    quirks of mobile devices and cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将讨论围绕移动设备各种怪癖的设计考虑因素，并涵盖以下主题：
- en: How to simulate your game at various mobile resolutions and build at a specific
    orientation
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在多种移动分辨率下模拟您的游戏并在特定方向上构建
- en: The recommended button sizes for mobile games
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动游戏的推荐按钮大小
- en: Utilizing invisible buttons to create tap areas
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用不可见按钮创建触摸区域
- en: Laying out interactions based on the thumb zone
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据拇指区域布局交互
- en: How multi-touch input plays a part in mobile UI
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多点触控输入在移动UI中的作用
- en: When to use the accelerometer and gyroscope
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时使用加速度计和陀螺仪
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For this chapter, you will need Unity 2020.3.26f1 or later.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，您需要Unity 2020.3.26f1或更高版本。
- en: Note
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When describing mobile interfaces, I will mostly focus on iOS and Android operating
    system phones and tablets. However, occasionally I will reference Microsoft, as
    they do create a series of tablet devices that, despite running Windows operating
    systems, do have touch capabilities.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在描述移动界面时，我将主要关注iOS和Android操作系统的手机和平板电脑。然而，偶尔我也会提到微软，因为他们确实创建了一系列平板电脑，尽管它们运行Windows操作系统，但它们确实具有触摸功能。
- en: Setting the resolution, aspect ratio, and orientation
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置分辨率、纵横比和方向
- en: When you design a mobile UI, you’ll want to make sure it makes sense and is
    visible at various resolution sizes and aspect ratios. You also may want to allow
    for different screen orientations. In [*Chapter 6*](B18327_06.xhtml#_idTextAnchor085),
    I will discuss how you can develop user interfaces that scale to multiple resolutions
    and layouts, mechanically. But for now, let’s just review how resolution, aspect
    ratio, and orientation can affect your design and how to view your game with the
    various screen settings.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当您设计移动UI时，您希望确保它在各种分辨率大小和纵横比下都有意义且可见。您还可能希望允许不同的屏幕方向。在[*第6章*](B18327_06.xhtml#_idTextAnchor085)中，我将讨论您如何开发能够适应多个分辨率和布局的用户界面。但就目前而言，让我们先回顾一下分辨率、纵横比和方向如何影响您的设计，以及如何使用各种屏幕设置查看您的游戏。
- en: Setting the resolution in the Game view
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在游戏视图中设置分辨率
- en: 'Recall in [*Chapter 1*](B18327_01.xhtml#_idTextAnchor014), we looked at how
    you can change the resolution and aspect ratio of your **Game** view. When you
    change your game’s build settings to iOS or Android, a new list of presets will
    be provided to you. For example, in the following image, you can see the list
    of possibilities when the **Build** is set to iOS:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第1章*](B18327_01.xhtml#_idTextAnchor014)中，我们回顾了如何更改**游戏**视图的分辨率和纵横比。当您将游戏构建设置更改为iOS或Android时，将为您提供一组新的预设。例如，在以下图像中，您可以看到当**构建**设置为iOS时的可能性列表：
- en: '![Figure 2.1: iOS resolutions in Game view](img/Figure_2.01_B18327.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图2.1：游戏视图中的iOS分辨率](img/Figure_2.01_B18327.jpg)'
- en: 'Figure 2.1: iOS resolutions in Game view'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.1：游戏视图中的iOS分辨率
- en: It will not show all the possible iOS resolutions, but many of the common newer
    ones. You can find a more complete list at [https://www.ios-resolution.com/](https://www.ios-resolution.com/).
    Similarly, not all Android resolutions will be listed when switching to an Android
    build, especially considering there are significantly more Android resolutions.
    However, you can find more information about Android screen resolutions at [https://developer.android.com/guide/practices/screens_support.xhtml#testing](https://developer.android.com/guide/practices/screens_support.xhtml#testing).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 它不会显示所有可能的iOS分辨率，但许多常见的较新分辨率都会显示。你可以在[https://www.ios-resolution.com/](https://www.ios-resolution.com/)找到更完整的列表。类似地，当切换到Android构建时，不会列出所有Android分辨率，特别是考虑到Android分辨率数量显著更多。然而，你可以在[https://developer.android.com/guide/practices/screens_support.xhtml#testing](https://developer.android.com/guide/practices/screens_support.xhtml#testing)找到有关Android屏幕分辨率的更多信息。
- en: The Device Simulator
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设备模拟器
- en: Sometimes, setting the **Game** view’s aspect isn’t sufficient to fully see
    how your UI will appear on a device. For example, the controversial notch introduced
    in the iPhone X doesn’t display in the **Game** view and can throw a huge wrench
    in your most carefully designed UIs. However, you can see this notch and how it
    overlaps with your UI using the **Device Simulator**.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，仅设置**游戏**视图的纵横比并不足以完全看到你的UI在设备上的显示效果。例如，iPhone X中引入的具有争议性的刘海在**游戏**视图中不会显示，可能会对你的精心设计的UI造成很大的影响。然而，你可以使用**设备模拟器**来查看这个刘海以及它如何与你的UI重叠。
- en: 'To enable the Device Simulator, complete the following steps:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用设备模拟器，请完成以下步骤：
- en: Download the Device Simulator Package from **Package Manager**.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**包管理器**下载设备模拟器包。
- en: 'To do so, go to **Window** | **Package Manager** and search for **Device Simulator**
    in the list. It’s highly likely you won’t see it in the list initially. If you
    do not see it, make sure that the packages being displayed are those from **Unity
    Registry**, as shown in the following screenshot:'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要这样做，请转到**窗口** | **包管理器**，然后在列表中搜索**设备模拟器**。最初你很可能看不到它。如果你看不到它，请确保显示的包来自**Unity注册表**，如下面的截图所示：
- en: '![Figure 2.2: Unity Registry packages](img/Figure_2.2_B18327.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图2.2：Unity注册表包](img/Figure_2.2_B18327.jpg)'
- en: 'Figure 2.2: Unity Registry packages'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2：Unity注册表包
- en: 'If you still do not see it in the list, you have to enable preview packages.
    Click on the settings cog in the top-right corner, select **Advanced Project Settings**,
    and then select **Enable Preview Packages**, as shown in *Figure 2**.3*:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你仍然在列表中看不到它，你必须启用预览包。点击右上角的设置齿轮，选择**高级项目设置**，然后选择**启用预览包**，如图*图2**.3*所示：
- en: '![Figure 2.3: Enable Preview Packages](img/Figure_2.3_B18327.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图2.3：启用预览包](img/Figure_2.3_B18327.jpg)'
- en: 'Figure 2.3: Enable Preview Packages'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.3：启用预览包
- en: 'Once you locate **Device Simulator** in the list, install it:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你在列表中找到**设备模拟器**，请安装它：
- en: '![Figure 2.4: Install Device Simulator](img/Figure_2.4_B18327.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图2.4：安装设备模拟器](img/Figure_2.4_B18327.jpg)'
- en: 'Figure 2.4: Install Device Simulator'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.4：安装设备模拟器
- en: 'Now that the **Device Simulator** is downloaded, you can change your **Game**
    view to reflect a simulator by selecting the **Game** dropdown and then selecting
    **Simulator**, as shown in the following screenshot:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在设备模拟器已下载，你可以通过选择**游戏**下拉菜单，然后选择**模拟器**来更改你的**游戏**视图以反映模拟器，如下面的截图所示：
- en: '![Figure 2.5: Select Simulator view](img/Figure_2.05_B18327.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图2.5：选择模拟器视图](img/Figure_2.05_B18327.jpg)'
- en: 'Figure 2.5: Select Simulator view'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.5：选择模拟器视图
- en: 'Now you can select multiple devices from the dropdown to simulate. For example,
    I can select an iPad 5th generation or an iPhone X, where the iPhone X shows the
    dreaded notch:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你可以从下拉菜单中选择多个设备进行模拟。例如，我可以选择第五代iPad或iPhone X，其中iPhone X显示了令人讨厌的刘海：
- en: '![Figure 2.6: Different devices on Simulator](img/Figure_2.06_B18327.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图2.6：模拟器上的不同设备](img/Figure_2.06_B18327.jpg)'
- en: 'Figure 2.6: Different devices on Simulator'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.6：模拟器上的不同设备
- en: 'Additionally, you can select **Safe Area** to see the best places to lay out
    your UI:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，你可以选择**安全区域**来查看放置UI的最佳位置：
- en: '![Figure 2.7: Safe Area](img/Figure_2.07_B18327.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图2.7：安全区域](img/Figure_2.07_B18327.jpg)'
- en: 'Figure 2.7: Safe Area'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.7：安全区域
- en: Building for a specific orientation
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建特定方向
- en: You may have noticed in *Figure 2**.1* that there are both landscape and portrait
    options for each resolution. This allows you to view your game depending on which
    orientation you want to support while developing.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到在 *图 2**.1* 中，每个分辨率都有横屏和竖屏选项。这允许你在开发过程中根据你想要支持的方向来查看你的游戏。
- en: 'When building for mobile devices, you can’t specify resolution and aspect ratio
    and will instead have to support all resolutions and aspect ratios. However, you
    can choose between screen orientations on mobile devices. There are two different
    orientations: **Landscape** and **Portrait**.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当为移动设备构建时，你不能指定分辨率和纵横比，而必须支持所有分辨率和纵横比。然而，你可以在移动设备上选择屏幕方向。有两种不同的方向：**横屏**和**竖屏**。
- en: 'Games built so that they are wider than they are tall are said to have landscape
    resolution. Games built taller than they are wide are said to have portrait resolution.
    For example, a **16:9** aspect ratio would be a landscape resolution, and a **9:16**
    aspect ratio would be a portrait resolution, as illustrated:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 建造得比高更宽的游戏被称为横屏分辨率。建造得比宽更高的游戏被称为竖屏分辨率。例如，**16:9**的纵横比将是横屏分辨率，而**9:16**的纵横比将是竖屏分辨率，如下所示：
- en: '![Figure 2.8: Landscape versus portrait Orientation](img/Figure_2.8_B18327.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.8：横屏与竖屏方向](img/Figure_2.8_B18327.jpg)'
- en: 'Figure 2.8: Landscape versus portrait Orientation'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.8：横屏与竖屏方向
- en: 'So, while you can’t choose the exact aspect ratio your mobile game will build
    to, you can choose the orientation, which forces the aspect ratio to be either
    wider or taller. You can set the orientation by navigating to **Edit** | **Project
    Settings** | **Player Settings** and selecting the mobile device. If you are building
    for both iOS and Android, you will not have to set these properties for both.
    As you can see from the following screenshot, the asterisk next to the property
    of **Default Orientation** states that the settings are shared between multiple
    platforms:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，虽然你不能选择移动游戏构建的确切纵横比，但你可以选择方向，这将迫使纵横比要么更宽，要么更高。你可以通过导航到 **编辑** | **项目设置**
    | **玩家设置** 并选择移动设备来设置方向。如果你同时为 iOS 和 Android 构建游戏，你不需要为两者设置这些属性。如以下截图所示，**默认方向**属性旁边的星号表示这些设置在多个平台之间是共享的：
- en: '![Figure 2.9: Resolution and Orientation Settings for mobile](img/Figure_2.09_B18327.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.9：移动设备的分辨率和方向设置](img/Figure_2.09_B18327.jpg)'
- en: 'Figure 2.9: Resolution and Orientation Settings for mobile'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.9：移动设备的分辨率和方向设置
- en: 'You can set the **Default Orientation** to either **Auto Rotation** or one
    of the other rotations, as shown:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将**默认方向**设置为**自动旋转**或其他旋转之一，如下所示：
- en: '![Figure 2.10: Orientation Options for mobile](img/Figure_2.10_B18327.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.10：移动设备的方向选项](img/Figure_2.10_B18327.jpg)'
- en: 'Figure 2.10: Orientation Options for mobile'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.10：移动设备的方向选项
- en: 'Unity defines the following orientations as the following rotations:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 将以下方向定义为以下旋转：
- en: '![Figure 2.11: Mobile orientation rotations](img/Figure_2.11_B18327.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.11：移动设备方向旋转](img/Figure_2.11_B18327.jpg)'
- en: 'Figure 2.11: Mobile orientation rotations'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.11：移动设备方向旋转
- en: 'When you select a rotation other than **Auto Rotation** as the **Default Orientation**,
    the game will only play at that orientation on the device. If you select **Auto
    Rotation**, you will have the option to select between multiple orientations:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当你选择除**自动旋转**之外的**默认方向**时，游戏将只在设备上以该方向播放。如果你选择**自动旋转**，你将可以选择多个方向：
- en: '![Figure 2.12: Auto Rotation options](img/Figure_2.12_B18327.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.12：自动旋转选项](img/Figure_2.12_B18327.jpg)'
- en: 'Figure 2.12: Auto Rotation options'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.12：自动旋转选项
- en: In most cases, it is best to choose only the **Landscape** orientations or only
    the **Portrait** orientations, but not all four. Generally, allowing all four
    orientations will cause issues with the game›s UI’s ability to scale appropriately.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，最好只选择**横屏**方向或只选择**竖屏**方向，而不是所有四个方向。通常，允许所有四个方向会导致游戏 UI 的缩放出现问题。
- en: Players tend to prefer to be able to rotate their games (especially if they’re
    like me and like to play games in bed while their phone is charging, thus being
    forced to face a specific direction), so unless you have a good reason to stop
    rotation, it’s a good idea to enable both **Portrait** and **Portrait Upside Down**
    or **Landscape Right** and **Landscape Left**.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 玩家往往更喜欢能够旋转他们的游戏（尤其是像我这样喜欢在手机充电时躺在床上玩游戏的人），所以除非你有充分的理由停止旋转，否则启用**纵向**和**纵向颠倒**或**横向右**和**横向左**是一个好主意。
- en: Recommended button sizes
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐按钮大小
- en: When creating a mobile game, pretty much all of your interactions are controlled
    by button and screen taps. Buttons that are a reasonable size on a PC or console
    game may be too small for a mobile game. Therefore, you’ll want to make sure to
    design your buttons so that they are still visible on the smaller screen and large
    enough to be touched by a finger.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建移动游戏时，几乎所有的交互都是由按钮和屏幕点击控制的。在PC或游戏机上的合理大小的按钮可能对于移动游戏来说太小了。因此，你需要确保设计你的按钮，以便它们在小屏幕上仍然可见，并且足够大，可以用手指触摸。
- en: Apple, Google, and Microsoft all have specific recommendations for the size
    of a button’s *touchable area* when designing for their devices. Apple recommends
    that buttons be 44 points x 44 points. Google recommends 48 dp x 48 dp with 8
    dp spacing between two buttons. Microsoft recommends 9 mm x 9 mm with 2 mm padding
    between two buttons.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果、谷歌和微软在设计设备时，都对按钮的**可触摸区域**大小有特定的推荐。苹果建议按钮大小为44点 x 44点。谷歌推荐48 dp x 48 dp，两个按钮之间间隔8
    dp。微软推荐9 mm x 9 mm，两个按钮之间填充2 mm。
- en: 'You can find information about designing touch/hit areas for each mobile platform
    at the following locations:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在以下位置找到有关为每个移动平台设计触摸/击打区域的信息：
- en: 'Apple: [https://developer.apple.com/design/human-interface-guidelines/layout](https://developer.apple.com/design/human-interface-guidelines/layout)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 苹果：[https://developer.apple.com/design/human-interface-guidelines/layout](https://developer.apple.com/design/human-interface-guidelines/layout)
- en: 'Google: [https://material.io/design/usability/accessibility.xhtml#layout-and-typography](https://material.io/design/usability/accessibility.xhtml#layout-and-typography)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌：[https://material.io/design/usability/accessibility.xhtml#layout-and-typography](https://material.io/design/usability/accessibility.xhtml#layout-and-typography)
- en: 'Microsoft: [https://docs.microsoft.com/en-us/windows/uwp/design/input/guidelines-for-targeting](https://docs.microsoft.com/en-us/windows/uwp/design/input/guidelines-for-targeting)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软：[https://docs.microsoft.com/en-us/windows/uwp/design/input/guidelines-for-targeting](https://docs.microsoft.com/en-us/windows/uwp/design/input/guidelines-for-targeting)
- en: 'Annoyingly, all of these recommendations are in different units of measurement.
    So, what do these numbers even mean in terms of design? How do you make sure your
    buttons are 9 mm x 9 mm or 44 points x 44 points? And why are they talking about
    these measurements in different units? It’s almost like they are all competitors
    and don’t want to work nicely together! To answer these questions, let’s first
    look at what the various units of measurement represent:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 令人烦恼的是，所有这些推荐都使用不同的度量单位。那么，这些数字在设计方面究竟意味着什么？你如何确保你的按钮是9 mm x 9 mm或44点 x 44点？他们为什么用不同的单位来谈论这些测量值？这几乎就像他们都是竞争对手，不想好好合作！为了回答这些问题，让我们首先看看各种度量单位代表什么：
- en: A **point** (**pt**) is used to measure what represents a physical measurement
    on a screen. 1 point is 1/72 of an international inch or 0.3528 mm. It is primarily
    used in typography and print media. When working with a program such as **Illustrator**,
    creating an object in points and then exporting your image at 72 ppi makes pixels
    and points the same size. Points and pixels are not the same, except when exporting
    at 72 ppi.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**点（pt**）用于测量屏幕上的物理尺寸。1点等于国际英寸的1/72或0.3528毫米。它主要用于排版和印刷媒体。当使用像**Illustrator**这样的程序时，在点中创建对象，然后以72
    ppi导出你的图像，像素和点的大小就相同。点和像素并不相同，除非以72 ppi导出。'
- en: '**Density-independent pixels** (**dp**), pronounced “dips”, is a unit of measurement
    that was created to maintain consistently sized items on screens with different
    **dpi** (**dots per inch**) values. A density-independent pixel measures the size
    of 1 pixel on a 160 dpi screen. Using this conversion is like saying it would
    appear at this size on a 160 dpi screen, and it should appear as the exact same
    physical size on any other screen. You can read more about density-independent
    pixels at [https://developer.android.com/training/multiscreen/screendensities](https://developer.android.com/training/multiscreen/screendensities).'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密度无关像素**（**dp**），发音为“dips”，是一个用于在具有不同 **dpi**（每英寸点数）值的屏幕上保持项目大小一致的测量单位。密度无关像素测量的是在
    160 dpi 屏幕上 1 像素的大小。使用这种转换就像说它会在 160 dpi 屏幕上以这个大小显示，并且应该在任何其他屏幕上以相同的物理大小显示。你可以在[https://developer.android.com/training/multiscreen/screendensities](https://developer.android.com/training/multiscreen/screendensities)上了解更多关于密度无关像素的信息。'
- en: When **millimeters** (**mm**) are used to describe a button size, the size is
    a physical representation of the button on the screen. So, if you were to take
    a ruler and hold it up to the screen, it would be consistent with this unit of
    measurement.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用 **毫米**（**mm**）来描述按钮大小时，这个大小是屏幕上按钮的物理表示。因此，如果你用尺子对着屏幕，它将与这个测量单位一致。
- en: OK, so they all represent some physical unit of measurement on the screen. That
    makes things a little easier. Let’s convert all of these values to millimeters
    so we can compare them in a unit of measurement that is a bit easier to conceptualize.
    I’m also going to convert them to points, since you can use points in a program,
    such as Illustrator, to create your button art.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，所以它们都代表了屏幕上的一些物理测量单位。这使得事情变得简单一些。让我们将这些值都转换为毫米，这样我们就可以在一个更容易概念化的测量单位中比较它们。我还会将它们转换为点，因为你可以使用点在程序（如
    Illustrator）中创建你的按钮艺术。
- en: If you need to convert any of these units of measurement and you’re not too
    keen on the idea of doing math, googling *convert points to mm* will bring up
    a nice conversion calculator for you.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要转换这些测量单位之一，并且不太喜欢数学，搜索 *convert points to mm* 将会为你提供一个不错的转换计算器。
- en: 'You can also use the following converter tool – it is really handy for bouncing
    between all of the different units of measurement: [http://angrytools.com/android/pixelcalc/](http://angrytools.com/android/pixelcalc/)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用以下转换工具——它对于在所有不同的测量单位之间转换来说非常方便：[http://angrytools.com/android/pixelcalc/](http://angrytools.com/android/pixelcalc/)
- en: 'In the following chart, I rounded to the nearest integer the measurement for
    points, and to the nearest tenth for millimeters, to make things easier. We can
    use this image as a way to compare the different sizes (the image has been scaled
    and the sizes may not translate to their real-world measurements):'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的图表中，我将像素的测量值四舍五入到最接近的整数，将毫米的测量值四舍五入到最接近的十分之一，以便于比较。我们可以使用这张图片来比较不同的尺寸（图片已被缩放，尺寸可能不会转换为实际的测量值）：
- en: '![Figure 2.13: Recommended minimum tappable button sizes](img/Figure_2.13_B18327.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.13：推荐的最低可触摸按钮大小](img/Figure_2.13_B18327.jpg)'
- en: 'Figure 2.13: Recommended minimum tappable button sizes'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.13：推荐的最低可触摸按钮大小
- en: So, which size should you use? It’s up to you. You don’t have to use their recommendations,
    but I personally go with the Apple recommendation since it is the largest and
    therefore meets the recommendations of the other two. Additionally, the larger
    the button is, the more people will be able to easily touch it. In [*Chapter 4*](B18327_04.xhtml#_idTextAnchor054),
    we will discuss designing our UI so that the maximum amount of people will be
    able to interact with it.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，你应该使用多大呢？这取决于你。你不必使用他们的推荐，但我个人倾向于使用苹果的推荐，因为它最大，因此也符合其他两个的推荐。此外，按钮越大，越多人能够轻松触摸它。在[*第
    4 章*](B18327_04.xhtml#_idTextAnchor054)中，我们将讨论如何设计我们的用户界面，以便尽可能多的人能够与之交互。
- en: Another consideration is whether your game will be played with thumbs or with
    fingers. If the game will be played with thumbs, you’ll want bigger buttons because
    thumbs are bigger! The numbers described previously are minimum recommendations,
    so they would be used for a finger tap, not a thumb tap.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个考虑因素是，你的游戏是用拇指还是用手指来玩。如果游戏是用拇指来玩，你将需要更大的按钮，因为拇指更大！之前描述的数字是最低推荐值，因此它们适用于手指触摸，而不是拇指触摸。
- en: So, how do you ensure that your buttons are always the size you want in your
    game? The **Canvas Scaler** component! In [*Chapter 6*](B18327_06.xhtml#_idTextAnchor085),
    we will discuss how ensuring a button of a specified size, regardless of resolution,
    can be achieved by setting the **Canvas Scaler** component’s **UI Scale Mode**
    to **Constant Physical Size**. You have the option to have your Canvas’s measurement
    units be in millimeters or points (as well as a few other units).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，你如何确保你的按钮在游戏中始终保持你想要的尺寸？答案是**画布缩放器**组件！在[*第6章*](B18327_06.xhtml#_idTextAnchor085)中，我们将讨论如何通过将**画布缩放器**组件的**UI缩放模式**设置为**常量物理尺寸**来确保按钮的指定尺寸，无论分辨率如何。你可以选择将画布的测量单位设置为毫米或点（以及一些其他单位）。
- en: My recommendation when designing for mobile devices is to have multiple devices
    on hand to test at various resolutions. Play the game and see how it feels to
    you. Ask people with smaller and larger hands than yours to play. Even after following
    the minimum guidelines specified by the various mobile platforms, you may still
    find your buttons are too small for what you need.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 当为移动设备设计时，我的建议是准备多台设备以在各种分辨率下进行测试。玩玩游戏，看看感觉如何。请比你手小和手大的人来玩。即使遵循了各种移动平台指定的最低指南，你仍然可能会发现你的按钮对你所需的操作来说太小了。
- en: Google and Microsoft also specify visible sizes that they recommend, so you
    can have a smaller button image as long as the button’s hit area is the recommended
    size. If you want a button that is smaller visually but has a larger hit area,
    instead of attaching the button component to the tiny piece of art, attach it
    to a larger parent hit area and change the target image of the button to the tiny
    art.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌和微软也指定了他们推荐的可见尺寸，因此你可以有一个更小的按钮图像，只要按钮的点击区域是推荐的尺寸。如果你想有一个视觉上更小但点击区域更大的按钮，而不是将按钮组件附加到小块艺术上，而是将其附加到一个更大的父级点击区域，并更改按钮的目标图像为小块艺术。
- en: Full screen/screen portion taps
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 全屏/屏幕部分点击
- en: Many mobile games have a single input whereby you can tap anywhere on the screen
    to make an action happen. For example, endless runners tend to allow the player
    to tap or press and hold anywhere on the screen to jump. To achieve this, you
    only have to add an invisible button that covers the whole screen. If you have
    another UI that receives inputs, it needs to be in front of the full-screen button
    so that the button does not block the inputs to the other UI items.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 许多移动游戏只有一个输入，你可以点击屏幕上的任何位置来执行动作。例如，无尽跑酷游戏通常允许玩家点击或按住屏幕上的任何位置来跳跃。为了实现这一点，你只需要添加一个覆盖整个屏幕的不可见按钮。如果你有其他接收输入的UI，它需要位于全屏按钮之前，以确保按钮不会阻挡其他UI元素的输入。
- en: 'Some games require that you tap on specific regions of the screen to perform
    specific actions. For example, I created a game called Sequence Seekers for my
    doctoral dissertation. This game included a down-the-mountain mode in which the
    player had to tap the left or right-hand side of the screen to move left or right
    in the game. I achieved this by adding invisible buttons that covered the two
    halves of the screen, as shown here:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 一些游戏要求你点击屏幕上的特定区域来执行特定动作。例如，我为我的博士论文创建了一个名为Sequence Seekers的游戏。这个游戏包括一个下山模式，玩家必须点击屏幕的左侧或右侧来在游戏中左右移动。我是通过添加覆盖屏幕两半的不可见按钮来实现这一点的，如下所示：
- en: '![Figure 2.14: Using invisible buttons to create tab zones](img/Figure_2.14_B18327.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![图2.14：使用不可见按钮创建标签区域](img/Figure_2.14_B18327.jpg)'
- en: 'Figure 2.14: Using invisible buttons to create tab zones'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.14：使用不可见按钮创建标签区域
- en: In [*Chapter 9*](B18327_09.xhtml#_idTextAnchor213) and [*Chapter 11*](B18327_11.xhtml#_idTextAnchor292),
    we’ll discuss how to implement such buttons as well as how to implement floating
    D-Pads and joysticks.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第9章*](B18327_09.xhtml#_idTextAnchor213)和[*第11章*](B18327_11.xhtml#_idTextAnchor292)中，我们将讨论如何实现这样的按钮，以及如何实现浮动D-Pad和摇杆。
- en: The thumb zone
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 拇指区域
- en: When designing a mobile game, it’s important to consider how the player will
    hold the device. You don’t want to put your UI in areas that will be difficult
    for the player to reach. Players tend to prefer to hold and play with one hand.
    Not all games allow for this, but if possible, you want to allow your players
    to do so. How do you know whether your UI is in an area that’s reachable by the
    thumb? Put the UI in the thumb zone! Essentially, the thumb zone is the area of
    the phone that is comfortable for the player to reach when holding the phone with
    one hand. You can find the thumb zone on your particular phone by holding the
    phone and easily moving your thumb around without having to move your hand.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计移动游戏时，考虑玩家如何握持设备非常重要。您不希望将UI放在玩家难以触及的区域。玩家倾向于喜欢单手握持和玩游戏。并非所有游戏都允许这样做，但如果可能的话，您希望允许玩家这样做。您如何知道您的UI是否在拇指可触及的区域？将UI放在拇指区域！本质上，拇指区域是玩家单手握持手机时感到舒适可触及的区域。您可以通过握持手机并轻松移动拇指来找到您手机的拇指区域，而无需移动您的手。
- en: 'The following blog post offers a really great explanation of the thumb zone,
    along with a handy (no pun intended) template for finding the thumb zone on various
    devices: [https://www.scotthurff.com/posts/how-to-design-for-thumbs-in-the-era-of-huge-screens/](https://www.scotthurff.com/posts/how-to-design-for-thumbs-in-the-era-of-huge-screens/)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以下博客文章提供了一个非常好的拇指区域解释，以及一个实用的（无意中打趣）模板，用于在各种设备上找到拇指区域：[https://www.scotthurff.com/posts/how-to-design-for-thumbs-in-the-era-of-huge-screens/](https://www.scotthurff.com/posts/how-to-design-for-thumbs-in-the-era-of-huge-screens/)
- en: The phones referenced in the link are a bit on the old side, but it is still
    one of the best resources related to the thumb zone available on the internet.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 链接中提到的手机可能有些过时，但它在互联网上仍然是关于拇指区域的最佳资源之一。
- en: As a lefty, I implore you to consider making the game as easy to play with the
    left hand as it is for the right when designing with the thumb zone in mind.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 作为左撇子，我恳请您在设计时考虑使游戏在拇指区域设计下左手的操作与右手一样容易。
- en: Other mobile inputs
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他移动输入
- en: When designing for mobile, it’s important to remember that the input works a
    little differently than it does with a computer or console game. Most of the input
    on a mobile is controlled by the touchscreen, accelerometer, or gyroscope. This
    opens up a different set of design choices for you when creating mobile games.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在为移动设备设计时，重要的是要记住输入的工作方式与电脑或游戏机游戏略有不同。在移动设备上，大部分输入由触摸屏、加速度计或陀螺仪控制。这为您在创建移动游戏时提供了不同的设计选择。
- en: Touchscreen devices can generally access multiple touches. You can use multi-touch
    for different types of interactions, but the most common usage of multi-touch
    allows the player to pinch-to-zoom. In [*Chapter 8*](B18327_08.xhtml#_idTextAnchor147),
    we will discuss how to use multi-touch input to create pan and pinch-to-zoom functionality
    in a game.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 触摸屏设备通常可以访问多个触摸点。您可以使用多点触控进行不同类型的交互，但最常见的多点触控用法是允许玩家进行捏合缩放。在[*第8章*](B18327_08.xhtml#_idTextAnchor147)中，我们将讨论如何使用多点触控输入在游戏中创建平移和捏合缩放功能。
- en: Most mobile devices have a built-in accelerometer and many also have a gyroscope.
    Without getting too technical in describing how they actually work, the difference
    between the accelerometer and the gyroscope is what they measure. The accelerometer
    measures acceleration within the 3D coordinate system and the gyroscope measures
    rotation. We will review examples of how to use the accelerometer and gyroscope
    in [*Chapter 8*](B18327_08.xhtml#_idTextAnchor147).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数移动设备都内置了加速度计，许多设备还内置了陀螺仪。在这里我们不会过于技术性地描述它们是如何实际工作的，加速度计和陀螺仪的区别在于它们所测量的内容。加速度计测量3D坐标系内的加速度，而陀螺仪测量旋转。我们将在[*第8章*](B18327_08.xhtml#_idTextAnchor147)中回顾如何使用加速度计和陀螺仪的示例。
- en: Device-specific resources
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设备特定资源
- en: 'If you are making a UI for a mobile device, you may want to use the device-specific
    UI elements to maintain a consistent style. You can find various art assets and
    templates for designing UI for each mobile platform at the following locations:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在为移动设备制作用户界面，您可能希望使用设备特定的UI元素以保持一致的风格。您可以在以下位置找到为每个移动平台设计UI的各种艺术资源和模板：
- en: 'Apple: [https://developer.apple.com/design/resources/](https://developer.apple.com/design/resources/)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Apple: [https://developer.apple.com/design/resources/](https://developer.apple.com/design/resources/)'
- en: 'Android: [https://developer.android.com/design/index.xhtml](https://developer.android.com/design/index.xhtml)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Android: [https://developer.android.com/design/index.xhtml](https://developer.android.com/design/index.xhtml)'
- en: 'Windows: [https://developer.microsoft.com/en-us/windows/apps/design](https://developer.microsoft.com/en-us/windows/apps/design%20)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Windows: [https://developer.microsoft.com/en-us/windows/apps/design](https://developer.microsoft.com/en-us/windows/apps/design%20)'
- en: Summary
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Creating a UI for mobile devices isn’t too different from creating a UI for
    a console or computer, but it is different in that you can accept more than one
    screen input and can also access information about the device’s accelerometer
    and gyroscope. Additionally, resolution plays an important part in your game’s
    development, since mobile devices have a huge range of resolutions and aspect
    ratios.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 为移动设备创建UI与为控制台或计算机创建UI并没有太大区别，但不同之处在于你可以接受多个屏幕输入，并且还可以访问设备加速度计和陀螺仪的信息。此外，分辨率在游戏开发中起着重要作用，因为移动设备具有广泛的分辨率和纵横比。
- en: In the next chapter, we’ll discuss the design considerations for developing
    UI for XR applications, including VR, MR, and AR.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论为XR应用程序开发UI的设计考虑因素，包括VR、MR和AR。
