["```cs\nenum PlayerAction { Attack, Defend, Flee }; \n```", "```cs\nPlayerAction CurrentAction = PlayerAction.Defend; \n```", "```cs\nenum PlayerAction { Attack = 0, Defend = 1, Flee = 2 }; \n```", "```cs\nenum PlayerAction { Attack = 5, Defend, Flee }; \n```", "```cs\nenum PlayerAction { Attack = 10, Defend = 5, Flee = 0}; \n```", "```cs\nenum PlayerAction :  **byte** { Attack, Defend, Flee }; \n```", "```cs\nenum PlayerAction { Attack = 10, Defend = 5, Flee = 0};\nPlayerAction CurrentAction = PlayerAction.Attack;\n**int** ActionCost = **(****int****)**CurrentAction; \n```", "```cs\npublic class PlayerBehavior : MonoBehaviour \n{\n    // ... No other variable changes needed ...\n\n    **// 1**\n    **public****float** **JumpVelocity =** **5f****;**\n    **private****bool** **_isJumping;**\n\n    void Start()\n    {\n        _rb = GetComponent<Rigidbody>();\n    }\n\n    void Update()\n    {\n        **// 2**\n        **_isJumping |= Input.GetKeyDown(KeyCode.Space);**\n        // ... No other changes needed ...\n    }\n\n    void FixedUpdate()\n    {\n        **// 3**\n        **if****(_isJumping)**\n        **{**\n            **// 4**\n            **_rb.AddForce(Vector3.up * JumpVelocity, ForceMode.Impulse);**\n        **}**\n        **// 5**\n        **_isJumping =** **false****;**\n        // ... No other changes needed ...\n    }\n} \n```", "```cs\n    public class PlayerBehavior : MonoBehaviour \n    {\n        **// 1**\n        **public****float** **DistanceToGround =** **0.1f****;**\n        **// 2** \n        **public** **LayerMask GroundLayer;**\n        **// 3**\n        **private** **CapsuleCollider _col;**\n        // ... No other variable changes needed ...\n\n        void Start()\n        {\n            _rb = GetComponent<Rigidbody>();\n\n            **// 4**\n            **_col = GetComponent<CapsuleCollider>();**\n        }\n\n        void Update()\n        {\n            // ... No changes needed ...\n        }\n\n        void FixedUpdate()\n        {\n            **// 5**\n            if(**IsGrounded() &&** _isJumping)\n            {\n                _rb.AddForce(Vector3.up * JumpVelocity,\n                     ForceMode.Impulse);\n             }\n             // ... No other changes needed ...\n        }\n\n        **// 6**\n        **private****bool****IsGrounded****()**\n        **{**\n            **// 7**\n            **Vector3 capsuleBottom =** **new** **Vector3(_col.bounds.center.x,**\n                 **_col.bounds.min.y, _col.bounds.center.z);**\n\n            **// 8**\n            **bool** **grounded = Physics.CheckCapsule(_col.bounds.center,**\n                **capsuleBottom, DistanceToGround, GroundLayer,**\n                   **QueryTriggerInteraction.Ignore);**\n\n            **// 9**\n            **return** **grounded;**\n        **}**\n    **}** \n    ```", "```cs\n    public class PlayerBehavior : MonoBehaviour \n    {\n        **// 1**\n        **public** **GameObject Bullet;**\n        **public****float** **BulletSpeed =** **100f****;**\n\n        **// 2**\n        **private****bool** **_isShooting**;\n\n        // ... No other variable changes needed ...\n\n        void Start()\n        {\n            // ... No changes needed ...\n        }\n\n        void Update()\n        {\n            **// 3**\n            **_isShooting |= Input.GetMouseButtonDown(****0****);**\n            // ... No other changes needed ...\n        }\n\n        void FixedUpdate()\n        {\n            // ... No other changes needed ...\n\n            **// 4**\n            **if** **(_isShooting)**\n            **{**\n                **// 5**\n                **GameObject newBullet = Instantiate(Bullet,**\n                    **this****.transform.position +** **new** **Vector3(****1****,** **0****,** **0****),**\n                       **this****.transform.rotation);**\n                **// 6**\n                **Rigidbody BulletRB =** \n                     **newBullet.GetComponent<Rigidbody>();**\n\n                **// 7**\n                **BulletRB.velocity =** **this****.transform.forward *** \n                                                **BulletSpeed;**\n            **}**\n            **// 8**\n            **_isShooting =** **false****;**\n        }\n\n        private bool IsGrounded()\n        {\n            // ... No changes needed ...\n        }\n    } \n    ```", "```cs\n    using System.Collections;\n    using System.Collections.Generic;\n    using UnityEngine;\n    public class BulletBehavior : MonoBehaviour \n    {\n        // 1\n        public float OnscreenDelay = 3f;\n\n        void Start () \n        {\n            // 2\n            Destroy(this.gameObject, OnscreenDelay);\n        }\n    } \n    ```", "```cs\n    public class GameBehavior : MonoBehaviour \n    {\n        private int _itemsCollected = 0;\n        private int _playerHP = 10;\n    } \n    ```", "```cs\npublic string FirstName { get; set; };\n// OR\npublic string LastName { get; set; } = \"Smith\"; \n```", "```cs\npublic string FirstName\n{\n    get {\n        // Code block executes when variable is accessed\n    }\n    set {\n        // Code block executes when variable is updated\n    }\n} \n```", "```cs\nprivate string _firstName\npublic string FirstName {\n    get { \n        **return** _firstName;\n    }\n    set {\n        _firstName = **value**;\n    }\n} \n```", "```cs\npublic class GameBehavior : MonoBehaviour \n{\n    private int _itemsCollected = 0; \n    private int _playerHP = 10;\n\n    **// 1**\n    **public****int** **Items**\n    **{**\n        **// 2**\n        **get** **{** **return** **_itemsCollected; }**\n        **// 3**\n        **set** **{** \n               **_itemsCollected =** **value****;** \n               **Debug.LogFormat(****\"Items: {0}\"****, _itemsCollected);**\n        **}**\n    **}**\n    **// 4**\n    **public****int** **HP** \n    **{**\n        **get** **{** **return** **_playerHP; }**\n        **set** **{** \n               **_playerHP =** **value****;** \n               **Debug.LogFormat(****\"Lives: {0}\"****, _playerHP);**\n         **}**\n    **}**\n} \n```", "```cs\n    public class ItemBehavior : MonoBehaviour \n    {\n        **// 1**\n        **public** **GameBehavior GameManager;**\n        **void****Start****()**\n        **{**\n              **// 2**\n              **GameManager = GameObject.Find(****\"Game_Manager\"****).GetComponent<GameBehavior>();**\n        **}**\n        void OnCollisionEnter(Collision collision)\n        {\n            if (collision.gameObject.name == \"Player\")\n            {\n                Destroy(this.transform.parent.gameObject);\n                Debug.Log(\"Item collected!\");\n                **// 3**\n                **GameManager.Items +=** **1****;**\n            }\n        }\n    } \n    ```", "```cs\n    // 1\n    using UnityEngine.UI; \n    public class GameBehavior : MonoBehaviour \n    {\n        // 2\n        public int MaxItems = 4;\n        // 3\n        public Text HealthText;     \n        public Text ItemText;\n        public Text ProgressText;\n        // 4\n        void Start()\n        { \n            ItemText.text += _itemsCollected;\n            HealthText.text += _playerHP;\n        }\n        private int _itemsCollected = 0;\n        public int Items\n        {\n            get { return _itemsCollected; }\n            set { \n                _itemsCollected = value; \n                **// 5**\n                ItemText.text = \"Items Collected: \" + Items;\n                // 6\n                if(_itemsCollected >= MaxItems)\n                {\n                    ProgressText.text = \"You've found all the items!\";\n                } \n                else\n                {\n                    ProgressText.text = \"Item found, only \" + (MaxItems - _itemsCollected) + \" more to go!\";\n                }\n            }\n        }\n\n        private int _playerHP = 10;\n        public int HP \n        {\n            get { return _playerHP; }\n            set { \n                _playerHP = value;\n                // 7\n                HealthText.text = \"Player Health: \" + HP;\n                Debug.LogFormat(\"Lives: {0}\", _playerHP);\n            }\n        }\n    } \n    ```", "```cs\n    public class GameBehavior : MonoBehaviour \n    { \n        **// 1**\n        **public** **Button WinButton;**\n        private int _itemsCollected = 0;\n        public int Items\n        {\n            get { return _itemsCollected; }\n            set\n            {\n                _itemsCollected = value;\n                ItemText.text = \"Items Collected: \" + Items;\n\n                if (_itemsCollected >= MaxItems)\n                {\n                    ProgressText.text = \"You've found all the items!\";\n\n                    **// 2**\n                    **WinButton.gameObject.SetActive(****true****);**\n                }\n                else\n                {\n                    ProgressText.text = \"Item found, only \" + (MaxItems - _itemsCollected) + \" more to go!\";\n                }\n            }\n        }\n    } \n    ```", "```cs\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine; \n```", "```cs\n    using System.Collections;\n    using System.Collections.Generic;\n    using UnityEngine;\n    using UnityEngine.UI;\n    **// 1**\n    **using** **UnityEngine.SceneManagement;**\n    public class GameBehavior : MonoBehaviour \n    {\n        // ... No changes needed ...\n        private int _itemsCollected = 0;\n        public int Items\n        {\n            get { return _itemsCollected; }\n            set { \n                _itemsCollected = value;\n\n                if (_itemsCollected >= MaxItems)\n                {\n                    ProgressText.text = \"You've found all the items!\";\n                    WinButton.gameObject.SetActive(true);\n\n                    **// 2**\n                    **Time.timeScale =** **0f****;**\n                }\n                else\n                {\n                    ProgressText.text= \"Item found, only \" + (MaxItems – _itemsCollected) + \" more to go!\";\n                }\n            }\n        }\n        **public****void****RestartScene****()**\n        **{**\n            **// 3**\n            **SceneManager.LoadScene(****0****);**\n            **// 4**\n            **Time.timeScale =** **1f****;**\n        **}**\n\n        // ... No other changes needed ...\n    } \n    ```"]