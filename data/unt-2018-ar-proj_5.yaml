- en: Picture Puzzle - The AR Experience
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图片拼图 - AR体验
- en: In this chapter, we will create another AR-based application. This time, the
    focus will be a puzzle that could be used in education to teach languages or word
    recognition. The reason for this is that AR-based applications and games are also
    very viable sources for inspiration, and target audiences.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将创建另一个基于AR的应用程序。这次，重点将是一个可以用于教育的谜题，用于教授语言或词汇识别。这样做的原因是，基于AR的应用程序和游戏也是非常有前景的灵感来源和目标受众。
- en: 'This chapter will introduce you to the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将向您介绍以下内容：
- en: How to update an existing installation of Unity to add Vuforia support
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何更新现有的Unity安装以添加Vuforia支持
- en: Unity Hub
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unity Hub
- en: How to build an education-based AR app for Windows, Android, and iOS
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何为Windows、Android和iOS构建基于教育的AR应用程序
- en: Let's dive right in and get into the background of this project and why it is
    relevant to AR.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们直接深入这个项目的背景，以及为什么它与AR相关。
- en: Project background
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目背景
- en: As with any other project, it is always best to start with an idea. When I first
    thought of this project, I wanted to showcase AR applications and games to also
    reflect education. I have educated children on the English language and know the
    frustrations of learning a new language intimately.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 就像任何其他项目一样，最好从想法开始。当我第一次想到这个项目时，我想展示AR应用程序和游戏也能反映教育。我教育过孩子们英语，深知学习新语言的挫败感。
- en: Game and application development should also teach something to the users; it
    doesn’t always have to be history, mathematics, language, science, or geography;
    it can also be something innocuous, such as reflex training or hand–eye coordination.
    We, as developers, have a unique place in the world, being able to incorporate
    learning something in an engaging way, without it seeming like something the user
    *has* to do.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏和应用开发也应该教会用户一些东西；它不一定是历史、数学、语言、科学或地理；它也可以是某些无害的东西，比如反应训练或手眼协调。作为开发者，我们在世界上有一个独特的位置，能够以有趣的方式融入学习，而不会让用户觉得这是他们“必须”做的事情。
- en: This doesn’t mean that we have to mull over this and try to incorporate it into
    our apps and games; it could, and generally is, something that just happens. With
    this project, though, I have specifically targeted the learning aspect, to show
    how easily it could be incorporated into AR projects.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不意味着我们必须深思熟虑，试图将其纳入我们的应用程序和游戏中；它可能，并且通常就是这样，只是自然而然发生的事情。然而，在这个项目中，我特别针对学习方面，以展示它如何轻松地融入AR项目。
- en: Project overview
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目概述
- en: This project is based on the idea of being able to teach children word association
    and spelling by creating a really simple puzzle for them to solve in the real
    world, which they can then check with this app, to find out whether they solved
    the puzzle.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目基于这样一个想法：通过为孩子们创建一个真正简单的现实世界谜题，让他们去解决，然后他们可以用这个应用程序来检查，看看他们是否解决了这个谜题，以此来教授孩子们词汇联想和拼写。
- en: The build time for this project is 15 minutes at the most.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目的构建时间最多为15分钟。
- en: Getting started
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始学习
- en: 'Here are the system requirements for Unity Version 2018.1.5:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是Unity版本2018.1.5的系统要求：
- en: '**Released:** 15 June 2018'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布日期**：2018年6月15日'
- en: '**OS:** Windows 7 SP1+, 8, 10'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作系统**：Windows 7 SP1+、8、10'
- en: '**GPU:** Graphics card with DX9 (shader model 3.0) or DX11 with feature level
    9.3 capabilities.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GPU**：具有DX9（着色器模型3.0）或具有9.3功能级别的DX11的显卡。'
- en: 'Check out the following:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下内容：
- en: '[https://unity3d.com/](https://unity3d.com/) [https://www.turbosquid.com/FullPreview/Index.cfm/ID/967597](https://www.turbosquid.com/FullPreview/Index.cfm/ID/967597)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://unity3d.com/](https://unity3d.com/) [https://www.turbosquid.com/FullPreview/Index.cfm/ID/967597](https://www.turbosquid.com/FullPreview/Index.cfm/ID/967597)'
- en: Installing Vuforia
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Vuforia
- en: I know we went over this in [Chapter 1](25dd1c0c-e666-497b-a30e-c680e780d243.xhtml), *What
    AR is and How to Get Set up,* but a brief refresher is in order, in case that
    chapter was skimmed over or Unity has been updated.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道我们在[第1章](25dd1c0c-e666-497b-a30e-c680e780d243.xhtml)，“什么是AR以及如何设置”中讨论过这个问题，但为了以防那一章被快速浏览或者Unity已经更新，这里需要简要回顾一下。
- en: To install Vuforia on both macOS and Windows, the steps are quite simple; however,
    I want to show you a different method of acquiring the Vuforia software and Unity.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要在macOS和Windows上安装Vuforia，步骤相当简单；然而，我想向您展示获取Vuforia软件和Unity的不同方法。
- en: 'Unity has another type of installation you can do called the Unity Hub, which
    you can get from the Unity website in lieu of the 2018 installer file. What Unity
    Hub does is allow you to have multiple installations of Unity in a single location,
    a way to set your preferred Unity Editor, consolidation of your projects into
    a single launcher, an easy way to update components you want installed, and it
    also gives you access to templates for project preset types. Follow these steps:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Unity还有一种可以安装的类型，称为Unity Hub，您可以从Unity网站获取，而不是2018安装程序文件。Unity Hub的作用是允许您在单个位置拥有多个Unity安装，这是一种设置您首选Unity编辑器的方法，将您的项目合并到单个启动器中，轻松更新您想要安装的组件，并且它还提供了对项目预设类型模板的访问。按照以下步骤操作：
- en: 'Navigate to the Unity website and click on Get Unity:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到Unity网站并点击获取Unity：
- en: '![](img/d56bdd76-c0b5-43d2-a604-4dd1fa3189c6.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d56bdd76-c0b5-43d2-a604-4dd1fa3189c6.png)'
- en: 'You will be presented with an option for Personal, Plus or Pro. Click on Try
    Personal if that fits you and what you need:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将看到一个选项，可以选择个人、高级或专业。如果您适合并需要个人版本，请点击尝试个人：
- en: '![](img/5f358e12-4595-4217-a8ba-ff96bb7dc5fc.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5f358e12-4595-4217-a8ba-ff96bb7dc5fc.png)'
- en: 'That will lead you to the download page, in which you need to put a check mark
    to accept the terms and give you the option to download the Unity application
    itself or the Unity Hub that is in Preview. We want the Unity Hub:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带您到下载页面，在那里您需要勾选复选框以接受条款，并给您提供下载Unity应用程序本身或预览中的Unity Hub的选项。我们想要Unity Hub：
- en: '![](img/fd05337d-356d-44a2-919f-fd8dfc81f0be.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fd05337d-356d-44a2-919f-fd8dfc81f0be.png)'
- en: 'Once you have downloaded and installed the Unity Hub, you can open it, and
    it will give you an option for Projects, Learn, or Installs. Click on Installs
    to look at the available versions:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您下载并安装了Unity Hub，您就可以打开它，它将为您提供项目、学习或安装的选项。点击安装以查看可用的版本：
- en: '![](img/77f3f0f2-2179-443d-97c9-8f4e3fdf60c2.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/77f3f0f2-2179-443d-97c9-8f4e3fdf60c2.png)'
- en: 'We want to install the latest version of Unity, which is 2018.1.5f1:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们想安装Unity的最新版本，即2018.1.5f1：
- en: '![](img/e60be635-e06b-48ee-adf6-9baef4f71c5a.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e60be635-e06b-48ee-adf6-9baef4f71c5a.png)'
- en: 'Once you click to install the version you want, click on the Components you
    want and press Done to install the Unity Editor:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您点击安装您想要的版本，点击您想要的组件，然后按完成安装Unity编辑器：
- en: '![](img/ae3ef697-0ba8-4958-9367-8a640d25e1d9.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ae3ef697-0ba8-4958-9367-8a640d25e1d9.png)'
- en: Now, let’s say you forgot to select to install Vuforia during this step when
    you installed Unity—no problem; you can skip the previous points and just follow
    along from here on out.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设您在安装Unity时忘记选择在此步骤中安装Vuforia——没问题；您可以跳过前面的点，从这里继续操作。
- en: Open a project in Unity; it could be a dummy project that you don’t want, or
    it could be the basis for this chapter’s project.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Unity中打开一个项目；这可能是一个您不想要的虚拟项目，或者它可能是本章项目的起点。
- en: 'Click on Build from the file menu that opens the build menu:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击文件菜单中打开的构建菜单：
- en: '![](img/84168b0c-dad3-4241-924a-31906b5831e1.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/84168b0c-dad3-4241-924a-31906b5831e1.png)'
- en: 'We want to select Player Settings from this window:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们想从窗口中选择玩家设置：
- en: '![](img/de9fed39-b21a-49bc-807a-cfd8f0b3b6c3.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/de9fed39-b21a-49bc-807a-cfd8f0b3b6c3.png)'
- en: 'The Player Settings window should open up where the inspector pane normally
    is. Locate XR Support Installers and click on Vuforia Augmented Reality:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应该会打开一个窗口，其中包含通常的检查器面板。找到XR支持安装程序并点击Vuforia增强现实：
- en: '![](img/b01ee587-9251-46b8-bad8-b35e4165391e.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b01ee587-9251-46b8-bad8-b35e4165391e.png)'
- en: 'This will open your browser and ask you to download a file. Click Save to download
    the file:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开您的浏览器并要求您下载一个文件。点击保存以下载文件：
- en: '![](img/6ca7cee8-b9a4-4b33-be7c-8be1cf7e1b4e.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6ca7cee8-b9a4-4b33-be7c-8be1cf7e1b4e.png)'
- en: Close the Unity Editor and install this file. This will add Vuforia support
    to your Unity installation without having to reinstall the entire editor.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭Unity编辑器并安装此文件。这将添加Vuforia支持到您的Unity安装中，而无需重新安装整个编辑器。
- en: Now that this has been completed, we can move on to creating this project in
    Windows.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在完成这些后，我们可以在Windows中创建此项目。
- en: Differences between macOS and Windows setups
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: macOS和Windows设置之间的差异
- en: There is very little difference in the basic setup between macOS and Windows
    prior to building for their respective platforms. I have set up the projects in
    the exact same manner so as to make the flow easier to follow. If you own both
    a macOS and a Windows computer, then when you go to the macOS portion, you can
    skip to the building section. If you only own Windows, then you can just follow
    the instructions there. Conversely, if you only own a macOS device, then you will
    have the full set of instructions there and you can skip the *Windows project
    setup* section.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在为各自平台构建之前，macOS和Windows的基本设置之间几乎没有区别。我已经以完全相同的方式设置了项目，以便更容易地遵循流程。如果您同时拥有macOS和Windows计算机，那么当您进入macOS部分时，可以跳到构建部分。如果您只有Windows，那么您只需遵循那里的说明。相反，如果您只有macOS设备，那么您将拥有完整的说明，并且可以跳过*Windows项目设置*部分。
- en: Windows project setup
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows项目设置
- en: 'If you remember, in [Chapter 1](25dd1c0c-e666-497b-a30e-c680e780d243.xhtml),
    *What AR is and How to Get Set up*, we created our Vuforia Developer Account.
    We will need it, as we will be using Vuforia to create this project. Navigate
    to the Vuforia Developer Portal and log into your account. Now follow these steps:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还记得，在[第1章](25dd1c0c-e666-497b-a30e-c680e780d243.xhtml)，*什么是增强现实以及如何设置*，我们创建了我们的Vuforia开发者账户。我们将需要它，因为我们将会使用Vuforia来创建这个项目。导航到Vuforia开发者门户并登录您的账户。现在按照以下步骤操作：
- en: 'In the Vuforia Developer Portal, click on Develop, and make sure the submenu
    has License Manager selected. We need to create a new Development License Key
    with the app name of `Chapter5` or `Picture Puzzle`:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Vuforia开发者门户中，点击开发，并确保子菜单已选择许可证管理器。我们需要创建一个新的开发许可证密钥，应用名称为`Chapter5`或`Picture
    Puzzle`：
- en: '![](img/c74c4481-28bc-4bf1-9793-d65ec230d1e5.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c74c4481-28bc-4bf1-9793-d65ec230d1e5.png)'
- en: 'After the new key has been created you should see the License Manager show
    the `VuforiaIntro` and the `Chapter5` keys we have created:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建新密钥后，您应该看到许可证管理器显示了我们所创建的`VuforiaIntro`和`Chapter5`密钥：
- en: '![](img/8b1f8190-22f0-48b1-bd80-b3ef1c6e354c.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8b1f8190-22f0-48b1-bd80-b3ef1c6e354c.png)'
- en: 'Click on `Chapter5` to gain access to your license key. You should copy and
    paste this into Notepad or Notepad++ for later use:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`Chapter5`以访问您的许可证密钥。您应该将其复制并粘贴到记事本或Notepad++中以备后用：
- en: '![](img/815ebbdd-4097-422b-a52a-669c1713c5bb.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/815ebbdd-4097-422b-a52a-669c1713c5bb.png)'
- en: 'Click on Target Manager, as we are going to create our own image target for
    this project:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击目标管理器，因为我们将要为这个项目创建自己的图像目标：
- en: '![](img/c4fc0ae4-05fe-4450-b5da-ec8802cc5444.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c4fc0ae4-05fe-4450-b5da-ec8802cc5444.png)'
- en: 'Click on Add Database to create the brand-new database that we will be utilizing
    in our project:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击添加数据库以创建我们将要在项目中使用的全新数据库：
- en: '![](img/67ba6f93-6a6e-4c0b-9c8d-7ab0a7dedb77.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/67ba6f93-6a6e-4c0b-9c8d-7ab0a7dedb77.png)'
- en: 'You can name the database whatever you want; in my case, I will call it `Words_Pictures`,
    with the Type being Device, and click Create:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以给数据库起任何名字；在我的情况下，我将称之为`Words_Pictures`，类型为设备，然后点击创建：
- en: '![](img/61463265-b0f0-44b1-8ba7-21d42cf2e96f.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/61463265-b0f0-44b1-8ba7-21d42cf2e96f.png)'
- en: 'It should take us back to the Target Manager page and showcase our new `Words_Pictures`
    database:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应该带我们回到目标管理器页面，并展示我们的新`Words_Pictures`数据库：
- en: '![](img/d0b7c3d4-7264-40c8-a9d9-07495a8ad41d.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d0b7c3d4-7264-40c8-a9d9-07495a8ad41d.png)'
- en: 'Click on `Words_Pictures` to gain access to the database, and then click on
    Add Target when you see it:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`Words_Pictures`以访问数据库，然后当您看到它时点击添加目标：
- en: '![](img/8e04376b-c1e3-44ea-80b6-ae913ea325eb.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8e04376b-c1e3-44ea-80b6-ae913ea325eb.png)'
- en: We will now be able to add a brand-new target to the database. In this case,
    we want a single image.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将能够向数据库添加一个新的目标。在这种情况下，我们想要一个单独的图像。
- en: I strongly advise you to create and use a JPG format, as a PNG format requires
    an 8-bit greyscale image or a 24-bit RGB.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我强烈建议您创建并使用JPG格式，因为PNG格式需要一个8位灰度图像或24位RGB。
- en: 'The width should be set to the same width as your image. The name should reflect
    what the image is:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 宽度应设置为与您的图像相同的宽度。名称应反映图像的内容：
- en: '![](img/b843fb05-8cff-4db9-baf9-fdcd4df203a2.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b843fb05-8cff-4db9-baf9-fdcd4df203a2.png)'
- en: 'Open up Microsoft Paint, and we can begin to create the file that we will use
    for the target:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Microsoft Paint，我们可以开始创建我们将用于目标的文件：
- en: '![](img/fce1968c-2568-47b0-83c9-f46558772c75.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fce1968c-2568-47b0-83c9-f46558772c75.png)'
- en: 'The next step is to find the exact size we want to use for this image, and
    I find the best way to do that is to know what the image is we are going to use.
    In our case, it will be a 72 in font size,  have a font name of Bastion, and display
    the word `TREE`:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是找到我们想要用于这张图片的确切大小，我认为最好的方法是知道我们将会使用什么图片。在我们的例子中，它将是72磅的字体大小，字体名为Bastion，并显示单词`TREE`：
- en: '![](img/6c5cb071-b0e4-4139-a1c6-5823d400becb.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6c5cb071-b0e4-4139-a1c6-5823d400becb.png)'
- en: 'Resize the proportions to be close around the edges of the word:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调整比例，使其接近单词的边缘：
- en: '![](img/689332e2-d1d4-4acc-a20c-9f02a82fa676.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/689332e2-d1d4-4acc-a20c-9f02a82fa676.png)'
- en: 'Save the file as a JPG and call it `Tree`:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为JPG格式，命名为`Tree`：
- en: '![](img/08ecc3ad-3071-42c0-a36d-c1adbdc2f596.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/08ecc3ad-3071-42c0-a36d-c1adbdc2f596.png)'
- en: If you look at the bottom of the Paint menu, it will tell you the dimensions
    of the file we just created. In this case it is `253`x`106`, which is the size
    we want.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你查看画图工具菜单的底部，它会告诉你我们刚刚创建的文件的尺寸。在这种情况下是`253`x`106`，这是我们想要的大小。
- en: 'Navigate back to the Add Target web page and choose the `Tree` file we just
    created:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航回添加目标网页，并选择我们刚刚创建的`Tree`文件：
- en: '![](img/1d5e99ec-d1f0-4935-9eb0-90ef583eb2fd.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1d5e99ec-d1f0-4935-9eb0-90ef583eb2fd.png)'
- en: 'Set the width to be `253` and the name to `Tree`, and then click Add:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将宽度设置为`253`，名称设置为`Tree`，然后点击添加：
- en: '![](img/1d5e99ec-d1f0-4935-9eb0-90ef583eb2fd.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1d5e99ec-d1f0-4935-9eb0-90ef583eb2fd.png)'
- en: 'It will take you back to the database, and you should see the `TreeWord` with
    `Tree` as the name. The type should be Single Image, and there should be a three-star
    rating:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带你回到数据库，你应该看到名为`TreeWord`的条目，名称为`Tree`。类型应该是单张图片，并且应该有一个三星评级：
- en: '![](img/0490fd03-a50f-4075-98c3-8d4285073169.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0490fd03-a50f-4075-98c3-8d4285073169.png)'
- en: The rating system is designed to tell you whether it is of the proper size to
    be read correctly by your AR device. We currently have a three-star rating, which
    means that it should be good, but it could be much better. What can we do to fix
    this? We can enlarge the image.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 评级系统旨在告诉你它是否是正确的尺寸，以便你的AR设备能够正确读取。我们目前有一个三星评级，这意味着它应该很好，但可以更好。我们能做什么来修复这个问题？我们可以放大图片。
- en: 'Let’s delete the image from the database. To do this, click on the little checkbox
    next to `Tree`, and above it will appear a very small Delete button:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们删除数据库中的图片。为此，点击`Tree`旁边的复选框，上面将出现一个非常小的删除按钮：
- en: '![](img/2c562614-37d6-49e9-9634-af6ed636c38f.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2c562614-37d6-49e9-9634-af6ed636c38f.png)'
- en: 'Let’s go back to Paint and resize the image. `680` by `480` should be perfect,
    although `500`x`300` will work as well:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们回到画图工具并调整图片大小。`680`x`480`应该很完美，尽管`500`x`300`也可以：
- en: '![](img/78cc4d08-2bf3-4af9-ac62-dd0af6d2a1d6.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/78cc4d08-2bf3-4af9-ac62-dd0af6d2a1d6.png)'
- en: 'Upload the new target, and the results should have a five-star rating:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上传新的目标，结果应该有五星评级：
- en: '![](img/55d0bb90-b1fa-4efd-aac4-4fb471cf715a.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/55d0bb90-b1fa-4efd-aac4-4fb471cf715a.png)'
- en: 'Click on Download Database (All):'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击下载数据库（全部）：
- en: '![](img/c993ddd6-88f4-4a39-b363-f78d8a391795.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c993ddd6-88f4-4a39-b363-f78d8a391795.png)'
- en: 'This will open a new window that will ask us which development platform we
    want to utilize this with. We want Unity Editor. Click Download:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开一个新窗口，询问我们想要使用哪个开发平台。我们想要Unity编辑器。点击下载：
- en: '![](img/71373071-bc66-4a4f-a61b-c3eff0e6ebf1.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/71373071-bc66-4a4f-a61b-c3eff0e6ebf1.png)'
- en: It will download a Unity file that we will need to import into our Unity Project—which,
    now, we can begin to work with in Unity, without having to leave the editor to
    do any other work. Open Unity, and let’s begin building our project.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 它将下载一个Unity文件，我们需要将其导入到我们的Unity项目中——现在，我们可以在Unity中开始工作，而无需离开编辑器去做其他工作。打开Unity，让我们开始构建我们的项目。
- en: Building the Windows project
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建Windows项目
- en: 'Create a new Unity Project, if you haven’t already, and call it `Chapter5`
    to begin with. Then load the project.Now follow these steps:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的Unity项目，如果你还没有的话，一开始就命名为`Chapter5`。然后加载项目。现在按照以下步骤操作：
- en: 'The `Words_Pictures` file that we downloaded now needs to be located and imported
    into the project:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们下载的`Words_Pictures`文件现在需要被定位并导入到项目中：
- en: '![](img/5a77e1d9-5dbd-4cc1-8d4b-b0592aa0c3b4.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5a77e1d9-5dbd-4cc1-8d4b-b0592aa0c3b4.png)'
- en: Before we dive in and create the project, let’s have a look at the folders that
    were created upon import.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们深入创建项目之前，让我们看看导入时创建的文件夹。
- en: 'Our main `Assets` folder will now have an `Editor` folder, a `StreamingAssets` folder
    and a `Scenes` folder:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的主要`Assets`文件夹现在将有一个`Editor`文件夹、一个`StreamingAssets`文件夹和一个`Scenes`文件夹：
- en: '![](img/3b031415-43c9-49c7-a931-47284def4280.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3b031415-43c9-49c7-a931-47284def4280.png)'
- en: 'Inside the `Editor` folder, it will have another folder called `Vuforia`:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Editor`文件夹内，将有一个名为`Vuforia`的文件夹：
- en: '![](img/f4820476-6775-4b9a-af72-21385e2130db.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f4820476-6775-4b9a-af72-21385e2130db.png)'
- en: 'Inside the `Vuforia` folder will be another folder called `ImageTargetTextures`:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Vuforia`文件夹内将有一个名为`ImageTargetTextures`的文件夹：
- en: '![](img/dbfa803e-f638-480f-955b-5dbc2f523e02.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dbfa803e-f638-480f-955b-5dbc2f523e02.png)'
- en: 'Inside the `ImageTargetTextures` folder, there will be a folder called `Word_Pictures`:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`ImageTargetTextures`文件夹内，将有一个名为`Word_Pictures`的文件夹：
- en: '![](img/c8e9aa66-20fc-47a2-905a-9fd873e19dbb.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c8e9aa66-20fc-47a2-905a-9fd873e19dbb.png)'
- en: 'The `Word_Pictures` folder will contain our tree image sprite:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Word_Pictures`文件夹将包含我们的树图像精灵：'
- en: '![](img/948eae16-3df0-4409-9e08-cf9362087adb.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/948eae16-3df0-4409-9e08-cf9362087adb.png)'
- en: 'Go back to the main `Assets` folder, and let’s take a look, starting with `StreamingAssets`:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回主`Assets`文件夹，让我们看一下，从`StreamingAssets`开始：
- en: '![](img/cdbdc6d4-7a32-4a79-a8dd-547e6d502f6b.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/cdbdc6d4-7a32-4a79-a8dd-547e6d502f6b.png)'
- en: 'Inside the `StreamingAssets` folder will be a `Vuforia` folder:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`StreamingAssets`文件夹内将有一个`Vuforia`文件夹：
- en: '![](img/7b3d7488-0b1d-42dc-a315-9f8bfc3b2305.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7b3d7488-0b1d-42dc-a315-9f8bfc3b2305.png)'
- en: 'Inside the `Vuforia` folder will be two files: `Words_Pictures.xml` and `Words_Pictures.dat`
    file:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Vuforia`文件夹内将有两个文件：`Words_Pictures.xml`和`Words_Pictures.dat`文件：
- en: '![](img/6be7b771-8680-4aa4-90d0-da609216b419.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6be7b771-8680-4aa4-90d0-da609216b419.png)'
- en: 'Let’s take a look at the XML file in depth to see what exactly is in it. Take
    a look at this code:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们深入查看XML文件，看看里面具体有什么。看看这段代码：
- en: '[PRE0]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The XML file has the default schema for it set up, with the main tag being `QCarconfig`.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: XML文件已经设置了默认的架构，主标签是`QCarconfig`。
- en: The next tag, which houses our image, is `ImageTarget`. It has the name, which
    we set to `Tree` and the size written in floating-point values.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个标签，包含我们的图像，是`ImageTarget`。它有名称，我们设置为`Tree`，以及用浮点值表示的大小。
- en: 'The XML file is very short and to the point. This file is specifically for
    housing the data that Vuforia needs to know, the size of the images we are using,
    and to be able to reference the proper file if we were to have multiple images.
    Continue to follow the steps:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: XML文件非常简短且直接。这个文件专门用于存放Vuforia需要知道的数据，我们使用图像的大小，以及如果有多张图像时能够引用正确的文件。继续按照步骤操作：
- en: 'Go to the TurboSquid website and download the free `Tree` model that we will
    be using:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往TurboSquid网站下载我们将使用的免费`Tree`模型：
- en: '![](img/983301e8-c4eb-4cf7-b74c-aaee822b30c1.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/983301e8-c4eb-4cf7-b74c-aaee822b30c1.png)'
- en: 'You will need the `Tree_FBX` and the `Tree_textures` files for this next portion:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要`Tree_FBX`和`Tree_textures`文件来完成下一部分：
- en: '![](img/bfc2aa59-317d-4179-8d26-2c32a5561d90.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/bfc2aa59-317d-4179-8d26-2c32a5561d90.png)'
- en: 'Navigate back to the main `Assets` folder and create a new folder called `Models`:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回主`Assets`文件夹，创建一个名为`Models`的新文件夹：
- en: '![](img/33deaca5-b967-482a-9a55-9ba7a07ba239.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/33deaca5-b967-482a-9a55-9ba7a07ba239.png)'
- en: 'Extract both the tree model and the textures. Copy and paste the model and
    textures into the `Models` folder inside Unity:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提取树模型和纹理。将模型和纹理复制粘贴到Unity内部的`Models`文件夹中：
- en: '![](img/9efec29f-32b6-4a7d-8da1-93ecfde74565.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9efec29f-32b6-4a7d-8da1-93ecfde74565.png)'
- en: Delete the standard camera from the hierarchy pane.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从层次面板中删除标准相机。
- en: 'Right-click in the hierarchy pane and navigate to Vuforia; click to add an
    AR Camera:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击层次面板，导航到Vuforia；点击添加AR相机：
- en: '![](img/60a9508d-bd98-47c7-a8f4-a29e2cc8db5b.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/60a9508d-bd98-47c7-a8f4-a29e2cc8db5b.png)'
- en: 'Click on the `AR Camera` in the hierarchy pane. Look over to the Inspector
    pane and click on Open Vuforia Configuration:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在层次面板中点击`AR Camera`。转到检查器面板，点击打开Vuforia配置：
- en: '![](img/5cc8ab46-04fc-40a8-8e62-77c8258c6e19.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5cc8ab46-04fc-40a8-8e62-77c8258c6e19.png)'
- en: 'Unity should ask for you to import and download more items for Vuforia and
    accept the Vuforia license:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Unity会要求你导入和下载更多Vuforia项目，并接受Vuforia许可：
- en: '![](img/a45a9911-35aa-4042-875e-a07615db248c.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a45a9911-35aa-4042-875e-a07615db248c.png)'
- en: 'Copy and paste your app license key into the App License Key section:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的应用许可密钥复制粘贴到应用许可密钥部分：
- en: '![](img/bbf29b64-9b9e-49fe-b0d2-2f742ddd3176.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/bbf29b64-9b9e-49fe-b0d2-2f742ddd3176.png)'
- en: Right-click on the hierarchy pane and create an empty game object called `ImageTarget`.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击层次面板，创建一个名为`ImageTarget`的空游戏对象。
- en: 'Right-click on the `ImageTarget` object and highlight Vuforia and click on
    Image:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击`ImageTarget`对象，高亮显示Vuforia并点击图像：
- en: '![](img/83bf9bb7-de32-46e2-9030-28c8e303a750.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/83bf9bb7-de32-46e2-9030-28c8e303a750.png)'
- en: 'Click on the Image object and look at the Inspector pane. Image Target Behavior
    should have the type be Predefined; the Database should be Words_Pictures, and
    the Image Target should be Tree:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击图像对象，查看检查器面板。图像目标行为应设置为预定义类型；数据库应为Words_Pictures，图像目标应为Tree：
- en: '![](img/520ad372-4451-465d-a950-26fcb33ab741.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/520ad372-4451-465d-a950-26fcb33ab741.png)'
- en: Now we need to add our model. I am assuming you know how to set up materials
    for the model, so I will not go over it here.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要添加我们的模型。我假设您知道如何为模型设置材质，所以这里不会详细说明。
- en: 'Drag and drop the model on to the scene. Set the *x*, *y*, and *z* positions
    to be `0`,`0`,`0`, with the scale being `0.09` for the *x*, *y*, and *z* coordinates.
    The last thing to do is make it a child of the image inside the ImageTarget object:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模型拖放到场景中。将*x*、*y*、*z*位置设置为`0`,`0`,`0`，比例设置为*x*、*y*、*z*坐标的`0.09`。最后一步是将它设置为ImageTarget对象内图像的子对象：
- en: '![](img/778f75ac-f3ae-4d6b-9ca0-a72c87096bb8.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/778f75ac-f3ae-4d6b-9ca0-a72c87096bb8.png)'
- en: Print out the `Tree` text and cut the paper into four strips.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印出`Tree`文本，并将纸张剪成四条条带。
- en: 'Build the project for a PC, Mac & Linux Standalone or Android by clicking on
    File | Build Settings, and click on Build:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击“文件”|“构建设置”，为PC、Mac和Linux Standalone或Android构建项目，然后点击“构建”：
- en: '![](img/e2bdeef2-3c1e-465c-81ce-4920996b3223.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e2bdeef2-3c1e-465c-81ce-4920996b3223.png)'
- en: Now with your Android device or PC camera being utilized, put the strips together
    in the proper order, and the `Tree` model will appear over the top of the paper.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用您的Android设备或PC摄像头，将条带按正确顺序拼接在一起，Tree模型将出现在纸张上方。
- en: macOS project setup
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: macOS项目设置
- en: 'The steps for setting up the project in Mac are nearly identical, with the
    difference mainly being the software we will use to create the text file, but,
    nonetheless, this should be gone over, as I expect Mac users will not want to
    read the Windows section of this chapter. We will need it, as we will be using
    Vuforia to create this project. Navigate to the Vuforia Developer Portal and log
    into your account. Now follow these steps:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在Mac上设置项目的步骤几乎相同，主要区别在于我们将使用什么软件来创建文本文件，但无论如何，这里应该简要说明，因为预计Mac用户不会想阅读本章的Windows部分。我们将使用Vuforia来创建此项目。导航到Vuforia开发者门户并登录您的账户。现在按照以下步骤操作：
- en: 'In the Vuforia Developer Portal, click on Develop, and make sure the submenu
    has License Manager selected. We need to create a new Development License Key
    with the app name of `Chapter5`:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Vuforia开发者门户中，点击“开发”，并确保子菜单已选择许可证管理器。我们需要为名为`Chapter5`的应用程序创建一个新的开发许可证密钥：
- en: '![](img/235bf106-3383-45c9-a33e-f539e7f32fd1.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/235bf106-3383-45c9-a33e-f539e7f32fd1.png)'
- en: 'After the new key has been created, you should see the License Manager show
    the `VuforiaIntro` and the `Chapter5` keys we have created:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建新密钥后，您应该会看到许可证管理器显示了创建的`VuforiaIntro`和`Chapter5`密钥：
- en: '![](img/f87c2016-4e45-4131-a412-df718aba3174.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f87c2016-4e45-4131-a412-df718aba3174.png)'
- en: 'Click on `Chapter5` to gain access to your license key. You should copy and
    paste this into Notepad or Notepad++ for later use:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“Chapter5”以获取您的许可证密钥。您应该将其复制并粘贴到记事本或Notepad++中以备后用：
- en: '![](img/002e56b9-d1d0-4e51-9f47-960b5d36248d.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/002e56b9-d1d0-4e51-9f47-960b5d36248d.png)'
- en: 'Click on Target Manager, as we are going to create our own image target for
    this project:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击目标管理器，因为我们将为这个项目创建自己的图像目标：
- en: '![](img/edf79e22-64df-486d-a61a-77dbf637921f.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/edf79e22-64df-486d-a61a-77dbf637921f.png)'
- en: 'Click on Add Database to create the brand-new database that we will be utilizing
    in our project:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“添加数据库”以创建我们将要在项目中使用的全新数据库：
- en: '![](img/9f97ea57-5eb6-4e6a-8b10-460168c5acd3.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9f97ea57-5eb6-4e6a-8b10-460168c5acd3.png)'
- en: 'You can name the database whatever you want; in my case, I will call it `Words_Pictures`,
    with the Type being Device, and click Create:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以命名数据库为任何您想要的名称；在我的情况下，我将称之为`Words_Pictures`，类型为设备，然后点击创建：
- en: '![](img/37d1beff-c9a0-49ba-8cb5-e42186a4c60f.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/37d1beff-c9a0-49ba-8cb5-e42186a4c60f.png)'
- en: 'It should take us back to the Target Manager page and showcase our new `Words_Pictures`
    database:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这应该会带我们回到目标管理器页面，并展示我们的新Words_Pictures数据库：
- en: '![](img/06f98cd7-9b23-420e-ac19-0dcf95aceac6.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/06f98cd7-9b23-420e-ac19-0dcf95aceac6.png)'
- en: 'Click on `Words_Pictures` to gain access to the database, and then click on
    Add Target when you see it:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“Words_Pictures”以访问数据库，然后当您看到它时点击“添加目标”：
- en: '![](img/982b606f-cf1f-45c9-bce9-0902a82c78b0.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/982b606f-cf1f-45c9-bce9-0902a82c78b0.png)'
- en: We will now be able to add a brand-new target to the database. In this case,
    we want a single image.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们能够向数据库添加一个新的目标。在这种情况下，我们想要一个单独的图像。
- en: I strongly advise you to create and use a JPG format, as a PNG format requires
    an 8-bit greyscale image or a 24-bit RGB.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我强烈建议您创建并使用JPG格式，因为PNG格式需要一个8位灰度图像或24位RGB图像。
- en: 'The width should be set to the same width as your image. The name should reflect
    what the image is:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 宽度应设置为与您的图片相同的宽度。名称应反映图片的内容：
- en: '![](img/5078ac27-1d7f-4036-b052-cd867fc4c16f.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5078ac27-1d7f-4036-b052-cd867fc4c16f.png)'
- en: 'Open Microsoft Paint, and we can begin to create the file that we will use
    for the target:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Microsoft Paint，我们可以开始创建用于目标的文件：
- en: '![](img/17417755-b3cc-4573-98a6-a8a72a36b625.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/17417755-b3cc-4573-98a6-a8a72a36b625.png)'
- en: 'The next step is to find the exact size we want to use for this image, and
    I find the best way to do that is to know what the image is we are going to use.
    In our case, it will be 72 in font size, have the font name of Bastion, and display
    the word `Tree`:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是找到我们想要用于此图片的确切尺寸，我认为最好的方法是知道我们将要使用的图片。在我们的案例中，它将是72磅的字体大小，字体名为Bastion，并显示单词`Tree`：
- en: '![](img/2f2e4012-f3dd-447b-aaff-11cd45f6d3ef.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2f2e4012-f3dd-447b-aaff-11cd45f6d3ef.png)'
- en: 'Resize the proportions to be close around the edges of the word:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将比例调整得接近单词边缘：
- en: '![](img/2a8ac2df-d3a7-4e80-9e86-b93d29cae620.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2a8ac2df-d3a7-4e80-9e86-b93d29cae620.png)'
- en: 'Save the file as a JPG and call it `Tree`:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为JPG格式，并命名为`Tree`：
- en: '![](img/88f031d3-ca21-4352-b838-00481bbeb993.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/88f031d3-ca21-4352-b838-00481bbeb993.png)'
- en: If you look at the bottom of the Paint menu, it will tell you the dimensions
    of the file we just created. In this case it is `253`x`106`.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您查看Paint菜单的底部，它会告诉您我们刚刚创建的文件尺寸。在这种情况下是`253`x`106`。
- en: 'Navigate back to the Add Target web page and choose the `Tree` file we just
    created:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到添加目标网页，并选择我们刚刚创建的`Tree`文件：
- en: '![](img/863d7564-14f1-4ca9-bc5a-a48b09af9fc3.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/863d7564-14f1-4ca9-bc5a-a48b09af9fc3.png)'
- en: 'Set the width to be `253` and the name to be Tree, and then click on Add:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置宽度为`253`，名称为Tree，然后点击添加：
- en: '![](img/863d7564-14f1-4ca9-bc5a-a48b09af9fc3.png)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/863d7564-14f1-4ca9-bc5a-a48b09af9fc3.png)'
- en: 'It will take you back to the database, and you should see the word `Tree`*,* with
    the Name as `Tree`, Type as Single Image, and there should be a three-star rating:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带您回到数据库，您应该看到单词`Tree`，名称为`Tree`，类型为单张图片，并且应该有一个三星级评分：
- en: '![](img/afa42e6b-e4f5-4a7a-9684-d7baf3f07f83.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/afa42e6b-e4f5-4a7a-9684-d7baf3f07f83.png)'
- en: 'The rating system is designed to tell you whether it is of the proper size
    to be read correctly by your AR device. We currently have a three-star rating,
    which means that it should be good, but it could be much better. What can we do
    to fix this? We can enlarge the image. Let''s continue following the steps:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 评分系统旨在告诉您它是否具有正确的尺寸，以便您的AR设备正确读取。我们目前有一个三星级评分，这意味着它应该很好，但可以更好。我们能做什么来修复它？我们可以放大图片。让我们继续按照步骤操作：
- en: 'Let’s delete the image from the database. To do this, click on the little checkbox
    next to `Tree`, and above it will appear a very small Delete button:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从数据库中删除这张图片。为此，点击`Tree`旁边的复选框，然后在其上方会出现一个非常小的删除按钮：
- en: '![](img/c3c66c4e-b994-4987-ad15-324e9c30589e.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c3c66c4e-b994-4987-ad15-324e9c30589e.png)'
- en: 'Let’s go back to Paint and resize the image. `680` by `480` should be perfect:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们回到Paint并调整图片大小。`680`x`480`应该很完美：
- en: '![](img/0f5ee378-2d1c-447c-85a6-86a680a5ad37.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0f5ee378-2d1c-447c-85a6-86a680a5ad37.png)'
- en: 'Upload the new target, and the results should have a five-star rating:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上传新的目标，结果应该有一个五星级评分：
- en: '![](img/86f71c1c-077e-4ec0-828e-0dbaff79ff37.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/86f71c1c-077e-4ec0-828e-0dbaff79ff37.png)'
- en: 'Click on Download Database (All):'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击下载数据库（全部）：
- en: '![](img/44b7ce8c-aeb0-4627-af34-2f2f5df66648.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/44b7ce8c-aeb0-4627-af34-2f2f5df66648.png)'
- en: 'This will open a new window that will ask which development platform we want
    to utilize this with. We want Unity Editor. Click Download:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开一个新窗口，询问我们想要使用哪个开发平台。我们想要Unity编辑器。点击下载：
- en: '![](img/7b77e799-7098-4cfd-aa05-54d3bb315f51.png)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7b77e799-7098-4cfd-aa05-54d3bb315f51.png)'
- en: It will download a Unity file that we will need to import into our Unity Project—which,
    now, we can begin to work in Unity, without having to leave the editor to do any
    other work. Open Unity, and let’s begin building our project.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 它将下载一个Unity文件，我们需要将其导入到我们的Unity项目中——现在，我们可以在Unity中开始工作，而无需离开编辑器去做其他工作。打开Unity，让我们开始构建我们的项目。
- en: Building the macOS Project
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建macOS项目
- en: 'Create a new Unity Project, if you haven’t already, and call it `Chapter5`
    to begin with. Then, load the project. Now follow these steps:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有创建，请创建一个新的Unity项目，并首先将其命名为`Chapter5`。然后，加载项目。现在按照以下步骤操作：
- en: The `Words_Pictures` file that we downloaded now needs to be located and imported
    into the project.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们下载的 `Words_Pictures` 文件现在需要定位并导入到项目中。
- en: 'Before we dive in and create the project, let’s have a look at the folders
    that were created upon import. Our main `Assets` folder will now have an `Editor`
    folder, a `StreamingAssets` Folder, and a `Scenes` folder:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们深入创建项目之前，让我们看看导入时创建的文件夹。我们的主要 `Assets` 文件夹现在将有一个 `Editor` 文件夹，一个 `StreamingAssets`
    文件夹，和一个 `Scenes` 文件夹：
- en: '![](img/14a9fad5-ec6e-439b-b67e-03ff8b6b7254.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/14a9fad5-ec6e-439b-b67e-03ff8b6b7254.png)'
- en: 'Inside the `Editor` folder, it will have another folder called `Vuforia`:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Editor` 文件夹内，将有一个名为 `Vuforia` 的文件夹：
- en: '![](img/98f6ad30-657b-4e4d-ac04-a514ac8c2ed5.png)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/98f6ad30-657b-4e4d-ac04-a514ac8c2ed5.png)'
- en: 'Inside the `Vuforia` folder will be another folder called `ImageTargetTextures`:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Vuforia` 文件夹内将有一个名为 `ImageTargetTextures` 的文件夹：
- en: '![](img/36c9a025-5d0b-4e88-834d-dc5f4d261845.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/36c9a025-5d0b-4e88-834d-dc5f4d261845.png)'
- en: 'Inside the `ImageTargetTextures` folder, there will be a folder called `Word_Pictures`:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `ImageTargetTextures` 文件夹内，将有一个名为 `Word_Pictures` 的文件夹：
- en: '![](img/01663648-a53c-4aef-8b4d-91359cc5fc1d.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/01663648-a53c-4aef-8b4d-91359cc5fc1d.png)'
- en: 'Inside the `Word_Pictures` folder, we will have our tree image sprite:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Word_Pictures` 文件夹内，我们将有我们的树图像精灵：
- en: '![](img/799822db-4d21-40c8-a127-0f53831fd17c.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/799822db-4d21-40c8-a127-0f53831fd17c.png)'
- en: 'Go back to the main `Assets` folder and let’s take a look, starting with `StreamingAssets`:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回主 `Assets` 文件夹，让我们看看，从 `StreamingAssets` 开始：
- en: '![](img/7ae43cc6-2af5-47e3-a66a-f554864e99e9.png)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7ae43cc6-2af5-47e3-a66a-f554864e99e9.png)'
- en: 'Inside the `StreamingAssets` folder will be a `Vuforia` folder:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `StreamingAssets` 文件夹内将有一个 `Vuforia` 文件夹：
- en: '![](img/3aa4f151-ae0d-40a4-a62f-32af2f44be7a.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3aa4f151-ae0d-40a4-a62f-32af2f44be7a.png)'
- en: 'Inside the `Vuforia` folder will be two files: `Words_Pictures.xml` and `Words_Pictures.dat`:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Vuforia` 文件夹内将有两个文件：`Words_Pictures.xml` 和 `Words_Pictures.dat`：
- en: '![](img/5cc6ca96-1007-4946-8ee5-fdf21759a592.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5cc6ca96-1007-4946-8ee5-fdf21759a592.png)'
- en: 'Let’s take a look at the XML file in depth to see what exactly is in it:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们深入查看 XML 文件，看看里面具体有什么内容：
- en: '[PRE1]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The XML file has the default schema for it set up, with the main tag being `QCarconfig`.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: XML 文件已经设置了默认的架构，主标签是 `QCarconfig`。
- en: The next tag, which houses our image, is `ImageTarget`. It has the name, which
    we set to `Tree`, and the size written in floating-point values.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个标签，包含我们的图像，是 `ImageTarget`。它有名称，我们设置为 `Tree`，以及用浮点值表示的大小。
- en: 'The XML file is very short and to the point. This file is specifically for
    housing the data that Vuforia needs to know, the size of the images we are using,
    and to be able to reference the proper file if we were to have multiple images.
    Let''s continue with the steps:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: XML 文件非常简短且直接。此文件专门用于存放 Vuforia 需要知道的数据，我们使用的图像大小，以及如果我们要使用多个图像时能够引用正确的文件。让我们继续下一步：
- en: 'Go to the TurboSquid website and download the free `Tree` model that we will
    be using:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 TurboSquid 网站，下载我们将使用的免费 `Tree` 模型：
- en: '![](img/6166745b-3ba2-4286-97a6-c5ba5ee73eae.png)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6166745b-3ba2-4286-97a6-c5ba5ee73eae.png)'
- en: 'You will need the `Tree_FBX` and the `Tree_textures` files for this next section:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将需要 `Tree_FBX` 和 `Tree_textures` 文件来完成下一部分：
- en: '![](img/263c0be5-77cd-4259-ab41-048f095fba1d.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/263c0be5-77cd-4259-ab41-048f095fba1d.png)'
- en: 'Navigate back to the main `Assets` folder and create a new folder called `Models`:'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回主 `Assets` 文件夹，创建一个名为 `Models` 的新文件夹：
- en: '![](img/344d75c6-c0a6-4ac5-85f7-97d525d2c460.png)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/344d75c6-c0a6-4ac5-85f7-97d525d2c460.png)'
- en: 'Extract both the tree model and the textures. Copy and paste the model and
    textures into the `Models` folder inside of Unity:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提取树模型和纹理。将模型和纹理复制粘贴到 Unity 中的 `Models` 文件夹内：
- en: '![](img/c4bc6e6d-a84c-498f-b5cf-90fb71efe1a4.png)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c4bc6e6d-a84c-498f-b5cf-90fb71efe1a4.png)'
- en: Delete the standard camera from the hierarchy pane.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从层次结构面板中删除标准相机。
- en: 'Right-click in the hierarchy pane and navigate to Vuforia; click to add an
    AR Camera:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在层次结构面板中右键点击，导航到 Vuforia；点击添加 AR Camera：
- en: '![](img/580e8155-af48-492b-9978-0aa6796d7a26.png)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/580e8155-af48-492b-9978-0aa6796d7a26.png)'
- en: 'Click on the `AR Camera` in the hierarchy pane. Look over to the Inspector
    pane and click on Open Vuforia Configuration:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在层次结构面板中点击 `AR Camera`。切换到检查器面板，并点击打开 Vuforia 配置：
- en: '![](img/66428e17-697c-4658-bb79-d54d35dd4206.png)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/66428e17-697c-4658-bb79-d54d35dd4206.png)'
- en: 'Unity should ask for you to import and download more items for Vuforia and
    accept the Vuforia license:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Unity 应该会要求你导入和下载更多 Vuforia 项目，并接受 Vuforia 许可协议：
- en: '![](img/369a9404-00ce-4102-b063-8c1cf65b5a04.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/369a9404-00ce-4102-b063-8c1cf65b5a04.png)'
- en: 'Copy and paste your app license key into the App License Key section:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的应用程序许可证密钥复制并粘贴到应用程序许可证密钥部分：
- en: '![](img/7be65a34-3925-4c80-a000-74f20083da5f.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7be65a34-3925-4c80-a000-74f20083da5f.png)'
- en: Right-click on the hierarchy pane and create an empty game object called `ImageTarget`.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在层次结构面板上右键单击，创建一个名为 `ImageTarget` 的空游戏对象。
- en: 'Right-click on the `ImageTarget` object and highlight Vuforia, and click on
    Image:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `ImageTarget` 对象上右键单击，高亮显示 Vuforia，然后点击 Image：
- en: '![](img/e6e24f45-47fd-4d1e-85a2-29c4c96a10fa.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e6e24f45-47fd-4d1e-85a2-29c4c96a10fa.png)'
- en: 'Click on the `Image` object and look at the Inspector pane. Image Target Behavior
    should have the Type as Predefined. Database should be Words_Pictures and Image
    Target should be Tree:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `Image` 对象，查看检查器面板。Image Target Behavior 的类型应该是 Predefined。数据库应该是 Words_Pictures，Image
    Target 应该是 Tree：
- en: '![](img/1f2b6110-134b-459a-8820-a2336c9652ea.png)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1f2b6110-134b-459a-8820-a2336c9652ea.png)'
- en: 'Now we need to add our model. I am assuming you know how to set up materials
    for the model, so I will not go over it here. Let''s continue with the steps:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要添加我们的模型。我假设你知道如何为模型设置材质，所以这里不会详细说明。让我们继续下一步：
- en: 'Drag and drop the model on to the scene. Set the *x*, *y*, and *z* positions
    to be `0`,`0`,`0`, with the scale being `0.09` for the *x*, *y*, and *z* coordinates.
    The last thing to do is make it a child of the image inside the ImageTarget object:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模型拖放到场景中。将 *x*、*y* 和 *z* 位置设置为 `0`,`0`,`0`，并将比例设置为 *x*、*y* 和 *z* 坐标的 `0.09`。最后一步是将它设置为
    ImageTarget 对象内图像的子对象：
- en: '![](img/18621823-5654-43e7-b537-addba37110f8.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![](img/18621823-5654-43e7-b537-addba37110f8.png)'
- en: Print out the `Tree` text and cut the paper into four strips.
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印出 `Tree` 文本，并将纸张剪成四条带。
- en: 'Build the project for iOS by clicking on File | Build Settings. Make sure to
    select the Development Build check mark:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击 File | Build Settings 来为 iOS 构建项目。确保选中 Development Build 复选框：
- en: '![](img/61770937-9ead-471a-8750-72fb5a35a030.png)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![](img/61770937-9ead-471a-8750-72fb5a35a030.png)'
- en: Working with Xcode
  id: totrans-256
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Xcode
- en: 'We can navigate to the `Build` folder of our application here, and click on
    it to open our XCode project. Follow these steps:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以导航到应用程序的 `Build` 文件夹，并点击它以打开我们的 XCode 项目。按照以下步骤操作：
- en: 'On the left-hand side of the screen, you should see `Unity-iPhone` as one of
    the items you can select. Click on it and you should see Unity-iPhone in the center
    and Identity and Type on the right:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在屏幕的左侧，你应该看到 `Unity-iPhone` 是你可以选择的项目之一。点击它，你应该在中心看到 Unity-iPhone，在右侧看到 Identity
    和 Type：
- en: '![](img/7d8a3149-50b2-4a36-9ee8-5e4b72e994b3.png)'
  id: totrans-259
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7d8a3149-50b2-4a36-9ee8-5e4b72e994b3.png)'
- en: 'Check to make sure the Identity is correct. The Display Name for me is `Chapter5`,
    with the Bundle Identifier as `com.rpstudios.Packtbook`:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认 Identity 是否正确。我的显示名称是 `Chapter5`，包标识符为 `com.rpstudios.Packtbook`：
- en: '![](img/13f0a40d-107f-4a06-aded-a26fc8dbbc81.png)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
  zh: '![](img/13f0a40d-107f-4a06-aded-a26fc8dbbc81.png)'
- en: 'Now, on Signing, you need to look and make sure that the Automatically manage
    signing checkbox is checked and that Team has your email address attached to it:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在签名设置中，你需要确保自动管理签名的复选框被勾选，并且 Team 中附有你的电子邮件地址：
- en: '![](img/fa853d05-8fe4-4767-8676-b0a3134e9cf6.png)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fa853d05-8fe4-4767-8676-b0a3134e9cf6.png)'
- en: 'Scroll down and look for Linked Frameworks and Libraries. AVFoundation should
    be set from Optional to Required. I’ve noticed that when it is set to Optional,
    the linker fails to work properly:'
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动并查找 Linked Frameworks and Libraries。AVFoundation 应该从 Optional 设置为 Required。我注意到，当它设置为
    Optional 时，链接器无法正常工作：
- en: '![](img/fe4e8e82-cc4f-4581-8fda-5cf039c3c78a.png)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fe4e8e82-cc4f-4581-8fda-5cf039c3c78a.png)'
- en: 'Locate Architectures, because we need to change from the default to Standard.
    This is due to there being different architectures and iOS doesn’t utilize ARM
    anymore:'
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位到 Architectures，因为我们需要从默认的设置更改为 Standard。这是由于存在不同的架构，iOS 不再使用 ARM：
- en: '![](img/c735919c-3270-4d42-a88b-a4643fdb174c.png)'
  id: totrans-267
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c735919c-3270-4d42-a88b-a4643fdb174c.png)'
- en: Now you can click on Build and attach your iPhone 6 or above to your macOS computer.
    Build and then run it on the device. It will ask you to trust the app on your
    phone, so follow the instructions to give trust.
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你可以点击 Build，并将你的 iPhone 6 或更高版本连接到你的 macOS 计算机。构建并在设备上运行它。它将要求你在手机上信任该应用程序，所以按照指示进行信任设置。
- en: Click on the app on your phone and—voila!—it will load, and you can play with
    the app.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击手机上的应用程序，——哇！——它将加载，你可以玩这个应用程序。
- en: Now with your iOS device being utilized, put the strips together in the proper
    order, and the Tree model will appear over the top of the paper.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 现在利用你的 iOS 设备，将条带按正确的顺序放在一起，Tree 模型将出现在纸张的上方。
- en: Summary
  id: totrans-271
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to create an educational game for children so
    they can learn what objects are in relation to the words for them. We learned
    how to develop using Vuforia, for both macOS and Windows for Android and iOS devices.
    We also learned that the basic building blocks for building on Windows and macOS
    devices are fairly similar code-wise, the only major difference being the extra
    steps required to compile to iOS or macOS, using XCode.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何为儿童创建教育游戏，使他们能够了解与他们相关的单词所指的对象。我们学习了如何使用Vuforia进行开发，适用于macOS和Windows，以及Android和iOS设备。我们还了解到，在Windows和macOS设备上构建的基本构建块在代码上相当相似，唯一的重大区别是编译到iOS或macOS所需的额外步骤，使用XCode。
- en: In the next chapter, we will build a prototype of a fitness application designed
    to allow the user to randomly select the location of where they want to walk,
    for fun.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将构建一个健身应用的原型，该应用允许用户随机选择他们想要散步的位置，以增添乐趣。
- en: Questions
  id: totrans-274
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'To install Vuforia for Unity, you have to go to the Vuforia website to download
    the SDK:'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要为Unity安装Vuforia，您必须访问Vuforia网站下载SDK：
- en: A.) True
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'You need to install the legacy plugin for the 2017 version of Unity:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要为Unity 2017版本安装旧版插件：
- en: A.) True
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'The Unity Hub makes it easy to have multiple versions of Unity installed:'
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Unity Hub使得安装多个Unity版本变得容易：
- en: A.) True
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'Microsoft Paint can make the PNG and JPG files needed for the Vuforia image
    targets:'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Microsoft Paint可以创建Vuforia图像目标所需的PNG和JPG文件：
- en: A.) True
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'Vuforia Image Targets can accept the TIFF file format:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vuforia图像目标可以接受TIFF文件格式：
- en: A.) True
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'Vuforia’s file size limit for PNG and JPG files is 5 MB:'
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vuforia对PNG和JPG文件的文件大小限制为5MB：
- en: A.) True
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'Vuforia is not available on macOS:'
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vuforia在macOS上不可用：
- en: A.) True
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'Unity Hub is available on macOS and Windows:'
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Unity Hub在macOS和Windows上可用：
- en: A.) True
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'The star rating system in the Vuforia Database is for how good the quality
    of an image is:'
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vuforia数据库中的星级评分系统是用来衡量图像质量的：
- en: A.) True
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
- en: 'You don’t need a Vuforia license key to use it with Unity:'
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Unity时，您不需要Vuforia许可证密钥：
- en: A.) True
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: A.) 正确
- en: B.) False
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: B.) 错误
