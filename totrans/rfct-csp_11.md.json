["```cs\nnamespace Packt.CloudySkiesAir.Chapter11;\npublic class RefactorMe {\n  public void DisplayRandomNumbers() {\n    List<int> numbers = new List<int>();\n    for (int i = 1; i <= 10; i++) {\n      Random rand = new Random();\n      int n = rand.Next(1, 101);\n      numbers.Add(n);\n    }\n    String output = string.Join(\", \", numbers.ToArray());\n    Console.WriteLine(output);\n  }\n}\n```", "```cs\npublic void DisplayRandomNumbers() {\n  List<int> numbers = new List<int>(10);\n  Random rand = new Random();\n  foreach (int i in Enumerable.Range(0, 10)) {\n    int n = rand.Next(1, 101);\n    numbers.Add(n);\n  }\n  string output = string.Join(\", \", numbers);\n  Console.WriteLine(output);\n}\n```", "```cs\n  public void DisplayRandomNumbers() {\n    List<int> numbers = new(10);\n    Random rand = new();\n    foreach (int _ in Enumerable.Range(0, 10)) {\n      int number = rand.Next(1, 101);\n      numbers.Add(number);\n    }\n    string output = string.Join(\", \", numbers);\n    Console.WriteLine(output);\n  }\n```", "```cs\npublic decimal CalculatePrice(int bags, int carryOn,\n  int passengers, bool isHoliday) {\n  decimal total = 0;\n  if (carryOn > 0) {\n    decimal fee = carryOn * CarryOnFee;\n    Console.WriteLine($\"Carry-on: {fee}\");\n    total += fee;\n  }\n  if (bags > 0) {\n    decimal bagFee = ApplyCheckedBagFee(bags, passengers);\n    Console.WriteLine($\"Checked: {bagFee}\");\n    total += bagFee;\n  }\n  if (isHoliday) {\n    decimal holidayFee = total * HolidayFeePercent;\n    Console.WriteLine(\"Holiday Fee: \" + holidayFee);\n    total += holidayFee;\n  }\n  return total;\n}\n```", "```cs\npublic decimal CalculatePrice(int bags, int carryOn,\n  int passengers, bool isHoliday) {\n  decimal total = 0;\n  Action<decimal> addFeeToTotal = fee => {\nConsole.WriteLine($\"Fee: {fee}\");\n    total += fee;\n  };\n  if (carryOn > 0) {\n    decimal fee = carryOn * CarryOnFee;\n    addFeeToTotal(fee);\n  }\n  if (bags > 0) {\n    decimal bagFee = ApplyCheckedBagFee(bags, passengers);\n    addFeeToTotal(bagFee);\n  }\n  if (isHoliday) {\n    decimal holidayFee = total * HolidayFeePercent;\n    Console.WriteLine(\"Holiday Fee: \" + holidayFee);\n    addFeeToTotal(holidayFee);\n  }\n  return total;\n}\n```", "```cs\npublic decimal CalculatePrice(int bags, int carryOn,\n  int passengers, bool isHoliday) {\n  decimal total = 0;\n  Action<string, decimal> addFeeToTotal = (name, fee) => {\n    Console.WriteLine($\"{name}: {fee}\");\n    total += fee;\n  };\n  if (carryOn > 0) {\n    decimal fee = carryOn * CarryOnFee;\n    addFeeToTotal(\"Carry-on\", fee);\n  }\n  if (bags > 0) {\n    decimal bagFee = ApplyCheckedBagFee(bags, passengers);\n    addFeeToTotal(\"Checked\", bagFee);\n  }\n  if (isHoliday) {\n    decimal holidayFee = total * HolidayFeePercent;\n    addFeeToTotal(\"Holiday Fee\", holidayFee);\n  }\n  return total;\n}\n```", "```cs\n/// <summary>\n/// Displays a sequence of 10 random numbers.\n/// </summary>\npublic void DisplayRandomNumbers() {\n```", "```cs\npublic int AddEvenNumbers(int[]? numbers, int total = 0) {\n  if (numbers == null || numbers.Length == 0) {\n    string message = \"There must be at least 1 element\";\n    throw new ArgumentException(message, nameof(numbers));\n  }\n  return total + numbers.Where(n => n % 2 == 0).Sum();\n}\n```", "```cs\n/// <summary>\n/// Adds up even numbers in an array. Throws an\n/// ArgumentException if the array is null or empty.\n/// </summary>\n/// <param name=\"numbers\">\n/// The array of numbers to add.\n/// </param>\n/// <param name=\"total\">\n/// The starting total to add to. Defaults to 0.\n/// </param>\n/// <returns>\n/// The total of all even numbers in the array.\n/// </returns>\n```", "```cs\n/// <exception cref=\"ArgumentException\">Thrown when the array is null or empty.</exception>\n```", "```cs\npublic static class TestMe {\n  public static int CalculateLargestNumberWithoutASeven(\n    INumberProvider provider) {\n    IEnumerable<int> numbers = provider.GenerateNumbers();\n    return numbers.Where(x => !x.ToString().Contains(\"7\"))\n                  .Max();\n  }\n}\n```"]