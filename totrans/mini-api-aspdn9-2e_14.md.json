["```cs\npublic class Program\n{\n    public static void Main(string[] args)\n    {\n        var builder = WebApplication.CreateBuilder(args);\n        builder.Services.AddTransient<CalculatorService>();\n        var app = builder.Build();\n        app.MapPost(\n            \"/SumIntegers\",\n            (int[] integers,\n             CalculatorService calculatorService) =>\n        {\n            var result = calculatorService.Sum(integers);\n            return Results.Ok(result);\n        });\n        app.Run();\n    }\n}\n```", "```cs\n[Fact]\npublic void Sum_Test()\n{\n}\n```", "```cs\nvar calculatorService = new CalculatorService();\nint[] integers = [ 1, 1, 8 ];\n```", "```cs\nvar result = calculatorService.Sum(integers);\nvar expectedResult = 10;\n```", "```cs\n[Fact]\npublic void Sum_Test()\n{\n    var calculatorService = new CalculatorService();\n    int[] integers = { 1, 1, 8 };\n    var result = calculatorService.Sum(integers);\n    var expectedResult = 10;\n    Assert.Equal(result, expectedResult);\n}\n```", "```cs\ndotnet add package Microsoft.AspNetCore.Mvc.Testing\n```", "```cs\npublic class CalculatorTests :\n    IClassFixture<WebApplicationFactory<Program>>\n```", "```cs\nprivate readonly HttpClient _httpClient;\npublic CalculatorTests(\n    WebApplicationFactory<Program> applicationFactory)\n{\n    _httpClient = applicationFactory.CreateClient();\n}\n```", "```cs\n[Fact]\npublic async Task SumIntegers_ShouldReturnOk()\n{\n    //Arrange\n    var integers = new[] { 2, 4, 4 };\n    var jsonContent = new\n        StringContent(JsonSerializer.Serialize(integers),\n        Encoding.UTF8,\n        \"application/json\"\n    );\n}\n```", "```cs\n// Act\nvar response = await _httpClient.PostAsync(\n    \"/SumIntegers\", jsonContent);\n```", "```cs\nAssert.Equal(HttpStatusCode.OK, response.StatusCode);\n```", "```cs\nAssert.Equal(10, JsonSerializer.Deserialize<int>(await response.Content.ReadAsStringAsync()));\n```", "```cs\nFROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base\n```", "```cs\nWORKDIR /app\nEXPOSE 80\n```", "```cs\nFROM mcr.microsoft.com/dotnet/sdk:9.0 AS build\nWORKDIR /src\nCOPY . .\nRUN dotnet restore\nRUN dotnet publish -c Release -o /app\n```", "```cs\nFROM base AS final\nWORKDIR /app\nCOPY --from=build /app .\nENTRYPOINT [\"dotnet\", \"MyminimalAPIProject.dll\"]\n```", "```cs\ndocker build -t MYAPINAME .\n```", "```cs\ndocker run -d -p 8080:80 --name MYCONTAINERNAME MYAPINAME\n```", "```cs\n\"Kestrel\": {\n    \"Endpoints\": {\n        \"Http\": {\n            \"Url\": \"http://*:8080\"\n        }\n    }\n}\n```"]