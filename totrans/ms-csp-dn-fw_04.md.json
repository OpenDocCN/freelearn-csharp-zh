["```cs\nlet a = 1 + 2\nlet b = a * 3\nprintfn \"Expression a equals to %i\" a\nprintfn \"Expression b equals to %i\" b\nprintfn \"So, expression b (%i) depends on a (%i)\" b a\n```", "```cs\nlet hypo (x:float) (y:float) =\n  let legsSquare = x*x + y*y\n// System.Math.Sqrt(legsSquare)\nsqrt(legsSquare) // an alias of the former\nprintfn \"The hypotenuse for legs 3 and 4 is: %f\" (hypo 3.0 4.0)\n```", "```cs\n/// A list of the numbers from 0 to 99\nlet sampleNumbers = [ 0 .. 99 ]\n```", "```cs\nseq {5..3..15}\n```", "```cs\nval it : seq<int> = seq [5; 8; 11; 14]\n```", "```cs\nlet sampleTableOfSquares = [ for i in 0 .. 99 -> (i, i*i) ]\n```", "```cs\nlet initialList = [9.0; 4.0; 1.0]\nlet sqrootList = List.map (fun x -> sqrt(x)) initialList\n\nprintfn \"Square root list: %A\" sqrootList\n```", "```cs\nlet func1 x = x*x + 3\n```", "```cs\nlet result1 = func1 4573\nprintfn \"The result of squaring the integer 4573 and adding 3 is %d\" result1\n```", "```cs\nlet func2 (x:int) = 2*x*x - x/5 + 3\n```", "```cs\nlet func3 x =\n  if x < 100.0 then\n    2.0*x*x - x/5.0 + 3.0\n  else\n    2.0*x*x + x/5.0 - 37.0\n```", "```cs\nlet daysList =\n  [ for month in 1 .. 12 do\n  for day in 1 .. System.DateTime.DaysInMonth(2012, month) do\n    yield System.DateTime(2012, month, day) ]\n```", "```cs\nlet (|>) x f = f x\n```", "```cs\nlet sum a b = a + b\nlet chainOfSums = sum 1 2 |> sum 3 |> sum 4\n```", "```cs\nlet numberList = [ 1 .. 1000 ]  /// list of integers from 1 to 1000\nlet squares = numberList\n  |> List.map (fun x -> x*x)\n```", "```cs\n/// Computes the sum of the squares of the numbers divisible by 3.\nlet sumOfSquares = numberList\n|> List.filter (fun x -> x % 3 = 0)\n|> List.sumBy (fun x -> x * x)\n```", "```cs\nlet rec factorial n = match n with\n  | 0 -> 1\n  | _ -> n * factorial (n - 1)\nlet factorial5 = factorial 5\n```", "```cs\ntype numberOfEntries = int\ntype response = string * int\n```", "```cs\n// define a record type\ntype ContactCard =\n  { Name     : string;\n    Phone    : string;\n    Verified : bool }\n  let contact1 = { Name = \"Alf\" ; Phone = \"(206) 555-0157\" ; Verified = false }\n```", "```cs\nlet contact2 = { contact1 with Phone = \"(206) 555-0112\"; Verified = true }\n```", "```cs\n/// Converts a 'ContactCard' object to a string\nlet showCard c =\n  c.Name + \" Phone: \" + c.Phone + (if not c.Verified then \" (unverified)\" else \"\")\n```", "```cs\nlet stringifyedCard = showCard contact1\n```", "```cs\nclass Greeter {\n  element: HTMLElement;\n  span: HTMLElement;\n  timerToken: number;\n\n  constructor(element: HTMLElement) {\n    this.element = element;\n    this.element.innerHTML += \"The time is: \";\n    this.span = document.createElement('span');\n    this.element.appendChild(this.span);\n    this.span.innerText = new Date().toUTCString();\n  }\n\n  start() {\n    this.timerToken = setInterval(\n      () => this.span.innerHTML = new Date().toUTCString(), 500);\n  }\n\n  stop() {\n    clearTimeout(this.timerToken);\n  }\n}\n\nwindow.onload = () => {\n  var el = document.getElementById('content');\n  var greeter = new Greeter(el);\n  greeter.start();\n};\n```", "```cs\n<button id=\"btnStop\">Stop Clock</button>\nwindow.onload = () => {\n  // This links the UI to the JS code\n  var el = document.getElementById('content');\n  var btnStop = document.getElementById('btnStop');\n  var greeter = new Greeter(el);\n  // Now that Greeter is defined, we can use it\n  // from the button to stop the clock\n  btnStop.addEventListener(\"click\", () => {\n    greeter.stop();\n    alert(\"Clock Stopped!\");\n  });\ngreeter.start();\n};\n```", "```cs\n<!-- Button to stop the clock -->\n<button id=\"btnStop\">Press to stop the clock</button>\n```", "```cs\nvar theButton = document.getElementById('btnStop');\ntheButton.onclick = () => {\n  greeter.stop();\n  theButton.innerText = \"Clock stopped!\";\n}\n```", "```cs\nclass Greeter {\n  element: HTMLElement;\n  span: HTMLElement;\n  timerToken: number;\n\n  constructor(element: HTMLElement) {\n    this.element = element;\n    this.element.innerHTML += \"The time is: \";\n    this.span = document.createElement('span');\n    this.element.appendChild(this.span);\n    this.span.innerText = new Date().toUTCString();\n  }\n\n  start() {\n    this.timerToken = setInterval(() => this.span.innerHTML =\n    new Date().toUTCString(), 500);\n  }\n\n  stop() {\n   clearTimeout(this.timerToken);\n  }\n}\nwindow.onload = () => {\n  var el = document.getElementById('content');\n  var greeter = new Greeter(el);\n  greeter.start();\n\n  var theButton = document.getElementById('btnStop');\n  theButton.onclick = () => {\n    greeter.stop();\n    theButton.innerText = \"Clock stopped!\";\n  }\n};\n```"]