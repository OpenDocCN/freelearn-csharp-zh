- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Designing User Interfaces
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计用户界面
- en: When working with UI, it is important to understand a few design basics. This
    chapter will cover the foundation of designing UI and a few key concepts to start
    you off in the right direction.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当与用户界面（UI）打交道时，理解一些设计基础是很重要的。本章将涵盖设计UI的基础和一些关键概念，以帮助您正确起步。
- en: 'In this chapter, we will discuss the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: Defining UI and GUI
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义UI和GUI
- en: Describing the four types of interfaces
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述四种类型的界面
- en: Laying out your user interfaces
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布局用户界面
- en: Discerning and setting resolution and aspect ratio
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区分和设置分辨率和宽高比
- en: This book is not about the art of designing UI. It is a technical text that
    discusses the implementation of UI functionality. However, I do want to discuss
    some basic design principles of UI design. I don’t expect you to be an amazing
    UI designer after reading this chapter. I do hope that you get some basic understanding
    of layout and design principles from this chapter, though, so that maybe your
    artist friends won’t make too much fun of you.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本书不是关于设计UI的艺术。它是一篇技术性文章，讨论UI功能的实现。然而，我确实想讨论一些UI设计的基本设计原则。我不期望你在阅读本章后成为一个出色的UI设计师。但我确实希望你能从本章中获得一些关于布局和设计原则的基本理解，这样也许你的艺术家朋友们就不会太取笑你了。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you will need the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，您需要以下内容：
- en: Unity 2020.3.26f1 or later
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 2020.3.26f1或更高版本
- en: Defining UI and GUI
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义UI和GUI
- en: So, what exactly do UI and GUI stand for, and what’s the difference? **UI**
    stands for **user interface** and **GUI** (pronounced “gooey”) stands for **graphical
    user interface**. To *interface* means to *interact with*, so the UI is the set
    of devices that let a player interact with a game. The mouse, keyboard, game controller,
    touch screen, and so on are all part of the UI. The GUI is the subset of the UI
    represented by graphics. So, onscreen buttons, dropdown menus, and icons are all
    part of a game’s GUI. As the GUI is a subset of the UI, many people (myself included)
    tend to just refer to the GUI as the UI. Unity also refers to all the GUI items
    they provide templates for as the UI.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，UI和GUI究竟代表什么，它们之间有什么区别？**UI**代表**用户界面**，而**GUI**（发音为“gooey”）代表**图形用户界面**。*界面*意味着*交互*，因此UI是让玩家与游戏交互的一组设备。鼠标、键盘、游戏控制器、触摸屏等等都是UI的一部分。GUI是UI的图形子集。因此，屏幕上的按钮、下拉菜单和图标都是游戏GUI的一部分。由于GUI是UI的子集，许多人（包括我自己）倾向于只把GUI称为UI。Unity也将他们提供的所有GUI项目模板称为UI。
- en: This book will focus primarily on GUI design, but it will discuss some non-graphical
    aspects of UI controls, such as accessing data from the mouse, screen tap, keyboard,
    or controller. This chapter specifically will look at some basic design considerations
    for different interface types.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将主要关注GUI设计，但也会讨论UI控件的一些非图形方面，例如从鼠标、屏幕点击、键盘或控制器访问数据。本章将特别探讨不同界面类型的一些基本设计考虑因素。
- en: The four game interface types
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 四种游戏界面类型
- en: 'When you say “game UI,” most people think of the **heads-up display** (**HUD**)
    that appears in front of all the in-game items. However, there are actually four
    different types of game interfaces: non-diegetic, diegetic, meta, and spatial.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当你说“游戏UI”时，大多数人会想到出现在所有游戏项目前面的**抬头显示**（**HUD**）。然而，实际上有四种不同类型的游戏界面：非叙事的、叙事的、元和空间的。
- en: 'Fagerholt and Lorentzon first described these four different interface types
    in the 2009 paper *Beyond the HUD: User Interfaces for Increased Player Immersion
    in FPS Games: Master of Science Thesis*. Since then, the terminology has been
    widely used throughout the field of UI game design. You can find the original
    publication at [http://publications.lib.chalmers.se/records/fulltext/111921.pdf](http://publications.lib.chalmers.se/records/fulltext/111921.pdf).'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Fagerholt和Lorentzon首先在2009年的论文《超越HUD：FPS游戏中的用户界面以提高玩家沉浸感：硕士学位论文》中描述了这四种不同的界面类型。从那时起，这个术语在整个UI游戏设计领域得到了广泛使用。您可以在[http://publications.lib.chalmers.se/records/fulltext/111921.pdf](http://publications.lib.chalmers.se/records/fulltext/111921.pdf)找到原始出版物。
- en: 'The distinction between the four is determined by a cross of the following
    two dimensions:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这四种类型的区别是由以下两个维度的交叉决定的：
- en: '**Diegesis**: Is it part of the story?'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**叙事性**：它是故事的一部分吗？'
- en: '**Spatiality**: Is it in the game’s environment?'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**空间性**：它是否在游戏环境之中？'
- en: 'The following diagram demonstrates the cross relationship between the two questions
    and how they define the four types of interfaces:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图表展示了这两个问题之间的交叉关系以及它们如何定义四种类型的界面：
- en: '![Figure 1.1: Four types of interfaces](img/B18327_01_01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1：四种界面类型](img/B18327_01_01.jpg)'
- en: 'Figure 1.1: Four types of interfaces'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1：四种界面类型
- en: A game’s HUD falls into the **non-diegetic** category. This information exists
    purely for the player to view and the characters within the game are not aware
    of its presence. It exists on the *fourth* wall of the game view and appears to
    be on the screen in front of everything. The examples of this type of UI are endless,
    as nearly every game has some non-diegetic UI elements.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 一款游戏的HUD属于**非叙事性**类别。这种信息纯粹是为了玩家查看，而游戏中的角色并不知道它的存在。它存在于游戏视图的**第四面墙**上，看起来像是屏幕上所有内容的前面。这种类型UI的例子无穷无尽，因为几乎每款游戏都有一些非叙事性UI元素。
- en: Alternatively, a **diegetic** interface is one that exists within the game world
    and the characters within the game are aware of its presence. Common examples
    of this include characters looking at inventory or maps. The most widely referred-to
    example of diegetic UI is the inventory and health display within *Deadspace*.
    The inventory displays on a holographic display window that pops up in front of
    the playable character, and he interacts with it as you select his weaponry. His
    health is also indicated by a meter on his back. The inventory of *Alone in the
    Dark* (2008) is displayed in a diegetic way as well. While there are some UI elements
    that only the player can see, the main character views inventory within their
    jacket pockets and interacts with the items. *Uncharted Lost Legacy* and *Far
    Cry 2* both use maps that the characters physically hold in the scene and interact
    with. *Fallout 3* and *Fallout 4* use a diegetic interface to display the inventory
    and map on the character’s Pip-Boy, which is permanently attached to their arm.
    Games also use this type of display when characters are in a vehicle or suit,
    where various displays appear on the shield, window, or cockpit.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，**叙事性**界面是指存在于游戏世界中，而游戏中的角色知道它的存在。常见的例子包括角色查看库存或地图。最常提到的叙事性UI例子是《死亡空间》中的库存和健康显示。库存显示在一个弹出在可玩角色前面的全息显示窗口上，而你选择他的武器时与之交互。他的健康状态也通过他背上的仪表来指示。《黑暗料理传说》（2008）的库存也是以叙事方式显示的。虽然有一些UI元素只有玩家可以看到，但主要角色在夹克口袋中查看库存并与物品交互。*无主之地：失落遗产*和*孤岛惊魂2*都使用角色在场景中实际持有的地图，并与地图交互。《辐射3》和《辐射4》使用叙事性界面在角色的Pip-Boy上显示库存和地图，Pip-Boy永久固定在他们的手臂上。当角色在车辆或服装中时，游戏也会使用这种类型的显示，各种显示出现在盾牌、窗户或驾驶舱上。
- en: '**Meta** interfaces are interfaces that the characters in the game are aware
    of, but they are not physically displayed within the scene. Common examples of
    this are speed displays for racing games. *Forza 7* actually uses a combination
    of meta and diegetic displays for the speedometer. A meta speed indicator is persistently
    on the lower-right corner of the screen for the player to see. Since the character
    is constantly aware of how fast they are driving, they would be aware of this
    speed indicator, therefore making it a meta interface. There is also a diegetic
    speedometer in the car’s dash that is displayed when playing in first-person view.
    Another common usage of this type of display is a cell phone that appears on the
    screen but is implied the playable character is interacting with. *Persona 5*,
    *Catherine*, and *Grand Theft Auto 5* all use this interface type for cell phone
    interactions.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**元界面**是指游戏中的角色知道但不在场景中物理显示的界面。常见的例子是赛车游戏的速度显示。*Forza 7*实际上使用了元和叙事显示的组合来显示速度表。元速度指示器持续显示在屏幕的右下角，供玩家查看。由于角色始终知道他们开得有多快，因此他们会知道这个速度指示器，因此它是一个元界面。还有一种叙事速度表在汽车的仪表板上显示，当以第一人称视角玩游戏时会出现。这种类型显示的另一种常见用途是在屏幕上出现的手机，暗示可玩角色正在与之交互。*女神异闻录5*、*Catherine*和*侠盗猎车手5*都使用这种界面类型进行手机交互。'
- en: 'The last type of interface, **spatial**, exists in the scene, but the characters
    within the game are not aware of it. Interfaces that exist in the scene but that
    the characters are not aware of are incredibly common. This is commonly used to
    let the player know where in the scene interactable items are, what the in-game
    character is doing, or information about characters and items in the scene. For
    example, in *Legend of Zelda: Breath of the Wild*, arrows appear over the heads
    of enemies, indicating who Link will attack. Link is not actually aware of these
    arrow icons; they are there for the player to know who he is focusing on. *Xenoblade
    Chronicles 2* uses a spatial interface to indicate where the player can dig by
    displaying a shovel icon over the diggable areas.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一种类型的界面，**空间**界面存在于场景中，但游戏中的角色对此并不知情。存在于场景中但角色并不知情的界面非常常见。这通常用于让玩家知道场景中可交互物品的位置、游戏角色正在做什么，或者场景中角色和物品的信息。例如，在《塞尔达传说：荒野之息》中，箭头出现在敌人的头顶上，指示林克将要攻击谁。林克实际上并不意识到这些箭头图标；它们的存在是为了让玩家知道他正在关注谁。“异度之刃2”使用空间界面，通过在可挖掘区域上方显示铲子图标来指示玩家可以挖掘的位置。
- en: Laying out the UI elements
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 布局UI元素
- en: When laying out the UI for your game, I strongly recommend checking other games
    of the same genre and seeing how they implemented their UI. Play the game and
    see whether it feels good to you.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当布局您游戏的UI时，我强烈建议检查同一类型的其他游戏，看看它们是如何实现它们的UI的。玩这些游戏，看看它们是否让您感觉良好。
- en: 'If you are unsure of how to lay out your game’s UI, I recommend dividing the
    game’s screen into a *guttered grid*, like the one shown in the following diagram,
    and placing items within the non-guttered areas:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不确定如何布局您游戏的UI，我建议将游戏屏幕划分为一个*带排水沟的网格*，就像以下图中所示，并将物品放置在非排水沟区域：
- en: '![Figure 1.2: A guttered grid](img/B18327_01_02.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图1.2：带排水沟的网格](img/B18327_01_02.jpg)'
- en: 'Figure 1.2: A guttered grid'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.2：带排水沟的网格
- en: You can use as many grids as you want, but laying out the items with reference
    to the grid will help ensure that the UI is arranged in a balanced way.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用尽可能多的网格，但根据网格布局项目将有助于确保UI以平衡的方式排列。
- en: In most cases, the HUD items should remain at the outer edges of the grid. Any
    UI that displays in the center grids will restrict the player view. So, this area
    is good for pop-up windows that pause the gameplay.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，HUD项目应保持在网格的外边缘。任何显示在中心网格中的UI都会限制玩家的视野。因此，这个区域适合弹出窗口，暂停游戏。
- en: The device your game will be played on is important when determining the layout.
    If your game is designed for a mobile device and has a lot of buttons the player
    will interact with, the buttons are generally best suited for the bottom or side
    portions of the screen. This is due to the way players hold their phones and the
    top-center part of the screen is the most difficult area to reach with their thumb.
    Additionally, reaching for this area will cause them to block the majority of
    the game view with their hand. We will discuss designing UI for mobile more thoroughly
    in [*Chapter 2*](B18327_02.xhtml#_idTextAnchor024).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您的游戏将在哪种设备上运行对于确定布局很重要。如果您的游戏是为移动设备设计的，并且有很多玩家将与之交互的按钮，那么按钮通常最适合屏幕的底部或侧面部分。这是因为玩家握手机的方式，以及屏幕的顶部中央部分是玩家用拇指最难触及的区域。此外，伸手到这个区域会让他们用手挡住大部分游戏视图。我们将在[*第2章*](B18327_02.xhtml#_idTextAnchor024)中更详细地讨论为移动设备设计UI。
- en: You’ll note that when you play computer games, they tend to have much smaller
    and more cluttered UI than mobile and console games. This is due to visibility
    and interaction. Clicking on small objects with a mouse is significantly easier
    than tapping them with a finger or selecting them with the D-pad. Also, the screen
    resolution is much bigger, which allows for more space to be taken up by the UI.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到，当您玩电脑游戏时，它们往往比移动和主机游戏有更小、更杂乱的UI。这是由于可见性和交互。用鼠标点击小对象比用手指轻触或用D-pad选择它们要容易得多。此外，屏幕分辨率要大得多，这允许UI占用更多空间。
- en: 'When trying to determine the size and relative location of UI items, you can
    reference **Fitts’ Law**. Fitts’ Law can mathematically calculate how long it
    will take a user to navigate to a UI item based on its size and distance away
    from the user’s starting position. I won’t go over the math here (despite the
    math teacher in me desperately wanting to), but the lessons that can be garnered
    from Fitts’ Law are as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当试图确定UI项的大小和相对位置时，你可以参考**菲茨定律**。菲茨定律可以基于UI项的大小和距离用户起始位置的距离，从数学上计算出用户导航到UI项所需的时间。在这里我不会讲解数学（尽管我内心渴望这样做），但可以从菲茨定律中汲取的教训如下：
- en: Don’t make interactable UI small and far apart
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要使可交互的UI元素太小且间隔太远
- en: Make the most important interactable items the largest and near each other
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将最重要的可交互元素设计得最大，并且彼此靠近
- en: Next, we’ll look at resolution and aspect ratio.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨分辨率和宽高比。
- en: Resolution and aspect ratio
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分辨率和宽高比
- en: 'A game’s **resolution** is the pixel dimension of the screen on which it plays.
    For example, a game could run at 1,024x768\. This means that the game is 1,024
    pixels wide and 768 pixels tall. The **aspect ratio** of a game is the ratio of
    the width and height (expressed as width:height). This aspect ratio is determined
    by dividing the resolution width by the resolution height and then simplifying
    the fraction. So, for example, if your game has a resolution of 1024x768, the
    aspect ratio would be as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏的**分辨率**是游戏运行的屏幕的像素维度。例如，一个游戏可以运行在1,024x768上。这意味着游戏宽度为1,024像素，高度为768像素。游戏的**宽高比**是宽度和高度的比率（表示为宽度:高度）。这个宽高比是通过将分辨率宽度除以分辨率高度然后简化分数来确定的。例如，如果你的游戏分辨率为1024x768，那么宽高比如下：
- en: 1024*px*/768*px*=4/3
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 1024*px*/768*px*=4/3
- en: Here, the fraction 4/3 is the aspect ratio 4:3.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，分数4/3代表宽高比4:3。
- en: 'The following table provides a list of common aspect ratios and related resolutions:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 下表提供了一组常见的宽高比和相关分辨率：
- en: '![Figure 1.3: Common aspect ratios and resolutions](img/B18327_01_03.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图1.3：常见的宽高比和分辨率](img/B18327_01_03.jpg)'
- en: 'Figure 1.3: Common aspect ratios and resolutions'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.3：常见的宽高比和分辨率
- en: 'When designing your UI, the resolution and aspect ratio will play an important
    role in how your UI will look. Knowing the resolution and aspect ratio of your
    target device will be an important first step in designing your UI for two reasons:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计你的UI时，分辨率和宽高比将在你的UI外观中扮演重要角色。了解你的目标设备的分辨率和宽高比将是设计你的UI的重要第一步，原因如下：
- en: It will determine the layout of your UI
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它将决定你的UI布局
- en: The way you build the UI within Unity will be determined by how many resolutions
    and aspect ratios you plan to support
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你在Unity中构建UI的方式将由你计划支持多少分辨率和宽高比来决定
- en: If you build to a single resolution/aspect ratio, the UI will be much easier
    to build as you won’t have to make sure all the elements maintain their relative
    position at multiple aspect ratios. However, if you build a game that will run
    at multiple resolutions/aspect ratios (for example, a mobile project or a web
    game that scales within a window), you want your UI to scale and move appropriately.
    You’ll also want to be able to easily change the resolution during testing so
    that you can make sure the UI is positioned appropriately as its display window
    morphs.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只为单一分辨率/宽高比构建，UI的构建将会更加简单，因为你不需要确保所有元素在多个宽高比下都保持其相对位置。然而，如果你构建的游戏将在多个分辨率/宽高比下运行（例如，一个移动项目或一个在窗口内缩放的网页游戏），你希望你的UI能够适当地缩放和移动。你还将希望能够在测试期间轻松地更改分辨率，以确保UI在显示窗口变化时能够适当地定位。
- en: Even if you will allow your resolution and aspect ratio to vary, you should
    still decide on a default resolution. This default resolution represents the resolution
    of your ideal design. This will be the resolution that your initial design and
    UI layout are based on, so if the resolution or aspect ratio varies, the UI will
    try to maintain the same design as best it can.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你将允许分辨率和宽高比变化，你也应该决定一个默认分辨率。这个默认分辨率代表了你理想设计的分辨率。这将是你初始设计和UI布局的基础，因此如果分辨率或宽高比发生变化，UI将尽可能保持相同的设计。
- en: Note
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Since all televisions sold today have a 16:9 aspect ratio, any UI you make for
    a console game should be developed with a 16:9 aspect ratio in mind.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 由于今天所有销售的电视都具有16:9的宽高比，因此为控制台游戏制作的任何UI都应该考虑到16:9的宽高比。
- en: Changing the aspect ratio and resolution of the game view
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 改变游戏视图的宽高比和分辨率
- en: 'You can easily switch between different resolutions and aspect ratios in the
    **Game** tab. This will allow you to see how your UI scales at the different resolutions
    and aspect ratios:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在**游戏**标签页中轻松地在不同的分辨率和纵横比之间切换。这将允许您查看您的 UI 在不同的分辨率和纵横比下的缩放情况：
- en: 'If you navigate to your **Game** tab, you will see the words **Free Aspect**.
    Clicking on **Free Aspect** will reveal a menu that shows various aspect ratios
    and resolutions:![Figure 1.4: Selecting Free Aspect mode from the Game view](img/B18327_01_04.jpg)'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您导航到您的**游戏**标签页，您将看到文字**自由纵横比**。点击**自由纵横比**将显示一个菜单，显示各种纵横比和分辨率：![图 1.4：从游戏视图中选择自由纵横比模式](img/B18327_01_04.jpg)
- en: 'Figure 1.4: Selecting Free Aspect mode from the Game view'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.4：从游戏视图中选择自由纵横比模式
- en: The items displayed in this list are the most common aspect ratios and resolutions
    for the build target you currently have selected. In the preceding screenshot,
    my build target was **PC, Mac & Linux Standalone**, so the most common monitor
    settings are displayed. If I were to change my build target to iOS, I would see
    a list of popular iPhone and iPad screen dimensions.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此列表中显示的项目是您当前所选构建目标最常见的纵横比和分辨率。在前面的屏幕截图中，我的构建目标是**PC、Mac 和 Linux 独立版**，因此显示了最常见的监视器设置。如果我将构建目标更改为
    iOS，我会看到一组流行的 iPhone 和 iPad 屏幕尺寸。
- en: '**Free Aspect** means that the game’s aspect ratio will scale relative to the
    window of the **Game** view. So, by moving the frame around on the **Game** window,
    you will change the aspect ratio.'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**自由纵横比**意味着游戏的纵横比将相对于**游戏**视图的窗口进行缩放。因此，通过在**游戏**窗口上移动框架，您将改变纵横比。'
- en: 'You can easily see the effects of **Free Aspect** on your game’s aspect ratio,
    by setting your Editor’s layout to one that shows both the **Screen** and **Game**
    tabs open simultaneously. For example, setting **Layout** to **2 by 3** will do
    this. Select the **Layout** dropdown in the top-right corner of the Unity Editor
    to change the layout.![Figure 1.5: Changing the Editor Layout](img/B18327_01_05.jpg)'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过将编辑器的布局设置为同时显示**屏幕**和**游戏**标签页的布局，轻松地看到**自由纵横比**对游戏纵横比的影响。例如，将**布局**设置为**2x3**将做到这一点。在
    Unity 编辑器的右上角选择**布局**下拉菜单以更改布局。![图 1.5：更改编辑器布局](img/B18327_01_05.jpg)
- en: 'Figure 1.5: Changing the Editor Layout'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.5：更改编辑器布局
- en: Now the **Game** and **Scene** tabs will both be visible on the left-hand side
    of your screen.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，**游戏**和**场景**标签页都将显示在您的屏幕左侧。
- en: '![Figure 1.6: Results of the 2 by 3 layout](img/B18327_01_06.jpg)'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.6：2x3 布局的成果](img/B18327_01_06.jpg)'
- en: 'Figure 1.6: Results of the 2 by 3 layout'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.6：2x3 布局的成果
- en: 'Now, reduce the size of the **Game** tab so that it is a very small thin rectangle.
    You will see that the main camera in the Scene view is now also displaying as
    a very small thin rectangle:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，减小**游戏**标签页的大小，使其成为一个非常小的细长矩形。您会看到，场景视图中的主摄像机现在也显示为一个非常小的细长矩形：
- en: '![Figure 1.7: Results of resizing the Game view in Free Aspect mode](img/B18327_01_07.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.7：在自由纵横比模式下调整游戏视图大小的成果](img/B18327_01_07.jpg)'
- en: 'Figure 1.7: Results of resizing the Game view in Free Aspect mode'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7：在自由纵横比模式下调整游戏视图大小的成果
- en: You can select one of the aspect ratios in the dropdown and see that, as you
    rescale the game window, the blue area representing the actual game will maintain
    the ratio you selected and black bars will fill in any extra spacing. The camera
    will also maintain that ratio.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以从下拉菜单中选择一个纵横比，并看到，当您调整游戏窗口的大小时，代表实际游戏的蓝色区域将保持您选择的纵横比，黑色条带将填充任何额外的空间。摄像机也将保持该比例。
- en: '**Full HD (1920x1080)** will attempt to emulate the 1,920x1,080 resolution.
    It’s pretty likely that the window you have set for the **Game** tab is not big
    enough to support 1,920x1,080 pixels; if so, it will be scaled as indicated in
    the following screenshot:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**全高清 (1920x1080)** 将尝试模拟 1920x1080 的分辨率。您设置的**游戏**标签页的窗口很可能不足以支持 1920x1080
    像素；如果是这样，它将按以下截图所示进行缩放：'
- en: '![Figure 1.8: Game view scale](img/B18327_01_08.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.8：游戏视图缩放](img/B18327_01_08.jpg)'
- en: 'Figure 1.8: Game view scale'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.8：游戏视图缩放
- en: 'If the resolution or aspect ratio you want to use is not available in the resolution
    dropdown menu, you can add your own item to this menu by selecting the plus sign
    at the bottom of the dropdown. If you want to create a set resolution item, set
    **Type** to **Fixed Resolution**. If you want to create a set aspect ratio item,
    set **Type** to **Aspect Ratio**.![Figure 1.9: Adding a new resolution or aspect
    ratio preset](img/B18327_01_09.jpg)'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想使用的分辨率或纵横比在分辨率下拉菜单中不可用，您可以通过在下拉菜单底部选择加号来添加自己的项目到该菜单。如果您想创建一个固定分辨率项，请将 **类型**
    设置为 **固定分辨率**。如果您想创建一个固定纵横比项，请将 **类型** 设置为 **纵横比**。![图 1.9：添加新的分辨率或纵横比预设](img/B18327_01_09.jpg)
- en: 'Figure 1.9: Adding a new resolution or aspect ratio preset'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.9：添加新的分辨率或纵横比预设
- en: 'For example, if you wanted to make a game that was reminiscent of an old Game
    Boy game, you could add a 160x144 pixels preset:'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，如果您想制作一个让人联想到旧 Game Boy 游戏的游戏，您可以添加一个 160x144 像素的预设：
- en: '![Figure 1.10: Creating a fixed resolution preset](img/B18327_01_10.jpg)'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.10：创建固定分辨率预设](img/B18327_01_10.jpg)'
- en: 'Figure 1.10: Creating a fixed resolution preset'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.10：创建固定分辨率预设
- en: 'Once you hit **OK**, the new preset will item will be displayed at the bottom
    of the list. When you select it, the camera and visible area of the **Game** tab
    will maintain the aspect ratio created by a 160x144 resolution:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您点击 **确定**，新的预设项将显示在列表底部。当您选择它时，**游戏**选项卡的相机和可见区域将保持由 160x144 分辨率创建的纵横比：
- en: '![Figure 1.11: Selecting a custom preset](img/B18327_01_11.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.11：选择自定义预设](img/B18327_01_11.jpg)'
- en: 'Figure 1.11: Selecting a custom preset'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.11：选择自定义预设
- en: Building for a single resolution
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为单一分辨率构建
- en: 'If you are creating a game that you plan to build on the **PC, Mac, & Linux
    Standalone** target platform, you can force the resolution to always be the same.
    To do so, go to **Edit** | **Project Settings** | **Player**. Your Inspector should
    now display the following:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在创建计划在 **PC、Mac 和 Linux 独立**目标平台上构建的游戏，您可以强制分辨率始终相同。为此，请转到 **编辑** | **项目设置**
    | **玩家**。此时，您的检查器应显示以下内容：
- en: '![Figure 1.12: PC, Mac & Linux Standalone Player resolution settings](img/B18327_01_12.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.12：PC、Mac 和 Linux 独立玩家分辨率设置](img/B18327_01_12.jpg)'
- en: 'Figure 1.12: PC, Mac & Linux Standalone Player resolution settings'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.12：PC、Mac 和 Linux 独立玩家分辨率设置
- en: You may have more or fewer platforms displayed here; it depends on the modules
    you have installed with Unity.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这里可能显示的平台数量可能更多或更少；这取决于您安装的 Unity 模块。
- en: To force a specific resolution on a **PC, Mac, & Linux Standalone** game, deselect
    **Default is Native Resolution**. The option to input **Default Screen Width**
    and **Default Screen Height** will be made available to you and you can enter
    the desired resolution values. Then, when you build your game, it will play at
    the size you specified.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 **PC、Mac 和 Linux 独立**游戏中强制特定分辨率，请取消选择 **默认为原生分辨率**。将提供输入 **默认屏幕宽度** 和 **默认屏幕高度**
    的选项，您可以输入所需的分辨率值。然后，当您构建游戏时，它将以您指定的尺寸播放。
- en: 'The following screenshot shows the settings for forcing a PC game to play in
    a window with Game Boy Color dimensions:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了强制 PC 游戏以 Game Boy Color 尺寸的窗口播放的设置：
- en: '![Figure 1.13: Setting a specific PC, Mac, & Linux Standalone Player resolution](img/B18327_01_13.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.13：设置特定的 PC、Mac 和 Linux 独立玩家分辨率](img/B18327_01_13.jpg)'
- en: 'Figure 1.13: Setting a specific PC, Mac, & Linux Standalone Player resolution'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.13：设置特定的 PC、Mac 和 Linux 独立玩家分辨率
- en: 'You can also force a specific resolution with a **WebGL** build. There are
    fewer options to worry about, but the general concept is the same. The following
    screenshot shows the settings for forcing your game to display at **160**x**140**
    in the **Player Settings** for **WebGL**:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以通过 WebGL 构建强制设置特定的分辨率。需要考虑的选项较少，但基本概念是相同的。以下截图显示了在 WebGL 的 **Player Settings**
    中强制游戏以 **160**x**140** 分辨率显示的设置：
- en: '![Figure 1.14: Setting a specific WebGL resolution](img/B18327_01_14.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.14：设置特定的 WebGL 分辨率](img/B18327_01_14.jpg)'
- en: 'Figure 1.14: Setting a specific WebGL resolution'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.14：设置特定的 WebGL 分辨率
- en: In [*Chapter 2*](B18327_02.xhtml#_idTextAnchor024), we will discuss how to set
    the resolution properties for mobile games that have varying resolutions that
    you cannot pre-define.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第 2 章*](B18327_02.xhtml#_idTextAnchor024) 中，我们将讨论如何为具有可变分辨率且无法预先定义的移动游戏设置分辨率属性。
- en: Summary
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'This chapter discussed some basic design principles and terminology related
    to UI. You should now be able to distinguish between GUI and UI and define the
    four types of interfaces: diegetic, spatial, meta, and non-diegetic. Additionally,
    you should understand some basic rules of laying out UI and how to work in different
    resolutions and aspect ratios.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 本章讨论了一些与UI相关的基本设计原则和术语。你现在应该能够区分GUI和UI，并定义四种类型的界面：叙事性界面、空间界面、元界面和非叙事性界面。此外，你还应该了解一些布局UI的基本规则以及如何在不同的分辨率和宽高比下工作。
- en: The next chapter will expand upon these design principles and look at some important
    considerations for designing UI for mobile games.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将扩展这些设计原则，并探讨为移动游戏设计UI时的一些重要考虑因素。
