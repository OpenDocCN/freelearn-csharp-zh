- en: 'Chapter 6: Adding Code Snippets'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章：添加代码片段
- en: Coding is a lovely activity, but at times, we have some repeated statements
    to solve a few known situations, which makes coding more of a monotonous process.
    **Code snippets** are a good resource to reuse pieces of code where it's desirable.
    Visual Studio has some code snippets by default that we can use while we are coding,
    but we also have some tools to create our own code snippets.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 编码是一项美好的活动，但有时我们有一些重复的语句来解决一些已知的情况，这使得编码更像是一个单调的过程。“代码片段”是重用代码的好资源，在需要的地方可以重用代码片段。Visual
    Studio有一些默认的代码片段，我们可以在编码时使用，但我们也有一些工具来创建自己的代码片段。
- en: In this chapter, we will learn about how Visual Studio helps us to write code
    faster using code snippets and how to create our own.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习Visual Studio如何通过代码片段帮助我们更快地编写代码，以及如何创建自己的代码片段。
- en: 'We will review the following topics and functionalities for snippets:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将回顾以下关于代码片段的主题和功能：
- en: What are code snippets?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是代码片段？
- en: Creating code snippets
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建代码片段
- en: Deleting code snippets
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除代码片段
- en: Importing code snippets
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入代码片段
- en: Let's start recognizing the concept of code snippets and how they work in Visual
    Studio.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始了解代码片段的概念以及它们在Visual Studio中的工作方式。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To complete the demos of this book chapter, you must have previously installed
    Visual Studio 2022 with the web development workload, as shown in [*Chapter 1*](B17873_01_ePub.xhtml#_idTextAnchor013),
    *Getting Started with Visual Studio 2022*. It's important to have the SPA base
    project that we created in [*Chapter 4*](B17873_04_ePub.xhtml#_idTextAnchor052),
    *Creating Projects and Templates*.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成本书本章的演示，你必须已经安装了带有Web开发工作负载的Visual Studio 2022，如[*第1章*](B17873_01_ePub.xhtml#_idTextAnchor013)“Visual
    Studio 2022入门”中所示。拥有我们在[*第4章*](B17873_04_ePub.xhtml#_idTextAnchor052)“创建项目和模板”中创建的SPA基础项目非常重要。
- en: 'You can check the changes made in `WeatherForecastController.cs` at the following
    link: [https://github.com/PacktPublishing/Hands-On-Visual-Studio-2022/blob/main/Chapter06/WeatherForecast.cs](https://github.com/PacktPublishing/Hands-On-Visual-Studio-2022/blob/main/Chapter06/WeatherForecast.cs).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在以下链接中检查对`WeatherForecastController.cs`所做的更改：[https://github.com/PacktPublishing/Hands-On-Visual-Studio-2022/blob/main/Chapter06/WeatherForecast.cs](https://github.com/PacktPublishing/Hands-On-Visual-Studio-2022/blob/main/Chapter06/WeatherForecast.cs)。
- en: What are code snippets?
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是代码片段？
- en: Code snippets are a simple and easy way to reuse code by creating templates
    that generate common statements, such as conditionals, loops, or comment structures.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 通过创建生成常见语句的模板，代码片段是一种简单且易于重用代码的方式，例如条件语句、循环或注释结构。
- en: Visual Studio has many code snippets by default for almost all the supported
    technologies and programming languages. There are many ways to use code snippets
    in Visual Studio, so let's check them out.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio为几乎所有支持的技术和编程语言提供了许多默认的代码片段。在Visual Studio中有许多使用代码片段的方法，让我们来看看。
- en: Important Note
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Code snippets are a common concept in software development. Almost all IDEs
    and code editors provide code snippets or have extensions to include code snippets.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 代码片段是软件开发中的一个常见概念。几乎所有的IDE和代码编辑器都提供代码片段或具有包含代码片段的扩展。
- en: 'Using the SPA project created in [*Chapter 4*](B17873_04_ePub.xhtml#_idTextAnchor052),
    *Creating Projects and Templates*, you will create a new condition to return an
    empty collection in the `Get` method by navigating to the `WeatherForecastController.cs`
    file. Just write the word `if` to see the code snippet suggested by Visual Studio
    (see *Figure 6.1*):'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用在[*第4章*](B17873_04_ePub.xhtml#_idTextAnchor052)“创建项目和模板”中创建的SPA项目，你将在`WeatherForecastController.cs`文件中通过导航创建一个新的条件来在`Get`方法中返回一个空集合。只需写下单词`if`，就可以看到Visual
    Studio建议的代码片段（见*图6.1*）：
- en: '![Figure 6.1 – The code snippet for the if statement suggested by Visual Studio'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.1 – Visual Studio建议的if语句代码片段'
- en: '](img/Figure_6.01_B17873.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.01_B17873.jpg)'
- en: Figure 6.1 – The code snippet for the if statement suggested by Visual Studio
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1 – Visual Studio建议的if语句代码片段
- en: Since a conditional statement is a very common piece of code, Visual Studio
    gives you the option to create this code quickly. You can click on `if` or continue
    writing if you don't want to perform any action. You can also press *tab* twice
    to create the `if` statement automatically.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 由于条件语句是非常常见的代码片段，Visual Studio为你提供了快速创建此代码的选项。你可以点击`if`或继续编写，如果你不想执行任何操作。你也可以按*tab*键两次来自动创建`if`语句。
- en: 'There is an option in the intelligent code completion (also called **IntelliSense**,
    about which we will talk more in [*Chapter 7*](B17873_07_ePub.xhtml#_idTextAnchor088),
    *Coding Efficiently with AI and Code Views*) suggestions where you can see all
    the code snippets filtered by the characters that you wrote. See the code snippets
    filter marked in red in *Figure 6.2*:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在智能代码补全（也称为 **IntelliSense**，关于这一点我们将在 [*第 7 章*](B17873_07_ePub.xhtml#_idTextAnchor088)，*使用
    AI 和代码视图高效编码）建议中有一个选项，你可以看到所有按你输入的字符过滤的代码片段。参见 *图 6.2* 中标记为红色的代码片段过滤器：
- en: '![Figure 6.2 – The code snippets filter in Visual Studio'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 6.2 – Visual Studio 中的代码片段过滤器'
- en: '](img/Figure_6.02_B17873.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.02_B17873.jpg)'
- en: Figure 6.2 – The code snippets filter in Visual Studio
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.2 – Visual Studio 中的代码片段过滤器
- en: 'When the code snippet for the `if` condition is highlighted, you can press
    the *tab* key twice to generate the code of the `if` statement, including the
    brackets (*see Figure 6.3*):'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `if` 条件的代码片段被突出显示时，你可以按 *tab* 键两次来生成 `if` 语句的代码，包括括号（*见图 6.3*）：
- en: '![Figure 6.3 – The if statement created by Visual Studio'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 6.3 – Visual Studio 创建的 if 语句'
- en: '](img/Figure_6.03_B17873.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.03_B17873.jpg)'
- en: Figure 6.3 – The if statement created by Visual Studio
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3 – Visual Studio 创建的 if 语句
- en: 'You will get the `if` statement, including the braces and `true` as a default
    value. You need to replace `true` with your condition. In this case, you can add
    a condition to return an empty collection when the operating system is Linux:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你将得到一个 `if` 语句，包括花括号和默认值 `true`。你需要将 `true` 替换为你的条件。在这种情况下，你可以添加一个条件，当操作系统是
    Linux 时返回一个空集合：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In the previous code block, we added a condition in the `Get` method before
    the default logic to check whether the operating system where the app is running
    is Linux or not. Within the condition, we are returning an empty list.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码块中，我们在 `Get` 方法中的默认逻辑之前添加了一个条件，以检查应用程序运行的操作系统是否为 Linux。在条件内部，我们返回一个空列表。
- en: 'There are many useful code snippets included as default for C#, but the following
    are the most popular:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，C# 包含了许多有用的代码片段，但以下是最受欢迎的：
- en: '`try`: Creates a structure for a `try`/`catch` statement'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`try`: 为 `try`/`catch` 语句创建结构'
- en: '`for`: Generates a `for` statement using the local `i` variable'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`for`: 使用局部变量 `i` 生成 `for` 语句'
- en: '`ctor`: Creates the constructor of the class automatically'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ctor`: 自动创建类的构造函数'
- en: '`switch`: Generates a `switch` statement'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`switch`: 生成一个 `switch` 语句'
- en: '`prop`: Creates a new property in the current class'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prop`: 在当前类中创建一个新的属性'
- en: You can try some of these code snippets in C# code to see the code generated
    by Visual Studio and use them when the need arises.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 C# 代码中尝试一些这些代码片段，以查看 Visual Studio 生成的代码，并在需要时使用它们。
- en: 'Let''s see another example using a CSS file. Navigate to `custom.css` CSS file
    (*see Figure 6.4*):'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看使用 CSS 文件的一个例子。导航到 `custom.css` CSS 文件（*见图 6.4*）：
- en: '![Figure 6.4 – The custom.css file loaded in Visual Studio'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 6.4 – 在 Visual Studio 中加载的 custom.css 文件'
- en: '](img/Figure_6.04_B17873.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.04_B17873.jpg)'
- en: Figure 6.4 – The custom.css file loaded in Visual Studio
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.4 – 在 Visual Studio 中加载的 custom.css 文件
- en: 'In the `custom.css` file, you can write the `columns` property and see how
    Visual Studio suggests a code snippet for it. See the code snippets suggested
    for this demo in *Figure 6.5*:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `custom.css` 文件中，你可以编写 `columns` 属性，并查看 Visual Studio 如何建议一个代码片段。参见 *图 6.5*
    中为此演示提供的代码片段：
- en: '![Figure 6.5 – The code snippets suggested by Visual Studio when you type the
    word "columns"'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 6.5 – 当你输入单词 "columns" 时 Visual Studio 提供的代码片段'
- en: '](img/Figure_6.05_B17873.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.05_B17873.jpg)'
- en: Figure 6.5 – The code snippets suggested by Visual Studio when you type the
    word "columns"
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.5 – 当你输入单词 "columns" 时 Visual Studio 提供的代码片段
- en: 'Once again, using the key *tab* twice, you can generate the code for this property
    automatically. See the code generated in *Figure 6.6*:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 再次使用键 *tab* 两次，你可以自动生成这个属性的代码。参见 *图 6.6* 中生成的代码：
- en: '![Figure 6.6 – The code generated by the code snippet'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 6.6 – 代码片段生成的代码'
- en: '](img/Figure_6.06_B17873.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.06_B17873.jpg)'
- en: Figure 6.6 – The code generated by the code snippet
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.6 – 代码片段生成的代码
- en: In this case, Visual Studio is going to generate four properties, one per browser,
    to ensure the code is compatible with all of them (Chrome, Mozilla, and others).
    We can keep the default `inherit` value because the proposal of this action is
    just to see how Visual Studio makes the code.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，Visual Studio将为每个浏览器生成四个属性，以确保代码与所有浏览器兼容（Chrome、Mozilla和其他）。我们可以保留默认的`inherit`值，因为此操作的提议只是为了查看Visual
    Studio如何生成代码。
- en: You are now ready to use code snippets in Visual Studio. You can identify which
    suggestions by Visual Studio are code snippets and how to filter them. Now, it's
    time to learn how to create your own code snippets and use them in your code.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经准备好在Visual Studio中使用代码片段。您可以识别Visual Studio提供的哪些建议是代码片段，以及如何过滤它们。现在是时候学习如何创建自己的代码片段并在代码中使用它们了。
- en: Creating code snippets
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建代码片段
- en: 'To create a code snippet in Visual Studio, we need to create a file with the
    `snippet` extension. This file has an XML format, and there is a base template
    that we can update to include the information for our code snippet. The following
    code is a template example:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Visual Studio中创建代码片段，我们需要创建一个具有`snippet`扩展名的文件。此文件具有XML格式，并且有一个基本模板，我们可以更新它以包含代码片段的信息。以下代码是一个模板示例：
- en: '[PRE17]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Let's review all the properties in this XML and understand how to create our
    first code snippet.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下这个XML中的所有属性，并了解如何创建我们的第一个代码片段。
- en: 'In the `Header` section, we have the following:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在`标题`部分，我们有以下内容：
- en: '`Title`: Name or general information'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`标题`：名称或一般信息'
- en: '`Author`: Creator or author'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`作者`：创建者或作者'
- en: '`Description`: What your code snippets do'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`描述`：您的代码片段执行的操作'
- en: '`Shortcut`: The shortcut to call the code snippet when you are typing'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`快捷键`：在您输入时调用代码片段的快捷键'
- en: 'In `Snippet`, we have the following:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Snippet`中，我们有以下内容：
- en: '`Language`: The programming language for the code'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`语言`：代码的编程语言'
- en: '`[CDATA[]`: Contains the code'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[CDATA[]`：包含代码'
- en: 'Now, we can create a code snippet to detect whether the operating system where
    the code is running is Linux or not:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以创建一个代码片段来检测代码正在运行的操作系统是Linux还是不是：
- en: '[PRE34]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'You can create a new folder in documents or any new folder for this activity
    and save the file with the `snippet` extension (see *Figure 6.7*):'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在文档中创建一个新文件夹或为此次活动创建任何新文件夹，并将文件保存为`snippet`扩展名（见*图6.7*）：
- en: '![Figure 6.7 – The code snippet file in Windows explorer'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.7 – Windows资源管理器中的代码片段文件'
- en: '](img/Figure_6.07_B17873.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.07_B17873.jpg)'
- en: Figure 6.7 – The code snippet file in Windows explorer
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.7 – Windows资源管理器中的代码片段文件
- en: 'Now, the last step is to add this folder to the code snippet section in Visual
    Studio. Navigate to **Tools** | **Code Snippets Manager**, and in the **Language**
    dropdown, select **CSharp** (see *Figure 6.8*):'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，最后一步是将此文件夹添加到Visual Studio中的代码片段部分。导航到**工具** | **代码片段管理器**，在**语言**下拉菜单中，选择**CSharp**（见*图6.8*）：
- en: '![Figure 6.8 – Code Snippets Manager in Visual Studio'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.8 – Visual Studio中的代码片段管理器'
- en: '](img/Figure_6.08_B17873.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.08_B17873.jpg)'
- en: Figure 6.8 – Code Snippets Manager in Visual Studio
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.8 – Visual Studio中的代码片段管理器
- en: Important Note
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: You can use the *Ctrl* + *K* shortcuts followed by *Ctrl* + *B* to open the
    **Code Snippets Manager**.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用*Ctrl* + *K*快捷键，然后按*Ctrl* + *B*打开**代码片段管理器**。
- en: The **Language** option includes all the programming languages and technologies
    supported by Visual Studio, depending on the workload installed.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '**语言**选项包括Visual Studio支持的所有编程语言和技术，这取决于已安装的工作负载。'
- en: You can click on **Add...** and select the folder where your code snippet was
    created.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以点击**添加...**并选择您的代码片段创建的文件夹。
- en: 'After adding the folder, you will see a new folder in the list, including the
    new code snippet. If you select this code snippet, you will see the details on
    the right panel, as shown in *Figure 6.9*:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 添加文件夹后，您将在列表中看到一个新文件夹，包括新的代码片段。如果您选择此代码片段，您将在右侧面板上看到详细信息，如图*图6.9*所示：
- en: '![Figure 6.9 – The code snippet details for the if linux condition'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.9 – if linux条件代码片段的详细信息'
- en: '](img/Figure_6.09_B17873.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.09_B17873.jpg)'
- en: Figure 6.9 – The code snippet details for the if linux condition
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.9 – if linux条件代码片段的详细信息
- en: 'Now, you are ready to use your code snippet in any C# file. Open the `WeatherForecastController.cs`
    file and try your new code snippet in the `Get` method:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经准备好在任何C#文件中使用您的代码片段。打开`WeatherForecastController.cs`文件，并在`Get`方法中尝试您的新代码片段：
- en: '![Figure 6.10 – Using the if linux condition code snippet in Visual Studio'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.10 – 在Visual Studio中使用if linux条件代码片段'
- en: '](img/Figure_6.10_B17873.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.10_B17873.jpg)'
- en: Figure 6.10 – Using the if linux condition code snippet in Visual Studio
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 6.10 – 在Visual Studio中使用if linux条件代码片段
- en: You can see in *Figure 6.10* how Visual Studio suggests your new code snippet,
    and in the tooltip, there is the description that you provided. As usual, you
    can press *tab* twice to generate the code for the code snippet.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在*图6.10*中看到Visual Studio如何建议您的新代码片段，在工具提示中，有您提供的描述。通常，您可以按*tab*键两次来生成代码片段的代码。
- en: Important Note
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'For more information about how to create and design code snippets, look at
    the official documentation: [https://docs.microsoft.com/visualstudio/ide/code-snippets](https://docs.microsoft.com/visualstudio/ide/code-snippets).'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 想要了解更多关于如何创建和设计代码片段的信息，请查看官方文档：[https://docs.microsoft.com/visualstudio/ide/code-snippets](https://docs.microsoft.com/visualstudio/ide/code-snippets)。
- en: So far, you have created your first code snippet and know how to create others
    that meet your needs. But there are also other actions that you can perform with
    code snippets. So, let's see how to delete a code snippet in the next section.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经创建了您的第一个代码片段，并知道如何创建满足您需求的代码片段。但您还可以使用代码片段执行其他操作。所以，让我们看看如何在下一节中删除代码片段。
- en: Deleting code snippets
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除代码片段
- en: 'Due to human error, we can add code snippets that we don''t need, or maybe
    we selected the wrong code snippet. For these scenarios, Visual Studio has an
    option to delete code snippets. To see this option, navigate to `CodeSnippets`
    folder. This folder contains the code snippet that you included in the *Creating
    code snippets* section. If you used a different name, select the correct folder
    for you. You can see the **Remove** button location in *Figure 6.11*:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 由于人为错误，我们可能会添加不需要的代码片段，或者可能选择了错误的代码片段。在这些情况下，Visual Studio有一个选项可以删除代码片段。要查看此选项，导航到`CodeSnippets`文件夹。此文件夹包含您在*创建代码片段*部分中包含的代码片段。如果您使用了不同的名称，请选择正确的文件夹。您可以在*图6.11*中看到**删除**按钮的位置：
- en: '![Figure 6.11 – The Remove button in Code Snippets Manager'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 6.11 – 代码片段管理器中的删除按钮'
- en: '](img/Figure_6.11_B17873.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.11_B17873.jpg)'
- en: Figure 6.11 – The Remove button in Code Snippets Manager
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 6.11 – 代码片段管理器中的删除按钮
- en: The **Remove** button will delete the whole folder, including all the code snippets
    inside. In Visual Studio 2022, it's not possible to remove code snippets one by
    one, and therefore, we need to create a folder with a proper name for our code
    snippets. After removing the folder, Visual Studio is not going to suggest the
    code snippets anymore.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '**删除**按钮将删除整个文件夹，包括其中的所有代码片段。在Visual Studio 2022中，无法逐个删除代码片段，因此我们需要为我们的代码片段创建一个合适的文件夹名称。删除文件夹后，Visual
    Studio将不再建议代码片段。'
- en: Important Note
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: When you remove code snippets in Visual Studio, the original files and folder
    are not removed from your local system. Only the reference to the file in Visual
    Studio will be removed.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在Visual Studio中删除代码片段时，原始文件和文件夹不会从您的本地系统中删除。只有Visual Studio中对文件的引用将被删除。
- en: At this point, you know how to create and delete code snippets. We can also
    import code snippets in Visual Studio, so let's see how to do it.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经学会了如何创建和删除代码片段。我们还可以在Visual Studio中导入代码片段，所以让我们看看如何操作。
- en: Importing code snippets
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入代码片段
- en: 'If we want to include code snippets in a folder already created in **Code Snippets
    Manager**, we can use the **Import…** option:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想在**代码片段管理器**中已创建的文件夹中包含代码片段，我们可以使用**导入…**选项：
- en: '![Figure 6.12 – The Import… button in Code Snippets Manager'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 6.12 – 代码片段管理器中的导入…按钮'
- en: '](img/Figure_6.12_B17873.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.12_B17873.jpg)'
- en: Figure 6.12 – The Import… button in Code Snippets Manager
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 6.12 – 代码片段管理器中的导入…按钮
- en: 'After clicking on `.snippet` extension in the modal (see *Figure 6.13*):'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在模态窗口中单击`.snippet`扩展名（见*图6.13*）：
- en: '![Figure 6.13 – Selecting a code snippet file (.snippet) in the filesystem'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 6.13 – 在文件系统中选择代码片段文件 (.snippet)'
- en: '](img/Figure_6.13_B17873.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.13_B17873.jpg)'
- en: Figure 6.13 – Selecting a code snippet file (.snippet) in the filesystem
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 6.13 – 在文件系统中选择代码片段文件 (.snippet)
- en: 'Select the code snippet created in the *Creating code snippets* section, and
    then click on **Open**. Finally, you must complete the import process by selecting
    the location folder for your code snippet and clicking on **Finish**:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 选择在*创建代码片段*部分中创建的代码片段，然后单击**打开**。最后，您必须通过选择代码片段的位置文件夹并单击**完成**来完成导入过程：
- en: '![Figure 6.14 – The selection location for the imported code snippet'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 6.14 – 导入代码片段的选择位置'
- en: '](img/Figure_6.14_B17873.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.14_B17873.jpg)'
- en: Figure 6.14 – The selection location for the imported code snippet
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.14 – 导入代码片段的选择位置
- en: 'After completing the importation, you will see that the code snippet is added
    to the selected folder. See the imported code snippet in *Figure 6.15*:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 完成导入后，你会看到代码片段被添加到所选文件夹中。请参阅 *图 6.15* 中的导入代码片段：
- en: '![Figure 6.15 – The code snippet imported into the My Code Snippets folder'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 6.15 – 导入到“我的代码片段”文件夹中的代码片段'
- en: '](img/Figure_6.15_B17873.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 6.15 – 导入到“我的代码片段”文件夹中的代码片段'
- en: Figure 6.15 – The code snippet imported into the My Code Snippets folder
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.15 – 导入到“我的代码片段”文件夹中的代码片段
- en: Importing code snippets is a great way to share our custom snippets with friends,
    colleagues, and coworkers. We can create amazing pieces of code for common scenarios
    and some special code closely related to our architecture or guidelines.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 导入代码片段是分享我们自定义代码片段给朋友、同事和同事的一种好方法。我们可以为常见场景创建一些惊人的代码片段，以及一些与我们架构或指南紧密相关的特殊代码。
- en: Summary
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Now, you can use code snippets in Visual Studio and increase your productivity.
    You can identify which pieces of code are common in your architecture and use
    patterns to create your own code snippets to meet your requirements. Also, you
    know how to manage code snippets using the functionalities to delete and import.
    After completing the demos in this chapter, you will recognize the importance
    of code snippets and why Visual Studio is a powerful IDE that helps developers
    to write code faster.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以在 Visual Studio 中使用代码片段，并提高你的生产力。你可以识别出在你的架构中哪些代码片段是常见的，并使用模式创建你自己的代码片段以满足你的需求。此外，你知道如何使用删除和导入的功能来管理代码片段。完成本章的演示后，你将认识到代码片段的重要性以及为什么
    Visual Studio 是一个强大的 IDE，它可以帮助开发者更快地编写代码。
- en: In [*Chapter 7*](B17873_07_ePub.xhtml#_idTextAnchor088), *Coding Efficiently
    with AI and Code Views*, we will review the **artificial intelligence** (**AI**)
    included in Visual Studio and how this tool can help us to write code faster and
    improve the syntax in some scenarios. You will also do some demos where the AI
    will help you, allowing you to predict what action or statement you want to perform.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第 7 章*](B17873_07_ePub.xhtml#_idTextAnchor088)“使用 AI 和代码视图高效编码”，我们将回顾 Visual
    Studio 中包含的**人工智能**（**AI**），以及这个工具如何帮助我们更快地编写代码并在某些场景中改进语法。你还将进行一些演示，其中 AI 将帮助你，让你能够预测你想要执行的操作或语句。
